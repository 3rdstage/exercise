<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mysql://127.0.0.1:3306/test2</property>
		<property name="hibernate.connection.password">tester</property>
		<property name="hibernate.connection.username">tester</property>
		<property name="hibernate.c3p0.min_size">3</property>
		<property name="hibernate.c3p0.max_size">5</property>
		<property name="hibernate.c3p0.timeout">1800</property>
		<property name="hibernate.c3p0.max_statements">20</property>
		<property name="hibernate.default_catalog">test2</property>

		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>
		<property name="hibernate.show_sql">true</property>
		<property name="hibernate.format_sql">true</property>
		<property name="hibernate.use_outer_join">true</property>
		<property name="hibernate.max_fetch_depth">2</property>
		<property name="hibernate.default_batch_fetch_size">4</property>
		<property name="hibernate.default_entity_mode">pojo</property>
		<property name="hibernate.generate_statistics">false</property>
		<property name="hibernate.use_identifier_rollback">false</property>
		<property name="hibernate.use_sql_comments">false</property>
		<property name="hibernate.validator.apply_to_ddl">true</property>

		<!-- Hibernate's configuration with spring framework 
		
		To use spring framework's declarative and programmatic transaction demarcation,
		current session context and transaction factory should be specified by spring framwork
		like followings in case of spring framwork 2.5
		
		   - current_session_context_class 
		      : org.springframework.orm.hibernate3.SpringSessionContext
		   - transaction.factory_class 
		      : org.springframework.orm.hibernate3.SpringTransactionFactory
		   - connection.release_mode
		      : on_close
		      
		LocalSessionFactoryBean and AnnotationSessionFactoryBean implicitly use
		SpringSessionContext and SpringTransactionFactory. SpringTransactionFactory would
		set connection.release_mode to on_close.
		
		So, when using with spring framework, current_session_context_class, 
		transaction.factory_class, transaction.manager_lookup_class and connection.releas_mode
		should not be specified explicitly in hibernate's configuration. 
		-->
<!--		<property name="hibernate.current_session_context_class">thread</property>-->
<!--		<property name="hibernate.connection.release_mode">auto</property>-->
<!--		<property name="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</property>-->
<!--		<property name="hibernate.transaction.manager_lookup_class"></property>-->


		<mapping class="thirdstage.exercise.spring.transaction.case2.entities.Company" />
		<mapping class="thirdstage.exercise.spring.transaction.case2.entities.Building" />
		<mapping class="thirdstage.exercise.spring.transaction.case2.entities.Factory" />
		<mapping class="thirdstage.exercise.spring.transaction.case2.entities.Industry" />
	</session-factory>
</hibernate-configuration>
