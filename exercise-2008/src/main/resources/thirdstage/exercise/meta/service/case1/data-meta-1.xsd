<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	version='1.0' elementFormDefault="qualified">

	<xs:element name="data-meta">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="elements" type="elementsType" />
			</xs:sequence>
			<xs:attribute name="id" type="dataMetaIdType" use="optional" />
		</xs:complexType>
	</xs:element>

	<xs:complexType name="elementsType">
		<!-- Needs more thought on the minOccurs : 0 or 1 -->
		<xs:choice minOccurs="1" maxOccurs="unbounded">
			<xs:element name="field" type="fieldType"/>
			<!-- 
			<xs:element name="composite" type="compositeType"/>
			<xs:element name="array" type="arrayType"/>
			-->
		</xs:choice>
	</xs:complexType>

	<xs:simpleType name="dataMetaIdType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z]*"></xs:pattern> <!-- @TODO refine later -->
		</xs:restriction>
	</xs:simpleType>

	<!-- How to define the mapping between type and facets.
	The possible facets are dependent on type.
	
	The expected ways in first thought are
	
	- using app-info and non XML Schema element
	- using complexType including type and facet
	- using substition group
	 
	
	 -->

	<xs:complexType name="fieldType">
		<xs:sequence>
			<xs:element name="required" type="xs:boolean" default="false"
				minOccurs="0" />
			<xs:element name="type" type="fieldTypeType" />
			<xs:element name="facets" type="facetsType" />
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="fieldTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="string"></xs:enumeration>
			<xs:enumeration value="int8"></xs:enumeration>
			<xs:enumeration value="int16">
				<xs:annotation>
					<xs:documentation xml:lang="en">2-byte sized integer type, corresponding to short for Java and int for C</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="int32"></xs:enumeration>
			<xs:enumeration value="int64"></xs:enumeration>
			<xs:enumeration value="float32"></xs:enumeration>
			<xs:enumeration value="float64"></xs:enumeration>
			<xs:enumeration value="boolean"></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="facetsType">
		<xs:all>
			<xs:element name="min" type="minFacetType"/>
			<xs:element name="min-includes" type="minIncludesFacetType" default="true"/>
			<!-- 
			<xs:element name="max" type="maxFacetType"/>		
			<xs:element name="max-includes" type="maxIncludesFacetType"/>
			<xs:element name="length" type="lengthFacetType"/>
			<xs:element name="min-length" type="minLengthFacetType"/>
			<xs:element name="max-length" type="maxLengthFacetType"/>
			<xs:element name="pattern" type="patternFacetType"/>
			<xs:element name="format" type="formatFacetType"/>
			-->
		</xs:all>
	</xs:complexType>

	<xs:simpleType name="minFacetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
			minimum values	for numeric data
			</xs:documentation>
			<xs:documentation xml:lang="ko">
			숫자형 데이터의 최소값
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal"></xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="minIncludesFacetType">
		<xs:annotation>
			<xs:documentation xml:lang="en">
			whether the min value is inclusive or not
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
	
</xs:schema>