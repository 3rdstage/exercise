format 66
"zip" // src::java::util::zip
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/util/zip"
  java_package "java.util.zip"
  classview 150555 "zip"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 356635 "Deflater"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides support for general purpose compression using the
popular ZLIB compression library. The ZLIB compression library was
initially developed as part of the PNG graphics standard and is not
protected by patents. It is fully described in the specifications at 
the <a href=\"package-summary.html#package_description\">java.util.zip
package description</a>.

<p>The following code fragment demonstrates a trivial compression
and decompression of a string using <tt>Deflater</tt> and
<tt>Inflater</tt>.

<blockquote><pre>
// Encode a String into bytes
String inputString = \"blahblahblah\\u20AC\\u20AC\";
byte[] input = inputString.getBytes(\"UTF-8\");

// Compress the bytes
byte[] output = new byte[100];
Deflater compresser = new Deflater();
compresser.setInput(input);
compresser.finish();
int compressedDataLength = compresser.deflate(output);

// Decompress the bytes
Inflater decompresser = new Inflater();
decompresser.setInput(output, 0, compressedDataLength);
byte[] result = new byte[100];
int resultLength = decompresser.inflate(result);
decompresser.end();

// Decode the bytes into a String
String outputString = new String(result, 0, resultLength, \"UTF-8\");
</pre></blockquote>

@see		Inflater
@version 	1.43, 11/11/05
@author 	David Connelly"
      attribute 2992667 "strm"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2992795 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2992923 "off"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993051 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993179 "level"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993307 "strategy"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993435 "setParams"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993563 "finish"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993691 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2993819 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression method for the deflate algorithm (the only one currently
supported).
"
      end

      attribute 2993947 "NO_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression level for no compression.
"
      end

      attribute 2994075 "BEST_SPEED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression level for fastest compression.
"
      end

      attribute 2994203 "BEST_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression level for best compression.
"
      end

      attribute 2994331 "DEFAULT_COMPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Default compression level.
"
      end

      attribute 2994459 "FILTERED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression strategy best used for data consisting mostly of small
values with a somewhat random distribution. Forces more Huffman coding
and less string matching.
"
      end

      attribute 2994587 "HUFFMAN_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression strategy for Huffman coding only.
"
      end

      attribute 2994715 "DEFAULT_STRATEGY"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Default compression strategy.
"
      end

      extra_member 167323 "initialization"
	
	cpp "" ""
	java "  static {
	/* Zip library is loaded from System.initializeSystemClass */
	initIDs();
    }"
	php ""
	python ""
	idl ""
      end

      operation 8143515 "Deflater"
	public explicit_return_type ""
	nparams 2
	  param in name "level" explicit_type "int"
	  param inout name "nowrap" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor using the specified compression level.
If 'nowrap' is true then the ZLIB header and checksum fields will
not be used in order to support the compression format used in
both GZIP and PKZIP.
@param level the compression level (0-9)
@param nowrap if true then use GZIP compatible compression"
      end

      operation 8143643 "Deflater"
	public explicit_return_type ""
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor using the specified compression level.
Compressed data will be generated in ZLIB format.
@param level the compression level (0-9)"
      end

      operation 8143771 "Deflater"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new compressor with the default compression level.
Compressed data will be generated in ZLIB format."
      end

      operation 8143899 "setInput"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for compression. This should be called whenever
needsInput() returns true indicating that more input data is required.
@param b the input data bytes
@param off the start offset of the data
@param len the length of the data
@see Deflater#needsInput"
      end

      operation 8144027 "setInput"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for compression. This should be called whenever
needsInput() returns true indicating that more input data is required.
@param b the input data bytes
@see Deflater#needsInput"
      end

      operation 8144155 "setDictionary"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets preset dictionary for compression. A preset dictionary is used
when the history buffer can be predetermined. When the data is later
uncompressed with Inflater.inflate(), Inflater.getAdler() can be called
in order to get the Adler-32 value of the dictionary required for
decompression.
@param b the dictionary data bytes
@param off the start offset of the data
@param len the length of the data
@see Inflater#inflate
@see Inflater#getAdler"
      end

      operation 8144283 "setDictionary"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets preset dictionary for compression. A preset dictionary is used
when the history buffer can be predetermined. When the data is later
uncompressed with Inflater.inflate(), Inflater.getAdler() can be called
in order to get the Adler-32 value of the dictionary required for
decompression.
@param b the dictionary data bytes
@see Inflater#inflate
@see Inflater#getAdler"
      end

      operation 8144411 "setStrategy"
	public explicit_return_type "void"
	nparams 1
	  param in name "strategy" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression strategy to the specified value.
@param strategy the new compression strategy
@exception IllegalArgumentException if the compression strategy is
				           invalid"
      end

      operation 8144539 "setLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current compression level to the specified value.
@param level the new compression level (0-9)
@exception IllegalArgumentException if the compression level is invalid"
      end

      operation 8144667 "needsInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the input data buffer is empty and setInput()
should be called in order to provide more input.
@return true if the input data buffer is empty and setInput()
should be called in order to provide more input"
      end

      operation 8144795 "finish"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When called, indicates that compression should end with the current
contents of the input buffer."
      end

      operation 8144923 "finished"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the end of the compressed data output stream has
been reached.
@return true if the end of the compressed data output stream has
been reached"
      end

      operation 8145051 "deflate"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills specified buffer with compressed data. Returns actual number
of bytes of compressed data. A return value of 0 indicates that
needsInput() should be called in order to determine if more input
data is required.
@param b the buffer for the compressed data
@param off the start offset of the data
@param len the maximum number of bytes of compressed data
@return the actual number of bytes of compressed data"
      end

      operation 8145179 "deflate"
	public explicit_return_type "int"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills specified buffer with compressed data. Returns actual number
of bytes of compressed data. A return value of 0 indicates that
needsInput() should be called in order to determine if more input
data is required.
@param b the buffer for the compressed data
@return the actual number of bytes of compressed data"
      end

      operation 8145307 "getAdler"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ADLER-32 value of the uncompressed data.
@return the ADLER-32 value of the uncompressed data"
      end

      operation 8145435 "getTotalIn"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes input so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesRead()} method is now
the preferred means of obtaining this information.</p>

@return the total number of uncompressed bytes input so far"
      end

      operation 8145563 "getBytesRead"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes input so far.</p>

@return the total (non-negative) number of uncompressed bytes input so far"
      end

      operation 8145691 "getTotalOut"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes output so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesWritten()} method is now
the preferred means of obtaining this information.</p>

@return the total number of compressed bytes output so far"
      end

      operation 8145819 "getBytesWritten"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes output so far.</p>

@return the total (non-negative) number of compressed bytes output so far"
      end

      operation 8145947 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets deflater so that a new set of input data can be processed.
Keeps current compression level and strategy settings."
      end

      operation 8146075 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the compressor and discards any unprocessed input.
This method should be called when the compressor is no longer
being used, but will also be called automatically by the
finalize() method. Once this method is called, the behavior
of the Deflater object is undefined."
      end

      operation 8146203 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the compressor when garbage is collected."
      end

      operation 8146331 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8146459 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8146587 "init"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "level" explicit_type "int"
	  param in name "strategy" explicit_type "int"
	  param inout name "nowrap" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8146715 "setDictionary"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "strm" explicit_type "long"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8146843 "deflateBytes"
	private explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8146971 "getAdler"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8147099 "getBytesRead"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8147227 "getBytesWritten"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8147355 "reset"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8147483 "end"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 567707 "ZipFile"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to read entries from a zip file.

<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@version   1.71, 11/21/05 
@author	David Connelly"
      classrelation 1957403 // <realization>
	relation 1957403 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1957403 // <realization>
	  b parent class_ref 1003291 // ZipConstants
      end

      attribute 2950811 "jzfile"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " address of jzfile data"
      end

      attribute 2950939 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " zip file name"
      end

      attribute 2951067 "total"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " total number of entries"
      end

      classrelation 1957531 // mappedBuffer (<unidirectional association>)
	relation 1957531 --->
	  a role_name "mappedBuffer" private
	    comment " if ZipFile.c uses file mapping."
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1957531 // mappedBuffer (<unidirectional association>)
	  b parent class_ref 938651 // MappedByteBuffer
      end

      class 1003675 "ZipCloser"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1957787 // <realization>
	  relation 1957787 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1957787 // <realization>
	    b parent class_ref 163355 // Runnable
	end

	attribute 2951963 "mappedFileID"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8013723 "ZipCloser"
	  private explicit_return_type ""
	  nparams 1
	    param in name "jzFile" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8013851 "setClosed"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8013979 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1957659 // closer (<unidirectional association>)
	relation 1957659 --->
	  a role_name "closer" private
	    comment " cleans up after mappedBuffer."
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1957659 // closer (<unidirectional association>)
	  b parent class_ref 1003675 // ZipCloser
      end

      attribute 2951195 "mbUsed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " if caller used mappedBuffer"
      end

      attribute 2951323 "closeRequested"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2951451 "STORED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2951579 "DEFLATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2951707 "OPEN_READ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mode flag to open a zip file for reading.
"
      end

      attribute 2951835 "OPEN_DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mode flag to open a zip file and mark it for deletion.  The file will be
deleted some time between the moment that it is opened and the moment
that it is closed, but its contents will remain accessible via the
<tt>ZipFile</tt> object until either the close method is invoked or the 
virtual machine exits.
"
      end

      extra_member 166555 "initialization"
	
	cpp "" ""
	java "  static {
	/* Zip library is loaded from System.initializeSystemClass */
	initIDs();
    }"
	php ""
	python ""
	idl ""
      end

      operation 8013467 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8013595 "ZipFile"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a zip file for reading.

<p>First, if there is a security
manager, its <code>checkRead</code> method
is called with the <code>name</code> argument
as its argument to ensure the read is allowed.

@param name the name of the zip file
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException if a security manager exists and its
        <code>checkRead</code> method doesn't allow read access to the file.
@see SecurityManager#checkRead(java.lang.String)"
      end

      classrelation 1957915 // directByteBufferConstructor (<unidirectional association>)
	relation 1957915 --->
	  a role_name "directByteBufferConstructor" init_value "=  null" class_relation private
	    comment " ZipCloser 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1957915 // directByteBufferConstructor (<unidirectional association>)
	  b parent class_ref 218395 // Constructor
      end

      operation 8014107 "initDBBConstructor"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8014235 "newMappedByteBuffer"
	class_operation private return_type class_ref 938651 // MappedByteBuffer
	nparams 3
	  param in name "size" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param inout name "unmapper" type class_ref 163355 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8014363 "ZipFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 165147 // File
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a new <code>ZipFile</code> to read from the specified
<code>File</code> object in the specified mode.  The mode argument
must be either <tt>OPEN_READ</tt> or <tt>OPEN_READ | OPEN_DELETE</tt>.

<p>First, if there is a security manager, its <code>checkRead</code>
method is called with the <code>name</code> argument as its argument to
ensure the read is allowed.

@param file the ZIP file to be opened for reading
@param mode the mode in which the file is to be opened
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException if a security manager exists and
        its <code>checkRead</code> method
        doesn't allow read access to the file,
        or its <code>checkDelete</code> method doesn't allow deleting
        the file when the <tt>OPEN_DELETE</tt> flag is set.
@throws IllegalArgumentException if the <tt>mode</tt> argument is invalid
@see SecurityManager#checkRead(java.lang.String)"
      end

      operation 8014491 "open"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param in name "lastModified" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8014619 "getTotal"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8014747 "getMappedAddr"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8014875 "getMappedLen"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8015003 "ZipFile"
	public explicit_return_type ""
	nparams 1
	  param inout name "file" type class_ref 165147 // File
	nexceptions 2
	  exception class_ref 1003547 // ZipException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a ZIP file for reading given the specified File object.
@param file the ZIP file to be opened for reading
@throws ZipException if a ZIP error has occurred
@throws IOException if an I/O error has occurred"
      end

      operation 8015131 "getEntry"
	public return_type class_ref 1003163 // ZipEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the zip file entry for the specified name, or null
if not found.

@param name the name of the entry
@return the zip file entry, or null if not found
@throws IllegalStateException if the zip file has been closed"
      end

      operation 8015259 "getEntry"
	class_operation private explicit_return_type "long"
	nparams 3
	  param in name "jzfile" explicit_type "long"
	  param in name "name" explicit_type "String"
	  param inout name "addSlash" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8015387 "freeEntry"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "jzfile" explicit_type "long"
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " freeEntry releases the C jzentry struct.  "
      end

      operation 8015515 "getInputStream"
	public return_type class_ref 179099 // InputStream
	nparams 1
	  param inout name "entry" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for reading the contents of the specified
zip file entry.

Returns an input stream for reading the contents of the specified
zip file entry.

<p> Closing this ZIP file will, in turn, close all input 
streams that have been returned by invocations of this method.

@param entry the zip file entry
@return the input stream for reading the contents of the specified
zip file entry.
@throws ZipException if a ZIP format error has occurred
@throws IOException if an I/O error has occurred
@throws IllegalStateException if the zip file has been closed"
      end

      operation 8015643 "getInputStream"
	private return_type class_ref 179099 // InputStream
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for reading the contents of the specified
entry, or null if the entry was not found."
      end

      operation 8015771 "getMethod"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8015899 "getInflater"
	private return_type class_ref 1003803 // Inflater
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an inflater from the list of available inflaters or allocates
a new one."
      end

      operation 8016027 "releaseInflater"
	private explicit_return_type "void"
	nparams 1
	  param inout name "inf" type class_ref 1003803 // Inflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the specified inflater to the list of available inflaters."
      end

      classrelation 1958043 // inflaters (<unidirectional association>)
	relation 1958043 --->
	  a role_name "inflaters" init_value "=  new Vector()" private
	    comment " List of available Inflater objects for decompression
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1958043 // inflaters (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 8016155 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path name of the ZIP file.
@return the path name of the ZIP file"
      end

      operation 8016283 "entries"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends ZipEntry> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the ZIP file entries.
@return an enumeration of the ZIP file entries
@throws IllegalStateException if the zip file has been closed"
      end

      operation 8016411 "getNextEntry"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "jzfile" explicit_type "long"
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8016539 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of entries in the ZIP file.
@return the number of entries in the ZIP file
@throws IllegalStateException if the zip file has been closed"
      end

      operation 8016667 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the ZIP file.
<p> Closing this ZIP file will close all of the input streams
previously returned by invocations of the {@link #getInputStream
getInputStream} method.

@throws IOException if an I/O error has occurred"
      end

      operation 8016795 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the <code>close</code> method of this ZIP file is
called when there are no more references to it.

<p>
Since the time when GC would invoke this method is undetermined, 
it is strongly recommended that applications invoke the <code>close</code> 
method as soon they have finished accessing this <code>ZipFile</code>.
This will prevent holding up system resources for an undetermined 
length of time.

@throws IOException if an I/O error has occurred
@see    java.util.zip.ZipFile#close()"
      end

      operation 8016923 "close"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8017051 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8017179 "ensureOpenOrZipException"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1003931 "ZipFileInputStream"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1958171 // <generalisation>
	  relation 1958171 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1958171 // <generalisation>
	    b parent class_ref 179099 // InputStream
	end

	attribute 2952091 "jzentry"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " address of jzentry data"
	end

	attribute 2952219 "pos"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " current position within entry data"
	end

	attribute 2952347 "rem"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " number of remaining bytes within entry"
	end

	attribute 2952475 "size"
	  protected explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " uncompressed size of this entry"
	end

	operation 8017307 "ZipFileInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param in name "jzentry" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8017435 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8017563 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8017691 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8017819 "available"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8017947 "size"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018075 "close"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1004059 "MappedZipFileInputStream"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1958299 // <generalisation>
	  relation 1958299 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1958299 // <generalisation>
	    b parent class_ref 1003931 // ZipFileInputStream
	end

	classrelation 1958555 // directBuffer (<unidirectional association>)
	  relation 1958555 --->
	    a role_name "directBuffer" init_value "=  null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1958555 // directBuffer (<unidirectional association>)
	    b parent class_ref 182427 // ByteBuffer
	end

	attribute 2952603 "name"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8018203 "MappedZipFileInputStream"
	  package explicit_return_type ""
	  nparams 2
	    param in name "jzentry" explicit_type "long"
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018331 "getByteBuffer"
	  public return_type class_ref 182427 // ByteBuffer
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " getByteBuffer returns a ByteBuffer if the jar file has been mapped in.
If this method is called, the zip code won't close the ZipFile until 
the last reference to file's mapped buffer is collected. "
	end

	operation 8018459 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018587 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018715 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018843 "available"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8018971 "size"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8019099 "close"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8019227 "read"
	class_operation private explicit_return_type "int"
	nparams 6
	  param in name "jzfile" explicit_type "long"
	  param in name "jzentry" explicit_type "long"
	  param in name "pos" explicit_type "long"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " MappedZipFileInputStream "
      end

      operation 8019355 "getCSize"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8019483 "getSize"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8019611 "getEntryOffset"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If the zip file is mapped, return the offset from the beginning of the zip 
file to this entry. Return 0 otherwise. "
      end

      operation 8019739 "getZipMessage"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "jzfile" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Temporary add on for bug troubleshooting"
      end
    end

    class 1003163 "ZipEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to represent a ZIP file entry.

@version	1.38, 08/09/05
@author	David Connelly"
      classrelation 1956379 // <realization>
	relation 1956379 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1956379 // <realization>
	  b parent class_ref 1003291 // ZipConstants
      end

      classrelation 1956507 // <realization>
	relation 1956507 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1956507 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 2949147 "name"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " entry name"
      end

      attribute 2949275 "time"
	package explicit_type "long"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " modification time (in DOS time)"
      end

      attribute 2949403 "crc"
	package explicit_type "long"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " crc-32 of entry data"
      end

      attribute 2949531 "size"
	package explicit_type "long"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed size of entry data"
      end

      attribute 2949659 "csize"
	package explicit_type "long"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compressed size of entry data"
      end

      attribute 2949787 "method"
	package explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compression method"
      end

      attribute 2949915 "extra"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " optional extra field data for entry"
      end

      attribute 2950043 "comment"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " optional comment string for entry"
      end

      attribute 2950171 "flag"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The following flags are used only by Zip{Input,Output}Stream
 bit flags"
      end

      attribute 2950299 "version"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " version needed to extract"
      end

      attribute 2950427 "offset"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset of loc header"
      end

      attribute 2950555 "STORED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression method for uncompressed entries.
"
      end

      attribute 2950683 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression method for compressed (deflated) entries.
"
      end

      extra_member 166427 "initialization"
	
	cpp "" ""
	java "  static {
	/* Zip library is loaded from System.initializeSystemClass */
	initIDs();
    }"
	php ""
	python ""
	idl ""
      end

      operation 8008731 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8008859 "ZipEntry"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry with the specified name.

@param name the entry name
@exception NullPointerException if the entry name is null
@exception IllegalArgumentException if the entry name is longer than
		  0xFFFF bytes"
      end

      operation 8008987 "ZipEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry with fields taken from the specified
zip entry.
@param e a zip Entry object"
      end

      operation 8009115 "ZipEntry"
	package explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "jzentry" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry for the given name with fields initialized
from the specified jzentry data."
      end

      operation 8009243 "initFields"
	private explicit_return_type "void"
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8009371 "ZipEntry"
	package explicit_return_type ""
	nparams 1
	  param in name "jzentry" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new zip entry with fields initialized from the specified
jzentry data."
      end

      operation 8009499 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the entry.
@return the name of the entry"
      end

      operation 8009627 "setTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the modification time of the entry.
@param time the entry modification time in number of milliseconds
		   since the epoch
@see #getTime()"
      end

      operation 8009755 "getTime"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modification time of the entry, or -1 if not specified.
@return the modification time of the entry, or -1 if not specified
@see #setTime(long)"
      end

      operation 8009883 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the uncompressed size of the entry data.
@param size the uncompressed size in bytes
@exception IllegalArgumentException if the specified size is less
		  than 0 or greater than 0xFFFFFFFF bytes
@see #getSize()"
      end

      operation 8010011 "getSize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the uncompressed size of the entry data, or -1 if not known.
@return the uncompressed size of the entry data, or -1 if not known
@see #setSize(long)"
      end

      operation 8010139 "getCompressedSize"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the compressed entry data, or -1 if not known.
In the case of a stored entry, the compressed size will be the same
as the uncompressed size of the entry.
@return the size of the compressed entry data, or -1 if not known
@see #setCompressedSize(long)"
      end

      operation 8010267 "setCompressedSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "csize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the compressed entry data.
@param csize the compressed size to set to
@see #getCompressedSize()"
      end

      operation 8010395 "setCrc"
	public explicit_return_type "void"
	nparams 1
	  param in name "crc" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the CRC-32 checksum of the uncompressed entry data.
@param crc the CRC-32 value
@exception IllegalArgumentException if the specified CRC-32 value is
		  less than 0 or greater than 0xFFFFFFFF
@see #setCrc(long)"
      end

      operation 8010523 "getCrc"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRC-32 checksum of the uncompressed entry data, or -1 if
not known.
@return the CRC-32 checksum of the uncompressed entry data, or -1 if
not known
@see #getCrc()"
      end

      operation 8010651 "setMethod"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression method for the entry.
@param method the compression method, either STORED or DEFLATED
@exception IllegalArgumentException if the specified compression
		  method is invalid
@see #getMethod()"
      end

      operation 8010779 "getMethod"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the compression method of the entry, or -1 if not specified.
@return the compression method of the entry, or -1 if not specified
@see #setMethod(int)"
      end

      operation 8010907 "setExtra"
	public explicit_return_type "void"
	nparams 1
	  param in name "extra" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the optional extra field data for the entry.
@param extra the extra field data bytes
@exception IllegalArgumentException if the length of the specified
		  extra field data is greater than 0xFFFF bytes
@see #getExtra()"
      end

      operation 8011035 "getExtra"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extra field data for the entry, or null if none.
@return the extra field data for the entry, or null if none
@see #setExtra(byte[])"
      end

      operation 8011163 "setComment"
	public explicit_return_type "void"
	nparams 1
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the optional comment string for the entry.
@param comment the comment string
@exception IllegalArgumentException if the length of the specified
		  comment string is greater than 0xFFFF bytes
@see #getComment()"
      end

      operation 8011291 "getComment"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the comment string for the entry, or null if none.
@return the comment string for the entry, or null if none
@see #setComment(String)"
      end

      operation 8011419 "isDirectory"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this is a directory entry. A directory entry is
defined to be one whose name ends with a '/'.
@return true if this is a directory entry"
      end

      operation 8011547 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the ZIP entry."
      end

      operation 8011675 "dosToJavaTime"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "dtime" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts DOS time to Java time (number of milliseconds since epoch)."
      end

      operation 8011803 "javaToDosTime"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts Java time to DOS time."
      end

      operation 8011931 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this entry."
      end

      operation 8012059 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of this entry."
      end
    end

    class 1003291 "ZipConstants"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines the constants that are used by the classes
which manipulate ZIP files.

@version	1.18, 12/19/03
@author	David Connelly"
      attribute 2944027 "LOCSIG"
	class_attribute public explicit_type "long"
	init_value "=  0x04034b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Header signatures

 \"PK\\003\\004\""
      end

      attribute 2944155 "EXTSIG"
	class_attribute public explicit_type "long"
	init_value "=  0x08074b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"PK\\007\\008\""
      end

      attribute 2944283 "CENSIG"
	class_attribute public explicit_type "long"
	init_value "=  0x02014b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"PK\\001\\002\""
      end

      attribute 2944411 "ENDSIG"
	class_attribute public explicit_type "long"
	init_value "=  0x06054b50L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"PK\\005\\006\""
      end

      attribute 2944539 "LOCHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Header sizes in bytes (including signatures)

 LOC header size"
      end

      attribute 2944667 "EXTHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " EXT header size"
      end

      attribute 2944795 "CENHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  46"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " CEN header size"
      end

      attribute 2944923 "ENDHDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " END header size"
      end

      attribute 2945051 "LOCVER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Local file (LOC) header field offsets

 version needed to extract"
      end

      attribute 2945179 "LOCFLG"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " general purpose bit flag"
      end

      attribute 2945307 "LOCHOW"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compression method"
      end

      attribute 2945435 "LOCTIM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " modification time"
      end

      attribute 2945563 "LOCCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed file crc-32 value"
      end

      attribute 2945691 "LOCSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compressed size"
      end

      attribute 2945819 "LOCLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed size"
      end

      attribute 2945947 "LOCNAM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " filename length"
      end

      attribute 2946075 "LOCEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " extra field length"
      end

      attribute 2946203 "EXTCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra local (EXT) header field offsets

 uncompressed file crc-32 value"
      end

      attribute 2946331 "EXTSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compressed size"
      end

      attribute 2946459 "EXTLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed size"
      end

      attribute 2946587 "CENVEM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Central directory (CEN) header field offsets

 version made by"
      end

      attribute 2946715 "CENVER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " version needed to extract"
      end

      attribute 2946843 "CENFLG"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " encrypt, decrypt flags"
      end

      attribute 2946971 "CENHOW"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compression method"
      end

      attribute 2947099 "CENTIM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " modification time"
      end

      attribute 2947227 "CENCRC"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed file crc-32 value"
      end

      attribute 2947355 "CENSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " compressed size"
      end

      attribute 2947483 "CENLEN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uncompressed size"
      end

      attribute 2947611 "CENNAM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " filename length"
      end

      attribute 2947739 "CENEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " extra field length"
      end

      attribute 2947867 "CENCOM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " comment length"
      end

      attribute 2947995 "CENDSK"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  34"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " disk number start"
      end

      attribute 2948123 "CENATT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " internal file attributes"
      end

      attribute 2948251 "CENATX"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " external file attributes"
      end

      attribute 2948379 "CENOFF"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  42"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " LOC header offset"
      end

      attribute 2948507 "ENDSUB"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "End of central directory (END) header field offsets

 number of entries on this disk"
      end

      attribute 2948635 "ENDTOT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " total number of entries"
      end

      attribute 2948763 "ENDSIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " central directory size in bytes"
      end

      attribute 2948891 "ENDOFF"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset of first CEN header"
      end

      attribute 2949019 "ENDCOM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " zip file comment length"
      end
    end

    class 1003547 "ZipException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a Zip exception of some sort has occurred.

@author  unascribed
@version 1.16 12/19/03
@see     java.io.IOException
@since   JDK1.0"
      classrelation 1957147 // <generalisation>
	relation 1957147 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1957147 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 8012955 "ZipException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ZipException</code> with <code>null</code> 
as its error detail message. "
      end

      operation 8013083 "ZipException"
	public explicit_return_type ""
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ZipException</code> with the specified detail 
message.

@param   s   the detail message."
      end
    end

    class 1003803 "Inflater"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides support for general purpose decompression using the
popular ZLIB compression library. The ZLIB compression library was
initially developed as part of the PNG graphics standard and is not
protected by patents. It is fully described in the specifications at 
the <a href=\"package-summary.html#package_description\">java.util.zip
package description</a>.

<p>The following code fragment demonstrates a trivial compression
and decompression of a string using <tt>Deflater</tt> and
<tt>Inflater</tt>.

<blockquote><pre>
// Encode a String into bytes
String inputString = \"blahblahblah\\u20AC\\u20AC\";
byte[] input = inputString.getBytes(\"UTF-8\");

// Compress the bytes
byte[] output = new byte[100];
Deflater compresser = new Deflater();
compresser.setInput(input);
compresser.finish();
int compressedDataLength = compresser.deflate(output);

// Decompress the bytes
Inflater decompresser = new Inflater();
decompresser.setInput(output, 0, compressedDataLength);
byte[] result = new byte[100];
int resultLength = decompresser.inflate(result);
decompresser.end();

// Decode the bytes into a String
String outputString = new String(result, 0, resultLength, \"UTF-8\");
</pre></blockquote>

@see		Deflater
@version 	1.44, 11/11/05
@author 	David Connelly
"
      attribute 2996379 "strm"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2996507 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2996635 "off"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2996763 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2996891 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2997019 "needDict"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 167451 "initialization"
	
	cpp "" ""
	java "  static {
	/* Zip library is loaded from System.initializeSystemClass */
	initIDs();
    }"
	php ""
	python ""
	idl ""
      end

      operation 8150043 "Inflater"
	public explicit_return_type ""
	nparams 1
	  param inout name "nowrap" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decompressor. If the parameter 'nowrap' is true then
the ZLIB header and checksum fields will not be used. This provides
compatibility with the compression format used by both GZIP and PKZIP.
<p>
Note: When using the 'nowrap' option it is also necessary to provide
an extra \"dummy\" byte as input. This is required by the ZLIB native
library in order to support certain optimizations.

@param nowrap if true then support GZIP compatible compression"
      end

      operation 8150171 "Inflater"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new decompressor."
      end

      operation 8150299 "setInput"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for decompression. Should be called whenever
needsInput() returns true indicating that more input data is
required.
@param b the input data bytes
@param off the start offset of the input data
@param len the length of the input data
@see Inflater#needsInput"
      end

      operation 8150427 "setInput"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets input data for decompression. Should be called whenever
needsInput() returns true indicating that more input data is
required.
@param b the input data bytes
@see Inflater#needsInput"
      end

      operation 8150555 "setDictionary"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preset dictionary to the given array of bytes. Should be
called when inflate() returns 0 and needsDictionary() returns true
indicating that a preset dictionary is required. The method getAdler()
can be used to get the Adler-32 value of the dictionary needed.
@param b the dictionary data bytes
@param off the start offset of the data
@param len the length of the data
@see Inflater#needsDictionary
@see Inflater#getAdler"
      end

      operation 8150683 "setDictionary"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preset dictionary to the given array of bytes. Should be
called when inflate() returns 0 and needsDictionary() returns true
indicating that a preset dictionary is required. The method getAdler()
can be used to get the Adler-32 value of the dictionary needed.
@param b the dictionary data bytes
@see Inflater#needsDictionary
@see Inflater#getAdler"
      end

      operation 8150811 "getRemaining"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of bytes remaining in the input buffer.
This can be used to find out what bytes still remain in the input
buffer after decompression has finished.
@return the total number of bytes remaining in the input buffer"
      end

      operation 8150939 "needsInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if no data remains in the input buffer. This can
be used to determine if #setInput should be called in order
to provide more input.
@return true if no data remains in the input buffer"
      end

      operation 8151067 "needsDictionary"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a preset dictionary is needed for decompression.
@return true if a preset dictionary is needed for decompression
@see Inflater#setDictionary"
      end

      operation 8151195 "finished"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the end of the compressed data stream has been
reached.
@return true if the end of the compressed data stream has been
reached"
      end

      operation 8151323 "inflate"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1022235 // DataFormatException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uncompresses bytes into specified buffer. Returns actual number
of bytes uncompressed. A return value of 0 indicates that
needsInput() or needsDictionary() should be called in order to
determine if more input data or a preset dictionary is required.
In the later case, getAdler() can be used to get the Adler-32
value of the dictionary required.
@param b the buffer for the uncompressed data
@param off the start offset of the data
@param len the maximum number of uncompressed bytes
@return the actual number of uncompressed bytes
@exception DataFormatException if the compressed data format is invalid
@see Inflater#needsInput
@see Inflater#needsDictionary"
      end

      operation 8151451 "inflate"
	public explicit_return_type "int"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1022235 // DataFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Uncompresses bytes into specified buffer. Returns actual number
of bytes uncompressed. A return value of 0 indicates that
needsInput() or needsDictionary() should be called in order to
determine if more input data or a preset dictionary is required.
In the later case, getAdler() can be used to get the Adler-32
value of the dictionary required.
@param b the buffer for the uncompressed data
@return the actual number of uncompressed bytes
@exception DataFormatException if the compressed data format is invalid
@see Inflater#needsInput
@see Inflater#needsDictionary"
      end

      operation 8151579 "getAdler"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ADLER-32 value of the uncompressed data.
@return the ADLER-32 value of the uncompressed data"
      end

      operation 8151707 "getTotalIn"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes input so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesRead()} method is now
the preferred means of obtaining this information.</p>

@return the total number of compressed bytes input so far"
      end

      operation 8151835 "getBytesRead"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of compressed bytes input so far.</p>

@return the total (non-negative) number of compressed bytes input so far"
      end

      operation 8151963 "getTotalOut"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes output so far.

<p>Since the number of bytes may be greater than
Integer.MAX_VALUE, the {@link #getBytesWritten()} method is now
the preferred means of obtaining this information.</p>

@return the total number of uncompressed bytes output so far"
      end

      operation 8152091 "getBytesWritten"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total number of uncompressed bytes output so far.</p>

@return the total (non-negative) number of uncompressed bytes output so far"
      end

      operation 8152219 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets inflater so that a new set of input data can be processed."
      end

      operation 8152347 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the decompressor and discards any unprocessed input.
This method should be called when the decompressor is no longer
being used, but will also be called automatically by the finalize()
method. Once this method is called, the behavior of the Inflater
object is undefined."
      end

      operation 8152475 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the decompressor when garbage is collected."
      end

      operation 8152603 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8152731 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8152859 "init"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "nowrap" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8152987 "setDictionary"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "strm" explicit_type "long"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153115 "inflateBytes"
	private explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1022235 // DataFormatException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153243 "getAdler"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153371 "getBytesRead"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153499 "getBytesWritten"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153627 "reset"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8153755 "end"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "strm" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1004699 "ZipInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements an input stream filter for reading files in the
ZIP file format. Includes support for both compressed and uncompressed
entries.

@author	David Connelly
@version	1.38, 11/30/06"
      classrelation 1959579 // <generalisation>
	relation 1959579 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1959579 // <generalisation>
	  b parent class_ref 1004827 // InflaterInputStream
      end

      classrelation 1959707 // <realization>
	relation 1959707 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1959707 // <realization>
	  b parent class_ref 1003291 // ZipConstants
      end

      classrelation 1959835 // entry (<unidirectional association>)
	relation 1959835 --->
	  a role_name "entry" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1959835 // entry (<unidirectional association>)
	  b parent class_ref 1003163 // ZipEntry
      end

      classrelation 1959963 // crc (<unidirectional association>)
	relation 1959963 --->
	  a role_name "crc" init_value "=  new CRC32()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1959963 // crc (<unidirectional association>)
	  b parent class_ref 1004955 // CRC32
      end

      attribute 2954779 "remaining"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2954907 "tmpbuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[512]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2955035 "STORED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2955163 "DEFLATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2955291 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2955419 "entryEOF"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " this flag is set to true after EOF has reached for
 one entry"
      end

      operation 8024347 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed"
      end

      operation 8024475 "ZipInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP input stream.
@param in the actual input stream"
      end

      operation 8024603 "getNextEntry"
	public return_type class_ref 1003163 // ZipEntry
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next ZIP file entry and positions the stream at the
beginning of the entry data.
@return the next ZIP file entry, or null if there are no more entries
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8024731 "closeEntry"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the current ZIP entry and positions the stream for reading the
next entry.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8024859 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 after EOF has reached for the current entry data,
otherwise always return 1.
<p>
Programs should not count on this method to return the actual number
of bytes that could be read without blocking.

@return     1 before EOF and 0 after EOF has reached for current entry.
@exception  IOException  if an I/O error occurs.
"
      end

      operation 8024987 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads from the current ZIP entry into an array of bytes. Blocks until
some input is available.
@param b the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@return the actual number of bytes read, or -1 if the end of the
        entry is reached
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8025115 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes in the current ZIP entry.
@param n the number of bytes to skip
@return the actual number of bytes skipped
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if n < 0"
      end

      operation 8025243 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred"
      end

      attribute 2955547 "b"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[256]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8025371 "readLOC"
	private return_type class_ref 1003163 // ZipEntry
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads local file (LOC) header for next entry."
      end

      operation 8025499 "getUTF8String"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches a UTF8-encoded String from the specified byte array."
      end

      operation 8025627 "createZipEntry"
	protected return_type class_ref 1003163 // ZipEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>ZipEntry</code> object for the specified
entry name.

@param name the ZIP file entry name
@return the ZipEntry just created"
      end

      operation 8025755 "readEnd"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads end of deflated entry as well as EXT descriptor if present."
      end

      operation 8025883 "readFully"
	private explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads bytes, blocking until all bytes are read."
      end

      operation 8026011 "get16"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches unsigned 16-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order."
      end

      operation 8026139 "get32"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches unsigned 32-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order."
      end
    end

    class 1004827 "InflaterInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a stream filter for uncompressing data in the
\"deflate\" compression format. It is also used as the basis for other
decompression filters, such as GZIPInputStream.

@see		Inflater
@version 	1.37, 06/11/04
@author 	David Connelly"
      classrelation 1959323 // <generalisation>
	relation 1959323 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1959323 // <generalisation>
	  b parent class_ref 602651 // FilterInputStream
      end

      classrelation 1959451 // inf (<unidirectional association>)
	relation 1959451 --->
	  a role_name "inf" protected
	    comment "
Decompressor for this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1959451 // inf (<unidirectional association>)
	  b parent class_ref 1003803 // Inflater
      end

      attribute 2953883 "buf"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Input buffer for decompression.
"
      end

      attribute 2954011 "len"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Length of input buffer.
"
      end

      attribute 2954139 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2954267 "reachEOF"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " this flag is set to true after EOF has reached"
      end

      operation 8022683 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed"
      end

      operation 8022811 "InflaterInputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "inf" type class_ref 1003803 // Inflater
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified decompressor and
buffer size.
@param in the input stream
@param inf the decompressor (\"inflater\")
@param size the input buffer size
@exception IllegalArgumentException if size is <= 0"
      end

      operation 8022939 "InflaterInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "inf" type class_ref 1003803 // Inflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified decompressor and a
default buffer size.
@param in the input stream
@param inf the decompressor (\"inflater\")"
      end

      attribute 2954395 "usesDefaultInflater"
	package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8023067 "InflaterInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with a default decompressor and buffer size.
@param in the input stream"
      end

      attribute 2954523 "singleByteBuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8023195 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a byte of uncompressed data. This method will block until
enough input is available for decompression.
@return the byte read, or -1 if end of compressed input is reached
@exception IOException if an I/O error has occurred"
      end

      operation 8023323 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads uncompressed data into an array of bytes. This method will
block until some input can be decompressed.
@param b the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@return the actual number of bytes read, or -1 if the end of the
        compressed input is reached or a preset dictionary is needed
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8023451 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 after EOF has been reached, otherwise always return 1.
<p>
Programs should not count on this method to return the actual number
of bytes that could be read without blocking.

@return     1 before EOF and 0 after EOF.
@exception  IOException  if an I/O error occurs.
"
      end

      attribute 2954651 "b"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[512]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8023579 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes of uncompressed data.
@param n the number of bytes to skip
@return the actual number of bytes skipped.
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if n < 0"
      end

      operation 8023707 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred"
      end

      operation 8023835 "fill"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills input buffer with more data to decompress.
@exception IOException if an I/O error has occurred"
      end

      operation 8023963 "markSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this input stream supports the <code>mark</code> and
<code>reset</code> methods. The <code>markSupported</code>
method of <code>InflaterInputStream</code> returns
<code>false</code>.

@return  a <code>boolean</code> indicating if this stream type supports
         the <code>mark</code> and <code>reset</code> methods.
@see     java.io.InputStream#mark(int)
@see     java.io.InputStream#reset()"
      end

      operation 8024091 "mark"
	public explicit_return_type "void"
	nparams 1
	  param in name "readlimit" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks the current position in this input stream.

<p> The <code>mark</code> method of <code>InflaterInputStream</code>
does nothing.

@param   readlimit   the maximum limit of bytes that can be read before
                     the mark position becomes invalid.
@see     java.io.InputStream#reset()"
      end

      operation 8024219 "reset"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repositions this stream to the position at the time the
<code>mark</code> method was last called on this input stream.

<p> The method <code>reset</code> for class
<code>InflaterInputStream</code> does nothing except throw an
<code>IOException</code>.

@exception  IOException  if this method is invoked.
@see     java.io.InputStream#mark(int)
@see     java.io.IOException"
      end
    end

    class 1004955 "CRC32"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class that can be used to compute the CRC-32 of a data stream.

@see		Checksum
@version 	1.32, 08/09/05
@author 	David Connelly"
      classrelation 1991963 // <realization>
	relation 1991963 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1991963 // <realization>
	  b parent class_ref 1021851 // Checksum
      end

      attribute 2992539 "crc"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8142235 "CRC32"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new CRC32 object."
      end

      operation 8142363 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates CRC-32 with specified byte."
      end

      operation 8142491 "update"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates CRC-32 with specified array of bytes."
      end

      operation 8142619 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates checksum with specified array of bytes.

@param b the array of bytes to update the checksum with"
      end

      operation 8142747 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets CRC-32 to initial value."
      end

      operation 8142875 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns CRC-32 value."
      end

      operation 8143003 "update"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "crc" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8143131 "updateBytes"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "crc" explicit_type "int"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1005211 "ZipOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements an output stream filter for writing files in the
ZIP file format. Includes support for both compressed and uncompressed
entries.

@author	David Connelly
@version	1.31, 12/19/03"
      classrelation 1960859 // <generalisation>
	relation 1960859 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1960859 // <generalisation>
	  b parent class_ref 1005339 // DeflaterOutputStream
      end

      classrelation 1960987 // <realization>
	relation 1960987 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1960987 // <realization>
	  b parent class_ref 1003291 // ZipConstants
      end

      classrelation 1961115 // entry (<unidirectional association>)
	relation 1961115 --->
	  a role_name "entry" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961115 // entry (<unidirectional association>)
	  b parent class_ref 1003163 // ZipEntry
      end

      classrelation 1961243 // entries (<unidirectional association>)
	relation 1961243 --->
	  a role_name "entries" init_value "=  new Vector()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961243 // entries (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      classrelation 1961371 // names (<unidirectional association>)
	relation 1961371 --->
	  a role_name "names" init_value "=  new Hashtable()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961371 // names (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1961499 // crc (<unidirectional association>)
	relation 1961499 --->
	  a role_name "crc" init_value "=  new CRC32()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961499 // crc (<unidirectional association>)
	  b parent class_ref 1004955 // CRC32
      end

      attribute 2956187 "written"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2956315 "locoff"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2956443 "comment"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2956571 "method"
	private explicit_type "int"
	init_value "=  DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2956699 "finished"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2956827 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8028315 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed"
      end

      attribute 2956955 "STORED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  ZipEntry.STORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression method for uncompressed (STORED) entries.
"
      end

      attribute 2957083 "DEFLATED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  ZipEntry.DEFLATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compression method for compressed (DEFLATED) entries.
"
      end

      operation 8028443 "ZipOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ZIP output stream.
@param out the actual output stream"
      end

      operation 8028571 "setComment"
	public explicit_return_type "void"
	nparams 1
	  param in name "comment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ZIP file comment.
@param comment the comment string
@exception IllegalArgumentException if the length of the specified
		  ZIP file comment is greater than 0xFFFF bytes"
      end

      operation 8028699 "setMethod"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default compression method for subsequent entries. This
default will be used whenever the compression method is not specified
for an individual ZIP file entry, and is initially set to DEFLATED.
@param method the default compression method
@exception IllegalArgumentException if the specified compression method
		  is invalid"
      end

      operation 8028827 "setLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the compression level for subsequent entries which are DEFLATED.
The default setting is DEFAULT_COMPRESSION.
@param level the compression level (0-9)
@exception IllegalArgumentException if the compression level is invalid"
      end

      operation 8028955 "putNextEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begins writing a new ZIP file entry and positions the stream to the
start of the entry data. Closes the current entry if still active.
The default compression method will be used if no compression method
was specified for the entry, and the current time will be used if
the entry has no set modification time.
@param e the ZIP entry to be written
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8029083 "closeEntry"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the current ZIP entry and positions the stream for writing
the next entry.
@exception ZipException if a ZIP format error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8029211 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the current ZIP entry data. This method
will block until all the bytes are written.
@param b the data to be written
@param off the start offset in the data
@param len the number of bytes that are written
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8029339 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing the contents of the ZIP output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O exception has occurred"
      end

      operation 8029467 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the ZIP output stream as well as the stream being filtered.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred"
      end

      operation 8029595 "writeLOC"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes local file (LOC) header for specified entry."
      end

      operation 8029723 "writeEXT"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes extra data descriptor (EXT) for specified entry."
      end

      operation 8029851 "writeCEN"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write central directory (CEN) header for specified entry.
REMIND: add support for file attributes"
      end

      operation 8029979 "writeEND"
	private explicit_return_type "void"
	nparams 2
	  param in name "off" explicit_type "long"
	  param in name "len" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes end of central directory (END) header."
      end

      operation 8030107 "writeShort"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 16-bit short to the output stream in little-endian byte order."
      end

      operation 8030235 "writeInt"
	private explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a 32-bit int to the output stream in little-endian byte order."
      end

      operation 8030363 "writeBytes"
	private explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the output stream."
      end

      operation 8030491 "getUTF8Length"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of String's UTF8 encoding."
      end

      operation 8030619 "getUTF8Bytes"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of bytes representing the UTF8 encoding
of the specified String."
      end
    end

    class 1005339 "DeflaterOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements an output stream filter for compressing data in
the \"deflate\" compression format. It is also used as the basis for other
types of compression filters, such as GZIPOutputStream.

@see		Deflater
@version 	1.35, 04/03/06
@author 	David Connelly"
      classrelation 1960603 // <generalisation>
	relation 1960603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1960603 // <generalisation>
	  b parent class_ref 903195 // FilterOutputStream
      end

      classrelation 1960731 // def (<unidirectional association>)
	relation 1960731 --->
	  a role_name "def" protected
	    comment "
Compressor for this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1960731 // def (<unidirectional association>)
	  b parent class_ref 356635 // Deflater
      end

      attribute 2955803 "buf"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Output buffer for writing compressed data.
"
      end

      attribute 2955931 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the stream has been closed.
"
      end

      operation 8027291 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "def" type class_ref 356635 // Deflater
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor and
buffer size.
@param out the output stream
@param def the compressor (\"deflater\")
@param size the output buffer size
@exception IllegalArgumentException if size is <= 0"
      end

      operation 8027419 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "def" type class_ref 356635 // Deflater
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified compressor and
a default buffer size.
@param out the output stream
@param def the compressor (\"deflater\")"
      end

      attribute 2956059 "usesDefaultDeflater"
	package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8027547 "DeflaterOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default compressor and buffer size.
@param out the output stream"
      end

      operation 8027675 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte to the compressed output stream. This method will
block until the byte can be written.
@param b the byte to be written
@exception IOException if an I/O error has occurred"
      end

      operation 8027803 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes to the compressed output stream. This
method will block until all the bytes are written.
@param b the data to be written
@param off the start offset of the data
@param len the length of the data
@exception IOException if an I/O error has occurred"
      end

      operation 8027931 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing compressed data to the output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception IOException if an I/O error has occurred"
      end

      operation 8028059 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes remaining compressed data to the output stream and closes the
underlying stream.
@exception IOException if an I/O error has occurred"
      end

      operation 8028187 "deflate"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes next block of compressed data to the output stream.
@throws IOException if an I/O error has occurred"
      end
    end

    class 1021723 "Adler32"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class that can be used to compute the Adler-32 checksum of a data
stream. An Adler-32 checksum is almost as reliable as a CRC-32 but
can be computed much faster.

@see		Checksum
@version 	1.29, 08/09/05
@author 	David Connelly"
      classrelation 1991323 // <realization>
	relation 1991323 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1991323 // <realization>
	  b parent class_ref 1021851 // Checksum
      end

      attribute 2992411 "adler"
	private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8140059 "Adler32"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Adler32 object."
      end

      operation 8140187 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates checksum with specified byte.

@param b an array of bytes"
      end

      operation 8140315 "update"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates checksum with specified array of bytes."
      end

      operation 8140443 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates checksum with specified array of bytes."
      end

      operation 8140571 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets checksum to initial value."
      end

      operation 8140699 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns checksum value."
      end

      operation 8140827 "update"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "adler" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8140955 "updateBytes"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "adler" explicit_type "int"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1021851 "Checksum"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface representing a data checksum.

@version 	1.16, 12/19/03
@author 	David Connelly"
      operation 8139547 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the current checksum with the specified byte.

@param b the byte to update the checksum with"
      end

      operation 8139675 "update"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the current checksum with the specified array of bytes.
@param b the byte array to update the checksum with
@param off the start offset of the data
@param len the number of bytes to use for the update"
      end

      operation 8139803 "getValue"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current checksum value.
@return the current checksum value"
      end

      operation 8139931 "reset"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the checksum to its initial value."
      end
    end

    class 1021979 "CheckedInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An input stream that also maintains a checksum of the data being read.
The checksum can then be used to verify the integrity of the input data.

@see		Checksum
@version 	1.19, 12/19/03
@author 	David Connelly"
      classrelation 1991451 // <generalisation>
	relation 1991451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1991451 // <generalisation>
	  b parent class_ref 602651 // FilterInputStream
      end

      classrelation 1991579 // cksum (<unidirectional association>)
	relation 1991579 --->
	  a role_name "cksum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1991579 // cksum (<unidirectional association>)
	  b parent class_ref 1021851 // Checksum
      end

      operation 8141083 "CheckedInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "cksum" type class_ref 1021851 // Checksum
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an input stream using the specified Checksum.
@param in the input stream
@param cksum the Checksum"
      end

      operation 8141211 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a byte. Will block if no input is available.
@return the byte read, or -1 if the end of the stream is reached.
@exception IOException if an I/O error has occurred"
      end

      operation 8141339 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into an array of bytes. Will block until some input
is available.
@param buf the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@return    the actual number of bytes read, or -1 if the end
		  of the stream is reached.
@exception IOException if an I/O error has occurred"
      end

      operation 8141467 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "n" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips specified number of bytes of input.
@param n the number of bytes to skip
@return the actual number of bytes skipped
@exception IOException if an I/O error has occurred"
      end

      operation 8141595 "getChecksum"
	public return_type class_ref 1021851 // Checksum
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Checksum for this input stream.
@return the Checksum value"
      end
    end

    class 1022107 "CheckedOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An output stream that also maintains a checksum of the data being
written. The checksum can then be used to verify the integrity of
the output data.

@see		Checksum
@version 	1.18, 12/19/03
@author 	David Connelly"
      classrelation 1991707 // <generalisation>
	relation 1991707 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1991707 // <generalisation>
	  b parent class_ref 903195 // FilterOutputStream
      end

      classrelation 1991835 // cksum (<unidirectional association>)
	relation 1991835 --->
	  a role_name "cksum" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1991835 // cksum (<unidirectional association>)
	  b parent class_ref 1021851 // Checksum
      end

      operation 8141723 "CheckedOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "cksum" type class_ref 1021851 // Checksum
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an output stream with the specified Checksum.
@param out the output stream
@param cksum the checksum"
      end

      operation 8141851 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte. Will block until the byte is actually written.
@param b the byte to be written
@exception IOException if an I/O error has occurred"
      end

      operation 8141979 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of bytes. Will block until the bytes are
actually written.
@param b the data to be written
@param off the start offset of the data
@param len the number of bytes to be written
@exception IOException if an I/O error has occurred"
      end

      operation 8142107 "getChecksum"
	public return_type class_ref 1021851 // Checksum
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Checksum for this output stream.
@return the Checksum"
      end
    end

    class 1022235 "DataFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a data format error has occurred.

@version 	1.13, 12/19/03
@author 	David Connelly"
      classrelation 1992091 // <generalisation>
	relation 1992091 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1992091 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      operation 8143259 "DataFormatException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DataFormatException with no detail message."
      end

      operation 8143387 "DataFormatException"
	public explicit_return_type ""
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DataFormatException with the specified detail message.
A detail message is a String that describes this particular exception.
@param s the String containing a detail message"
      end
    end

    class 1022363 "GZIPInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a stream filter for reading compressed data in
the GZIP file format.

@see		InflaterInputStream
@version 	1.29, 03/03/06
@author 	David Connelly
"
      classrelation 1992219 // <generalisation>
	relation 1992219 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1992219 // <generalisation>
	  b parent class_ref 1004827 // InflaterInputStream
      end

      classrelation 1992347 // crc (<unidirectional association>)
	relation 1992347 --->
	  a role_name "crc" init_value "=  new CRC32()" protected
	    comment "
CRC-32 for uncompressed data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1992347 // crc (<unidirectional association>)
	  b parent class_ref 1004955 // CRC32
      end

      attribute 2994843 "eos"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates end of input stream.
"
      end

      attribute 2994971 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8147611 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure that this stream has not been closed"
      end

      operation 8147739 "GZIPInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with the specified buffer size.
@param in the input stream
@param size the input buffer size
@exception IOException if an I/O error has occurred
@exception IllegalArgumentException if size is <= 0"
      end

      operation 8147867 "GZIPInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream with a default buffer size.
@param in the input stream
@exception IOException if an I/O error has occurred"
      end

      operation 8147995 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads uncompressed data into an array of bytes. Blocks until enough
input is available for decompression.
@param buf the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@return	the actual number of bytes read, or -1 if the end of the
		compressed input stream is reached
@exception IOException if an I/O error has occurred or the compressed
			      input data is corrupt"
      end

      operation 8148123 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this input stream and releases any system resources associated
with the stream.
@exception IOException if an I/O error has occurred"
      end

      attribute 2995099 "GZIP_MAGIC"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x8b1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "GZIP header magic number.
"
      end

      attribute 2995227 "FTEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "File header flags.

 Extra text"
      end

      attribute 2995355 "FHCRC"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Header CRC"
      end

      attribute 2995483 "FEXTRA"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extra field"
      end

      attribute 2995611 "FNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File name"
      end

      attribute 2995739 "FCOMMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " File comment"
      end

      operation 8148251 "readHeader"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads GZIP member header."
      end

      operation 8148379 "readTrailer"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads GZIP member trailer."
      end

      operation 8148507 "readUInt"
	private explicit_return_type "long"
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned integer in Intel byte order."
      end

      operation 8148635 "readUShort"
	private explicit_return_type "int"
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned short in Intel byte order."
      end

      operation 8148763 "readUByte"
	private explicit_return_type "int"
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads unsigned byte."
      end

      attribute 2995867 "tmpbuf"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[128]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8148891 "skipBytes"
	private explicit_return_type "void"
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param in name "n" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips bytes of input data blocking until all bytes are skipped.
Does not assume that the input stream is capable of seeking."
      end
    end

    class 1022491 "GZIPOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a stream filter for writing compressed data in
the GZIP file format.
@version 	1.22, 12/19/03
@author 	David Connelly
"
      classrelation 1992475 // <generalisation>
	relation 1992475 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1992475 // <generalisation>
	  b parent class_ref 1005339 // DeflaterOutputStream
      end

      classrelation 1992603 // crc (<unidirectional association>)
	relation 1992603 --->
	  a role_name "crc" init_value "=  new CRC32()" protected
	    comment "
CRC-32 of uncompressed data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1992603 // crc (<unidirectional association>)
	  b parent class_ref 1004955 // CRC32
      end

      attribute 2995995 "GZIP_MAGIC"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x8b1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "GZIP header magic number.
"
      end

      attribute 2996123 "TRAILER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Trailer size in bytes.

"
      end

      operation 8149019 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 183835 // OutputStream
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with the specified buffer size.
@param out the output stream
@param size the output buffer size
@exception IOException If an I/O error has occurred.
@exception IllegalArgumentException if size is <= 0"
      end

      operation 8149147 "GZIPOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream with a default buffer size.
@param out the output stream
@exception IOException If an I/O error has occurred."
      end

      operation 8149275 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes array of bytes to the compressed output stream. This method
will block until all the bytes are written.
@param buf the data to be written
@param off the start offset of the data
@param len the length of the data
@exception IOException If an I/O error has occurred."
      end

      operation 8149403 "finish"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes writing compressed data to the output stream without closing
the underlying stream. Use this method when applying multiple filters
in succession to the same output stream.
@exception IOException if an I/O error has occurred"
      end

      attribute 2996251 "header"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value "=  {
        (byte) GZIP_MAGIC,                // Magic number (short)
        (byte)(GZIP_MAGIC >> 8),          // Magic number (short)
        Deflater.DEFLATED,                // Compression method (CM)
        0,                                // Flags (FLG)
        0,                                // Modification time MTIME (int)
        0,                                // Modification time MTIME (int)
        0,                                // Modification time MTIME (int)
        0,                                // Modification time MTIME (int)
        0,                                // Extra flags (XFLG)
        0                                 // Operating system (OS)
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Writes GZIP member header.
"
      end

      operation 8149531 "writeHeader"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8149659 "writeTrailer"
	private explicit_return_type "void"
	nparams 2
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes GZIP member trailer to a byte array, starting at a given
offset."
      end

      operation 8149787 "writeInt"
	private explicit_return_type "void"
	nparams 3
	  param in name "i" explicit_type "int"
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes integer in Intel byte order to a byte array, starting at a
given offset."
      end

      operation 8149915 "writeShort"
	private explicit_return_type "void"
	nparams 3
	  param in name "s" explicit_type "int"
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes short integer in Intel byte order to a byte array, starting
at a given offset"
      end
    end
  end

  deploymentview 169243 "zip"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 763931 "ZipConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1003291 // ZipConstants
      end
      comment "@(#)ZipConstants.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764059 "ZipEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
${definition}"
      associated_classes
	class_ref 1003163 // ZipEntry
      end
      comment "@(#)ZipEntry.java	1.38 05/08/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764315 "ZipException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1003547 // ZipException
      end
      comment "@(#)ZipException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764571 "ZipFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
import java.io.File;
import java.util.Vector;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.nio.ByteBuffer;
import java.nio.MappedByteBuffer;
import sun.nio.ByteBuffered;
import java.lang.reflect.*;
${definition}"
      associated_classes
	class_ref 567707 // ZipFile
      end
      comment "@(#)ZipFile.java	1.71 05/11/21

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764827 "InflaterInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
${definition}"
      associated_classes
	class_ref 1004827 // InflaterInputStream
      end
      comment "@(#)InflaterInputStream.java	1.37 04/06/11

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764955 "ZipInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
import java.io.PushbackInputStream;
${definition}"
      associated_classes
	class_ref 1004699 // ZipInputStream
      end
      comment "@(#)ZipInputStream.java	1.38 06/11/30

Copyright 2006 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765211 "DeflaterOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1005339 // DeflaterOutputStream
      end
      comment "@(#)DeflaterOutputStream.java	1.35 06/04/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765339 "ZipOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.IOException;
import java.util.Vector;
import java.util.Hashtable;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 1005211 // ZipOutputStream
      end
      comment "@(#)ZipOutputStream.java	1.31 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770715 "Checksum"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1021851 // Checksum
      end
      comment "@(#)Checksum.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770843 "Adler32"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1021723 // Adler32
      end
      comment "@(#)Adler32.java	1.29 05/08/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770971 "CheckedInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1021979 // CheckedInputStream
      end
      comment "@(#)CheckedInputStream.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771099 "CheckedOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1022107 // CheckedOutputStream
      end
      comment "@(#)CheckedOutputStream.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771227 "CRC32"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1004955 // CRC32
      end
      comment "@(#)CRC32.java	1.32 05/08/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771355 "DataFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1022235 // DataFormatException
      end
      comment "@(#)DataFormatException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771483 "Deflater"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 356635 // Deflater
      end
      comment "@(#)Deflater.java	1.43 05/11/11

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771611 "GZIPInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.SequenceInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.EOFException;
${definition}"
      associated_classes
	class_ref 1022363 // GZIPInputStream
      end
      comment "@(#)GZIPInputStream.java	1.29 06/03/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771739 "GZIPOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1022491 // GZIPOutputStream
      end
      comment "@(#)GZIPOutputStream.java	1.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771867 "Inflater"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1003803 // Inflater
      end
      comment "@(#)Inflater.java	1.44 05/11/11

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
