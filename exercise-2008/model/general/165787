format 66
"ranges" // src::org::w3c::dom::ranges
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "org/w3c/dom/ranges"
  java_package "org.w3c.dom.ranges"
  classview 161819 "ranges"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 622747 "DocumentRange"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2"
      operation 4066715 "createRange"
	public return_type class_ref 622875 // Range
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This interface can be obtained from the object implementing the 
<code>Document</code> interface using binding-specific casting 
methods.
@return The initial state of the Range returned from this method is 
  such that both of its boundary-points are positioned at the 
  beginning of the corresponding Document, before any content. The 
  Range returned can only be used to select content associated with 
  this Document, or with DocumentFragments and Attrs for which this 
  Document is the <code>ownerDocument</code>."
      end
    end

    class 622875 "Range"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2"
      operation 4900763 "getStartContainer"
	public return_type class_ref 345499 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Node within which the Range begins 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4900891 "getStartOffset"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset within the starting node of the Range. 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4901019 "getEndContainer"
	public return_type class_ref 345499 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Node within which the Range ends 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4901147 "getEndOffset"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offset within the ending node of the Range. 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4901275 "getCollapsed"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TRUE if the Range is collapsed 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4901403 "getCommonAncestorContainer"
	public return_type class_ref 345499 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The deepest common ancestor container of the Range's two 
boundary-points.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4901531 "setStart"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 345499 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attributes describing the start of the Range. 
@param refNode The <code>refNode</code> value. This parameter must be 
  different from <code>null</code>.
@param offset The <code>startOffset</code> value. 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor 
  of <code>refNode</code> is an Entity, Notation, or DocumentType 
  node.
@exception DOMException
  INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater 
  than the number of child units in <code>refNode</code>. Child units 
  are 16-bit units if <code>refNode</code> is a type of CharacterData 
  node (e.g., a Text or Comment node) or a ProcessingInstruction 
  node. Child units are Nodes in all other cases.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4901659 "setEnd"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 345499 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attributes describing the end of a Range.
@param refNode The <code>refNode</code> value. This parameter must be 
  different from <code>null</code>.
@param offset The <code>endOffset</code> value. 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor 
  of <code>refNode</code> is an Entity, Notation, or DocumentType 
  node.
@exception DOMException
  INDEX_SIZE_ERR: Raised if <code>offset</code> is negative or greater 
  than the number of child units in <code>refNode</code>. Child units 
  are 16-bit units if <code>refNode</code> is a type of CharacterData 
  node (e.g., a Text or Comment node) or a ProcessingInstruction 
  node. Child units are Nodes in all other cases.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4901787 "setStartBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start position to be before a node
@param refNode Range starts before <code>refNode</code> 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of 
  <code>refNode</code> is not an Attr, Document, or DocumentFragment 
  node or if <code>refNode</code> is a Document, DocumentFragment, 
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4901915 "setStartAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the start position to be after a node
@param refNode Range starts after <code>refNode</code> 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of 
  <code>refNode</code> is not an Attr, Document, or DocumentFragment 
  node or if <code>refNode</code> is a Document, DocumentFragment, 
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4902043 "setEndBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the end position to be before a node. 
@param refNode Range ends before <code>refNode</code> 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of 
  <code>refNode</code> is not an Attr, Document, or DocumentFragment 
  node or if <code>refNode</code> is a Document, DocumentFragment, 
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4902171 "setEndAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the end of a Range to be after a node 
@param refNode Range ends after <code>refNode</code>. 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if the root container of 
  <code>refNode</code> is not an Attr, Document or DocumentFragment 
  node or if <code>refNode</code> is a Document, DocumentFragment, 
  Attr, Entity, or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4902299 "collapse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toStart" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Collapse a Range onto one of its boundary-points 
@param toStart If TRUE, collapses the Range onto its start; if FALSE, 
  collapses it onto its end. 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4902427 "selectNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Select a node and its contents 
@param refNode The node to select. 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if an ancestor of <code>refNode</code> 
  is an Entity, Notation or DocumentType node or if 
  <code>refNode</code> is a Document, DocumentFragment, Attr, Entity, 
  or Notation node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      operation 4902555 "selectNodeContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 722587 // RangeException
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Select the contents within a node 
@param refNode Node to select from 
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor 
  of <code>refNode</code> is an Entity, Notation or DocumentType node.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>refNode</code> was created 
  from a different document than the one that created this range."
      end

      attribute 1638939 "START_TO_START"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " CompareHow

Compare start boundary-point of <code>sourceRange</code> to start 
boundary-point of Range on which <code>compareBoundaryPoints</code> 
is invoked.
"
      end

      attribute 1639067 "START_TO_END"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compare start boundary-point of <code>sourceRange</code> to end 
boundary-point of Range on which <code>compareBoundaryPoints</code> 
is invoked.
"
      end

      attribute 1639195 "END_TO_END"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compare end boundary-point of <code>sourceRange</code> to end 
boundary-point of Range on which <code>compareBoundaryPoints</code> 
is invoked.
"
      end

      attribute 1639323 "END_TO_START"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Compare end boundary-point of <code>sourceRange</code> to start 
boundary-point of Range on which <code>compareBoundaryPoints</code> 
is invoked.
"
      end

      operation 4902683 "compareBoundaryPoints"
	public explicit_return_type "short"
	nparams 2
	  param in name "how" explicit_type "short"
	  param inout name "sourceRange" type class_ref 622875 // Range
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare the boundary-points of two Ranges in a document.
@param how A code representing the type of comparison, as defined 
  above.
@param sourceRange The <code>Range</code> on which this current 
  <code>Range</code> is compared to.
@return  -1, 0 or 1 depending on whether the corresponding 
  boundary-point of the Range is respectively before, equal to, or 
  after the corresponding boundary-point of <code>sourceRange</code>. 
@exception DOMException
  WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same 
  Document or DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object."
      end

      operation 4902811 "deleteContents"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the contents of a Range from the containing document or 
document fragment without returning a reference to the removed 
content.  
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of 
  the Range is read-only or any of the nodes that contain any of the 
  content of the Range are read-only.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object."
      end

      operation 4902939 "extractContents"
	public return_type class_ref 620315 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the contents of a Range from the containing document or document 
fragment to a new DocumentFragment. 
@return A DocumentFragment containing the extracted contents. 
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of 
  the Range is read-only or any of the nodes which contain any of the 
  content of the Range are read-only.
  <br>HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be 
  extracted into the new DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object."
      end

      operation 4903067 "cloneContents"
	public return_type class_ref 620315 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Duplicates the contents of a Range 
@return A DocumentFragment that contains content equivalent to this 
  Range.
@exception DOMException
  HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be 
  extracted into the new DocumentFragment.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object."
      end

      operation 4903195 "insertNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newNode" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 613915 // DOMException
	  exception class_ref 722587 // RangeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a node into the Document or DocumentFragment at the start of 
the Range. If the container is a Text node, this will be split at the 
start of the Range (as if the Text node's splitText method was 
performed at the insertion point) and the insertion will occur 
between the two resulting Text nodes. Adjacent Text nodes will not be 
automatically merged. If the node to be inserted is a 
DocumentFragment node, the children will be inserted rather than the 
DocumentFragment node itself.
@param newNode The node to insert at the start of the Range 
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the 
  start of the Range is read-only.
  <br>WRONG_DOCUMENT_ERR: Raised if <code>newNode</code> and the 
  container of the start of the Range were not created from the same 
  document.
  <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of 
  the Range is of a type that does not allow children of the type of 
  <code>newNode</code> or if <code>newNode</code> is an ancestor of 
  the container.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object.
@exception RangeException
  INVALID_NODE_TYPE_ERR: Raised if <code>newNode</code> is an Attr, 
  Entity, Notation, or Document node."
      end

      operation 4903323 "surroundContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newParent" type class_ref 345499 // Node
	nexceptions 2
	  exception class_ref 613915 // DOMException
	  exception class_ref 722587 // RangeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reparents the contents of the Range to the given node and inserts the 
node at the position of the start of the Range. 
@param newParent The node to surround the contents with. 
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of 
  either boundary-point of the Range is read-only.
  <br>WRONG_DOCUMENT_ERR: Raised if <code> newParent</code> and the 
  container of the start of the Range were not created from the same 
  document.
  <br>HIERARCHY_REQUEST_ERR: Raised if the container of the start of 
  the Range is of a type that does not allow children of the type of 
  <code>newParent</code> or if <code>newParent</code> is an ancestor 
  of the container or if <code>node</code> would end up with a child 
  node of a type not allowed by the type of <code>node</code>.
  <br>INVALID_STATE_ERR: Raised if <code>detach()</code> has already 
  been invoked on this object.
@exception RangeException
  BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a 
  non-text node.
  <br>INVALID_NODE_TYPE_ERR: Raised if <code> node</code> is an Attr, 
  Entity, DocumentType, Notation, Document, or DocumentFragment node."
      end

      operation 4903451 "cloneRange"
	public return_type class_ref 622875 // Range
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produces a new Range whose boundary-points are equal to the 
boundary-points of the Range. 
@return The duplicated Range. 
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4903579 "toString"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the contents of a Range as a string. This string contains only 
the data characters, not any markup. 
@return The contents of the Range.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end

      operation 4903707 "detach"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to indicate that the Range is no longer in use and that the 
implementation may relinquish any resources associated with this 
Range. Subsequent calls to any methods or attribute getters on this 
Range will result in a <code>DOMException</code> being thrown with an 
error code of <code>INVALID_STATE_ERR</code>.
@exception DOMException
  INVALID_STATE_ERR: Raised if <code>detach()</code> has already been 
  invoked on this object."
      end
    end

    class 722587 "RangeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Range operations may throw a <code>RangeException</code> as specified in 
their method descriptions.
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
@since DOM Level 2"
      classrelation 1268891 // <generalisation>
	relation 1268891 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1268891 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      operation 4900507 "RangeException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1638555 "code"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1638683 "BAD_BOUNDARYPOINTS_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " RangeExceptionCode

If the boundary-points of a Range do not meet specific requirements.
"
      end

      attribute 1638811 "INVALID_NODE_TYPE_ERR"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If the container of an boundary-point of a Range is being set to either 
a node of an invalid type or a node with an ancestor of an invalid 
type.
"
      end
    end
  end

  deploymentview 154651 "ranges"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 433563 "DocumentRange"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 622747 // DocumentRange
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 514075 "RangeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 722587 // RangeException
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 514331 "Range"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
${definition}"
      associated_classes
	class_ref 622875 // Range
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end
  end
end
