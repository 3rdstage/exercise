class NodeIteratorBase
!!!4643355.java!!!	setRestartable(inout isRestartable : boolean) : void
	_isRestartable = isRestartable;
!!!4643611.java!!!	reset() : NodeIterator
	final boolean temp = _isRestartable;
	_isRestartable = true;
	// Must adjust _startNode if self is included
	setStartNode(_includeSelf ? _startNode + 1 : _startNode);
	_isRestartable = temp;
	return this;
!!!4643739.java!!!	includeSelf() : NodeIterator
	_includeSelf = true;
	return this;
!!!4643867.java!!!	getLast() : int
	if (_last == -1) {
	    final int temp = _position;
	    setMark();
	    reset();
	    do {
		_last++;
	    } while (next() != END);
	    gotoMark();
	    _position = temp;
	}
	return _last;
!!!4643995.java!!!	getPosition() : int
	return _position == 0 ? 1 : _position;
!!!4644123.java!!!	isReverse() : boolean
	return false;
!!!4644251.java!!!	cloneIterator() : NodeIterator
	try {
	    final NodeIteratorBase clone = (NodeIteratorBase)super.clone();
	    clone._isRestartable = false;
	    return clone.reset();
	}
	catch (CloneNotSupportedException e) {
	    BasisLibrary.runTimeError(BasisLibrary.ITERATOR_CLONE_ERR,
				      e.toString());
	    return null;
	}
!!!4644379.java!!!	returnNode(in node : int) : int
	_position++;
	return node;
!!!4644507.java!!!	resetPosition() : NodeIterator
	_position = 0;
	return this;
