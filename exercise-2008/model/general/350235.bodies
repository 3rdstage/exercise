class JPEGHuffmanTable
!!!8200731.java!!!	JPEGHuffmanTable(in lengths : short, in values : short)
        if (lengths == null) {
            throw new IllegalArgumentException("lengths array is null!");
        }
        if (values == null) {
            throw new IllegalArgumentException("values array is null!");
        }
        if (lengths.length > HUFF_MAX_LEN) {
            throw new IllegalArgumentException("lengths array is too long!");
        }
        if (values.length > HUFF_MAX_VALS) {
            throw new IllegalArgumentException("values array is too long");
        }
        for (int i = 1; i < lengths.length; i++) {
            if (lengths[i] < 0) {
                throw new IllegalArgumentException
                    ("Values in lengths array must be non-negative.");
            }
        }
        for (int i = 0; i < values.length; i++) {
            if (values[i] < 0) {
                throw new IllegalArgumentException
                    ("Values in values array must be non-negative.");
            }
        }
        
        this.lengths = (short[])lengths.clone();
        this.values = (short[])values.clone();

        checkTable();
!!!8200859.java!!!	checkTable() : void
        int numVals = 2;
        int sum = 0;

        for (int i = 0; i < lengths.length; i++) {
            sum     += lengths[i];
            numVals -= lengths[i];
            numVals *= 2;
        }
        
        if (numVals < 0) {
            throw new IllegalArgumentException
                ("Invalid Huffman table provided, lengths are incorrect.");
        }
        
        if (sum != values.length) {
            throw new IllegalArgumentException
                ("Invalid Huffman table provided, sum of lengths != values.");
        }
!!!8200987.java!!!	getLengths() : short
        return (short[])lengths.clone();
!!!8201115.java!!!	getValues() : short
        return (short[])values.clone();
!!!8201243.java!!!	toString() : String
        StringBuffer sb = new StringBuffer();
        sb.append("JPEGHuffmanTable:\nlengths:");
        for (int i = 0; i< lengths.length; i++) {
            sb.append(' ').append(lengths[i]);
        }
        sb.append("\nvalues:");
        for (int i = 0; i< values.length; i++) {
            sb.append(' ').append(values[i]);
        }
        return sb.toString();
