class Attribute
!!!3593755.java!!!	Attribute(in tag : byte, in name_index : int, in length : int, inout constant_pool : ConstantPool)
    this.tag           = tag;
    this.name_index    = name_index;
    this.length        = length;
    this.constant_pool = constant_pool;
!!!3594011.java!!!	dump(inout file : DataOutputStream) : void
    file.writeShort(name_index);
    file.writeInt(length);
!!!3594139.java!!!	readAttribute(inout file : DataInputStream, inout constant_pool : ConstantPool) : Attribute
    ConstantUtf8 c;
    String       name;
    int          name_index;
    int          length;
    byte         tag = Constants.ATTR_UNKNOWN; // Unknown attribute

    // Get class name from constant pool via `name_index' indirection
    name_index = (int)(file.readUnsignedShort());
    c          = (ConstantUtf8)constant_pool.getConstant(name_index, 
							 Constants.CONSTANT_Utf8);
    name       = c.getBytes();

    // Length of data in bytes
    length = file.readInt();

    // Compare strings to find known attribute
    for(byte i=0; i < Constants.KNOWN_ATTRIBUTES; i++) {
      if(name.equals(Constants.ATTRIBUTE_NAMES[i])) {
	tag = i; // found!
	break;
      }
    }

    // Call proper constructor, depending on `tag'
    switch(tag) {
    case Constants.ATTR_UNKNOWN:
      return new Unknown(name_index, length, file, constant_pool);

    case Constants.ATTR_CONSTANT_VALUE:
      return new ConstantValue(name_index, length, file, constant_pool);

    case Constants.ATTR_SOURCE_FILE:
      return new SourceFile(name_index, length, file, constant_pool);
	  
    case Constants.ATTR_CODE:
      return new Code(name_index, length, file, constant_pool);
	  
    case Constants.ATTR_EXCEPTIONS:
      return new ExceptionTable(name_index, length, file, constant_pool);
	  
    case Constants.ATTR_LINE_NUMBER_TABLE:
      return new LineNumberTable(name_index, length, file, constant_pool);
	  
    case Constants.ATTR_LOCAL_VARIABLE_TABLE:
      return new LocalVariableTable(name_index, length, file, constant_pool);

    case Constants.ATTR_INNER_CLASSES:
      return new InnerClasses(name_index, length, file, constant_pool);

    case Constants.ATTR_SYNTHETIC:
      return new Synthetic(name_index, length, file, constant_pool);

    case Constants.ATTR_DEPRECATED:
      return new Deprecated(name_index, length, file, constant_pool);

    case Constants.ATTR_PMG:
      return new PMGClass(name_index, length, file, constant_pool);

    case Constants.ATTR_SIGNATURE:
      return new Signature(name_index, length, file, constant_pool);

    case Constants.ATTR_STACK_MAP:
      return new StackMap(name_index, length, file, constant_pool);

    default: // Never reached
      throw new InternalError("Ooops! default case reached.");
    }
!!!3594267.java!!!	getLength() : int
 return length;
!!!3594395.java!!!	setLength(in length : int) : void
    this.length = length;
!!!3594523.java!!!	setNameIndex(in name_index : int) : void
    this.name_index = name_index;
!!!3594651.java!!!	getNameIndex() : int
 return name_index;
!!!3594779.java!!!	getTag() : byte
 return tag;
!!!3594907.java!!!	getConstantPool() : ConstantPool
 return constant_pool;
!!!3595035.java!!!	setConstantPool(inout constant_pool : ConstantPool) : void
    this.constant_pool = constant_pool;
!!!3595163.java!!!	clone() : Object
    Object o = null;

    try {
      o = super.clone();
    } catch(CloneNotSupportedException e) {
      e.printStackTrace(); // Never occurs
    }

    return o;
!!!3595419.java!!!	toString() : String
    return Constants.ATTRIBUTE_NAMES[tag];
