class StringValueHandler
!!!4733723.java!!!	characters(in ch : char, in off : int, in len : int) : void
	if (_nestedLevel > 0)
	    return;
	
	if (_str != null) {
	    _buffer.append(_str);
	    _str = null;
	}
	_buffer.append(ch, off, len);
!!!4733851.java!!!	getValue() : String
	if (_buffer.length() != 0) {
	    String result = _buffer.toString();
	    _buffer.setLength(0);
	    return result;
	}
	else {
	    String result = _str;
	    _str = null;
	    return (result != null) ? result : EMPTY_STR;
	}
!!!4733979.java!!!	characters(in characters : String) : void
	if (_nestedLevel > 0)
	    return;

	if (_str == null && _buffer.length() == 0) {
	    _str = characters;
	}
	else {
	    if (_str != null) {
	        _buffer.append(_str);
	        _str = null;
	    }
	    
	    _buffer.append(characters);
	}
!!!4734107.java!!!	startElement(in qname : String) : void
        _nestedLevel++;
!!!4734235.java!!!	endElement(in qname : String) : void
        _nestedLevel--;
!!!4734363.java!!!	setEscaping(inout bool : boolean) : boolean
        boolean oldEscaping = m_escaping;
        m_escaping = bool;

        return bool;
!!!4734491.java!!!	getValueOfPI() : String
	final String value = getValue();

	if (value.indexOf("?>") > 0) {
	    final int n = value.length(); 
	    final StringBuffer valueOfPI = new StringBuffer();

	    for (int i = 0; i < n;) {
		final char ch = value.charAt(i++);
		if (ch == '?' && value.charAt(i) == '>') {
		    valueOfPI.append("? >"); i++;
		}
		else {
		    valueOfPI.append(ch);
		}
	    } 
	    return valueOfPI.toString();
	}
	return value;
