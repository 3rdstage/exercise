class XMLChar
!!!5524507.java!!!	isSupplemental(in c : int) : boolean
        return (c >= 0x10000 && c <= 0x10FFFF);
!!!5524635.java!!!	supplemental(in h : char, in l : char) : int
        return (h - 0xD800) * 0x400 + (l - 0xDC00) + 0x10000;
!!!5524763.java!!!	highSurrogate(in c : int) : char
        return (char) (((c - 0x00010000) >> 10) + 0xD800);
!!!5524891.java!!!	lowSurrogate(in c : int) : char
        return (char) (((c - 0x00010000) & 0x3FF) + 0xDC00);
!!!5525019.java!!!	isHighSurrogate(in c : int) : boolean
        return (0xD800 <= c && c <= 0xDBFF);
!!!5525147.java!!!	isLowSurrogate(in c : int) : boolean
        return (0xDC00 <= c && c <= 0xDFFF);
!!!5525275.java!!!	isValid(in c : int) : boolean
        return (c < 0x10000 && (CHARS[c] & MASK_VALID) != 0) ||
               (0x10000 <= c && c <= 0x10FFFF);
!!!5525403.java!!!	isInvalid(in c : int) : boolean
        return !isValid(c);
!!!5525531.java!!!	isContent(in c : int) : boolean
        return (c < 0x10000 && (CHARS[c] & MASK_CONTENT) != 0) ||
               (0x10000 <= c && c <= 0x10FFFF);
!!!5525659.java!!!	isMarkup(in c : int) : boolean
        return c == '<' || c == '&' || c == '%';
!!!5525787.java!!!	isSpace(in c : int) : boolean
        return c <= 0x20 && (CHARS[c] & MASK_SPACE) != 0;
!!!5525915.java!!!	isNameStart(in c : int) : boolean
        return c < 0x10000 && (CHARS[c] & MASK_NAME_START) != 0;
!!!5526043.java!!!	isName(in c : int) : boolean
        return c < 0x10000 && (CHARS[c] & MASK_NAME) != 0;
!!!5526171.java!!!	isNCNameStart(in c : int) : boolean
        return c < 0x10000 && (CHARS[c] & MASK_NCNAME_START) != 0;
!!!5526299.java!!!	isNCName(in c : int) : boolean
        return c < 0x10000 && (CHARS[c] & MASK_NCNAME) != 0;
!!!5526427.java!!!	isPubid(in c : int) : boolean
        return c < 0x10000 && (CHARS[c] & MASK_PUBID) != 0;
!!!5526555.java!!!	isValidName(in name : String) : boolean
        if (name.length() == 0)
            return false;
        char ch = name.charAt(0);
        if( isNameStart(ch) == false)
           return false;
        for (int i = 1; i < name.length(); i++ ) {
           ch = name.charAt(i);
           if( isName( ch ) == false ){
              return false;
           }
        }
        return true;
!!!5526683.java!!!	isValidNCName(in ncName : String) : boolean
        if (ncName.length() == 0)
            return false;
        char ch = ncName.charAt(0);
        if( isNCNameStart(ch) == false)
           return false;
        for (int i = 1; i < ncName.length(); i++ ) {
           ch = ncName.charAt(i);
           if( isNCName( ch ) == false ){
              return false;
           }
        }
        return true;
!!!5526811.java!!!	isValidNmtoken(in nmtoken : String) : boolean
        if (nmtoken.length() == 0)
            return false;
        for (int i = 0; i < nmtoken.length(); i++ ) {
           char ch = nmtoken.charAt(i);
           if(  ! isName( ch ) ){
              return false;
           }
        }
        return true;
!!!5526939.java!!!	isValidIANAEncoding(in ianaEncoding : String) : boolean
        if (ianaEncoding != null) {
            int length = ianaEncoding.length();
            if (length > 0) {
                char c = ianaEncoding.charAt(0);
                if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {
                    for (int i = 1; i < length; i++) {
                        c = ianaEncoding.charAt(i);
                        if ((c < 'A' || c > 'Z') && (c < 'a' || c > 'z') &&
                            (c < '0' || c > '9') && c != '.' && c != '_' &&
                            c != '-') {
                            return false;
                        }
                    }
                    return true;
                }
            }
        }
        return false;
!!!5527067.java!!!	isValidJavaEncoding(in javaEncoding : String) : boolean
        if (javaEncoding != null) {
            int length = javaEncoding.length();
            if (length > 0) {
                for (int i = 1; i < length; i++) {
                    char c = javaEncoding.charAt(i);
                    if ((c < 'A' || c > 'Z') && (c < 'a' || c > 'z') &&
                        (c < '0' || c > '9') && c != '.' && c != '_' &&
                        c != '-') {
                        return false;
                    }
                }
                return true;
            }
        }
        return false;
