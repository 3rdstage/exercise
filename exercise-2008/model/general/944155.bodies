class HeapShortBufferR
!!!7469979.java!!!	HeapShortBufferR(in cap : int, in lim : int)
		// package-private







	super(cap, lim);
	this.isReadOnly = true;

!!!7470107.java!!!	HeapShortBufferR(in buf : short, in off : int, in len : int)
 // package-private







	super(buf, off, len);
	this.isReadOnly = true;

!!!7470235.java!!!	HeapShortBufferR(in buf : short, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)








	super(buf, mark, pos, lim, cap, off);
	this.isReadOnly = true;

!!!7470363.java!!!	slice() : ShortBuffer

	return new HeapShortBufferR(hb,
					-1,
					0,
					this.remaining(),
					this.remaining(),
					this.position() + offset);
!!!7470491.java!!!	duplicate() : ShortBuffer

	return new HeapShortBufferR(hb,
					this.markValue(),
					this.position(),
					this.limit(),
					this.capacity(),
					offset);
!!!7470619.java!!!	asReadOnlyBuffer() : ShortBuffer









	return duplicate();

!!!7470747.java!!!	isReadOnly() : boolean

	return true;
!!!7470875.java!!!	put(in x : short) : ShortBuffer





	throw new ReadOnlyBufferException();

!!!7471003.java!!!	put(in i : int, in x : short) : ShortBuffer





	throw new ReadOnlyBufferException();

!!!7471131.java!!!	put(in src : short, in offset : int, in length : int) : ShortBuffer









	throw new ReadOnlyBufferException();

!!!7471259.java!!!	put(inout src : ShortBuffer) : ShortBuffer
























	throw new ReadOnlyBufferException();

!!!7471387.java!!!	compact() : ShortBuffer







	throw new ReadOnlyBufferException();

!!!7471515.java!!!	order() : ByteOrder

	return ByteOrder.nativeOrder();
