class DropTargetDragEvent
!!!6440091.java!!!	DropTargetDragEvent(inout dtc : DropTargetContext, inout cursorLocn : Point, in dropAction : int, in srcActions : int)
	super(dtc);

	if (cursorLocn == null) throw new NullPointerException("cursorLocn");

	if (dropAction != DnDConstants.ACTION_NONE &&
	    dropAction != DnDConstants.ACTION_COPY &&
	    dropAction != DnDConstants.ACTION_MOVE &&
	    dropAction != DnDConstants.ACTION_LINK
	) throw new IllegalArgumentException("dropAction" + dropAction);

	if ((srcActions & ~(DnDConstants.ACTION_COPY_OR_MOVE | DnDConstants.ACTION_LINK)) != 0) throw new IllegalArgumentException("srcActions");

	location        = cursorLocn;
	actions         = srcActions;
	this.dropAction = dropAction;
!!!6440219.java!!!	getLocation() : Point
	return location;
!!!6440347.java!!!	getCurrentDataFlavors() : DataFlavor
	return getDropTargetContext().getCurrentDataFlavors();
!!!6440475.java!!!	getCurrentDataFlavorsAsList() : List
	return getDropTargetContext().getCurrentDataFlavorsAsList();
!!!6440603.java!!!	isDataFlavorSupported(inout df : DataFlavor) : boolean
	return getDropTargetContext().isDataFlavorSupported(df);
!!!6440731.java!!!	getSourceActions() : int
 return actions;
!!!6440859.java!!!	getDropAction() : int
 return dropAction;
!!!6440987.java!!!	getTransferable() : Transferable
	return getDropTargetContext().getTransferable();
!!!6441115.java!!!	acceptDrag(in dragOperation : int) : void
	getDropTargetContext().acceptDrag(dragOperation);
!!!6441243.java!!!	rejectDrag() : void
	getDropTargetContext().rejectDrag();
