format 66
"x500" // src::javax::security::auth::x500
  revision 1
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/security/auth/x500"
  java_package "javax.security.auth.x500"
  classview 172955 "x500"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 845211 "X500Principal"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This class represents an X.500 <code>Principal</code>.
<code>X500Principal</code>s are represented by distinguished names such as
\"CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US\".

<p> This class can be instantiated by using a string representation
of the distinguished name, or by using the ASN.1 DER encoded byte
representation of the distinguished name.  The current specification
for the string representation of a distinguished name is defined in
<a href=\"http://www.ietf.org/rfc/rfc2253.txt\">RFC 2253</a>.
This class, however, accepts string formats from both RFC 2253 and
<a href=\"http://www.ietf.org/rfc/rfc1779.txt\">RFC 1779</a>,
and also recognizes attribute type keywords whose OIDs
(Object Identifiers) are defined in
<a href=\"http://www.ietf.org/rfc/rfc2459.txt\">RFC 2459</a>.

<p> The string representation for this <code>X500Principal</code>
can be obtained by calling the <code>getName</code> methods.

<p> Note that the <code>getSubjectX500Principal</code> and
<code>getIssuerX500Principal</code> methods of
<code>X509Certificate</code> return X500Principals representing the
issuer and subject fields of the certificate.

@version 1.21, 12/19/03
@see java.security.cert.X509Certificate
@since 1.4"
      classrelation 2218651 // <realization>
	relation 2218651 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2218651 // <realization>
	  b parent class_ref 527131 // Principal
      end

      classrelation 2218779 // <realization>
	relation 2218779 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2218779 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3141019 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -500463348111345721L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3141147 "RFC1779"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"RFC1779\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "RFC 1779 String format of Distinguished Names. 
"
      end

      attribute 3141275 "RFC2253"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"RFC2253\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "RFC 2253 String format of Distinguished Names. 
"
      end

      attribute 3141403 "CANONICAL"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"CANONICAL\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Canonical String format of Distinguished Names.
"
      end

      attribute 3141531 "thisX500Name"
	private explicit_type "X500Name"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The X500Name representing this principal.

NOTE: this field is reflectively accessed from within X500Name.
"
      end

      operation 8679195 "X500Principal"
	package explicit_return_type ""
	nparams 1
	  param inout name "x500Name" explicit_type "X500Name"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an X500Principal by wrapping an X500Name.

NOTE: The constructor is package private. It is intended to be accessed
using privileged reflection from classes in sun.security.*.
Currently referenced from sun.security.x509.X500Name.asX500Principal()."
      end

      operation 8679323 "X500Principal"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>X500Principal</code> from a string representation of
an X.500 distinguished name (ex: 
\"CN=Duke, OU=JavaSoft, O=Sun Microsystems, C=US\").
The distinguished name must be specified using the grammar defined in
RFC 1779 or RFC 2253 (either format is acceptable). 

<p>This constructor recognizes the attribute type keywords
defined in RFC 1779 and RFC 2253
(and listed in {@link #getName(String format) getName(String format)}),
as well as the T, DNQ or DNQUALIFIER, SURNAME, GIVENNAME, INITIALS,
GENERATION, EMAILADDRESS, and SERIALNUMBER keywords whose OIDs are 
defined in RFC 2459 and its successor.
Any other attribute type must be specified as an OID.

@param name an X.500 distinguished name in RFC 1779 or RFC 2253 format
@exception NullPointerException if the <code>name</code>
			is <code>null</code>
@exception IllegalArgumentException if the <code>name</code>
			is improperly specified"
      end

      operation 8679451 "X500Principal"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>X500Principal</code> from a distinguished name in 
ASN.1 DER encoded form. The ASN.1 notation for this structure is as 
follows.
<pre><code>
Name ::= CHOICE {
  RDNSequence }

RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

RelativeDistinguishedName ::=
  SET SIZE (1 .. MAX) OF AttributeTypeAndValue

AttributeTypeAndValue ::= SEQUENCE {
  type     AttributeType,
  value    AttributeValue }

AttributeType ::= OBJECT IDENTIFIER

AttributeValue ::= ANY DEFINED BY AttributeType
....
DirectoryString ::= CHOICE {
      teletexString           TeletexString (SIZE (1..MAX)),
      printableString         PrintableString (SIZE (1..MAX)),
      universalString         UniversalString (SIZE (1..MAX)),
      utf8String              UTF8String (SIZE (1.. MAX)),
      bmpString               BMPString (SIZE (1..MAX)) }
</code></pre>

@param name a byte array containing the distinguished name in ASN.1 
DER encoded form
@throws IllegalArgumentException if an encoding error occurs
		(incorrect form for DN)"
      end

      operation 8679579 "X500Principal"
	public explicit_return_type ""
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>X500Principal</code> from an <code>InputStream</code>
containing the distinguished name in ASN.1 DER encoded form.
The ASN.1 notation for this structure is supplied in the
documentation for
{@link #X500Principal(byte[] name) X500Principal(byte[] name)}.

<p> The read position of the input stream is positioned
to the next available byte after the encoded distinguished name.

@param is an <code>InputStream</code> containing the distinguished
		name in ASN.1 DER encoded form

@exception NullPointerException if the <code>InputStream</code>
		is <code>null</code>
@exception IllegalArgumentException if an encoding error occurs
		(incorrect form for DN)"
      end

      operation 8679707 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the X.500 distinguished name using
the format defined in RFC 2253.

<p>This method is equivalent to calling
<code>getName(X500Principal.RFC2253)</code>.

@return the distinguished name of this <code>X500Principal</code>"
      end

      operation 8679835 "getName"
	public explicit_return_type "String"
	nparams 1
	  param in name "format" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the X.500 distinguished name
using the specified format. Valid values for the format are
\"RFC1779\", \"RFC2253\", and \"CANONICAL\" (case insensitive).

<p> If \"RFC1779\" is specified as the format,
this method emits the attribute type keywords defined in
RFC 1779 (CN, L, ST, O, OU, C, STREET).
Any other attribute type is emitted as an OID.

<p> If \"RFC2253\" is specified as the format,
this method emits the attribute type keywords defined in
RFC 2253 (CN, L, ST, O, OU, C, STREET, DC, UID).
Any other attribute type is emitted as an OID.
Under a strict reading, RFC 2253 only specifies a UTF-8 string
representation. The String returned by this method is the
Unicode string achieved by decoding this UTF-8 representation.

<p> If \"CANONICAL\" is specified as the format,
this method returns an RFC 2253 conformant string representation
with the following additional canonicalizations:

<p><ol>
<li> Leading zeros are removed from attribute types
		that are encoded as dotted decimal OIDs
<li> DirectoryString attribute values of type
		PrintableString and UTF8String are not
		output in hexadecimal format
<li> DirectoryString attribute values of types
		other than PrintableString and UTF8String
		are output in hexadecimal format
<li> Leading and trailing white space characters
		are removed from non-hexadecimal attribute values
		(unless the value consists entirely of white space characters)
<li> Internal substrings of one or more white space characters are
		converted to a single space in non-hexadecimal
		attribute values
<li> Relative Distinguished Names containing more than one
		Attribute Value Assertion (AVA) are output in the
		following order: an alphabetical ordering of AVAs
		containing standard keywords, followed by a numeric
		ordering of AVAs containing OID keywords.
<li> The only characters in attribute values that are escaped are
		those which section 2.4 of RFC 2253 states must be escaped
		(they are escaped using a preceding backslash character)
<li> The entire name is converted to upper case
		using <code>String.toUpperCase(Locale.US)</code>
<li> The entire name is converted to lower case
		using <code>String.toLowerCase(Locale.US)</code>
<li> The name is finally normalized using normalization form KD,
		as described in the Unicode Standard and UAX #15
</ol>

<p> Additional standard formats may be introduced in the future.

@param format the format to use

@return a string representation of this <code>X500Principal</code>
		using the specified format
@throws IllegalArgumentException if the specified format is invalid"
      end

      operation 8679963 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the distinguished name in ASN.1 DER encoded form. The ASN.1
notation for this structure is supplied in the documentation for
{@link #X500Principal(byte[] name) X500Principal(byte[] name)}.

<p>Note that the byte array returned is cloned to protect against
subsequent modifications.

@return a byte array containing the distinguished name in ASN.1 DER 
encoded form"
      end

      operation 8680091 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a user-friendly string representation of this
<code>X500Principal</code>.

@return a string representation of this <code>X500Principal</code>"
      end

      operation 8680219 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <code>Object</code> with this 
<code>X500Principal</code> for equality.

<p> Specifically, this method returns <code>true</code> if
the <code>Object</code> <i>o</i> is an <code>X500Principal</code>
and if the respective canonical string representations
(obtained via the <code>getName(X500Principal.CANONICAL)</code> method)
of this object and <i>o</i> are equal.

<p> This implementation is compliant with the requirements of RFC 2459.

@param o Object to be compared for equality with this
		<code>X500Principal</code>

@return <code>true</code> if the specified <code>Object</code> is equal 
		to this <code>X500Principal</code>, <code>false</code> otherwise"
      end

      operation 8680347 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a hash code for this <code>X500Principal</code>.

<p> The hash code is calculated via:
<code>getName(X500Principal.CANONICAL).hashCode()</code>

@return a hash code for this <code>X500Principal</code>"
      end

      operation 8680475 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the X500Principal object to a stream.

@serialData this <code>X500Principal</code> is serialized
		by writing out its DER-encoded form
		(the value of <code>getEncoded</code> is serialized)."
      end

      operation 8680603 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 203803 // NotActiveException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)."
      end
    end

    class 845467 "X500PrivateCredential"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This class represents an <code>X500PrivateCredential</code>.
It associates an X.509 certificate, corresponding private key and the
KeyStore alias used to reference that exact key pair in the KeyStore.
This enables looking up the private credentials for an X.500 principal
in a subject. 

@version 1.8, 12/19/03"
      classrelation 2218907 // <realization>
	relation 2218907 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2218907 // <realization>
	  b parent class_ref 965531 // Destroyable
      end

      classrelation 2219035 // cert (<unidirectional association>)
	relation 2219035 --->
	  a role_name "cert" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2219035 // cert (<unidirectional association>)
	  b parent class_ref 974747 // X509Certificate
      end

      classrelation 2219163 // key (<unidirectional association>)
	relation 2219163 --->
	  a role_name "key" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2219163 // key (<unidirectional association>)
	  b parent class_ref 964123 // PrivateKey
      end

      attribute 3141659 "alias"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8680731 "X500PrivateCredential"
	public explicit_return_type ""
	nparams 2
	  param inout name "cert" type class_ref 974747 // X509Certificate
	  param inout name "key" type class_ref 964123 // PrivateKey
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an X500PrivateCredential that associates an X.509 certificate,
a private key and the KeyStore alias.
<p>
@param cert X509Certificate
@param key  PrivateKey for the certificate
@exception IllegalArgumentException if either <code>cert</code> or 
<code>key</code> is null
"
      end

      operation 8680859 "X500PrivateCredential"
	public explicit_return_type ""
	nparams 3
	  param inout name "cert" type class_ref 974747 // X509Certificate
	  param inout name "key" type class_ref 964123 // PrivateKey
	  param in name "alias" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an X500PrivateCredential that associates an X.509 certificate,
a private key and the KeyStore alias.
<p>
@param cert X509Certificate
@param key  PrivateKey for the certificate
@param alias KeyStore alias
@exception IllegalArgumentException if either <code>cert</code>, 
<code>key</code> or <code>alias</code> is null
"
      end

      operation 8680987 "getCertificate"
	public return_type class_ref 974747 // X509Certificate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the X.509 certificate.
<p>
@return the X509Certificate"
      end

      operation 8681115 "getPrivateKey"
	public return_type class_ref 964123 // PrivateKey
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the PrivateKey.
<p>
@return the PrivateKey"
      end

      operation 8681243 "getAlias"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the KeyStore alias.
<p>
@return the KeyStore alias"
      end

      operation 8681371 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the references to the X.509 certificate, private key and the
KeyStore alias in this object."
      end

      operation 8681499 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the references to the X.509 certificate and private key
in this object have been cleared.
<p>
@return true if X509Certificate and the PrivateKey are null
"
      end
    end
  end

  deploymentview 172059 "x500"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 833563 "X500Principal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.security.Principal;
import sun.security.x509.X500Name;
import sun.security.util.*;
${definition}"
      associated_classes
	class_ref 845211 // X500Principal
      end
      comment "@(#)X500Principal.java	1.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833691 "X500PrivateCredential"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.PrivateKey;
import java.security.cert.X509Certificate;
import javax.security.auth.Destroyable;
${definition}"
      associated_classes
	class_ref 845467 // X500PrivateCredential
      end
      comment "@(#)X500PrivateCredential.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
