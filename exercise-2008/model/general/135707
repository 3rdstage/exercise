format 66
"nio" // src::java::nio
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/nio"
  java_package "java.nio"
  classview 136475 "nio"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 182427 "ByteBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 182427 // ByteBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A byte buffer.

<p> This class defines six categories of operations upon
byte buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(byte) </code><i>put</i><code>} methods that read and write
  single bytes; </p></li>

  <li><p> Relative {@link #get(byte[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of bytes from this buffer
  into an array; </p></li>

  <li><p> Relative {@link #put(byte[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of bytes from a
  byte array or some other byte
  buffer into this buffer; </p></li>



  <li><p> Absolute and relative {@link #getChar() </code><i>get</i><code>}
  and {@link #putChar(char) </code><i>put</i><code>} methods that read and
  write values of other primitive types, translating them to and from
  sequences of bytes in a particular byte order; </p></li>

  <li><p> Methods for creating <i><a href=\"#views\">view buffers</a></i>,
  which allow a byte buffer to be viewed as a buffer containing values of
  some other primitive type; and </p></li>



  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a byte buffer.  </p></li>

</ul>

<p> Byte buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's



content, or by {@link #wrap(byte[]) </code><i>wrapping</i><code>} an
existing byte array  into a buffer.











<a name=\"direct\">
<h4> Direct <i>vs.</i> non-direct buffers </h4>

<p> A byte buffer is either <i>direct</i> or <i>non-direct</i>.  Given a
direct byte buffer, the Java virtual machine will make a best effort to
perform native I/O operations directly upon it.  That is, it will attempt to
avoid copying the buffer's content to (or from) an intermediate buffer
before (or after) each invocation of one of the underlying operating
system's native I/O operations.

<p> A direct byte buffer may be created by invoking the {@link
#allocateDirect(int) allocateDirect} factory method of this class.  The
buffers returned by this method typically have somewhat higher allocation
and deallocation costs than non-direct buffers.  The contents of direct
buffers may reside outside of the normal garbage-collected heap, and so
their impact upon the memory footprint of an application might not be
obvious.  It is therefore recommended that direct buffers be allocated
primarily for large, long-lived buffers that are subject to the underlying
system's native I/O operations.  In general it is best to allocate direct
buffers only when they yield a measureable gain in program performance.

<p> A direct byte buffer may also be created by {@link
java.nio.channels.FileChannel#map </code>mapping<code>} a region of a file
directly into memory.  An implementation of the Java platform may optionally
support the creation of direct byte buffers from native code via JNI.  If an
instance of one of these kinds of buffers refers to an inaccessible region
of memory then an attempt to access that region will not change the buffer's
content and will cause an unspecified exception to be thrown either at the
time of the access or at some later time.

<p> Whether a byte buffer is direct or non-direct may be determined by
invoking its {@link #isDirect isDirect} method.  This method is provided so
that explicit buffer management can be done in performance-critical code.


<a name=\"bin\">
<h4> Access to binary data </h4>

<p> This class defines methods for reading and writing values of all other
primitive types, except <tt>boolean</tt>.  Primitive values are translated
to (or from) sequences of bytes according to the buffer's current byte
order, which may be retrieved and modified via the {@link #order order}
methods.  Specific byte orders are represented by instances of the {@link
ByteOrder} class.  The initial order of a byte buffer is always {@link
ByteOrder#BIG_ENDIAN BIG_ENDIAN}.

<p> For access to heterogeneous binary data, that is, sequences of values of
different types, this class defines a family of absolute and relative
<i>get</i> and <i>put</i> methods for each type.  For 32-bit floating-point
values, for example, this class defines:

<blockquote><pre>
float  {@link #getFloat()}
float  {@link #getFloat(int) getFloat(int index)}
 void  {@link #putFloat(float) putFloat(float f)}
 void  {@link #putFloat(int,float) putFloat(int index, float f)}</pre></blockquote>

<p> Corresponding methods are defined for the types <tt>char</tt>,
<tt>short</tt>, <tt>int</tt>, <tt>long</tt>, and <tt>double</tt>.  The index
parameters of the absolute <i>get</i> and <i>put</i> methods are in terms of
bytes rather than of the type being read or written.

<a name=\"views\">

<p> For access to homogeneous binary data, that is, sequences of values of
the same type, this class defines methods that can create <i>views</i> of a
given byte buffer.  A <i>view buffer</i> is simply another buffer whose
content is backed by the byte buffer.  Changes to the byte buffer's content
will be visible in the view buffer, and vice versa; the two buffers'
position, limit, and mark values are independent.  The {@link
#asFloatBuffer() asFloatBuffer} method, for example, creates an instance of
the {@link FloatBuffer} class that is backed by the byte buffer upon which
the method is invoked.  Corresponding view-creation methods are defined for
the types <tt>char</tt>, <tt>short</tt>, <tt>int</tt>, <tt>long</tt>, and
<tt>double</tt>.

<p> View buffers have three important advantages over the families of
type-specific <i>get</i> and <i>put</i> methods described above:

<ul>

  <li><p> A view buffer is indexed not in terms of bytes but rather in terms
  of the type-specific size of its values;  </p></li>

  <li><p> A view buffer provides relative bulk <i>get</i> and <i>put</i>
  methods that can transfer contiguous sequences of values between a buffer
  and an array or some other buffer of the same type; and  </p></li>

  <li><p> A view buffer is potentially much more efficient because it will
  be direct if, and only if, its backing byte buffer is direct.  </p></li>

</ul>

<p> The byte order of a view buffer is fixed to be that of its byte buffer
at the time that the view is created.  </p>

























<h4> Invocation chaining </h4>


<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.



The sequence of statements

<blockquote><pre>
bb.putInt(0xCAFEBABE);
bb.putShort(3);
bb.putShort(45);</pre></blockquote>

can, for example, be replaced by the single statement

<blockquote><pre>
bb.putInt(0xCAFEBABE).putShort(3).putShort(45);</pre></blockquote>




















@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1823003 // <generalisation>
	relation 1823003 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1823003 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1823131 // <realization>
	relation 1823131 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1823131 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2805659 "hb"
	const_attribute package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2805787 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2805915 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7303707 "ByteBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7303835 "ByteBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7303963 "allocateDirect"
	class_operation public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new direct byte buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  Whether or not it has a
{@link #hasArray </code>backing array<code>} is unspecified.  </p>

@param  capacity
        The new buffer's capacity, in bytes

@return  The new byte buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7304091 "allocate"
	class_operation public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new byte buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in bytes

@return  The new byte buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7304219 "wrap"
	class_operation public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "array" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array into a buffer.

<p> The new buffer will be backed by the given byte array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new byte buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7304347 "wrap"
	class_operation public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "array" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array into a buffer.

<p> The new buffer will be backed by the given byte array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new byte buffer"
      end

      operation 7304475 "slice"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new byte buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new byte buffer"
      end

      operation 7304603 "duplicate"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new byte buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new byte buffer"
      end

      operation 7304731 "asReadOnlyBuffer"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only byte buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only byte buffer"
      end

      operation 7304859 "get"
	abstract public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the byte at this buffer's
current position, and then increments the position. </p>

@return  The byte at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7304987 "put"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given byte into this buffer at the current
position, and then increments the position. </p>

@param  b
        The byte to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7305115 "get"
	abstract public explicit_return_type "byte"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the byte at the given
index. </p>

@param  index
        The index from which the byte will be read

@return  The byte at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7305243 "put"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given byte into this buffer at the given
index. </p>

@param  index
        The index at which the byte will be written

@param  b
        The byte value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7305371 "get"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "dst" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers bytes from this buffer into the given
destination array.  If there are fewer bytes remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
bytes are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> bytes from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient bytes in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which bytes are to be written

@param  offset
        The offset within the array of the first byte to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of bytes to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> bytes
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7305499 "get"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "dst" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers bytes from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> bytes
         remaining in this buffer"
      end

      operation 7305627 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the bytes remaining in the given source
buffer into this buffer.  If there are more bytes remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no bytes are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> bytes from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which bytes are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining bytes in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7305755 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "src" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers bytes into this buffer from the given
source array.  If there are more bytes to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
bytes are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> bytes from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which bytes are to be read

@param  offset
        The offset within the array of the first byte to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of bytes to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7305883 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "src" explicit_type "byte"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
byte array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7306011 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible byte
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7306139 "array"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the byte array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7306267 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7306395 "compact"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The bytes between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
byte at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the byte at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the byte at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of bytes copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



<p> Invoke this method after writing data from a buffer in case the
write was incomplete.  The following loop, for example, copies bytes
from one channel to another via the buffer <tt>buf</tt>:

<blockquote><pre>
buf.clear();          // Prepare buffer for use
for (;;) {
    if (in.read(buf) < 0 && !buf.hasRemaining())
        break;        // No more bytes to transfer
    buf.flip();
    out.write(buf);
    buf.compact();    // In case of partial write
}</pre></blockquote>



@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7306523 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this byte buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7306651 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7306779 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a byte buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7306907 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two byte buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A byte buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7307035 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two byte buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A byte buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      attribute 2806043 "bigEndian"
	package explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --"
      end

      attribute 2806171 "nativeByteOrder"
	package explicit_type "boolean"
	init_value "=  (Bits.byteOrder() == ByteOrder.BIG_ENDIAN)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7307163 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves this buffer's byte order.

<p> The byte order is used when reading or writing multibyte values, and
when creating buffers that are views of this byte buffer.  The order of
a newly-created byte buffer is always {@link ByteOrder#BIG_ENDIAN
BIG_ENDIAN}.  </p>

@return  This buffer's byte order"
      end

      operation 7307291 "order"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "bo" type class_ref 348059 // ByteOrder
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modifies this buffer's byte order.  </p>

@param  bo
        The new byte order,
        either {@link ByteOrder#BIG_ENDIAN BIG_ENDIAN}
        or {@link ByteOrder#LITTLE_ENDIAN LITTLE_ENDIAN}

@return  This buffer"
      end

      operation 7307419 "_get"
	abstract package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unchecked accessors, for use by ByteBufferAs-X-Buffer classes
"
      end

      operation 7307547 "_put"
	abstract package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7307675 "getChar"
	abstract public explicit_return_type "char"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private

Relative <i>get</i> method for reading a char value.

<p> Reads the next two bytes at this buffer's current position,
composing them into a char value according to the current byte order,
and then increments the position by two.  </p>

@return  The char value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than two bytes
         remaining in this buffer"
      end

      operation 7307803 "putChar"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a char
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given char value, in the
current byte order, into this buffer at the current position, and then
increments the position by two.  </p>

@param  value
        The char value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than two bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7307931 "getChar"
	abstract public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a char value.

<p> Reads two bytes at the given index, composing them into a
char value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The char value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one"
      end

      operation 7308059 "putChar"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a char
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given char value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The char value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7308187 "asCharBuffer"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a char buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
two, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new char buffer"
      end

      operation 7308315 "getShort"
	abstract public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a short value.

<p> Reads the next two bytes at this buffer's current position,
composing them into a short value according to the current byte order,
and then increments the position by two.  </p>

@return  The short value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than two bytes
         remaining in this buffer"
      end

      operation 7308443 "putShort"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a short
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given short value, in the
current byte order, into this buffer at the current position, and then
increments the position by two.  </p>

@param  value
        The short value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than two bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7308571 "getShort"
	abstract public explicit_return_type "short"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a short value.

<p> Reads two bytes at the given index, composing them into a
short value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The short value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one"
      end

      operation 7308699 "putShort"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a short
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes two bytes containing the given short value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The short value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus one

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7308827 "asShortBuffer"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a short buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
two, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new short buffer"
      end

      operation 7308955 "getInt"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading an int value.

<p> Reads the next four bytes at this buffer's current position,
composing them into an int value according to the current byte order,
and then increments the position by four.  </p>

@return  The int value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than four bytes
         remaining in this buffer"
      end

      operation 7309083 "putInt"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing an int
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given int value, in the
current byte order, into this buffer at the current position, and then
increments the position by four.  </p>

@param  value
        The int value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than four bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7309211 "getInt"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading an int value.

<p> Reads four bytes at the given index, composing them into a
int value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The int value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three"
      end

      operation 7309339 "putInt"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing an int
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given int value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The int value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7309467 "asIntBuffer"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as an int buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
four, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new int buffer"
      end

      operation 7309595 "getLong"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a long value.

<p> Reads the next eight bytes at this buffer's current position,
composing them into a long value according to the current byte order,
and then increments the position by eight.  </p>

@return  The long value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than eight bytes
         remaining in this buffer"
      end

      operation 7309723 "putLong"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a long
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given long value, in the
current byte order, into this buffer at the current position, and then
increments the position by eight.  </p>

@param  value
        The long value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than eight bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7309851 "getLong"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a long value.

<p> Reads eight bytes at the given index, composing them into a
long value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The long value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven"
      end

      operation 7309979 "putLong"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a long
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given long value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The long value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7310107 "asLongBuffer"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a long buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
eight, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new long buffer"
      end

      operation 7310235 "getFloat"
	abstract public explicit_return_type "float"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a float value.

<p> Reads the next four bytes at this buffer's current position,
composing them into a float value according to the current byte order,
and then increments the position by four.  </p>

@return  The float value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than four bytes
         remaining in this buffer"
      end

      operation 7310363 "putFloat"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a float
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given float value, in the
current byte order, into this buffer at the current position, and then
increments the position by four.  </p>

@param  value
        The float value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than four bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7310491 "getFloat"
	abstract public explicit_return_type "float"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a float value.

<p> Reads four bytes at the given index, composing them into a
float value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The float value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three"
      end

      operation 7310619 "putFloat"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a float
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes four bytes containing the given float value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The float value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus three

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7310747 "asFloatBuffer"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a float buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
four, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new float buffer"
      end

      operation 7310875 "getDouble"
	abstract public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>get</i> method for reading a double value.

<p> Reads the next eight bytes at this buffer's current position,
composing them into a double value according to the current byte order,
and then increments the position by eight.  </p>

@return  The double value at the buffer's current position

@throws  BufferUnderflowException
         If there are fewer than eight bytes
         remaining in this buffer"
      end

      operation 7311003 "putDouble"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "value" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method for writing a double
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given double value, in the
current byte order, into this buffer at the current position, and then
increments the position by eight.  </p>

@param  value
        The double value to be written

@return  This buffer

@throws  BufferOverflowException
         If there are fewer than eight bytes
         remaining in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7311131 "getDouble"
	abstract public explicit_return_type "double"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method for reading a double value.

<p> Reads eight bytes at the given index, composing them into a
double value according to the current byte order.  </p>

@param  index
        The index from which the bytes will be read

@return  The double value at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven"
      end

      operation 7311259 "putDouble"
	abstract public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "value" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method for writing a double
value&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes eight bytes containing the given double value, in the
current byte order, into this buffer at the given index.  </p>

@param  index
        The index at which the bytes will be written

@param  value
        The double value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit,
         minus seven

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7311387 "asDoubleBuffer"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a view of this byte buffer as a double buffer.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of bytes remaining in this buffer divided by
eight, and its mark will be undefined.  The new buffer will be direct
if, and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  A new double buffer"
      end
    end

    class 348059 "ByteOrder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A typesafe enumeration for byte orders.

@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.13, 03/12/19
@since 1.4"
      attribute 2810139 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7373211 "ByteOrder"
	private explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1829787 // BIG_ENDIAN (<unidirectional association>)
	relation 1829787 --->
	  a role_name "BIG_ENDIAN" init_value "=  new ByteOrder(\"BIG_ENDIAN\")" class_relation const_relation public
	    comment "
Constant denoting big-endian byte order.  In this order, the bytes of a
multibyte value are ordered from most significant to least significant.
</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1829787 // BIG_ENDIAN (<unidirectional association>)
	  b parent class_ref 348059 // ByteOrder
      end

      classrelation 1829915 // LITTLE_ENDIAN (<unidirectional association>)
	relation 1829915 --->
	  a role_name "LITTLE_ENDIAN" init_value "=  new ByteOrder(\"LITTLE_ENDIAN\")" class_relation const_relation public
	    comment "
Constant denoting little-endian byte order.  In this order, the bytes of
a multibyte value are ordered from least significant to most
significant.  </p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1829915 // LITTLE_ENDIAN (<unidirectional association>)
	  b parent class_ref 348059 // ByteOrder
      end

      operation 7373339 "nativeOrder"
	class_operation public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the native byte order of the underlying platform.

<p> This method is defined so that performance-sensitive Java code can
allocate direct buffers with the same byte order as the hardware.
Native code libraries are often more efficient when such buffers are
used.  </p>

@return  The native byte order of the hardware upon which this Java
         virtual machine is running"
      end

      operation 7373467 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string describing this object.

<p> This method returns the string <tt>\"BIG_ENDIAN\"</tt> for {@link
#BIG_ENDIAN} and <tt>\"LITTLE_ENDIAN\"</tt> for {@link #LITTLE_ENDIAN}.
</p>

@return  The specified string"
      end
    end

    class 573467 "CharBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 573467 // CharBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A character buffer.

<p> This class defines four categories of operations upon
character buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(char) </code><i>put</i><code>} methods that read and write
  single characters; </p></li>

  <li><p> Relative {@link #get(char[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of characters from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(char[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of characters from a
  character array,&#32;a&#32;string, or some other character
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a character buffer.  </p></li>

</ul>

<p> Character buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(char[]) </code><i>wrapping</i><code>} an existing
character array or&#32;string into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a character buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
character buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A character buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a character buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>





<p> This class implements the {@link CharSequence} interface so that
character buffers may be used wherever character sequences are accepted, for
example in the regular-expression package <tt>{@link java.util.regex}</tt>.
</p>







<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


















The sequence of statements

<blockquote><pre>
cb.put(\"text/\");
cb.put(subtype);
cb.put(\"; charset=\");
cb.put(enc);</pre></blockquote>

can, for example, be replaced by the single statement

<blockquote><pre>
cb.put(\"text/\").put(subtype).put(\"; charset=\").put(enc);</pre></blockquote>




@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1823259 // <generalisation>
	relation 1823259 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1823259 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1823387 // <realization>
	relation 1823387 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1823387 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      classrelation 1823515 // <realization>
	relation 1823515 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1823515 // <realization>
	  b parent class_ref 573851 // Appendable
      end

      classrelation 1823643 // <realization>
	relation 1823643 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1823643 // <realization>
	  b parent class_ref 393755 // CharSequence
      end

      classrelation 1823771 // <realization>
	relation 1823771 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1823771 // <realization>
	  b parent class_ref 573339 // Readable
      end

      attribute 2806299 "hb"
	const_attribute package explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2806427 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2806555 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7311515 "CharBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "char"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7311643 "CharBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7311771 "allocate"
	class_operation public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new character buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in characters

@return  The new character buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7311899 "wrap"
	class_operation public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "array" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a character array into a buffer.

<p> The new buffer will be backed by the given character array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new character buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7312027 "wrap"
	class_operation public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "array" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a character array into a buffer.

<p> The new buffer will be backed by the given character array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new character buffer"
      end

      operation 7312155 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "target" type class_ref 573467 // CharBuffer
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to read characters into the specified character buffer.
The buffer is used as a repository of characters as-is: the only
changes made are the results of a put operation. No flipping or
rewinding of the buffer is performed.

@param target the buffer to read characters into
@return The number of characters added to the buffer, or 
        -1 if this source of characters is at its end
@throws IOException if an I/O error occurs
@throws NullPointerException if target is null
@throws ReadOnlyBufferException if target is a read only buffer"
      end

      operation 7312283 "wrap"
	class_operation public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param inout name "csq" type class_ref 393755 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a character sequence into a buffer.

<p> The content of the new, read-only buffer will be the content of the
given character sequence.  The buffer's capacity will be
<tt>csq.length()</tt>, its position will be <tt>start</tt>, its limit
will be <tt>end</tt>, and its mark will be undefined.  </p>

@param  csq
        The character sequence from which the new character buffer is to
        be created

@param  start
        The index of the first character to be used;
        must be non-negative and no larger than <tt>csq.length()</tt>.
        The new buffer's position will be set to this value.

@param  end
        The index of the character following the last character to be
        used; must be no smaller than <tt>start</tt> and no larger
        than <tt>csq.length()</tt>.
        The new buffer's limit will be set to this value.

@return  The new character buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>start</tt> and <tt>end</tt>
         parameters do not hold"
      end

      operation 7312411 "wrap"
	class_operation public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "csq" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a string into a buffer.

<p> The content of the new, read-only buffer will be the content of the
given string.  The new buffer's capacity and limit will be
<tt>csq.length()</tt>, its position will be zero, and its mark will be
undefined.  </p>

@param  csq
        The character sequence from which the new character buffer is to
        be created

@return  The new character buffer"
      end

      operation 7312539 "slice"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new character buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of characters remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new character buffer"
      end

      operation 7312667 "duplicate"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new character buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new character buffer"
      end

      operation 7312795 "asReadOnlyBuffer"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only character buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only character buffer"
      end

      operation 7312923 "get"
	abstract public explicit_return_type "char"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the character at this buffer's
current position, and then increments the position. </p>

@return  The character at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7313051 "put"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given character into this buffer at the current
position, and then increments the position. </p>

@param  c
        The character to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7313179 "get"
	abstract public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the character at the given
index. </p>

@param  index
        The index from which the character will be read

@return  The character at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7313307 "put"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given character into this buffer at the given
index. </p>

@param  index
        The index at which the character will be written

@param  c
        The character value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7313435 "get"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "dst" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers characters from this buffer into the given
destination array.  If there are fewer characters remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
characters are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> characters from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient characters in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which characters are to be written

@param  offset
        The offset within the array of the first character to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of characters to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> characters
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7313563 "get"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "dst" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers characters from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> characters
         remaining in this buffer"
      end

      operation 7313691 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the characters remaining in the given source
buffer into this buffer.  If there are more characters remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no characters are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> characters from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which characters are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining characters in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7313819 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers characters into this buffer from the given
source array.  If there are more characters to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
characters are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> characters from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which characters are to be read

@param  offset
        The offset within the array of the first character to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of characters to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7313947 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "src" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
character array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7314075 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "String"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers characters from the given string into this
buffer.  If there are more characters to be copied from the string than
remain in this buffer, that is, if
<tt>end&nbsp;-&nbsp;start</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no characters are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>end</tt>&nbsp;-&nbsp;<tt>start</tt> characters
from the given string into this buffer, starting at the given
<tt>start</tt> index and at the current position of this buffer.  The
position of this buffer is then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;start,&nbsp;end)</tt> has exactly the same effect
as the loop

<pre>
    for (int i = start; i < end; i++)
        dst.put(src.charAt(i)); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The string from which characters are to be read

@param  start
        The offset within the string of the first character to be read;
        must be non-negative and no larger than
        <tt>string.length()</tt>

@param  end
        The offset within the string of the last character to be read,
        plus one; must be non-negative and no larger than
        <tt>string.length()</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>start</tt> and <tt>end</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7314203 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "src" explicit_type "String"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source string
into this buffer.  An invocation of this method of the form
<tt>dst.put(s)</tt> behaves in exactly the same way as the invocation

<pre>
    dst.put(s, 0, s.length()) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7314331 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible character
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7314459 "array"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7314587 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7314715 "compact"
	abstract public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The characters between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
character at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the character at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the character at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of characters copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7314843 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this character buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7314971 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a char buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7315099 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two char buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A char buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7315227 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two char buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A char buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7315355 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --

Returns a string containing the characters in this buffer.

<p> The first character of the resulting string will be the character at
this buffer's position, while the last character will be the character
at index <tt>limit()</tt>&nbsp;-&nbsp;1.  Invoking this method does not
change the buffer's position. </p>

@return  The specified string"
      end

      operation 7315483 "toString"
	abstract package explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7315611 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private
 --- Methods to support CharSequence ---

Returns the length of this character buffer.

<p> When viewed as a character sequence, the length of a character
buffer is simply the number of characters between the position
(inclusive) and the limit (exclusive); that is, it is equivalent to
<tt>remaining()</tt>. </p>

@return  The length of this character buffer"
      end

      operation 7315739 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the character at the given index relative to the current
position. </p>

@param  index
        The index of the character to be read, relative to the position; 
        must be non-negative and smaller than <tt>remaining()</tt>

@return  The character at index
         <tt>position()</tt>&nbsp;+&nbsp;index</tt>

@throws  IndexOutOfBoundsException
         If the preconditions on <tt>index</tt> do not hold"
      end

      operation 7315867 "subSequence"
	abstract public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new character buffer that represents the specified subsequence
of this buffer, relative to the current position.

<p> The new buffer will share this buffer's content; that is, if the
content of this buffer is mutable then modifications to one buffer will
cause the other to be modified.  The new buffer's capacity will be that
of this buffer, its position will be
<tt>position()</tt>&nbsp;+&nbsp;<tt>start</tt>, and its limit will be
<tt>position()</tt>&nbsp;+&nbsp;<tt>end</tt>.  The new buffer will be
direct if, and only if, this buffer is direct, and it will be read-only
if, and only if, this buffer is read-only.  </p>

@param  start
        The index, relative to the current position, of the first
        character in the subsequence; must be non-negative and no larger 
        than <tt>remaining()</tt>

@param  end
        The index, relative to the current position, of the character
        following the last character in the subsequence; must be no
        smaller than <tt>start</tt> and no larger than
        <tt>remaining()</tt>

@return  The new character buffer

@throws  IndexOutOfBoundsException
         If the preconditions on <tt>start</tt> and <tt>end</tt>
         do not hold"
      end

      operation 7315995 "append"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "csq" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support Appendable ---

Appends the specified character sequence  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(csq)</tt>
behaves in exactly the same way as the invocation

<pre>
    dst.put(csq.toString()) </pre>

<p> Depending on the specification of <tt>toString</tt> for the
character sequence <tt>csq</tt>, the entire sequence may not be
appended.  For instance, invoking the {@link CharBuffer#toString()
toString} method of a character buffer will return a subsequence whose
content depends upon the buffer's position and limit.

@param  csq
        The character sequence to append.  If <tt>csq</tt> is
        <tt>null</tt>, then the four characters <tt>\"null\"</tt> are
        appended to this character buffer.

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5"
      end

      operation 7316123 "append"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param inout name "csq" type class_ref 393755 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a subsequence of the  specified character sequence  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(csq, start,
end)</tt> when <tt>csq</tt> is not <tt>null</tt>, behaves in exactly the
same way as the invocation

<pre>
    dst.put(csq.subSequence(start, end).toString()) </pre>

@param  csq
        The character sequence from which a subsequence will be
        appended.  If <tt>csq</tt> is <tt>null</tt>, then characters
        will be appended as if <tt>csq</tt> contained the four
        characters <tt>\"null\"</tt>.

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If <tt>start</tt> or <tt>end</tt> are negative, <tt>start</tt>
         is greater than <tt>end</tt>, or <tt>end</tt> is greater than
         <tt>csq.length()</tt>

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5"
      end

      operation 7316251 "append"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified character  to this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> An invocation of this method of the form <tt>dst.append(c)</tt>
behaves in exactly the same way as the invocation

<pre>
    dst.put(c) </pre>

@param  c
        The 16-bit character to append

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only

@since  1.5"
      end

      operation 7316379 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a character buffer created by allocation or by
wrapping an existing <tt>char</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a character buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 934299 "Bits"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Access to bits, native and otherwise."
      operation 7285915 "Bits"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7286043 "swap"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Swapping --"
      end

      operation 7286171 "swap"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7286299 "swap"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7286427 "swap"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7286555 "makeChar"
	class_operation private explicit_return_type "char"
	nparams 2
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put char --"
      end

      operation 7286683 "getCharL"
	class_operation package explicit_return_type "char"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7286811 "getCharL"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7286939 "getCharB"
	class_operation package explicit_return_type "char"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287067 "getCharB"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287195 "getChar"
	class_operation package explicit_return_type "char"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287323 "getChar"
	class_operation package explicit_return_type "char"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287451 "char1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287579 "char0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287707 "putCharL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287835 "putCharL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7287963 "putCharB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288091 "putCharB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288219 "putChar"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "char"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288347 "putChar"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288475 "makeShort"
	class_operation private explicit_return_type "short"
	nparams 2
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put short --"
      end

      operation 7288603 "getShortL"
	class_operation package explicit_return_type "short"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288731 "getShortL"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288859 "getShortB"
	class_operation package explicit_return_type "short"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7288987 "getShortB"
	class_operation package explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289115 "getShort"
	class_operation package explicit_return_type "short"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289243 "getShort"
	class_operation package explicit_return_type "short"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289371 "short1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289499 "short0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289627 "putShortL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289755 "putShortL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7289883 "putShortB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290011 "putShortB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290139 "putShort"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "short"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290267 "putShort"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290395 "makeInt"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "b3" explicit_type "byte"
	  param in name "b2" explicit_type "byte"
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put int --"
      end

      operation 7290523 "getIntL"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290651 "getIntL"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290779 "getIntB"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7290907 "getIntB"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291035 "getInt"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291163 "getInt"
	class_operation package explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291291 "int3"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291419 "int2"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291547 "int1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291675 "int0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291803 "putIntL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7291931 "putIntL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292059 "putIntB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292187 "putIntB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292315 "putInt"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292443 "putInt"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292571 "makeLong"
	class_operation private explicit_return_type "long"
	nparams 8
	  param in name "b7" explicit_type "byte"
	  param in name "b6" explicit_type "byte"
	  param in name "b5" explicit_type "byte"
	  param in name "b4" explicit_type "byte"
	  param in name "b3" explicit_type "byte"
	  param in name "b2" explicit_type "byte"
	  param in name "b1" explicit_type "byte"
	  param in name "b0" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put long --"
      end

      operation 7292699 "getLongL"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292827 "getLongL"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7292955 "getLongB"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293083 "getLongB"
	class_operation package explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293211 "getLong"
	class_operation package explicit_return_type "long"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293339 "getLong"
	class_operation package explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293467 "long7"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293595 "long6"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293723 "long5"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293851 "long4"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7293979 "long3"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294107 "long2"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294235 "long1"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294363 "long0"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294491 "putLongL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294619 "putLongL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294747 "putLongB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7294875 "putLongB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295003 "putLong"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295131 "putLong"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295259 "getFloatL"
	class_operation package explicit_return_type "float"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put float --"
      end

      operation 7295387 "getFloatL"
	class_operation package explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295515 "getFloatB"
	class_operation package explicit_return_type "float"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295643 "getFloatB"
	class_operation package explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295771 "getFloat"
	class_operation package explicit_return_type "float"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7295899 "getFloat"
	class_operation package explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296027 "putFloatL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296155 "putFloatL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296283 "putFloatB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296411 "putFloatB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296539 "putFloat"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "float"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296667 "putFloat"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7296795 "getDoubleL"
	class_operation package explicit_return_type "double"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- get/put double --"
      end

      operation 7296923 "getDoubleL"
	class_operation package explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297051 "getDoubleB"
	class_operation package explicit_return_type "double"
	nparams 2
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297179 "getDoubleB"
	class_operation package explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297307 "getDouble"
	class_operation package explicit_return_type "double"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297435 "getDouble"
	class_operation package explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "long"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297563 "putDoubleL"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297691 "putDoubleL"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297819 "putDoubleB"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7297947 "putDoubleB"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7298075 "putDouble"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "bi" explicit_type "int"
	  param in name "x" explicit_type "double"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7298203 "putDouble"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	  param inout name "bigEndian" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2803867 "unsafe"
	class_attribute const_attribute private explicit_type "Unsafe"
	init_value "=  Unsafe.getUnsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Unsafe access --"
      end

      operation 7298331 "_get"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7298459 "_put"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7298587 "unsafe"
	class_operation package explicit_return_type "Unsafe"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1822619 // byteOrder (<unidirectional association>)
	relation 1822619 --->
	  a role_name "byteOrder" init_value "=  null" class_relation private
	    comment " -- Processor and memory-system properties --
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1822619 // byteOrder (<unidirectional association>)
	  b parent class_ref 348059 // ByteOrder
      end

      operation 7298715 "byteOrder"
	class_operation package return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2803995 "pageSize"
	class_attribute private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7298843 "pageSize"
	class_operation package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2804123 "unaligned"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2804251 "unalignedKnown"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7298971 "unaligned"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2804379 "maxMemory"
	class_attribute volatile private explicit_type "long"
	init_value "=  VM.maxDirectMemory()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Direct memory management --
 A user-settable upper limit on the maximum amount of allocatable
 direct buffer memory.  This value may be changed during VM
 initialization if it is launched with \"-XX:MaxDirectMemorySize=<size>\"."
      end

      attribute 2804507 "reservedMemory"
	class_attribute volatile private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2804635 "memoryLimitSet"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7299099 "reserveMemory"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods should be called whenever direct memory is allocated or
 freed.  They allow the user to control the amount of direct memory
 which a process may access.  All sizes are specified in bytes."
      end

      operation 7299227 "unreserveMemory"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2804763 "JNI_COPY_TO_ARRAY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Bulk get/put acceleration --
 These numbers represent the point at which we have empirically
 determined that the average cost of a JNI call exceeds the expense
 of an element by element copy.  These numbers may change over time."
      end

      attribute 2804891 "JNI_COPY_FROM_ARRAY_THRESHOLD"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7299355 "copyFromByteArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" explicit_type "Object"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These methods do no bounds checking.  Verification that the copy will not
 result in memory corruption should be done prior to invocation.
 All positions and lengths are specified in bytes."
      end

      operation 7299483 "copyToByteArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" explicit_type "Object"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7299611 "copyFromCharArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" explicit_type "Object"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7299739 "copyToCharArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" explicit_type "Object"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7299867 "copyFromShortArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" explicit_type "Object"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7299995 "copyToShortArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" explicit_type "Object"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7300123 "copyFromIntArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" explicit_type "Object"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7300251 "copyToIntArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" explicit_type "Object"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7300379 "copyFromLongArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "src" explicit_type "Object"
	  param in name "srcPos" explicit_type "long"
	  param in name "dstAddr" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7300507 "copyToLongArray"
	class_operation package explicit_return_type "void"
	nparams 4
	  param in name "srcAddr" explicit_type "long"
	  param inout name "dst" explicit_type "Object"
	  param in name "dstPos" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 934427 "Buffer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A container for data of a specific primitive type.

<p> A buffer is a linear, finite sequence of elements of a specific
primitive type.  Aside from its content, the essential properties of a
buffer are its capacity, limit, and position: </p>

<blockquote>

  <p> A buffer's <i>capacity</i> is the number of elements it contains.  The
  capacity of a buffer is never negative and never changes.  </p>

  <p> A buffer's <i>limit</i> is the index of the first element that should
  not be read or written.  A buffer's limit is never negative and is never
  greater than its capacity.  </p>

  <p> A buffer's <i>position</i> is the index of the next element to be
  read or written.  A buffer's position is never negative and is never
  greater than its limit.  </p>

</blockquote>

<p> There is one subclass of this class for each non-boolean primitive type.


<h4> Transferring data </h4>

<p> Each subclass of this class defines two categories of <i>get</i> and
<i>put</i> operations: </p>

<blockquote>

  <p> <i>Relative</i> operations read or write one or more elements starting
  at the current position and then increment the position by the number of
  elements transferred.  If the requested transfer exceeds the limit then a
  relative <i>get</i> operation throws a {@link BufferUnderflowException}
  and a relative <i>put</i> operation throws a {@link
  BufferOverflowException}; in either case, no data is transferred.  </p>

  <p> <i>Absolute</i> operations take an explicit element index and do not
  affect the position.  Absolute <i>get</i> and <i>put</i> operations throw
  an {@link IndexOutOfBoundsException} if the index argument exceeds the
  limit.  </p>

</blockquote>

<p> Data may also, of course, be transferred in to or out of a buffer by the
I/O operations of an appropriate channel, which are always relative to the
current position.


<h4> Marking and resetting </h4>

<p> A buffer's <i>mark</i> is the index to which its position will be reset
when the {@link #reset reset} method is invoked.  The mark is not always
defined, but when it is defined it is never negative and is never greater
than the position.  If the mark is defined then it is discarded when the
position or the limit is adjusted to a value smaller than the mark.  If the
mark is not defined then invoking the {@link #reset reset} method causes an
{@link InvalidMarkException} to be thrown.


<h4> Invariants </h4>

<p> The following invariant holds for the mark, position, limit, and
capacity values:

<blockquote>
    <tt>0</tt> <tt>&lt;=</tt>
    <i>mark</i> <tt>&lt;=</tt>
    <i>position</i> <tt>&lt;=</tt>
    <i>limit</i> <tt>&lt;=</tt>
    <i>capacity</i>
</blockquote>

<p> A newly-created buffer always has a position of zero and a mark that is
undefined.  The initial limit may be zero, or it may be some other value
that depends upon the type of the buffer and the manner in which it is
constructed.  The initial content of a buffer is, in general,
undefined.


<h4> Clearing, flipping, and rewinding </h4>

<p> In addition to methods for accessing the position, limit, and capacity
values and for marking and resetting, this class also defines the following
operations upon buffers:

<ul>

  <li><p> {@link #clear} makes a buffer ready for a new sequence of
  channel-read or relative <i>put</i> operations: It sets the limit to the
  capacity and the position to zero.  </p></li>

  <li><p> {@link #flip} makes a buffer ready for a new sequence of
  channel-write or relative <i>get</i> operations: It sets the limit to the
  current position and then sets the position to zero.  </p></li>

  <li><p> {@link #rewind} makes a buffer ready for re-reading the data that
  it already contains: It leaves the limit unchanged and sets the position
  to zero.  </p></li>

</ul>


<h4> Read-only buffers </h4>

<p> Every buffer is readable, but not every buffer is writable.  The
mutation methods of each buffer class are specified as <i>optional
operations</i> that will throw a {@link ReadOnlyBufferException} when
invoked upon a read-only buffer.  A read-only buffer does not allow its
content to be changed, but its mark, position, and limit values are mutable.
Whether or not a buffer is read-only may be determined by invoking its
{@link #isReadOnly isReadOnly} method.


<h4> Thread safety </h4>

<p> Buffers are not safe for use by multiple concurrent threads.  If a
buffer is to be used by more than one thread then access to the buffer
should be controlled by appropriate synchronization.


<h4> Invocation chaining </h4>

<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained; for example, the sequence of statements

<blockquote><pre>
b.flip();
b.position(23);
b.limit(42);</pre></blockquote>

can be replaced by the single, more compact statement

<blockquote><pre>
b.flip().position(23).limit(42);</pre></blockquote>


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.35, 06/08/11
@since 1.4"
      attribute 2805019 "mark"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Invariants: mark <= position <= limit <= capacity"
      end

      attribute 2805147 "position"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2805275 "limit"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2805403 "capacity"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2805531 "address"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used only by direct buffers
 NOTE: hoisted here for speed in JNI GetDirectBufferAddress"
      end

      operation 7300635 "Buffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity,
 after checking invariants."
      end

      operation 7300763 "capacity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's capacity. </p>

@return  The capacity of this buffer"
      end

      operation 7300891 "position"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's position. </p>

@return  The position of this buffer"
      end

      operation 7301019 "position"
	public return_type class_ref 934427 // Buffer
	nparams 1
	  param in name "newPosition" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's position.  If the mark is defined and larger than the
new position then it is discarded. </p>

@param  newPosition
        The new position value; must be non-negative
        and no larger than the current limit

@return  This buffer

@throws  IllegalArgumentException
         If the preconditions on <tt>newPosition</tt> do not hold"
      end

      operation 7301147 "limit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this buffer's limit. </p>

@return  The limit of this buffer"
      end

      operation 7301275 "limit"
	public return_type class_ref 934427 // Buffer
	nparams 1
	  param in name "newLimit" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's limit.  If the position is larger than the new limit
then it is set to the new limit.  If the mark is defined and larger than
the new limit then it is discarded. </p>

@param  newLimit
        The new limit value; must be non-negative
        and no larger than this buffer's capacity

@return  This buffer

@throws  IllegalArgumentException
         If the preconditions on <tt>newLimit</tt> do not hold"
      end

      operation 7301403 "mark"
	public return_type class_ref 934427 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this buffer's mark at its position. </p>

@return  This buffer"
      end

      operation 7301531 "reset"
	public return_type class_ref 934427 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this buffer's position to the previously-marked position.

<p> Invoking this method neither changes nor discards the mark's
value. </p>

@return  This buffer

@throws  InvalidMarkException
         If the mark has not been set"
      end

      operation 7301659 "clear"
	public return_type class_ref 934427 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears this buffer.  The position is set to zero, the limit is set to
the capacity, and the mark is discarded.

<p> Invoke this method before using a sequence of channel-read or
<i>put</i> operations to fill this buffer.  For example:

<blockquote><pre>
buf.clear();     // Prepare buffer for reading
in.read(buf);    // Read data</pre></blockquote>

<p> This method does not actually erase the data in the buffer, but it
is named as if it did because it will most often be used in situations
in which that might as well be the case. </p>

@return  This buffer"
      end

      operation 7301787 "flip"
	public return_type class_ref 934427 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips this buffer.  The limit is set to the current position and then
the position is set to zero.  If the mark is defined then it is
discarded.

<p> After a sequence of channel-read or <i>put</i> operations, invoke
this method to prepare for a sequence of channel-write or relative
<i>get</i> operations.  For example:

<blockquote><pre>
buf.put(magic);    // Prepend header
in.read(buf);      // Read data into rest of buffer
buf.flip();        // Flip buffer
out.write(buf);    // Write header + data to channel</pre></blockquote>

<p> This method is often used in conjunction with the {@link
java.nio.ByteBuffer#compact compact} method when transferring data from
one place to another.  </p>

@return  This buffer"
      end

      operation 7301915 "rewind"
	public return_type class_ref 934427 // Buffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rewinds this buffer.  The position is set to zero and the mark is
discarded.

<p> Invoke this method before a sequence of channel-write or <i>get</i>
operations, assuming that the limit has already been set
appropriately.  For example:

<blockquote><pre>
out.write(buf);    // Write remaining data
buf.rewind();      // Rewind buffer
buf.get(array);    // Copy data into array</pre></blockquote>

@return  This buffer"
      end

      operation 7302043 "remaining"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of elements between the current position and the
limit. </p>

@return  The number of elements remaining in this buffer"
      end

      operation 7302171 "hasRemaining"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether there are any elements between the current position and
the limit. </p>

@return  <tt>true</tt> if, and only if, there is at least one element
         remaining in this buffer"
      end

      operation 7302299 "isReadOnly"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is read-only. </p>

@return  <tt>true</tt> if, and only if, this buffer is read-only"
      end

      operation 7302427 "nextGetIndex"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Package-private methods for bounds checking, etc. --

Checks the current position against the limit, throwing a {@link
BufferUnderflowException} if it is not smaller than the limit, and then
increments the position. </p>

@return  The current position value, before it is incremented"
      end

      operation 7302555 "nextGetIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7302683 "nextPutIndex"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the current position against the limit, throwing a {@link
BufferOverflowException} if it is not smaller than the limit, and then
increments the position. </p>

@return  The current position value, before it is incremented"
      end

      operation 7302811 "nextPutIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7302939 "checkIndex"
	package explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the given index against the limit, throwing an {@link
IndexOutOfBoundsException} if it is not smaller than the limit
or is smaller than zero."
      end

      operation 7303067 "checkIndex"
	package explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "nb" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7303195 "markValue"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7303323 "checkBounds"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 934555 "BufferOverflowException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Unchecked exception thrown when a relative <i>put</i> operation reaches
the target buffer's limit.

@version 1.14, 01/05/02
@since 1.4"
      classrelation 1822747 // <generalisation>
	relation 1822747 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1822747 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      operation 7303451 "BufferOverflowException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class."
      end
    end

    class 934683 "BufferUnderflowException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Unchecked exception thrown when a relative <i>get</i> operation reaches
the source buffer's limit.

@version 1.14, 01/05/02
@since 1.4"
      classrelation 1822875 // <generalisation>
	relation 1822875 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1822875 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      operation 7303579 "BufferUnderflowException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class."
      end
    end

    class 934811 "ShortBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 934811 // ShortBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A short buffer.

<p> This class defines four categories of operations upon
short buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(short) </code><i>put</i><code>} methods that read and write
  single shorts; </p></li>

  <li><p> Relative {@link #get(short[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of shorts from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(short[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of shorts from a
  short array or some other short
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a short buffer.  </p></li>

</ul>

<p> Short buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(short[]) </code><i>wrapping</i><code>} an existing
short array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a short buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
short buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A short buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a short buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1828763 // <generalisation>
	relation 1828763 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1828763 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1828891 // <realization>
	relation 1828891 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1828891 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2809499 "hb"
	const_attribute package explicit_type "short"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2809627 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2809755 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7363355 "ShortBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "short"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7363483 "ShortBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7363611 "allocate"
	class_operation public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new short buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in shorts

@return  The new short buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7363739 "wrap"
	class_operation public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "array" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a short array into a buffer.

<p> The new buffer will be backed by the given short array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new short buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7363867 "wrap"
	class_operation public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "array" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a short array into a buffer.

<p> The new buffer will be backed by the given short array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new short buffer"
      end

      operation 7363995 "slice"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new short buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of shorts remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new short buffer"
      end

      operation 7364123 "duplicate"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new short buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new short buffer"
      end

      operation 7364251 "asReadOnlyBuffer"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only short buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only short buffer"
      end

      operation 7364379 "get"
	abstract public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the short at this buffer's
current position, and then increments the position. </p>

@return  The short at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7364507 "put"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "s" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given short into this buffer at the current
position, and then increments the position. </p>

@param  s
        The short to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7364635 "get"
	abstract public explicit_return_type "short"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the short at the given
index. </p>

@param  index
        The index from which the short will be read

@return  The short at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7364763 "put"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "s" explicit_type "short"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given short into this buffer at the given
index. </p>

@param  index
        The index at which the short will be written

@param  s
        The short value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7364891 "get"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "dst" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers shorts from this buffer into the given
destination array.  If there are fewer shorts remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
shorts are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> shorts from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient shorts in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which shorts are to be written

@param  offset
        The offset within the array of the first short to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of shorts to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> shorts
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7365019 "get"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "dst" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers shorts from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> shorts
         remaining in this buffer"
      end

      operation 7365147 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the shorts remaining in the given source
buffer into this buffer.  If there are more shorts remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no shorts are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> shorts from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which shorts are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining shorts in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7365275 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers shorts into this buffer from the given
source array.  If there are more shorts to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
shorts are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> shorts from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which shorts are to be read

@param  offset
        The offset within the array of the first short to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of shorts to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7365403 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "src" explicit_type "short"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
short array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7365531 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible short
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7365659 "array"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the short array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7365787 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7365915 "compact"
	abstract public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The shorts between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
short at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the short at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the short at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of shorts copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7366043 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this short buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7366171 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7366299 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a short buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7366427 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two short buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A short buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7366555 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two short buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A short buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7366683 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a short buffer created by allocation or by
wrapping an existing <tt>short</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a short buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 934939 "IntBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 934939 // IntBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An int buffer.

<p> This class defines four categories of operations upon
int buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(int) </code><i>put</i><code>} methods that read and write
  single ints; </p></li>

  <li><p> Relative {@link #get(int[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of ints from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(int[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of ints from an
  int array or some other int
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a int buffer.  </p></li>

</ul>

<p> Int buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(int[]) </code><i>wrapping</i><code>} an existing
int array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a int buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
int buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A int buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a int buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1826715 // <generalisation>
	relation 1826715 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1826715 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1826843 // <realization>
	relation 1826843 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1826843 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2808219 "hb"
	const_attribute package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2808347 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2808475 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7343643 "IntBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "int"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7343771 "IntBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7343899 "allocate"
	class_operation public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new int buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in ints

@return  The new int buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7344027 "wrap"
	class_operation public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "array" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a int array into a buffer.

<p> The new buffer will be backed by the given int array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new int buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7344155 "wrap"
	class_operation public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "array" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a int array into a buffer.

<p> The new buffer will be backed by the given int array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new int buffer"
      end

      operation 7344283 "slice"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new int buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of ints remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new int buffer"
      end

      operation 7344411 "duplicate"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new int buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new int buffer"
      end

      operation 7344539 "asReadOnlyBuffer"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only int buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only int buffer"
      end

      operation 7344667 "get"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the int at this buffer's
current position, and then increments the position. </p>

@return  The int at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7344795 "put"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given int into this buffer at the current
position, and then increments the position. </p>

@param  i
        The int to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7344923 "get"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the int at the given
index. </p>

@param  index
        The index from which the int will be read

@return  The int at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7345051 "put"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given int into this buffer at the given
index. </p>

@param  index
        The index at which the int will be written

@param  i
        The int value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7345179 "get"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "dst" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers ints from this buffer into the given
destination array.  If there are fewer ints remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
ints are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> ints from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient ints in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which ints are to be written

@param  offset
        The offset within the array of the first int to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of ints to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> ints
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7345307 "get"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "dst" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers ints from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> ints
         remaining in this buffer"
      end

      operation 7345435 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the ints remaining in the given source
buffer into this buffer.  If there are more ints remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no ints are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> ints from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which ints are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining ints in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7345563 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers ints into this buffer from the given
source array.  If there are more ints to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
ints are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> ints from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which ints are to be read

@param  offset
        The offset within the array of the first int to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of ints to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7345691 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "src" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
int array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7345819 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible int
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7345947 "array"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the int array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7346075 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7346203 "compact"
	abstract public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The ints between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
int at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the int at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the int at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of ints copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7346331 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this int buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7346459 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7346587 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a int buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7346715 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two int buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A int buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7346843 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two int buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A int buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7346971 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a int buffer created by allocation or by
wrapping an existing <tt>int</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a int buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 935067 "LongBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 935067 // LongBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A long buffer.

<p> This class defines four categories of operations upon
long buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(long) </code><i>put</i><code>} methods that read and write
  single longs; </p></li>

  <li><p> Relative {@link #get(long[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of longs from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(long[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of longs from a
  long array or some other long
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a long buffer.  </p></li>

</ul>

<p> Long buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(long[]) </code><i>wrapping</i><code>} an existing
long array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a long buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
long buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A long buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a long buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1827739 // <generalisation>
	relation 1827739 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1827739 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1827867 // <realization>
	relation 1827867 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1827867 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2808859 "hb"
	const_attribute package explicit_type "long"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2808987 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2809115 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7353499 "LongBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "long"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7353627 "LongBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7353755 "allocate"
	class_operation public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new long buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in longs

@return  The new long buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7353883 "wrap"
	class_operation public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "array" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a long array into a buffer.

<p> The new buffer will be backed by the given long array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new long buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7354011 "wrap"
	class_operation public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "array" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a long array into a buffer.

<p> The new buffer will be backed by the given long array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new long buffer"
      end

      operation 7354139 "slice"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new long buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of longs remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new long buffer"
      end

      operation 7354267 "duplicate"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new long buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new long buffer"
      end

      operation 7354395 "asReadOnlyBuffer"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only long buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only long buffer"
      end

      operation 7354523 "get"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the long at this buffer's
current position, and then increments the position. </p>

@return  The long at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7354651 "put"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "l" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given long into this buffer at the current
position, and then increments the position. </p>

@param  l
        The long to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7354779 "get"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the long at the given
index. </p>

@param  index
        The index from which the long will be read

@return  The long at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7354907 "put"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "l" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given long into this buffer at the given
index. </p>

@param  index
        The index at which the long will be written

@param  l
        The long value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7355035 "get"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "dst" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers longs from this buffer into the given
destination array.  If there are fewer longs remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
longs are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> longs from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient longs in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which longs are to be written

@param  offset
        The offset within the array of the first long to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of longs to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> longs
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7355163 "get"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "dst" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers longs from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> longs
         remaining in this buffer"
      end

      operation 7355291 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the longs remaining in the given source
buffer into this buffer.  If there are more longs remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no longs are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> longs from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which longs are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining longs in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7355419 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers longs into this buffer from the given
source array.  If there are more longs to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
longs are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> longs from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which longs are to be read

@param  offset
        The offset within the array of the first long to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of longs to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7355547 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "src" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
long array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7355675 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible long
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7355803 "array"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the long array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7355931 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7356059 "compact"
	abstract public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The longs between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
long at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the long at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the long at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of longs copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7356187 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this long buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7356315 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7356443 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a long buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7356571 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two long buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A long buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7356699 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two long buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A long buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7356827 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a long buffer created by allocation or by
wrapping an existing <tt>long</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a long buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 935195 "FloatBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 935195 // FloatBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A float buffer.

<p> This class defines four categories of operations upon
float buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(float) </code><i>put</i><code>} methods that read and write
  single floats; </p></li>

  <li><p> Relative {@link #get(float[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of floats from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(float[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of floats from a
  float array or some other float
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a float buffer.  </p></li>

</ul>

<p> Float buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(float[]) </code><i>wrapping</i><code>} an existing
float array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a float buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
float buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A float buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a float buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1825691 // <generalisation>
	relation 1825691 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1825691 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1825819 // <realization>
	relation 1825819 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1825819 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2807579 "hb"
	const_attribute package explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2807707 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2807835 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7333787 "FloatBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "float"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7333915 "FloatBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7334043 "allocate"
	class_operation public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new float buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in floats

@return  The new float buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7334171 "wrap"
	class_operation public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "array" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a float array into a buffer.

<p> The new buffer will be backed by the given float array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new float buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7334299 "wrap"
	class_operation public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "array" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a float array into a buffer.

<p> The new buffer will be backed by the given float array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new float buffer"
      end

      operation 7334427 "slice"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new float buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of floats remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new float buffer"
      end

      operation 7334555 "duplicate"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new float buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new float buffer"
      end

      operation 7334683 "asReadOnlyBuffer"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only float buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only float buffer"
      end

      operation 7334811 "get"
	abstract public explicit_return_type "float"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the float at this buffer's
current position, and then increments the position. </p>

@return  The float at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7334939 "put"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "f" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given float into this buffer at the current
position, and then increments the position. </p>

@param  f
        The float to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7335067 "get"
	abstract public explicit_return_type "float"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the float at the given
index. </p>

@param  index
        The index from which the float will be read

@return  The float at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7335195 "put"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "f" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given float into this buffer at the given
index. </p>

@param  index
        The index at which the float will be written

@param  f
        The float value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7335323 "get"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "dst" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers floats from this buffer into the given
destination array.  If there are fewer floats remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
floats are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> floats from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient floats in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which floats are to be written

@param  offset
        The offset within the array of the first float to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of floats to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> floats
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7335451 "get"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "dst" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers floats from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> floats
         remaining in this buffer"
      end

      operation 7335579 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the floats remaining in the given source
buffer into this buffer.  If there are more floats remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no floats are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> floats from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which floats are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining floats in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7335707 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers floats into this buffer from the given
source array.  If there are more floats to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
floats are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> floats from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which floats are to be read

@param  offset
        The offset within the array of the first float to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of floats to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7335835 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "src" explicit_type "float"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
float array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7335963 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible float
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7336091 "array"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the float array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7336219 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7336347 "compact"
	abstract public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The floats between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
float at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the float at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the float at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of floats copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7336475 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this float buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7336603 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7336731 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a float buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7336859 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two float buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A float buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7336987 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two float buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A float buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7337115 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a float buffer created by allocation or by
wrapping an existing <tt>float</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a float buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 935323 "DoubleBuffer"
      abstract visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 935323 // DoubleBuffer
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A double buffer.

<p> This class defines four categories of operations upon
double buffers:

<ul>

  <li><p> Absolute and relative {@link #get() </code><i>get</i><code>} and
  {@link #put(double) </code><i>put</i><code>} methods that read and write
  single doubles; </p></li>

  <li><p> Relative {@link #get(double[]) </code><i>bulk get</i><code>}
  methods that transfer contiguous sequences of doubles from this buffer
  into an array; and</p></li>

  <li><p> Relative {@link #put(double[]) </code><i>bulk put</i><code>}
  methods that transfer contiguous sequences of doubles from a
  double array or some other double
  buffer into this buffer;&#32;and </p></li>














  <li><p> Methods for {@link #compact </code>compacting<code>}, {@link
  #duplicate </code>duplicating<code>}, and {@link #slice
  </code>slicing<code>} a double buffer.  </p></li>

</ul>

<p> Double buffers can be created either by {@link #allocate
</code><i>allocation</i><code>}, which allocates space for the buffer's








content, by {@link #wrap(double[]) </code><i>wrapping</i><code>} an existing
double array  into a buffer, or by creating a
<a href=\"ByteBuffer.html#view\"><i>view</i></a> of an existing byte buffer









































































































<p> Like a byte buffer, a double buffer is either <a
href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A
double buffer created via the <tt>wrap</tt> methods of this class will
be non-direct.  A double buffer created as a view of a byte buffer will
be direct if, and only if, the byte buffer itself is direct.  Whether or not
a double buffer is direct may be determined by invoking the {@link
#isDirect isDirect} method.  </p>
















<p> Methods in this class that do not otherwise have a value to return are
specified to return the buffer upon which they are invoked.  This allows
method invocations to be chained.


































@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.56, 04/07/16
@since 1.4"
      classrelation 1824667 // <generalisation>
	relation 1824667 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1824667 // <generalisation>
	  b parent class_ref 934427 // Buffer
      end

      classrelation 1824795 // <realization>
	relation 1824795 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1824795 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      attribute 2806939 "hb"
	const_attribute package explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These fields are declared here rather than in Heap-X-Buffer in order to
 reduce the number of virtual method invocations needed to access these
 values, which is especially costly when coding small buffers.

 Non-null only for heap buffers"
      end

      attribute 2807067 "offset"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2807195 "isReadOnly"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Valid only for heap buffers"
      end

      operation 7323931 "DoubleBuffer"
	package explicit_return_type ""
	nparams 6
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "hb" explicit_type "double"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, capacity,
 backing array, and array offset
"
      end

      operation 7324059 "DoubleBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new buffer with the given mark, position, limit, and capacity
"
      end

      operation 7324187 "allocate"
	class_operation public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new double buffer.

<p> The new buffer's position will be zero, its limit will be its
capacity, and its mark will be undefined.  It will have a {@link #array
</code>backing array<code>}, and its {@link #arrayOffset </code>array
offset<code>} will be zero.

@param  capacity
        The new buffer's capacity, in doubles

@return  The new double buffer

@throws  IllegalArgumentException
         If the <tt>capacity</tt> is a negative integer"
      end

      operation 7324315 "wrap"
	class_operation public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "array" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a double array into a buffer.

<p> The new buffer will be backed by the given double array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity will be
<tt>array.length</tt>, its position will be <tt>offset</tt>, its limit
will be <tt>offset + length</tt>, and its mark will be undefined.  Its
{@link #array </code>backing array<code>} will be the given array, and
its {@link #arrayOffset </code>array offset<code>} will be zero.  </p>

@param  array
        The array that will back the new buffer

@param  offset
        The offset of the subarray to be used; must be non-negative and
        no larger than <tt>array.length</tt>.  The new buffer's position
        will be set to this value.

@param  length
        The length of the subarray to be used;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>.
        The new buffer's limit will be set to <tt>offset + length</tt>.

@return  The new double buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7324443 "wrap"
	class_operation public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "array" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a double array into a buffer.

<p> The new buffer will be backed by the given double array;
that is, modifications to the buffer will cause the array to be modified
and vice versa.  The new buffer's capacity and limit will be
<tt>array.length</tt>, its position will be zero, and its mark will be
undefined.  Its {@link #array </code>backing array<code>} will be the
given array, and its {@link #arrayOffset </code>array offset<code>} will
be zero.  </p> 

@param  array
        The array that will back this buffer

@return  The new double buffer"
      end

      operation 7324571 "slice"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new double buffer whose content is a shared subsequence of
this buffer's content.

<p> The content of the new buffer will start at this buffer's current
position.  Changes to this buffer's content will be visible in the new
buffer, and vice versa; the two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's position will be zero, its capacity and its limit
will be the number of doubles remaining in this buffer, and its mark
will be undefined.  The new buffer will be direct if, and only if, this
buffer is direct, and it will be read-only if, and only if, this buffer
is read-only.  </p>

@return  The new double buffer"
      end

      operation 7324699 "duplicate"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new double buffer that shares this buffer's content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer, and vice
versa; the two buffers' position, limit, and mark values will be
independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.  The new buffer will be direct if,
and only if, this buffer is direct, and it will be read-only if, and
only if, this buffer is read-only.  </p>

@return  The new double buffer"
      end

      operation 7324827 "asReadOnlyBuffer"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new, read-only double buffer that shares this buffer's
content.

<p> The content of the new buffer will be that of this buffer.  Changes
to this buffer's content will be visible in the new buffer; the new
buffer itself, however, will be read-only and will not allow the shared
content to be modified.  The two buffers' position, limit, and mark
values will be independent.

<p> The new buffer's capacity, limit, position, and mark values will be
identical to those of this buffer.

<p> If this buffer is itself read-only then this method behaves in
exactly the same way as the {@link #duplicate duplicate} method.  </p>

@return  The new, read-only double buffer"
      end

      operation 7324955 "get"
	abstract public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Singleton get/put methods --

Relative <i>get</i> method.  Reads the double at this buffer's
current position, and then increments the position. </p>

@return  The double at the buffer's current position

@throws  BufferUnderflowException
         If the buffer's current position is not smaller than its limit"
      end

      operation 7325083 "put"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "d" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given double into this buffer at the current
position, and then increments the position. </p>

@param  d
        The double to be written

@return  This buffer

@throws  BufferOverflowException
         If this buffer's current position is not smaller than its limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7325211 "get"
	abstract public explicit_return_type "double"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>get</i> method.  Reads the double at the given
index. </p>

@param  index
        The index from which the double will be read

@return  The double at the given index

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit"
      end

      operation 7325339 "put"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "d" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Writes the given double into this buffer at the given
index. </p>

@param  index
        The index at which the double will be written

@param  d
        The double value to be written

@return  This buffer

@throws  IndexOutOfBoundsException
         If <tt>index</tt> is negative
         or not smaller than the buffer's limit

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7325467 "get"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "dst" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk get operations --

Relative bulk <i>get</i> method.

<p> This method transfers doubles from this buffer into the given
destination array.  If there are fewer doubles remaining in the
buffer than are required to satisfy the request, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
doubles are transferred and a {@link BufferUnderflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> doubles from this
buffer into the given array, starting at the current position of this
buffer and at the given offset in the array.  The position of this
buffer is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>src.get(dst,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst[i] = src.get(); </pre>

except that it first checks that there are sufficient doubles in
this buffer and it is potentially much more efficient. </p>

@param  dst
        The array into which doubles are to be written

@param  offset
        The offset within the array of the first double to be
        written; must be non-negative and no larger than
        <tt>dst.length</tt>

@param  length
        The maximum number of doubles to be written to the given
        array; must be non-negative and no larger than
        <tt>dst.length - offset</tt>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> doubles
         remaining in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold"
      end

      operation 7325595 "get"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "dst" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>get</i> method.

<p> This method transfers doubles from this buffer into the given
destination array.  An invocation of this method of the form
<tt>src.get(a)</tt> behaves in exactly the same way as the invocation

<pre>
    src.get(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferUnderflowException
         If there are fewer than <tt>length</tt> doubles
         remaining in this buffer"
      end

      operation 7325723 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Bulk put operations --

Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the doubles remaining in the given source
buffer into this buffer.  If there are more doubles remaining in the
source buffer than in this buffer, that is, if
<tt>src.remaining()</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>,
then no doubles are transferred and a {@link
BufferOverflowException} is thrown.

<p> Otherwise, this method copies
<i>n</i>&nbsp;=&nbsp;<tt>src.remaining()</tt> doubles from the given
buffer into this buffer, starting at each buffer's current position.
The positions of both buffers are then incremented by <i>n</i>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src)</tt> has exactly the same effect as the loop

<pre>
    while (src.hasRemaining())
        dst.put(src.get()); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The source buffer from which doubles are to be read;
        must not be this buffer

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer
         for the remaining doubles in the source buffer

@throws  IllegalArgumentException
         If the source buffer is this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7325851 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers doubles into this buffer from the given
source array.  If there are more doubles to be copied from the array
than remain in this buffer, that is, if
<tt>length</tt>&nbsp;<tt>&gt;</tt>&nbsp;<tt>remaining()</tt>, then no
doubles are transferred and a {@link BufferOverflowException} is
thrown.

<p> Otherwise, this method copies <tt>length</tt> doubles from the
given array into this buffer, starting at the given offset in the array
and at the current position of this buffer.  The position of this buffer
is then incremented by <tt>length</tt>.

<p> In other words, an invocation of this method of the form
<tt>dst.put(src,&nbsp;off,&nbsp;len)</tt> has exactly the same effect as
the loop

<pre>
    for (int i = off; i < off + len; i++)
        dst.put(a[i]); </pre>

except that it first checks that there is sufficient space in this
buffer and it is potentially much more efficient. </p>

@param  src
        The array from which doubles are to be read

@param  offset
        The offset within the array of the first double to be read;
        must be non-negative and no larger than <tt>array.length</tt>

@param  length
        The number of doubles to be read from the given array;
        must be non-negative and no larger than
        <tt>array.length - offset</tt>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  IndexOutOfBoundsException
         If the preconditions on the <tt>offset</tt> and <tt>length</tt>
         parameters do not hold

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7325979 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "src" explicit_type "double"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.

<p> This method transfers the entire content of the given source
double array into this buffer.  An invocation of this method of the
form <tt>dst.put(a)</tt> behaves in exactly the same way as the
invocation

<pre>
    dst.put(a, 0, a.length) </pre>

@return  This buffer

@throws  BufferOverflowException
         If there is insufficient space in this buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7326107 "hasArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other stuff --

Tells whether or not this buffer is backed by an accessible double
array.

<p> If this method returns <tt>true</tt> then the {@link #array() array}
and {@link #arrayOffset() arrayOffset} methods may safely be invoked.
</p>

@return  <tt>true</tt> if, and only if, this buffer
         is backed by an array and is not read-only"
      end

      operation 7326235 "array"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the double array that backs this
buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> Modifications to this buffer's content will cause the returned
array's content to be modified, and vice versa.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The array that backs this buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7326363 "arrayOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset within this buffer's backing array of the first
element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> If this buffer is backed by an array then buffer position <i>p</i>
corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.

<p> Invoke the {@link #hasArray hasArray} method before invoking this
method in order to ensure that this buffer has an accessible backing
array.  </p>

@return  The offset within this buffer's array
         of the first element of the buffer

@throws  ReadOnlyBufferException
         If this buffer is backed by an array but is read-only

@throws  UnsupportedOperationException
         If this buffer is not backed by an accessible array"
      end

      operation 7326491 "compact"
	abstract public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.

<p> The doubles between the buffer's current position and its limit,
if any, are copied to the beginning of the buffer.  That is, the
double at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied
to index zero, the double at index <i>p</i>&nbsp;+&nbsp;1 is copied
to index one, and so forth until the double at index
<tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index
<i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.
The buffer's position is then set to <i>n+1</i> and its limit is set to
its capacity.  The mark, if defined, is discarded.

<p> The buffer's position is set to the number of doubles copied,
rather than to zero, so that an invocation of this method can be
followed immediately by an invocation of another relative <i>put</i>
method. </p>



















@return  This buffer

@throws  ReadOnlyBufferException
         If this buffer is read-only"
      end

      operation 7326619 "isDirect"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this double buffer is direct. </p>

@return  <tt>true</tt> if, and only if, this buffer is direct"
      end

      operation 7326747 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string summarizing the state of this buffer.  </p>

@return  A summary string"
      end

      operation 7326875 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current hash code of this buffer.

<p> The hash code of a double buffer depends only upon its remaining
elements; that is, upon the elements from <tt>position()</tt> up to, and
including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.

<p> Because buffer hash codes are content-dependent, it is inadvisable
to use buffers as keys in hash maps or similar data structures unless it
is known that their contents will not change.  </p>

@return  The current hash code of this buffer"
      end

      operation 7327003 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer is equal to another object.

<p> Two double buffers are equal if, and only if,

<p><ol>

  <li><p> They have the same element type,  </p></li>

  <li><p> They have the same number of remaining elements, and
  </p></li>

  <li><p> The two sequences of remaining elements, considered
  independently of their starting positions, are pointwise equal.
  </p></li>

</ol>

<p> A double buffer is not equal to any other type of object.  </p>

@param  ob  The object to which this buffer is to be compared

@return  <tt>true</tt> if, and only if, this buffer is equal to the
          given object"
      end

      operation 7327131 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this buffer to another.

<p> Two double buffers are compared by comparing their sequences of
remaining elements lexicographically, without regard to the starting
position of each sequence within its corresponding buffer.

<p> A double buffer is not comparable to any other type of object.

@return  A negative integer, zero, or a positive integer as this buffer
		is less than, equal to, or greater than the given buffer"
      end

      operation 7327259 "order"
	abstract public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Other char stuff --
 -- Other byte stuff: Access to binary data --

Retrieves this buffer's byte order.

<p> The byte order of a double buffer created by allocation or by
wrapping an existing <tt>double</tt> array is the {@link
ByteOrder#nativeOrder </code>native order<code>} of the underlying
hardware.  The byte order of a double buffer created as a <a
href=\"ByteBuffer.html#view\">view</a> of a byte buffer is that of the
byte buffer at the moment that the view is created.  </p>

@return  This buffer's byte order"
      end
    end

    class 935451 "ByteBufferAsCharBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1823899 // <generalisation>
	relation 1823899 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1823899 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      classrelation 1824027 // bb (<unidirectional association>)
	relation 1824027 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1824027 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2806683 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7316507 "ByteBufferAsCharBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7316635 "ByteBufferAsCharBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7316763 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7316891 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317019 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317147 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317275 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317403 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317531 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317659 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317787 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7317915 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318043 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318171 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318299 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7318427 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 935579 "ByteBufferAsCharBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1824155 // <generalisation>
	relation 1824155 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1824155 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      classrelation 1824283 // bb (<unidirectional association>)
	relation 1824283 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1824283 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2806811 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7318555 "ByteBufferAsCharBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318683 "ByteBufferAsCharBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318811 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7318939 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319067 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319195 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319323 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319451 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319579 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319707 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319835 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7319963 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7320091 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7320219 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7320347 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7320475 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 935707 "ByteBufferAsCharBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1824411 // <generalisation>
	relation 1824411 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1824411 // <generalisation>
	  b parent class_ref 935451 // ByteBufferAsCharBufferB
      end

      operation 7320603 "ByteBufferAsCharBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7320731 "ByteBufferAsCharBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7320859 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7320987 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321115 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321243 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321371 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321499 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321627 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321755 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7321883 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7322011 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7322139 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 935835 "ByteBufferAsCharBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1824539 // <generalisation>
	relation 1824539 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1824539 // <generalisation>
	  b parent class_ref 935579 // ByteBufferAsCharBufferL
      end

      operation 7322267 "ByteBufferAsCharBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7322395 "ByteBufferAsCharBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7322523 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7322651 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7322779 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7322907 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323035 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323163 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323291 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323419 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323547 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7323675 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7323803 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 935963 "ByteBufferAsDoubleBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1824923 // <generalisation>
	relation 1824923 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1824923 // <generalisation>
	  b parent class_ref 935323 // DoubleBuffer
      end

      classrelation 1825051 // bb (<unidirectional association>)
	relation 1825051 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1825051 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2807323 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7327387 "ByteBufferAsDoubleBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7327515 "ByteBufferAsDoubleBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7327643 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7327771 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7327899 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328027 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328155 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328283 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328411 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328539 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328667 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328795 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7328923 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329051 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936091 "ByteBufferAsDoubleBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1825179 // <generalisation>
	relation 1825179 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1825179 // <generalisation>
	  b parent class_ref 935323 // DoubleBuffer
      end

      classrelation 1825307 // bb (<unidirectional association>)
	relation 1825307 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1825307 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2807451 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7329179 "ByteBufferAsDoubleBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329307 "ByteBufferAsDoubleBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329435 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329563 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329691 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329819 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7329947 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330075 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330203 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330331 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330459 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330587 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330715 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7330843 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936219 "ByteBufferAsDoubleBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1825435 // <generalisation>
	relation 1825435 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1825435 // <generalisation>
	  b parent class_ref 935963 // ByteBufferAsDoubleBufferB
      end

      operation 7330971 "ByteBufferAsDoubleBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7331099 "ByteBufferAsDoubleBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331227 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331355 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331483 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331611 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331739 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331867 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7331995 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7332123 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7332251 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936347 "ByteBufferAsDoubleBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1825563 // <generalisation>
	relation 1825563 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1825563 // <generalisation>
	  b parent class_ref 936091 // ByteBufferAsDoubleBufferL
      end

      operation 7332379 "ByteBufferAsDoubleBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7332507 "ByteBufferAsDoubleBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7332635 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7332763 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7332891 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333019 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333147 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333275 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333403 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333531 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7333659 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936475 "ByteBufferAsFloatBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1825947 // <generalisation>
	relation 1825947 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1825947 // <generalisation>
	  b parent class_ref 935195 // FloatBuffer
      end

      classrelation 1826075 // bb (<unidirectional association>)
	relation 1826075 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1826075 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2807963 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7337243 "ByteBufferAsFloatBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7337371 "ByteBufferAsFloatBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7337499 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7337627 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7337755 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7337883 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338011 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338139 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338267 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338395 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338523 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338651 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338779 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7338907 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936603 "ByteBufferAsFloatBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1826203 // <generalisation>
	relation 1826203 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1826203 // <generalisation>
	  b parent class_ref 935195 // FloatBuffer
      end

      classrelation 1826331 // bb (<unidirectional association>)
	relation 1826331 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1826331 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2808091 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7339035 "ByteBufferAsFloatBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339163 "ByteBufferAsFloatBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339291 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339419 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339547 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339675 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339803 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7339931 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340059 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340187 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340315 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340443 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340571 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7340699 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936731 "ByteBufferAsFloatBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1826459 // <generalisation>
	relation 1826459 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1826459 // <generalisation>
	  b parent class_ref 936475 // ByteBufferAsFloatBufferB
      end

      operation 7340827 "ByteBufferAsFloatBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7340955 "ByteBufferAsFloatBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341083 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341211 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341339 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341467 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341595 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341723 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341851 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7341979 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7342107 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936859 "ByteBufferAsFloatBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1826587 // <generalisation>
	relation 1826587 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1826587 // <generalisation>
	  b parent class_ref 936603 // ByteBufferAsFloatBufferL
      end

      operation 7342235 "ByteBufferAsFloatBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7342363 "ByteBufferAsFloatBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7342491 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7342619 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7342747 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7342875 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7343003 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7343131 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7343259 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7343387 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7343515 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 936987 "ByteBufferAsIntBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1826971 // <generalisation>
	relation 1826971 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1826971 // <generalisation>
	  b parent class_ref 934939 // IntBuffer
      end

      classrelation 1827099 // bb (<unidirectional association>)
	relation 1827099 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1827099 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2808603 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7347099 "ByteBufferAsIntBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347227 "ByteBufferAsIntBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347355 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347483 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347611 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347739 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347867 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7347995 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348123 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348251 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348379 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348507 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348635 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7348763 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937115 "ByteBufferAsIntBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1827227 // <generalisation>
	relation 1827227 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1827227 // <generalisation>
	  b parent class_ref 934939 // IntBuffer
      end

      classrelation 1827355 // bb (<unidirectional association>)
	relation 1827355 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1827355 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2808731 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7348891 "ByteBufferAsIntBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349019 "ByteBufferAsIntBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349147 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349275 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349403 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349531 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349659 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349787 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7349915 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350043 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350171 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350299 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350427 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350555 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937243 "ByteBufferAsIntBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1827483 // <generalisation>
	relation 1827483 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1827483 // <generalisation>
	  b parent class_ref 936987 // ByteBufferAsIntBufferB
      end

      operation 7350683 "ByteBufferAsIntBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7350811 "ByteBufferAsIntBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7350939 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351067 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351195 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351323 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351451 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351579 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351707 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351835 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7351963 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937371 "ByteBufferAsIntBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1827611 // <generalisation>
	relation 1827611 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1827611 // <generalisation>
	  b parent class_ref 937115 // ByteBufferAsIntBufferL
      end

      operation 7352091 "ByteBufferAsIntBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7352219 "ByteBufferAsIntBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352347 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352475 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352603 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352731 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352859 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7352987 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7353115 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7353243 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7353371 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937499 "ByteBufferAsLongBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1827995 // <generalisation>
	relation 1827995 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1827995 // <generalisation>
	  b parent class_ref 935067 // LongBuffer
      end

      classrelation 1828123 // bb (<unidirectional association>)
	relation 1828123 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1828123 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2809243 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7356955 "ByteBufferAsLongBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357083 "ByteBufferAsLongBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357211 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357339 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357467 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357595 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357723 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357851 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7357979 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358107 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358235 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358363 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358491 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358619 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937627 "ByteBufferAsLongBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1828251 // <generalisation>
	relation 1828251 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1828251 // <generalisation>
	  b parent class_ref 935067 // LongBuffer
      end

      classrelation 1828379 // bb (<unidirectional association>)
	relation 1828379 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1828379 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2809371 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7358747 "ByteBufferAsLongBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7358875 "ByteBufferAsLongBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359003 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359131 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359259 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359387 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359515 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359643 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359771 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7359899 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360027 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360155 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360283 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360411 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937755 "ByteBufferAsLongBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1828507 // <generalisation>
	relation 1828507 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1828507 // <generalisation>
	  b parent class_ref 937499 // ByteBufferAsLongBufferB
      end

      operation 7360539 "ByteBufferAsLongBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7360667 "ByteBufferAsLongBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360795 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7360923 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361051 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361179 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361307 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361435 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361563 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361691 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7361819 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 937883 "ByteBufferAsLongBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1828635 // <generalisation>
	relation 1828635 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1828635 // <generalisation>
	  b parent class_ref 937627 // ByteBufferAsLongBufferL
      end

      operation 7361947 "ByteBufferAsLongBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7362075 "ByteBufferAsLongBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362203 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362331 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362459 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362587 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362715 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362843 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7362971 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7363099 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7363227 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938011 "ByteBufferAsShortBufferB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1829019 // <generalisation>
	relation 1829019 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1829019 // <generalisation>
	  b parent class_ref 934811 // ShortBuffer
      end

      classrelation 1829147 // bb (<unidirectional association>)
	relation 1829147 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1829147 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2809883 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7366811 "ByteBufferAsShortBufferB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7366939 "ByteBufferAsShortBufferB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367067 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367195 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367323 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367451 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367579 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367707 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367835 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7367963 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368091 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368219 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368347 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368475 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938139 "ByteBufferAsShortBufferL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1829275 // <generalisation>
	relation 1829275 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1829275 // <generalisation>
	  b parent class_ref 934811 // ShortBuffer
      end

      classrelation 1829403 // bb (<unidirectional association>)
	relation 1829403 --->
	  a role_name "bb" const_relation protected
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1829403 // bb (<unidirectional association>)
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2810011 "offset"
	const_attribute protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7368603 "ByteBufferAsShortBufferL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368731 "ByteBufferAsShortBufferL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368859 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7368987 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369115 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369243 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369371 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369499 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369627 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369755 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7369883 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370011 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370139 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370267 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938267 "ByteBufferAsShortBufferRB"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1829531 // <generalisation>
	relation 1829531 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1829531 // <generalisation>
	  b parent class_ref 938011 // ByteBufferAsShortBufferB
      end

      operation 7370395 "ByteBufferAsShortBufferRB"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7370523 "ByteBufferAsShortBufferRB"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370651 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370779 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7370907 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371035 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371163 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371291 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371419 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371547 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7371675 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938395 "ByteBufferAsShortBufferRL"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1829659 // <generalisation>
	relation 1829659 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1829659 // <generalisation>
	  b parent class_ref 938139 // ByteBufferAsShortBufferL
      end

      operation 7371803 "ByteBufferAsShortBufferRL"
	package explicit_return_type ""
	nparams 1
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package-private"
      end

      operation 7371931 "ByteBufferAsShortBufferRL"
	package explicit_return_type ""
	nparams 6
	  param inout name "bb" type class_ref 182427 // ByteBuffer
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372059 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372187 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372315 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372443 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372571 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372699 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372827 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7372955 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7373083 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938523 "DirectByteBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1830171 // <generalisation>
	relation 1830171 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1830171 // <generalisation>
	  b parent class_ref 938651 // MappedByteBuffer
      end

      attribute 2810395 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2810523 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2810651 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7374747 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 938907 "Deallocator"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1830427 // <realization>
	  relation 1830427 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1830427 // <realization>
	    b parent class_ref 163355 // Runnable
	end

	attribute 2810779 "unsafe"
	  class_attribute private explicit_type "Unsafe"
	  init_value "=  Unsafe.getUnsafe()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2810907 "address"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2811035 "capacity"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7374875 "Deallocator"
	  private explicit_return_type ""
	  nparams 2
	    param in name "address" explicit_type "long"
	    param in name "capacity" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7375003 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1830555 // cleaner (<unidirectional association>)
	relation 1830555 --->
	  a role_name "cleaner" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1830555 // cleaner (<unidirectional association>)
	  b parent class_ref 939163 // Cleaner
      end

      operation 7375131 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7375259 "DirectByteBuffer"
	package explicit_return_type ""
	nparams 1
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Primary constructor
"
      end

      operation 7375387 "DirectByteBuffer"
	private explicit_return_type ""
	nparams 2
	  param in name "addr" explicit_type "long"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked only by JNI: NewDirectByteBuffer(void*, long)
"
      end

      operation 7375515 "DirectByteBuffer"
	protected explicit_return_type ""
	nparams 3
	  param in name "cap" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param inout name "unmapper" type class_ref 163355 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For memory-mapped buffers -- invoked by FileChannelImpl via reflection
"
      end

      operation 7375643 "DirectByteBuffer"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7375771 "slice"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7375899 "duplicate"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376027 "asReadOnlyBuffer"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376155 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376283 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376411 "get"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376539 "get"
	public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376667 "get"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "dst" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376795 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7376923 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377051 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377179 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "src" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377307 "compact"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377435 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377563 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377691 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377819 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7377947 "getChar"
	private explicit_return_type "char"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378075 "getChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378203 "getChar"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378331 "putChar"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378459 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378587 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378715 "asCharBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378843 "getShort"
	private explicit_return_type "short"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7378971 "getShort"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379099 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379227 "putShort"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379355 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379483 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379611 "asShortBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379739 "getInt"
	private explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379867 "getInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7379995 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380123 "putInt"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380251 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380379 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380507 "asIntBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380635 "getLong"
	private explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380763 "getLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7380891 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381019 "putLong"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381147 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381275 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381403 "asLongBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381531 "getFloat"
	private explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381659 "getFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381787 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7381915 "putFloat"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382043 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382171 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382299 "asFloatBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382427 "getDouble"
	private explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382555 "getDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382683 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382811 "putDouble"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7382939 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7383067 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7383195 "asDoubleBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 938651 "MappedByteBuffer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A direct byte buffer whose content is a memory-mapped region of a file.

<p> Mapped byte buffers are created via the {@link
java.nio.channels.FileChannel#map FileChannel.map} method.  This class
extends the {@link ByteBuffer} class with operations that are specific to
memory-mapped file regions.

<p> A mapped byte buffer and the file mapping that it represents remain
valid until the buffer itself is garbage-collected.

<p> The content of a mapped byte buffer can change at any time, for example
if the content of the corresponding region of the mapped file is changed by
this program or another.  Whether or not such changes occur, and when they
occur, is operating-system dependent and therefore unspecified.

<a name=\"inaccess\"><p> All or part of a mapped byte buffer may become
inaccessible at any time, for example if the mapped file is truncated.  An
attempt to access an inaccessible region of a mapped byte buffer will not
change the buffer's content and will cause an unspecified exception to be
thrown either at the time of the access or at some later time.  It is
therefore strongly recommended that appropriate precautions be taken to
avoid the manipulation of a mapped file by this program, or by a
concurrently running program, except to read or write the file's content.

<p> Mapped byte buffers otherwise behave no differently than ordinary direct
byte buffers. </p>


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.23, 03/12/19
@since 1.4"
      classrelation 1830043 // <generalisation>
	relation 1830043 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1830043 // <generalisation>
	  b parent class_ref 182427 // ByteBuffer
      end

      attribute 2810267 "isAMappedBuffer"
	volatile package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This is a little bit backwards: By rights MappedByteBuffer should be a
 subclass of DirectByteBuffer, but to keep the spec clear and simple, and
 for optimization purposes, it's easier to do it the other way around.
 This works because DirectByteBuffer is a package-private class.
 Volatile to make sure that the finalization thread sees the current
 value of this so that a region is not accidentally unmapped again later.
 package-private"
      end

      operation 7373595 "MappedByteBuffer"
	package explicit_return_type ""
	nparams 5
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param inout name "mapped" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This should only be invoked by the DirectByteBuffer constructors"
      end

      operation 7373723 "MappedByteBuffer"
	package explicit_return_type ""
	nparams 4
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7373851 "checkMapped"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7373979 "isLoaded"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this buffer's content is resident in physical
memory.

<p> A return value of <tt>true</tt> implies that it is highly likely
that all of the data in this buffer is resident in physical memory and
may therefore be accessed without incurring any virtual-memory page
faults or I/O operations.  A return value of <tt>false</tt> does not
necessarily imply that the buffer's content is not resident in physical
memory.

<p> The returned value is a hint, rather than a guarantee, because the
underlying operating system may have paged out some of the buffer's data
by the time that an invocation of this method returns.  </p>

@return  <tt>true</tt> if it is likely that this buffer's content
         is resident in physical memory"
      end

      operation 7374107 "load"
	public return_type class_ref 938651 // MappedByteBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this buffer's content into physical memory.

<p> This method makes a best effort to ensure that, when it returns,
this buffer's content is resident in physical memory.  Invoking this
method may cause some number of page faults and I/O operations to
occur. </p>

@return  This buffer"
      end

      operation 7374235 "force"
	public return_type class_ref 938651 // MappedByteBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces any changes made to this buffer's content to be written to the
storage device containing the mapped file.

<p> If the file mapped into this buffer resides on a local storage
device then when this method returns it is guaranteed that all changes
made to the buffer since it was created, or since this method was last
invoked, will have been written to that device.

<p> If the file does not reside on a local device then no such guarantee
is made.

<p> If this buffer was not mapped in read/write mode ({@link
java.nio.channels.FileChannel.MapMode#READ_WRITE}) then invoking this
method has no effect. </p>

@return  This buffer"
      end

      operation 7374363 "isLoaded0"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7374491 "load0"
	private explicit_return_type "int"
	nparams 3
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	  param in name "pageSize" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7374619 "force0"
	private explicit_return_type "void"
	nparams 2
	  param in name "address" explicit_type "long"
	  param in name "length" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939291 "DirectByteBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1830683 // <generalisation>
	relation 1830683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1830683 // <generalisation>
	  b parent class_ref 938523 // DirectByteBuffer
      end

      operation 7383323 "DirectByteBufferR"
	package explicit_return_type ""
	nparams 1
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Primary constructor
"
      end

      operation 7383451 "DirectByteBufferR"
	protected explicit_return_type ""
	nparams 3
	  param in name "cap" explicit_type "int"
	  param in name "addr" explicit_type "long"
	  param inout name "unmapper" type class_ref 163355 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For memory-mapped buffers -- invoked by FileChannelImpl via reflection
"
      end

      operation 7383579 "DirectByteBufferR"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7383707 "slice"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7383835 "duplicate"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7383963 "asReadOnlyBuffer"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384091 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384219 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384347 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384475 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "src" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384603 "compact"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384731 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384859 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7384987 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385115 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385243 "putChar"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385371 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385499 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385627 "asCharBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385755 "putShort"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7385883 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386011 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386139 "asShortBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386267 "putInt"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386395 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386523 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386651 "asIntBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386779 "putLong"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7386907 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387035 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387163 "asLongBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387291 "putFloat"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387419 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387547 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387675 "asFloatBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387803 "putDouble"
	private return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7387931 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388059 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388187 "asDoubleBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939419 "DirectCharBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1831195 // <generalisation>
	relation 1831195 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1831195 // <generalisation>
	  b parent class_ref 939547 // DirectCharBufferS
      end

      operation 7391003 "DirectCharBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7391131 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391259 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391387 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391515 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391643 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391771 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7391899 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392027 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392155 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392283 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392411 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392539 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7392667 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939547 "DirectCharBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1830939 // <generalisation>
	relation 1830939 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1830939 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      attribute 2811163 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2811291 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2811419 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7388315 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388443 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388571 "DirectCharBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7388699 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388827 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7388955 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389083 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389211 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389339 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389467 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389595 "get"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "dst" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389723 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389851 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7389979 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390107 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390235 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390363 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390491 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390619 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7390747 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7390875 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939675 "DirectCharBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1831707 // <generalisation>
	relation 1831707 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1831707 // <generalisation>
	  b parent class_ref 939803 // DirectCharBufferU
      end

      operation 7395483 "DirectCharBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7395611 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7395739 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7395867 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7395995 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396123 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396251 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396379 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396507 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396635 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396763 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7396891 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7397019 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7397147 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939803 "DirectCharBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1831451 // <generalisation>
	relation 1831451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1831451 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      attribute 2811547 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2811675 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2811803 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7392795 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7392923 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393051 "DirectCharBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7393179 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393307 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393435 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393563 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393691 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393819 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7393947 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394075 "get"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "dst" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394203 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394331 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394459 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394587 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394715 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394843 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7394971 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7395099 "toString"
	public explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7395227 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7395355 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939931 "DirectDoubleBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1832219 // <generalisation>
	relation 1832219 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1832219 // <generalisation>
	  b parent class_ref 940059 // DirectDoubleBufferS
      end

      operation 7399707 "DirectDoubleBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7399835 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399963 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400091 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400219 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400347 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400475 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400603 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400731 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400859 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7400987 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7401115 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940059 "DirectDoubleBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1831963 // <generalisation>
	relation 1831963 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1831963 // <generalisation>
	  b parent class_ref 935323 // DoubleBuffer
      end

      attribute 2811931 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2812059 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2812187 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7397275 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7397403 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7397531 "DirectDoubleBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7397659 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7397787 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7397915 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398043 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398171 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398299 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398427 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398555 "get"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "dst" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398683 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398811 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7398939 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399067 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399195 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399323 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399451 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7399579 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940187 "DirectDoubleBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1832731 // <generalisation>
	relation 1832731 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1832731 // <generalisation>
	  b parent class_ref 940315 // DirectDoubleBufferU
      end

      operation 7403675 "DirectDoubleBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7403803 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403931 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404059 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404187 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404315 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404443 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404571 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404699 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404827 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7404955 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405083 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940315 "DirectDoubleBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1832475 // <generalisation>
	relation 1832475 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1832475 // <generalisation>
	  b parent class_ref 935323 // DoubleBuffer
      end

      attribute 2812315 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2812443 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2812571 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7401243 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7401371 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7401499 "DirectDoubleBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7401627 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7401755 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7401883 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402011 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402139 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402267 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402395 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402523 "get"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "dst" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402651 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402779 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7402907 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403035 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403163 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403291 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403419 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7403547 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940443 "DirectFloatBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1833243 // <generalisation>
	relation 1833243 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1833243 // <generalisation>
	  b parent class_ref 940571 // DirectFloatBufferS
      end

      operation 7407643 "DirectFloatBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7407771 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407899 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408027 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408155 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408283 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408411 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408539 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408667 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408795 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7408923 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409051 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940571 "DirectFloatBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1832987 // <generalisation>
	relation 1832987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1832987 // <generalisation>
	  b parent class_ref 935195 // FloatBuffer
      end

      attribute 2812699 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2812827 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2812955 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7405211 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405339 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405467 "DirectFloatBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7405595 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405723 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405851 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7405979 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406107 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406235 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406363 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406491 "get"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "dst" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406619 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406747 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7406875 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407003 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407131 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407259 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407387 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7407515 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940699 "DirectFloatBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1833755 // <generalisation>
	relation 1833755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1833755 // <generalisation>
	  b parent class_ref 940827 // DirectFloatBufferU
      end

      operation 7411611 "DirectFloatBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7411739 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411867 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411995 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412123 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412251 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412379 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412507 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412635 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412763 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7412891 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413019 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940827 "DirectFloatBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1833499 // <generalisation>
	relation 1833499 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1833499 // <generalisation>
	  b parent class_ref 935195 // FloatBuffer
      end

      attribute 2813083 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2813211 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2813339 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7409179 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409307 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409435 "DirectFloatBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7409563 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409691 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409819 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7409947 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410075 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410203 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410331 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410459 "get"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "dst" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410587 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410715 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410843 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7410971 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411099 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411227 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411355 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7411483 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940955 "DirectIntBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1834267 // <generalisation>
	relation 1834267 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1834267 // <generalisation>
	  b parent class_ref 941083 // DirectIntBufferS
      end

      operation 7415579 "DirectIntBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7415707 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415835 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415963 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416091 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416219 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416347 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416475 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416603 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416731 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416859 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7416987 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941083 "DirectIntBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1834011 // <generalisation>
	relation 1834011 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1834011 // <generalisation>
	  b parent class_ref 934939 // IntBuffer
      end

      attribute 2813467 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2813595 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2813723 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7413147 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413275 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413403 "DirectIntBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7413531 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413659 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413787 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7413915 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414043 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414171 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414299 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414427 "get"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "dst" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414555 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414683 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414811 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7414939 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415067 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415195 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415323 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7415451 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941211 "DirectIntBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1834779 // <generalisation>
	relation 1834779 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1834779 // <generalisation>
	  b parent class_ref 941339 // DirectIntBufferU
      end

      operation 7419547 "DirectIntBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7419675 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419803 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419931 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420059 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420187 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420315 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420443 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420571 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420699 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420827 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7420955 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941339 "DirectIntBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1834523 // <generalisation>
	relation 1834523 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1834523 // <generalisation>
	  b parent class_ref 934939 // IntBuffer
      end

      attribute 2813851 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2813979 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2814107 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7417115 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7417243 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7417371 "DirectIntBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7417499 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7417627 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7417755 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7417883 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418011 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418139 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418267 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418395 "get"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "dst" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418523 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418651 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418779 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7418907 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419035 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419163 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419291 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7419419 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941467 "DirectLongBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1835291 // <generalisation>
	relation 1835291 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1835291 // <generalisation>
	  b parent class_ref 941595 // DirectLongBufferS
      end

      operation 7423515 "DirectLongBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7423643 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423771 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423899 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424027 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424155 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424283 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424411 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424539 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424667 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424795 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7424923 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941595 "DirectLongBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1835035 // <generalisation>
	relation 1835035 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1835035 // <generalisation>
	  b parent class_ref 935067 // LongBuffer
      end

      attribute 2814235 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2814363 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2814491 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7421083 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421211 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421339 "DirectLongBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7421467 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421595 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421723 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421851 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7421979 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422107 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422235 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422363 "get"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "dst" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422491 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422619 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422747 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7422875 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423003 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423131 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423259 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7423387 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941723 "DirectLongBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1835803 // <generalisation>
	relation 1835803 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1835803 // <generalisation>
	  b parent class_ref 941851 // DirectLongBufferU
      end

      operation 7427483 "DirectLongBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7427611 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427739 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427867 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427995 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428123 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428251 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428379 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428507 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428635 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428763 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7428891 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941851 "DirectLongBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1835547 // <generalisation>
	relation 1835547 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1835547 // <generalisation>
	  b parent class_ref 935067 // LongBuffer
      end

      attribute 2814619 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2814747 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2814875 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7425051 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425179 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425307 "DirectLongBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7425435 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425563 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425691 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425819 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7425947 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426075 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426203 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426331 "get"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "dst" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426459 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426587 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426715 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426843 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7426971 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427099 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427227 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7427355 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 941979 "DirectShortBufferRS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1836315 // <generalisation>
	relation 1836315 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1836315 // <generalisation>
	  b parent class_ref 942107 // DirectShortBufferS
      end

      operation 7431451 "DirectShortBufferRS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7431579 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431707 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431835 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431963 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432091 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432219 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432347 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432475 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432603 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432731 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7432859 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942107 "DirectShortBufferS"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1836059 // <generalisation>
	relation 1836059 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1836059 // <generalisation>
	  b parent class_ref 934811 // ShortBuffer
      end

      attribute 2815003 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2815131 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2815259 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7429019 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429147 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429275 "DirectShortBufferS"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7429403 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429531 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429659 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429787 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7429915 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430043 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430171 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430299 "get"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "dst" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430427 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430555 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430683 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430811 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7430939 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431067 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431195 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7431323 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942235 "DirectShortBufferRU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1836827 // <generalisation>
	relation 1836827 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1836827 // <generalisation>
	  b parent class_ref 942363 // DirectShortBufferU
      end

      operation 7435419 "DirectShortBufferRU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7435547 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435675 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435803 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435931 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436059 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436187 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436315 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436443 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436571 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436699 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7436827 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942363 "DirectShortBufferU"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1836571 // <generalisation>
	relation 1836571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1836571 // <generalisation>
	  b parent class_ref 934811 // ShortBuffer
      end

      attribute 2815387 "unsafe"
	class_attribute const_attribute protected explicit_type "Unsafe"
	init_value "=  Bits.unsafe()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unsafe-access object"
      end

      attribute 2815515 "unaligned"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value "=  Bits.unaligned()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cached unaligned-access capability"
      end

      attribute 2815643 "viewedBuffer"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Base address, used in all indexing calculations
 NOTE: moved up to Buffer.java for speed in JNI GetDirectBufferAddress
    protected long address;
 If this buffer is a view of another buffer then we keep a reference to
 that buffer so that its memory isn't freed before we're done with it"
      end

      operation 7432987 "viewedBuffer"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433115 "cleaner"
	public return_type class_ref 939163 // Cleaner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433243 "DirectShortBufferU"
	package explicit_return_type ""
	nparams 6
	  param inout name "db" explicit_type "DirectBuffer"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For duplicates and slices
"
      end

      operation 7433371 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433499 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433627 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433755 "address"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7433883 "ix"
	private explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434011 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434139 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434267 "get"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "dst" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434395 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434523 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434651 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434779 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7434907 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435035 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435163 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7435291 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942491 "HeapByteBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapByteBuffer.





"
      classrelation 1837083 // <generalisation>
	relation 1837083 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837083 // <generalisation>
	  b parent class_ref 182427 // ByteBuffer
      end

      operation 7436955 "HeapByteBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final byte[] hb;
protected final int offset;
"
      end

      operation 7437083 "HeapByteBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437211 "HeapByteBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "byte"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437339 "slice"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437467 "duplicate"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437595 "asReadOnlyBuffer"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437723 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437851 "get"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7437979 "get"
	public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438107 "get"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "dst" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438235 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438363 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438491 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438619 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438747 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "src" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7438875 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439003 "compact"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439131 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439259 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439387 "getChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " char"
      end

      operation 7439515 "getChar"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439643 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439771 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7439899 "asCharBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440027 "getShort"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " short"
      end

      operation 7440155 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440283 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440411 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440539 "asShortBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440667 "getInt"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " int"
      end

      operation 7440795 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7440923 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441051 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441179 "asIntBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441307 "getLong"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " long"
      end

      operation 7441435 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441563 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441691 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441819 "asLongBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7441947 "getFloat"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " float"
      end

      operation 7442075 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442203 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442331 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442459 "asFloatBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442587 "getDouble"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " double"
      end

      operation 7442715 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442843 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7442971 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443099 "asDoubleBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942619 "HeapByteBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapByteBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1837211 // <generalisation>
	relation 1837211 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837211 // <generalisation>
	  b parent class_ref 942491 // HeapByteBuffer
      end

      operation 7443227 "HeapByteBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7443355 "HeapByteBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443483 "HeapByteBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "byte"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443611 "slice"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443739 "duplicate"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443867 "asReadOnlyBuffer"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7443995 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444123 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444251 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444379 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 3
	  param in name "src" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444507 "put"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param inout name "src" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444635 "compact"
	public return_type class_ref 182427 // ByteBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444763 "_get"
	package explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7444891 "_put"
	package explicit_return_type "void"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7445019 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " char"
      end

      operation 7445147 "putChar"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7445275 "asCharBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7445403 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " short"
      end

      operation 7445531 "putShort"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7445659 "asShortBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7445787 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " int"
      end

      operation 7445915 "putInt"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446043 "asIntBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446171 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " long"
      end

      operation 7446299 "putLong"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446427 "asLongBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446555 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " float"
      end

      operation 7446683 "putFloat"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446811 "asFloatBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7446939 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " double"
      end

      operation 7447067 "putDouble"
	public return_type class_ref 182427 // ByteBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7447195 "asDoubleBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942747 "HeapCharBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapCharBuffer.





"
      classrelation 1837339 // <generalisation>
	relation 1837339 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837339 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      operation 7447323 "HeapCharBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final char[] hb;
protected final int offset;
"
      end

      operation 7447451 "HeapCharBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "char"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7447579 "HeapCharBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "char"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7447707 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7447835 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7447963 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448091 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448219 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448347 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448475 "get"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "dst" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448603 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448731 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448859 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7448987 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7449115 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7449243 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7449371 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7449499 "toString"
	package explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7449627 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7449755 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 942875 "HeapCharBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapCharBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1837467 // <generalisation>
	relation 1837467 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837467 // <generalisation>
	  b parent class_ref 942747 // HeapCharBuffer
      end

      operation 7449883 "HeapCharBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7450011 "HeapCharBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "char"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450139 "HeapCharBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "char"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450267 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450395 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450523 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450651 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450779 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7450907 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7451035 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 3
	  param in name "src" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7451163 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param inout name "src" type class_ref 573467 // CharBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7451291 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7451419 "toString"
	package explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7451547 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --- Methods to support CharSequence ---"
      end

      operation 7451675 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943003 "HeapDoubleBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapDoubleBuffer.





"
      classrelation 1837595 // <generalisation>
	relation 1837595 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837595 // <generalisation>
	  b parent class_ref 935323 // DoubleBuffer
      end

      operation 7451803 "HeapDoubleBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final double[] hb;
protected final int offset;
"
      end

      operation 7451931 "HeapDoubleBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "double"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452059 "HeapDoubleBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "double"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452187 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452315 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452443 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452571 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452699 "get"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452827 "get"
	public explicit_return_type "double"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7452955 "get"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "dst" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453083 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453211 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453339 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453467 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453595 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453723 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453851 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7453979 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943131 "HeapDoubleBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapDoubleBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1837723 // <generalisation>
	relation 1837723 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837723 // <generalisation>
	  b parent class_ref 943003 // HeapDoubleBuffer
      end

      operation 7454107 "HeapDoubleBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7454235 "HeapDoubleBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "double"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7454363 "HeapDoubleBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "double"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7454491 "slice"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7454619 "duplicate"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7454747 "asReadOnlyBuffer"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7454875 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455003 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455131 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455259 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 3
	  param in name "src" explicit_type "double"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455387 "put"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 1
	  param inout name "src" type class_ref 935323 // DoubleBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455515 "compact"
	public return_type class_ref 935323 // DoubleBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7455643 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943259 "HeapFloatBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapFloatBuffer.





"
      classrelation 1837851 // <generalisation>
	relation 1837851 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837851 // <generalisation>
	  b parent class_ref 935195 // FloatBuffer
      end

      operation 7455771 "HeapFloatBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final float[] hb;
protected final int offset;
"
      end

      operation 7455899 "HeapFloatBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "float"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456027 "HeapFloatBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "float"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456155 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456283 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456411 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456539 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456667 "get"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456795 "get"
	public explicit_return_type "float"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7456923 "get"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "dst" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457051 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457179 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457307 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457435 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457563 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457691 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457819 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7457947 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943387 "HeapFloatBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapFloatBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1837979 // <generalisation>
	relation 1837979 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1837979 // <generalisation>
	  b parent class_ref 943259 // HeapFloatBuffer
      end

      operation 7458075 "HeapFloatBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7458203 "HeapFloatBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "float"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458331 "HeapFloatBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "float"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458459 "slice"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458587 "duplicate"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458715 "asReadOnlyBuffer"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458843 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7458971 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459099 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459227 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 3
	  param in name "src" explicit_type "float"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459355 "put"
	public return_type class_ref 935195 // FloatBuffer
	nparams 1
	  param inout name "src" type class_ref 935195 // FloatBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459483 "compact"
	public return_type class_ref 935195 // FloatBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459611 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943515 "HeapIntBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapIntBuffer.





"
      classrelation 1838107 // <generalisation>
	relation 1838107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838107 // <generalisation>
	  b parent class_ref 934939 // IntBuffer
      end

      operation 7459739 "HeapIntBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final int[] hb;
protected final int offset;
"
      end

      operation 7459867 "HeapIntBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "int"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7459995 "HeapIntBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "int"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460123 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460251 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460379 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460507 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460635 "get"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460763 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7460891 "get"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "dst" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461019 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461147 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461275 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461403 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461531 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461659 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461787 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7461915 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943643 "HeapIntBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapIntBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1838235 // <generalisation>
	relation 1838235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838235 // <generalisation>
	  b parent class_ref 943515 // HeapIntBuffer
      end

      operation 7462043 "HeapIntBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7462171 "HeapIntBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "int"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462299 "HeapIntBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "int"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462427 "slice"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462555 "duplicate"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462683 "asReadOnlyBuffer"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462811 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7462939 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463067 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463195 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 3
	  param in name "src" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463323 "put"
	public return_type class_ref 934939 // IntBuffer
	nparams 1
	  param inout name "src" type class_ref 934939 // IntBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463451 "compact"
	public return_type class_ref 934939 // IntBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463579 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943771 "HeapLongBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapLongBuffer.





"
      classrelation 1838363 // <generalisation>
	relation 1838363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838363 // <generalisation>
	  b parent class_ref 935067 // LongBuffer
      end

      operation 7463707 "HeapLongBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final long[] hb;
protected final int offset;
"
      end

      operation 7463835 "HeapLongBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "long"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7463963 "HeapLongBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "long"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464091 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464219 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464347 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464475 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464603 "get"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464731 "get"
	public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464859 "get"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "dst" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7464987 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465115 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465243 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465371 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465499 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465627 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465755 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7465883 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 943899 "HeapLongBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapLongBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1838491 // <generalisation>
	relation 1838491 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838491 // <generalisation>
	  b parent class_ref 943771 // HeapLongBuffer
      end

      operation 7466011 "HeapLongBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7466139 "HeapLongBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "long"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466267 "HeapLongBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "long"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466395 "slice"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466523 "duplicate"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466651 "asReadOnlyBuffer"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466779 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7466907 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467035 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467163 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 3
	  param in name "src" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467291 "put"
	public return_type class_ref 935067 // LongBuffer
	nparams 1
	  param inout name "src" type class_ref 935067 // LongBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467419 "compact"
	public return_type class_ref 935067 // LongBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467547 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 944027 "HeapShortBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A read/write HeapShortBuffer.





"
      classrelation 1838619 // <generalisation>
	relation 1838619 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838619 // <generalisation>
	  b parent class_ref 934811 // ShortBuffer
      end

      operation 7467675 "HeapShortBuffer"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation


protected final short[] hb;
protected final int offset;
"
      end

      operation 7467803 "HeapShortBuffer"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "short"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7467931 "HeapShortBuffer"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "short"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468059 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468187 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468315 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468443 "ix"
	protected explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468571 "get"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468699 "get"
	public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468827 "get"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "dst" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7468955 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469083 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469211 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469339 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469467 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469595 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469723 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7469851 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 944155 "HeapShortBufferR"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "


A read-only HeapShortBuffer.  This class extends the corresponding
read/write class, overriding the mutation methods to throw a {@link
ReadOnlyBufferException} and overriding the view-buffer methods to return an
instance of this class rather than of the superclass.
"
      classrelation 1838747 // <generalisation>
	relation 1838747 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838747 // <generalisation>
	  b parent class_ref 944027 // HeapShortBuffer
      end

      operation 7469979 "HeapShortBufferR"
	package explicit_return_type ""
	nparams 2
	  param in name "cap" explicit_type "int"
	  param in name "lim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For speed these fields are actually declared in X-Buffer;
 these declarations are here as documentation




"
      end

      operation 7470107 "HeapShortBufferR"
	package explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "short"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470235 "HeapShortBufferR"
	protected explicit_return_type ""
	nparams 6
	  param in name "buf" explicit_type "short"
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "lim" explicit_type "int"
	  param in name "cap" explicit_type "int"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470363 "slice"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470491 "duplicate"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470619 "asReadOnlyBuffer"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470747 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7470875 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7471003 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7471131 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 3
	  param in name "src" explicit_type "short"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7471259 "put"
	public return_type class_ref 934811 // ShortBuffer
	nparams 1
	  param inout name "src" type class_ref 934811 // ShortBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7471387 "compact"
	public return_type class_ref 934811 // ShortBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7471515 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 944283 "InvalidMarkException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Unchecked exception thrown when an attempt is made to reset a buffer
when its mark is not defined.

@version 1.14, 01/05/02
@since 1.4"
      classrelation 1838875 // <generalisation>
	relation 1838875 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1838875 // <generalisation>
	  b parent class_ref 282779 // IllegalStateException
      end

      operation 7471643 "InvalidMarkException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class."
      end
    end

    class 944411 "ReadOnlyBufferException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Unchecked exception thrown when a content-mutation method such as
<tt>put</tt> or <tt>compact</tt> is invoked upon a read-only buffer.

@version 1.14, 01/05/02
@since 1.4"
      classrelation 1839003 // <generalisation>
	relation 1839003 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1839003 // <generalisation>
	  b parent class_ref 220315 // UnsupportedOperationException
      end

      operation 7471771 "ReadOnlyBufferException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of this class."
      end
    end

    class 944539 "StringCharBuffer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ## If the sequence is a string, use reflection to share its array"
      classrelation 1839131 // <generalisation>
	relation 1839131 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1839131 // <generalisation>
	  b parent class_ref 573467 // CharBuffer
      end

      classrelation 1839259 // str (<unidirectional association>)
	relation 1839259 --->
	  a role_name "str" package
	    comment " package-private
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1839259 // str (<unidirectional association>)
	  b parent class_ref 393755 // CharSequence
      end

      operation 7471899 "StringCharBuffer"
	package explicit_return_type ""
	nparams 3
	  param inout name "s" type class_ref 393755 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472027 "slice"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472155 "StringCharBuffer"
	private explicit_return_type ""
	nparams 5
	  param inout name "s" type class_ref 393755 // CharSequence
	  param in name "mark" explicit_type "int"
	  param in name "pos" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param in name "cap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472283 "duplicate"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472411 "asReadOnlyBuffer"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472539 "get"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472667 "get"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7472795 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ## Override bulk get methods for better performance"
      end

      operation 7472923 "put"
	public return_type class_ref 573467 // CharBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473051 "compact"
	public return_type class_ref 573467 // CharBuffer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473179 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473307 "toString"
	package explicit_return_type "String"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473435 "subSequence"
	public return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473563 "isDirect"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7473691 "order"
	public return_type class_ref 348059 // ByteOrder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  package_ref 138139 // charset

  package_ref 142107 // channels

  deploymentview 167195 "nio"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 705435 "Bits"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.PrivilegedAction;
import sun.misc.Unsafe;
import sun.misc.VM;
${definition}"
      associated_classes
	class_ref 934299 // Bits
      end
      comment "@(#)Bits.java	1.18 04/05/24

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 705563 "Buffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 934427 // Buffer
      end
      comment "@(#)Buffer.java	1.35 06/08/11

Copyright 2006 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 705691 "BufferOverflowException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 934555 // BufferOverflowException
      end
      comment "@(#)BufferOverflowException.java	1.14 01/05/02

Copyright 2000 by Sun Microsystems, Inc.  All Rights Reserved.

This software is the proprietary information of Sun Microsystems, Inc.  
Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 705819 "BufferUnderflowException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 934683 // BufferUnderflowException
      end
      comment "@(#)BufferUnderflowException.java	1.14 01/05/02

Copyright 2000 by Sun Microsystems, Inc.  All Rights Reserved.

This software is the proprietary information of Sun Microsystems, Inc.  
Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 705947 "ByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 182427 // ByteBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706075 "CharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 573467 // CharBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706203 "ByteBufferAsCharBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935451 // ByteBufferAsCharBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706331 "ByteBufferAsCharBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935579 // ByteBufferAsCharBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706459 "ByteBufferAsCharBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935707 // ByteBufferAsCharBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706587 "ByteBufferAsCharBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935835 // ByteBufferAsCharBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706715 "DoubleBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935323 // DoubleBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706843 "ByteBufferAsDoubleBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935963 // ByteBufferAsDoubleBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 706971 "ByteBufferAsDoubleBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936091 // ByteBufferAsDoubleBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707099 "ByteBufferAsDoubleBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936219 // ByteBufferAsDoubleBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707227 "ByteBufferAsDoubleBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936347 // ByteBufferAsDoubleBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707355 "FloatBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935195 // FloatBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707483 "ByteBufferAsFloatBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936475 // ByteBufferAsFloatBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707611 "ByteBufferAsFloatBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936603 // ByteBufferAsFloatBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707739 "ByteBufferAsFloatBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936731 // ByteBufferAsFloatBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707867 "ByteBufferAsFloatBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936859 // ByteBufferAsFloatBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 707995 "IntBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 934939 // IntBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708123 "ByteBufferAsIntBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 936987 // ByteBufferAsIntBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708251 "ByteBufferAsIntBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937115 // ByteBufferAsIntBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708379 "ByteBufferAsIntBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937243 // ByteBufferAsIntBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708507 "ByteBufferAsIntBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937371 // ByteBufferAsIntBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708635 "LongBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 935067 // LongBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708763 "ByteBufferAsLongBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937499 // ByteBufferAsLongBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 708891 "ByteBufferAsLongBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937627 // ByteBufferAsLongBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709019 "ByteBufferAsLongBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937755 // ByteBufferAsLongBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709147 "ByteBufferAsLongBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 937883 // ByteBufferAsLongBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709275 "ShortBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 934811 // ShortBuffer
      end
      comment "@(#)X-Buffer.java	1.56 04/07/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709403 "ByteBufferAsShortBufferB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 938011 // ByteBufferAsShortBufferB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709531 "ByteBufferAsShortBufferL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 938139 // ByteBufferAsShortBufferL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709659 "ByteBufferAsShortBufferRB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 938267 // ByteBufferAsShortBufferRB
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709787 "ByteBufferAsShortBufferRL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 938395 // ByteBufferAsShortBufferRL
      end
      comment "@(#)ByteBufferAs-X-Buffer.java	1.17 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 709915 "ByteOrder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 348059 // ByteOrder
      end
      comment "@(#)ByteOrder.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 710043 "MappedByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 938651 // MappedByteBuffer
      end
      comment "@(#)MappedByteBuffer.java	1.23 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 710171 "DirectByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 938523 // DirectByteBuffer
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710299 "DirectByteBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939291 // DirectByteBufferR
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710427 "DirectCharBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939547 // DirectCharBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710555 "DirectCharBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939419 // DirectCharBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710683 "DirectCharBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939803 // DirectCharBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710811 "DirectCharBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939675 // DirectCharBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 710939 "DirectDoubleBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940059 // DirectDoubleBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711067 "DirectDoubleBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 939931 // DirectDoubleBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711195 "DirectDoubleBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940315 // DirectDoubleBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711323 "DirectDoubleBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940187 // DirectDoubleBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711451 "DirectFloatBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940571 // DirectFloatBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711579 "DirectFloatBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940443 // DirectFloatBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711707 "DirectFloatBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940827 // DirectFloatBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711835 "DirectFloatBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940699 // DirectFloatBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 711963 "DirectIntBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941083 // DirectIntBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712091 "DirectIntBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 940955 // DirectIntBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712219 "DirectIntBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941339 // DirectIntBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712347 "DirectIntBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941211 // DirectIntBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712475 "DirectLongBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941595 // DirectLongBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712603 "DirectLongBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941467 // DirectLongBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712731 "DirectLongBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941851 // DirectLongBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712859 "DirectLongBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941723 // DirectLongBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 712987 "DirectShortBufferS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 942107 // DirectShortBufferS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713115 "DirectShortBufferRS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 941979 // DirectShortBufferRS
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713243 "DirectShortBufferU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 942363 // DirectShortBufferU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713371 "DirectShortBufferRU"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Cleaner;
import sun.misc.Unsafe;
import sun.nio.ch.DirectBuffer;
import sun.nio.ch.FileChannelImpl;
${definition}"
      associated_classes
	class_ref 942235 // DirectShortBufferRU
      end
      comment "@(#)Direct-X-Buffer.java	1.48 04/05/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713499 "HeapByteBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 942491 // HeapByteBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713627 "HeapByteBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 942619 // HeapByteBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713755 "HeapCharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 942747 // HeapCharBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 713883 "HeapCharBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 942875 // HeapCharBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714011 "HeapDoubleBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943003 // HeapDoubleBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714139 "HeapDoubleBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943131 // HeapDoubleBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714267 "HeapFloatBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943259 // HeapFloatBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714395 "HeapFloatBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943387 // HeapFloatBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714523 "HeapIntBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943515 // HeapIntBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714651 "HeapIntBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943643 // HeapIntBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714779 "HeapLongBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943771 // HeapLongBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 714907 "HeapLongBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 943899 // HeapLongBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715035 "HeapShortBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 944027 // HeapShortBuffer
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715163 "HeapShortBufferR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 944155 // HeapShortBufferR
      end
      comment "@(#)Heap-X-Buffer.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715291 "InvalidMarkException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 944283 // InvalidMarkException
      end
      comment "@(#)InvalidMarkException.java	1.14 01/05/02

Copyright 2000 by Sun Microsystems, Inc.  All Rights Reserved.

This software is the proprietary information of Sun Microsystems, Inc.  
Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715419 "ReadOnlyBufferException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 944411 // ReadOnlyBufferException
      end
      comment "@(#)ReadOnlyBufferException.java	1.14 01/05/02

Copyright 2000 by Sun Microsystems, Inc.  All Rights Reserved.

This software is the proprietary information of Sun Microsystems, Inc.  
Use is subject to license terms.

 -- This file was mechanically generated: Do not edit! -- //"
    end

    artifact 715547 "StringCharBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 944539 // StringCharBuffer
      end
      comment "@(#)StringCharBuffer.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
