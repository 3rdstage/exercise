format 66
"jar" // src::java::util::jar
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/util/jar"
  java_package "java.util.jar"
  classview 174875 "jar"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 914587 "Manifest"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Manifest class is used to maintain Manifest entry names and their
associated Attributes. There are main Manifest Attributes as well as
per-entry Attributes. For information on the Manifest format, please
see the 
<a href=\"../../../../guide/jar/jar.html\">
Manifest format specification</a>.

@author  David Connelly
@version 1.45, 05/05/04
@see	    Attributes
@since   1.2"
      class 1003035 "FastInputStream"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1963419 // <generalisation>
	  relation 1963419 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1963419 // <generalisation>
	    b parent class_ref 602651 // FilterInputStream
	end

	attribute 2958491 "buf"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2958619 "count"
	  private explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2958747 "pos"
	  private explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8035355 "FastInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "in" type class_ref 179099 // InputStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8035483 "FastInputStream"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 179099 // InputStream
	    param in name "size" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8035611 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8035739 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8035867 "readLine"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reads 'len' bytes from the input stream, or until an end-of-line
is reached. Returns the number of bytes read."
	end

	operation 8035995 "peek"
	  public explicit_return_type "byte"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8036123 "readLine"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "b" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8036251 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8036379 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8036507 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8036635 "fill"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1963035 // <realization>
	relation 1963035 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1963035 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 1963163 // attr (<unidirectional association>)
	relation 1963163 --->
	  a role_name "attr" init_value "=  new Attributes()" private
	    comment " manifest main attributes
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1963163 // attr (<unidirectional association>)
	  b parent class_ref 930331 // Attributes
      end

      classrelation 1963291 // entries (<unidirectional association>)
	relation 1963291 --->
	  a role_name "entries" init_value "=  new HashMap()" private
	    comment " manifest entries
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1963291 // entries (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8033435 "Manifest"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Manifest."
      end

      operation 8033563 "Manifest"
	public explicit_return_type ""
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Manifest from the specified input stream.

@param is the input stream containing manifest data
@throws IOException if an I/O error has occured"
      end

      operation 8033691 "Manifest"
	public explicit_return_type ""
	nparams 1
	  param inout name "man" type class_ref 914587 // Manifest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Manifest that is a copy of the specified Manifest.

@param man the Manifest to copy"
      end

      operation 8033819 "getMainAttributes"
	public return_type class_ref 930331 // Attributes
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the main Attributes for the Manifest.
@return the main Attributes for the Manifest"
      end

      operation 8033947 "getEntries"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,Attributes> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Map of the entries contained in this Manifest. Each entry
is represented by a String name (key) and associated Attributes (value).

@return a Map of the entries contained in this Manifest"
      end

      operation 8034075 "getAttributes"
	public return_type class_ref 930331 // Attributes
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Attributes for the specified entry name.
This method is defined as:
<pre>
	    return (Attributes)getEntries().get(name)
</pre>

@param name entry name
@return the Attributes for the specified entry name"
      end

      operation 8034203 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the main Attributes as well as the entries in this Manifest."
      end

      operation 8034331 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the Manifest to the specified OutputStream. 
Attributes.Name.MANIFEST_VERSION must be set in 
MainAttributes prior to invoking this method.

@param out the output stream
@exception IOException if an I/O error has occurred
@see #getMainAttributes"
      end

      operation 8034459 "make72Safe"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "line" type class_ref 198171 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds line breaks to enforce a maximum 72 bytes per line."
      end

      operation 8034587 "read"
	public explicit_return_type "void"
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the Manifest from the specified InputStream. The entry
names and attributes read will be merged in with the current
manifest entries.

@param is the input stream
@exception IOException if an I/O error has occurred"
      end

      operation 8034715 "parseName"
	private explicit_return_type "String"
	nparams 2
	  param in name "lbuf" explicit_type "byte"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8034843 "toLower"
	private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8034971 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified Object is also a Manifest and has
the same main Attributes and entries.

@param o the object to be compared
@return true if the specified Object is also a Manifest and has
the same main Attributes and entries"
      end

      operation 8035099 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code for this Manifest."
      end

      operation 8035227 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow copy of this Manifest.  The shallow copy is
implemented as follows:
<pre>
    public Object clone() { return new Manifest(this); }
</pre>
@return a shallow copy of this Manifest"
      end
    end

    class 930075 "JarFile"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>JarFile</code> class is used to read the contents of a jar file
from any file that can be opened with <code>java.io.RandomAccessFile</code>.
It extends the class <code>java.util.zip.ZipFile</code> with support
for reading an optional <code>Manifest</code> entry. The
<code>Manifest</code> can be used to specify meta-information about the
jar file and its entries.

<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@author  David Connelly
@version 1.63, 12/09/05
@see	    Manifest
@see     java.util.zip.ZipFile
@see     java.util.jar.JarEntry
@since   1.2"
      classrelation 1958683 // <generalisation>
	relation 1958683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1958683 // <generalisation>
	  b parent class_ref 567707 // ZipFile
      end

      classrelation 1958811 // manRef (<unidirectional association>)
	relation 1958811 --->
	  a role_name "manRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Manifest> ${name}${value};
"
	    classrelation_ref 1958811 // manRef (<unidirectional association>)
	  b parent class_ref 857499 // SoftReference
      end

      classrelation 1958939 // manEntry (<unidirectional association>)
	relation 1958939 --->
	  a role_name "manEntry" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1958939 // manEntry (<unidirectional association>)
	  b parent class_ref 930203 // JarEntry
      end

      classrelation 1959067 // jv (<unidirectional association>)
	relation 1959067 --->
	  a role_name "jv" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1959067 // jv (<unidirectional association>)
	  b parent class_ref 1004315 // JarVerifier
      end

      attribute 2952731 "jvInitialized"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2952859 "verify"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2952987 "computedHasClassPathAttribute"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2953115 "hasClassPathAttribute"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 166683 "initialization"
	
	cpp "" ""
	java "  static {
        SharedSecrets.setJavaUtilJarAccess(new JavaUtilJarAccessImpl());
    }"
	php ""
	python ""
	idl ""
      end

      attribute 2953243 "MANIFEST_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"META-INF/MANIFEST.MF\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The JAR manifest file name.
"
      end

      operation 8019867 "JarFile"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarFile</code> to read from the specified
file <code>name</code>. The <code>JarFile</code> will be verified if
it is signed.
@param name the name of the jar file to be opened for reading
@throws IOException if an I/O error has occurred
@throws SecurityException if access to the file is denied
        by the SecurityManager"
      end

      operation 8019995 "JarFile"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "verify" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarFile</code> to read from the specified
file <code>name</code>.
@param name the name of the jar file to be opened for reading
@param verify whether or not to verify the jar file if
it is signed.
@throws IOException if an I/O error has occurred
@throws SecurityException if access to the file is denied
        by the SecurityManager "
      end

      operation 8020123 "JarFile"
	public explicit_return_type ""
	nparams 1
	  param inout name "file" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarFile</code> to read from the specified
<code>File</code> object. The <code>JarFile</code> will be verified if
it is signed.
@param file the jar file to be opened for reading
@throws IOException if an I/O error has occurred
@throws SecurityException if access to the file is denied
        by the SecurityManager"
      end

      operation 8020251 "JarFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "file" type class_ref 165147 // File
	  param inout name "verify" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarFile</code> to read from the specified
<code>File</code> object.
@param file the jar file to be opened for reading
@param verify whether or not to verify the jar file if
it is signed.
@throws IOException if an I/O error has occurred
@throws SecurityException if access to the file is denied
        by the SecurityManager."
      end

      operation 8020379 "JarFile"
	public explicit_return_type ""
	nparams 3
	  param inout name "file" type class_ref 165147 // File
	  param inout name "verify" explicit_type "boolean"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarFile</code> to read from the specified
<code>File</code> object in the specified mode.  The mode argument
must be either <tt>OPEN_READ</tt> or <tt>OPEN_READ | OPEN_DELETE</tt>.

@param file the jar file to be opened for reading
@param verify whether or not to verify the jar file if
it is signed.
@param mode the mode in which the file is to be opened
@throws IOException if an I/O error has occurred
@throws IllegalArgumentException
        if the <tt>mode</tt> argument is invalid
@throws SecurityException if access to the file is denied
        by the SecurityManager"
      end

      operation 8020507 "getManifest"
	public return_type class_ref 914587 // Manifest
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the jar file manifest, or <code>null</code> if none.

@return the jar file manifest, or <code>null</code> if none

@throws IllegalStateException
        may be thrown if the jar file has been closed"
      end

      operation 8020635 "getManifestFromReference"
	private return_type class_ref 914587 // Manifest
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8020763 "getMetaInfEntryNames"
	private explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8020891 "getJarEntry"
	public return_type class_ref 930203 // JarEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>JarEntry</code> for the given entry name or
<code>null</code> if not found.

@param name the jar file entry name
@return the <code>JarEntry</code> for the given entry name or
        <code>null</code> if not found.

@throws IllegalStateException
        may be thrown if the jar file has been closed

@see java.util.jar.JarEntry"
      end

      operation 8021019 "getEntry"
	public return_type class_ref 1003163 // ZipEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ZipEntry</code> for the given entry name or
<code>null</code> if not found.

@param name the jar file entry name
@return the <code>ZipEntry</code> for the given entry name or
        <code>null</code> if not found

@throws IllegalStateException
        may be thrown if the jar file has been closed

@see java.util.zip.ZipEntry"
      end

      operation 8021147 "entries"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<JarEntry> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of the zip file entries."
      end

      class 1004443 "JarFileEntry"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1959195 // <generalisation>
	  relation 1959195 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1959195 // <generalisation>
	    b parent class_ref 930203 // JarEntry
	end

	operation 8021275 "JarFileEntry"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "ze" type class_ref 1003163 // ZipEntry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8021403 "getAttributes"
	  public return_type class_ref 930331 // Attributes
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8021531 "getCertificates"
	  public return_type class_ref 528283 // Certificate
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8021659 "getCodeSigners"
	  public return_type class_ref 842907 // CodeSigner
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8021787 "maybeInstantiateVerifier"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the JarVerifier has been created if one is
necessary (i.e., the jar appears to be signed.) This is done as
a quick check to avoid processing of the manifest for unsigned
jars."
      end

      operation 8021915 "initializeVerifier"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the verifier object by reading all the manifest
entries and passing them to the verifier."
      end

      operation 8022043 "getBytes"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "ze" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads all the bytes for a given entry. Used to process the
META-INF files."
      end

      operation 8022171 "getInputStream"
	public return_type class_ref 179099 // InputStream
	nparams 1
	  param inout name "ze" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for reading the contents of the specified
zip file entry.
@param ze the zip file entry
@return an input stream for reading the contents of the specified
        zip file entry
@throws ZipException if a zip file format error has occurred
@throws IOException if an I/O error has occurred
@throws SecurityException if any of the jar file entries
        are incorrectly signed.
@throws IllegalStateException
        may be thrown if the jar file has been closed"
      end

      attribute 2953371 "lastOcc"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Statics for hand-coded Boyer-Moore search in hasClassPathAttribute()
 The bad character shift for \"class-path\""
      end

      attribute 2953499 "optoSft"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The good suffix shift for \"class-path\""
      end

      attribute 2953627 "src"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "=  {'c','l','a','s','s','-','p','a','t','h'}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Initialize the shift arrays to search for \"class-path\""
      end

      extra_member 166811 "initialization"
	
	cpp "" ""
	java "  static {
	lastOcc = new int[128];
	optoSft = new int[10];
	lastOcc[(int)'c']=1;
	lastOcc[(int)'l']=2;
	lastOcc[(int)'s']=5;
	lastOcc[(int)'-']=6;
	lastOcc[(int)'p']=7;
	lastOcc[(int)'a']=8;
	lastOcc[(int)'t']=9;
	lastOcc[(int)'h']=10;
	for (int i=0; i<9; i++)
	    optoSft[i]=10;
	optoSft[9]=1;
    }"
	php ""
	python ""
	idl ""
      end

      operation 8022299 "getManEntry"
	private return_type class_ref 930203 // JarEntry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8022427 "hasClassPathAttribute"
	package explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true iff this jar file has a manifest with a class path
 attribute. Returns false if there is no manifest or the manifest
 does not contain a \"Class-Path\" attribute. Currently exported to
 core libraries via sun.misc.SharedSecrets."
      end

      attribute 2953755 "javaHome"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8022555 "isKnownToNotHaveClassPathAttribute"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 930203 "JarEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to represent a JAR file entry."
      classrelation 1956635 // <generalisation>
	relation 1956635 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1956635 // <generalisation>
	  b parent class_ref 1003163 // ZipEntry
      end

      classrelation 1956763 // attr (<unidirectional association>)
	relation 1956763 --->
	  a role_name "attr" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1956763 // attr (<unidirectional association>)
	  b parent class_ref 930331 // Attributes
      end

      classrelation 1956891 // certs (<unidirectional association>)
	relation 1956891 --->
	  a role_name "certs" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1956891 // certs (<unidirectional association>)
	  b parent class_ref 528283 // Certificate
      end

      classrelation 1957019 // signers (<unidirectional association>)
	relation 1957019 --->
	  a role_name "signers" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1957019 // signers (<unidirectional association>)
	  b parent class_ref 842907 // CodeSigner
      end

      operation 8012187 "JarEntry"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarEntry</code> for the specified JAR file
entry name.

@param name the JAR file entry name
@exception NullPointerException if the entry name is <code>null</code>
@exception IllegalArgumentException if the entry name is longer than
           0xFFFF bytes."
      end

      operation 8012315 "JarEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "ze" type class_ref 1003163 // ZipEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarEntry</code> with fields taken from the
specified <code>ZipEntry</code> object.
@param ze the <code>ZipEntry</code> object to create the 
          <code>JarEntry</code> from"
      end

      operation 8012443 "JarEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "je" type class_ref 930203 // JarEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarEntry</code> with fields taken from the
specified <code>JarEntry</code> object.

@param je the <code>JarEntry</code> to copy"
      end

      operation 8012571 "getAttributes"
	public return_type class_ref 930331 // Attributes
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Manifest</code> <code>Attributes</code> for this
entry, or <code>null</code> if none.

@return the <code>Manifest</code> <code>Attributes</code> for this
entry, or <code>null</code> if none"
      end

      operation 8012699 "getCertificates"
	public return_type class_ref 528283 // Certificate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Certificate</code> objects for this entry, or
<code>null</code> if none. This method can only be called once
the <code>JarEntry</code> has been completely verified by reading
from the entry input stream until the end of the stream has been
reached. Otherwise, this method will return <code>null</code>.

<p>The returned certificate array comprises all the signer certificates
that were used to verify this entry. Each signer certificate is
followed by its supporting certificate chain (which may be empty).
Each signer certificate and its supporting certificate chain are ordered
bottom-to-top (i.e., with the signer certificate first and the (root)
certificate authority last).

@return the <code>Certificate</code> objects for this entry, or
<code>null</code> if none."
      end

      operation 8012827 "getCodeSigners"
	public return_type class_ref 842907 // CodeSigner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>CodeSigner</code> objects for this entry, or
<code>null</code> if none. This method can only be called once
the <code>JarEntry</code> has been completely verified by reading
from the entry input stream until the end of the stream has been
reached. Otherwise, this method will return <code>null</code>.

<p>The returned array comprises all the code signers that have signed
this entry. 

@return the <code>CodeSigner</code> objects for this entry, or
<code>null</code> if none.

@since 1.5"
      end
    end

    class 930331 "Attributes"
      visibility public 
      nactuals 8
      actual class class_ref 136603 // Map
        rank 0 explicit_value "any"
      actual class class_ref 136603 // Map
        rank 1 explicit_value "any"
      actual class class_ref 136603 // Map
        rank 2 explicit_value ""
      actual class class_ref 136603 // Map
        rank 3 explicit_value ""
      actual class class_ref 136603 // Map
        rank 4 explicit_value ""
      actual class class_ref 136603 // Map
        rank 5 explicit_value ""
      actual class class_ref 136603 // Map
        rank 6 explicit_value ""
      actual class class_ref 136603 // Map
        rank 7 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Attributes class maps Manifest attribute names to associated string
values. Valid attribute names are case-insensitive, are restricted to 
the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 
characters in length. Attribute values can contain any characters and 
will be UTF8-encoded when written to the output stream.  See the 
<a href=\"../../../../guide/jar/jar.html\">JAR File Specification</a> 
for more information about valid attribute names and values.

@author  David Connelly
@version 1.50, 05/05/04
@see	    Manifest
@since   1.2"
      classrelation 1953819 // <realization>
	relation 1953819 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1953819 // <realization>
	  b parent class_ref 136603 // Map
      end

      classrelation 1953947 // <realization>
	relation 1953947 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1953947 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 1954075 // map (<unidirectional association>)
	relation 1954075 --->
	  a role_name "map" protected
	    comment "
The attribute name-value mappings.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object,Object> ${name}${value};
"
	    classrelation_ref 1954075 // map (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8004635 "Attributes"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Attributes object with default size."
      end

      operation 8004763 "Attributes"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Attributes object with the specified
initial size.

@param size the initial number of attributes"
      end

      operation 8004891 "Attributes"
	public explicit_return_type ""
	nparams 1
	  param inout name "attr" type class_ref 930331 // Attributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Attributes object with the same attribute name-value
mappings as in the specified Attributes.

@param attr the specified Attributes"
      end

      operation 8005019 "get"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "name" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified attribute name, or null if the
attribute name was not found.

@param name the attribute name
@return the value of the specified attribute name, or null if
        not found."
      end

      operation 8005147 "getValue"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified attribute name, specified as
a string, or null if the attribute was not found. The attribute
name is case-insensitive.
<p>
This method is defined as:
<pre>
	    return (String)get(new Attributes.Name((String)name));
</pre>

@param name the attribute name as a string
@return the String value of the specified attribute name, or null if
        not found.
@throws IllegalArgumentException if the attribute name is invalid"
      end

      operation 8005275 "getValue"
	public explicit_return_type "String"
	nparams 1
	  param inout name "name" type class_ref 1002907 // Name
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified Attributes.Name, or null if the
attribute was not found.
<p>
This method is defined as:
<pre>
    return (String)get(name);
</pre>

@param name the Attributes.Name object
@return the String value of the specified Attribute.Name, or null if
        not found."
      end

      class 1002907 "Name"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2943771 "name"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2943899 "hashCode"
	  private explicit_type "int"
	  init_value "=  -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8007707 "Name"
	  public explicit_return_type ""
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new attribute name using the given string name.

@param name the attribute string name
@exception IllegalArgumentException if the attribute name was
           invalid
@exception NullPointerException if the attribute name was null"
	end

	operation 8007835 "isValid"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8007963 "isValid"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8008091 "isAlpha"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8008219 "isDigit"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8008347 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares this attribute name to another for equality.
@param o the object to compare
@return true if this attribute name is equal to the
        specified attribute object"
	end

	operation 8008475 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Computes the hash value for this attribute name."
	end

	operation 8008603 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the attribute name as a String."
	end

	classrelation 1954203 // MANIFEST_VERSION (<unidirectional association>)
	  relation 1954203 --->
	    a role_name "MANIFEST_VERSION" init_value "=  new Name(\"Manifest-Version\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Manifest-Version</code> 
manifest attribute. This attribute indicates the version number 
of the manifest standard to which a JAR file's manifest conforms.
@see <a href=\"../../../../guide/jar/jar.html#JAR Manifest\">
     Manifest and Signature Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954203 // MANIFEST_VERSION (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954331 // SIGNATURE_VERSION (<unidirectional association>)
	  relation 1954331 --->
	    a role_name "SIGNATURE_VERSION" init_value "=  new Name(\"Signature-Version\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Signature-Version</code> 
manifest attribute used when signing JAR files.
@see <a href=\"../../../../guide/jar/jar.html#JAR Manifest\">
     Manifest and Signature Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954331 // SIGNATURE_VERSION (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954459 // CONTENT_TYPE (<unidirectional association>)
	  relation 1954459 --->
	    a role_name "CONTENT_TYPE" init_value "=  new Name(\"Content-Type\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Content-Type</code> 
manifest attribute.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954459 // CONTENT_TYPE (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954587 // CLASS_PATH (<unidirectional association>)
	  relation 1954587 --->
	    a role_name "CLASS_PATH" init_value "=  new Name(\"Class-Path\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Class-Path</code> 
manifest attribute. Bundled extensions can use this attribute 
to find other JAR files containing needed classes.
@see <a href=\"../../../../guide/extensions/spec.html#bundled\">
     Extensions Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954587 // CLASS_PATH (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954715 // MAIN_CLASS (<unidirectional association>)
	  relation 1954715 --->
	    a role_name "MAIN_CLASS" init_value "=  new Name(\"Main-Class\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Main-Class</code> manifest 
attribute used for launching applications packaged in JAR files. 
The <code>Main-Class</code> attribute is used in conjunction 
with the <code>-jar</code> command-line option of the 
<tt>java</tt> application launcher.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954715 // MAIN_CLASS (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954843 // SEALED (<unidirectional association>)
	  relation 1954843 --->
	    a role_name "SEALED" init_value "=  new Name(\"Sealed\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Sealed</code> manifest attribute 
used for sealing.
@see <a href=\"../../../../guide/extensions/spec.html#sealing\">
     Extension Sealing</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954843 // SEALED (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1954971 // EXTENSION_LIST (<unidirectional association>)
	  relation 1954971 --->
	    a role_name "EXTENSION_LIST" init_value "=  new Name(\"Extension-List\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Extension-List</code> manifest attribute 
used for declaring dependencies on installed extensions.
@see <a href=\"../../../../guide/extensions/spec.html#dependency\">
     Installed extension dependency</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1954971 // EXTENSION_LIST (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955099 // EXTENSION_NAME (<unidirectional association>)
	  relation 1955099 --->
	    a role_name "EXTENSION_NAME" init_value "=  new Name(\"Extension-Name\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Extension-Name</code> manifest attribute 
used for declaring dependencies on installed extensions.
@see <a href=\"../../../../guide/extensions/spec.html#dependency\">
     Installed extension dependency</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955099 // EXTENSION_NAME (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955227 // EXTENSION_INSTALLATION (<unidirectional association>)
	  relation 1955227 --->
	    a role_name "EXTENSION_INSTALLATION" init_value "=  new Name(\"Extension-Installation\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Extension-Name</code> manifest attribute 
used for declaring dependencies on installed extensions.
@see <a href=\"../../../../guide/extensions/spec.html#dependency\">
     Installed extension dependency</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955227 // EXTENSION_INSTALLATION (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955355 // IMPLEMENTATION_TITLE (<unidirectional association>)
	  relation 1955355 --->
	    a role_name "IMPLEMENTATION_TITLE" init_value "=  new Name(\"Implementation-Title\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Implementation-Title</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955355 // IMPLEMENTATION_TITLE (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955483 // IMPLEMENTATION_VERSION (<unidirectional association>)
	  relation 1955483 --->
	    a role_name "IMPLEMENTATION_VERSION" init_value "=  new Name(\"Implementation-Version\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Implementation-Version</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955483 // IMPLEMENTATION_VERSION (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955611 // IMPLEMENTATION_VENDOR (<unidirectional association>)
	  relation 1955611 --->
	    a role_name "IMPLEMENTATION_VENDOR" init_value "=  new Name(\"Implementation-Vendor\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Implementation-Vendor</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955611 // IMPLEMENTATION_VENDOR (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955739 // IMPLEMENTATION_VENDOR_ID (<unidirectional association>)
	  relation 1955739 --->
	    a role_name "IMPLEMENTATION_VENDOR_ID" init_value "=  new Name(\"Implementation-Vendor-Id\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Implementation-Vendor-Id</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955739 // IMPLEMENTATION_VENDOR_ID (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955867 // IMPLEMENTATION_URL (<unidirectional association>)
	  relation 1955867 --->
	    a role_name "IMPLEMENTATION_URL" init_value "=  new Name(\"Implementation-URL\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Implementation-Vendor-URL</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955867 // IMPLEMENTATION_URL (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1955995 // SPECIFICATION_TITLE (<unidirectional association>)
	  relation 1955995 --->
	    a role_name "SPECIFICATION_TITLE" init_value "=  new Name(\"Specification-Title\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Specification-Title</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1955995 // SPECIFICATION_TITLE (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1956123 // SPECIFICATION_VERSION (<unidirectional association>)
	  relation 1956123 --->
	    a role_name "SPECIFICATION_VERSION" init_value "=  new Name(\"Specification-Version\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Specification-Version</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1956123 // SPECIFICATION_VERSION (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end

	classrelation 1956251 // SPECIFICATION_VENDOR (<unidirectional association>)
	  relation 1956251 --->
	    a role_name "SPECIFICATION_VENDOR" init_value "=  new Name(\"Specification-Vendor\")" class_relation const_relation public
	      comment "
<code>Name</code> object for <code>Specification-Vendor</code> 
manifest attribute used for package versioning.
@see <a href=\"../../../../guide/versioning/spec/VersioningSpecification.html#PackageVersioning\">
     Java Product Versioning Specification</a>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1956251 // SPECIFICATION_VENDOR (<unidirectional association>)
	    b parent class_ref 1002907 // Name
	end
      end

      operation 8005403 "put"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "name" explicit_type "Object"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified attribute name
(key) in this Map. If the Map previously contained a mapping for
the attribute name, the old value is replaced.

@param name the attribute name
@param value the attribute value
@return the previous value of the attribute, or null if none
@exception ClassCastException if the name is not a Attributes.Name
           or the value is not a String"
      end

      operation 8005531 "putValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified value with the specified attribute name,
specified as a String. The attributes name is case-insensitive.
If the Map previously contained a mapping for the attribute name,
the old value is replaced.
<p>
This method is defined as:
<pre>
	    return (String)put(new Attributes.Name(name), value);
</pre>

@param name the attribute name as a string
@param value the attribute value
@return the previous value of the attribute, or null if none
@exception IllegalArgumentException if the attribute name is invalid"
      end

      operation 8005659 "remove"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "name" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the attribute with the specified name (key) from this Map.
Returns the previous attribute value, or null if none.

@param name attribute name
@return the previous value of the attribute, or null if none"
      end

      operation 8005787 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this Map maps one or more attribute names (keys)
to the specified value.

@param value the attribute value
@return true if this Map maps one or more attribute names to
        the specified value"
      end

      operation 8005915 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this Map contains the specified attribute name (key).

@param name the attribute name
@return true if this Map contains the specified attribute name"
      end

      operation 8006043 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attr" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the attribute name-value mappings from the specified
Attributes to this Map. Duplicate mappings will be replaced.

@param attr the Attributes to be stored in this map
@exception ClassCastException if attr is not an Attributes"
      end

      operation 8006171 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all attributes from this Map."
      end

      operation 8006299 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of attributes in this Map."
      end

      operation 8006427 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this Map contains no attributes."
      end

      operation 8006555 "keySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Set view of the attribute names (keys) contained in this Map."
      end

      operation 8006683 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Collection view of the attribute values contained in this Map."
      end

      operation 8006811 "entrySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<Object,Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Collection view of the attribute name-value mappings
contained in this Map."
      end

      operation 8006939 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Attributes object with this Map for equality.
Returns true if the given object is also an instance of Attributes
and the two Attributes objects represent the same mappings.

@param o the Object to be compared
@return true if the specified Object is equal to this Map"
      end

      operation 8007067 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this Map."
      end

      operation 8007195 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the Attributes, implemented as follows:
<pre>
    public Object clone() { return new Attributes(this); }
</pre>
Since the attribute names and values are themselves immutable,
the Attributes returned can be safely modified without affecting
the original."
      end

      operation 8007323 "write"
	package explicit_return_type "void"
	nparams 1
	  param inout name "os" type class_ref 207003 // DataOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the current attributes to the specified data output stream.
XXX Need to handle UTF8 values and break up lines longer than 72 bytes"
      end

      operation 8007451 "writeMain"
	package explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 207003 // DataOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the current attributes to the specified data output stream,
make sure to write out the MANIFEST_VERSION or SIGNATURE_VERSION
attributes first.

XXX Need to handle UTF8 values and break up lines longer than 72 bytes"
      end

      operation 8007579 "read"
	package explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 1003035 // FastInputStream
	  param in name "lbuf" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads attributes from the specified input stream.
XXX Need to handle UTF8 values."
      end
    end

    class 1003419 "JarException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an error of some sort has occurred while reading from
or writing to a JAR file.

@author  David Connelly
@version 1.12, 12/19/03
@since   1.2"
      classrelation 1957275 // <generalisation>
	relation 1957275 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1957275 // <generalisation>
	  b parent class_ref 1003547 // ZipException
      end

      operation 8013211 "JarException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a JarException with no detail message."
      end

      operation 8013339 "JarException"
	public explicit_return_type ""
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a JarException with the specified detail message.
@param s the detail message"
      end
    end

    class 1004315 "JarVerifier"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
@version 	1.37 05/05/27
@author	Roland Schemers"
      attribute 2957467 "debug"
	class_attribute const_attribute package explicit_type "Debug"
	init_value "=  Debug.getInstance(\"jar\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Are we debugging ? "
      end

      classrelation 1961755 // verifiedSigners (<unidirectional association>)
	relation 1961755 --->
	  a role_name "verifiedSigners" private
	    comment " a table mapping names to code signers, for jar entries that have
had their actual hashes verified 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961755 // verifiedSigners (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1961883 // sigFileSigners (<unidirectional association>)
	relation 1961883 --->
	  a role_name "sigFileSigners" private
	    comment " a table mapping names to code signers, for jar entries that have
passed the .SF/.DSA -> MANIFEST check 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1961883 // sigFileSigners (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1962011 // sigFileData (<unidirectional association>)
	relation 1962011 --->
	  a role_name "sigFileData" private
	    comment " a hash table to hold .SF bytes 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1962011 // sigFileData (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1962139 // pendingBlocks (<unidirectional association>)
	relation 1962139 --->
	  a role_name "pendingBlocks" private
	    comment " \"queue\" of pending PKCS7 blocks that we couldn't parse
 until we parsed the .SF file 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1962139 // pendingBlocks (<unidirectional association>)
	  b parent class_ref 137627 // ArrayList
      end

      classrelation 1962267 // signerCache (<unidirectional association>)
	relation 1962267 --->
	  a role_name "signerCache" private
	    comment " cache of CodeSigner objects 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1962267 // signerCache (<unidirectional association>)
	  b parent class_ref 137627 // ArrayList
      end

      attribute 2957595 "parsingBlockOrSF"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Are we parsing a block? "
      end

      attribute 2957723 "parsingMeta"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Are we done parsing META-INF entries? "
      end

      attribute 2957851 "anyToVerify"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Are there are files to verify? "
      end

      classrelation 1962395 // baos (<unidirectional association>)
	relation 1962395 --->
	  a role_name "baos" private
	    comment " The output stream to use when keeping track of files we are interested
in 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1962395 // baos (<unidirectional association>)
	  b parent class_ref 205595 // ByteArrayOutputStream
      end

      attribute 2957979 "manDig"
	private explicit_type "ManifestDigester"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The ManifestDigester object "
      end

      attribute 2958107 "manifestRawBytes"
	package explicit_type "byte"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the bytes for the manDig object "
      end

      operation 8031515 "JarVerifier"
	public explicit_return_type ""
	nparams 1
	  param in name "rawBytes" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8031643 "beginEntry"
	public explicit_return_type "void"
	nparams 2
	  param inout name "je" type class_ref 930203 // JarEntry
	  param inout name "mev" explicit_type "ManifestEntryVerifier"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method scans to see which entry we're parsing and
keeps various state information depending on what type of
file is being parsed."
      end

      operation 8031771 "update"
	public explicit_return_type "void"
	nparams 2
	  param in name "b" explicit_type "int"
	  param inout name "mev" explicit_type "ManifestEntryVerifier"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "update a single byte."
      end

      operation 8031899 "update"
	public explicit_return_type "void"
	nparams 5
	  param in name "n" explicit_type "int"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "mev" explicit_type "ManifestEntryVerifier"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "update an array of bytes."
      end

      operation 8032027 "processEntry"
	private explicit_return_type "void"
	nparams 1
	  param inout name "mev" explicit_type "ManifestEntryVerifier"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called when we reach the end of entry in one of the read() methods."
      end

      operation 8032155 "getCerts"
	public return_type class_ref 528283 // Certificate
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of java.security.cert.Certificate objects for
the given file in the jar. "
      end

      operation 8032283 "getCodeSigners"
	public return_type class_ref 842907 // CodeSigner
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "return an array of CodeSigner objects for
the given file in the jar. this array is not cloned.
"
      end

      operation 8032411 "nothingToVerify"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns true if there no files to verify.
should only be called after all the META-INF entries
have been processed."
      end

      operation 8032539 "doneWithMeta"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called to let us know we have processed all the
META-INF entries, and if we re-read one of them, don't
re-process it. Also gets rid of any data structures
we needed when parsing META-INF entries."
      end

      class 1005467 "VerifierStream"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1962523 // <generalisation>
	  relation 1962523 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1962523 // <generalisation>
	    b parent class_ref 179099 // InputStream
	end

	classrelation 1962651 // is (<unidirectional association>)
	  relation 1962651 --->
	    a role_name "is" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1962651 // is (<unidirectional association>)
	    b parent class_ref 179099 // InputStream
	end

	classrelation 1962779 // jv (<unidirectional association>)
	  relation 1962779 --->
	    a role_name "jv" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1962779 // jv (<unidirectional association>)
	    b parent class_ref 1004315 // JarVerifier
	end

	attribute 2958235 "mev"
	  private explicit_type "ManifestEntryVerifier"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2958363 "numLeft"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8032667 "VerifierStream"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "man" type class_ref 914587 // Manifest
	    param inout name "je" type class_ref 930203 // JarEntry
	    param inout name "is" type class_ref 179099 // InputStream
	    param inout name "jv" type class_ref 1004315 // JarVerifier
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8032795 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8032923 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8033051 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8033179 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1004571 "JarInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>JarInputStream</code> class is used to read the contents of
a JAR file from any input stream. It extends the class
<code>java.util.zip.ZipInputStream</code> with support for reading
an optional <code>Manifest</code> entry. The <code>Manifest</code>
can be used to store meta-information about the JAR file and its entries.

@author  David Connelly
@version 1.35, 05/27/05
@see	    Manifest
@see	    java.util.zip.ZipInputStream
@since   1.2"
      classrelation 1960091 // <generalisation>
	relation 1960091 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1960091 // <generalisation>
	  b parent class_ref 1004699 // ZipInputStream
      end

      classrelation 1960219 // man (<unidirectional association>)
	relation 1960219 --->
	  a role_name "man" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1960219 // man (<unidirectional association>)
	  b parent class_ref 914587 // Manifest
      end

      classrelation 1960347 // first (<unidirectional association>)
	relation 1960347 --->
	  a role_name "first" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1960347 // first (<unidirectional association>)
	  b parent class_ref 930203 // JarEntry
      end

      classrelation 1960475 // jv (<unidirectional association>)
	relation 1960475 --->
	  a role_name "jv" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1960475 // jv (<unidirectional association>)
	  b parent class_ref 1004315 // JarVerifier
      end

      attribute 2955675 "mev"
	private explicit_type "ManifestEntryVerifier"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8026267 "JarInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarInputStream</code> and reads the optional
manifest. If a manifest is present, also attempts to verify
the signatures if the JarInputStream is signed.
@param in the actual input stream
@exception IOException if an I/O error has occurred"
      end

      operation 8026395 "JarInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "verify" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarInputStream</code> and reads the optional
manifest. If a manifest is present and verify is true, also attempts 
to verify the signatures if the JarInputStream is signed.

@param in the actual input stream
@param verify whether or not to verify the JarInputStream if
it is signed.
@exception IOException if an I/O error has occurred"
      end

      operation 8026523 "getBytes"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8026651 "getManifest"
	public return_type class_ref 914587 // Manifest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Manifest</code> for this JAR file, or
<code>null</code> if none.

@return the <code>Manifest</code> for this JAR file, or
        <code>null</code> if none."
      end

      operation 8026779 "getNextEntry"
	public return_type class_ref 1003163 // ZipEntry
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next ZIP file entry and positions the stream at the
beginning of the entry data. If verification has been enabled,
any invalid signature detected while positioning the stream for
the next entry will result in an exception.
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
@exception SecurityException if any of the jar file entries
        are incorrectly signed."
      end

      operation 8026907 "getNextJarEntry"
	public return_type class_ref 930203 // JarEntry
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next JAR file entry and positions the stream at the
beginning of the entry data. If verification has been enabled,
any invalid signature detected while positioning the stream for
the next entry will result in an exception.
@return the next JAR file entry, or null if there are no more entries
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
@exception SecurityException if any of the jar file entries
        are incorrectly signed."
      end

      operation 8027035 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads from the current JAR file entry into an array of bytes.
Blocks until some input is available.
If verification has been enabled, any invalid signature
on the current entry will be reported at some point before the
end of the entry is reached.
@param b the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes to read
@return the actual number of bytes read, or -1 if the end of the
        entry is reached
@exception ZipException if a ZIP file error has occurred
@exception IOException if an I/O error has occurred
@exception SecurityException if any of the jar file entries
        are incorrectly signed."
      end

      operation 8027163 "createZipEntry"
	protected return_type class_ref 1003163 // ZipEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarEntry</code> (<code>ZipEntry</code>) for the
specified JAR file entry name. The manifest attributes of
the specified JAR file entry name will be copied to the new 
<CODE>JarEntry</CODE>.

@param name the name of the JAR/ZIP file entry
@return the <code>JarEntry</code> object just created"
      end
    end

    class 1005083 "JarOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>JarOutputStream</code> class is used to write the contents
of a JAR file to any output stream. It extends the class
<code>java.util.zip.ZipOutputStream</code> with support
for writing an optional <code>Manifest</code> entry. The
<code>Manifest</code> can be used to specify meta-information about
the JAR file and its entries.

@author  David Connelly
@version 1.22, 12/19/03
@see	    Manifest
@see	    java.util.zip.ZipOutputStream
@since   1.2"
      classrelation 1961627 // <generalisation>
	relation 1961627 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1961627 // <generalisation>
	  b parent class_ref 1005211 // ZipOutputStream
      end

      attribute 2957211 "JAR_MAGIC"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0xCAFE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8030747 "JarOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "man" type class_ref 914587 // Manifest
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarOutputStream</code> with the specified
<code>Manifest</code>. The manifest is written as the first
entry to the output stream.

@param out the actual output stream
@param man the optional <code>Manifest</code>
@exception IOException if an I/O error has occurred"
      end

      operation 8030875 "JarOutputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>JarOutputStream</code> with no manifest.
@param out the actual output stream
@exception IOException if an I/O error has occurred"
      end

      operation 8031003 "putNextEntry"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ze" type class_ref 1003163 // ZipEntry
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begins writing a new JAR file entry and positions the stream
to the start of the entry data. This method will also close
any previous entry. The default compression method will be
used if no compression method was specified for the entry.
The current time will be used if the entry has no set modification
time.

@param ze the ZIP/JAR entry to be written
@exception ZipException if a ZIP error has occurred
@exception IOException if an I/O error has occurred"
      end

      attribute 2957339 "firstEntry"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8031131 "hasMagic"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "edata" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if specified byte array contains the
jar magic extra field id."
      end

      operation 8031259 "get16"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches unsigned 16-bit value from byte array at specified offset.
The bytes are assumed to be in Intel (little-endian) byte order."
      end

      operation 8031387 "set16"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets 16-bit value at specified offset. The bytes are assumed to
be in Intel (little-endian) byte order."
      end
    end

    class 1005595 "JavaUtilJarAccessImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 8033307 "jarFileHasClassPathAttribute"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "jar" type class_ref 930075 // JarFile
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1005851 "Pack200"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Transforms a JAR file to or from a packed stream in Pack200 format.
Please refer to Network Trasfer Format JSR 200 Specification at 
http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html
<p>
Typically the packer engine is used by application developers
to deploy or host JAR files on a website.
The unpacker  engine is used by deployment applications to
transform the byte-stream back to JAR format.
<p>
Here is an example using  packer and unpacker:<p>
<blockquote><pre>
   import java.util.jar.Pack200;
   import java.util.jar.Pack200.*;
   ...
   // Create the Packer object
   Packer packer = Pack200.newPacker();

   // Initialize the state by setting the desired properties
   Map p = packer.properties();
   // take more time choosing codings for better compression
   p.put(Packer.EFFORT, \"7\");  // default is \"5\"
   // use largest-possible archive segments (>10% better compression).
   p.put(Packer.SEGMENT_LIMIT, \"-1\");
   // reorder files for better compression.
   p.put(Packer.KEEP_FILE_ORDER, Packer.FALSE);
   // smear modification times to a single value.
   p.put(Packer.MODIFICATION_TIME, Packer.LATEST);
   // ignore all JAR deflation requests,
   // transmitting a single request to use \"store\" mode.
   p.put(Packer.DEFLATE_HINT, Packer.FALSE);
   // discard debug attributes
   p.put(Packer.CODE_ATTRIBUTE_PFX+\"LineNumberTable\", Packer.STRIP);
   // throw an error if an attribute is unrecognized
   p.put(Packer.UNKNOWN_ATTRIBUTE, Packer.ERROR);
   // pass one class file uncompressed:
   p.put(Packer.PASS_FILE_PFX+0, \"mutants/Rogue.class\");
   try {
       JarFile jarFile = new JarFile(\"/tmp/testref.jar\");
       FileOutputStream fos = new FileOutputStream(\"/tmp/test.pack\");
       // Call the packer
       packer.pack(jarFile, fos);
       jarFile.close();
       fos.close();
       
       File f = new File(\"/tmp/test.pack\");
       FileOutputStream fostream = new FileOutputStream(\"/tmp/test.jar\");
       JarOutputStream jostream = new JarOutputStream(fostream);
       Unpacker unpacker = Pack200.newUnpacker();
       // Call the unpacker
       unpacker.unpack(f, jostream);
       // Must explicitly close the output.
       jostream.close();
   } catch (IOException ioe) {
       ioe.printStackTrace();
   }
</pre></blockquote>
<p>
A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers.
The deployment applications can use \"Accept-Encoding=pack200-gzip\". This 
indicates to the server that the client application desires a version of
the file encoded with Pack200 and further compressed with gzip. Please 
refer to Java Deployment Guide <TBD> for more details and techniques.
<p>
Unless otherwise noted, passing a <tt>null</tt> argument to a constructor or
method in this class will cause a {@link NullPointerException} to be thrown.

@author John Rose
@author Kumar Srinivasan
@version 1.4, 12/08/03
@since 1.5"
      operation 8036763 "Pack200"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1005979 "Packer"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2958875 "SEGMENT_LIMIT"
	  public explicit_type "String"
	  init_value "=  \"pack.segment.limit\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "This property is a numeral giving the estimated target size N
(in bytes) of each archive segment.
If a single input file requires more than N bytes,
it will be given its own archive segment.
<p>
As a special case, a value of -1 will produce a single large
segment with all input files, while a value of 0 will
produce one segment for each class.
Larger archive segments result in less fragmentation and
better compression, but processing them requires more memory.
<p>
The size of each segment is estimated by counting the size of each
input file to be transmitted in the segment, along with the size
of its name and other transmitted properties.
<p>
The default is 1000000 (a million bytes).  This allows input JAR files
of moderate size to be transmitted in one segment.  It also puts
a limit on memory requirements for packers and unpackers.
<p>
A 10Mb JAR packed without this limit will
typically pack about 10% smaller, but the packer may require
a larger Java heap (about ten times the segment limit).
"
	end

	attribute 2959003 "KEEP_FILE_ORDER"
	  public explicit_type "String"
	  init_value "=  \"pack.keep.file.order\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "If this property is set to {@link #TRUE}, the packer will transmit
all elements in their original order within the source archive.
<p>
If it is set to {@link #FALSE}, the packer may reorder elements,
and also remove JAR directory entries, which carry no useful
information for Java applications.
(Typically this enables better compression.)
<p>
The default is {@link #TRUE}, which preserves the input information,
but may cause the transmitted archive to be larger than necessary.
"
	end

	attribute 2959131 "EFFORT"
	  public explicit_type "String"
	  init_value "=  \"pack.effort\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "If this property is set to a single decimal digit, the packer will
use the indicated amount of effort in compressing the archive.
Level 1 may produce somewhat larger size and faster compression speed,
while level 9 will take much longer but may produce better compression.
<p>
The special value 0 instructs the packer to copy through the
original JAR file directly, with no compression.  The JSR 200
standard requires any unpacker to understand this special case
as a pass-through of the entire archive.
<p>
The default is 5, investing a modest amount of time to
produce reasonable compression.
"
	end

	attribute 2959259 "DEFLATE_HINT"
	  public explicit_type "String"
	  init_value "=  \"pack.deflate.hint\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "If this property is set to {@link #TRUE} or {@link #FALSE}, the packer
will set the deflation hint accordingly in the output archive, and
will not transmit the individual deflation hints of archive elements.
<p>
If this property is set to the special string {@link #KEEP}, the packer
will attempt to determine an independent deflation hint for each
available element of the input archive, and transmit this hint separately.
<p>
The default is {@link #KEEP}, which preserves the input information,
but may cause the transmitted archive to be larger than necessary.
<p>
It is up to the unpacker implementation
to take action upon the hint to suitably compress the elements of
the resulting unpacked jar.
<p>
The deflation hint of a ZIP or JAR element indicates
whether the element was deflated or stored directly.
"
	end

	attribute 2959387 "MODIFICATION_TIME"
	  public explicit_type "String"
	  init_value "=  \"pack.modification.time\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "If this property is set to the special string {@link #LATEST},
the packer will attempt to determine the latest modification time,
among all the available entries in the original archive or the latest
modification time of all the available entries in each segment.
This single value will be transmitted as part of the segment and applied
to all the entries in each segment, {@link #SEGMENT_LIMIT}.
<p>
This can marginally decrease the transmitted size of the
archive, at the expense of setting all installed files to a single
date.
<p>
If this property is set to the special string {@link #KEEP},
the packer transmits a separate modification time for each input
element.
<p>
The default is {@link #KEEP}, which preserves the input information,
but may cause the transmitted archive to be larger than necessary.
<p>
It is up to the unpacker implementation to take action to suitably
set the modification time of each element of its output file.
@see #SEGMENT_LIMIT
"
	end

	attribute 2959515 "PASS_FILE_PFX"
	  public explicit_type "String"
	  init_value "=  \"pack.pass.file.\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Indicates that a file should be passed through bytewise, with no
compression.  Multiple files may be specified by specifying
additional properties with distinct strings appended, to
make a family of properties with the common prefix.
<p>
There is no pathname transformation, except
that the system file separator is replaced by the JAR file
separator '/'.
<p>
The resulting file names must match exactly as strings with their
occurrences in the JAR file.
<p>
If a property value is a directory name, all files under that
directory will be passed also.
<p>
Examples:
<pre><code>
    Map p = packer.properties();
    p.put(PASS_FILE_PFX+0, \"mutants/Rogue.class\");
    p.put(PASS_FILE_PFX+1, \"mutants/Wolverine.class\");
    p.put(PASS_FILE_PFX+2, \"mutants/Storm.class\");
    # Pass all files in an entire directory hierarchy:
    p.put(PASS_FILE_PFX+3, \"police/\");
</pre></code>.
"
	end

	attribute 2959643 "UNKNOWN_ATTRIBUTE"
	  public explicit_type "String"
	  init_value "=  \"pack.unknown.attribute\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "/ Attribute control.

Indicates the action to take when a class-file containing an unknown
attribute is encountered.  Possible values are the strings {@link #ERROR},
{@link #STRIP}, and {@link #PASS}.
<p>
The string {@link #ERROR} means that the pack operation
as a whole will fail, with a suitable explanation.
The string
{@link #STRIP} means that the attribute will be dropped.
The string
{@link #PASS} means that the whole class-file will be passed through
(as if it were a resource file) without compression, with  a suitable warning.
This is the default value for this property.
<p>
Examples:
<pre><code>
    Map p = pack200.getProperties();
    p.put(UNKNOWN_ATTRIBUTE, ERROR);
    p.put(UNKNOWN_ATTRIBUTE, STRIP);
    p.put(UNKNOWN_ATTRIBUTE, PASS);
</pre></code>
"
	end

	attribute 2959771 "CLASS_ATTRIBUTE_PFX"
	  public explicit_type "String"
	  init_value "=  \"pack.class.attribute.\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "When concatenated with a class attribute name,
indicates the format of that attribute,
using the layout language specified in the JSR 200 specification.
<p>
For example, the effect of this option is built in:
<code>pack.class.attribute.SourceFile=RUH</code>.
<p>
The special strings {@link #ERROR}, {@link #STRIP}, and {@link #PASS} are
also allowed, with the same meaning as {@link #UNKNOWN_ATTRIBUTE}.
This provides a way for users to request that specific attributes be
refused, stripped, or passed bitwise (with no class compression).
<p>
Code like this might be used to support attributes for JCOV:
<pre><code>
    Map p = packer.properties();
    p.put(CODE_ATTRIBUTE_PFX+\"CoverageTable\",       \"NH[PHHII]\");
    p.put(CODE_ATTRIBUTE_PFX+\"CharacterRangeTable\", \"NH[PHPOHIIH]\");
    p.put(CLASS_ATTRIBUTE_PFX+\"SourceID\",           \"RUH\");
    p.put(CLASS_ATTRIBUTE_PFX+\"CompilationID\",      \"RUH\");
</code></pre>
<p>
Code like this might be used to strip debugging attributes:
<pre><code>
    Map p = packer.properties();
    p.put(CODE_ATTRIBUTE_PFX+\"LineNumberTable\",    STRIP);
    p.put(CODE_ATTRIBUTE_PFX+\"LocalVariableTable\", STRIP);
    p.put(CLASS_ATTRIBUTE_PFX+\"SourceFile\",        STRIP);
</code></pre>
"
	end

	attribute 2959899 "FIELD_ATTRIBUTE_PFX"
	  public explicit_type "String"
	  init_value "=  \"pack.field.attribute.\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "When concatenated with a field attribute name,
indicates the format of that attribute.
For example, the effect of this option is built in:
<code>pack.field.attribute.Deprecated=</code>.
The special strings {@link #ERROR}, {@link #STRIP}, and
{@link #PASS} are also allowed.
@see #CLASS_ATTRIBUTE_PFX
"
	end

	attribute 2960027 "METHOD_ATTRIBUTE_PFX"
	  public explicit_type "String"
	  init_value "=  \"pack.method.attribute.\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "When concatenated with a method attribute name,
indicates the format of that attribute.
For example, the effect of this option is built in:
<code>pack.method.attribute.Exceptions=NH[RCH]</code>.
The special strings {@link #ERROR}, {@link #STRIP}, and {@link #PASS}
are also allowed.
@see #CLASS_ATTRIBUTE_PFX
"
	end

	attribute 2960155 "CODE_ATTRIBUTE_PFX"
	  public explicit_type "String"
	  init_value "=  \"pack.code.attribute.\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "When concatenated with a code attribute name,
indicates the format of that attribute.
For example, the effect of this option is built in:
<code>pack.code.attribute.LocalVariableTable=NH[PHOHRUHRSHH]</code>.
The special strings {@link #ERROR}, {@link #STRIP}, and {@link #PASS}
are also allowed.
@see #CLASS_ATTRIBUTE_PFX
"
	end

	attribute 2960283 "PROGRESS"
	  public explicit_type "String"
	  init_value "=  \"pack.progress\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The unpacker's progress as a percentage, as periodically
updated by the unpacker.
Values of 0 - 100 are normal, and -1 indicates a stall.
Observe this property with a {@link PropertyChangeListener}.
<p>
At a minimum, the unpacker must set progress to 0
at the beginning of a packing operation, and to 100
at the end.
@see  #addPropertyChangeListener
"
	end

	attribute 2960411 "KEEP"
	  public explicit_type "String"
	  init_value "=  \"keep\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"keep\", a possible value for certain properties.
@see #DEFLATE_HINT
@see #MODIFICATION_TIME
"
	end

	attribute 2960539 "PASS"
	  public explicit_type "String"
	  init_value "=  \"pass\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"pass\", a possible value for certain properties.
@see #UNKNOWN_ATTRIBUTE
@see #CLASS_ATTRIBUTE_PFX
@see #FIELD_ATTRIBUTE_PFX
@see #METHOD_ATTRIBUTE_PFX
@see #CODE_ATTRIBUTE_PFX
"
	end

	attribute 2960667 "STRIP"
	  public explicit_type "String"
	  init_value "=  \"strip\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"strip\", a possible value for certain properties.
@see #UNKNOWN_ATTRIBUTE
@see #CLASS_ATTRIBUTE_PFX
@see #FIELD_ATTRIBUTE_PFX
@see #METHOD_ATTRIBUTE_PFX
@see #CODE_ATTRIBUTE_PFX
"
	end

	attribute 2960795 "ERROR"
	  public explicit_type "String"
	  init_value "=  \"error\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"error\", a possible value for certain properties.
@see #UNKNOWN_ATTRIBUTE
@see #CLASS_ATTRIBUTE_PFX
@see #FIELD_ATTRIBUTE_PFX
@see #METHOD_ATTRIBUTE_PFX
@see #CODE_ATTRIBUTE_PFX
"
	end

	attribute 2960923 "TRUE"
	  public explicit_type "String"
	  init_value "=  \"true\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"true\", a possible value for certain properties.
@see #KEEP_FILE_ORDER
@see #DEFLATE_HINT
"
	end

	attribute 2961051 "FALSE"
	  public explicit_type "String"
	  init_value "=  \"false\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"false\", a possible value for certain properties.
@see #KEEP_FILE_ORDER
@see #DEFLATE_HINT
"
	end

	attribute 2961179 "LATEST"
	  public explicit_type "String"
	  init_value "=  \"latest\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"latest\", a possible value for certain properties.
@see #MODIFICATION_TIME
"
	end

	operation 8037147 "properties"
	  public return_type class_ref 140827 // SortedMap
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the set of this engine's properties.
This set is a \"live view\", so that changing its
contents immediately affects the Packer engine, and
changes from the engine (such as progress indications)
are immediately visible in the map.

<p>The property map may contain pre-defined implementation
specific and default properties.  Users are encouraged to
read the information and fully understand the implications,
before modifying pre-existing properties.
<p>
Implementation specific properties are prefixed with a
package name associated with the implementor, beginning
with <tt>com.</tt> or a similar prefix.
All property names beginning with <tt>pack.</tt> and
<tt>unpack.</tt> are reserved for use by this API.
<p>
Unknown properties may be ignored or rejected with an
unspecified error, and invalid entries may cause an
unspecified error to be thrown.

<p>
The returned map implements all optional {@link SortedMap} operations
@return A sorted association of property key strings to property 
values."
	end

	operation 8037275 "pack"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "in" type class_ref 930075 // JarFile
	    param inout name "out" type class_ref 183835 // OutputStream
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Takes a JarFile and converts it into a Pack200 archive.
<p>
Closes its input but not its output.  (Pack200 archives are appendable.)
@param in a JarFile
@param out an OutputStream
@exception IOException if an error is encountered."
	end

	operation 8037403 "pack"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "in" type class_ref 1004571 // JarInputStream
	    param inout name "out" type class_ref 183835 // OutputStream
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Takes a JarInputStream and converts it into a Pack200 archive.
<p>
Closes its input but not its output.  (Pack200 archives are appendable.)
<p>
The modification time and deflation hint attributes are not available,
for the JAR manifest file and its containing directory.

@see #MODIFICATION_TIME
@see #DEFLATE_HINT
@param in a JarInputStream
@param out an OutputStream
@exception IOException if an error is encountered."
	end

	operation 8037531 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 367771 // PropertyChangeListener
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Registers a listener for PropertyChange events on the properties map.
This is typically used by applications to update a progress bar.

@see #properties
@see #PROGRESS
@param listener  An object to be invoked when a property is changed."
	end

	operation 8037659 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 367771 // PropertyChangeListener
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a listener for PropertyChange events, added by
the {@link #addPropertyChangeListener}.

@see #addPropertyChangeListener
@param listener  The PropertyChange listener to be removed."
	end
      end

      operation 8036891 "newPacker"
	class_operation public return_type class_ref 1005979 // Packer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "prevent instantiation
 Static methods of the Pack200 class.

Obtain new instance of a class that implements Packer.

<li><p>If the system property <tt>java.util.jar.Pack200.Packer</tt>
is defined, then the value is taken to be the fully-qualified name
of a concrete implementation class, which must implement Packer.
This class is loaded and instantiated.  If this process fails
then an unspecified error is thrown.</p></li>

<li><p>If an implementation has not been specified with the system
property, then the system-default implementation class is instantiated,
and the result is returned.</p></li>

<p>Note:  The returned object is not guaranteed to operate
correctly if multiple threads use it at the same time.
A multi-threaded application should either allocate multiple
packer engines, or else serialize use of one engine with a lock.

@return  A newly allocated Packer engine."
      end

      class 1006107 "Unpacker"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2961307 "KEEP"
	  public explicit_type "String"
	  init_value "=  \"keep\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"keep\", a possible value for certain properties.
@see #DEFLATE_HINT
"
	end

	attribute 2961435 "TRUE"
	  public explicit_type "String"
	  init_value "=  \"true\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"true\", a possible value for certain properties.
@see #DEFLATE_HINT
"
	end

	attribute 2961563 "FALSE"
	  public explicit_type "String"
	  init_value "=  \"false\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The string \"false\", a possible value for certain properties.
@see #DEFLATE_HINT
"
	end

	attribute 2961691 "DEFLATE_HINT"
	  public explicit_type "String"
	  init_value "=  \"unpack.deflate.hint\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Property indicating that the unpacker should
ignore all transmitted values for DEFLATE_HINT,
replacing them by the given value, {@link #TRUE} or {@link #FALSE}.
The default value is the special string {@link #KEEP},
which asks the unpacker to preserve all transmitted
deflation hints.
"
	end

	attribute 2961819 "PROGRESS"
	  public explicit_type "String"
	  init_value "=  \"unpack.progress\""
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The unpacker's progress as a percentage, as periodically
updated by the unpacker.
Values of 0 - 100 are normal, and -1 indicates a stall.
Observe this property with a {@link PropertyChangeListener}.
<p>
At a minimum, the unpacker must set progress to 0
at the beginning of a packing operation, and to 100
at the end.
@see #addPropertyChangeListener
"
	end

	operation 8037787 "properties"
	  public return_type class_ref 140827 // SortedMap
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the set of this engine's properties. This set is 
a \"live view\", so that changing its
contents immediately affects the Packer engine, and
changes from the engine (such as progress indications)
are immediately visible in the map.

<p>The property map may contain pre-defined implementation
specific and default properties.  Users are encouraged to
read the information and fully understand the implications,
before modifying pre-existing properties.
<p>
Implementation specific properties are prefixed with a
package name associated with the implementor, beginning
with <tt>com.</tt> or a similar prefix.
All property names beginning with <tt>pack.</tt> and
<tt>unpack.</tt> are reserved for use by this API.
<p>
Unknown properties may be ignored or rejected with an
unspecified error, and invalid entries may cause an
unspecified error to be thrown.

@return A sorted association of option key strings to option values."
	end

	operation 8037915 "unpack"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "in" type class_ref 179099 // InputStream
	    param inout name "out" type class_ref 1005083 // JarOutputStream
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Read a Pack200 archive, and write the encoded JAR to
a JarOutputStream.
The entire contents of the input stream will be read.
It may be more efficient to read the Pack200 archive
to a file and pass the File object, using the alternate
method described below.
<p>
Closes its input but not its output.  (The output can accumulate more elements.)
@param in an InputStream.
@param out a JarOutputStream.
@exception IOException if an error is encountered."
	end

	operation 8038043 "unpack"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "in" type class_ref 165147 // File
	    param inout name "out" type class_ref 1005083 // JarOutputStream
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Read a Pack200 archive, and write the encoded JAR to
a JarOutputStream.
<p>
Does not close its output.  (The output can accumulate more elements.)
@param in a File.
@param out a JarOutputStream.
@exception IOException if an error is encountered."
	end

	operation 8038171 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 367771 // PropertyChangeListener
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Registers a listener for PropertyChange events on the properties map.
This is typically used by applications to update a progress bar.

@see #properties
@see #PROGRESS
@param listener  An object to be invoked when a property is changed."
	end

	operation 8038299 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 367771 // PropertyChangeListener
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a listener for PropertyChange events, added by
the {@link #addPropertyChangeListener}.

@see #addPropertyChangeListener
@param listener  The PropertyChange listener to be removed."
	end
      end

      operation 8037019 "newUnpacker"
	class_operation public return_type class_ref 1006107 // Unpacker
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain new instance of a class that implements Unpacker.

<li><p>If the system property <tt>java.util.jar.Pack200.Unpacker</tt>
is defined, then the value is taken to be the fully-qualified
name of a concrete implementation class, which must implement Unpacker.
The class is loaded and instantiated.  If this process fails
then an unspecified error is thrown.</p></li>

<li><p>If an implementation has not been specified with the
system property, then the system-default implementation class
is instantiated, and the result is returned.</p></li>

<p>Note:  The returned object is not guaranteed to operate
correctly if multiple threads use it at the same time.
A multi-threaded application should either allocate multiple
unpacker engines, or else serialize use of one engine with a lock.

@return  A newly allocated Unpacker engine."
      end

      attribute 2961947 "PACK_PROVIDER"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"java.util.jar.Pack200.Packer\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Private stuff...."
      end

      attribute 2962075 "UNPACK_PROVIDER"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"java.util.jar.Pack200.Unpacker\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1963547 // packerImpl (<unidirectional association>)
	relation 1963547 --->
	  a role_name "packerImpl" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1963547 // packerImpl (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 1963675 // unpackerImpl (<unidirectional association>)
	relation 1963675 --->
	  a role_name "unpackerImpl" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1963675 // unpackerImpl (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 8038427 "newInstance"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param in name "prop" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 169115 "jar"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 763803 "Attributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.Collection;
import java.util.AbstractSet;
import java.util.Iterator;
import java.util.logging.Logger;
import java.util.Comparator;
import sun.misc.ASCIICaseInsensitiveComparator;
${definition}"
      associated_classes
	class_ref 930331 // Attributes
      end
      comment "@(#)Attributes.java	1.50 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764187 "JarEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.security.CodeSigner;
import java.security.cert.Certificate;
${definition}"
      associated_classes
	class_ref 930203 // JarEntry
      end
      comment "@(#)JarEntry.java	1.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764443 "JarException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1003419 // JarException
      end
      comment "@(#)JarException.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 764699 "JarFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.ref.SoftReference;
import java.util.*;
import java.util.zip.*;
import java.security.CodeSigner;
import java.security.cert.Certificate;
import java.security.AccessController;
import sun.security.action.GetPropertyAction;
import sun.security.util.ManifestEntryVerifier;
import sun.misc.SharedSecrets;
${definition}"
      associated_classes
	class_ref 930075 // JarFile
      end
      comment "@(#)JarFile.java	1.63 05/12/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765083 "JarInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.zip.*;
import java.io.*;
import sun.security.util.ManifestEntryVerifier;
${definition}"
      associated_classes
	class_ref 1004571 // JarInputStream
      end
      comment "@(#)JarInputStream.java	1.35 05/05/27

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765467 "JarOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.zip.*;
import java.io.*;
${definition}"
      associated_classes
	class_ref 1005083 // JarOutputStream
      end
      comment "@(#)JarOutputStream.java	1.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765595 "JarVerifier"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.util.zip.*;
import java.security.*;
import java.security.cert.CertificateException;
import sun.security.util.ManifestDigester;
import sun.security.util.ManifestEntryVerifier;
import sun.security.util.SignatureFileVerifier;
import sun.security.util.Debug;
${definition}"
      associated_classes
	class_ref 1004315 // JarVerifier
      end
      comment "@(#)JarVerifier.java	1.37 05/05/27

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765723 "JavaUtilJarAccessImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import sun.misc.JavaUtilJarAccess;
${definition}"
      associated_classes
	class_ref 1005595 // JavaUtilJarAccessImpl
      end
      comment "@(#)JavaUtilJarAccessImpl.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765851 "Manifest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FilterInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 914587 // Manifest
      end
      comment "@(#)Manifest.java	1.45 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 765979 "Pack200"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.SortedMap;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.File;
import java.io.IOException;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_classes
	class_ref 1005851 // Pack200
      end
      comment "@(#)Pack200.java	1.4 03/12/08

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
