class FilterIterator
!!!4626715.java!!!	FilterIterator(inout source : DTMAxisIterator, inout filter : DTMFilter)
	_source = source;
// System.out.println("FI souce = " + source + " this = " + this);
	_filter = filter;
	_isReverse = source.isReverse();
!!!4626843.java!!!	isReverse() : boolean
	return _isReverse;
!!!4626971.java!!!	setRestartable(inout isRestartable : boolean) : void
	_isRestartable = isRestartable;
	_source.setRestartable(isRestartable);
!!!4627099.java!!!	cloneIterator() : DTMAxisIterator

	try {
	    final FilterIterator clone = (FilterIterator) super.clone();
	    clone._source = _source.cloneIterator();
	    clone._isRestartable = false;
	    return clone.reset();
	}
	catch (CloneNotSupportedException e) {
	    BasisLibrary.runTimeError(BasisLibrary.ITERATOR_CLONE_ERR,
				      e.toString());
	    return null;
	}
!!!4627227.java!!!	reset() : DTMAxisIterator
	_source.reset();
	return resetPosition();
!!!4627355.java!!!	next() : int
	int node;
	while ((node = _source.next()) != END) {
	    if (_filter.acceptNode(node, DTMFilter.SHOW_ALL) == DTMIterator.FILTER_ACCEPT) {
		return returnNode(node);
	    }
	}
	return END;
!!!4627483.java!!!	setStartNode(in node : int) : DTMAxisIterator
	if (_isRestartable) {
	    _source.setStartNode(_startNode = node); 
	    return resetPosition();
	}
	return this;
!!!4627611.java!!!	setMark() : void
	_source.setMark();
!!!4627739.java!!!	gotoMark() : void
	_source.gotoMark();
