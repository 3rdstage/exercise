class XmlNames
!!!1890203.java!!!	isName(in value : String) : boolean
	if (value == null || "".equals(value))
	    return false;

	char c = value.charAt (0);
	if (!XmlChars.isLetter (c) && c != '_' && c != ':')
	    return false;
	for (int i = 1; i < value.length (); i++)
	    if (!XmlChars.isNameChar (value.charAt (i)))
		return false;
	return true;
!!!1890331.java!!!	isUnqualifiedName(in value : String) : boolean
	if (value == null || value.length() == 0)
	    return false;

	char c = value.charAt (0);
	if (!XmlChars.isLetter (c) && c != '_')
	    return false;
	for (int i = 1; i < value.length (); i++)
	    if (!XmlChars.isNCNameChar (value.charAt (i)))
		return false;
	return true;
!!!1890459.java!!!	isQualifiedName(in value : String) : boolean
	if (value == null)
	    return false;

        // [6] QName ::= (Prefix ':')? LocalPart
        // [7] Prefix ::= NCName
        // [8] LocalPart ::= NCName

	int	first = value.indexOf (':');

        // no Prefix, only check LocalPart
        if (first <= 0)
            return isUnqualifiedName (value);

        // Prefix exists, check everything

	int	last = value.lastIndexOf (':');
	if (last != first)
	    return false;
	
	return isUnqualifiedName (value.substring (0, first))
		&& isUnqualifiedName (value.substring (first + 1));
!!!1890587.java!!!	isNmtoken(in token : String) : boolean
	int	length = token.length ();

	for (int i = 0; i < length; i++)
	    if (!XmlChars.isNameChar (token.charAt (i)))
		return false;
	return true;
!!!1890715.java!!!	isNCNmtoken(in token : String) : boolean
	return isNmtoken (token) && token.indexOf (':') < 0;
!!!1890843.java!!!	getPrefix(in qualifiedName : String) : String
        // [6] QName ::= (Prefix ':')? LocalPart
        // [7] Prefix ::= NCName
        int index = qualifiedName.indexOf(':');
        return index <= 0 ? null : qualifiedName.substring(0, index);
!!!1890971.java!!!	getLocalPart(in qualifiedName : String) : String
        // [6] QName ::= (Prefix ':')? LocalPart
        // [8] LocalPart ::= NCName
	int index = qualifiedName.indexOf(':');
	if (index < 0) {
	    return qualifiedName;
        }

        // ':' at end of qualifiedName
        if (index == qualifiedName.length() - 1) {
            return null;
        }

	return qualifiedName.substring(index + 1);
