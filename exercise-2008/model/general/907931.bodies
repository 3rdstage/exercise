class RandomAccessFile
!!!6900507.java!!!	RandomAccessFile(in name : String, in mode : String)
        this(name != null ? new File(name) : null, mode);
!!!6900635.java!!!	RandomAccessFile(inout file : File, in mode : String)
	String name = (file != null ? file.getPath() : null);
	int imode = -1;
	if (mode.equals("r"))
	    imode = O_RDONLY;
	else if (mode.startsWith("rw")) {
	    imode = O_RDWR;
	    rw = true;
	    if (mode.length() > 2) {
		if (mode.equals("rws"))
		    imode |= O_SYNC;
		else if (mode.equals("rwd"))
		    imode |= O_DSYNC;
		else
		    imode = -1;
	    }
	}
	if (imode < 0)
	    throw new IllegalArgumentException("Illegal mode \"" + mode
					       + "\" must be one of "
					       + "\"r\", \"rw\", \"rws\","
					       + " or \"rwd\"");
	SecurityManager security = System.getSecurityManager();
	if (security != null) {
	    security.checkRead(name);
	    if (rw) {
		security.checkWrite(name);
	    }
	}
        if (name == null) {
            throw new NullPointerException();
        }
	fd = new FileDescriptor();
	open(name, imode);
!!!6900763.java!!!	getFD() : FileDescriptor
	if (fd != null) return fd;
	throw new IOException();
!!!6900891.java!!!	getChannel() : FileChannel
	synchronized (this) {
	    if (channel == null)
		channel = FileChannelImpl.open(fd, true, rw, this);
	    return channel;
	}
!!!6901403.java!!!	read(in b : byte, in off : int, in len : int) : int
	return readBytes(b, off, len);
!!!6901531.java!!!	read(in b : byte) : int
	return readBytes(b, 0, b.length);
!!!6901659.java!!!	readFully(in b : byte) : void
	readFully(b, 0, b.length);
!!!6901787.java!!!	readFully(in b : byte, in off : int, in len : int) : void
        int n = 0;
	do {
	    int count = this.read(b, off + n, len - n);
	    if (count < 0)
		throw new EOFException();
	    n += count;
	} while (n < len);
!!!6901915.java!!!	skipBytes(in n : int) : int
        long pos;
	long len;
	long newpos; 

	if (n <= 0) {
	    return 0;
	}
	pos = getFilePointer();
	len = length();
	newpos = pos + n;
	if (newpos > len) {
	    newpos = len;
	}
	seek(newpos);

	/* return the actual number of bytes skipped */
	return (int) (newpos - pos);
!!!6902299.java!!!	write(in b : byte) : void
	writeBytes(b, 0, b.length); 
!!!6902427.java!!!	write(in b : byte, in off : int, in len : int) : void
	writeBytes(b, off, len);
!!!6903067.java!!!	close() : void
        if (channel != null)
            channel.close();
        close0();
!!!6903195.java!!!	readBoolean() : boolean
	int ch = this.read();
	if (ch < 0)
	    throw new EOFException();
	return (ch != 0);
!!!6903323.java!!!	readByte() : byte
	int ch = this.read();
	if (ch < 0)
	    throw new EOFException();
	return (byte)(ch);
!!!6903451.java!!!	readUnsignedByte() : int
	int ch = this.read();
	if (ch < 0)
	    throw new EOFException();
	return ch;
!!!6903579.java!!!	readShort() : short
	int ch1 = this.read();
	int ch2 = this.read();
	if ((ch1 | ch2) < 0)
	    throw new EOFException();
	return (short)((ch1 << 8) + (ch2 << 0));
!!!6903707.java!!!	readUnsignedShort() : int
	int ch1 = this.read();
	int ch2 = this.read();
	if ((ch1 | ch2) < 0)
	    throw new EOFException();
	return (ch1 << 8) + (ch2 << 0);
!!!6903835.java!!!	readChar() : char
	int ch1 = this.read();
	int ch2 = this.read();
	if ((ch1 | ch2) < 0)
	    throw new EOFException();
	return (char)((ch1 << 8) + (ch2 << 0));
!!!6903963.java!!!	readInt() : int
	int ch1 = this.read();
	int ch2 = this.read();
	int ch3 = this.read();
	int ch4 = this.read();
	if ((ch1 | ch2 | ch3 | ch4) < 0)
	    throw new EOFException();
	return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));
!!!6904091.java!!!	readLong() : long
	return ((long)(readInt()) << 32) + (readInt() & 0xFFFFFFFFL);
!!!6904219.java!!!	readFloat() : float
	return Float.intBitsToFloat(readInt());
!!!6904347.java!!!	readDouble() : double
	return Double.longBitsToDouble(readLong());
!!!6904475.java!!!	readLine() : String
	StringBuffer input = new StringBuffer();
	int c = -1;
	boolean eol = false;

	while (!eol) {
	    switch (c = read()) {
	    case -1:
	    case '\n':
		eol = true;
		break;
	    case '\r':
		eol = true;
		long cur = getFilePointer();
		if ((read()) != '\n') {
		    seek(cur);
		}
		break;
	    default:
		input.append((char)c);
		break;
	    }
	}

	if ((c == -1) && (input.length() == 0)) {
	    return null;
	}
	return input.toString();
!!!6904603.java!!!	readUTF() : String
	return DataInputStream.readUTF(this);
!!!6904731.java!!!	writeBoolean(inout v : boolean) : void
	write(v ? 1 : 0);
	//written++;
!!!6904859.java!!!	writeByte(in v : int) : void
	write(v);
	//written++;
!!!6904987.java!!!	writeShort(in v : int) : void
	write((v >>> 8) & 0xFF);
	write((v >>> 0) & 0xFF);
	//written += 2;
!!!6905115.java!!!	writeChar(in v : int) : void
	write((v >>> 8) & 0xFF);
	write((v >>> 0) & 0xFF);
	//written += 2;
!!!6905243.java!!!	writeInt(in v : int) : void
	write((v >>> 24) & 0xFF);
	write((v >>> 16) & 0xFF);
	write((v >>>  8) & 0xFF);
	write((v >>>  0) & 0xFF);
	//written += 4;
!!!6905371.java!!!	writeLong(in v : long) : void
	write((int)(v >>> 56) & 0xFF);
	write((int)(v >>> 48) & 0xFF);
	write((int)(v >>> 40) & 0xFF);
	write((int)(v >>> 32) & 0xFF);
	write((int)(v >>> 24) & 0xFF);
	write((int)(v >>> 16) & 0xFF);
	write((int)(v >>>  8) & 0xFF);
	write((int)(v >>>  0) & 0xFF);
	//written += 8;
!!!6905499.java!!!	writeFloat(in v : float) : void
	writeInt(Float.floatToIntBits(v));
!!!6905627.java!!!	writeDouble(in v : double) : void
	writeLong(Double.doubleToLongBits(v));
!!!6905755.java!!!	writeBytes(in s : String) : void
	int len = s.length();
	byte[] b = new byte[len];
	s.getBytes(0, len, b, 0);
	writeBytes(b, 0, len);
!!!6905883.java!!!	writeChars(in s : String) : void
	int clen = s.length();
	int blen = 2*clen;
	byte[] b = new byte[blen];
	char[] c = new char[clen];
	s.getChars(0, clen, c, 0);
	for (int i = 0, j = 0; i < clen; i++) {
	    b[j++] = (byte)(c[i] >>> 8);
	    b[j++] = (byte)(c[i] >>> 0);
	}
	writeBytes(b, 0, blen);
!!!6906011.java!!!	writeUTF(in str : String) : void
        DataOutputStream.writeUTF(str, this);
