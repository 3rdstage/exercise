class ByteArrayInputStream
!!!665499.java!!!	ByteArrayInputStream(in buf : byte)
	this.buf = buf;
        this.pos = 0;
	this.count = buf.length;
!!!665627.java!!!	ByteArrayInputStream(in buf : byte, in offset : int, in length : int)
	this.buf = buf;
        this.pos = offset;
	this.count = Math.min(offset + length, buf.length);
        this.mark = offset;
!!!665755.java!!!	read() : int
	return (pos < count) ? (buf[pos++] & 0xff) : -1;
!!!665883.java!!!	read(in b : byte, in off : int, in len : int) : int
	if (b == null) {
	    throw new NullPointerException();
	} else if ((off < 0) || (off > b.length) || (len < 0) ||
		   ((off + len) > b.length) || ((off + len) < 0)) {
	    throw new IndexOutOfBoundsException();
	}
	if (pos >= count) {
	    return -1;
	}
	if (pos + len > count) {
	    len = count - pos;
	}
	if (len <= 0) {
	    return 0;
	}
	System.arraycopy(buf, pos, b, off, len);
	pos += len;
	return len;
!!!666011.java!!!	skip(in n : long) : long
	if (pos + n > count) {
	    n = count - pos;
	}
	if (n < 0) {
	    return 0;
	}
	pos += n;
	return n;
!!!666139.java!!!	available() : int
	return count - pos;
!!!666267.java!!!	markSupported() : boolean
	return true;
!!!666395.java!!!	mark(in readAheadLimit : int) : void
	mark = pos;
!!!666523.java!!!	reset() : void
	pos = mark;
