class ByteBufferAsIntBufferL
!!!7348891.java!!!	ByteBufferAsIntBufferL(inout bb : ByteBuffer)
	// package-private

	super(-1, 0,
	      bb.remaining() >> 2,
	      bb.remaining() >> 2);
	this.bb = bb;
	// enforce limit == capacity
	int cap = this.capacity();
	this.limit(cap);
	int pos = this.position();
	assert (pos <= cap);
	offset = pos;



!!!7349019.java!!!	ByteBufferAsIntBufferL(inout bb : ByteBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)


	super(mark, pos, lim, cap);
	this.bb = bb;
	offset = off;



!!!7349147.java!!!	slice() : IntBuffer

	int pos = this.position();
	int lim = this.limit();
	assert (pos <= lim);
	int rem = (pos <= lim ? lim - pos : 0);
	int off = (pos << 2) + offset;
        assert (off >= 0);
	return new ByteBufferAsIntBufferL(bb, -1, 0, rem, rem, off);
!!!7349275.java!!!	duplicate() : IntBuffer

	return new ByteBufferAsIntBufferL(bb,
						    this.markValue(),
						    this.position(),
						    this.limit(),
						    this.capacity(),
						    offset);
!!!7349403.java!!!	asReadOnlyBuffer() : IntBuffer


	return new ByteBufferAsIntBufferRL(bb,
						 this.markValue(),
						 this.position(),
						 this.limit(),
						 this.capacity(),
						 offset);



!!!7349531.java!!!	ix(in i : int) : int

	return (i << 2) + offset;
!!!7349659.java!!!	get() : int

	return Bits.getIntL(bb, ix(nextGetIndex()));
!!!7349787.java!!!	get(in i : int) : int

	return Bits.getIntL(bb, ix(checkIndex(i)));
!!!7349915.java!!!	put(in x : int) : IntBuffer


	Bits.putIntL(bb, ix(nextPutIndex()), x);
	return this;



!!!7350043.java!!!	put(in i : int, in x : int) : IntBuffer


	Bits.putIntL(bb, ix(checkIndex(i)), x);
	return this;



!!!7350171.java!!!	compact() : IntBuffer


	int pos = position();
	int lim = limit();
	assert (pos <= lim);
	int rem = (pos <= lim ? lim - pos : 0);

	ByteBuffer db = bb.duplicate();
 	db.limit(ix(lim));
	db.position(ix(0));
	ByteBuffer sb = db.slice();
	sb.position(pos << 2);
	sb.compact();
 	position(rem);
	limit(capacity());
	return this;



!!!7350299.java!!!	isDirect() : boolean

	return bb.isDirect();
!!!7350427.java!!!	isReadOnly() : boolean

	return false;
!!!7350555.java!!!	order() : ByteOrder





	return ByteOrder.LITTLE_ENDIAN;

