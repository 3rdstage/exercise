class IntStack
!!!5498651.java!!!	size() : int
        return fDepth;
!!!5498779.java!!!	push(in value : int) : void
        ensureCapacity(fDepth + 1);
        fData[fDepth++] = value;
!!!5498907.java!!!	peek() : int
        return fData[fDepth - 1];
!!!5499035.java!!!	elementAt(in depth : int) : int
        return fData[depth];
!!!5499163.java!!!	pop() : int
        return fData[--fDepth];
!!!5499291.java!!!	clear() : void
        fDepth = 0;
!!!5499419.java!!!	print() : void
        System.out.print('(');
        System.out.print(fDepth);
        System.out.print(") {");
        for (int i = 0; i < fDepth; i++) {
            if (i == 3) {
                System.out.print(" ...");
                break;
            }
            System.out.print(' ');
            System.out.print(fData[i]);
            if (i < fDepth - 1) {
                System.out.print(',');
            }
        }
        System.out.print(" }");
        System.out.println();
!!!5499547.java!!!	ensureCapacity(in size : int) : void
        if (fData == null) {
            fData = new int[32];
        }
        else if (fData.length <= size) {
            int[] newdata = new int[fData.length * 2];
            System.arraycopy(fData, 0, newdata, 0, fData.length);
            fData = newdata;
        }
