format 66
"annotation" // src::java::lang::annotation
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/lang/annotation"
  java_package "java.lang.annotation"
  classview 174747 "annotation"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 911259 "Annotation"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The common interface extended by all annotation types.  Note that an
interface that manually extends this one does <i>not</i> define
an annotation type.  Also note that this interface does not itself
define an annotation type.

@author  Josh Bloch
@since   1.5"
      operation 7090971 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified object represents an annotation
that is logically equivalent to this one.  In other words,
returns true if the specified object is an instance of the same
annotation type as this instance, all of whose members are equal
to the corresponding member of this annotation, as defined below:
<ul>
   <li>Two corresponding primitive typed members whose values are
   <tt>x</tt> and <tt>y</tt> are considered equal if <tt>x == y</tt>,
   unless their type is <tt>float</tt> or <tt>double</tt>.

   <li>Two corresponding <tt>float</tt> members whose values
   are <tt>x</tt> and <tt>y</tt> are considered equal if
   <tt>Float.valueOf(x).equals(Float.valueOf(y))</tt>.
   (Unlike the <tt>==</tt> operator, NaN is considered equal
   to itself, and <tt>0.0f</tt> unequal to <tt>-0.0f</tt>.) 

   <li>Two corresponding <tt>double</tt> members whose values
   are <tt>x</tt> and <tt>y</tt> are considered equal if
   <tt>Double.valueOf(x).equals(Double.valueOf(y))</tt>.
   (Unlike the <tt>==</tt> operator, NaN is considered equal
   to itself, and <tt>0.0</tt> unequal to <tt>-0.0</tt>.)

   <li>Two corresponding <tt>String</tt>, <tt>Class</tt>, enum, or
   annotation typed members whose values are <tt>x</tt> and <tt>y</tt>
   are considered equal if <tt>x.equals(y)</tt>.  (Note that this
   definition is recursive for annotation typed members.)

   <li>Two corresponding array typed members <tt>x</tt> and <tt>y</tt>
   are considered equal if <tt>Arrays.equals(x, y)</tt>, for the
   appropriate overloading of {@link java.util.Arrays#equals}.
</ul>

@return true if the specified object represents an annotation
    that is logically equivalent to this one, otherwise false"
      end

      operation 7091099 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code of this annotation, as defined below:

<p>The hash code of an annotation is the sum of the hash codes
of its members (including those with default values), as defined
below:

The hash code of an annotation member is (127 times the hash code
of the member-name as computed by {@link String#hashCode()}) XOR
the hash code of the member-value, as defined below:

<p>The hash code of a member-value depends on its type:
<ul>
<li>The hash code of a primitive value <tt><i>v</i></tt> is equal to
    <tt><i>WrapperType</i>.valueOf(<i>v</i>).hashCode()</tt>, where
    <tt><i>WrapperType</i></tt> is the wrapper type corresponding
    to the primitive type of <tt><i>v</i></tt> ({@link Byte},
    {@link Character}, {@link Double}, {@link Float}, {@link Integer},
    {@link Long}, {@link Short}, or {@link Boolean}).

<li>The hash code of a string, enum, class, or annotation member-value
I     <tt><i>v</i></tt> is computed as by calling
    <tt><i>v</i>.hashCode()</tt>.  (In the case of annotation
    member values, this is a recursive definition.)

<li>The hash code of an array member-value is computed by calling
    the appropriate overloading of
    {@link java.util.Arrays#hashCode(long[]) Arrays.hashCode}
    on the value.  (There is one overloading for each primitive
    type, and one for object reference types.)
</ul>

@return the hash code of this annotation"
      end

      operation 7091227 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this annotation.  The details
of the representation are implementation-dependent, but the following
may be regarded as typical:
<pre>
  &#064;com.acme.util.Name(first=Alfred, middle=E., last=Neuman)
</pre>

@return a string representation of this annotation"
      end

      operation 7091355 "annotationType"
	public return_type class_ref 164635 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Annotation> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the annotation type of this annotation."
      end
    end

    class 919323 "AnnotationFormatError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the annotation parser attempts to read an annotation
from a class file and determines that the annotation is malformed.

@author  Josh Bloch
@since   1.5"
      classrelation 1794203 // <generalisation>
	relation 1794203 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1794203 // <generalisation>
	  b parent class_ref 221851 // Error
      end

      operation 7091483 "AnnotationFormatError"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <tt>AnnotationFormatError</tt> with the specified
detail message. 

@param   message   the detail message."
      end

      operation 7091611 "AnnotationFormatError"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <tt>AnnotationFormatError</tt> with the specified
detail message and cause.  Note that the detail message associated
with <code>cause</code> is <i>not</i> automatically incorporated in
this error's detail message.

@param  message the detail message 
@param  cause the cause (A <tt>null</tt> value is permitted, and
    indicates that the cause is nonexistent or unknown.)"
      end

      operation 7091739 "AnnotationFormatError"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <tt>AnnotationFormatError</tt> with the specified
cause and a detail message of
<tt>(cause == null ? null : cause.toString())</tt> (which
typically contains the class and detail message of <tt>cause</tt>).

@param  cause the cause (A <tt>null</tt> value is permitted, and
    indicates that the cause is nonexistent or unknown.)"
      end
    end

    class 919451 "AnnotationTypeMismatchException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that a program has attempted to access an element of
an annotation whose type has changed after the annotation was compiled
(or serialized).

@author  Josh Bloch
@since 1.5"
      classrelation 1794331 // <generalisation>
	relation 1794331 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1794331 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      classrelation 1794459 // element (<unidirectional association>)
	relation 1794459 --->
	  a role_name "element" const_relation private
	    comment "
The <tt>Method</tt> object for the annotation element.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1794459 // element (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      attribute 2741787 "foundType"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The (erroneous) type of data found in the annotation.  This string
may, but is not required to, contain the value as well.  The exact
format of the string is unspecified.
"
      end

      operation 7091867 "AnnotationTypeMismatchException"
	public explicit_return_type ""
	nparams 2
	  param inout name "element" type class_ref 170651 // Method
	  param in name "foundType" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AnnotationTypeMismatchException for the specified
annotation type element and found data type.

@param element the <tt>Method</tt> object for the annotation element
@param foundType the (erroneous) type of data found in the annotation.
       This string may, but is not required to, contain the value
       as well.  The exact format of the string is unspecified."
      end

      operation 7091995 "element"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <tt>Method</tt> object for the incorrectly typed element.

@return the <tt>Method</tt> object for the incorrectly typed element"
      end

      operation 7092123 "foundType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of data found in the incorrectly typed element.
The returned string may, but is not required to, contain the value
as well.  The exact format of the string is unspecified.

@return the type of data found in the incorrectly typed element"
      end
    end

    class 919579 "Documented"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.ANNOTATION_TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates that annotations with a type are to be documented by javadoc
and similar tools by default.  This type should be used to annotate the 
declarations of types whose annotations affect the use of annotated
elements by their clients.  If a type declaration is annotated with
Documented, its annotations become part of the public API
of the annotated elements.

@author  Joshua Bloch
@version 1.5, 02/03/04
@since 1.5"
    end

    class 919707 "ElementType"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A program element type.  The constants of this enumerated type
provide a simple classification of the declared elements in a
Java program.

<p>These constants are used with the {@link Target} meta-annotation type
to specify where it is legal to use an annotation type.

@author  Joshua Bloch
@since 1.5"
      attribute 2741915 "TYPE"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Class, interface (including annotation type), or enum declaration "
      end

      attribute 2742043 "FIELD"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Field declaration (inlcudes enum constants) "
      end

      attribute 2742171 "METHOD"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Method declaration "
      end

      attribute 2742299 "PARAMETER"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Parameter declaration "
      end

      attribute 2742427 "CONSTRUCTOR"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Constructor declaration "
      end

      attribute 2742555 "LOCAL_VARIABLE"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Local variable declaration "
      end

      attribute 2742683 "ANNOTATION_TYPE"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Annotation type declaration "
      end

      attribute 2742811 "PACKAGE"
	public type class_ref 919707 // ElementType
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Package declaration "
      end
    end

    class 919835 "IncompleteAnnotationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that a program has attempted to access an element of
an annotation type that was added to the annotation type definition after
the annotation was compiled (or serialized).  This exception will not be
thrown if the new element has a default value.

@author  Josh Bloch
@since 1.5"
      classrelation 1794587 // <generalisation>
	relation 1794587 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1794587 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      classrelation 1794715 // annotationType (<unidirectional association>)
	relation 1794715 --->
	  a role_name "annotationType" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1794715 // annotationType (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 2742939 "elementName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7092251 "IncompleteAnnotationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "annotationType" type class_ref 164635 // Class
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends Annotation> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IncompleteAnnotationException to indicate that
the named element was missing from the specified annotation type.

@param annotationType the Class object for the annotation type
@param elementName the name of the missing element"
      end

      operation 7092379 "annotationType"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Annotation> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Class object for the annotation type with the
missing element.

@return the Class object for the annotation type with the
    missing element"
      end

      operation 7092507 "elementName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the missing element.

@return the name of the missing element"
      end
    end

    class 919963 "Inherited"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.ANNOTATION_TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates that an annotation type is automatically inherited.  If
an Inherited meta-annotation is present on an annotation type
declaration, and the user queries the annotation type on a class
declaration, and the class declaration has no annotation for this type,
then the class's superclass will automatically be queried for the
annotation type.  This process will be repeated until an annotation for this
type is found, or the top of the class hierarchy (Object)
is reached.  If no superclass has an annotation for this type, then
the query will indicate that the class in question has no such annotation.

<p>Note that this meta-annotation type has no effect if the annotated
type is used to annotate anything other than a class.  Note also
that this meta-annotation only causes annotations to be inherited
from superclasses; annotations on implemented interfaces have no
effect.

@author  Joshua Bloch
@since 1.5"
    end

    class 920091 "Retention"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.ANNOTATION_TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates how long annotations with the annotated type are to
be retained.  If no Retention annotation is present on
an annotation type declaration, the retention policy defaults to
<tt>RetentionPolicy.CLASS</tt>.

<p>A Target meta-annotation has effect only if the meta-annotated
type is use directly for annotation.  It has no effect if the meta-annotated
type is used as a member type in another annotation type.

@author  Joshua Bloch
@since 1.5"
      operation 7092635 "value"
	public return_type class_ref 920219 // RetentionPolicy
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 920219 "RetentionPolicy"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Annotation retention policy.  The constants of this enumerated type
describe the various policies for retaining annotations.  They are used
in conjunction with the {@link Retention} meta-annotation type to specify
how long annotations are to be retained.

@author  Joshua Bloch
@since 1.5"
      attribute 2743067 "SOURCE"
	public type class_ref 920219 // RetentionPolicy
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Annotations are to be discarded by the compiler.
"
      end

      attribute 2743195 "CLASS"
	public type class_ref 920219 // RetentionPolicy
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Annotations are to be recorded in the class file by the compiler
but need not be retained by the VM at run time.  This is the default
behavior.
"
      end

      attribute 2743323 "RUNTIME"
	public type class_ref 920219 // RetentionPolicy
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Annotations are to be recorded in the class file by the compiler and
retained by the VM at run time, so they may be read reflectively.

@see java.lang.reflect.AnnotatedElement"
      end
    end

    class 920347 "Target"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.ANNOTATION_TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates the kinds of program element to which an annotation type
is applicable.  If a Target meta-annotation is not present on an
annotation type declaration, the declared type may be used on any
program element.  If such a meta-annotation is present, the compiler
will enforce the specified usage restriction.

For example, this meta-annotation indicates that the declared type is
itself a meta-annotation type.  It can only be used on annotation type
declarations:
<pre>
   &#064;Target(ElementType.ANNOTATION_TYPE)
   public &#064;interface MetaAnnotationType {
       ... 
   }
</pre>
This meta-annotation indicates that the declared type is intended solely
for use as a member type in complex annotation type declarations.  It
cannot be used to annotate anything directly:
<pre>
   &#064;Target({}) 
   public &#064;interface MemberType {
       ...
   }
</pre>
It is a compile-time error for a single ElementType constant to
appear more than once in a Target annotation.  For example, the
following meta-annotation is illegal:
<pre>
   &#064;Target({ElementType.FIELD, ElementType.METHOD, ElementType.FIELD})
   public &#064;interface Bogus {
       ...
   }
</pre>"
      operation 7092763 "value"
	public return_type class_ref 919707 // ElementType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 166555 "annotation"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 689819 "Annotation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 911259 // Annotation
      end
      comment "@(#)Annotation.java	1.9 04/06/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 689947 "AnnotationFormatError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 919323 // AnnotationFormatError
      end
      comment "@(#)AnnotationFormatError.java	1.1 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690075 "AnnotationTypeMismatchException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 919451 // AnnotationTypeMismatchException
      end
      comment "@(#)AnnotationTypeMismatchException.java	1.5 05/01/04

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690203 "Documented"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 919579 // Documented
      end
      comment "@(#)Documented.java	1.5 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690331 "ElementType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 919707 // ElementType
      end
      comment "@(#)ElementType.java	1.6 04/03/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690459 "IncompleteAnnotationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 919835 // IncompleteAnnotationException
      end
    end

    artifact 690587 "Inherited"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 919963 // Inherited
      end
      comment "@(#)Inherited.java	1.4 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690715 "Retention"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 920091 // Retention
      end
      comment "@(#)Retention.java	1.5 04/06/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690843 "RetentionPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 920219 // RetentionPolicy
      end
      comment "@(#)RetentionPolicy.java	1.4 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 690971 "Target"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 920347 // Target
      end
      comment "@(#)Target.java	1.5 04/06/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
