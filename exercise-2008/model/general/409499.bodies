class JSeparator
!!!2409499.java!!!	JSeparator()
        this( HORIZONTAL );
!!!2409627.java!!!	JSeparator(in orientation : int)
        checkOrientation( orientation );
	this.orientation = orientation;
	setFocusable(false);
        updateUI();
!!!2409755.java!!!	getUI() : SeparatorUI
        return (SeparatorUI)ui;
!!!2409883.java!!!	setUI(inout ui : SeparatorUI) : void
        super.setUI(ui);
!!!2410011.java!!!	updateUI() : void
        setUI((SeparatorUI)UIManager.getUI(this));
!!!2410139.java!!!	getUIClassID() : String
        return uiClassID;
!!!2410267.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        if (getUIClassID().equals(uiClassID)) {
            byte count = JComponent.getWriteObjCounter(this);
            JComponent.setWriteObjCounter(this, --count);
            if (count == 0 && ui != null) {
                ui.installUI(this);
            }
        }
!!!2410395.java!!!	getOrientation() : int
        return this.orientation;
!!!2410523.java!!!	setOrientation(in orientation : int) : void
        if (this.orientation == orientation) {
            return;
        }
        int oldValue = this.orientation;
        checkOrientation( orientation );
        this.orientation = orientation;
        firePropertyChange("orientation", oldValue, orientation);
        revalidate();
	repaint();
!!!2410651.java!!!	checkOrientation(in orientation : int) : void
        switch ( orientation )
	{
            case VERTICAL:
            case HORIZONTAL:
                break;
            default:
                throw new IllegalArgumentException( "orientation must be one of: VERTICAL, HORIZONTAL" );
        }
!!!2410779.java!!!	paramString() : String
	String orientationString = (orientation == HORIZONTAL ?
				    "HORIZONTAL" : "VERTICAL");

	return super.paramString() +
	",orientation=" + orientationString;
!!!2410907.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleJSeparator();
        }
        return accessibleContext;
