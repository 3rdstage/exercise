class WindowsRadioButtonUI
!!!2931611.java!!!	createUI(inout c : JComponent) : ComponentUI
	return windowsRadioButtonUI;
!!!2931739.java!!!	installDefaults(inout b : AbstractButton) : void
	super.installDefaults(b);
	if(!initialized) {
	    dashedRectGapX = ((Integer)UIManager.get("Button.dashedRectGapX")).intValue();
	    dashedRectGapY = ((Integer)UIManager.get("Button.dashedRectGapY")).intValue();
	    dashedRectGapWidth = ((Integer)UIManager.get("Button.dashedRectGapWidth")).intValue();
	    dashedRectGapHeight = ((Integer)UIManager.get("Button.dashedRectGapHeight")).intValue();
	    focusColor = UIManager.getColor(getPropertyPrefix() + "focus");
	    initialized = true;
	}
	if (XPStyle.getXP() != null) {
	    LookAndFeel.installProperty(b, "rolloverEnabled", Boolean.TRUE);
	}
!!!2931867.java!!!	getFocusColor() : Color
	return focusColor;
!!!2931995.java!!!	paintText(inout g : Graphics, inout b : AbstractButton, inout textRect : Rectangle, in text : String) : void
	WindowsGraphicsUtils.paintText(g, b, textRect, text, getTextShiftOffset());
!!!2932123.java!!!	paintFocus(inout g : Graphics, inout textRect : Rectangle, inout d : Dimension) : void
	g.setColor(getFocusColor());
	BasicGraphicsUtils.drawDashedRect(g, textRect.x, textRect.y, textRect.width, textRect.height);
!!!2932251.java!!!	getPreferredSize(inout c : JComponent) : Dimension
	Dimension d = super.getPreferredSize(c);

	/* Ensure that the width and height of the button is odd,
	 * to allow for the focus line if focus is painted
	 */
        AbstractButton b = (AbstractButton)c;
	if (d != null && b.isFocusPainted()) {
	    if(d.width % 2 == 0) { d.width += 1; }
	    if(d.height % 2 == 0) { d.height += 1; }
	}
	return d;
