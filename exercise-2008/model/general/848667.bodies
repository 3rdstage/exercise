class AlphaComposite
!!!6134043.java!!!	AlphaComposite(in rule : int)
	this(rule, 1.0f);
!!!6134171.java!!!	AlphaComposite(in rule : int, in alpha : float)
	if (alpha < 0.0f || alpha > 1.0f) {
	    throw new IllegalArgumentException("alpha value out of range");
	}
	if (rule < MIN_RULE || rule > MAX_RULE) {
	    throw new IllegalArgumentException("unknown composite rule");
	}
	this.rule = rule;
	this.extraAlpha = alpha;
!!!6134299.java!!!	getInstance(in rule : int) : AlphaComposite
	switch (rule) {
	case CLEAR:
	    return Clear;
	case SRC:
	    return Src;
	case DST:
	    return Dst;
	case SRC_OVER:
	    return SrcOver;
	case DST_OVER:
	    return DstOver;
	case SRC_IN:
	    return SrcIn;
	case DST_IN:
	    return DstIn;
	case SRC_OUT:
	    return SrcOut;
	case DST_OUT:
	    return DstOut;
	case SRC_ATOP:
	    return SrcAtop;
	case DST_ATOP:
	    return DstAtop;
	case XOR:
	    return Xor;
	default:
	    throw new IllegalArgumentException("unknown composite rule");
	}
!!!6134427.java!!!	getInstance(in rule : int, in alpha : float) : AlphaComposite
	if (alpha == 1.0f) {
	    return getInstance(rule);
	}
	return new AlphaComposite(rule, alpha);
!!!6134555.java!!!	createContext(inout srcColorModel : ColorModel, inout dstColorModel : ColorModel, inout hints : RenderingHints) : CompositeContext
        return new SunCompositeContext(this, srcColorModel, dstColorModel);
!!!6134683.java!!!	getAlpha() : float
	return extraAlpha;
!!!6134811.java!!!	getRule() : int
        return rule;
!!!6134939.java!!!	hashCode() : int
	return (Float.floatToIntBits(extraAlpha) * 31 + rule);
!!!6135067.java!!!	equals(inout obj : Object) : boolean
        if (!(obj instanceof AlphaComposite)) {
            return false;
        }

        AlphaComposite ac = (AlphaComposite) obj;

        if (rule != ac.rule) {
            return false;
        }

        if (extraAlpha != ac.extraAlpha) {
            return false;
        }

        return true;
