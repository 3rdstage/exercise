class ThreadPoolManagerImpl
!!!1525275.java!!!	ThreadPoolManagerImpl(inout tg : ThreadGroup)
	// Use unbounded threadpool in J2SE ORB
	// ThreadPoolManager from s1as appserver code base can be set in the
	// ORB. ThreadPools in the appserver are bounded. In that situation 
	// the ThreadPool in this ThreadPoolManager will have its threads 
	// die after the idle timeout.
	// XXX Should there be cleanup when ORB.shutdown is called if the
	// ORB owns the ThreadPool?
	threadPool = new ThreadPoolImpl( tg,
	    ORBConstants.THREADPOOL_DEFAULT_NAME ) ;
!!!1525403.java!!!	getThreadPool(in threadpoolId : String) : ThreadPool
            
        return threadPool;
!!!1525531.java!!!	getThreadPool(in numericIdForThreadpool : int) : ThreadPool
 

        return threadPool;
!!!1525659.java!!!	getThreadPoolNumericId(in threadpoolId : String) : int
 
        return 0;
!!!1525787.java!!!	getThreadPoolStringId(in numericIdForThreadpool : int) : String
       return "";
!!!1525915.java!!!	getDefaultThreadPool() : ThreadPool
        return threadPool;
!!!1526043.java!!!	getThreadPoolChooser(in componentId : String) : ThreadPoolChooser
	//FIXME: This method is not used, but should be fixed once
	//nio select starts working and we start using ThreadPoolChooser
	return null;
!!!1526171.java!!!	getThreadPoolChooser(in componentIndex : int) : ThreadPoolChooser
	//FIXME: This method is not used, but should be fixed once
	//nio select starts working and we start using ThreadPoolChooser
	return null;
!!!1526299.java!!!	setThreadPoolChooser(in componentId : String, inout aThreadPoolChooser : ThreadPoolChooser) : void
	//FIXME: This method is not used, but should be fixed once
	//nio select starts working and we start using ThreadPoolChooser
!!!1526427.java!!!	getThreadPoolChooserNumericId(in componentId : String) : int
	//FIXME: This method is not used, but should be fixed once
	//nio select starts working and we start using ThreadPoolChooser
	return 0;
