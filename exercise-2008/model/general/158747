format 76
"management" // src::javax::management
  revision 4
  modified_by 31 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management"
  java_package "javax.management"
  classview 156315 "management"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 510619 "MBeanServerConnection"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents a way to talk to an MBean server, whether
local or remote.  The {@link MBeanServer} interface, representing a
local MBean server, extends this interface.


@since 1.5
@since.unbundled JMX 1.2"
      operation 3152411 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates and registers an MBean in the MBean server.  The
MBean server will use its {@link
javax.management.loading.ClassLoaderRepository Default Loader
Repository} to load the class of the MBean.  An object name is
associated to the MBean.	 If the object name given is null, the
MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.</p>

<p>This method is equivalent to {@link
#createMBean(String,ObjectName,Object[],String[])
createMBean(className, name, (Object[]) null, (String[])
null)}.</p>

@param className The class name of the MBean to be instantiated.	   
@param name The object name of the MBean. May be null.	 

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE><CODE>java.lang.Exception</CODE></CODE> that occurred
when trying to invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.
"
      end

      operation 3152539 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates and registers an MBean in the MBean server.  The
class loader to be used is identified by its object name. An
object name is associated to the MBean. If the object name of
the loader is null, the ClassLoader that loaded the MBean
server will be used.  If the MBean's object name given is null,
the MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.</p>

<p>This method is equivalent to {@link
#createMBean(String,ObjectName,ObjectName,Object[],String[])
createMBean(className, name, loaderName, (Object[]) null,
(String[]) null)}.</p>

@param className The class name of the MBean to be instantiated.	   
@param name The object name of the MBean. May be null.	 
@param loaderName The object name of the class loader to be used.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3152667 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 4
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates and registers an MBean in the MBean server.  The
MBean server will use its {@link
javax.management.loading.ClassLoaderRepository Default Loader
Repository} to load the class of the MBean.  An object name is
associated to the MBean.  If the object name given is null, the
MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.
"
      end

      operation 3152795 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 5
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates and registers an MBean in the MBean server.  The
class loader to be used is identified by its object name. An
object name is associated to the MBean. If the object name of
the loader is not specified, the ClassLoader that loaded the
MBean server will be used.  If the MBean object name given is
null, the MBean must provide its own name by implementing the
{@link javax.management.MBeanRegistration MBeanRegistration}
interface and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.
@param loaderName The object name of the class loader to be used.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.
"
      end

      operation 3152923 "unregisterMBean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters an MBean from the MBean server. The MBean is
identified by its object name. Once the method has been
invoked, the MBean may no longer be accessed by its object
name.

@param name The object name of the MBean to be unregistered.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception MBeanRegistrationException The preDeregister
((<CODE>MBeanRegistration</CODE> interface) method of the MBean
has thrown an exception.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the MBean you are when trying to
unregister is the {@link javax.management.MBeanServerDelegate
MBeanServerDelegate} MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.
"
      end

      operation 3153051 "getObjectInstance"
	public return_type class_ref 510747 // ObjectInstance
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <CODE>ObjectInstance</CODE> for a given MBean
registered with the MBean server.

@param name The object name of the MBean.

@return The <CODE>ObjectInstance</CODE> associated with the MBean
specified by <VAR>name</VAR>.  The contained <code>ObjectName</code>
is <code>name</code> and the contained class name is
<code>{@link #getMBeanInfo getMBeanInfo(name)}.getClassName()</code>.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3153179 "queryMBeans"
	public return_type class_ref 136731 // Set
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 511771 // QueryExp
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets MBeans controlled by the MBean server. This method allows
any of the following to be obtained: All MBeans, a set of
MBeans specified by pattern matching on the
<CODE>ObjectName</CODE> and/or a Query expression, a specific
MBean. When the object name is null or no domain and key
properties are specified, all objects are to be selected (and
filtered if a query is specified). It returns the set of
<CODE>ObjectInstance</CODE> objects (containing the
<CODE>ObjectName</CODE> and the Java Class name) for the
selected MBeans.

@param name The object name pattern identifying the MBeans to
be retrieved. If null or no domain and key properties are
specified, all the MBeans registered will be retrieved.
@param query The query expression to be applied for selecting
MBeans. If null no query expression will be applied for
selecting MBeans.

@return A set containing the <CODE>ObjectInstance</CODE>
objects for the selected MBeans.  If no MBean satisfies the
query an empty list is returned.

@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3153307 "queryNames"
	public return_type class_ref 136731 // Set
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 511771 // QueryExp
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the names of MBeans controlled by the MBean server. This
method enables any of the following to be obtained: The names
of all MBeans, the names of a set of MBeans specified by
pattern matching on the <CODE>ObjectName</CODE> and/or a Query
expression, a specific MBean name (equivalent to testing
whether an MBean is registered). When the object name is null
or no domain and key properties are specified, all objects are
selected (and filtered if a query is specified). It returns the
set of ObjectNames for the MBeans selected.

@param name The object name pattern identifying the MBean names
to be retrieved. If null or no domain and key properties are
specified, the name of all registered MBeans will be retrieved.
@param query The query expression to be applied for selecting
MBeans. If null no query expression will be applied for
selecting MBeans.

@return A set containing the ObjectNames for the MBeans
selected.  If no MBean satisfies the query, an empty list is
returned.

@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3153435 "isRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether an MBean, identified by its object name, is
already registered with the MBean server.

@param name The object name of the MBean to be checked.

@return True if the MBean is already registered in the MBean
server, false otherwise.

@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null.
@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3153563 "getMBeanCount"
	public return_type class_ref 170395 // Integer
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of MBeans registered in the MBean server.

@return the number of MBeans registered.

@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3153691 "getAttribute"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attribute" explicit_type "String"
	nexceptions 5
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a specific attribute of a named MBean. The MBean
is identified by its object name.

@param name The object name of the MBean from which the
attribute is to be retrieved.
@param attribute A String specifying the name of the attribute
to be retrieved.

@return	The value of the retrieved attribute.

@exception AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@exception MBeanException Wraps an exception thrown by the
MBean's getter.
@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown when trying to invoke
the setter.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the attribute in parameter is
null.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #setAttribute"
      end

      operation 3153819 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attributes" explicit_type "String"
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the values of several attributes of a named MBean. The MBean
is identified by its object name.

@param name The object name of the MBean from which the
attributes are retrieved.
@param attributes A list of the attributes to be retrieved.

@return The list of the retrieved attributes.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@exception RuntimeOperationsException Wrap a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or attributes in parameter is null.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #setAttributes"
      end

      operation 3153947 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attribute" type class_ref 512155 // Attribute
	nexceptions 6
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of a specific attribute of a named MBean. The MBean
is identified by its object name.

@param name The name of the MBean within which the attribute is
to be set.
@param attribute The identification of the attribute to be set
and the value it is to be set to.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@exception InvalidAttributeValueException The value specified
for the attribute is not valid.
@exception MBeanException Wraps an exception thrown by the
MBean's setter.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown when trying to invoke
the setter.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the attribute in parameter is
null.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #getAttribute"
      end

      operation 3154075 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attributes" type class_ref 512027 // AttributeList
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values of several attributes of a named MBean. The MBean is
identified by its object name.

@param name The object name of the MBean within which the
attributes are to be set.
@param attributes A list of attributes: The identification of
the attributes to be set and the values they are to be set to.

@return The list of attributes that were set, with their new
values.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or attributes in parameter is null.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #getAttributes"
      end

      operation 3154203 "invoke"
	public explicit_return_type "Object"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "operationName" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes an operation on an MBean.

@param name The object name of the MBean on which the method is
to be invoked.
@param operationName The name of the operation to be invoked.
@param params An array containing the parameters to be set when
the operation is invoked
@param signature An array containing the signature of the
operation. The class objects will be loaded using the same
class loader as the one used for loading the MBean on which the
operation was invoked.

@return The object returned by the operation, which represents
the result of invoking the operation on the MBean specified.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception MBeanException Wraps an exception thrown by the
MBean's invoked method.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown while trying to invoke
the method.
@exception IOException A communication problem occurred when
talking to the MBean server.
"
      end

      operation 3154331 "getDefaultDomain"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default domain used for naming the MBean.
The default domain name is used as the domain part in the ObjectName
of MBeans if no domain is specified by the user.

@return the default domain.

@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3154459 "getDomains"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the list of domains in which any MBean is currently
registered.  A string is in the returned array if and only if
there is at least one MBean registered with an ObjectName whose
{@link ObjectName#getDomain() getDomain()} is equal to that
string.  The order of strings within the returned array is
not defined.</p>

@return the list of domains.

@exception IOException A communication problem occurred when
talking to the MBean server.

@since.unbundled JMX 1.2"
      end

      operation 3154587 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Adds a listener to a registered MBean.</p>

<P> A notification emitted by an MBean will be forwarded by the
MBeanServer to the listener.  If the source of the notification
is a reference to an MBean object, the MBean server will replace it
by that MBean's ObjectName.  Otherwise the source is unchanged.

@param name The name of the MBean on which the listener should
be added.
@param listener The listener object which will handle the
notifications emitted by the registered MBean.
@param filter The filter object. If filter is null, no
filtering will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #removeNotificationListener(ObjectName, NotificationListener)
@see #removeNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)"
      end

      operation 3154715 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Adds a listener to a registered MBean.</p>

<p>A notification emitted by an MBean will be forwarded by the
MBeanServer to the listener.  If the source of the notification
is a reference to an MBean object, the MBean server will
replace it by that MBean's ObjectName.  Otherwise the source is
unchanged.</p>

<p>The listener object that receives notifications is the one
that is registered with the given name at the time this method
is called.  Even if it is subsequently unregistered, it will
continue to receive notifications.</p>

@param name The name of the MBean on which the listener should
be added.
@param listener The object name of the listener which will
handle the notifications emitted by the registered MBean.
@param filter The filter object. If filter is null, no
filtering will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted.

@exception InstanceNotFoundException The MBean name of the
notification listener or of the notification broadcaster does
not match any of the registered MBeans.
@exception RuntimeOperationsException Wraps an {@link
IllegalArgumentException}.  The MBean named by
<code>listener</code> exists but does not implement the {@link
NotificationListener} interface.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #removeNotificationListener(ObjectName, ObjectName)
@see #removeNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)"
      end

      operation 3154843 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from a registered MBean.

<P> If the listener is registered more than once, perhaps with
different filters or callbacks, this method will remove all
those registrations.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #addNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)"
      end

      operation 3154971 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<p>The MBean must have a listener that exactly matches the
given <code>listener</code>, <code>filter</code>, and
<code>handback</code> parameters.  If there is more than one
such listener, only one is removed.</p>

<p>The <code>filter</code> and <code>handback</code> parameters
may be null if and only if they are null in a listener to be
removed.</p>

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added.
@param handback The handback that was specified when the
listener was added.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #addNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)

@since.unbundled JMX 1.2"
      end

      operation 3155099 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<P> If the listener is registered more than once, perhaps with
different filters or callbacks, this method will remove all
those registrations.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #addNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)"
      end

      operation 3155227 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<p>The MBean must have a listener that exactly matches the
given <code>listener</code>, <code>filter</code>, and
<code>handback</code> parameters.  If there is more than one
such listener, only one is removed.</p>

<p>The <code>filter</code> and <code>handback</code> parameters
may be null if and only if they are null in a listener to be
removed.</p>

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added.
@param handback The handback that was specified when the
listener was added.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.
@exception IOException A communication problem occurred when
talking to the MBean server.

@see #addNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)

@since.unbundled JMX 1.2"
      end

      operation 3155355 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512923 // IntrospectionException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method discovers the attributes and operations that an
MBean exposes for management.

@param name The name of the MBean to analyze

@return An instance of <CODE>MBeanInfo</CODE> allowing the
retrieval of all attributes and operations of this MBean.

@exception IntrospectionException An exception occurred during
introspection.
@exception InstanceNotFoundException The MBean specified was
not found.
@exception ReflectionException An exception occurred when
trying to invoke the getMBeanInfo of a Dynamic MBean.
@exception IOException A communication problem occurred when
talking to the MBean server."
      end

      operation 3155483 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "className" explicit_type "String"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if the MBean specified is an instance of the
specified class, false otherwise.</p>

<p>If <code>name</code> does not name an MBean, this method
throws {@link InstanceNotFoundException}.</p>

<p>Otherwise, let<br>
X be the MBean named by <code>name</code>,<br>
L be the ClassLoader of X,<br>
N be the class name in X's {@link MBeanInfo}.</p>

<p>If N equals <code>className</code>, the result is true.</p>

<p>Otherwise, if L successfully loads both N and
<code>className</code>, and the second class is assignable from
the first, the result is true.</p>

<p>Otherwise, the result is false.</p>

@param name The <CODE>ObjectName</CODE> of the MBean.
@param className The name of the class.

@return true if the MBean specified is an instance of the
specified class according to the rules above, false otherwise.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception IOException A communication problem occurred when
talking to the MBean server."
      end
    end

    class 510747 "ObjectInstance"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used to represent the object name of an MBean and its class name.
If the MBean is a Dynamic MBean the class name should be retrieved from 
the <CODE>MBeanInfo</CODE> it provides.

@since 1.5"
      classrelation 2036251 // <realization>
	relation 2036251 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2036251 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3027355 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4099952623687795850L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2036379 // name (<unidirectional association>)
	relation 2036379 --->
	  a role_name "name" private
	    comment "
@serial Object name.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2036379 // name (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      attribute 3027483 "className"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Class name.
"
      end

      operation 8254747 "ObjectInstance"
	public explicit_return_type ""
	nparams 2
	  param in name "objectName" explicit_type "String"
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an object instance to be created given a string representation of
an object name and the full class name, including the package name.

@param objectName  A string representation of the object name.
@param className The full class name, including the package
name, of the object instance.  If the MBean is a Dynamic MBean
the class name corresponds to its {@link
DynamicMBean#getMBeanInfo()
getMBeanInfo()}<code>.getClassName()</code>.

@exception MalformedObjectNameException The string passed as a
parameter does not have the right format.
"
      end

      operation 8254875 "ObjectInstance"
	public explicit_return_type ""
	nparams 2
	  param inout name "objectName" type class_ref 510875 // ObjectName
	  param in name "className" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an object instance to be created given an object name and
the full class name, including the package name.

@param objectName  The object name.     
@param className  The full class name, including the package
name, of the object instance.  If the MBean is a Dynamic MBean
the class name corresponds to its {@link
DynamicMBean#getMBeanInfo()
getMBeanInfo()}<code>.getClassName()</code>.
If the MBean is a Dynamic MBean the class name should be retrieved 
from the <CODE>MBeanInfo</CODE> it provides.
"
      end

      operation 8255003 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the current object instance with another object instance.

@param object  The object instance that the current object instance is
    to be compared with.

@return  True if the two object instances are equal, otherwise false."
      end

      operation 8255131 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8255259 "getObjectName"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object name part.

@return the object name."
      end

      operation 8255387 "getClassName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class part.

@return the class name."
      end
    end

    class 510875 "ObjectName"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Represents the object name of an MBean, or a pattern that can
match the names of several MBeans.  Instances of this class are
immutable.</p>

<p>An instance of this class can 
be used to represent: 
<ul>
<li> An object name 
<li> An object name pattern, within the context of a query
</ul></p>

<p>An object name consists of two parts, the domain and the key
properties.</p>

<p>The <em>domain</em> is a string of characters not including
the character colon (<code>:</code>).</p>

<p>If the domain includes at least one occurrence of the wildcard
characters asterisk (<code>*</code>) or question mark
(<code>?</code>), then the object name is a pattern.  The asterisk
matches any sequence of zero or more characters, while the question
mark matches any single character.</p>

<p>If the domain is empty, it will be replaced in certain contexts
by the <em>default domain</em> of the MBean server in which the
ObjectName is used.</p>

<p>The <em>key properties</em> are an unordered set of keys and
associated values.</p>

<p>Each <em>key</em> is a nonempty string of characters which may
not contain any of the characters comma (<code>,</code>), equals
(<code>=</code>), colon, asterisk, or question mark.  The same key
may not occur twice in a given ObjectName.</p>

<p>Each <em>value</em> associated with a key is a string of
characters that is either unquoted or quoted.</p>

<p>An <em>unquoted value</em> is a possibly empty string of
characters which may not contain any of the characters comma,
equals, colon, quote, asterisk, or question mark.</p>

<p>A <em>quoted value</em> consists of a quote (<code>\"</code>),
followed by a possibly empty string of characters, followed by
another quote.  Within the string of characters, the backslash
(<code>\\</code>) has a special meaning.  It must be followed by
one of the following characters:</p>

<ul>
<li>Another backslash.  The second backslash has no special
meaning and the two characters represent a single backslash.

<li>The character 'n'.  The two characters represent a newline
('\\n' in Java).

<li>A quote.  The two characters represent a quote, and that quote
is not considered to terminate the quoted value. An ending closing
quote must be present for the quoted value to be valid.

<li>A question mark (?) or star (*).  The two characters represent
a question mark or star respectively.
</ul>

<p>A quote, question mark, or star may not appear inside a quoted
value except immediately after an odd number of consecutive
backslashes.</p>

<p>The quotes surrounding a quoted value, and any backslashes
within that value, are considered to be part of the value.</p>

<p>An ObjectName may be a <em>property pattern</em>.  In this case
it may have zero or more keys and associated values.  It matches a
nonpattern ObjectName whose domain matches and that contains the
same keys and associated values, as well as possibly other keys and
values.</p>

<p>An ObjectName is a pattern if its domain contains a wildcard or
if the ObjectName is a property pattern.</p>

<p>If an ObjectName is not a pattern, it must contain at least one
key with its associated value.</p>

<p>An ObjectName can be written as a String with the following
elements in order:</p>

<ul>
<li>The domain.
<li>A colon (<code>:</code>).
<li>A key property list as defined below.
</ul>

<p>A key property list written as a String is a comma-separated
list of elements.  Each element is either an asterisk or a key
property.  A key property consists of a key, an equals
(<code>=</code>), and the associated value.</p>

<p>At most one element of a key property list may be an asterisk.
If the key property list contains an asterisk element, the
ObjectName is a property pattern.</p>

<p>Spaces have no special significance in a String representing an
ObjectName.  For example, the String:
<pre>
domain: key1 = value1 , key2 = value2
</pre>
represents an ObjectName with two keys.  The name of each key
contains six characters, of which the first and last are spaces.
The value associated with the key <code>\"&nbsp;key1&nbsp;\"</code>
also begins and ends with a space.</p>

<p>In addition to the restrictions on characters spelt out above,
no part of an ObjectName may contain a newline character
(<code>'\\n'</code>), whether the domain, a key, or a value, whether
quoted or unquoted.  The newline character can be represented in a
quoted value with the sequence <code>\\n</code>.

<p>The rules on special characters and quoting apply regardless of
which constructor is used to make an ObjectName.</p>

<p>To avoid collisions between MBeans supplied by different
vendors, a useful convention is to begin the domain name with the
reverse DNS name of the organization that specifies the MBeans,
followed by a period and a string whose interpretation is
determined by that organization.  For example, MBeans specified by
Sun Microsystems Inc., DNS name <code>sun.com</code>, would have
domains such as <code>com.sun.MyDomain</code>.  This is essentially
the same convention as for Java-language package names.</p>

@since 1.5"
      classrelation 2036507 // <realization>
	relation 2036507 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2036507 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      classrelation 2036635 // <realization>
	relation 2036635 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2036635 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      class 1032859 "Property"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 3027611 "_key_index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3027739 "_key_length"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3027867 "_value_length"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8255515 "Property"
	  package explicit_return_type ""
	  nparams 3
	    param in name "key_index" explicit_type "int"
	    param in name "key_length" explicit_type "int"
	    param in name "value_length" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor."
	end

	operation 8255643 "setKeyIndex"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "key_index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Assigns the key index of property"
	end

	operation 8255771 "getKeyString"
	  package explicit_return_type "String"
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a key string for receiver key"
	end

	operation 8255899 "getValueString"
	  package explicit_return_type "String"
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a value string for receiver key"
	end
      end

      attribute 3027995 "oldSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5467795090068647408L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Inner classes <========================================
 Private fields ---------------------------------------->
 Serialization compatibility stuff -------------------->
 Two serial forms are supported in this class. The selected form depends
 on system property \"jmx.serial.form\":
  - \"1.0\" for JMX 1.0
  - any other value for JMX 1.1 and higher

 Serial version for old serial form "
      end

      attribute 3028123 "newSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1081892073854801359L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version for new serial form "
      end

      classrelation 2036763 // oldSerialPersistentFields (<unidirectional association>)
	relation 2036763 --->
	  a role_name "oldSerialPersistentFields" multiplicity "[]" init_value "=  
    {
	new ObjectStreamField(\"domain\", String.class),
	new ObjectStreamField(\"propertyList\", Hashtable.class),
	new ObjectStreamField(\"propertyListString\", String.class),
	new ObjectStreamField(\"canonicalName\", String.class),
	new ObjectStreamField(\"pattern\", Boolean.TYPE),
	new ObjectStreamField(\"propertyPattern\", Boolean.TYPE)
    }" class_relation const_relation private
	    comment " Serializable fields in old serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2036763 // oldSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      classrelation 2036891 // newSerialPersistentFields (<unidirectional association>)
	relation 2036891 --->
	  a role_name "newSerialPersistentFields" multiplicity "[]" init_value "=  { }" class_relation const_relation private
	    comment " Serializable fields in new serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2036891 // newSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 3028251 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actual serial version and serial form"
      end

      classrelation 2037019 // serialPersistentFields (<unidirectional association>)
	relation 2037019 --->
	  a role_name "serialPersistentFields" multiplicity "[]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2037019 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 3028379 "compat"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 169371 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    PrivilegedAction act = new GetPropertyAction(\"jmx.serial.form\");
	    String form = (String) AccessController.doPrivileged(act);
	    compat = (form != null && form.equals(\"1.0\"));
	} catch (Exception e) {
	    // OK: exception means no compat with 1.0, too bad
	}
	if (compat) {
	    serialPersistentFields = oldSerialPersistentFields;
	    serialVersionUID = oldSerialVersionUID;
	} else {
	    serialPersistentFields = newSerialPersistentFields;
	    serialVersionUID = newSerialVersionUID;
	}
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 2037147 // _Empty_property_array (<unidirectional association>)
	relation 2037147 --->
	  a role_name "_Empty_property_array" multiplicity "[]" init_value "=  new Property[0]" class_relation const_relation private
	    comment " Serialization compatibility stuff <==============================
 Class private fields ----------------------------------->

a shared empty array for empty property lists

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2037147 // _Empty_property_array (<unidirectional association>)
	  b parent class_ref 1032859 // Property
      end

      classrelation 2037275 // _EmptyPropertyList (<unidirectional association>)
	relation 2037275 --->
	  a role_name "_EmptyPropertyList" init_value "=  new Hashtable(1)" class_relation const_relation private
	    comment "
a shared empty hashtable for empty property lists

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2037275 // _EmptyPropertyList (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 3028507 "_canonicalName"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Class private fields <==============================
 Instance private fields ----------------------------------->

a String containing the canonical name
"
      end

      classrelation 2037403 // _kp_array (<unidirectional association>)
	relation 2037403 --->
	  a role_name "_kp_array" multiplicity "[]" private
	    comment "
An array of properties in the same seq order as time creation

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2037403 // _kp_array (<unidirectional association>)
	  b parent class_ref 1032859 // Property
      end

      classrelation 2037531 // _ca_array (<unidirectional association>)
	relation 2037531 --->
	  a role_name "_ca_array" multiplicity "[]" private
	    comment "
An array of properties in the same seq order as canonical order

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2037531 // _ca_array (<unidirectional association>)
	  b parent class_ref 1032859 // Property
      end

      attribute 3028635 "_domain_length"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The length of the domain part of built objectname
"
      end

      classrelation 2037659 // _propertyList (<unidirectional association>)
	relation 2037659 --->
	  a role_name "_propertyList" private
	    comment "
The propertyList of built object name. Initialized lazily.
Table that contains all the pairs (key,value) for this ObjectName.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2037659 // _propertyList (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 3028763 "_domain_pattern"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "boolean that declares if this ObjectName domain part is a pattern
"
      end

      attribute 3028891 "_property_pattern"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "boolean that declares if this ObjectName contains a pattern on the 
key property list
"
      end

      operation 8256027 "construct"
	private explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Instance private fields <=======================================
 Private fields <========================================
  Private methods ----------------------------------------> 
 Category : Instance construction -------------------------> 

Initializes this {@link ObjectName} from the given string
representation.

@param name A string representation of the {@link ObjectName}

@exception MalformedObjectNameException The string passed as a
parameter does not have the right format.
@exception NullPointerException The <code>name</code> parameter
is null."
      end

      operation 8256155 "construct"
	private explicit_return_type "void"
	nparams 2
	  param in name "domain" explicit_type "String"
	  param inout name "props" type class_ref 139035 // Hashtable
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an ObjectName from a domain and a Hashtable.

@param domain Domain of the ObjectName.
@param props  Hashtable containing couples <i>key</i> -> <i>value</i>.

@exception MalformedObjectNameException The <code>domain</code>
contains an illegal character, or one of the keys or values in
<code>table</code> contains an illegal character, or one of the
values in <code>table</code> does not follow the rules for quoting.
@exception NullPointerException One of the parameters is null."
      end

      operation 8256283 "addProperty"
	private explicit_return_type "void"
	nparams 4
	  param inout name "prop" type class_ref 1032859 // Property
	  param in name "index" explicit_type "int"
	  param inout name "keys_map" type class_ref 144923 // HashMap
	  param in name "key_name" explicit_type "String"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : Instance construction <==============================
 Category : Internal utilities ------------------------------>

Add passed property to the list at the given index
for the passed key name"
      end

      operation 8256411 "setCanonicalName"
	private explicit_return_type "void"
	nparams 6
	  param in name "specified_chars" explicit_type "char"
	  param in name "canonical_chars" explicit_type "char"
	  param in name "keys" explicit_type "String"
	  param inout name "keys_map" type class_ref 144923 // HashMap
	  param in name "prop_index" explicit_type "int"
	  param in name "nb_props" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the canonical name of receiver from input 'specified_chars'
array, by filling 'canonical_chars' array with found 'nb-props'
properties starting at position 'prop_index'."
      end

      operation 8256539 "parseKey"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "s" explicit_type "char"
	  param in name "startKey" explicit_type "int"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a key.
<pre>final int endKey=parseKey(s,startKey);</pre>
<p>key starts at startKey (included), and ends at endKey (excluded).
If (startKey == endKey), then the key is empty.

@param s The char array of the original string.
@param startKey index at which to begin parsing.
@return The index following the last character of the key."
      end

      operation 8256667 "parseValue"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "s" explicit_type "char"
	  param in name "startValue" explicit_type "int"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a value.
<pre>final int endVal=parseValue(s,startVal);</pre>
<p>value starts at startVal (included), and ends at endVal (excluded).
If (startVal == endVal), then the key is empty.

@param s The char array of the original string.
@param startValue index at which to begin parsing.
@return The index following the last character of the value."
      end

      operation 8256795 "checkValue"
	private explicit_return_type "String"
	nparams 1
	  param in name "val" explicit_type "String"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the value given in parameter in the first constructor is a 
valid value"
      end

      operation 8256923 "checkKey"
	private explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	nexceptions 1
	  exception class_ref 517787 // MalformedObjectNameException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key given in parameter in the first constructor is a 
valid key."
      end

      operation 8257051 "wildmatch"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param in name "s" explicit_type "char"
	  param in name "p" explicit_type "char"
	  param in name "si" explicit_type "int"
	  param in name "pi" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether string s is matched by pattern p.
Supports \"?\", \"*\" each of which may be escaped with \"\\\";
Not yet supported: internationalization; \"\\\" inside brackets.<P>
Wildcard matching routine by Karl Heuer.  Public Domain.<P>"
      end

      operation 8257179 "isDomain"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "domain" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : Internal utilities <==============================
 Category : Internal accessors ------------------------------>

Check if domain is a valid domain"
      end

      operation 8257307 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : Internal accessors <==============================
 Category : Serialization ----------------------------------->

Deserializes an {@link ObjectName} from an {@link ObjectInputStream}.
@serialData <ul>
              <li>In the current serial form (value of property
                  <code>jmx.serial.form</code> differs from
                  <code>1.0</code>): the string
                  &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;,
                  where: <ul>
                           <li>&lt;domain&gt; represents the domain part
                               of the {@link ObjectName}</li>
                           <li>&lt;properties&gt; represents the list of
                               properties, as returned by 
                               {@link #getKeyPropertyListString}
                           <li>&lt;wild&gt; is empty if not
                               <code>isPropertyPattern</code>, or
                               is the character \"<code>*</code>\" if
                               <code>isPropertyPattern</code>
                               and &lt;properties&gt; is empty, or
                               is \"<code>,*</code>\" if
                               <code>isPropertyPattern</code> and
                               &lt;properties&gt; is not empty.
                           </li>
                         </ul>
                  The intent is that this string could be supplied
                  to the {@link #ObjectName(String)} constructor to
                  produce an equivalent {@link ObjectName}.
              </li>
              <li>In the old serial form (value of property
                  <code>jmx.serial.form</code> is
                  <code>1.0</code>): &lt;domain&gt; &lt;propertyList&gt;
                  &lt;propertyListString&gt; &lt;canonicalName&gt;
                  &lt;pattern&gt; &lt;propertyPattern&gt;,
                  where: <ul>
                           <li>&lt;domain&gt; represents the domain part
                               of the {@link ObjectName}</li>
                           <li>&lt;propertyList&gt; is the 
                               {@link Hashtable} that contains all the
                               pairs (key,value) for this
                               {@link ObjectName}</li>
                           <li>&lt;propertyListString&gt; is the
                               {@link String} representation of the
                               list of properties in any order (not
                               mandatorily a canonical representation)
                               </li>
                           <li>&lt;canonicalName&gt; is the
                               {@link String} containing this
                               {@link ObjectName}'s canonical name</li>
                           <li>&lt;pattern&gt; is a boolean which is
                               <code>true</code> if this
                               {@link ObjectName} contains a pattern</li>
                           <li>&lt;propertyPattern&gt; is a boolean which
                               is <code>true</code> if this
                               {@link ObjectName} contains a pattern in
                               the list of properties</li>
                         </ul>
              </li>
            </ul>"
      end

      operation 8257435 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes an {@link ObjectName} to an {@link ObjectOutputStream}.
@serialData <ul>
              <li>In the current serial form (value of property
                  <code>jmx.serial.form</code> differs from
                  <code>1.0</code>): the string
                  &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;,
                  where: <ul>
                           <li>&lt;domain&gt; represents the domain part
                               of the {@link ObjectName}</li>
                           <li>&lt;properties&gt; represents the list of
                               properties, as returned by 
                               {@link #getKeyPropertyListString}
                           <li>&lt;wild&gt; is empty if not
                               <code>isPropertyPattern</code>, or
                               is the character \"<code>*</code>\" if
                               this <code>isPropertyPattern</code>
                               and &lt;properties&gt; is empty, or
                               is \"<code>,*</code>\" if
                               <code>isPropertyPattern</code> and
                               &lt;properties&gt; is not empty.
                           </li>
                         </ul>
                  The intent is that this string could be supplied
                  to the {@link #ObjectName(String)} constructor to
                  produce an equivalent {@link ObjectName}.
              </li>
              <li>In the old serial form (value of property
                  <code>jmx.serial.form</code> is
                  <code>1.0</code>): &lt;domain&gt; &lt;propertyList&gt;
                  &lt;propertyListString&gt; &lt;canonicalName&gt;
                  &lt;pattern&gt; &lt;propertyPattern&gt;,
                  where: <ul>
                           <li>&lt;domain&gt; represents the domain part
                               of the {@link ObjectName}</li>
                           <li>&lt;propertyList&gt; is the 
                               {@link Hashtable} that contains all the
                               pairs (key,value) for this
                               {@link ObjectName}</li>
                           <li>&lt;propertyListString&gt; is the
                               {@link String} representation of the
                               list of properties in any order (not
                               mandatorily a canonical representation)
                               </li>
                           <li>&lt;canonicalName&gt; is the
                               {@link String} containing this
                               {@link ObjectName}'s canonical name</li>
                           <li>&lt;pattern&gt; is a boolean which is
                               <code>true</code> if this
                               {@link ObjectName} contains a pattern</li>
                           <li>&lt;propertyPattern&gt; is a boolean which
                               is <code>true</code> if this
                               {@link ObjectName} contains a pattern in
                               the list of properties</li>
                         </ul>
              </li>
            </ul>"
      end

      operation 8257563 "getInstance"
	class_operation public return_type class_ref 510875 // ObjectName
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Category : Serialization <===================================
 Private methods <========================================
 Public methods ----------------------------------------> 
 Category : ObjectName Construction ------------------------------>

<p>Return an instance of ObjectName that can be used anywhere
an object obtained with {@link #ObjectName(String) new
ObjectName(name)} can be used.  The returned object may be of
a subclass of ObjectName.  Calling this method twice with the
same parameters may return the same object or two equal but
not identical objects.</p>

@param name  A string representation of the object name.

@return an ObjectName corresponding to the given String.

@exception MalformedObjectNameException The string passed as a 
parameter does not have the right format.
@exception NullPointerException The <code>name</code> parameter
is null.

@since.unbundled JMX 1.2"
      end

      operation 8257691 "getInstance"
	class_operation public return_type class_ref 510875 // ObjectName
	nparams 3
	  param in name "domain" explicit_type "String"
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return an instance of ObjectName that can be used anywhere
an object obtained with {@link #ObjectName(String, String,
String) new ObjectName(domain, key, value)} can be used.  The
returned object may be of a subclass of ObjectName.  Calling
this method twice with the same parameters may return the same
object or two equal but not identical objects.</p>

@param domain  The domain part of the object name.     
@param key  The attribute in the key property of the object name.     
@param value The value in the key property of the object name.

@return an ObjectName corresponding to the given domain,
key, and value.

@exception MalformedObjectNameException The
<code>domain</code>, <code>key</code>, or <code>value</code>
contains an illegal character, or <code>value</code> does not
follow the rules for quoting.
@exception NullPointerException One of the parameters is null.

@since.unbundled JMX 1.2"
      end

      operation 8257819 "getInstance"
	class_operation public return_type class_ref 510875 // ObjectName
	nparams 2
	  param in name "domain" explicit_type "String"
	  param inout name "table" type class_ref 139035 // Hashtable
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return an instance of ObjectName that can be used anywhere
an object obtained with {@link #ObjectName(String, Hashtable)
new ObjectName(domain, table)} can be used.  The returned
object may be of a subclass of ObjectName.  Calling this method
twice with the same parameters may return the same object or
two equal but not identical objects.</p>

@param domain  The domain part of the object name.
@param table A hash table containing one or more key
properties.  The key of each entry in the table is the key of a
key property in the object name.  The associated value in the
table is the associated value in the object name.

@return an ObjectName corresponding to the given domain and
key mappings.

@exception MalformedObjectNameException The <code>domain</code>
contains an illegal character, or one of the keys or values in
<code>table</code> contains an illegal character, or one of the
values in <code>table</code> does not follow the rules for
quoting.
@exception NullPointerException One of the parameters is null.

@since.unbundled JMX 1.2"
      end

      operation 8257947 "getInstance"
	class_operation public return_type class_ref 510875 // ObjectName
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return an instance of ObjectName that can be used anywhere
the given object can be used.  The returned object may be of a
subclass of ObjectName.  If <code>name</code> is of a subclass
of ObjectName, it is not guaranteed that the returned object
will be of the same class.</p>

<p>The returned value may or may not be identical to
<code>name</code>.  Calling this method twice with the same
parameters may return the same object or two equal but not
identical objects.</p>

<p>Since ObjectName is immutable, it is not usually useful to
make a copy of an ObjectName.  The principal use of this method
is to guard against a malicious caller who might pass an
instance of a subclass with surprising behavior to sensitive
code.  Such code can call this method to obtain an ObjectName
that is known not to have surprising behavior.</p>

@param name an instance of the ObjectName class or of a subclass

@return an instance of ObjectName or a subclass that is known to
have the same semantics.  If <code>name</code> respects the
semantics of ObjectName, then the returned object is equal
(though not necessarily identical) to <code>name</code>.

@exception NullPointerException The <code>name</code> is null.

@since.unbundled JMX 1.2"
      end

      operation 8258075 "ObjectName"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an object name from the given string.

@param name  A string representation of the object name.

@exception MalformedObjectNameException The string passed as a 
parameter does not have the right format.
@exception NullPointerException The <code>name</code> parameter
is null."
      end

      operation 8258203 "ObjectName"
	public explicit_return_type ""
	nparams 3
	  param in name "domain" explicit_type "String"
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an object name with exactly one key property.

@param domain  The domain part of the object name.     
@param key  The attribute in the key property of the object name.     
@param value The value in the key property of the object name.

@exception MalformedObjectNameException The
<code>domain</code>, <code>key</code>, or <code>value</code>
contains an illegal character, or <code>value</code> does not
follow the rules for quoting.
@exception NullPointerException One of the parameters is null."
      end

      operation 8258331 "ObjectName"
	public explicit_return_type ""
	nparams 2
	  param in name "domain" explicit_type "String"
	  param inout name "table" type class_ref 139035 // Hashtable
	nexceptions 2
	  exception class_ref 517787 // MalformedObjectNameException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an object name with several key properties from a Hashtable.

@param domain  The domain part of the object name.
@param table A hash table containing one or more key
properties.  The key of each entry in the table is the key of a
key property in the object name.  The associated value in the
table is the associated value in the object name.

@exception MalformedObjectNameException The <code>domain</code>
contains an illegal character, or one of the keys or values in
<code>table</code> contains an illegal character, or one of the
values in <code>table</code> does not follow the rules for
quoting.
@exception NullPointerException One of the parameters is null."
      end

      operation 8258459 "isPattern"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : ObjectName Construction <==============================
 Category : Getter methods ------------------------------>

Checks whether the object name is a pattern.  An object name is
a pattern if its domain contains a wildcard or if the object
name is a property pattern.

@return  True if the name is a pattern, otherwise false."
      end

      operation 8258587 "isDomainPattern"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the object name is a pattern on the domain part.

@return  True if the name is a domain pattern, otherwise false.

@since.unbundled JMX 1.2"
      end

      operation 8258715 "isPropertyPattern"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the object name is a pattern on the key properties.

@return  True if the name is a pattern, otherwise false."
      end

      operation 8258843 "getCanonicalName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the canonical form of the name; that is, a string
representation where the properties are sorted in lexical
order.</p>

<p>More precisely, the canonical form of the name is a String
consisting of the <em>domain part</em>, a colon
(<code>:</code>), the <em>canonical key property list</em>, and
a <em>pattern indication</em>.</p>

<p>The <em>canonical key property list</em> is the same string
as described for {@link #getCanonicalKeyPropertyListString()}.</p>

<p>The <em>pattern indication</em> is:
<ul>
<li>empty for an ObjectName
that is not a property pattern;
<li>an asterisk for an ObjectName
that is a property pattern with no keys; or
<li>a comma and an
asterisk (<code>,*</code>) for an ObjectName that is a property
pattern with at least one key.
</ul></p>

@return The canonical form of the name."
      end

      operation 8258971 "getDomain"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the domain part.

@return the domain."
      end

      operation 8259099 "getKeyProperty"
	public explicit_return_type "String"
	nparams 1
	  param in name "property" explicit_type "String"
	nexceptions 1
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value associated with a key in a key property.

@param property The property whose value is to be obtained.

@return The value of the property, or null if there is no such
property in this ObjectName.

@exception NullPointerException If <code>property</code> is null."
      end

      operation 8259227 "_getKeyPropertyList"
	private return_type class_ref 139035 // Hashtable
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the key properties as a Hashtable.  The returned
value is a Hashtable in which each key is a key in the
ObjectName's key property list and each value is the associated
value.</p>

<p>The returned value must not be modidied.</p>

@return The table of key properties."
      end

      operation 8259355 "getKeyPropertyList"
	public return_type class_ref 139035 // Hashtable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the key properties as a Hashtable.  The returned
value is a Hashtable in which each key is a key in the
ObjectName's key property list and each value is the associated
value.</p>

<p>The returned value may be unmodifiable.  If it is
modifiable, changing it has no effect on this ObjectName.</p>

@return The table of key properties."
      end

      operation 8259483 "getKeyPropertyListString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a string representation of the list of key
properties specified at creation time.  If this ObjectName was
constructed with the constructor {@link #ObjectName(String)},
the key properties in the returned String will be in the same
order as in the argument to the constructor.</p>

@return The key property list string.  This string is
independent of whether the ObjectName is a pattern."
      end

      operation 8259611 "getSerializedNameString"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the serialized string of the ObjectName.
properties specified at creation time.  If this ObjectName was
constructed with the constructor {@link #ObjectName(String)},
the key properties in the returned String will be in the same
order as in the argument to the constructor.</p>

@return The key property list string.  This string is
independent of whether the ObjectName is a pattern."
      end

      operation 8259739 "writeKeyPropertyListString"
	private explicit_return_type "int"
	nparams 3
	  param in name "canonicalChars" explicit_type "char"
	  param in name "data" explicit_type "char"
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Write a string representation of the list of key
properties specified at creation time in the given array, starting
at the specified offset.  If this ObjectName was
constructed with the constructor {@link #ObjectName(String)},
the key properties in the returned String will be in the same
order as in the argument to the constructor.</p>

@return offset + #of chars written"
      end

      operation 8259867 "getCanonicalKeyPropertyListString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the list of key properties,
in which the key properties are sorted in lexical order. This
is used in lexicographic comparisons performed in order to
select MBeans based on their key property list.  Lexical order
is the order implied by {@link String#compareTo(String)
String.compareTo(String)}.

@return The canonical key property list string.  This string is
independent of whether the ObjectName is a pattern."
      end

      operation 8259995 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : Getter methods <===================================
 Category : Utilities ---------------------------------------->

<p>Returns a string representation of the object name.  The
format of this string is not specified, but users can expect
that two ObjectNames return the same string if and only if they
are equal.</p>

@return a string representation of this object name."
      end

      operation 8260123 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the current object name with another object name.  Two
ObjectName instances are equal if and only if their canonical
forms are equal.  The canonical form is the string described
for {@link #getCanonicalName()}.

@param object  The object name that the current object name is to be 
       compared with.

@return True if <code>object</code> is an ObjectName whose
canonical form is equal to that of this ObjectName."
      end

      operation 8260251 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this object name.
"
      end

      operation 8260379 "quote"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	nexceptions 1
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a quoted form of the given String, suitable for
inclusion in an ObjectName.  The returned value can be used as
the value associated with a key in an ObjectName.  The String
<code>s</code> may contain any character.  Appropriate quoting
ensures that the returned value is legal in an ObjectName.</p>

<p>The returned value consists of a quote ('\"'), a sequence of
characters corresponding to the characters of <code>s</code>,
and another quote.  Characters in <code>s</code> appear
unchanged within the returned value except:</p>

<ul>
<li>A quote ('\"')is replaced by a backslash (\\) followed by a quote.
<li>A star ('*') is replaced by a backslash (\\) followed by a star.
<li>A question mark ('?') is replaced by a backslash (\\) followed by
a question mark.
<li>A backslash ('\\') is replaced by two backslashes.
<li>A newline character (the character '\\n' in Java) is replaced
by a backslash followed by the character '\\n'.
</ul>

@param s the String to be quoted.

@return the quoted String.

@exception NullPointerException if <code>s</code> is null.

@since.unbundled JMX 1.2"
      end

      operation 8260507 "unquote"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "q" explicit_type "String"
	nexceptions 2
	  exception class_ref 216859 // IllegalArgumentException
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns an unquoted form of the given String.  If
<code>q</code> is a String returned by {@link #quote quote(s)},
then <code>unquote(q).equals(s)</code>.  If there is no String
<code>s</code> for which <code>quote(s).equals(q)</code>, then
unquote(q) throws an IllegalArgumentException.</p>

<p>These rules imply that there is a one-to-one mapping between
quoted and unquoted forms.</p>

@param q the String to be unquoted.

@return the unquoted String.

@exception IllegalArgumentException if <code>q</code> could not
have been returned by the {@link #quote} method, for instance
if it does not begin and end with a quote (\").

@exception NullPointerException if <code>q</code> is null.

@since.unbundled JMX 1.2"
      end

      operation 8260635 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 538779 // NullPointerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Category : Utilities <===================================
 Category : QueryExp Interface ---------------------------------------->

<p>Test whether this ObjectName, which may be a pattern,
matches another ObjectName.  If <code>name</code> is a pattern,
the result is false.  If this ObjectName is a pattern, the
result is true if and only if <code>name</code> matches the
pattern.  If neither this ObjectName nor <code>name</code> is
a pattern, the result is true if and only if the two
ObjectNames are equal as described for the {@link
#equals(Object)} method.</p>

@param name The name of the MBean to compare to.

@return True if <code>name</code> matches this ObjectName.

@exception NullPointerException if <code>name</code> is null.

@since.unbundled JMX 1.2"
      end

      operation 8260763 "matchDomains"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8260891 "matchKeys"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8261019 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Method inherited from QueryExp, no implementation needed here
because ObjectName is not relative to an MBeanServer and does
not contain a subquery."
      end
    end

    class 511003 "ReflectionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents exceptions thrown in the MBean server when using the
java.lang.reflect classes to invoke methods on MBeans. It \"wraps\" the
actual java.lang.Exception thrown.

@since 1.5"
      classrelation 2038555 // <generalisation>
	relation 2038555 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2038555 // <generalisation>
	  b parent class_ref 1029147 // JMException
      end

      attribute 3030555 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  9170809325636915553L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2038683 // exception (<unidirectional association>)
	relation 2038683 --->
	  a role_name "exception" private
	    comment "
@serial The wrapped {@link Exception}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2038683 // exception (<unidirectional association>)
	  b parent class_ref 165403 // Exception
      end

      operation 8266523 "ReflectionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>ReflectionException</CODE> that wraps the actual <CODE>java.lang.Exception</CODE>.

@param e the wrapped exception."
      end

      operation 8266651 "ReflectionException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 165403 // Exception
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>ReflectionException</CODE> that wraps the actual <CODE>java.lang.Exception</CODE> with
a detail message.

@param e the wrapped exception.
@param message the detail message."
      end

      operation 8266779 "getTargetException"
	public return_type class_ref 165403 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link Exception} thrown.

@return the wrapped {@link Exception}."
      end

      operation 8266907 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link Exception} thrown.

@return the wrapped {@link Exception}."
      end
    end

    class 511131 "InstanceAlreadyExistsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The MBean is already registered in the repository.

@since 1.5"
      classrelation 2026267 // <generalisation>
	relation 2026267 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026267 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3015323 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  8893743928912733931L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8231451 "InstanceAlreadyExistsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8231579 "InstanceAlreadyExistsException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 511259 "MBeanRegistrationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Wraps exceptions thrown by the preRegister(), preDeregister() methods
of the <CODE>MBeanRegistration</CODE> interface.

@since 1.5"
      classrelation 2032411 // <generalisation>
	relation 2032411 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2032411 // <generalisation>
	  b parent class_ref 511387 // MBeanException
      end

      attribute 3023643 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4482382455277067805L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8245147 "MBeanRegistrationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MBeanRegistrationException</CODE> that wraps
the actual <CODE>java.lang.Exception</CODE>.

@param e the wrapped exception."
      end

      operation 8245275 "MBeanRegistrationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 165403 // Exception
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MBeanRegistrationException</CODE> that wraps
the actual <CODE>java.lang.Exception</CODE> with a detailed
message.

@param e the wrapped exception.
@param message the detail message."
      end
    end

    class 511387 "MBeanException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents \"user defined\" exceptions thrown by MBean methods
in the agent. It \"wraps\" the actual \"user defined\" exception thrown.
This exception will be built by the MBeanServer when a call to an
MBean method results in an unknown exception.

@since 1.5"
      classrelation 2028827 // <generalisation>
	relation 2028827 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2028827 // <generalisation>
	  b parent class_ref 1029147 // JMException
      end

      attribute 3017883 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4066342430588744142L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2028955 // exception (<unidirectional association>)
	relation 2028955 --->
	  a role_name "exception" private
	    comment "
@serial Encapsulated {@link Exception}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2028955 // exception (<unidirectional association>)
	  b parent class_ref 165403 // Exception
      end

      operation 8237211 "MBeanException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MBeanException</CODE> that wraps the actual <CODE>java.lang.Exception</CODE>.

@param e the wrapped exception."
      end

      operation 8237339 "MBeanException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 165403 // Exception
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MBeanException</CODE> that wraps the actual <CODE>java.lang.Exception</CODE> with
a detail message.

@param e the wrapped exception.
@param message the detail message."
      end

      operation 8237467 "getTargetException"
	public return_type class_ref 165403 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual {@link Exception} thrown.

@return the wrapped exception."
      end

      operation 8237595 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual {@link Exception} thrown.

@return the wrapped exception."
      end
    end

    class 511515 "NotCompliantMBeanException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exception which occurs when trying to register an  object in the MBean server that is not a JMX compliant MBean. 

@since 1.5"
      classrelation 2034075 // <generalisation>
	relation 2034075 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2034075 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3026203 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5175579583207963577L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8251035 "NotCompliantMBeanException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8251163 "NotCompliantMBeanException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 511643 "InstanceNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The specified MBean does not exist in the repository.

@since 1.5"
      classrelation 2026395 // <generalisation>
	relation 2026395 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026395 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3015451 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -882579438394773049L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8231707 "InstanceNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8231835 "InstanceNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 511771 "QueryExp"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Represents relational constraints that can be used in database
query \"where clauses\".  Instances of QueryExp are returned by the
static methods of the {@link Query} class.</p>

<p>It is possible, but not
recommended, to create custom queries by implementing this
interface.  In that case, it is better to extend the {@link
QueryEval} class than to implement the interface directly, so that
the {@link #setMBeanServer} method works correctly.

@since 1.5"
      classrelation 880795 // <generalisation>
	relation 880795 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 880795 // <generalisation>
	  b parent class_ref 137883 // Serializable
      end

      operation 3224731 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the QueryExp on an MBean.

@param name The name of the MBean on which the QueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 3224859 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 513179 // MBeanServer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the MBean server on which the query is to be performed.

@param s The MBean server on which the query is to be performed."
      end
    end

    class 511899 "AttributeNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The specified attribute does not exist or cannot be retrieved.

@since 1.5"
      classrelation 2022555 // <generalisation>
	relation 2022555 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022555 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3012763 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6511584241791106926L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8222491 "AttributeNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8222619 "AttributeNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message detail message."
      end
    end

    class 512027 "AttributeList"
      visibility public 
      nactuals 4
      actual class class_ref 137627 // ArrayList
        rank 0 explicit_value ""
      actual class class_ref 137627 // ArrayList
        rank 1 explicit_value ""
      actual class class_ref 137627 // ArrayList
        rank 2 explicit_value ""
      actual class class_ref 137627 // ArrayList
        rank 3 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a list of values for attributes of an
MBean. The methods used for the insertion of {@link javax.management.Attribute Attribute} objects in
the <CODE>AttributeList</CODE> overrides the corresponding methods in the superclass
<CODE>ArrayList</CODE>. This is needed in order to insure that the objects contained
in the <CODE>AttributeList</CODE> are only <CODE>Attribute</CODE> objects. This avoids getting
an exception when retrieving elements from the <CODE>AttributeList</CODE>.

@since 1.5"
      classrelation 2022171 // <generalisation>
	relation 2022171 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022171 // <generalisation>
	  b parent class_ref 137627 // ArrayList
      end

      attribute 3012379 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4077085769279709076L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8220955 "AttributeList"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <CODE>AttributeList</CODE>."
      end

      operation 8221083 "AttributeList"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <CODE>AttributeList</CODE> with the initial capacity specified.

@param initialCapacity the initial capacity of the
<code>AttributeList</code>, as specified by {@link
ArrayList#ArrayList(int)}."
      end

      operation 8221211 "AttributeList"
	public explicit_return_type ""
	nparams 1
	  param inout name "list" type class_ref 512027 // AttributeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>AttributeList</CODE> containing the elements of the <CODE>AttributeList</CODE> specified,
in the order in which they are returned by the <CODE>AttributeList</CODE>'s iterator.
The <CODE>AttributeList</CODE> instance has an initial capacity of 110% of the
size of the <CODE>AttributeList</CODE> specified.

@param list the <code>AttributeList</code> that defines the initial
contents of the new <code>AttributeList</code>.

@see ArrayList#ArrayList(java.util.Collection)"
      end

      operation 8221339 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 512155 // Attribute
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the <CODE>Attribute</CODE> specified as the last element of the list.

@param object  The attribute to be added."
      end

      operation 8221467 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "object" type class_ref 512155 // Attribute
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the attribute specified as an element at the position specified.
Elements with an index greater than or equal to the current position are
shifted up. If the index is out of range (index < 0 || index >
size() a RuntimeOperationsException should be raised, wrapping the
java.lang.IndexOutOfBoundsException thrown.

@param object  The <CODE>Attribute</CODE> object to be inserted.      
@param index The position in the list where the new <CODE>Attribute</CODE> object is to be
inserted."
      end

      operation 8221595 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "object" type class_ref 512155 // Attribute
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the element at the position specified to be the attribute specified.
The previous element at that position is discarded. If the index is
out of range (index < 0 || index > size() a RuntimeOperationsException should
be raised, wrapping the java.lang.IndexOutOfBoundsException thrown.

@param object  The value to which the attribute element should be set.      
@param index  The position specified."
      end

      operation 8221723 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "list" type class_ref 512027 // AttributeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends all the elements in the <CODE>AttributeList</CODE> specified to the end
of the list, in the order in which they are returned by the Iterator of
the <CODE>AttributeList</CODE> specified.

@param list  Elements to be inserted into the list.

@return true if this list changed as a result of the call.

@see ArrayList#addAll(java.util.Collection)"
      end

      operation 8221851 "addAll"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "list" type class_ref 512027 // AttributeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all of the elements in the <CODE>AttributeList</CODE> specified into this
list, starting at the specified position, in the order in which they
are returned by the Iterator of the <CODE>AttributeList</CODE> specified. If
the index is out of range (index < 0 || index > size() a RuntimeOperationsException should
be raised, wrapping the java.lang.IndexOutOfBoundsException thrown.

@param list  Elements to be inserted into the list.      
@param index  Position at which to insert the first element from the <CODE>AttributeList</CODE> specified.

@return true if this list changed as a result of the call.

@see ArrayList#addAll(int, java.util.Collection)"
      end
    end

    class 512155 "Attribute"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents an MBean attribute by associating its name with its value.
The MBean server and other objects use this class to get and set attributes values.

@since 1.5"
      classrelation 2021403 // <realization>
	relation 2021403 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2021403 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3011099 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2484220110589082382L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3011227 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Attribute name.
"
      end

      attribute 3011355 "value"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Attribute value
"
      end

      operation 8219035 "Attribute"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an Attribute object which associates the given attribute name with the given value.

@param name A String containing the name of the attribute to be created. Cannot be null.
@param value The Object which is assigned to the attribute. This object must be of the same type as the attribute.
"
      end

      operation 8219163 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String containing the  name of the attribute.

@return the name of the attribute."
      end

      operation 8219291 "getValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Object that is the value of this attribute.

@return the value of the attribute."
      end

      operation 8219419 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the current Attribute Object with another Attribute Object.

@param object  The Attribute that the current Attribute is to be compared with.

@return  True if the two Attribute objects are equal, otherwise false."
      end
    end

    class 512283 "InvalidAttributeValueException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The value specified is not valid for the attribute.

@since 1.5"
      classrelation 2026779 // <generalisation>
	relation 2026779 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026779 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3015963 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2164571879317142449L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8232347 "InvalidAttributeValueException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8232475 "InvalidAttributeValueException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 512411 "NotificationListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Should be implemented by an object that wants to receive notifications.

@since 1.5"
      classrelation 871707 // <generalisation>
	relation 871707 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 871707 // <generalisation>
	  b parent class_ref 147099 // EventListener
      end

      operation 3164827 "handleNotification"
	public explicit_return_type "void"
	nparams 2
	  param inout name "notification" type class_ref 513819 // Notification
	  param inout name "handback" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a JMX notification occurs.
The implementation of this method should return as soon as possible, to avoid
blocking its notification broadcaster.

@param notification The notification.    
@param handback An opaque object which helps the listener to associate information
regarding the MBean emitter. This object is passed to the MBean during the
addListener call and resent, without modification, to the listener. The MBean object 
should not use or modify the object. 
"
      end
    end

    class 512539 "NotificationFilter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "To be implemented by a any class acting as a notification filter.
It allows a registered notification listener to filter the notifications of interest.

@since 1.5"
      classrelation 2021659 // <generalisation>
	relation 2021659 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2021659 // <generalisation>
	  b parent class_ref 137883 // Serializable
      end

      operation 8220187 "isNotificationEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "notification" type class_ref 513819 // Notification
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked before sending the specified notification to the listener.
  
@param notification The notification to be sent.
@return <CODE>true</CODE> if the notification has to be sent to the listener, <CODE>false</CODE> otherwise."
      end
    end

    class 512667 "ListenerNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The specified MBean listener does not exist in the repository.

@since 1.5"
      classrelation 2026907 // <generalisation>
	relation 2026907 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026907 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3016091 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7242605822448519061L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8232603 "ListenerNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8232731 "ListenerNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 512795 "MBeanInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Describes the management interface exposed by an MBean; that is,
the set of attributes and operations which are available for
management operations.  Instances of this class are immutable.
Subclasses may be mutable but this is not recommended.</p>

<p>The contents of the <code>MBeanInfo</code> for a Dynamic MBean
are determined by its {@link DynamicMBean#getMBeanInfo
getMBeanInfo()} method.  This includes Open MBeans and Model
MBeans, which are kinds of Dynamic MBeans.</p>

<p>The contents of the <code>MBeanInfo</code> for a Standard MBean
are determined by the MBean server as follows:</p>

<ul>

<li>{@link #getClassName()} returns the Java class name of the MBean
object;

<li>{@link #getConstructors()} returns the list of all public
constructors in that object;

<li>{@link #getAttributes()} returns the list of all attributes
whose existence is deduced from the presence in the MBean interface
of a <code>get<i>Name</i></code>, <code>is<i>Name</i></code>, or
<code>set<i>Name</i></code> method that conforms to the conventions
for Standard MBeans;

<li>{@link #getOperations()} returns the list of all methods in
the MBean interface that do not represent attributes;

<li>{@link #getNotifications()} returns an empty array if the MBean
does not implement the {@link NotificationBroadcaster} interface,
otherwise the result of calling {@link
NotificationBroadcaster#getNotificationInfo()} on it.

</ul>

<p>The remaining details of the <code>MBeanInfo</code> for a
Standard MBean are not specified.  This includes the description of
the <code>MBeanInfo</code> and of any contained constructors,
attributes, operations, and notifications; and the names and
descriptions of parameters to constructors and operations.

@since 1.5"
      classrelation 2029083 // <realization>
	relation 2029083 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2029083 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 2029211 // <realization>
	relation 2029211 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2029211 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3018011 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -6451021435135161911L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3018139 "description"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The human readable description of the class.
"
      end

      attribute 3018267 "className"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The MBean qualified name.
"
      end

      classrelation 2029339 // attributes (<unidirectional association>)
	relation 2029339 --->
	  a role_name "attributes" multiplicity "[]" const_relation private
	    comment "
@serial The MBean attribute descriptors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2029339 // attributes (<unidirectional association>)
	  b parent class_ref 514971 // MBeanAttributeInfo
      end

      classrelation 2029467 // operations (<unidirectional association>)
	relation 2029467 --->
	  a role_name "operations" multiplicity "[]" const_relation private
	    comment "
@serial The MBean operation descriptors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2029467 // operations (<unidirectional association>)
	  b parent class_ref 1031323 // MBeanOperationInfo
      end

      classrelation 2029595 // constructors (<unidirectional association>)
	relation 2029595 --->
	  a role_name "constructors" multiplicity "[]" const_relation private
	    comment "
@serial The MBean constructor descriptors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2029595 // constructors (<unidirectional association>)
	  b parent class_ref 515099 // MBeanConstructorInfo
      end

      classrelation 2029723 // notifications (<unidirectional association>)
	relation 2029723 --->
	  a role_name "notifications" multiplicity "[]" const_relation private
	    comment "
@serial The MBean notification descriptors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2029723 // notifications (<unidirectional association>)
	  b parent class_ref 516635 // MBeanNotificationInfo
      end

      attribute 3018395 "hashCode"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3018523 "immutable"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>True if this class is known not to override the getters of
MBeanInfo.  Obviously true for MBeanInfo itself, and true
for a subclass where we succeed in reflecting on the methods
and discover they are not overridden.</p>

<p>The purpose of this variable is to avoid cloning the arrays
when doing operations like {@link #equals} where we know they
will not be changed.  If a subclass overrides a getter, we
cannot access the corresponding array directly.</p>
"
      end

      operation 8237723 "MBeanInfo"
	public explicit_return_type ""
	nparams 6
	  param in name "className" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "attributes" type class_ref 514971 // MBeanAttributeInfo
	  param inout name "constructors" type class_ref 515099 // MBeanConstructorInfo
	  param inout name "operations" type class_ref 1031323 // MBeanOperationInfo
	  param inout name "notifications" type class_ref 516635 // MBeanNotificationInfo
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanInfo</CODE>.

@param className The name of the Java class of the MBean described
by this <CODE>MBeanInfo</CODE>.  This value may be any
syntactically legal Java class name.  It does not have to be a
Java class known to the MBean server or to the MBean's
ClassLoader.  If it is a Java class known to the MBean's
ClassLoader, it is recommended but not required that the
class's public methods include those that would appear in a
Standard MBean implementing the attributes and operations in
this MBeanInfo.
@param description A human readable description of the MBean (optional).
@param attributes The list of exposed attributes of the MBean.
This may be null with the same effect as a zero-length array.
@param constructors The list of public constructors of the
MBean.  This may be null with the same effect as a zero-length
array.
@param operations The list of operations of the MBean.  This
may be null with the same effect as a zero-length array.
@param notifications The list of notifications emitted.  This
may be null with the same effect as a zero-length array."
      end

      operation 8237851 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a shallow clone of this instance.
The clone is obtained by simply calling <tt>super.clone()</tt>,
thus calling the default native shallow cloning mechanism
implemented by <tt>Object.clone()</tt>.
No deeper cloning of any internal field is made.</p>

<p>Since this class is immutable, the clone method is chiefly of
interest to subclasses.</p>"
      end

      operation 8237979 "getClassName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the Java class of the MBean described by
this <CODE>MBeanInfo</CODE>.

@return the class name."
      end

      operation 8238107 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human readable description of the MBean.

@return the description."
      end

      operation 8238235 "getAttributes"
	public return_type class_ref 514971 // MBeanAttributeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of attributes exposed for management.
Each attribute is described by an <CODE>MBeanAttributeInfo</CODE> object.

The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanAttributeInfo</CODE> objects
but that each referenced <CODE>MBeanAttributeInfo</CODE> object is not copied.

@return  An array of <CODE>MBeanAttributeInfo</CODE> objects."
      end

      operation 8238363 "fastGetAttributes"
	private return_type class_ref 514971 // MBeanAttributeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8238491 "nonNullAttributes"
	private return_type class_ref 514971 // MBeanAttributeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value of the attributes field, or an empty array if
the field is null.  This can't happen with a
normally-constructed instance of this class, but can if the
instance was deserialized from another implementation that
allows the field to be null.  It would be simpler if we enforced
the class invariant that these fields cannot be null by writing
a readObject() method, but that would require us to define the
various array fields as non-final, which is annoying because
conceptually they are indeed final."
      end

      operation 8238619 "getOperations"
	public return_type class_ref 1031323 // MBeanOperationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of operations  of the MBean.
Each operation is described by an <CODE>MBeanOperationInfo</CODE> object.

The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanOperationInfo</CODE> objects
but that each referenced <CODE>MBeanOperationInfo</CODE> object is not copied.

@return  An array of <CODE>MBeanOperationInfo</CODE> objects."
      end

      operation 8238747 "fastGetOperations"
	private return_type class_ref 1031323 // MBeanOperationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8238875 "nonNullOperations"
	private return_type class_ref 1031323 // MBeanOperationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8239003 "getConstructors"
	public return_type class_ref 515099 // MBeanConstructorInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the list of the public constructors of the MBean.
Each constructor is described by an
<CODE>MBeanConstructorInfo</CODE> object.</p>

<p>The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanConstructorInfo</CODE> objects but
that each referenced <CODE>MBeanConstructorInfo</CODE> object
is not copied.</p>

<p>The returned list is not necessarily exhaustive.  That is,
the MBean may have a public constructor that is not in the
list.  In this case, the MBean server can construct another
instance of this MBean's class using that constructor, even
though it is not listed here.</p>

@return  An array of <CODE>MBeanConstructorInfo</CODE> objects."
      end

      operation 8239131 "fastGetConstructors"
	private return_type class_ref 515099 // MBeanConstructorInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8239259 "nonNullConstructors"
	private return_type class_ref 515099 // MBeanConstructorInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8239387 "getNotifications"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of the notifications emitted by the MBean.
Each notification is described by an <CODE>MBeanNotificationInfo</CODE> object.

The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanNotificationInfo</CODE> objects
but that each referenced <CODE>MBeanNotificationInfo</CODE> object is not copied.

@return  An array of <CODE>MBeanNotificationInfo</CODE> objects."
      end

      operation 8239515 "fastGetNotifications"
	private return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8239643 "nonNullNotifications"
	private return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8239771 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compare this MBeanInfo to another.  Two MBeanInfo objects
are equal iff they return equal values for {@link
#getClassName()} and for {@link #getDescription()}, and the
arrays returned by the two objects for {@link
#getAttributes()}, {@link #getOperations()}, {@link
#getConstructors()}, and {@link #getNotifications()} are
pairwise equal.  Here \"equal\" means {@link
Object#equals(Object)}, not identity.</p>

<p>If two MBeanInfo objects return the same values in one of
their arrays but in a different order then they are not equal.</p>

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanInfo that is equal
to this one according to the rules above."
      end

      operation 8239899 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8240027 "arrayHashCode"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "array" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2029851 // immutability (<unidirectional association>)
	relation 2029851 --->
	  a role_name "immutability" init_value "=  new WeakHashMap()" class_relation const_relation private
	    comment "
Cached results of previous calls to isImmutableClass.  Maps
Class to Boolean.  This is a WeakHashMap so that we don't
prevent a class from being garbage collected just because
we know whether it's immutable.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2029851 // immutability (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8240155 "isImmutableClass"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "subclass" type class_ref 164635 // Class
	  param inout name "immutableClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if <code>subclass</code> is known to preserve the
immutability of <code>immutableClass</code>.  The class
<code>immutableClass</code> is a reference class that is known
to be immutable.  The subclass <code>subclass</code> is
considered immutable if it does not override any public method
of <code>immutableClass</code> whose name begins with \"get\" or
\"is\".  This is obviously not an infallible test for immutability,
but it works for the public interfaces of the MBean*Info classes."
      end

      class 1031451 "ImmutabilityAction"
	visibility private 
	nactuals 3
	actual class class_ref 222363 // PrivilegedAction
	  rank 0 explicit_value ""
	actual class class_ref 222363 // PrivilegedAction
	  rank 1 explicit_value ""
	actual class class_ref 222363 // PrivilegedAction
	  rank 2 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2029979 // <realization>
	  relation 2029979 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2029979 // <realization>
	    b parent class_ref 222363 // PrivilegedAction
	end

	classrelation 2030107 // subclass (<unidirectional association>)
	  relation 2030107 --->
	    a role_name "subclass" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2030107 // subclass (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	classrelation 2030235 // immutableClass (<unidirectional association>)
	  relation 2030235 --->
	    a role_name "immutableClass" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2030235 // immutableClass (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	operation 8240283 "ImmutabilityAction"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "subclass" type class_ref 164635 // Class
	    param inout name "immutableClass" type class_ref 164635 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8240411 "run"
	  public explicit_return_type "Object"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 512923 "IntrospectionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An exception occurred during the introspection of an MBean.

@since 1.5"
      classrelation 2026523 // <generalisation>
	relation 2026523 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026523 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3015579 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1054516935875481725L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8231963 "IntrospectionException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8232091 "IntrospectionException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 513179 "MBeanServer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This is the interface for MBean manipulation on the agent
side. It contains the methods necessary for the creation,
registration, and deletion of MBeans as well as the access methods
for registered MBeans.  This is the core component of the JMX
infrastructure.</p>

<p>User code does not usually implement this interface.  Instead,
an object that implements this interface is obtained with one of
the methods in the {@link MBeanServerFactory} class.</p>

<p>Every MBean which is added to the MBean server becomes
manageable: its attributes and operations become remotely
accessible through the connectors/adaptors connected to that MBean
server.  A Java object cannot be registered in the MBean server
unless it is a JMX compliant MBean.</p>

<p>When an MBean is registered or unregistered in the MBean server
a {@link javax.management.MBeanServerNotification
MBeanServerNotification} Notification is emitted. To register an
object as listener to MBeanServerNotifications you should call the
MBean server method {@link #addNotificationListener
addNotificationListener} with <CODE>ObjectName</CODE> the
<CODE>ObjectName</CODE> of the {@link
javax.management.MBeanServerDelegate MBeanServerDelegate}.  This
<CODE>ObjectName</CODE> is: <BR>
<CODE>JMImplementation:type=MBeanServerDelegate</CODE>.</p>

<p>An object obtained from the {@link
MBeanServerFactory#createMBeanServer(String) createMBeanServer} or
{@link MBeanServerFactory#newMBeanServer(String) newMBeanServer}
methods of the {@link MBeanServerFactory} class applies security
checks to its methods, as follows.</p>

<p>First, if there is no security manager ({@link
System#getSecurityManager()} is null), then no checks are made.</p>

<p>Assuming there is a security manager, the checks are made as
detailed below.  In what follows, <code>className</code> is the
string returned by {@link MBeanInfo#getClassName()} for the target
MBean.</p>

<p>If a security check fails, the method throws {@link
SecurityException}.</p>

<p>For methods that can throw {@link InstanceNotFoundException},
this exception is thrown for a non-existent MBean, regardless of
permissions.  This is because a non-existent MBean has no
<code>className</code>.</p>

<ul>

<li><p>For the {@link #invoke invoke} method, the caller's
permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, operationName, name, \"invoke\")}.</p>

<li><p>For the {@link #getAttribute getAttribute} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, attribute, name, \"getAttribute\")}.</p>

<li><p>For the {@link #getAttributes getAttributes} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"getAttribute\")}.
Additionally, for each attribute <em>a</em> in the {@link
AttributeList}, if the caller's permissions do not imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, <em>a</em>, name, \"getAttribute\")}, the
MBean server will behave as if that attribute had not been in the
supplied list.</p>

<li><p>For the {@link #setAttribute setAttribute} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, attrName, name, \"setAttribute\")}, where
<code>attrName</code> is {@link Attribute#getName()
attribute.getName()}.</p>

<li><p>For the {@link #setAttributes setAttributes} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"setAttribute\")}.
Additionally, for each attribute <em>a</em> in the {@link
AttributeList}, if the caller's permissions do not imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, <em>a</em>, name, \"setAttribute\")}, the
MBean server will behave as if that attribute had not been in the
supplied list.</p>

<li><p>For the <code>addNotificationListener</code> methods,
the caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name,
\"addNotificationListener\")}.</p>

<li><p>For the <code>removeNotificationListener</code> methods,
the caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name,
\"removeNotificationListener\")}.</p>

<li><p>For the {@link #getMBeanInfo getMBeanInfo} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"getMBeanInfo\")}.</p>

<li><p>For the {@link #getObjectInstance getObjectInstance} method,
the caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"getObjectInstance\")}.</p>

<li><p>For the {@link #isInstanceOf isInstanceOf} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"isInstanceOf\")}.</p>

<li><p>For the {@link #queryMBeans queryMBeans} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(null, null, name, \"queryMBeans\")}.
Additionally, for each MBean that matches <code>name</code>,
if the caller's permissions do not imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"queryMBeans\")}, the
MBean server will behave as if that MBean did not exist.</p>

<p>Certain query elements perform operations on the MBean server.
If the caller does not have the required permissions for a given
MBean, that MBean will not be included in the result of the query.
The standard query elements that are affected are {@link
Query#attr(String)}, {@link Query#attr(String,String)}, and {@link
Query#classattr()}.</p>

<li><p>For the {@link #queryNames queryNames} method, the checks
are the same as for <code>queryMBeans</code> except that
<code>\"queryNames\"</code> is used instead of
<code>\"queryMBeans\"</code> in the <code>MBeanPermission</code>
objects.  Note that a <code>\"queryMBeans\"</code> permission implies
the corresponding <code>\"queryNames\"</code> permission.</p>

<li><p>For the {@link #getDomains getDomains} method, the caller's
permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(null, null, name, \"getDomains\")}.  Additionally,
for each domain <var>d</var> in the returned array, if the caller's
permissions do not imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(null, null, new ObjectName(\"<var>d</var>:x=x\"),
\"getDomains\")}, the domain is eliminated from the array.  Here,
<code>x=x</code> is any <var>key=value</var> pair, needed to
satisfy ObjectName's constructor but not otherwise relevant.</p>

<li><p>For the {@link #getClassLoader getClassLoader} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, loaderName,
\"getClassLoader\")}.</p>

<li><p>For the {@link #getClassLoaderFor getClassLoaderFor} method,
the caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, mbeanName,
\"getClassLoaderFor\")}.</p>

<li><p>For the {@link #getClassLoaderRepository
getClassLoaderRepository} method, the caller's permissions must
imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(null, null, null, \"getClassLoaderRepository\")}.</p>

<li><p>For the deprecated <code>deserialize</code> methods, the
required permissions are the same as for the methods that replace
them.</p>

<li><p>For the <code>instantiate</code> methods, the caller's
permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, null, \"instantiate\")}.</p>

<li><p>For the {@link #registerMBean registerMBean} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"registerMBean\")}.  Here
<code>className</code> is the string returned by {@link
MBeanInfo#getClassName()} for an object of this class.

<p>If the <code>MBeanPermission</code> check succeeds, the MBean's
class is validated by checking that its {@link
java.security.ProtectionDomain ProtectionDomain} implies {@link
MBeanTrustPermission#MBeanTrustPermission(String)
MBeanTrustPermission(\"register\")}.</p>

<p>Finally, if the <code>name</code> argument is null, another
<code>MBeanPermission</code> check is made using the
<code>ObjectName</code> returned by {@link
MBeanRegistration#preRegister MBeanRegistration.preRegister}.</p>

<li><p>For the <code>createMBean</code> methods, the caller's
permissions must imply the permissions needed by the equivalent
<code>instantiate</code> followed by
<code>registerMBean</code>.</p>

<li><p>For the {@link #unregisterMBean unregisterMBean} method,
the caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(className, null, name, \"unregisterMBean\")}.</p>

</ul>

@since 1.5

 DELETED:

<li><p>For the {@link #isRegistered isRegistered} method, the
caller's permissions must imply {@link
MBeanPermission#MBeanPermission(String,String,ObjectName,String)
MBeanPermission(null, null, name, \"isRegistered\")}.</p>"
      classrelation 873755 // <generalisation>
	relation 873755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 873755 // <generalisation>
	  b parent class_ref 510619 // MBeanServerConnection
      end

      operation 3178651 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 5
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates and registers an MBean in the MBean server.  The
MBean server will use its {@link
javax.management.loading.ClassLoaderRepository Default Loader
Repository} to load the class of the MBean.  An object name is
associated to the MBean.	 If the object name given is null, the
MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.</p>

<p>This method is equivalent to {@link
#createMBean(String,ObjectName,Object[],String[])
createMBean(className, name, (Object[]) null, (String[])
null)}.</p>

@param className The class name of the MBean to be instantiated.	   
@param name The object name of the MBean. May be null.	 

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE><CODE>java.lang.Exception</CODE></CODE> that occurred
when trying to invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean."
      end

      operation 3178779 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates and registers an MBean in the MBean server.  The
class loader to be used is identified by its object name. An
object name is associated to the MBean. If the object name of
the loader is null, the ClassLoader that loaded the MBean
server will be used.  If the MBean's object name given is null,
the MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.</p>

<p>This method is equivalent to {@link
#createMBean(String,ObjectName,ObjectName,Object[],String[])
createMBean(className, name, loaderName, (Object[]) null,
(String[]) null)}.</p>

@param className The class name of the MBean to be instantiated.	   
@param name The object name of the MBean. May be null.	 
@param loaderName The object name of the class loader to be used.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean."
      end

      operation 3178907 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 4
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 5
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates and registers an MBean in the MBean server.  The
MBean server will use its {@link
javax.management.loading.ClassLoaderRepository Default Loader
Repository} to load the class of the MBean.  An object name is
associated to the MBean.  If the object name given is null, the
MBean must provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean."
      end

      operation 3179035 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 5
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates and registers an MBean in the MBean server.  The
class loader to be used is identified by its object name. An
object name is associated to the MBean. If the object name of
the loader is not specified, the ClassLoader that loaded the
MBean server will be used.  If the MBean object name given is
null, the MBean must provide its own name by implementing the
{@link javax.management.MBeanRegistration MBeanRegistration}
interface and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.
@param loaderName The object name of the class loader to be used.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or a
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the MBean's constructor.
@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception MBeanException The constructor of the MBean has
thrown an exception
@exception NotCompliantMBeanException This class is not a JMX
compliant MBean
@exception InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null, the <CODE>ObjectName</CODE> passed
in parameter contains a pattern or no <CODE>ObjectName</CODE>
is specified for the MBean.
"
      end

      operation 3179163 "registerMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param inout name "object" explicit_type "Object"
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 3
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511515 // NotCompliantMBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a pre-existing object as an MBean with the MBean
server. If the object name given is null, the MBean must
provide its own name by implementing the {@link
javax.management.MBeanRegistration MBeanRegistration} interface
and returning the name from the {@link
MBeanRegistration#preRegister preRegister} method.

@param object The  MBean to be registered as an MBean.	  
@param name The object name of the MBean. May be null.

@return An <CODE>ObjectInstance</CODE>, containing the
<CODE>ObjectName</CODE> and the Java class name of the newly
registered MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@exception InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@exception MBeanRegistrationException The
<CODE>preRegister</CODE> (<CODE>MBeanRegistration</CODE>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@exception NotCompliantMBeanException This object is not a JMX
compliant MBean
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
passed in parameter is null or no object name is specified."
      end

      operation 3179291 "unregisterMBean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511259 // MBeanRegistrationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters an MBean from the MBean server. The MBean is
identified by its object name. Once the method has been
invoked, the MBean may no longer be accessed by its object
name.

@param name The object name of the MBean to be unregistered.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception MBeanRegistrationException The preDeregister
((<CODE>MBeanRegistration</CODE> interface) method of the MBean
has thrown an exception.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the MBean you are when trying to
unregister is the {@link javax.management.MBeanServerDelegate
MBeanServerDelegate} MBean.
"
      end

      operation 3179419 "getObjectInstance"
	public return_type class_ref 510747 // ObjectInstance
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <CODE>ObjectInstance</CODE> for a given MBean
registered with the MBean server.

@param name The object name of the MBean.

@return The <CODE>ObjectInstance</CODE> associated with the MBean
specified by <VAR>name</VAR>.  The contained <code>ObjectName</code>
is <code>name</code> and the contained class name is
<code>{@link #getMBeanInfo getMBeanInfo(name)}.getClassName()</code>.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server."
      end

      operation 3179547 "queryMBeans"
	public return_type class_ref 136731 // Set
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 511771 // QueryExp
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets MBeans controlled by the MBean server. This method allows
any of the following to be obtained: All MBeans, a set of
MBeans specified by pattern matching on the
<CODE>ObjectName</CODE> and/or a Query expression, a specific
MBean. When the object name is null or no domain and key
properties are specified, all objects are to be selected (and
filtered if a query is specified). It returns the set of
<CODE>ObjectInstance</CODE> objects (containing the
<CODE>ObjectName</CODE> and the Java Class name) for the
selected MBeans.

@param name The object name pattern identifying the MBeans to
be retrieved. If null or no domain and key properties are
specified, all the MBeans registered will be retrieved.
@param query The query expression to be applied for selecting
MBeans. If null no query expression will be applied for
selecting MBeans.

@return A set containing the <CODE>ObjectInstance</CODE>
objects for the selected MBeans.  If no MBean satisfies the
query an empty set is returned."
      end

      operation 3179675 "queryNames"
	public return_type class_ref 136731 // Set
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 511771 // QueryExp
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the names of MBeans controlled by the MBean server. This
method enables any of the following to be obtained: The names
of all MBeans, the names of a set of MBeans specified by
pattern matching on the <CODE>ObjectName</CODE> and/or a Query
expression, a specific MBean name (equivalent to testing
whether an MBean is registered). When the object name is null
or no domain and key properties are specified, all objects are
selected (and filtered if a query is specified). It returns the
set of ObjectNames for the MBeans selected.

@param name The object name pattern identifying the MBean names
to be retrieved. If null or no domain and key properties are
specified, the name of all registered MBeans will be retrieved.
@param query The query expression to be applied for selecting
MBeans. If null no query expression will be applied for
selecting MBeans.

@return A set containing the ObjectNames for the MBeans
selected.  If no MBean satisfies the query, an empty set is
returned."
      end

      operation 3179803 "isRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether an MBean, identified by its object name, is
already registered with the MBean server.

@param name The object name of the MBean to be checked.

@return True if the MBean is already registered in the MBean
server, false otherwise.

@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null."
      end

      operation 3179931 "getMBeanCount"
	public return_type class_ref 170395 // Integer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of MBeans registered in the MBean server.

@return the number of registered MBeans, wrapped in an Integer.
If the caller's permissions are restricted, this number may
be greater than the number of MBeans the caller can access."
      end

      operation 3180059 "getAttribute"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attribute" explicit_type "String"
	nexceptions 4
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a specific attribute of a named MBean. The MBean
is identified by its object name.

@param name The object name of the MBean from which the
attribute is to be retrieved.
@param attribute A String specifying the name of the attribute
to be retrieved.

@return	The value of the retrieved attribute.

@exception AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@exception MBeanException Wraps an exception thrown by the
MBean's getter.
@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown when trying to invoke
the setter.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the attribute in parameter is
null.

@see #setAttribute"
      end

      operation 3180187 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attributes" explicit_type "String"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the values of several attributes of a named MBean. The MBean
is identified by its object name.

@param name The object name of the MBean from which the
attributes are retrieved.
@param attributes A list of the attributes to be retrieved.

@return The list of the retrieved attributes.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@exception RuntimeOperationsException Wrap a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or attributes in parameter is null.

@see #setAttributes"
      end

      operation 3180315 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attribute" type class_ref 512155 // Attribute
	nexceptions 5
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of a specific attribute of a named MBean. The MBean
is identified by its object name.

@param name The name of the MBean within which the attribute is
to be set.
@param attribute The identification of the attribute to be set
and the value it is to be set to.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@exception InvalidAttributeValueException The value specified
for the attribute is not valid.
@exception MBeanException Wraps an exception thrown by the
MBean's setter.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown when trying to invoke
the setter.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or the attribute in parameter is
null.

@see #getAttribute"
      end

      operation 3180443 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attributes" type class_ref 512027 // AttributeList
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values of several attributes of a named MBean. The MBean is
identified by its object name.

@param name The object name of the MBean within which the
attributes are to be set.
@param attributes A list of attributes: The identification of
the attributes to be set and the values they are to be set to.

@return The list of attributes that were set, with their new
values.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception ReflectionException An exception occurred when
trying to invoke the setAttributes method of a Dynamic MBean.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The object
name in parameter is null or attributes in parameter is null.

@see #getAttributes"
      end

      operation 3180571 "invoke"
	public explicit_return_type "Object"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "operationName" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes an operation on an MBean.

@param name The object name of the MBean on which the method is
to be invoked.
@param operationName The name of the operation to be invoked.
@param params An array containing the parameters to be set when
the operation is invoked
@param signature An array containing the signature of the
operation. The class objects will be loaded using the same
class loader as the one used for loading the MBean on which the
operation was invoked.

@return The object returned by the operation, which represents
the result of invoking the operation on the MBean specified.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@exception MBeanException Wraps an exception thrown by the
MBean's invoked method.
@exception ReflectionException Wraps a
<CODE>java.lang.Exception</CODE> thrown while trying to invoke
the method."
      end

      operation 3180699 "getDefaultDomain"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default domain used for naming the MBean.
The default domain name is used as the domain part in the ObjectName
of MBeans if no domain is specified by the user.

@return the default domain."
      end

      operation 3180827 "getDomains"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the list of domains in which any MBean is currently
registered.  A string is in the returned array if and only if
there is at least one MBean registered with an ObjectName whose
{@link ObjectName#getDomain() getDomain()} is equal to that
string.  The order of strings within the returned array is
not defined.</p>

@return the list of domains.

@since.unbundled JMX 1.2"
      end

      operation 3180955 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Adds a listener to a registered MBean.</p>

<P> A notification emitted by the MBean will be forwarded by the
MBeanServer to the listener.  If the source of the notification
is a reference to the MBean object, the MBean server will replace it
by the MBean's ObjectName.  Otherwise the source is unchanged.

@param name The name of the MBean on which the listener should
be added.
@param listener The listener object which will handle the
notifications emitted by the registered MBean.
@param filter The filter object. If filter is null, no
filtering will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.

@see #removeNotificationListener(ObjectName, NotificationListener)
@see #removeNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)"
      end

      operation 3181083 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Adds a listener to a registered MBean.</p>

<P> A notification emitted by the MBean will be forwarded by the
MBeanServer to the listener.  If the source of the notification
is a reference to the MBean object, the MBean server will replace it
by the MBean's ObjectName.  Otherwise the source is unchanged.

<p>The listener object that receives notifications is the one
that is registered with the given name at the time this method
is called.  Even if it is subsequently unregistered, it will
continue to receive notifications.</p>

@param name The name of the MBean on which the listener should
be added.
@param listener The object name of the listener which will
handle the notifications emitted by the registered MBean.
@param filter The filter object. If filter is null, no
filtering will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted.

@exception InstanceNotFoundException The MBean name of the
notification listener or of the notification broadcaster does
not match any of the registered MBeans.
@exception RuntimeOperationsException Wraps an {@link
IllegalArgumentException}.  The MBean named by
<code>listener</code> exists but does not implement the {@link
NotificationListener} interface.

@see #removeNotificationListener(ObjectName, ObjectName)
@see #removeNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)"
      end

      operation 3181211 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from a registered MBean.

<P> If the listener is registered more than once, perhaps with
different filters or callbacks, this method will remove all
those registrations.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean.

@see #addNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)"
      end

      operation 3181339 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<p>The MBean must have a listener that exactly matches the
given <code>listener</code>, <code>filter</code>, and
<code>handback</code> parameters.  If there is more than one
such listener, only one is removed.</p>

<p>The <code>filter</code> and <code>handback</code> parameters
may be null if and only if they are null in a listener to be
removed.</p>

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added.
@param handback The handback that was specified when the
listener was added.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.

@see #addNotificationListener(ObjectName, ObjectName,
NotificationFilter, Object)

@since.unbundled JMX 1.2"
      end

      operation 3181467 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<P> If the listener is registered more than once, perhaps with
different filters or callbacks, this method will remove all
those registrations.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean.

@see #addNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)"
      end

      operation 3181595 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from a registered MBean.</p>

<p>The MBean must have a listener that exactly matches the
given <code>listener</code>, <code>filter</code>, and
<code>handback</code> parameters.  If there is more than one
such listener, only one is removed.</p>

<p>The <code>filter</code> and <code>handback</code> parameters
may be null if and only if they are null in a listener to be
removed.</p>

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added.
@param handback The handback that was specified when the
listener was added.

@exception InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@exception ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.

@see #addNotificationListener(ObjectName, NotificationListener,
NotificationFilter, Object)

@since.unbundled JMX 1.2"
      end

      operation 3181723 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512923 // IntrospectionException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method discovers the attributes and operations that an
MBean exposes for management.

@param name The name of the MBean to analyze

@return An instance of <CODE>MBeanInfo</CODE> allowing the
retrieval of all attributes and operations of this MBean.

@exception IntrospectionException An exception occurred during
introspection.
@exception InstanceNotFoundException The MBean specified was
not found.
@exception ReflectionException An exception occurred when
trying to invoke the getMBeanInfo of a Dynamic MBean."
      end

      operation 3181851 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if the MBean specified is an instance of the
specified class, false otherwise.</p>

<p>If <code>name</code> does not name an MBean, this method
throws {@link InstanceNotFoundException}.</p>

<p>Otherwise, let<br>
X be the MBean named by <code>name</code>,<br>
L be the ClassLoader of X,<br>
N be the class name in X's {@link MBeanInfo}.</p>

<p>If N equals <code>className</code>, the result is true.</p>

<p>Otherwise, if L successfully loads both N and
<code>className</code>, and the second class is assignable from
the first, the result is true.</p>

<p>Otherwise, the result is false.</p>

@param name The <CODE>ObjectName</CODE> of the MBean.
@param className The name of the class.

@return true if the MBean specified is an instance of the
specified class according to the rules above, false otherwise.

@exception InstanceNotFoundException The MBean specified is not
registered in the MBean server.

@see Class#isAssignableFrom(Class)"
      end

      operation 3181979 "instantiate"
	public explicit_return_type "Object"
	nparams 1
	  param in name "className" explicit_type "String"
	nexceptions 2
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511387 // MBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates an object using the list of all class loaders
registered in the MBean server's {@link
javax.management.loading.ClassLoaderRepository Class Loader
Repository}.  The object's class should have a public
constructor.  This method returns a reference to the newly
created object.	The newly created object is not registered in
the MBean server.</p>

<p>This method is equivalent to {@link
#instantiate(String,Object[],String[])
instantiate(className, (Object[]) null, (String[]) null)}.</p>

@param className The class name of the object to be instantiated.    

@return The newly instantiated object.	 

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or the
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the object's constructor.
@exception MBeanException The constructor of the object has
thrown an exception
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null."
      end

      operation 3182107 "instantiate"
	public explicit_return_type "Object"
	nparams 2
	  param in name "className" explicit_type "String"
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	nexceptions 3
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates an object using the class Loader specified by its
<CODE>ObjectName</CODE>.	 If the loader name is null, the
ClassLoader that loaded the MBean Server will be used.  The
object's class should have a public constructor.	 This method
returns a reference to the newly created object.	 The newly
created object is not registered in the MBean server.</p>

<p>This method is equivalent to {@link
#instantiate(String,ObjectName,Object[],String[])
instantiate(className, loaderName, (Object[]) null, (String[])
null)}.</p>

@param className The class name of the MBean to be instantiated.	   
@param loaderName The object name of the class loader to be used.

@return The newly instantiated object.	 

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or the
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the object's constructor.
@exception MBeanException The constructor of the object has
thrown an exception.
@exception InstanceNotFoundException The specified class loader
is not registered in the MBeanServer.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null."
      end

      operation 3182235 "instantiate"
	public explicit_return_type "Object"
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 2
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511387 // MBeanException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates an object using the list of all class loaders
registered in the MBean server {@link
javax.management.loading.ClassLoaderRepository Class Loader
Repository}.  The object's class should have a public
constructor.  The call returns a reference to the newly created
object.	The newly created object is not registered in the
MBean server.</p>

@param className The class name of the object to be instantiated.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.

@return The newly instantiated object.	 

@exception ReflectionException Wraps a
<CODE>java.lang.ClassNotFoundException</CODE> or the
<CODE>java.lang.Exception</CODE> that occurred when trying to
invoke the object's constructor.
@exception MBeanException The constructor of the object has
thrown an exception
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null."
      end

      operation 3182363 "instantiate"
	public explicit_return_type "Object"
	nparams 4
	  param in name "className" explicit_type "String"
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 3
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Instantiates an object. The class loader to be used is
identified by its object name. If the object name of the loader
is null, the ClassLoader that loaded the MBean server will be
used.  The object's class should have a public constructor.
The call returns a reference to the newly created object.  The
newly created object is not registered in the MBean server.</p>

@param className The class name of the object to be instantiated.
@param params An array containing the parameters of the
constructor to be invoked.
@param signature An array containing the signature of the
constructor to be invoked.
@param loaderName The object name of the class loader to be used.

@return The newly instantiated object.	 

@exception ReflectionException Wraps a <CODE>java.lang.ClassNotFoundException</CODE> or the <CODE>java.lang.Exception</CODE> that 
occurred when trying to invoke the object's constructor.	 
@exception MBeanException The constructor of the object has
thrown an exception
@exception InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@exception RuntimeOperationsException Wraps a
<CODE>java.lang.IllegalArgumentException</CODE>: The className
passed in parameter is null."
      end

      operation 3182491 "deserialize"
	public return_type class_ref 201115 // ObjectInputStream
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "data" explicit_type "byte"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 515483 // OperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>De-serializes a byte array in the context of the class loader 
of an MBean.</p>

@param name The name of the MBean whose class loader should be
used for the de-serialization.
@param data The byte array to be de-sererialized.

@return The de-serialized object stream.

@exception InstanceNotFoundException The MBean specified is not
found.
@exception OperationsException Any of the usual Input/Output
related exceptions.

@deprecated Use {@link #getClassLoaderFor getClassLoaderFor} to
obtain the appropriate class loader for deserialization."
      end

      operation 3182619 "deserialize"
	public return_type class_ref 201115 // ObjectInputStream
	nparams 2
	  param in name "className" explicit_type "String"
	  param in name "data" explicit_type "byte"
	nexceptions 2
	  exception class_ref 515483 // OperationsException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>De-serializes a byte array in the context of a given MBean
class loader.  The class loader is found by loading the class
<code>className</code> through the {@link
javax.management.loading.ClassLoaderRepository Class Loader
Repository}.  The resultant class's class loader is the one to
use.

@param className The name of the class whose class loader should be
used for the de-serialization.
@param data The byte array to be de-sererialized.

@return  The de-serialized object stream.

@exception OperationsException Any of the usual Input/Output
related exceptions.
@exception ReflectionException The specified class could not be
loaded by the class loader repository

@deprecated Use {@link #getClassLoaderRepository} to obtain the
class loader repository and use it to deserialize."
      end

      operation 3182747 "deserialize"
	public return_type class_ref 201115 // ObjectInputStream
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param in name "data" explicit_type "byte"
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 515483 // OperationsException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "<p>De-serializes a byte array in the context of a given MBean
class loader.  The class loader is the one that loaded the
class with name \"className\".  The name of the class loader to
be used for loading the specified class is specified.  If null,
the MBean Server's class loader will be used.</p>

@param className The name of the class whose class loader should be
used for the de-serialization.
@param data The byte array to be de-sererialized.
@param loaderName The name of the class loader to be used for
loading the specified class.  If null, the MBean Server's class
loader will be used.

@return  The de-serialized object stream.

@exception InstanceNotFoundException The specified class loader
MBean is not found.
@exception OperationsException Any of the usual Input/Output
related exceptions.
@exception ReflectionException The specified class could not be
loaded by the specified class loader.

@deprecated Use {@link #getClassLoader getClassLoader} to obtain
the class loader for deserialization."
      end

      operation 3182875 "getClassLoaderFor"
	public return_type class_ref 163611 // ClassLoader
	nparams 1
	  param inout name "mbeanName" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the {@link java.lang.ClassLoader} that was used for
loading the class of the named MBean.</p>

@param mbeanName The ObjectName of the MBean.

@return The ClassLoader used for that MBean.  If <var>l</var>
is the MBean's actual ClassLoader, and <var>r</var> is the
returned value, then either:

<ul>
<li><var>r</var> is identical to <var>l</var>; or
<li>the result of <var>r</var>{@link
ClassLoader#loadClass(String) .loadClass(<var>s</var>)} is the
same as <var>l</var>{@link ClassLoader#loadClass(String)
.loadClass(<var>s</var>)} for any string <var>s</var>.
</ul>

What this means is that the ClassLoader may be wrapped in
another ClassLoader for security or other reasons.

@exception InstanceNotFoundException if the named MBean is not found.

@since.unbundled JMX 1.2"
      end

      operation 3183003 "getClassLoader"
	public return_type class_ref 163611 // ClassLoader
	nparams 1
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the named {@link java.lang.ClassLoader}.</p>

@param loaderName The ObjectName of the ClassLoader.  May be
null, in which case the MBean server's own ClassLoader is
returned.

@return The named ClassLoader.  If <var>l</var> is the actual
ClassLoader with that name, and <var>r</var> is the returned
value, then either:

<ul>
<li><var>r</var> is identical to <var>l</var>; or
<li>the result of <var>r</var>{@link
ClassLoader#loadClass(String) .loadClass(<var>s</var>)} is the
same as <var>l</var>{@link ClassLoader#loadClass(String)
.loadClass(<var>s</var>)} for any string <var>s</var>.
</ul>

What this means is that the ClassLoader may be wrapped in
another ClassLoader for security or other reasons.

@exception InstanceNotFoundException if the named ClassLoader is 
   not found.

@since.unbundled JMX 1.2"
      end

      operation 3183131 "getClassLoaderRepository"
	public return_type class_ref 514331 // ClassLoaderRepository
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the ClassLoaderRepository for this MBeanServer.
@return The ClassLoaderRepository for this MBeanServer.

@since.unbundled JMX 1.2"
      end
    end

    class 513307 "MBeanServerDelegate"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents  the MBean server from the management point of view.
The MBeanServerDelegate MBean emits the MBeanServerNotifications when 
an MBean is registered/unregistered in the MBean server. 

@since 1.5"
      classrelation 875419 // <realization>
	relation 875419 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 875419 // <realization>
	  b parent class_ref 516251 // MBeanServerDelegateMBean
      end

      classrelation 875675 // <realization>
	relation 875675 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 875675 // <realization>
	  b parent class_ref 516379 // NotificationEmitter
      end

      attribute 915355 "mbeanServerId"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The MBean server agent identification."
      end

      classrelation 875803 // broadcaster (<unidirectional association>)
	relation 875803 --->
	  a role_name "broadcaster" const_relation private
	    comment " The NotificationBroadcasterSupport object that sends the 
notifications 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 875803 // broadcaster (<unidirectional association>)
	  b parent class_ref 516763 // NotificationBroadcasterSupport
      end

      attribute 915483 "oldStamp"
	class_attribute private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 915611 "stamp"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 915739 "sequenceNumber"
	private explicit_type "long"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 875931 // notifsInfo (<unidirectional association>)
	relation 875931 --->
	  a role_name "notifsInfo" multiplicity "[]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 875931 // notifsInfo (<unidirectional association>)
	  b parent class_ref 516635 // MBeanNotificationInfo
      end

      extra_member 142747 "initialization"
	
	cpp "" ""
	java "  static {
        final String[] types  = { 
	    MBeanServerNotification.UNREGISTRATION_NOTIFICATION,
	    MBeanServerNotification.REGISTRATION_NOTIFICATION
	};
	notifsInfo = new MBeanNotificationInfo[1];
	notifsInfo[0] = 
	    new MBeanNotificationInfo(types,
		    \"javax.management.MBeanServerNotification\",
		    \"Notifications sent by the MBeanServerDelegate MBean\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 3198363 "MBeanServerDelegate"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a MBeanServerDelegate object."
      end

      operation 3198491 "getMBeanServerId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MBean server agent identity.

@return the identity."
      end

      operation 3198619 "getSpecificationName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the full name of the JMX specification implemented
by this product.      

@return the specification name."
      end

      operation 3198747 "getSpecificationVersion"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of the JMX specification implemented
by this product.

@return the specification version."
      end

      operation 3198875 "getSpecificationVendor"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vendor of the JMX specification implemented
by this product.      

@return the specification vendor."
      end

      operation 3199003 "getImplementationName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation name (the name of this product).     

@return the implementation name."
      end

      operation 3199131 "getImplementationVersion"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation version (the version of this product).

@return the implementation version."
      end

      operation 3199259 "getImplementationVendor"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation vendor (the vendor of this product).     

@return the implementation vendor."
      end

      operation 3199387 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " From NotificationEmitter extends NotificationBroacaster"
      end

      operation 3199515 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " From NotificationEmitter extends NotificationBroacaster"
      end

      operation 3199643 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " From NotificationEmitter extends NotificationBroacaster"
      end

      operation 3199771 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " From NotificationEmitter extends NotificationBroacaster"
      end

      operation 3199899 "sendNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "notification" type class_ref 513819 // Notification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the MBean server to send a notification.
If the passed <var>notification</var> has a sequence number lesser
or equal to 0, then replace it with the delegate's own sequence 
number.
@param notification The notification to send.
"
      end

      operation 3200027 "getStamp"
	class_operation private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a timestamp that is monotonically increasing even if
System.currentTimeMillis() isn't (for example, if you call this
constructor more than once in the same millisecond, or if the
clock always returns the same value).  This means that the ids
for a given JVM will always be distinact, though there is no
such guarantee for two different JVMs.  "
      end
    end

    class 513819 "Notification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>The Notification class represents a notification emitted by an
MBean.  It contains a reference to the source MBean: if the
notification has been forwarded through the MBean server, and the
original source of the notification was a reference to the emitting
MBean object, then the MBean server replaces it by the MBean's
ObjectName.  If the listener has registered directly with the
MBean, this is either the object name or a direct reference to the
MBean.</p>

<p>It is strongly recommended that notification senders use the
object name rather than a reference to the MBean object as the
source.</p>

@since 1.5"
      classrelation 916891 // <generalisation>
	relation 916891 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 916891 // <generalisation>
	  b parent class_ref 147355 // EventObject
      end

      attribute 970267 "oldSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1716977971058914352L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serialization compatibility stuff:
 Two serial forms are supported in this class. The selected form depends
 on system property \"jmx.serial.form\":
  - \"1.0\" for JMX 1.0
  - any other value for JMX 1.1 and higher

 Serial version for old serial form "
      end

      attribute 970395 "newSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7516092053498031989L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version for new serial form "
      end

      classrelation 917019 // oldSerialPersistentFields (<unidirectional association>)
	relation 917019 --->
	  a role_name "oldSerialPersistentFields" multiplicity "[]" init_value "=  
    {
	new ObjectStreamField(\"message\", String.class),
        new ObjectStreamField(\"sequenceNumber\", Long.TYPE),
        new ObjectStreamField(\"source\", Object.class),
        new ObjectStreamField(\"sourceObjectName\", ObjectName.class),
        new ObjectStreamField(\"timeStamp\", Long.TYPE),
        new ObjectStreamField(\"type\", String.class),
        new ObjectStreamField(\"userData\", Object.class)
    }" class_relation const_relation private
	    comment " Serializable fields in old serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 917019 // oldSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      classrelation 917147 // newSerialPersistentFields (<unidirectional association>)
	relation 917147 --->
	  a role_name "newSerialPersistentFields" multiplicity "[]" init_value "=  
    {
	new ObjectStreamField(\"message\", String.class),
        new ObjectStreamField(\"sequenceNumber\", Long.TYPE),
        new ObjectStreamField(\"source\", Object.class),
        new ObjectStreamField(\"timeStamp\", Long.TYPE),
        new ObjectStreamField(\"type\", String.class),
        new ObjectStreamField(\"userData\", Object.class)
    }" class_relation const_relation private
	    comment " Serializable fields in new serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 917147 // newSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 970523 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actual serial version and serial form"
      end

      classrelation 917275 // serialPersistentFields (<unidirectional association>)
	relation 917275 --->
	  a role_name "serialPersistentFields" multiplicity "[]" class_relation const_relation private
	    comment "
@serialField type String The notification type. 
             A string expressed in a dot notation similar to Java properties.
             An example of a notification type is network.alarm.router
@serialField sequenceNumber long The notification sequence number. 
             A serial number which identify particular instance
             of notification in the context of the notification source.
@serialField timeStamp long The notification timestamp. 
             Indicating when the notification was generated
@serialField userData Object The notification user data.  
             Used for whatever other data the notification
             source wishes to communicate to its consumers
@serialField message String The notification message.
@serialField source Object The object on which the notification initially occurred.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 917275 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 970651 "compat"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 144027 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    PrivilegedAction act = new GetPropertyAction(\"jmx.serial.form\");
	    String form = (String) AccessController.doPrivileged(act);
	    compat = (form != null && form.equals(\"1.0\"));
	} catch (Exception e) {
	    // OK: exception means no compat with 1.0, too bad
	}
	if (compat) {
	    serialPersistentFields = oldSerialPersistentFields;
	    serialVersionUID = oldSerialVersionUID;
	} else {
	    serialPersistentFields = newSerialPersistentFields;
	    serialVersionUID = newSerialVersionUID;
	}
    }"
	php ""
	python ""
	idl ""
      end

      attribute 970779 "type"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " END Serialization compatibility stuff

@serial The notification type. 
        A string expressed in a dot notation similar to Java properties.
        An example of a notification type is network.alarm.router
"
      end

      attribute 970907 "sequenceNumber"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The notification sequence number. 
        A serial number which identify particular instance
        of notification in the context of the notification source.
"
      end

      attribute 971035 "timeStamp"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The notification timestamp. 
        Indicating when the notification was generated
"
      end

      attribute 971163 "userData"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The notification user data.  
        Used for whatever other data the notification
        source wishes to communicate to its consumers
"
      end

      attribute 971291 "message"
	private explicit_type "String"
	init_value "=  \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The notification message.
"
      end

      attribute 971419 "source"
	protected explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>This field hides the {@link EventObject#source} field in the
parent class to make it non-transient and therefore part of the
serialized form.</p>

@serial The object on which the notification initially occurred.
"
      end

      operation 3396635 "Notification"
	public explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Notification object.
The notification timeStamp is set to the current date.

@param type The notification type.   
@param source The notification source.    
@param sequenceNumber The notification sequence number within the source object.
"
      end

      operation 3396763 "Notification"
	public explicit_return_type ""
	nparams 4
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Notification object.
The notification timeStamp is set to the current date.

@param type The notification type.    
@param source The notification source.    
@param sequenceNumber The notification sequence number within the source object.    
@param message The detailed message.
"
      end

      operation 3396891 "Notification"
	public explicit_return_type ""
	nparams 4
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Notification object.

@param type The notification type.    
@param source The notification source.    
@param sequenceNumber The notification sequence number within the source object.    
@param timeStamp The notification emission date.
   "
      end

      operation 3397019 "Notification"
	public explicit_return_type ""
	nparams 5
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Notification object.

@param type The notification type.    
@param source The notification source.    
@param sequenceNumber The notification sequence number within the source object.    
@param timeStamp The notification emission date.     
@param message The detailed message.
"
      end

      operation 3397147 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source.

@param source the new source for this object.

@see EventObject#getSource"
      end

      operation 3397275 "getSequenceNumber"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the notification sequence number.

@return The notification sequence number within the source object. It's a serial number
identifying a particular instance of notification in the context of the notification source.
The notification model does not assume that notifications will be received in the same order
that they are sent. The sequence number helps listeners to sort received notifications.

@see #setSequenceNumber"
      end

      operation 3397403 "setSequenceNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "sequenceNumber" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the notification sequence number.

@param sequenceNumber The notification sequence number within the source object. It is
a serial number identifying a particular instance of notification in the
context of the notification source.

@see #getSequenceNumber"
      end

      operation 3397531 "getType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the notification type.

@return The notification type. It's a string expressed in a dot notation similar
to Java properties. An example of a notification type is network.alarm.router ."
      end

      operation 3397659 "getTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the notification timestamp.

@return The notification timestamp.

@see #setTimeStamp"
      end

      operation 3397787 "setTimeStamp"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeStamp" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the notification timestamp.

@param timeStamp The notification timestamp. It indicates when the notification was generated.

@see #getTimeStamp"
      end

      operation 3397915 "getMessage"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the notification message.

@return The message string of this notification object. It contains in a string,
which could be the explanation of the notification for displaying to a user
"
      end

      operation 3398043 "getUserData"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the user data.

@return The user data object. It is used for whatever data
the notification source wishes to communicate to its consumers.

@see #setUserData"
      end

      operation 3398171 "setUserData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "userData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the user data.

@param userData The user data object. It is used for whatever data
the notification source wishes to communicate to its consumers.

@see #getUserData"
      end

      operation 3398299 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String representation of this notification.

@return A String representation of this notification."
      end

      operation 3398427 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes a {@link Notification} from an {@link ObjectInputStream}."
      end

      operation 3398555 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes a {@link Notification} to an {@link ObjectOutputStream}."
      end
    end

    class 514971 "MBeanAttributeInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes an MBean attribute exposed for management.  Instances of
this class are immutable.  Subclasses may be mutable but this is
not recommended.

@since 1.5"
      classrelation 2027675 // <generalisation>
	relation 2027675 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2027675 // <generalisation>
	  b parent class_ref 1031067 // MBeanFeatureInfo
      end

      classrelation 2027803 // <realization>
	relation 2027803 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2027803 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2027931 // <realization>
	relation 2027931 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2027931 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3016987 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      extra_member 168859 "initialization"
	
	cpp "" ""
	java "  static {
	/* For complicated reasons, the serialVersionUID changed
	   between JMX 1.0 and JMX 1.1, even though JMX 1.1 did not
	   have compatibility code for this class.  So the
	   serialization produced by this class with JMX 1.2 and
	   jmx.serial.form=1.0 is not the same as that produced by
	   this class with JMX 1.1 and jmx.serial.form=1.0.  However,
	   the serialization without that property is the same, and
	   that is the only form required by JMX 1.2.
	*/
	long uid = 8644704819898565848L;
	try {
	    PrivilegedAction act = new GetPropertyAction(\"jmx.serial.form\");
	    String form = (String) AccessController.doPrivileged(act);
	    if (\"1.0\".equals(form))
		uid = 7043855487133450673L;
	} catch (Exception e) {
	    // OK: exception means no compat with 1.0, too bad
	}
	serialVersionUID = uid;
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 2028059 // NO_ATTRIBUTES (<unidirectional association>)
	relation 2028059 --->
	  a role_name "NO_ATTRIBUTES" multiplicity "[]" init_value "= 
	new MBeanAttributeInfo[0]" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2028059 // NO_ATTRIBUTES (<unidirectional association>)
	  b parent class_ref 514971 // MBeanAttributeInfo
      end

      attribute 3017115 "attributeType"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The actual attribute type.
"
      end

      attribute 3017243 "isWrite"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The attribute write right.
"
      end

      attribute 3017371 "isRead"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The attribute read right.
"
      end

      attribute 3017499 "is"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Indicates if this method is a \"is\"
"
      end

      operation 8234779 "MBeanAttributeInfo"
	public explicit_return_type ""
	nparams 6
	  param in name "name" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "isReadable" explicit_type "boolean"
	  param inout name "isWritable" explicit_type "boolean"
	  param inout name "isIs" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanAttributeInfo</CODE> object.

@param name The name of the attribute.
@param type The type or class name of the attribute.
@param description A human readable description of the attribute.
@param isReadable True if the attribute has a getter method, false otherwise.
@param isWritable True if the attribute has a setter method, false otherwise.
@param isIs True if this attribute has an \"is\" getter, false otherwise."
      end

      operation 8234907 "MBeanAttributeInfo"
	public explicit_return_type ""
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "getter" type class_ref 170651 // Method
	  param inout name "setter" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 512923 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple attribute, and Method
objects for reading and writing the attribute.

@param name The programmatic name of the attribute.
@param description A human readable description of the attribute.
@param getter The method used for reading the attribute value.
         May be null if the property is write-only.
@param setter The method used for writing the attribute value.
         May be null if the attribute is read-only.
@exception IntrospectionException There is a consistency
problem in the definition of this attribute."
      end

      operation 8235035 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a shallow clone of this instance.
The clone is obtained by simply calling <tt>super.clone()</tt>,
thus calling the default native shallow cloning mechanism
implemented by <tt>Object.clone()</tt>.
No deeper cloning of any internal field is made.</p>

<p>Since this class is immutable, cloning is chiefly of
interest to subclasses.</p>"
      end

      operation 8235163 "getType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class name of the attribute.

@return the class name."
      end

      operation 8235291 "isReadable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether the value of the attribute can be read.

@return True if the attribute can be read, false otherwise."
      end

      operation 8235419 "isWritable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether new values can be written to the attribute.

@return True if the attribute can be written to, false otherwise."
      end

      operation 8235547 "isIs"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if this attribute has an \"is\" getter.

@return true if this attribute has an \"is\" getter."
      end

      operation 8235675 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanAttributeInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanAttributeInfo such
that its {@link #getName()}, {@link #getType()}, {@link
#getDescription()}, {@link #isReadable()}, {@link
#isWritable()}, and {@link #isIs()} values are equal (not
necessarily identical) to those of this MBeanAttributeInfo."
      end

      operation 8235803 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We do not include everything in the hashcode.  We assume that
if two operations are different they'll probably have different
names or types.  The penalty we pay when this assumption is
wrong should be less than the penalty we would pay if it were
right and we needlessly hashed in the description and parameter
array.  "
      end

      operation 8235931 "isIs"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "getter" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8236059 "attributeType"
	class_operation private explicit_return_type "String"
	nparams 2
	  param inout name "getter" type class_ref 170651 // Method
	  param inout name "setter" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 512923 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the type of the attribute."
      end
    end

    class 515099 "MBeanConstructorInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes a constructor exposed by an MBean.  Instances of this
class are immutable.  Subclasses may be mutable but this is not
recommended.

@since 1.5"
      classrelation 2028187 // <generalisation>
	relation 2028187 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2028187 // <generalisation>
	  b parent class_ref 1031067 // MBeanFeatureInfo
      end

      classrelation 2028315 // <realization>
	relation 2028315 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2028315 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2028443 // <realization>
	relation 2028443 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2028443 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3017627 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  4433990064191844427L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2028571 // NO_CONSTRUCTORS (<unidirectional association>)
	relation 2028571 --->
	  a role_name "NO_CONSTRUCTORS" multiplicity "[]" init_value "= 
	new MBeanConstructorInfo[0]" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2028571 // NO_CONSTRUCTORS (<unidirectional association>)
	  b parent class_ref 515099 // MBeanConstructorInfo
      end

      attribute 3017755 "immutable"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @see MBeanInfo#immutable "
      end

      classrelation 2028699 // signature (<unidirectional association>)
	relation 2028699 --->
	  a role_name "signature" multiplicity "[]" const_relation private
	    comment "
@serial The signature of the method, that is, the class names of the arguments.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2028699 // signature (<unidirectional association>)
	  b parent class_ref 1031195 // MBeanParameterInfo
      end

      operation 8236187 "MBeanConstructorInfo"
	public explicit_return_type ""
	nparams 2
	  param in name "description" explicit_type "String"
	  param inout name "constructor" type class_ref 218395 // Constructor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanConstructorInfo</CODE> object.

@param description A human readable description of the operation.
@param constructor The <CODE>java.lang.reflect.Constructor</CODE>
object describing the MBean constructor."
      end

      operation 8236315 "MBeanConstructorInfo"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "signature" type class_ref 1031195 // MBeanParameterInfo
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanConstructorInfo</CODE> object.

@param name The name of the constructor.
@param signature <CODE>MBeanParameterInfo</CODE> objects
describing the parameters(arguments) of the constructor.  This
may be null with the same effect as a zero-length array.
@param description A human readable description of the constructor."
      end

      operation 8236443 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a shallow clone of this instance.  The clone is
obtained by simply calling <tt>super.clone()</tt>, thus calling
the default native shallow cloning mechanism implemented by
<tt>Object.clone()</tt>.  No deeper cloning of any internal
field is made.</p>

<p>Since this class is immutable, cloning is chiefly of
interest to subclasses.</p>"
      end

      operation 8236571 "getSignature"
	public return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the list of parameters for this constructor.  Each
parameter is described by an <CODE>MBeanParameterInfo</CODE>
object.</p>

<p>The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanParameterInfo</CODE> objects but
that each referenced <CODE>MBeanParameterInfo</CODE> object is
not copied.</p>

@return  An array of <CODE>MBeanParameterInfo</CODE> objects."
      end

      operation 8236699 "fastGetSignature"
	private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8236827 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanConstructorInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanConstructorInfo such
that its {@link #getName()}, {@link #getDescription()}, and
{@link #getSignature()} values are equal (not necessarily
identical) to those of this MBeanConstructorInfo.  Two
signature arrays are equal if their elements are pairwise
equal."
      end

      operation 8236955 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Unlike attributes and operations, it's quite likely we'll have
more than one constructor with the same name and even
description, so we include the parameter array in the hashcode.
We don't include the description, though, because it could be
quite long and yet the same between constructors.  "
      end

      operation 8237083 "constructorSignature"
	class_operation private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 1
	  param inout name "cn" type class_ref 218395 // Constructor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 515483 "OperationsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents exceptions thrown in the MBean server when performing operations
on MBeans.

@since 1.5"
      classrelation 2022427 // <generalisation>
	relation 2022427 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022427 // <generalisation>
	  b parent class_ref 1029147 // JMException
      end

      attribute 3012635 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4967597595580536216L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8222235 "OperationsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8222363 "OperationsException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 515867 "MBeanServerBuilder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This class represents a builder that creates a default 
{@link javax.management.MBeanServer} implementation. 
The JMX {@link javax.management.MBeanServerFactory} allows 
applications to provide their custom MBeanServer 
implementation by providing a subclass of this class.</p>

@see MBeanServer
@see MBeanServerFactory

@since 1.5
@since.unbundled JMX 1.2"
      operation 3191451 "MBeanServerBuilder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public default constructor."
      end

      operation 3191579 "newMBeanServerDelegate"
	public return_type class_ref 513307 // MBeanServerDelegate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method creates a new MBeanServerDelegate for a new MBeanServer.
When creating a new MBeanServer the 
{@link javax.management.MBeanServerFactory} first calls this method
in order to create a new MBeanServerDelegate.
<br>Then it calls 
<code>newMBeanServer(defaultDomain,outer,delegate)</code>
passing the <var>delegate</var> that should be used by the MBeanServer 
implementation.
<p>Note that the passed <var>delegate</var> might not be directly the 
MBeanServerDelegate that was returned by this method. It could
be, for instance, a new object wrapping the previously 
returned object.

@return A new {@link javax.management.MBeanServerDelegate}."
      end

      operation 3191707 "newMBeanServer"
	public return_type class_ref 513179 // MBeanServer
	nparams 3
	  param in name "defaultDomain" explicit_type "String"
	  param inout name "outer" type class_ref 513179 // MBeanServer
	  param inout name "delegate" type class_ref 513307 // MBeanServerDelegate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method creates a new MBeanServer implementation object.
When creating a new MBeanServer the 
{@link javax.management.MBeanServerFactory} first calls  
<code>newMBeanServerDelegate()</code> in order to obtain a new 
{@link javax.management.MBeanServerDelegate} for the new 
MBeanServer. Then it calls 
<code>newMBeanServer(defaultDomain,outer,delegate)</code>
passing the <var>delegate</var> that should be used by the MBeanServer 
implementation.
<p>Note that the passed <var>delegate</var> might not be directly the 
MBeanServerDelegate that was returned by this implementation. It could
be, for instance, a new object wrapping the previously 
returned delegate.
<p>The <var>outer</var> parameter is a pointer to the MBeanServer that
should be passed to the {@link javax.management.MBeanRegistration} 
interface when registering MBeans inside the MBeanServer.
If <var>outer</var> is <code>null</code>, then the MBeanServer 
implementation must use its own <code>this</code> reference when
invoking the {@link javax.management.MBeanRegistration} interface.
<p>This makes it possible for a MBeanServer implementation to wrap
another MBeanServer implementation, in order to implement, e.g,
security checks, or to prevent access to the actual MBeanServer
implementation by returning a pointer to a wrapping object.

@param defaultDomain Default domain of the new MBeanServer.
@param outer A pointer to the MBeanServer object that must be
       passed to the MBeans when invoking their
       {@link javax.management.MBeanRegistration} interface.
@param delegate A pointer to the MBeanServerDelegate associated
       with the new MBeanServer. The new MBeanServer must register
       this MBean in its MBean repository.

@return A new private implementation of an MBeanServer."
      end
    end

    class 516251 "MBeanServerDelegateMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the management interface  of an object of class MBeanServerDelegate.

@since 1.5"
      operation 3196955 "getMBeanServerId"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the MBean server agent identity.

@return the agent identity."
      end

      operation 3197083 "getSpecificationName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the full name of the JMX specification implemented
by this product.

@return the specification name."
      end

      operation 3197211 "getSpecificationVersion"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of the JMX specification implemented
by this product.

@return the specification version."
      end

      operation 3197339 "getSpecificationVendor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vendor of the JMX specification implemented
by this product.

@return the specification vendor."
      end

      operation 3197467 "getImplementationName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation name (the name of this product).

@return the implementation name."
      end

      operation 3197595 "getImplementationVersion"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation version (the version of this product).

@return the implementation version."
      end

      operation 3197723 "getImplementationVendor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the JMX implementation vendor (the vendor of this product).

@return the implementation vendor."
      end
    end

    class 516379 "NotificationEmitter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Interface implemented by an MBean that emits Notifications. It
allows a listener to be registered with the MBean as a notification
listener.</p>

<p>This interface should be used by new code in preference to the
{@link NotificationBroadcaster} interface.</p>

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 875547 // <generalisation>
	relation 875547 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 875547 // <generalisation>
	  b parent class_ref 516507 // NotificationBroadcaster
      end

      operation 3198235 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Removes a listener from this MBean.  The MBean must have a
listener that exactly matches the given <code>listener</code>,
<code>filter</code>, and <code>handback</code> parameters.  If
there is more than one such listener, only one is removed.</p>

<p>The <code>filter</code> and <code>handback</code> parameters
may be null if and only if they are null in a listener to be
removed.</p>

@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added.
@param handback The handback that was specified when the listener was
added.

@exception ListenerNotFoundException The listener is not
registered with the MBean, or it is not registered with the
given filter and handback."
      end
    end

    class 516507 "NotificationBroadcaster"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Interface implemented by an MBean that emits Notifications. It
allows a listener to be registered with the MBean as a notification
listener.</p>

<p>New code should use the {@link NotificationEmitter} interface
instead.</p>

@since 1.5"
      operation 3197851 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to this MBean.

@param listener The listener object which will handle the
notifications emitted by the broadcaster.
@param filter The filter object. If filter is null, no
filtering will be performed before handling notifications.
@param handback An opaque object to be sent back to the
listener when a notification is emitted. This object cannot be
used by the Notification broadcaster object. It should be
resent unchanged with the notification to the listener.

@exception IllegalArgumentException Listener parameter is null.

@see #removeNotificationListener"
      end

      operation 3197979 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from this MBean.  If the listener
has been registered with different handback objects or
notification filters, all entries corresponding to the listener
will be removed.

@param listener A listener that was previously added to this
MBean.

@exception ListenerNotFoundException The listener is not
registered with the MBean.

@see #addNotificationListener
@see NotificationEmitter#removeNotificationListener"
      end

      operation 3198107 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns an array indicating, for each notification this
MBean may send, the name of the Java class of the notification
and the notification type.</p>

<p>It is not illegal for the MBean to send notifications not
described in this array.  However, some clients of the MBean
server may depend on the array being complete for their correct
functioning.</p>

@return the array of possible notifications."
      end
    end

    class 516635 "MBeanNotificationInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>The <CODE>MBeanNotificationInfo</CODE> class is used to describe the 
characteristics of the different notification instances 
emitted by an MBean, for a given Java class of notification. 
If an MBean emits notifications that can be instances of different Java classes,
then the metadata for that MBean should provide an <CODE>MBeanNotificationInfo</CODE>
object for each of these notification Java classes.</p>

<p>Instances of this class are immutable.  Subclasses may be
mutable but this is not recommended.</p>

<p>This class extends <CODE>javax.management.MBeanFeatureInfo</CODE> 
and thus provides <CODE>name</CODE> and <CODE>description</CODE> fields.
The <CODE>name</CODE> field should be the fully qualified Java class name of
the notification objects described by this class.</p>

<p>The <CODE>getNotifTypes</CODE> method returns an array of
strings containing the notification types that the MBean may
emit. The notification type is a dot-notation string which
describes what the emitted notification is about, not the Java
class of the notification.  A single generic notification class can
be used to send notifications of several types.  All of these types
are returned in the string array result of the
<CODE>getNotifTypes</CODE> method.

@since 1.5"
      classrelation 2030363 // <generalisation>
	relation 2030363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2030363 // <generalisation>
	  b parent class_ref 1031067 // MBeanFeatureInfo
      end

      classrelation 2030491 // <realization>
	relation 2030491 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2030491 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 2030619 // <realization>
	relation 2030619 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2030619 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3018651 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -3888371564530107064L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3018779 "NO_TYPES"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2030747 // NO_NOTIFICATIONS (<unidirectional association>)
	relation 2030747 --->
	  a role_name "NO_NOTIFICATIONS" multiplicity "[]" init_value "= 
	new MBeanNotificationInfo[0]" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2030747 // NO_NOTIFICATIONS (<unidirectional association>)
	  b parent class_ref 516635 // MBeanNotificationInfo
      end

      attribute 3018907 "types"
	const_attribute private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The different types of the notification.  
"
      end

      attribute 3019035 "immutable"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @see MBeanInfo#immutable "
      end

      operation 8240539 "MBeanNotificationInfo"
	public explicit_return_type ""
	nparams 3
	  param in name "notifTypes" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanNotificationInfo</CODE> object.

@param notifTypes The array of strings (in dot notation)
containing the notification types that the MBean may emit.
This may be null with the same effect as a zero-length array.
@param name The fully qualified Java class name of the
described notifications.
@param description A human readable description of the data."
      end

      operation 8240667 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shallow clone of this instance. 
The clone is obtained by simply calling <tt>super.clone()</tt>, 
thus calling the default native shallow cloning mechanism 
implemented by <tt>Object.clone()</tt>.
No deeper cloning of any internal field is made."
      end

      operation 8240795 "getNotifTypes"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array of strings (in dot notation) containing the
notification types that the MBean may emit.

@return the array of strings.  Changing the returned array has no
effect on this MBeanNotificationInfo."
      end

      operation 8240923 "fastGetNotifTypes"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8241051 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanAttributeInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanNotificationInfo
such that its {@link #getName()}, {@link #getDescription()},
and {@link #getNotifTypes()} values are equal (not necessarily
identical) to those of this MBeanNotificationInfo.  Two
notification type arrays are equal if their corresponding
elements are equal.  They are not equal if they have the same
elements but in a different order."
      end

      operation 8241179 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 516763 "NotificationBroadcasterSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Provides an implementation of {@link
javax.management.NotificationEmitter NotificationEmitter}
interface.  This can be used as the super class of an MBean that
sends notifications.</p>

<p>It is not specified whether the notification dispatch model is
synchronous or asynchronous.  That is, when a thread calls {@link
#sendNotification sendNotification}, the {@link
NotificationListener#handleNotification
NotificationListener.handleNotification} method of each listener
may be called within that thread (a synchronous model) or within
some other thread (an asynchronous model).</p>

<p>Applications should not depend on notification dispatch being
synchronous or being asynchronous.  Thus:</p>

<ul>

<li>Applications should not assume a synchronous model.  When the
{@link #sendNotification sendNotification} method returns, it is
not guaranteed that every listener's {@link
NotificationListener#handleNotification handleNotification} method
has been called.  It is not guaranteed either that a listener will
see notifications in the same order as they were generated.
Listeners that depend on order should use the sequence number of
notifications to determine their order (see {@link
Notification#getSequenceNumber()}).

<li>Applications should not assume an asynchronous model.  If the
actions performed by a listener are potentially slow, the listener
should arrange for them to be performed in another thread, to avoid
holding up other listeners and the caller of {@link
#sendNotification sendNotification}.

</ul>

@since 1.5"
      classrelation 2034203 // <realization>
	relation 2034203 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2034203 // <realization>
	  b parent class_ref 516379 // NotificationEmitter
      end

      operation 8251291 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener.

@param listener The listener to receive notifications.
@param filter The filter object. If filter is null, no filtering will be performed before handling notifications.
@param handback An opaque object to be sent back to the listener when a notification is emitted. This object
cannot be used by the Notification broadcaster object. It should be resent unchanged with the notification
to the listener.

@exception IllegalArgumentException thrown if the listener is null.

@see #removeNotificationListener"
      end

      operation 8251419 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8251547 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8251675 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8251803 "sendNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "notification" type class_ref 513819 // Notification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a notification.
  
@param notification The notification to send."
      end

      operation 8251931 "handleNotification"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "notif" type class_ref 513819 // Notification
	  param inout name "handback" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method is called by {@link #sendNotification
sendNotification} for each listener in order to send the
notification to that listener.  It can be overridden in
subclasses to change the behavior of notification delivery,
for instance to deliver the notification in a separate
thread.</p>

<p>It is not guaranteed that this method is called by the same
thread as the one that called {@link #sendNotification
sendNotification}.</p>

<p>The default implementation of this method is equivalent to
<pre>
listener.handleNotification(notif, handback);
</pre>

@param listener the listener to which the notification is being
delivered.
@param notif the notification being delivered to the listener.
@param handback the handback object that was supplied when the
listener was added.

@since.unbundled JMX 1.2"
      end

      operation 8252059 "trace"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "method" explicit_type "String"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " private stuff"
      end

      class 1032347 "ListenerInfo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2034331 // listener (<unidirectional association>)
	  relation 2034331 --->
	    a role_name "listener" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2034331 // listener (<unidirectional association>)
	    b parent class_ref 512411 // NotificationListener
	end

	classrelation 2034459 // filter (<unidirectional association>)
	  relation 2034459 --->
	    a role_name "filter" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2034459 // filter (<unidirectional association>)
	    b parent class_ref 512539 // NotificationFilter
	end

	attribute 3026331 "handback"
	  package explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8252187 "ListenerInfo"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "listener" type class_ref 512411 // NotificationListener
	    param inout name "filter" type class_ref 512539 // NotificationFilter
	    param inout name "handback" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2034587 // listenerList (<unidirectional association>)
	relation 2034587 --->
	  a role_name "listenerList" init_value "=  Collections.EMPTY_LIST" private
	    comment "
Current list of listeners, a List of ListenerInfo.  The object
referenced by this field is never modified.  Instead, the field
is set to a new object when a listener is added or removed,
within a synchronized(lock).  In this way, there is no need to
synchronize when traversing the list to send a notification to
the listeners in it.  That avoids potential deadlocks if the
listeners end up depending on other threads that are themselves
accessing this NotificationBroadcasterSupport.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2034587 // listenerList (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      attribute 3026459 "lock"
	const_attribute private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "We don't want to synchronize on \"this\", since a subclass might
use the \"this\" lock for its own purposes and we could get a
deadlock (bug 5093922).  We can't synchronize on listenerList
because when we want to change it we would be replacing the
object we are synchronizing on.  (In fact, it *might* be possible
to synchronize on listenerList provided the code verified after
getting the lock that the listenerList field still corresponds
to the object synchronized on.  This is the sort of thing that
might be all right with the new memory model.  But let's not
make life unnecessarily difficult for ourselves just to save
one field.
In a future version we will use CopyOnWriteArrayList instead,
since it does pretty much exactly what we want.  There are a
few tricky details related to the semantics of the two
removeNotificationListener operations, however.
"
      end
    end

    class 516891 "DynamicMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the methods that should be implemented by
a Dynamic MBean (MBean that exposes a dynamic management interface). 

@since 1.5"
      operation 3200155 "getAttribute"
	public explicit_return_type "Object"
	nparams 1
	  param in name "attribute" explicit_type "String"
	nexceptions 3
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the value of a specific attribute of the Dynamic MBean.

@param attribute The name of the attribute to be retrieved

@return  The value of the attribute retrieved.

@exception AttributeNotFoundException
@exception MBeanException  Wraps a <CODE>java.lang.Exception</CODE> thrown by the MBean's getter.
@exception ReflectionException  Wraps a <CODE>java.lang.Exception</CODE> thrown while trying to invoke the getter. 

@see #setAttribute"
      end

      operation 3200283 "setAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attribute" type class_ref 512155 // Attribute
	nexceptions 4
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a specific attribute of the Dynamic MBean.

@param attribute The identification of the attribute to
be set and  the value it is to be set to.

@exception AttributeNotFoundException 
@exception InvalidAttributeValueException 
@exception MBeanException Wraps a <CODE>java.lang.Exception</CODE> thrown by the MBean's setter.
@exception ReflectionException Wraps a <CODE>java.lang.Exception</CODE> thrown while trying to invoke the MBean's setter.

@see #getAttribute"
      end

      operation 3200411 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 1
	  param in name "attributes" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the values of several attributes of the Dynamic MBean.

@param attributes A list of the attributes to be retrieved.

@return  The list of attributes retrieved.

@see #setAttributes"
      end

      operation 3200539 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 1
	  param inout name "attributes" type class_ref 512027 // AttributeList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values of several attributes of the Dynamic MBean.

@param attributes A list of attributes: The identification of the
attributes to be set and  the values they are to be set to.

@return  The list of attributes that were set, with their new values.

@see #getAttributes"
      end

      operation 3200667 "invoke"
	public explicit_return_type "Object"
	nparams 3
	  param in name "actionName" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 2
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an action to be invoked on the Dynamic MBean.

@param actionName The name of the action to be invoked.
@param params An array containing the parameters to be set when the action is
invoked.
@param signature An array containing the signature of the action. The class objects will
be loaded through the same class loader as the one used for loading the
MBean on which the action is invoked.

@return  The object returned by the action, which represents the result of
invoking the action on the MBean specified.

@exception MBeanException  Wraps a <CODE>java.lang.Exception</CODE> thrown by the MBean's invoked method.
@exception ReflectionException  Wraps a <CODE>java.lang.Exception</CODE> thrown while trying to invoke the method"
      end

      operation 3200795 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides the exposed attributes and actions of the Dynamic MBean using an MBeanInfo object.

@return  An instance of <CODE>MBeanInfo</CODE> allowing all attributes and actions 
exposed by this Dynamic MBean to be retrieved.
"
      end
    end

    class 517019 "MBeanRegistration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Can be implemented by an MBean in order to
carry out operations before and after being registered or unregistered from
the MBean server.

@since 1.5"
      operation 3200923 "preRegister"
	public return_type class_ref 510875 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 513179 // MBeanServer
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the MBean to perform any operations it needs before
being registered in the MBean server.  If the name of the MBean
is not specified, the MBean can provide a name for its
registration.  If any exception is raised, the MBean will not be
registered in the MBean server.

@param server The MBean server in which the MBean will be registered.

@param name The object name of the MBean.  This name is null if
the name parameter to one of the <code>createMBean</code> or
<code>registerMBean</code> methods in the {@link MBeanServer}
interface is null.  In that case, this method must return a
non-null ObjectName for the new MBean.

@return The name under which the MBean is to be registered.
This value must not be null.  If the <code>name</code>
parameter is not null, it will usually but not necessarily be
the returned value.

@exception java.lang.Exception This exception will be caught by
the MBean server and re-thrown as an {@link
MBeanRegistrationException}."
      end

      operation 3201051 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 392091 // Boolean
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the MBean to perform any operations needed after having been
registered in the MBean server or after the registration has failed.

@param registrationDone Indicates whether or not the MBean has
been successfully registered in the MBean server. The value
false means that the registration phase has failed."
      end

      operation 3201179 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the MBean to perform any operations it needs before
being unregistered by the MBean server.

@exception java.lang.Exception This exception will be caught by
the MBean server and re-thrown as an {@link
MBeanRegistrationException}."
      end

      operation 3201307 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the MBean to perform any operations needed after having been
unregistered in the MBean server."
      end
    end

    class 517787 "MalformedObjectNameException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The format of the string does not correspond to a valid ObjectName.

@since 1.5"
      classrelation 2027035 // <generalisation>
	relation 2027035 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2027035 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3016219 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -572689714442915824L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8232859 "MalformedObjectNameException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8232987 "MalformedObjectNameException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 518427 "StandardMBean"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An MBean whose management interface is determined by reflection
on a Java interface.</p>

<p>This class brings more flexibility to the notion of Management
Interface in the use of Standard MBeans.  Straightforward use of
the patterns for Standard MBeans described in the JMX Specification
means that there is a fixed relationship between the implementation
class of an MBean and its management interface (i.e., if the
implementation class is Thing, the management interface must be
ThingMBean).  This class makes it possible to keep the convenience
of specifying the management interface with a Java interface,
without requiring that there be any naming relationship between the
implementation and interface classes.</p>

<p>By making a DynamicMBean out of an MBean, this class makes
it possible to select any interface implemented by the MBean as its
management interface, provided that it complies with JMX patterns
(i.e., attributes defined by getter/setter etc...).</p>

<p> This class also provides hooks that make it possible to supply
custom descriptions and names for the {@link MBeanInfo} returned by
the DynamicMBean interface.</p>

<p>Using this class, an MBean can be created with any
implementation class name <i>Impl</i> and with a management
interface defined (as for current Standard MBeans) by any interface
<i>Intf</i>, in one of two general ways:</p>

<ul>

<li>Using the public constructor 
    {@link #StandardMBean(java.lang.Object, java.lang.Class)
    StandardMBean(impl,interface)}:
    <pre>
    MBeanServer mbs;
    ...
    Impl impl = new Impl(...);
    StandardMBean mbean = new StandardMBean(impl, Intf.class);
    mbs.registerMBean(mbean, objectName);
    </pre></li>

<li>Subclassing StandardMBean:
    <pre>
    public class Impl extends StandardMBean implements Intf {
       public Impl() {
         super(Intf.class);
      }
      // implement methods of Intf
    }

    [...]

    MBeanServer mbs;
    ....
    Impl impl = new Impl();
    mbs.registerMBean(impl, objectName);
    </pre></li>

</ul>

<p>In either case, the class <i>Impl</i> must implement the 
interface <i>Intf</i>.</p>

<p>Standard MBeans based on the naming relationship between
implementation and interface classes are of course still
available.</p>

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 2039707 // <realization>
	relation 2039707 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2039707 // <realization>
	  b parent class_ref 516891 // DynamicMBean
      end

      attribute 3031195 "dbgTag"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"StandardMBean\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The name of this class to be used for tracing "
      end

      classrelation 2039835 // mbeanInterface (<unidirectional association>)
	relation 2039835 --->
	  a role_name "mbeanInterface" private
	    comment "
The management interface.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2039835 // mbeanInterface (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 3031323 "implementation"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The implementation.
"
      end

      classrelation 2040091 // cachedMBeanInfo (<unidirectional association>)
	relation 2040091 --->
	  a role_name "cachedMBeanInfo" private
	    comment "
The cached MBeanInfo.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2040091 // cachedMBeanInfo (<unidirectional association>)
	  b parent class_ref 512795 // MBeanInfo
      end

      operation 8268827 "StandardMBean"
	private explicit_return_type ""
	nparams 3
	  param inout name "implementation" explicit_type "Object"
	  param inout name "mbeanInterface" type class_ref 164635 // Class
	  param inout name "nullImplementationAllowed" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a DynamicMBean out of <var>implementation</var>, using the 
specified <var>mbeanInterface</var> class.
@param implementation The implementation of this MBean.
       If <code>null</code>, and null implementation is allowed,
       then the implementation is assumed to be <var>this</var>.
@param mbeanInterface The Management Interface exported by this
       MBean's implementation. If <code>null</code>, then this 
       object will use standard JMX design pattern to determine
       the management interface associated with the given 
       implementation.
@param nullImplementationAllowed <code>true</code> if a null 
       implementation is allowed. If null implementation is allowed,
       and a null implementation is passed, then the implementation 
       is assumed to be <var>this</var>.
@exception IllegalArgumentException if the given
   <var>implementation</var> is null, and null is not allowed.
@exception NotCompliantMBeanException if the <var>mbeanInterface</var>
   does not follow JMX design patterns for Management Interfaces, or
   if the given <var>implementation</var> does not implement the 
   specified interface."
      end

      operation 8268955 "StandardMBean"
	public explicit_return_type ""
	nparams 2
	  param inout name "implementation" explicit_type "Object"
	  param inout name "mbeanInterface" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Make a DynamicMBean out of the object
<var>implementation</var>, using the specified
<var>mbeanInterface</var> class.</p>

@param implementation The implementation of this MBean.
@param mbeanInterface The Management Interface exported by this
       MBean's implementation. If <code>null</code>, then this 
       object will use standard JMX design pattern to determine
       the management interface associated with the given 
       implementation.

@exception IllegalArgumentException if the given
   <var>implementation</var> is null.
@exception NotCompliantMBeanException if the <var>mbeanInterface</var>
   does not follow JMX design patterns for Management Interfaces, or
   if the given <var>implementation</var> does not implement the 
   specified interface."
      end

      operation 8269083 "StandardMBean"
	protected explicit_return_type ""
	nparams 1
	  param inout name "mbeanInterface" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Make a DynamicMBean out of <var>this</var>, using the specified
<var>mbeanInterface</var> class.</p>

<p>Call {@link #StandardMBean(java.lang.Object, java.lang.Class)
      this(this,mbeanInterface)}.
This constructor is reserved to subclasses.</p>

@param mbeanInterface The Management Interface exported by this
       MBean.

@exception NotCompliantMBeanException if the <var>mbeanInterface</var>
   does not follow JMX design patterns for Management Interfaces, or
   if <var>this</var> does not implement the specified interface."
      end

      operation 8269211 "setImplementation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "implementation" explicit_type "Object"
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Replace the implementation object wrapped in this
object.</p>

@param implementation The new implementation of this MBean.
The <code>implementation</code> object must implement the MBean
interface that was supplied when this
<code>StandardMBean</code> was constructed.

@exception IllegalArgumentException if the given
   <var>implementation</var> is null.

@exception NotCompliantMBeanException if the given
<var>implementation</var> does not implement the MBean
interface that was supplied at construction.

@see #getImplementation"
      end

      operation 8269339 "setImplementation"
	private explicit_return_type "void"
	nparams 2
	  param inout name "implementation" explicit_type "Object"
	  param inout name "mbeanInterface" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace the implementation and management interface wrapped in
this object.
@param implementation The new implementation of this MBean.
@param mbeanInterface The Management Interface exported by this
       MBean's implementation. If <code>null</code>, then this 
       object will use standard JMX design patterns to determine
       the management interface associated with the given 
       implementation.
@exception IllegalArgumentException if the given
   <var>implementation</var> is null.
@exception NotCompliantMBeanException if the <var>mbeanInterface</var>
   does not follow JMX design patterns for Management Interfaces, or
   if the given <var>implementation</var> does not implement the 
   specified interface."
      end

      operation 8269467 "getImplementation"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the implementation of this MBean.
@return The implementation of this MBean.

@see #setImplementation"
      end

      operation 8269595 "getMBeanInterface"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the Management Interface of this MBean.
@return The management interface of this MBean."
      end

      operation 8269723 "getImplementationClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the class of the implementation of this MBean.
@return The class of the implementation of this MBean."
      end

      operation 8269851 "getAttribute"
	public explicit_return_type "Object"
	nparams 1
	  param in name "attribute" explicit_type "String"
	nexceptions 3
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 From the DynamicMBean interface.
 ------------------------------------------------------------------"
      end

      operation 8269979 "setAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attribute" type class_ref 512155 // Attribute
	nexceptions 4
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 From the DynamicMBean interface.
 ------------------------------------------------------------------"
      end

      operation 8270107 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 1
	  param in name "attributes" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 From the DynamicMBean interface.
 ------------------------------------------------------------------"
      end

      operation 8270235 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 1
	  param inout name "attributes" type class_ref 512027 // AttributeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 From the DynamicMBean interface.
 ------------------------------------------------------------------"
      end

      operation 8270363 "invoke"
	public explicit_return_type "Object"
	nparams 3
	  param in name "actionName" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	  param in name "signature" explicit_type "String"
	nexceptions 2
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 From the DynamicMBean interface.
 ------------------------------------------------------------------"
      end

      operation 8270491 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link MBeanInfo} for this MBean.
<p>
This method implements 
{@link javax.management.DynamicMBean#getMBeanInfo() 
  DynamicMBean.getMBeanInfo()}.
<p>
This method first calls {@link #getCachedMBeanInfo()} in order to
retrieve the cached MBeanInfo for this MBean, if any. If the
MBeanInfo returned by {@link #getCachedMBeanInfo()} is not null,
then it is returned.<br>
Otherwise, this method builds a default MBeanInfo for this MBean, 
using the Management Interface specified for this MBean.
<p>
While building the MBeanInfo, this method calls the customization 
hooks that make it possible for subclasses to supply their custom
descriptions, parameter names, etc...<br>
Finally, it calls {@link #cacheMBeanInfo(javax.management.MBeanInfo)
cacheMBeanInfo()} in order to cache the new MBeanInfo. 
@return The cached MBeanInfo for that MBean, if not null, or a 
        newly built MBeanInfo if none was cached."
      end

      operation 8270619 "getClassName"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the className that will be used in the MBeanInfo returned by
this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom class name.  The default implementation returns
{@link MBeanInfo#getClassName() info.getClassName()}.
@param info The default MBeanInfo derived by reflection.
@return the class name for the new MBeanInfo."
      end

      operation 8270747 "getDescription"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used in the MBeanInfo returned by
this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom MBean description.  The default implementation returns
{@link MBeanInfo#getDescription() info.getDescription()}.
@param info The default MBeanInfo derived by reflection.
@return the description for the new MBeanInfo."
      end

      operation 8270875 "getDescription"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 1031067 // MBeanFeatureInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Customization hook:
Get the description that will be used in the MBeanFeatureInfo 
returned by this MBean.</p>

<p>Subclasses may redefine this method in order to supply
their custom description.  The default implementation returns
{@link MBeanFeatureInfo#getDescription()
info.getDescription()}.</p>

<p>This method is called by 
     {@link #getDescription(MBeanAttributeInfo)},
     {@link #getDescription(MBeanOperationInfo)},
     {@link #getDescription(MBeanConstructorInfo)}.</p>

@param info The default MBeanFeatureInfo derived by reflection.
@return the description for the given MBeanFeatureInfo."
      end

      operation 8271003 "getDescription"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 514971 // MBeanAttributeInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used in the MBeanAttributeInfo 
returned by this MBean.

<p>Subclasses may redefine this method in order to supply their
custom description.  The default implementation returns {@link
#getDescription(MBeanFeatureInfo)
getDescription((MBeanFeatureInfo) info)}.
@param info The default MBeanAttributeInfo derived by reflection.
@return the description for the given MBeanAttributeInfo."
      end

      operation 8271131 "getDescription"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 515099 // MBeanConstructorInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used in the MBeanConstructorInfo 
returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom description.
The default implementation returns {@link
#getDescription(MBeanFeatureInfo)
getDescription((MBeanFeatureInfo) info)}.
@param info The default MBeanConstructorInfo derived by reflection.
@return the description for the given MBeanConstructorInfo."
      end

      operation 8271259 "getDescription"
	protected explicit_return_type "String"
	nparams 3
	  param inout name "ctor" type class_ref 515099 // MBeanConstructorInfo
	  param inout name "param" type class_ref 1031195 // MBeanParameterInfo
	  param in name "sequence" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used for the  <var>sequence</var>
MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom description.  The default implementation returns
{@link MBeanParameterInfo#getDescription() param.getDescription()}.

@param ctor  The default MBeanConstructorInfo derived by reflection.
@param param The default MBeanParameterInfo derived by reflection.
@param sequence The sequence number of the parameter considered 
       (\"0\" for the first parameter, \"1\" for the second parameter,
       etc...).
@return the description for the given MBeanParameterInfo."
      end

      operation 8271387 "getParameterName"
	protected explicit_return_type "String"
	nparams 3
	  param inout name "ctor" type class_ref 515099 // MBeanConstructorInfo
	  param inout name "param" type class_ref 1031195 // MBeanParameterInfo
	  param in name "sequence" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the name that will be used for the <var>sequence</var>
MBeanParameterInfo of the MBeanConstructorInfo returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom parameter name.  The default implementation returns
{@link MBeanParameterInfo#getName() param.getName()}.
 
@param ctor  The default MBeanConstructorInfo derived by reflection.
@param param The default MBeanParameterInfo derived by reflection.
@param sequence The sequence number of the parameter considered 
       (\"0\" for the first parameter, \"1\" for the second parameter,
       etc...).
@return the name for the given MBeanParameterInfo."
      end

      operation 8271515 "getDescription"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "info" type class_ref 1031323 // MBeanOperationInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used in the MBeanOperationInfo 
returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom description.  The default implementation returns
{@link #getDescription(MBeanFeatureInfo)
getDescription((MBeanFeatureInfo) info)}.
@param info The default MBeanOperationInfo derived by reflection.
@return the description for the given MBeanOperationInfo."
      end

      operation 8271643 "getImpact"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "info" type class_ref 1031323 // MBeanOperationInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the <var>impact</var> flag of the operation that will be used in 
the MBeanOperationInfo returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom impact flag.  The default implementation returns
{@link MBeanOperationInfo#getImpact() info.getImpact()}.
@param info The default MBeanOperationInfo derived by reflection.
@return the impact flag for the given MBeanOperationInfo."
      end

      operation 8271771 "getParameterName"
	protected explicit_return_type "String"
	nparams 3
	  param inout name "op" type class_ref 1031323 // MBeanOperationInfo
	  param inout name "param" type class_ref 1031195 // MBeanParameterInfo
	  param in name "sequence" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the name that will be used for the <var>sequence</var>
MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom parameter name.  The default implementation returns
{@link MBeanParameterInfo#getName() param.getName()}.
 
@param op    The default MBeanOperationInfo derived by reflection.
@param param The default MBeanParameterInfo derived by reflection.
@param sequence The sequence number of the parameter considered 
       (\"0\" for the first parameter, \"1\" for the second parameter,
       etc...).
@return the name to use for the given MBeanParameterInfo."
      end

      operation 8271899 "getDescription"
	protected explicit_return_type "String"
	nparams 3
	  param inout name "op" type class_ref 1031323 // MBeanOperationInfo
	  param inout name "param" type class_ref 1031195 // MBeanParameterInfo
	  param in name "sequence" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the description that will be used for the  <var>sequence</var>
MBeanParameterInfo of the MBeanOperationInfo returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom description.  The default implementation returns
{@link MBeanParameterInfo#getDescription() param.getDescription()}.
 
@param op    The default MBeanOperationInfo derived by reflection.
@param param The default MBeanParameterInfo derived by reflection.
@param sequence The sequence number of the parameter considered 
       (\"0\" for the first parameter, \"1\" for the second parameter,
       etc...).
@return the description for the given MBeanParameterInfo."
      end

      operation 8272027 "getConstructors"
	protected return_type class_ref 515099 // MBeanConstructorInfo
	nparams 2
	  param inout name "ctors" type class_ref 515099 // MBeanConstructorInfo
	  param inout name "impl" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the MBeanConstructorInfo[] that will be used in the MBeanInfo
returned by this MBean.
<br>
By default, this method returns <code>null</code> if the wrapped
implementation is not <var>this</var>. Indeed, if the wrapped
implementation is not this object itself, it will not be possible
to recreate a wrapped implementation by calling the implementation 
constructors through <code>MBeanServer.createMBean(...)</code>.<br>
Otherwise, if the wrapped implementation is <var>this</var>, 
<var>ctors</var> is returned.
<br>
Subclasses may redefine this method in order to modify this 
behavior, if needed.
@param ctors The default MBeanConstructorInfo[] derived by reflection.
@param impl  The wrapped implementation. If <code>null</code> is
       passed, the wrapped implementation is ignored and 
       <var>ctors</var> is returned.
@return the MBeanConstructorInfo[] for the new MBeanInfo."
      end

      operation 8272155 "getNotifications"
	private return_type class_ref 516635 // MBeanNotificationInfo
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Get the MBeanNotificationInfo[] that will be used in the MBeanInfo
returned by this MBean.
<br>
Subclasses may redefine this method in order to supply their
custom notifications.
@param info The default MBeanInfo derived by reflection.
@return the MBeanNotificationInfo[] for the new MBeanInfo.

 Private because not needed - the StandardMBeanMetaDataImpl already
 calls getNotificationInfo() on the implementation...."
      end

      operation 8272283 "getCachedMBeanInfo"
	protected return_type class_ref 512795 // MBeanInfo
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
Return the MBeanInfo cached for this object.

<p>Subclasses may redefine this method in order to implement their
own caching policy.  The default implementation stores one
{@link MBeanInfo} object per instance.

@return The cached MBeanInfo, or null if no MBeanInfo is cached.

@see #cacheMBeanInfo(MBeanInfo)"
      end

      operation 8272411 "cacheMBeanInfo"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Customization hook:
cache the MBeanInfo built for this object.

<p>Subclasses may redefine this method in order to implement
their own caching policy.  The default implementation stores
<code>info</code> in this instance.  A subclass can define
other policies, such as not saving <code>info</code> (so it is
reconstructed every time {@link #getMBeanInfo()} is called) or
sharing a unique {@link MBeanInfo} object when several
<code>StandardMBean</code> instances have equal {@link
MBeanInfo} values.

@param info the new <code>MBeanInfo</code> to cache.  Any
previously cached value is discarded.  This parameter may be
null, in which case there is no new cached value."
      end

      operation 8272539 "buildStandardMBeanInfo"
	private return_type class_ref 512795 // MBeanInfo
	nparams 0
	nexceptions 1
	  exception class_ref 511515 // NotCompliantMBeanException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 Build the defaullt standard MBeanInfo. 
 ------------------------------------------------------------------    "
      end

      operation 8272667 "getConstructors"
	private return_type class_ref 515099 // MBeanConstructorInfo
	nparams 2
	  param inout name "info" type class_ref 512795 // MBeanInfo
	  param inout name "impl" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 Build the custom MBeanConstructorInfo[]
 ------------------------------------------------------------------    "
      end

      operation 8272795 "getOperations"
	private return_type class_ref 1031323 // MBeanOperationInfo
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 Build the custom MBeanOperationInfo[]
 ------------------------------------------------------------------    "
      end

      operation 8272923 "getAttributes"
	private return_type class_ref 514971 // MBeanAttributeInfo
	nparams 1
	  param inout name "info" type class_ref 512795 // MBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------
 Build the custom MBeanAttributeInfo[]
 ------------------------------------------------------------------    "
      end

      operation 8273051 "isTraceOn"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " private stuff"
      end

      operation 8273179 "trace"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8273307 "trace"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8273435 "isDebugOn"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8273563 "debug"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8273691 "debug"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8273819 "debugX"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param inout name "e" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 519195 "MBeanServerNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a notification emitted by the MBean server through the MBeanServerDelegate MBean. 
The MBean Server emits the following types of notifications: MBean registration, MBean
de-registration.
<P>
To receive to MBeanServerNotifications, you need to be declared as listener to
the {@link javax.management.MBeanServerDelegate javax.management.MBeanServerDelegate} MBean
that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is:
<CODE>JMImplementation:type=MBeanServerDelegate</CODE>.

@since 1.5"
      classrelation 2033307 // <generalisation>
	relation 2033307 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2033307 // <generalisation>
	  b parent class_ref 513819 // Notification
      end

      attribute 3023771 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2876477500475969677L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3023899 "REGISTRATION_NOTIFICATION"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"JMX.mbean.registered\" "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that an MBean has been registered. Value is \"JMX.mbean.registered\".
"
      end

      attribute 3024027 "UNREGISTRATION_NOTIFICATION"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"JMX.mbean.unregistered\" "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that an MBean has been unregistered. Value is \"JMX.mbean.unregistered\".
"
      end

      classrelation 2033435 // objectName (<unidirectional association>)
	relation 2033435 --->
	  a role_name "objectName" const_relation private
	    comment " 
@serial The object names of the MBeans concerned by this notification 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2033435 // objectName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      operation 8248347 "MBeanServerNotification"
	public explicit_return_type ""
	nparams 4
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param inout name "objectName" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an MBeanServerNotification object specifying object names of
the MBeans that caused the notification and the specified notification type.

@param type A string denoting the type of the
notification. Set it to one these values: {@link
#REGISTRATION_NOTIFICATION}, {@link
#UNREGISTRATION_NOTIFICATION}.
@param source The MBeanServerNotification object responsible
for forwarding MBean server notification.
@param sequenceNumber A sequence number that can be used to order
received notifications.
@param objectName The object name of the MBean that caused the notification.
"
      end

      operation 8248475 "getMBeanName"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the  object name of the MBean that caused the notification.

@return the object name of the MBean that caused the notification."
      end
    end

    class 519579 "QueryEval"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Allows a query to be performed in the context of a specific MBean server.

@since 1.5"
      classrelation 880411 // <realization>
	relation 880411 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 880411 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 918171 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2675899265640874796L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 880539 // server (<unidirectional association>)
	relation 880539 --->
	  a role_name "server" init_value "=  new InheritableThreadLocal()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 880539 // server (<unidirectional association>)
	  b parent class_ref 163867 // ThreadLocal
      end

      operation 3224475 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the MBean server on which the query is to be performed.
The setting is valid for the thread performing the set.
It is copied to any threads created by that thread at the moment
of their creation.</p>

<p>For historical reasons, this method is not static, but its
behavior does not depend on the instance on which it is
called.</p>

@param s The MBean server on which the query is to be performed.

@see #getMBeanServer"
      end

      operation 3224603 "getMBeanServer"
	class_operation public return_type class_ref 513179 // MBeanServer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the MBean server that was most recently given to the
{@link #setMBeanServer setMBeanServer} method by this thread.
If this thread never called that method, the result is the
value its parent thread would have obtained from
<code>getMBeanServer</code> at the moment of the creation of
this thread, or null if there is no parent thread.</p>

@return the MBean server.

@see #setMBeanServer

@since.unbundled JMX 1.2"
      end
    end

    class 519707 "BadStringOperationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an invalid string operation is passed
to a method for constructing a query.

@since 1.5"
      classrelation 2023323 // <generalisation>
	relation 2023323 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2023323 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3013531 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  7802201238441662100L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3013659 "op"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The description of the operation that originated this exception
"
      end

      operation 8224539 "BadStringOperationException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <CODE>BadStringOperationException</CODE> with the specified detail
message.

@param message the detail message."
      end

      operation 8224667 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end
    end

    class 519835 "BadBinaryOpValueExpException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an invalid expression is passed to a method for
constructing a query.  This exception is used internally by JMX
during the evaluation of a query.  User code does not usually see
it.

@since 1.5"
      classrelation 2023067 // <generalisation>
	relation 2023067 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2023067 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3013403 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5068475589449021227L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2023195 // exp (<unidirectional association>)
	relation 2023195 --->
	  a role_name "exp" private
	    comment "
@serial the {@link ValueExp} that originated this exception

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2023195 // exp (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      operation 8224155 "BadBinaryOpValueExpException"
	public explicit_return_type ""
	nparams 1
	  param inout name "exp" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <CODE>BadBinaryOpValueExpException</CODE> with the specified <CODE>ValueExp</CODE>.

@param exp the expression whose value was inappropriate."
      end

      operation 8224283 "getExp"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <CODE>ValueExp</CODE> that originated the exception.

@return the problematic {@link ValueExp}."
      end

      operation 8224411 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end
    end

    class 519963 "BadAttributeValueExpException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an invalid MBean attribute is passed to a query
constructing method.  This exception is used internally by JMX
during the evaluation of a query.  User code does not usually
see it.

@since 1.5"
      classrelation 2022939 // <generalisation>
	relation 2022939 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022939 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3013147 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3105272988410493376L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3013275 "val"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The attribute value that originated this exception
"
      end

      operation 8223899 "BadAttributeValueExpException"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>BadAttributeValueExpException</CODE> with the specified Object.

@param val the inappropriate value."
      end

      operation 8224027 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end
    end

    class 520091 "InvalidApplicationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an attempt is made to apply either of the following: A
subquery expression to an MBean or a qualified attribute expression
to an MBean of the wrong class.  This exception is used internally
by JMX during the evaluation of a query.  User code does not
usually see it.

@since 1.5"
      classrelation 2026651 // <generalisation>
	relation 2026651 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2026651 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3015707 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3048022274675537269L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3015835 "val"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The object representing the class of the MBean
"
      end

      operation 8232219 "InvalidApplicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "val" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>InvalidApplicationException</CODE> with the specified <CODE>Object</CODE>.

@param val the detail message of this exception."
      end
    end

    class 539675 "ServiceNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents exceptions raised when a requested service is not supported.

@since 1.5"
      classrelation 2039579 // <generalisation>
	relation 2039579 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2039579 // <generalisation>
	  b parent class_ref 515483 // OperationsException
      end

      attribute 3031067 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3990675661956646827L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8268571 "ServiceNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8268699 "ServiceNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end
    end

    class 543643 "JMRuntimeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Runtime exceptions emitted by JMX implementations.

@since 1.5"
      classrelation 919067 // <generalisation>
	relation 919067 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 919067 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      attribute 972571 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6573344628407841861L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 3403931 "JMRuntimeException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 3404059 "JMRuntimeException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param message the detail message."
      end

      operation 3404187 "JMRuntimeException"
	package explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor with a nested exception.  This constructor is
package-private because it arrived too late for the JMX 1.2
specification.  A later version may make it public."
      end
    end

    class 1028763 "AndQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query building mechanism to represent conjunctions
of relational expressions.
@serial include

@since 1.5"
      classrelation 2020891 // <generalisation>
	relation 2020891 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2020891 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2021019 // <realization>
	relation 2021019 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2021019 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3010971 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -1081892073854801359L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2021147 // exp1 (<unidirectional association>)
	relation 2021147 --->
	  a role_name "exp1" private
	    comment " 
@serial The first QueryExp of the conjunction 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2021147 // exp1 (<unidirectional association>)
	  b parent class_ref 511771 // QueryExp
      end

      classrelation 2021275 // exp2 (<unidirectional association>)
	relation 2021275 --->
	  a role_name "exp2" private
	    comment " 
@serial The second QueryExp of the conjunction 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2021275 // exp2 (<unidirectional association>)
	  b parent class_ref 511771 // QueryExp
      end

      operation 8218267 "AndQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8218395 "AndQueryExp"
	public explicit_return_type ""
	nparams 2
	  param inout name "q1" type class_ref 511771 // QueryExp
	  param inout name "q2" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AndQueryExp with q1 and q2 QueryExp."
      end

      operation 8218523 "getLeftExp"
	public return_type class_ref 511771 // QueryExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the left query expression."
      end

      operation 8218651 "getRightExp"
	public return_type class_ref 511771 // QueryExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the right query expression."
      end

      operation 8218779 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the AndQueryExp on a MBean.

@param name The name of the MBean on which the AndQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.


@exception BadStringOperationException The string passed to the method is invalid. 
@exception BadBinaryOpValueExpException The expression passed to the method is invalid.
@exception BadAttributeValueExpException The attribute value passed to the method is invalid.
@exception InvalidApplicationException  An attempt has been made to apply a subquery expression to a 
managed object or a qualified attribute expression to a managed object of the wrong class."
      end

      operation 8218907 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this AndQueryExp"
      end
    end

    class 1028891 "AttributeChangeNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides definitions of the attribute change notifications sent by MBeans.
<P>
It's up to the MBean owning the attribute of interest to create and send 
attribute change notifications when the attribute change occurs.
So the <CODE>NotificationBroadcaster</CODE> interface has to be implemented 
by any MBean for which an attribute change is of interest.
<P>
Example:
If an MBean called <CODE>myMbean</CODE> needs to notify registered listeners 
when its attribute: 
<BLOCKQUOTE><CODE>
     String myString
</CODE></BLOCKQUOTE> 
is modified, <CODE>myMbean</CODE> creates and emits the following notification:
<BLOCKQUOTE><CODE>
new AttributeChangeNotification(myMbean, sequenceNumber, timeStamp, msg,
                                \"myString\", \"String\", oldValue, newValue); 
</CODE></BLOCKQUOTE> 

@since 1.5"
      classrelation 2021531 // <generalisation>
	relation 2021531 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2021531 // <generalisation>
	  b parent class_ref 513819 // Notification
      end

      attribute 3011483 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  535176054565814134L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3011611 "ATTRIBUTE_CHANGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.attribute.change\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type which indicates that the observed MBean attribute value has changed.
<BR>The value of this type string is <CODE>jmx.attribute.change</CODE>.
"
      end

      attribute 3011739 "attributeName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The MBean attribute name.
"
      end

      attribute 3011867 "attributeType"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The MBean attribute type.
"
      end

      attribute 3011995 "oldValue"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The MBean attribute old value.
"
      end

      attribute 3012123 "newValue"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The MBean attribute new value.
"
      end

      operation 8219547 "AttributeChangeNotification"
	public explicit_return_type ""
	nparams 8
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param in name "msg" explicit_type "String"
	  param in name "attributeName" explicit_type "String"
	  param in name "attributeType" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an attribute change notification object.
In addition to the information common to all notification, the caller must supply the name and type
of the attribute, as well as its old and new values.

@param source The notification producer, that is, the MBean the attribute belongs to.
@param sequenceNumber The notification sequence number within the source object.
@param timeStamp The date at which the notification is being sent.
@param msg A String containing the message of the notification.
@param attributeName A String giving the name of the attribute.
@param attributeType A String containing the type of the attribute.
@param oldValue An object representing value of the attribute before the change.
@param newValue An object representing value of the attribute after the change."
      end

      operation 8219675 "getAttributeName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the attribute which has changed.

@return A String containing the name of the attribute."
      end

      operation 8219803 "getAttributeType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of the attribute which has changed.

@return A String containing the type of the attribute."
      end

      operation 8219931 "getOldValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the old value of the attribute which has changed.

@return An Object containing the old value of the attribute."
      end

      operation 8220059 "getNewValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the new value of the attribute which has changed.

@return An Object containing the new value of the attribute."
      end
    end

    class 1029019 "AttributeChangeNotificationFilter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements of the {@link javax.management.NotificationFilter NotificationFilter} 
interface for the {@link javax.management.AttributeChangeNotification attribute change notification}.
The filtering is performed on the name of the observed attribute.
<P>
It manages a list of enabled attribute names. 
A method allows users to enable/disable as many attribute names as required.

@since 1.5"
      classrelation 2021787 // <realization>
	relation 2021787 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2021787 // <realization>
	  b parent class_ref 512539 // NotificationFilter
      end

      classrelation 2021915 // <realization>
	relation 2021915 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2021915 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3012251 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -6347317584796410029L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2022043 // enabledAttributes (<unidirectional association>)
	relation 2022043 --->
	  a role_name "enabledAttributes" init_value "=  new Vector()" private
	    comment "
@serial {@link Vector} that contains the enabled attribute names.
        The default value is an empty vector.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2022043 // enabledAttributes (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 8220315 "isNotificationEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "notification" type class_ref 513819 // Notification
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked before sending the specified notification to the listener.
<BR>This filter compares the attribute name of the specified attribute change notification
with each enabled attribute name.
If the attribute name equals one of the enabled attribute names,
the notification must be sent to the listener and this method returns <CODE>true</CODE>.
  
@param notification The attribute change notification to be sent.
@return <CODE>true</CODE> if the notification has to be sent to the listener, <CODE>false</CODE> otherwise."
      end

      operation 8220443 "enableAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables all the attribute change notifications the attribute name of which equals
the specified name to be sent to the listener.
<BR>If the specified name is already in the list of enabled attribute names,
this method has no effect.
  
@param name The attribute name.
@exception java.lang.IllegalArgumentException The attribute name parameter is null."
      end

      operation 8220571 "disableAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables all the attribute change notifications the attribute name of which equals 
the specified attribute name to be sent to the listener.
<BR>If the specified name is not in the list of enabled attribute names,
this method has no effect.
  
@param name The attribute name."
      end

      operation 8220699 "disableAllAttributes"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables all the attribute names."
      end

      operation 8220827 "getEnabledAttributes"
	public return_type class_ref 153883 // Vector
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the enabled attribute names for this filter.

@return The list containing all the enabled attribute names."
      end
    end

    class 1029147 "JMException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exceptions thrown by JMX implementations.
It does not include the runtime exceptions.

@since 1.5"
      classrelation 2022299 // <generalisation>
	relation 2022299 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022299 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3012507 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  350520924977331825L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8221979 "JMException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8222107 "JMException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param msg the detail message."
      end
    end

    class 1029275 "AttributeValueExp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents attributes used as arguments to relational constraints. 
An <CODE>AttributeValueExp</CODE> may be used anywhere a <CODE>ValueExp</CODE> is required.

@since 1.5"
      classrelation 2022811 // <realization>
	relation 2022811 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2022811 // <realization>
	  b parent class_ref 1029403 // ValueExp
      end

      attribute 3012891 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7768025046539163385L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3013019 "attr"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The name of the attribute 
"
      end

      operation 8223003 "AttributeValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "An <code>AttributeValueExp</code> with a null attribute.
@deprecated An instance created with this constructor cannot be
used in a query."
      end

      operation 8223131 "AttributeValueExp"
	public explicit_return_type ""
	nparams 1
	  param in name "attr" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <CODE>AttributeValueExp</CODE> representing the
specified object attribute, named attr.

@param attr the name of the attribute whose value is the value
of this {@link ValueExp}."
      end

      operation 8223259 "getAttributeName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the name of the attribute.

@return the attribute name."
      end

      operation 8223387 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the <CODE>AttributeValueExp</CODE> on an MBean.

@param name The name of the MBean on which the <CODE>AttributeValueExp</CODE> will be applied.

@return  The <CODE>ValueExp</CODE>.

@exception BadAttributeValueExpException
@exception InvalidApplicationException
@exception BadStringOperationException
@exception BadBinaryOpValueExpException
"
      end

      operation 8223515 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing its value."
      end

      operation 8223643 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the MBean server on which the query is to be performed.

@param s The MBean server on which the query is to be performed.

 There is no need for this method, because if a query is being
evaluted an AttributeValueExp can only appear inside a QueryExp,
and that QueryExp will itself have done setMBeanServer.  "
      end

      operation 8223771 "getAttribute"
	protected explicit_return_type "Object"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value of the given attribute in the named MBean.
If the attempt to access the attribute generates an exception,
return null.

@param name the name of the MBean whose attribute is to be returned.

@return the value of the attribute, or null if it could not be
obtained."
      end
    end

    class 1029403 "ValueExp"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents values that can be passed as arguments to
relational expressions. Strings, numbers, attributes are valid values
and should be represented by implementations of <CODE>ValueExp</CODE>.

@since 1.5"
      classrelation 2022683 // <generalisation>
	relation 2022683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2022683 // <generalisation>
	  b parent class_ref 137883 // Serializable
      end

      operation 8222747 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the ValueExp on a MBean.

@param name The name of the MBean on which the ValueExp will be applied.

@return  The <CODE>ValueExp</CODE>.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8222875 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 513179 // MBeanServer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the MBean server on which the query is to be performed.

@param s The MBean server on which the query is to be performed.

@deprecated This method is not needed because a
<code>ValueExp</code> can access the MBean server in which it
is being evaluated by using {@link QueryEval#getMBeanServer()}."
      end
    end

    class 1029531 "BetweenQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent binary
relations.
@serial include

@since 1.5"
      classrelation 2023451 // <generalisation>
	relation 2023451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2023451 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2023579 // <realization>
	relation 2023579 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2023579 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3013787 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2933597532866307444L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2023707 // exp1 (<unidirectional association>)
	relation 2023707 --->
	  a role_name "exp1" private
	    comment " 
@serial The checked value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2023707 // exp1 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      classrelation 2023835 // exp2 (<unidirectional association>)
	relation 2023835 --->
	  a role_name "exp2" private
	    comment " 
@serial The lower bound value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2023835 // exp2 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      classrelation 2023963 // exp3 (<unidirectional association>)
	relation 2023963 --->
	  a role_name "exp3" private
	    comment " 
@serial The upper bound value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2023963 // exp3 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      operation 8224795 "BetweenQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8224923 "BetweenQueryExp"
	public explicit_return_type ""
	nparams 3
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	  param inout name "v3" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BetweenQueryExp with v1 checked value, v2 lower bound
and v3 upper bound values."
      end

      operation 8225051 "getCheckedValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the checked value of the query."
      end

      operation 8225179 "getLowerBound"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lower bound value of the query."
      end

      operation 8225307 "getUpperBound"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the upper bound value of the query."
      end

      operation 8225435 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the BetweenQueryExp on an MBean.

@param name The name of the MBean on which the BetweenQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.
    
@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8225563 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end
    end

    class 1029659 "BinaryOpValueExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent binary
operations.
@serial include

@since 1.5"
      classrelation 2024091 // <generalisation>
	relation 2024091 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2024091 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2024219 // <realization>
	relation 2024219 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2024219 // <realization>
	  b parent class_ref 1029403 // ValueExp
      end

      attribute 3013915 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1216286847881456786L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3014043 "op"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The operator 
"
      end

      classrelation 2024347 // exp1 (<unidirectional association>)
	relation 2024347 --->
	  a role_name "exp1" private
	    comment " 
@serial The first value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2024347 // exp1 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      classrelation 2024475 // exp2 (<unidirectional association>)
	relation 2024475 --->
	  a role_name "exp2" private
	    comment " 
@serial The second value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2024475 // exp2 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      operation 8225691 "BinaryOpValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8225819 "BinaryOpValueExp"
	public explicit_return_type ""
	nparams 3
	  param in name "o" explicit_type "int"
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BinaryOpValueExp using operator o applied on v1 and
v2 values."
      end

      operation 8225947 "getOperator"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the operator of the value expression."
      end

      operation 8226075 "getLeftValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the left value of the value expression."
      end

      operation 8226203 "getRightValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the right value of the value expression."
      end

      operation 8226331 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the BinaryOpValueExp on a MBean.

@param name The name of the MBean on which the BinaryOpValueExp will be applied.

@return  The ValueExp.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8226459 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object"
      end

      operation 8226587 "opString"
	private explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 519835 // BadBinaryOpValueExpException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1029787 "BinaryRelQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent binary
operations.
@serial include

@since 1.5"
      classrelation 2024603 // <generalisation>
	relation 2024603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2024603 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2024731 // <realization>
	relation 2024731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2024731 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3014171 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5690656271650491000L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3014299 "relOp"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The operator 
"
      end

      classrelation 2024859 // exp1 (<unidirectional association>)
	relation 2024859 --->
	  a role_name "exp1" private
	    comment " 
@serial The first value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2024859 // exp1 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      classrelation 2024987 // exp2 (<unidirectional association>)
	relation 2024987 --->
	  a role_name "exp2" private
	    comment " 
@serial The second value 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2024987 // exp2 (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      operation 8226715 "BinaryRelQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8226843 "BinaryRelQueryExp"
	public explicit_return_type ""
	nparams 3
	  param in name "op" explicit_type "int"
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BinaryRelQueryExp with operator op applied on v1 and
v2 values."
      end

      operation 8226971 "getOperator"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the operator of the query."
      end

      operation 8227099 "getLeftValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the left value of the query."
      end

      operation 8227227 "getRightValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the right value of the query."
      end

      operation 8227355 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the BinaryRelQueryExp on an MBean.

@param name The name of the MBean on which the BinaryRelQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8227483 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end

      operation 8227611 "relOpString"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1029915 "BooleanValueExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a boolean value. A BooleanValueExp may be
used anywhere a ValueExp is required.
@serial include

@since 1.5"
      classrelation 2025115 // <generalisation>
	relation 2025115 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025115 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2025243 // <realization>
	relation 2025243 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2025243 // <realization>
	  b parent class_ref 1029403 // ValueExp
      end

      attribute 3014427 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  7754922052666594581L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3014555 "val"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The boolean value 
"
      end

      operation 8227739 "BooleanValueExp"
	package explicit_return_type ""
	nparams 1
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new BooleanValueExp representing the boolean literal <val>."
      end

      operation 8227867 "BooleanValueExp"
	package explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 392091 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BooleanValueExp representing the Boolean object <val>."
      end

      operation 8227995 "getValue"
	public return_type class_ref 392091 // Boolean
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the  Boolean object representing the value of the BooleanValueExp object."
      end

      operation 8228123 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end

      operation 8228251 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the ValueExp on a MBean.

@param name The name of the MBean on which the ValueExp will be applied.

@return  The <CODE>ValueExp</CODE>.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end
    end

    class 1030043 "ClassAttributeValueExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents the name of the Java implementation class of
the MBean. It is used for performing queries based on the class of
the MBean.
@serial include

@since 1.5"
      classrelation 2025371 // <generalisation>
	relation 2025371 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025371 // <generalisation>
	  b parent class_ref 1029275 // AttributeValueExp
      end

      attribute 3014683 "oldSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2212731951078526753L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serialization compatibility stuff:
 Two serial forms are supported in this class. The selected form depends
 on system property \"jmx.serial.form\":
  - \"1.0\" for JMX 1.0
  - any other value for JMX 1.1 and higher

 Serial version for old serial form "
      end

      attribute 3014811 "newSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -1081892073854801359L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version for new serial form "
      end

      attribute 3014939 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 168731 "initialization"
	
	cpp "" ""
	java "  static {
	boolean compat = false;
	try {
	    PrivilegedAction act = new GetPropertyAction(\"jmx.serial.form\");
	    String form = (String) AccessController.doPrivileged(act);
	    compat = (form != null && form.equals(\"1.0\"));
	} catch (Exception e) {
	    // OK: exception means no compat with 1.0, too bad
	}
	if (compat)
	    serialVersionUID = oldSerialVersionUID;
	else 
	    serialVersionUID = newSerialVersionUID;
    }"
	php ""
	python ""
	idl ""
      end

      attribute 3015067 "attr"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The name of the attribute
"
      end

      operation 8228379 "ClassAttributeValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8228507 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the ClassAttributeValueExp on an MBean. Returns the name of
the Java implementation class of the MBean.

@param name The name of the MBean on which the ClassAttributeValueExp will be applied.

@return  The ValueExp.

@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8228635 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string \"Class\" representing its value"
      end

      operation 8228763 "getValue"
	protected explicit_return_type "Object"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1030171 "DefaultLoaderRepository"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Keeps the list of Class Loaders registered in the MBean Server.
It provides the necessary methods to load classes using the registered 
Class Loaders.</p>

<p>This deprecated class is maintained for compatibility.  In
previous versions of the JMX API, there was one
<code>DefaultLoaderRepository</code> shared by all MBean servers.
As of version 1.2 of the JMX API, that functionality is
approximated by using {@link MBeanServerFactory#findMBeanServer} to
find all known MBean servers, and consulting the {@link
ClassLoaderRepository} of each one.  It is strongly recommended
that code referencing <code>DefaultLoaderRepository</code> be
rewritten.</p>

@deprecated Use 
{@link javax.management.MBeanServer#getClassLoaderRepository()} 
instead.

@since 1.5"
      operation 8228891 "loadClass"
	class_operation public return_type class_ref 164635 // Class
	nparams 1
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders and try to load the requested class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be found."
      end

      operation 8229019 "loadClassWithout"
	class_operation public return_type class_ref 164635 // Class
	nparams 2
	  param inout name "loader" type class_ref 163611 // ClassLoader
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders but exclude the given class loader, then try to load 
the requested class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.
@param loader The class loader to be excluded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be found."
      end
    end

    class 1030299 "Descriptor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents the behavioral metadata set for a JMX Element.
For examples, a descriptor is part of the ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo,
ModelMBeanConstructorInfo, and ModelMBeanParameterInfo.
<P>
A descriptor consists of a collection of fields.  Each field is in fieldname=fieldvalue format.
<P>
All field names and values are not predefined. New fields can be defined and added by any program.
In the case of ModelMBean some fields have been predefined for consistency of implementation and support by the ModelMBeanInfo
ModelMBean*Info, and ModelMBean classes.
<P>

@since 1.5"
      classrelation 2025499 // <generalisation>
	relation 2025499 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025499 // <generalisation>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2025627 // <generalisation>
	relation 2025627 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025627 // <generalisation>
	  b parent class_ref 339867 // Cloneable
      end

      operation 8229147 "getFieldValue"
	public explicit_return_type "Object"
	nparams 1
	  param in name "fieldName" explicit_type "String"
	nexceptions 1
	  exception class_ref 1030427 // RuntimeOperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for a specific fieldname.

@param fieldName The field name in question; if not found, null is returned.

@return Object Field value.

@exception RuntimeOperationsException for illegal value for field name.
             "
      end

      operation 8229275 "setField"
	public explicit_return_type "void"
	nparams 2
	  param in name "fieldName" explicit_type "String"
	  param inout name "fieldValue" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1030427 // RuntimeOperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value for a specific fieldname.	The field value will be validated before
it is set.  If it is not valid, then an exception will be thrown. This will modify
an existing field or add a new field.

@param fieldName The field name to be set. Cannot be null or empty.
@param fieldValue The field value to be set for the field
name.  Can be null.

@exception RuntimeOperationsException for illegal value for field name or field value.
             "
      end

      operation 8229403 "getFields"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the  fields contained in this descriptor as a string array.

@return String array of fields in the format <i>fieldName=fieldValue</i>
         If the value of a field is not a String, then the toString() method
         will be called on it and the returned value used as the value for
         the field in the returned array. Object values which are not Strings
         will be enclosed in parentheses. If the descriptor is empty, you will get
         an empty array.    

@see #setFields"
      end

      operation 8229531 "getFieldNames"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the fields names in the descriptor.

@return String array of fields names. If the descriptor is empty, you will get
         an empty array.
"
      end

      operation 8229659 "getFieldValues"
	public explicit_return_type "Object"
	nparams 1
	  param in name "fieldNames" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the field values in the descriptor as an array of Objects. The
returned values are in the same order as the fieldNames String array parameter.

@param fieldNames String array of the names of the fields that the values
should be returned for.  If the array is empty then an empty array will be 
returned.  If the array is 'null' then all values will be returned.  If a field 
name in the array does not exist, then null is returned for the matching array
element being returned.

@return Object array of field values. If the descriptor is empty, you will get
         an empty array.
"
      end

      operation 8229787 "removeField"
	public explicit_return_type "void"
	nparams 1
	  param in name "fieldName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a field from the descriptor.

@param fieldName String name of the field to be removed.
If the field is not found no exception is thrown."
      end

      operation 8229915 "setFields"
	public explicit_return_type "void"
	nparams 2
	  param in name "fieldNames" explicit_type "String"
	  param inout name "fieldValues" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1030427 // RuntimeOperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all Fields in the list to the new value in with the same index
in the fieldValue array.  Array sizes must match.  
The field value will be validated before it is set.  
If it is not valid, then an exception will be thrown.
If the arrays are empty, then no change will take effect.

@param fieldNames String array of field names. The array and array elements cannot be null.
@param fieldValues Object array of the corresponding field values.  The array cannot be null.
                     Elements of the array can be null.
 
@exception RuntimeOperationsException for illegal value for field Names or field Values.
             Neither can be null.  The array lengths must be equal. 
             If the descriptor construction fails for any reason, this exception will be thrown.

@see #getFields"
      end

      operation 8230043 "clone"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 1030427 // RuntimeOperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new Descriptor which is a duplicate of the Descriptor.

@exception RuntimeOperationsException for illegal value for field Names or field Values.
             If the descriptor construction fails for any reason, this exception will be thrown."
      end

      operation 8230171 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 1030427 // RuntimeOperationsException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all of the fields have legal values given their
names.

@return true if the values are legal.

@exception RuntimeOperationsException If the validity checking fails for any reason, this exception will be thrown."
      end
    end

    class 1030427 "RuntimeOperationsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents runtime exceptions thrown in the agent when performing operations on MBeans. 
It wraps the actual <CODE>java.lang.RuntimeException</CODE> thrown.

@since 1.5"
      classrelation 2039323 // <generalisation>
	relation 2039323 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2039323 // <generalisation>
	  b parent class_ref 543643 // JMRuntimeException
      end

      attribute 3030939 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8408923047489133588L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2039451 // runtimeException (<unidirectional association>)
	relation 2039451 --->
	  a role_name "runtimeException" private
	    comment "
@serial The encapsulated {@link RuntimeException}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2039451 // runtimeException (<unidirectional association>)
	  b parent class_ref 241051 // RuntimeException
      end

      operation 8268059 "RuntimeOperationsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 241051 // RuntimeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>RuntimeOperationsException</CODE> that wraps the actual <CODE>java.lang.RuntimeException</CODE>.

@param e the wrapped exception."
      end

      operation 8268187 "RuntimeOperationsException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 241051 // RuntimeException
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>RuntimeOperationsException</CODE> that wraps the actual <CODE>java.lang.RuntimeException</CODE>
with a detailed message.

@param e the wrapped exception.
@param message the detail message."
      end

      operation 8268315 "getTargetException"
	public return_type class_ref 241051 // RuntimeException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link RuntimeException} thrown.

@return the wrapped {@link RuntimeException}."
      end

      operation 8268443 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link RuntimeException} thrown.

@return the wrapped {@link RuntimeException}."
      end
    end

    class 1030555 "DescriptorAccess"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface is used to gain access to descriptors of the Descriptor class 
which are associated with a JMX component, i.e. MBean, MBeanInfo, 
MBeanAttributeInfo, MBeanNotificationInfo,
MBeanOperationInfo, MBeanParameterInfo.
<P>
ModelMBeans make extensive use of this interface in ModelMBeanInfo classes.

@since 1.5"
      operation 8230299 "getDescriptor"
	public return_type class_ref 1030299 // Descriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of Descriptor.

@return Descriptor associated with the component implementing this interface.
Null should never be returned. At a minimum a default descriptor with the 
descriptor name and descriptorType should be returned.

@see #setDescriptor"
      end

      operation 8230427 "setDescriptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inDescriptor" type class_ref 1030299 // Descriptor
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets Descriptor (full replace).

@param inDescriptor replaces the Descriptor associated with the 
component implementing this interface. If the inDescriptor is invalid for the
type of Info object it is being set for, an exception is thrown.  If the
inDescriptor is null, then the Descriptor will revert to its default value
which should contain, at a minimum, the descriptor name and descriptorType.

@see #getDescriptor"
      end
    end

    class 1030683 "InQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent binary
operations.
@serial include

@since 1.5"
      classrelation 2025755 // <generalisation>
	relation 2025755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2025755 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2025883 // <realization>
	relation 2025883 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2025883 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3015195 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5801329450358952434L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2026011 // val (<unidirectional association>)
	relation 2026011 --->
	  a role_name "val" private
	    comment " 
@serial The {@link ValueExp} to be found 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2026011 // val (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      classrelation 2026139 // valueList (<unidirectional association>)
	relation 2026139 --->
	  a role_name "valueList" multiplicity "[]" private
	    comment " 
@serial The array of {@link ValueExp} to be searched 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2026139 // valueList (<unidirectional association>)
	  b parent class_ref 1029403 // ValueExp
      end

      operation 8230555 "InQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8230683 "InQueryExp"
	public explicit_return_type ""
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "items" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new InQueryExp with the specified ValueExp to be found in
a specified array of ValueExp."
      end

      operation 8230811 "getCheckedValue"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the checked value of the query."
      end

      operation 8230939 "getExplicitValues"
	public return_type class_ref 1029403 // ValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array of values of the query."
      end

      operation 8231067 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the InQueryExp on a MBean.

@param name The name of the MBean on which the InQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8231195 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end

      operation 8231323 "generateValueList"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1030811 "MatchQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent binary
relations.
@serial include

@since 1.5"
      classrelation 2027163 // <generalisation>
	relation 2027163 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2027163 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2027291 // <realization>
	relation 2027291 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2027291 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3016347 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7156603696948215014L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2027419 // exp (<unidirectional association>)
	relation 2027419 --->
	  a role_name "exp" private
	    comment "
@serial The attribute value to be matched

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2027419 // exp (<unidirectional association>)
	  b parent class_ref 1029275 // AttributeValueExp
      end

      attribute 3016475 "pattern"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The pattern to be matched
"
      end

      operation 8233115 "MatchQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8233243 "MatchQueryExp"
	public explicit_return_type ""
	nparams 2
	  param inout name "a" type class_ref 1029275 // AttributeValueExp
	  param inout name "s" type class_ref 1030939 // StringValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new MatchQueryExp where the specified AttributeValueExp matches
the specified pattern StringValueExp."
      end

      operation 8233371 "getAttribute"
	public return_type class_ref 1029275 // AttributeValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the attribute of the query."
      end

      operation 8233499 "getPattern"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pattern of the query."
      end

      operation 8233627 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the MatchQueryExp on a MBean.

@param name The name of the MBean on which the MatchQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.     

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8233755 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object"
      end

      operation 8233883 "likeTranslate"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8234011 "wildmatch"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "p" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether string s is matched by pattern p.
Supports \"?\", \"*\", \"[\", each of which may be escaped with \"\\\";
Character classes may use \"!\" for negation and \"-\" for range.
Not yet supported: internationalization; \"\\\" inside brackets.<P>
Wildcard matching routine by Karl Heuer.  Public Domain.<P>"
      end
    end

    class 1030939 "StringValueExp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents strings that are arguments to relational constraints.
A <CODE>StringValueExp</CODE> may be used anywhere a <CODE>ValueExp</CODE> is required.

@since 1.5"
      classrelation 2040219 // <realization>
	relation 2040219 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2040219 // <realization>
	  b parent class_ref 1029403 // ValueExp
      end

      attribute 3031451 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3256390509806284044L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3031579 "val"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The string literal
"
      end

      operation 8273947 "StringValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic constructor."
      end

      operation 8274075 "StringValueExp"
	public explicit_return_type ""
	nparams 1
	  param in name "val" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <CODE>StringValueExp</CODE> representing the
given string.

@param val the string that will be the value of this expression"
      end

      operation 8274203 "getValue"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string represented by the
<CODE>StringValueExp</CODE> instance.

@return the string."
      end

      operation 8274331 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end

      operation 8274459 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the MBean server on which the query is to be performed.

@param s The MBean server on which the query is to be performed."
      end

      operation 8274587 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the ValueExp on a MBean.

@param name The name of the MBean on which the ValueExp will be applied.

@return  The <CODE>ValueExp</CODE>.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end
    end

    class 1031067 "MBeanFeatureInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Provides general information for an MBean descriptor object.
The feature described can be an attribute, an operation, a
parameter, or a notification.  Instances of this class are
immutable.  Subclasses may be mutable but this is not
recommended.</p>

@since 1.5"
      classrelation 2027547 // <realization>
	relation 2027547 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2027547 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3016603 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  3952882688968447265L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3016731 "name"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the feature.  It is recommended that subclasses call
{@link #getName} rather than reading this field, and that they
not change it.

@serial The name of the feature.  
"
      end

      attribute 3016859 "description"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The human-readable description of the feature.  It is
recommended that subclasses call {@link #getDescription} rather
than reading this field, and that they not change it.

@serial The human-readable description of the feature.
"
      end

      operation 8234139 "MBeanFeatureInfo"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanFeatureInfo</CODE> object.

@param name The name of the feature.
@param description A human readable description of the feature. "
      end

      operation 8234267 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the feature.  

@return the name of the feature."
      end

      operation 8234395 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the human-readable description of the feature.

@return the human-readable description of the feature."
      end

      operation 8234523 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanFeatureInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanFeatureInfo such
that its {@link #getName()} and {@link #getDescription()}
values are equal (not necessarily identical) to those of this
MBeanFeatureInfo."
      end

      operation 8234651 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1031195 "MBeanParameterInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes an argument of an operation exposed by an MBean.
Instances of this class are immutable.  Subclasses may be mutable
but this is not recommended.

@since 1.5"
      classrelation 2031515 // <generalisation>
	relation 2031515 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2031515 // <generalisation>
	  b parent class_ref 1031067 // MBeanFeatureInfo
      end

      classrelation 2031643 // <realization>
	relation 2031643 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2031643 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2031771 // <realization>
	relation 2031771 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2031771 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3020187 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  7432616882776782338L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2031899 // NO_PARAMS (<unidirectional association>)
	relation 2031899 --->
	  a role_name "NO_PARAMS" multiplicity "[]" init_value "=  new MBeanParameterInfo[0]" class_relation const_relation package
	    comment " All zero-length arrays are interchangeable. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2031899 // NO_PARAMS (<unidirectional association>)
	  b parent class_ref 1031195 // MBeanParameterInfo
      end

      attribute 3020315 "type"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The type or class name of the data.  
"
      end

      operation 8242587 "MBeanParameterInfo"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "description" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <CODE>MBeanParameterInfo</CODE> object.

@param name The name of the data
@param type The type or class name of the data
@param description A human readable description of the data. Optional."
      end

      operation 8242715 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a shallow clone of this instance. 
The clone is obtained by simply calling <tt>super.clone()</tt>, 
thus calling the default native shallow cloning mechanism 
implemented by <tt>Object.clone()</tt>.
No deeper cloning of any internal field is made.</p>

<p>Since this class is immutable, cloning is chiefly of
interest to subclasses.</p>"
      end

      operation 8242843 "getType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type or class name of the data.  

@return the type string."
      end

      operation 8242971 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanParameterInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanParameterInfo such
that its {@link #getName()}, {@link #getType()}, and {@link
#getDescription()} values are equal (not necessarily identical)
to those of this MBeanParameterInfo."
      end

      operation 8243099 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1031323 "MBeanOperationInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes a management operation exposed by an MBean.  Instances of
this class are immutable.  Subclasses may be mutable but this is
not recommended.

@since 1.5"
      classrelation 2030875 // <generalisation>
	relation 2030875 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2030875 // <generalisation>
	  b parent class_ref 1031067 // MBeanFeatureInfo
      end

      classrelation 2031003 // <realization>
	relation 2031003 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2031003 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2031131 // <realization>
	relation 2031131 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2031131 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3019163 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -6178860474881375330L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2031259 // NO_OPERATIONS (<unidirectional association>)
	relation 2031259 --->
	  a role_name "NO_OPERATIONS" multiplicity "[]" init_value "= 
	new MBeanOperationInfo[0]" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2031259 // NO_OPERATIONS (<unidirectional association>)
	  b parent class_ref 1031323 // MBeanOperationInfo
      end

      attribute 3019291 "INFO"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the operation is read-like,
it basically returns information.
"
      end

      attribute 3019419 "ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1 "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the operation is a write-like,
and would modify the MBean in some way, typically by writing some value
or changing a configuration.
"
      end

      attribute 3019547 "ACTION_INFO"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the operation is both read-like and write-like.
"
      end

      attribute 3019675 "UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the operation has an \"unknown\" nature.
"
      end

      attribute 3019803 "type"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The method's return value.
"
      end

      classrelation 2031387 // signature (<unidirectional association>)
	relation 2031387 --->
	  a role_name "signature" multiplicity "[]" const_relation private
	    comment "
@serial The signature of the method, that is, the class names
of the arguments.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2031387 // signature (<unidirectional association>)
	  b parent class_ref 1031195 // MBeanParameterInfo
      end

      attribute 3019931 "impact"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The impact of the method, one of
        <CODE>INFO</CODE>,
        <CODE>ACTION</CODE>,
        <CODE>ACTION_INFO</CODE>,
        <CODE>UNKNOWN</CODE>
"
      end

      attribute 3020059 "immutable"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @see MBeanInfo#immutable "
      end

      operation 8241307 "MBeanOperationInfo"
	public explicit_return_type ""
	nparams 2
	  param in name "description" explicit_type "String"
	  param inout name "method" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanOperationInfo</CODE> object.

@param method The <CODE>java.lang.reflect.Method</CODE> object
describing the MBean operation.
@param description A human readable description of the operation."
      end

      operation 8241435 "MBeanOperationInfo"
	public explicit_return_type ""
	nparams 5
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "signature" type class_ref 1031195 // MBeanParameterInfo
	  param in name "type" explicit_type "String"
	  param in name "impact" explicit_type "int"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <CODE>MBeanOperationInfo</CODE> object.

@param name The name of the method.
@param description A human readable description of the operation.
@param signature <CODE>MBeanParameterInfo</CODE> objects
describing the parameters(arguments) of the method.  This may be
null with the same effect as a zero-length array.
@param type The type of the method's return value.
@param impact The impact of the method, one of <CODE>INFO,
ACTION, ACTION_INFO, UNKNOWN</CODE>."
      end

      operation 8241563 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a shallow clone of this instance.
The clone is obtained by simply calling <tt>super.clone()</tt>,
thus calling the default native shallow cloning mechanism
implemented by <tt>Object.clone()</tt>.
No deeper cloning of any internal field is made.</p>

<p>Since this class is immutable, cloning is chiefly of interest
to subclasses.</p>"
      end

      operation 8241691 "getReturnType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the method's return value.

@return the return type."
      end

      operation 8241819 "getSignature"
	public return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the list of parameters for this operation.  Each
parameter is described by an <CODE>MBeanParameterInfo</CODE>
object.</p>

<p>The returned array is a shallow copy of the internal array,
which means that it is a copy of the internal array of
references to the <CODE>MBeanParameterInfo</CODE> objects but
that each referenced <CODE>MBeanParameterInfo</CODE> object is
not copied.</p>

@return  An array of <CODE>MBeanParameterInfo</CODE> objects."
      end

      operation 8241947 "fastGetSignature"
	private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8242075 "getImpact"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the impact of the method, one of
<CODE>INFO</CODE>, <CODE>ACTION</CODE>, <CODE>ACTION_INFO</CODE>, <CODE>UNKNOWN</CODE>.

@return the impact code."
      end

      operation 8242203 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this MBeanOperationInfo to another.

@param o the object to compare to.

@return true iff <code>o</code> is an MBeanOperationInfo such
that its {@link #getName()}, {@link #getReturnType()}, {@link
#getDescription()}, {@link #getImpact()}, and {@link
#getSignature()} values are equal (not necessarily identical)
to those of this MBeanConstructorInfo.  Two signature arrays
are equal if their elements are pairwise equal."
      end

      operation 8242331 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We do not include everything in the hashcode.  We assume that
if two operations are different they'll probably have different
names or types.  The penalty we pay when this assumption is
wrong should be less than the penalty we would pay if it were
right and we needlessly hashed in the description and the
parameter array.  "
      end

      operation 8242459 "methodSignature"
	class_operation private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1031579 "MBeanPermission"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Permission controlling access to MBeanServer operations.  If a
security manager has been set using {@link
System#setSecurityManager}, most operations on the MBean Server
require that the caller's permissions imply an MBeanPermission
appropriate for the operation.  This is described in detail in the
documentation for the {@link MBeanServer} interface.</p>

<p>As with other {@link Permission} objects, an MBeanPermission can
represent either a permission that you <em>have</em> or a
permission that you <em>need</em>.  When a sensitive operation is
being checked for permission, an MBeanPermission is constructed
representing the permission you need.  The operation is only
allowed if the permissions you have {@link #implies imply} the
permission you need.</p>

<p>An MBeanPermission contains four items of information:</p>

<ul>

<li><p>The <em>action</em>.  For a permission you need,
this is one of the actions in the list <a
href=\"#action-list\">below</a>.  For a permission you have, this is
a comma-separated list of those actions, or <code>*</code>,
representing all actions.</p>

<p>The action is returned by {@link #getActions()}.</p>

<li><p>The <em>class name</em>.</p>

<p>For a permission you need, this is the class name of an MBean
you are accessing, as returned by {@link
MBeanServer#getMBeanInfo(ObjectName)
MBeanServer.getMBeanInfo(name)}.{@link MBeanInfo#getClassName()
getClassName()}.  Certain operations do not reference a class name,
in which case the class name is null.</p>

<p>For a permission you have, this is either empty or a <em>class
name pattern</em>.  A class name pattern is a string following the
Java conventions for dot-separated class names.  It may end with
\"<code>.*</code>\" meaning that the permission grants access to any
class that begins with the string preceding \"<code>.*</code>\".  For
instance, \"<code>javax.management.*</code>\" grants access to
<code>javax.management.MBeanServerDelegate</code> and
<code>javax.management.timer.Timer</code>, among other classes.</p>

<p>A class name pattern can also be empty or the single character
\"<code>*</code>\", both of which grant access to any class.</p>

<li><p>The <em>member</em>.</p>

<p>For a permission you need, this is the name of the attribute or
operation you are accessing.  For operations that do not reference
an attribute or operation, the member is null.</p>

<p>For a permission you have, this is either the name of an attribute
or operation you can access, or it is empty or the single character
\"<code>*</code>\", both of which grant access to any member.</p>

<li><p>The <em>object name</em>.</p>

<p>For a permission you need, this is the {@link ObjectName} of the
MBean you are accessing.  For operations that do not reference a
single MBean, it is null.  It is never an object name pattern.</p>

<p>For a permission you have, this is the {@link ObjectName} of the
MBean or MBeans you can access.  It may be an object name pattern
to grant access to all MBeans whose names match the pattern.  It
may also be empty, which grants access to all MBeans whatever their
name.</p>

</ul>

<p>If you have an MBeanPermission, it allows operations only if all
four of the items match.</p>

<p>The class name, member, and object name can be written together
as a single string, which is the <em>name</em> of this permission.
The name of the permission is the string returned by {@link
Permission#getName() getName()}.  The format of the string is:</p>

<blockquote>
<code>className#member[objectName]</code>
</blockquote>

<p>The object name is written using the usual syntax for {@link
ObjectName}.  It may contain any legal characters, including
<code>]</code>.  It is terminated by a <code>]</code> character
that is the last character in the string.</p>

<p>One or more of the <code>className</code>, <code>member</code>,
or <code>objectName</code> may be omitted.  If the
<code>member</code> is omitted, the <code>#</code> may be too (but
does not have to be).  If the <code>objectName</code> is omitted,
the <code>[]</code> may be too (but does not have to be).  It is
not legal to omit all three items, that is to have a <em>name</em>
that is the empty string.</p>

<p>One or more of the <code>className</code>, <code>member</code>,
or <code>objectName</code> may be the character \"<code>-</code>\",
which is equivalent to a null value.  A null value is implied by
any value (including another null value) but does not imply any
other value.</p>

<p><a name=\"action-list\">The possible actions are these:</a></p>

<ul>
<li>addNotificationListener</li>
<li>getAttribute</li>
<li>getClassLoader</li>
<li>getClassLoaderFor</li>
<li>getClassLoaderRepository</li>
<li>getDomains</li>
<li>getMBeanInfo</li>
<li>getObjectInstance</li>
<li>instantiate</li>
<li>invoke</li>
<li>isInstanceOf</li>
<li>queryMBeans</li>
<li>queryNames</li>
<li>registerMBean</li>
<li>removeNotificationListener</li>
<li>setAttribute</li>
<li>unregisterMBean</li>
</ul>

<p>In a comma-separated list of actions, spaces are allowed before
and after each action.</p>

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 2032027 // <generalisation>
	relation 2032027 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2032027 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      attribute 3020443 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2416928705275160661L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3020571 "AddNotificationListener"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Actions list.
"
      end

      attribute 3020699 "GetAttribute"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00002"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3020827 "GetClassLoader"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00004"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3020955 "GetClassLoaderFor"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00008"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021083 "GetClassLoaderRepository"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00010"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021211 "GetDomains"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00020"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021339 "GetMBeanInfo"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00040"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021467 "GetObjectInstance"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00080"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021595 "Instantiate"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021723 "Invoke"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021851 "IsInstanceOf"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3021979 "QueryMBeans"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022107 "QueryNames"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x01000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022235 "RegisterMBean"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x02000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022363 "RemoveNotificationListener"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x04000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022491 "SetAttribute"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x08000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022619 "UnregisterMBean"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3022747 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x00000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "No actions.
"
      end

      attribute 3022875 "ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value "= 
        AddNotificationListener    |
        GetAttribute               |
        GetClassLoader             |
        GetClassLoaderFor          |
        GetClassLoaderRepository   |
        GetDomains                 |
        GetMBeanInfo               |
        GetObjectInstance          |
        Instantiate                |
        Invoke                     |
        IsInstanceOf               |
        QueryMBeans                |
        QueryNames                 |
        RegisterMBean              |
        RemoveNotificationListener |
        SetAttribute               |
        UnregisterMBean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "All actions.
"
      end

      classrelation 2032155 // allObjectNames (<unidirectional association>)
	relation 2032155 --->
	  a role_name "allObjectNames" class_relation const_relation private
	    comment "
An ObjectName that matches any other.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2032155 // allObjectNames (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      extra_member 168987 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    allObjectNames = new ObjectName(\"*:*\");
	} catch (MalformedObjectNameException e) {
	    throw new IllegalArgumentException(\"can't happen\");
	}
    }"
	php ""
	python ""
	idl ""
      end

      attribute 3023003 "actions"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The actions string.
"
      end

      attribute 3023131 "mask"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The actions mask.
"
      end

      attribute 3023259 "classNamePrefix"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The classname prefix that must match.  If null, is implied by any
classNamePrefix but does not imply any non-null classNamePrefix.
"
      end

      attribute 3023387 "classNameExactMatch"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "True if classNamePrefix must match exactly.  Otherwise, the
className being matched must start with classNamePrefix.
"
      end

      attribute 3023515 "member"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The member that must match.  If null, is implied by any member
but does not imply any non-null member.
"
      end

      classrelation 2032283 // objectName (<unidirectional association>)
	relation 2032283 --->
	  a role_name "objectName" private
	    comment "
The objectName that must match.  If null, is implied by any
objectName but does not imply any non-null objectName.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2032283 // objectName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      operation 8243227 "parseActions"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse <code>actions</code> parameter."
      end

      operation 8243355 "parseName"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse <code>name</code> parameter."
      end

      operation 8243483 "initName"
	private explicit_return_type "void"
	nparams 3
	  param in name "className" explicit_type "String"
	  param in name "member" explicit_type "String"
	  param inout name "objectName" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assign fields based on className, member, and objectName
parameters."
      end

      operation 8243611 "setClassName"
	private explicit_return_type "void"
	nparams 1
	  param in name "className" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8243739 "setMember"
	private explicit_return_type "void"
	nparams 1
	  param in name "member" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8243867 "MBeanPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanPermission object with the specified target name
and actions.</p>

<p>The target name is of the form
\"<code>className#member[objectName]</code>\" where each part is
optional.  It must not be empty or null.</p>

<p>The actions parameter contains a comma-separated list of the
desired actions granted on the target name.  It must not be
empty or null.</p>

@param name the triplet \"className#member[objectName]\".
@param actions the action string.

@exception IllegalArgumentException if the <code>name</code> or
<code>actions</code> is invalid."
      end

      operation 8243995 "MBeanPermission"
	public explicit_return_type ""
	nparams 4
	  param in name "className" explicit_type "String"
	  param in name "member" explicit_type "String"
	  param inout name "objectName" type class_ref 510875 // ObjectName
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanPermission object with the specified target name
(class name, member, object name) and actions.</p>

<p>The class name, member and object name parameters define a
target name of the form
\"<code>className#member[objectName]</code>\" where each part is
optional.  This will be the result of {@link #getName()} on the
resultant MBeanPermission.</p>

<p>The actions parameter contains a comma-separated list of the
desired actions granted on the target name.  It must not be
empty or null.</p>

@param className the class name to which this permission applies.
May be null or <code>\"-\"</code>, which represents a class name
that is implied by any class name but does not imply any other
class name.
@param member the member to which this permission applies.  May
be null or <code>\"-\"</code>, which represents a member that is
implied by any member but does not imply any other member.
@param objectName the object name to which this permission
applies.  May be null, which represents an object name that is
implied by any object name but does not imply any other object
name.
@param actions the action string."
      end

      operation 8244123 "makeName"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "className" explicit_type "String"
	  param in name "member" explicit_type "String"
	  param inout name "objectName" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8244251 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions. That is,
this method always returns present actions in alphabetical order.

@return the canonical string representation of the actions."
      end

      operation 8244379 "getActions"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\"
of the actions from the mask."
      end

      operation 8244507 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 8244635 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an action String to an integer action mask.

@param action the action string.
@return the action mask."
      end

      operation 8244763 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Checks if this MBeanPermission object \"implies\" the
specified permission.</p>

<p>More specifically, this method returns true if:</p>

<ul>

<li> <i>p</i> is an instance of MBeanPermission; and</li>

<li> <i>p</i> has a null className or <i>p</i>'s className
matches this object's className; and</li>

<li> <i>p</i> has a null member or <i>p</i>'s member matches this
object's member; and</li>

<li> <i>p</i> has a null object name or <i>p</i>'s
object name matches this object's object name; and</li>

<li> <i>p</i>'s actions are a subset of this object's actions</li>

</ul>

<p>If this object's className is \"<code>*</code>\", <i>p</i>'s
className always matches it.  If it is \"<code>a.*</code>\", <i>p</i>'s
className matches it if it begins with \"<code>a.</code>\".</p>

<p>If this object's member is \"<code>*</code>\", <i>p</i>'s
member always matches it.</p>

<p>If this object's objectName <i>n1</i> is an object name pattern,
<i>p</i>'s objectName <i>n2</i> matches it if
{@link ObjectName#equals <i>n1</i>.equals(<i>n2</i>)} or if
{@link ObjectName#apply <i>n1</i>.apply(<i>n2</i>)}.</p>

<p>A permission that includes the <code>queryMBeans</code> action
is considered to include <code>queryNames</code> as well.</p>

@param p the permission to check against.
@return true if the specified permission is implied by this object,
false if not."
      end

      operation 8244891 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two MBeanPermission objects for equality. Checks
that <i>obj</i> is an MBeanPermission, and has the same
name and actions as this object.
<P>
@param obj the object we are testing for equality with this object.
@return true if obj is an MBeanPermission, and has the
same name and actions as this MBeanPermission object."
      end

      operation 8245019 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserialize this object based on its name and actions."
      end
    end

    class 1031707 "MBeanServerFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Provides MBean server references.  There are no instances of
this class.</p>

<p>Since JMX 1.2 this class makes it possible to replace the default
MBeanServer implementation. This is done using the 
{@link javax.management.MBeanServerBuilder} class.
The class of the initial MBeanServerBuilder to be
instantiated can be specified through the 
<b>javax.management.builder.initial</b> system property. 
The specified class must be a public subclass of 
{@link javax.management.MBeanServerBuilder}, and must have a public
empty constructor.
<p>By default, if no value for that property is specified, an instance of
{@link 
javax.management.MBeanServerBuilder javax.management.MBeanServerBuilder} 
is created. Otherwise, the MBeanServerFactory attempts to load the 
specified class using 
{@link java.lang.Thread#getContextClassLoader() 
  Thread.currentThread().getContextClassLoader()}, or if that is null, 
{@link java.lang.Class#forName(java.lang.String) Class.forName()}. Then
it creates an initial instance of that Class using 
{@link java.lang.Class#newInstance()}. If any checked exception
is raised during this process (e.g. 
{@link java.lang.ClassNotFoundException}, 
{@link java.lang.InstantiationException}) the MBeanServerFactory 
will propagate this exception from within a RuntimeException.</p>

<p>The <b>javax.management.builder.initial</b> system property is 
consulted every time a new MBeanServer needs to be created, and the
class pointed to by that property is loaded. If that class is different
from that of the current MBeanServerBuilder, then a new MBeanServerBuilder
is created. Otherwise, the MBeanServerFactory may create a new 
MBeanServerBuilder or reuse the current one.</p>

<p>If the class pointed to by the property cannot be 
loaded, or does not correspond to a valid subclass of MBeanServerBuilder
then an exception is propagated, and no MBeanServer can be created until
the <b>javax.management.builder.initial</b> system property is reset to
valid value.</p>

<p>The MBeanServerBuilder makes it possible to wrap the MBeanServers 
returned by the default MBeanServerBuilder implementation, for the purpose
of e.g. adding an additional security layer.</p>

@since 1.5"
      operation 8245403 "MBeanServerFactory"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "There are no instances of this class so don't generate the
default public constructor."
      end

      classrelation 2032539 // builder (<unidirectional association>)
	relation 2032539 --->
	  a role_name "builder" init_value "=  null" class_relation private
	    comment "
The builder that will be used to construct MBeanServers.

@since.unbundled JMX 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2032539 // builder (<unidirectional association>)
	  b parent class_ref 515867 // MBeanServerBuilder
      end

      operation 8245531 "releaseMBeanServer"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "mbeanServer" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide a new {@link javax.management.MBeanServerBuilder}.
@param builder The new MBeanServerBuilder that will be used to
       create {@link javax.management.MBeanServer}s. 
@exception IllegalArgumentException if the given builder is null.

@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"setMBeanServerBuilder\")</code>.

@since.unbundled JMX 1.2

 public static synchronized void 
    setMBeanServerBuilder(MBeanServerBuilder builder) {
    checkPermission(\"setMBeanServerBuilder\");
    MBeanServerFactory.builder = builder;
 }

Get the current {@link javax.management.MBeanServerBuilder}.

@return the current {@link javax.management.MBeanServerBuilder}.

@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"getMBeanServerBuilder\")</code>.

@since.unbundled JMX 1.2

 public static synchronized MBeanServerBuilder getMBeanServerBuilder() {
     checkPermission(\"getMBeanServerBuilder\");
     return builder;
 }

Remove internal MBeanServerFactory references to a created
MBeanServer. This allows the garbage collector to remove the
MBeanServer object.

@param mbeanServer the MBeanServer object to remove.

@exception java.lang.IllegalArgumentException if
<code>mbeanServer</code> was not generated by one of the
<code>createMBeanServer</code> methods, or if
<code>releaseMBeanServer</code> was already called on it.

@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"releaseMBeanServer\")</code>."
      end

      operation 8245659 "createMBeanServer"
	class_operation public return_type class_ref 513179 // MBeanServer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new object implementing the MBeanServer interface
with a standard default domain name.  The default domain name
is used as the domain part in the ObjectName of MBeans when the
domain is specified by the user is null.</p>

<p>The standard default domain name is
<code>DefaultDomain</code>.</p>

<p>The MBeanServer reference is internally kept. This will
allow <CODE>findMBeanServer</CODE> to return a reference to
this MBeanServer object.</p>

<p>This method is equivalent to <code>createMBeanServer(null)</code>.

@return the newly created MBeanServer.

@exception SecurityException if there is a SecurityManager and the 
caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"createMBeanServer\")</code>.

@exception JMRuntimeException if the property
<code>javax.management.builder.initial</code> exists but the
class it names cannot be instantiated through a public
no-argument constructor; or if the instantiated builder returns
null from its {@link MBeanServerBuilder#newMBeanServerDelegate
newMBeanServerDelegate} or {@link
MBeanServerBuilder#newMBeanServer newMBeanServer} methods.

@exception ClassCastException if the property
<code>javax.management.builder.initial</code> exists and can be
instantiated but is not assignment compatible with {@link
MBeanServerBuilder}."
      end

      operation 8245787 "createMBeanServer"
	class_operation public return_type class_ref 513179 // MBeanServer
	nparams 1
	  param in name "domain" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new object implementing the {@link MBeanServer}
interface with the specified default domain name.  The given
domain name is used as the domain part in the ObjectName of
MBeans when the domain is specified by the user is null.</p>

<p>The MBeanServer reference is internally kept. This will
allow <CODE>findMBeanServer</CODE> to return a reference to
this MBeanServer object.</p>

@param domain the default domain name for the created
MBeanServer.  This is the value that will be returned by {@link
MBeanServer#getDefaultDomain}.

@return the newly created MBeanServer.

@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"createMBeanServer\")</code>.

@exception JMRuntimeException if the property
<code>javax.management.builder.initial</code> exists but the
class it names cannot be instantiated through a public
no-argument constructor; or if the instantiated builder returns
null from its {@link MBeanServerBuilder#newMBeanServerDelegate
newMBeanServerDelegate} or {@link
MBeanServerBuilder#newMBeanServer newMBeanServer} methods.

@exception ClassCastException if the property
<code>javax.management.builder.initial</code> exists and can be
instantiated but is not assignment compatible with {@link
MBeanServerBuilder}."
      end

      operation 8245915 "newMBeanServer"
	class_operation public return_type class_ref 513179 // MBeanServer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new object implementing the MBeanServer interface
with a standard default domain name, without keeping an
internal reference to this new object.  The default domain name
is used as the domain part in the ObjectName of MBeans when the
domain is specified by the user is null.</p>

<p>The standard default domain name is
<code>DefaultDomain</code>.</p>

<p>No reference is kept. <CODE>findMBeanServer</CODE> will not
be able to return a reference to this MBeanServer object, but
the garbage collector will be able to remove the MBeanServer
object when it is no longer referenced.</p>

<p>This method is equivalent to <code>newMBeanServer(null)</code>.</p>

@return the newly created MBeanServer.

@exception SecurityException if there is a SecurityManager and the 
caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"newMBeanServer\")</code>.

@exception JMRuntimeException if the property
<code>javax.management.builder.initial</code> exists but the
class it names cannot be instantiated through a public
no-argument constructor; or if the instantiated builder returns
null from its {@link MBeanServerBuilder#newMBeanServerDelegate
newMBeanServerDelegate} or {@link
MBeanServerBuilder#newMBeanServer newMBeanServer} methods.

@exception ClassCastException if the property
<code>javax.management.builder.initial</code> exists and can be
instantiated but is not assignment compatible with {@link
MBeanServerBuilder}."
      end

      operation 8246043 "newMBeanServer"
	class_operation public return_type class_ref 513179 // MBeanServer
	nparams 1
	  param in name "domain" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a new object implementing the MBeanServer interface
with the specified default domain name, without keeping an
internal reference to this new object.  The given domain name
is used as the domain part in the ObjectName of MBeans when the
domain is specified by the user is null.</p>

<p>No reference is kept. <CODE>findMBeanServer</CODE> will not
be able to return a reference to this MBeanServer object, but
the garbage collector will be able to remove the MBeanServer
object when it is no longer referenced.</p>

@param domain the default domain name for the created
MBeanServer.  This is the value that will be returned by {@link
MBeanServer#getDefaultDomain}.

@return the newly created MBeanServer.

@exception SecurityException if there is a SecurityManager and the 
caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"newMBeanServer\")</code>.

@exception JMRuntimeException if the property
<code>javax.management.builder.initial</code> exists but the
class it names cannot be instantiated through a public
no-argument constructor; or if the instantiated builder returns
null from its {@link MBeanServerBuilder#newMBeanServerDelegate
newMBeanServerDelegate} or {@link
MBeanServerBuilder#newMBeanServer newMBeanServer} methods.

@exception ClassCastException if the property
<code>javax.management.builder.initial</code> exists and can be
instantiated but is not assignment compatible with {@link
MBeanServerBuilder}."
      end

      operation 8246171 "findMBeanServer"
	class_operation public return_type class_ref 137627 // ArrayList
	nparams 1
	  param in name "agentId" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a list of registered MBeanServer objects.  A
registered MBeanServer object is one that was created by one of
the <code>createMBeanServer</code> methods and not subsequently
released with <code>releaseMBeanServer</code>.</p>

@param agentId The agent identifier of the MBeanServer to
retrieve.  If this parameter is null, all registered
MBeanServers in this JVM are returned.  Otherwise, only
MBeanServers whose id is equal to <code>agentId</code> are
returned.  The id of an MBeanServer is the
<code>MBeanServerId</code> attribute of its delegate MBean.

@return A list of MBeanServer objects.

@exception SecurityException if there is a SecurityManager and the 
caller's permissions do not include or imply <code>{@link
MBeanServerPermission}(\"findMBeanServer\")</code>."
      end

      operation 8246299 "getClassLoaderRepository"
	class_operation public return_type class_ref 514331 // ClassLoaderRepository
	nparams 1
	  param inout name "server" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ClassLoaderRepository used by the given MBeanServer.
This method is equivalent to {@link MBeanServer#getClassLoaderRepository() server.getClassLoaderRepository()}.
@param server The MBeanServer under examination. Since JMX 1.2,
if <code>server</code> is <code>null</code>, the result is a
{@link NullPointerException}.  This behavior differs from what
was implemented in JMX 1.1 - where the possibility to use
<code>null</code> was deprecated.
@return The Class Loader Repository used by the given MBeanServer.
@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not include or imply <code>{@link
MBeanPermission}(\"getClassLoaderRepository\")</code>.

@exception NullPointerException if <code>server</code> is null.

@since.unbundled JMX 1.1"
      end

      classrelation 2032667 // delegateName (<unidirectional association>)
	relation 2032667 --->
	  a role_name "delegateName" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2032667 // delegateName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      extra_member 169115 "initialization"
	
	cpp "" ""
	java "  static {
	ObjectName name;
	try {
	    name = new ObjectName(ServiceName.DELEGATE);
	} catch (JMException e) {
	    /* This can only happen if ServiceName.DELEGATE is an invalid
	       ObjectName, which means serious brokenness!  */
	    name = null;
	    trace(\"<clinit>\",
		  \"internal error creating delegate ObjectName: \" + e);
	}
	delegateName = name;
    }"
	php ""
	python ""
	idl ""
      end

      operation 8246427 "mBeanServerName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param inout name "mbs" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8246555 "checkPermission"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "String"
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8246683 "addMBeanServer"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8246811 "removeMBeanServer"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2032795 // mBeanServerList (<unidirectional association>)
	relation 2032795 --->
	  a role_name "mBeanServerList" init_value "=  new ArrayList()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2032795 // mBeanServerList (<unidirectional association>)
	  b parent class_ref 137627 // ArrayList
      end

      operation 8246939 "loadBuilderClass"
	class_operation private return_type class_ref 164635 // Class
	nparams 1
	  param in name "builderClassName" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load the builder class through the context class loader.
@param builderClassName The name of the builder class."
      end

      operation 8247067 "newBuilder"
	class_operation private return_type class_ref 515867 // MBeanServerBuilder
	nparams 1
	  param inout name "builderClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the initial builder according to the 
javax.management.builder.initial System property - if specified.
If any checked exception needs to be thrown, it is embedded in
a JMRuntimeException."
      end

      operation 8247195 "checkMBeanServerBuilder"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new builder according to the 
javax.management.builder.initial System property - if needed."
      end

      operation 8247323 "getNewMBeanServerBuilder"
	class_operation private return_type class_ref 515867 // MBeanServerBuilder
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current {@link javax.management.MBeanServerBuilder},
as specified by the current value of the 
javax.management.builder.initial property.

This method consults the property and instantiates a new builder
if needed.

@return the new current {@link javax.management.MBeanServerBuilder}.

@exception SecurityException if there is a SecurityManager and 
the caller's permissions do not make it possible to instantiate
a new builder.
@exception JMRuntimeException if the builder instantiation
  fails with a checked exception - 
  {@link java.lang.ClassNotFoundException} etc...

@since.unbundled JMX 1.2"
      end

      operation 8247451 "trace"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "method" explicit_type "String"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private Stuff *"
      end

      operation 8247579 "debug"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "method" explicit_type "String"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private Stuff *"
      end

      operation 8247707 "error"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "method" explicit_type "String"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private Stuff *"
      end
    end

    class 1031835 "MBeanServerInvocationHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>{@link InvocationHandler} that forwards methods in an MBean's
management interface through the MBean server to the MBean.</p>

<p>Given an {@link MBeanServerConnection}, the {@link ObjectName}
of an MBean within that MBean server, and a Java interface
<code>Intf</code> that describes the management interface of the
MBean using the patterns for a Standard MBean, this class can be
used to construct a proxy for the MBean.  The proxy implements
the interface <code>Intf</code> such that all of its methods are
forwarded through the MBean server to the MBean.</p>

<p>If you have an MBean server <code>mbs</code> containing an MBean
with {@link ObjectName} <code>name</code>, and if the MBean's
management interface is described by the Java interface
<code>Intf</code>, you can construct a proxy for the MBean like
this:</p>

<pre>
Intf proxy = (Intf)
    MBeanServerInvocationHandler.{@link #newProxyInstance newProxyInstance}(mbs,
                                                  name,
                                                  Intf.class,
                                                  false);
</pre>

<p>Suppose, for example, <code>Intf</code> looks like this:</p>

<pre>
public interface Intf {
    public String getSomeAttribute();
    public void setSomeAttribute(String value);
    public void someOperation(String param1, int param2);
}
</pre>

<p>Then you can execute:</p>

<ul>

<li><code>proxy.getSomeAttribute()</code> which will result in a
call to <code>mbs.</code>{@link MBeanServerConnection#getAttribute
getAttribute}<code>(name, \"SomeAttribute\")</code>.

<li><code>proxy.setSomeAttribute(\"whatever\")</code> which will result
in a call to <code>mbs.</code>{@link MBeanServerConnection#setAttribute
setAttribute}<code>(name, new Attribute(\"SomeAttribute\", \"whatever\"))</code>.

<li><code>proxy.someOperation(\"param1\", 2)</code> which will be
translated into a call to <code>mbs.</code>{@link
MBeanServerConnection#invoke invoke}<code>(name, \"someOperation\", &lt;etc&gt;)</code>.

</ul>

<p>If the last parameter to {@link #newProxyInstance
newProxyInstance} is <code>true</code>, then the MBean is assumed
to be a {@link NotificationBroadcaster} or {@link
NotificationEmitter} and the returned proxy will implement {@link
NotificationEmitter}.  A call to {@link
NotificationBroadcaster#addNotificationListener} on the proxy will
result in a call to {@link
MBeanServerConnection#addNotificationListener(ObjectName,
NotificationListener, NotificationFilter, Object)}, and likewise
for the other methods of {@link NotificationBroadcaster} and {@link
NotificationEmitter}.</p>

<p>The methods {@link Object#toString()}, {@link Object#hashCode()},
and {@link Object#equals(Object)}, when invoked on a proxy using
this invocation handler, are forwarded to the MBean server as
methods on the proxied MBean.  This will only work if the MBean
declares those methods in its management interface.</p>

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 2032923 // <realization>
	relation 2032923 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2032923 // <realization>
	  b parent class_ref 288411 // InvocationHandler
      end

      operation 8247835 "MBeanServerInvocationHandler"
	public explicit_return_type ""
	nparams 2
	  param inout name "connection" type class_ref 510619 // MBeanServerConnection
	  param inout name "objectName" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Invocation handler that forwards methods through an MBean
server.  This constructor may be called instead of relying on
{@link #newProxyInstance}, for instance if you need to supply a
different {@link ClassLoader} to {@link
Proxy#newProxyInstance Proxy.newProxyInstance}.</p>

@param connection the MBean server connection through which all
methods of a proxy using this handler will be forwarded.

@param objectName the name of the MBean within the MBean server
to which methods will be forwarded."
      end

      operation 8247963 "newProxyInstance"
	class_operation public explicit_return_type "Object"
	nparams 4
	  param inout name "connection" type class_ref 510619 // MBeanServerConnection
	  param inout name "objectName" type class_ref 510875 // ObjectName
	  param inout name "interfaceClass" type class_ref 164635 // Class
	  param inout name "notificationBroadcaster" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return a proxy that implements the given interface by
forwarding its methods through the given MBean server to the
named MBean.</p>

<p>This method is equivalent to {@link Proxy#newProxyInstance
Proxy.newProxyInstance}<code>(interfaceClass.getClassLoader(),
interfaces, handler)</code>.  Here <code>handler</code> is the
result of {@link #MBeanServerInvocationHandler new
MBeanServerInvocationHandler(connection, objectName)}, and
<code>interfaces</code> is an array that has one element if
<code>notificationBroadcaster</code> is false and two if it is
true.  The first element of <code>interfaces</code> is
<code>interfaceClass</code> and the second, if present, is
<code>NotificationEmitter.class</code>.

@param connection the MBean server to forward to.
@param objectName the name of the MBean within
<code>connection</code> to forward to.
@param interfaceClass the management interface that the MBean
exports, which will also be implemented by the returned proxy.
@param notificationBroadcaster make the returned proxy
implement {@link NotificationEmitter} by forwarding its methods
via <code>connection</code>.

@return the new proxy instance."
      end

      operation 8248091 "invoke"
	public explicit_return_type "Object"
	nparams 3
	  param inout name "proxy" explicit_type "Object"
	  param inout name "method" type class_ref 170651 // Method
	  param inout name "args" explicit_type "Object"
	nexceptions 1
	  exception class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8248219 "invokeBroadcasterMethod"
	private explicit_return_type "Object"
	nparams 3
	  param inout name "proxy" explicit_type "Object"
	  param inout name "method" type class_ref 170651 // Method
	  param inout name "args" explicit_type "Object"
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2033051 // connection (<unidirectional association>)
	relation 2033051 --->
	  a role_name "connection" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2033051 // connection (<unidirectional association>)
	  b parent class_ref 510619 // MBeanServerConnection
      end

      classrelation 2033179 // objectName (<unidirectional association>)
	relation 2033179 --->
	  a role_name "objectName" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2033179 // objectName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end
    end

    class 1031963 "MBeanServerPermission"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A Permission to perform actions related to MBeanServers.
The <em>name</em> of the permission specifies the operation requested
or granted by the permission.  For a granted permission, it can be
<code>*</code> to allow all of the MBeanServer operations specified below.
Otherwise, for a granted or requested permission, it must be one of the
following:
<dl>
<dt>createMBeanServer</dt>
<dd>Create a new MBeanServer object using the method
{@link MBeanServerFactory#createMBeanServer()} or
{@link MBeanServerFactory#createMBeanServer(java.lang.String)}.
<dt>findMBeanServer</dt>
<dd>Find an MBeanServer with a given name, or all MBeanServers in this
JVM, using the method {@link MBeanServerFactory#findMBeanServer}.
<dt>newMBeanServer</dt>
<dd>Create a new MBeanServer object without keeping a reference to it,
using the method {@link MBeanServerFactory#newMBeanServer()} or
{@link MBeanServerFactory#newMBeanServer(java.lang.String)}.
<dt>releaseMBeanServer</dt>
<dd>Remove the MBeanServerFactory's reference to an MBeanServer,
using the method {@link MBeanServerFactory#releaseMBeanServer}.
</dl>
The <em>name</em> of the permission can also denote a list of one or more
comma-separated operations.  Spaces are allowed at the beginning and
end of the <em>name</em> and before and after commas.
<p>
<code>MBeanServerPermission(\"createMBeanServer\")</code> implies
<code>MBeanServerPermission(\"newMBeanServer\")</code>.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2033563 // <generalisation>
	relation 2033563 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2033563 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      attribute 3024155 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5661980843569388590L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024283 "CREATE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024411 "FIND"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024539 "NEW"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024667 "RELEASE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024795 "N_NAMES"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3024923 "names"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  {
	\"createMBeanServer\",
	\"findMBeanServer\",
	\"newMBeanServer\",
	\"releaseMBeanServer\",
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025051 "CREATE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1<<CREATE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025179 "FIND_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1<<FIND"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025307 "NEW_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1<<NEW"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025435 "RELEASE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1<<RELEASE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025563 "ALL_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  CREATE_MASK|FIND_MASK|NEW_MASK|RELEASE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3025691 "canonicalNames"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[1 << N_NAMES]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Map from permission masks to canonical names.  This array is
filled in on demand.

This isn't very scalable.  If we have more than five or six
permissions, we should consider doing this differently,
e.g. with a Map.
"
      end

      attribute 3025819 "mask"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The target names mask.  This is not private to avoid having to
generate accessor methods for accesses from the collection class.

This mask includes implied bits.  So if it has CREATE_MASK then
it necessarily has NEW_MASK too.
"
      end

      operation 8248603 "MBeanServerPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Create a new MBeanServerPermission with the given name.</p>
<p>This constructor is equivalent to
<code>MBeanServerPermission(name,null)</code>.</p>
@param name the name of the granted permission.  It must
respect the constraints spelt out in the description of the
{@link MBeanServerPermission} class.
@exception NullPointerException if the name is null.
@exception IllegalArgumentException if the name is not
<code>*</code> or one of the allowed names or a comma-separated
list of the allowed names."
      end

      operation 8248731 "MBeanServerPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Create a new MBeanServerPermission with the given name.</p>
@param name the name of the granted permission.  It must
respect the constraints spelt out in the description of the
{@link MBeanServerPermission} class.
@param actions the associated actions.  This parameter is not
currently used and must be null or the empty string.
@exception NullPointerException if the name is null.
@exception IllegalArgumentException if the name is not
<code>*</code> or one of the allowed names or a comma-separated
list of the allowed names, or if <code>actions</code> is a non-null
non-empty string.  "
      end

      operation 8248859 "MBeanServerPermission"
	package explicit_return_type ""
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8248987 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249115 "simplifyMask"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249243 "impliedMask"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249371 "getCanonicalName"
	class_operation package explicit_return_type "String"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249499 "makeCanonicalName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249627 "parseMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convert the string into a bitmask, including bits that
are implied by the permissions in the string.  "
      end

      operation 8249755 "nameIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8249883 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8250011 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Checks if this MBeanServerPermission object \"implies\" the specified
permission.</p>

<p>More specifically, this method returns true if:</p>

<ul>
<li> <i>p</i> is an instance of MBeanServerPermission,</li>
<li> <i>p</i>'s target names are a subset of this object's target
names</li>
</ul>

<p>The <code>createMBeanServer</code> permission implies the
<code>newMBeanServer</code> permission.</p>

@param p the permission to check against.
@return true if the specified permission is implied by this object,
false if not."
      end

      operation 8250139 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two MBeanServerPermission objects for equality. Checks that
<i>obj</i> is an MBeanServerPermission, and represents the same
list of allowable actions as this object.
<P>
@param obj the object we are testing for equality with this object.
@return true if the objects are equal."
      end

      operation 8250267 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1032091 "MBeanServerPermissionCollection"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class returned by {@link MBeanServerPermission#newPermissionCollection()}.

@serial include


Since every collection of MBSP can be represented by a single MBSP,
that is what our PermissionCollection does.  We need to define a
PermissionCollection because the one inherited from BasicPermission
doesn't know that createMBeanServer implies newMBeanServer.

Though the serial form is defined, the TCK does not check it.  We do
not require independent implementations to duplicate it.  Even though
PermissionCollection is Serializable, instances of this class will
hardly ever be serialized, and different implementations do not
typically exchange serialized permission collections.

If we did require that a particular form be respected here, we would
logically also have to require it for
MBeanPermission.newPermissionCollection, which would preclude an
implementation from defining a PermissionCollection there with an
optimized \"implies\" method."
      classrelation 2033691 // <generalisation>
	relation 2033691 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2033691 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 2033819 // collectionPermission (<unidirectional association>)
	relation 2033819 --->
	  a role_name "collectionPermission" private
	    comment " @serial Null if no permissions in collection, otherwise a
single permission that is the union of all permissions that
have been added.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2033819 // collectionPermission (<unidirectional association>)
	  b parent class_ref 1031963 // MBeanServerPermission
      end

      attribute 3025947 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5661980843569388590L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8250395 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8250523 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8250651 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1032219 "MBeanTrustPermission"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This permission represents \"trust\" in a signer or codebase.
<p>
MBeanTrustPermission contains a target name but no actions list.
A single target name, \"register\", is defined for this permission.
The target \"*\" is also allowed, permitting \"register\" and any future
targets that may be defined.
Only the null value or the empty string are allowed for the action
to allow the policy object to create the permissions specified in
the policy file.
<p>
If a signer, or codesource is granted this permission, then it is
considered a trusted source for MBeans. Only MBeans from trusted
sources may be registered in the MBeanServer.

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 2033947 // <generalisation>
	relation 2033947 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2033947 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      attribute 3026075 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2952178077029018140L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8250779 "MBeanTrustPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Create a new MBeanTrustPermission with the given name.</p>
<p>This constructor is equivalent to
<code>MBeanTrustPermission(name,null)</code>.</p>
@param name the name of the permission. It must be
\"register\" or \"*\" for this permission.
@exception NullPointerException if the name is null.
@exception IllegalArgumentException if the name is neither
\"register\" nor \"*\"."
      end

      operation 8250907 "MBeanTrustPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Create a new MBeanTrustPermission with the given name.</p>
@param name the name of the permission. It must be
\"register\" or \"*\" for this permission.
@param actions the actions for the permission.  It must be
null or <code>\"\"</code>.
@exception NullPointerException if the name is null.
@exception IllegalArgumentException if the name is neither
\"register\" nor \"*\"; or if <code>actions</code> is a non-null
non-empty string."
      end
    end

    class 1032475 "NotificationFilterSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides an implementation of the {@link javax.management.NotificationFilter} interface.
The filtering is performed on the notification type attribute.
<P>
Manages a list of enabled notification types. 
A method allows users to enable/disable as many notification types as required.
<P>
Then, before sending a notification to a listener registered with a filter, 
the notification broadcaster compares this notification type with all notification types 
enabled by the filter. The notification will be sent to the listener
only if its filter enables this notification type.
<P>
Example:
<BLOCKQUOTE>
<PRE>
NotificationFilterSupport myFilter = new NotificationFilterSupport();
myFilter.enableType(\"my_example.my_type\");
myBroadcaster.addListener(myListener, myFilter, null);
</PRE>
</BLOCKQUOTE>
The listener <CODE>myListener</CODE> will only receive notifications the type of which equals/starts with \"my_example.my_type\".

@see javax.management.NotificationBroadcaster#addNotificationListener

@since 1.5"
      classrelation 2034715 // <realization>
	relation 2034715 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2034715 // <realization>
	  b parent class_ref 512539 // NotificationFilter
      end

      classrelation 2034843 // <realization>
	relation 2034843 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2034843 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3026587 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6579080007561786969L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2034971 // enabledTypes (<unidirectional association>)
	relation 2034971 --->
	  a role_name "enabledTypes" init_value "=  new Vector()" private
	    comment "
@serial {@link Vector} that contains the enabled notification types.
        The default value is an empty vector.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2034971 // enabledTypes (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8252315 "isNotificationEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "notification" type class_ref 513819 // Notification
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked before sending the specified notification to the listener.
<BR>This filter compares the type of the specified notification with each enabled type.
If the notification type matches one of the enabled types,
the notification should be sent to the listener and this method returns <CODE>true</CODE>.
  
@param notification The notification to be sent.
@return <CODE>true</CODE> if the notification should be sent to the listener, <CODE>false</CODE> otherwise."
      end

      operation 8252443 "enableType"
	public explicit_return_type "void"
	nparams 1
	  param in name "prefix" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables all the notifications the type of which starts with the specified prefix
to be sent to the listener.
<BR>If the specified prefix is already in the list of enabled notification types,
this method has no effect.
<P>
Example:
<BLOCKQUOTE>
<PRE>
// Enables all notifications the type of which starts with \"my_example\" to be sent.
myFilter.enableType(\"my_example\");
// Enables all notifications the type of which is \"my_example.my_type\" to be sent.
myFilter.enableType(\"my_example.my_type\");
</PRE>
</BLOCKQUOTE>
  
Note that:
<BLOCKQUOTE><CODE>
myFilter.enableType(\"my_example.*\");
</CODE></BLOCKQUOTE>
will no match any notification type.

@param prefix The prefix.
@exception java.lang.IllegalArgumentException The prefix parameter is null."
      end

      operation 8252571 "disableType"
	public explicit_return_type "void"
	nparams 1
	  param in name "prefix" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given prefix from the prefix list.
<BR>If the specified prefix is not in the list of enabled notification types,
this method has no effect.
  
@param prefix The prefix."
      end

      operation 8252699 "disableAllTypes"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables all notification types."
      end

      operation 8252827 "getEnabledTypes"
	public return_type class_ref 153883 // Vector
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the enabled notification types for this filter.

@return The list containing all the enabled notification types."
      end
    end

    class 1032603 "NotQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent negations
of relational expressions.
@serial include

@since 1.5"
      classrelation 2035099 // <generalisation>
	relation 2035099 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2035099 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2035227 // <realization>
	relation 2035227 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2035227 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3026715 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5269643775896723397L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2035355 // exp (<unidirectional association>)
	relation 2035355 --->
	  a role_name "exp" private
	    comment "
@serial The negated {@link QueryExp}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2035355 // exp (<unidirectional association>)
	  b parent class_ref 511771 // QueryExp
      end

      operation 8252955 "NotQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8253083 "NotQueryExp"
	public explicit_return_type ""
	nparams 1
	  param inout name "q" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new NotQueryExp for negating the specified QueryExp."
      end

      operation 8253211 "getNegatedExp"
	public return_type class_ref 511771 // QueryExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the negated query expression of the query."
      end

      operation 8253339 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the NotQueryExp on a MBean.

@param name The name of the MBean on which the NotQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.
    
@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8253467 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object."
      end
    end

    class 1032731 "NumericValueExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents numbers that are arguments to relational constraints.
A NumericValueExp may be used anywhere a ValueExp is required.

@serial include

@since 1.5"
      classrelation 2035483 // <generalisation>
	relation 2035483 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2035483 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2035611 // <realization>
	relation 2035611 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2035611 // <realization>
	  b parent class_ref 1029403 // ValueExp
      end

      attribute 3026843 "oldSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -6227876276058904000L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serialization compatibility stuff:
 Two serial forms are supported in this class. The selected form depends
 on system property \"jmx.serial.form\":
  - \"1.0\" for JMX 1.0
  - any other value for JMX 1.1 and higher

 Serial version for old serial form "
      end

      attribute 3026971 "newSerialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4679739485102359104L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version for new serial form "
      end

      classrelation 2035739 // oldSerialPersistentFields (<unidirectional association>)
	relation 2035739 --->
	  a role_name "oldSerialPersistentFields" multiplicity "[]" init_value "=  
    {
	new ObjectStreamField(\"longVal\", Long.TYPE),
	new ObjectStreamField(\"doubleVal\", Double.TYPE),
	new ObjectStreamField(\"valIsLong\", Boolean.TYPE)
    }" class_relation const_relation private
	    comment " Serializable fields in old serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2035739 // oldSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      classrelation 2035867 // newSerialPersistentFields (<unidirectional association>)
	relation 2035867 --->
	  a role_name "newSerialPersistentFields" multiplicity "[]" init_value "=  
    {
	new ObjectStreamField(\"val\", Number.class)
    }" class_relation const_relation private
	    comment " Serializable fields in new serial form
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2035867 // newSerialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 3027099 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Actual serial version and serial form"
      end

      classrelation 2035995 // serialPersistentFields (<unidirectional association>)
	relation 2035995 --->
	  a role_name "serialPersistentFields" multiplicity "[]" class_relation const_relation private
	    comment "
@serialField val Number The {@link Number} representing the numeric value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2035995 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      attribute 3027227 "compat"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 169243 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    PrivilegedAction act = new GetPropertyAction(\"jmx.serial.form\");
	    String form = (String) AccessController.doPrivileged(act);
	    compat = (form != null && form.equals(\"1.0\"));
	} catch (Exception e) {
	    // OK: exception means no compat with 1.0, too bad
	}
	if (compat) {
	    serialPersistentFields = oldSerialPersistentFields;
	    serialVersionUID = oldSerialVersionUID;
	} else {
	    serialPersistentFields = newSerialPersistentFields;
	    serialVersionUID = newSerialVersionUID;
	}
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 2036123 // val (<unidirectional association>)
	relation 2036123 --->
	  a role_name "val" init_value "=  new Double(0)" private
	    comment " END Serialization compatibility stuff

@serial The {@link Number} representing the numeric value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2036123 // val (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      operation 8253595 "NumericValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic constructor."
      end

      operation 8253723 "NumericValueExp"
	package explicit_return_type ""
	nparams 1
	  param inout name "val" type class_ref 413979 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a new NumericValue representing the numeric literal <val>."
      end

      operation 8253851 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a double numeric value"
      end

      operation 8253979 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a long numeric value"
      end

      operation 8254107 "isLong"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true is if the numeric value is a long, false otherwise."
      end

      operation 8254235 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing the object"
      end

      operation 8254363 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the ValueExp on a MBean.

@param name The name of the MBean on which the ValueExp will be applied.

@return  The <CODE>ValueExp</CODE>.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8254491 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes a {@link NumericValueExp} from an {@link ObjectInputStream}."
      end

      operation 8254619 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes a {@link NumericValueExp} to an {@link ObjectOutputStream}."
      end
    end

    class 1032987 "OrQueryExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used by the query-building mechanism to represent
disjunctions of relational expressions.
@serial include

@since 1.5"
      classrelation 2037787 // <generalisation>
	relation 2037787 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2037787 // <generalisation>
	  b parent class_ref 519579 // QueryEval
      end

      classrelation 2037915 // <realization>
	relation 2037915 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2037915 // <realization>
	  b parent class_ref 511771 // QueryExp
      end

      attribute 3029019 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2962973084421716523L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2038043 // exp1 (<unidirectional association>)
	relation 2038043 --->
	  a role_name "exp1" private
	    comment " 
@serial The left query expression

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2038043 // exp1 (<unidirectional association>)
	  b parent class_ref 511771 // QueryExp
      end

      classrelation 2038171 // exp2 (<unidirectional association>)
	relation 2038171 --->
	  a role_name "exp2" private
	    comment " 
@serial The right query expression

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2038171 // exp2 (<unidirectional association>)
	  b parent class_ref 511771 // QueryExp
      end

      operation 8261147 "OrQueryExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8261275 "OrQueryExp"
	public explicit_return_type ""
	nparams 2
	  param inout name "q1" type class_ref 511771 // QueryExp
	  param inout name "q2" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new OrQueryExp with the specified ValueExps "
      end

      operation 8261403 "getLeftExp"
	public return_type class_ref 511771 // QueryExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the left query expression."
      end

      operation 8261531 "getRightExp"
	public return_type class_ref 511771 // QueryExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the right query expression."
      end

      operation 8261659 "apply"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the OrQueryExp on a MBean.

@param name The name of the MBean on which the OrQueryExp will be applied.

@return  True if the query was successfully applied to the MBean, false otherwise.


@exception BadStringOperationException The string passed to the method is invalid. 
@exception BadBinaryOpValueExpException The expression passed to the method is invalid.
@exception BadAttributeValueExpException The attribute value passed to the method is invalid."
      end

      operation 8261787 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this AndQueryExp"
      end
    end

    class 1033115 "PersistentMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " This class is the interface to be implemented by MBeans that are meant to be 
 persistent.  MBeans supporting this interface should call the load method during
 construction in order to prime the MBean from the persistent store.
 In the case of a ModelMBean, the store method should be called by the MBeanServer based on the descriptors in
 the ModelMBean or by the MBean itself during normal processing of the ModelMBean.

@since 1.5"
      operation 8261915 "load"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  exception class_ref 511387 // MBeanException
	  exception class_ref 1030427 // RuntimeOperationsException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates thisMBean instance with the data found for
the MBean in the persistent store.  The data loaded could include
attribute and operation values.

This method should be called during construction or initialization of this instance, 
and before the MBean is registered with the MBeanServer. 

@exception MBeanException Wraps another exception or persistence is not supported 
@exception RuntimeOperationsException Wraps exceptions from the persistence mechanism
@exception InstanceNotFoundException Could not find or load this MBean from persistent
                                     storage   "
      end

      operation 8262043 "store"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  exception class_ref 511387 // MBeanException
	  exception class_ref 1030427 // RuntimeOperationsException
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Captures the current state of this MBean instance and
writes it out to the persistent store.  The state stored could include 
attribute and operation values. If one of these methods of persistence is
not supported a \"serviceNotFound\" exception will be thrown.
<P>
Persistence policy from the MBean and attribute descriptor is used to guide execution
of this method. The MBean should be stored if 'persistPolicy' field is:
<PRE>  != \"never\" 
  = \"always\" 
  = \"onTimer\" and now > 'lastPersistTime' + 'persistPeriod'
  = \"NoMoreOftenThan\" and now > 'lastPersistTime' + 'persistPeriod'
<P>
Do not store the MBean if 'persistPolicy' field is:
   = \"never\"
   = \"onUpdate\"
   = \"onTimer\" && now < 'lastPersistTime' + 'persistPeriod' 
<P></PRE>

@exception MBeanException Wraps another exception or persistence is not supported 
@exception RuntimeOperationsException Wraps exceptions from the persistence mechanism
@exception InstanceNotFoundException Could not find/access the persistent store"
      end
    end

    class 1033243 "QualifiedAttributeValueExp"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents indexed attributes used as arguments to relational
constraints. An QualifiedAttributeValueExp may be used anywhere a
ValueExp is required.
@serial include

@since 1.5"
      classrelation 2038299 // <generalisation>
	relation 2038299 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2038299 // <generalisation>
	  b parent class_ref 1029275 // AttributeValueExp
      end

      attribute 3029147 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  8832517277410933254L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3029275 "className"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The attribute class name
"
      end

      operation 8262171 "QualifiedAttributeValueExp"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic Constructor."
      end

      operation 8262299 "QualifiedAttributeValueExp"
	public explicit_return_type ""
	nparams 2
	  param in name "className" explicit_type "String"
	  param in name "attr" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new QualifiedAttributeValueExp representing the specified object
attribute, named attr with class name className."
      end

      operation 8262427 "getAttrClassName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the class name of the attribute."
      end

      operation 8262555 "apply"
	public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 4
	  exception class_ref 519707 // BadStringOperationException
	  exception class_ref 519835 // BadBinaryOpValueExpException
	  exception class_ref 519963 // BadAttributeValueExpException
	  exception class_ref 520091 // InvalidApplicationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the QualifiedAttributeValueExp to an MBean.

@param name The name of the MBean on which the QualifiedAttributeValueExp will be applied.

@return  The ValueExp.

@exception BadStringOperationException
@exception BadBinaryOpValueExpException
@exception BadAttributeValueExpException 
@exception InvalidApplicationException"
      end

      operation 8262683 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representing its value"
      end
    end

    class 1033371 "Query"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Constructs query object constraints. The static methods provided
return query expressions that may be used in listing and
enumerating MBeans. Individual constraint construction methods
allow only appropriate types as arguments. Composition of calls can
construct arbitrary nestings of constraints, as the following
example illustrates:</p>

<pre>
QueryExp exp = Query.and(Query.gt(Query.attr(\"age\"),Query.value(5)),
                         Query.match(Query.attr(\"name\"),
                                     Query.value(\"Smith\")));
</pre>

@since 1.5"
      classrelation 2038427 // <generalisation>
	relation 2038427 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2038427 // <generalisation>
	  b parent class_ref 168347 // Object
      end

      attribute 3029403 "GT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#gt} query.  This is chiefly
of interest for the serialized form of queries.
"
      end

      attribute 3029531 "LT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#lt} query.  This is chiefly
of interest for the serialized form of queries.
"
      end

      attribute 3029659 "GE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#geq} query.  This is chiefly
of interest for the serialized form of queries.
"
      end

      attribute 3029787 "LE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#leq} query.  This is chiefly
of interest for the serialized form of queries.
"
      end

      attribute 3029915 "EQ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#eq} query.  This is chiefly
of interest for the serialized form of queries.
"
      end

      attribute 3030043 "PLUS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#plus} expression.  This
is chiefly of interest for the serialized form of queries.
"
      end

      attribute 3030171 "MINUS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#minus} expression.  This
is chiefly of interest for the serialized form of queries.
"
      end

      attribute 3030299 "TIMES"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#times} expression.  This
is chiefly of interest for the serialized form of queries.
"
      end

      attribute 3030427 "DIV"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A code representing the {@link Query#div} expression.  This is
chiefly of interest for the serialized form of queries.
"
      end

      operation 8262811 "Query"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Basic constructor."
      end

      operation 8262939 "and"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "q1" type class_ref 511771 // QueryExp
	  param inout name "q2" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that is the conjunction of two other query
expressions.

@param q1 A query expression.
@param q2 Another query expression.

@return  The conjunction of the two arguments."
      end

      operation 8263067 "or"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "q1" type class_ref 511771 // QueryExp
	  param inout name "q2" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that is the disjunction of two other query
expressions.

@param q1 A query expression.
@param q2 Another query expression.

@return  The disjunction of the two arguments."
      end

      operation 8263195 "gt"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a \"greater than\" constraint on
two values.

@param v1 A value expression.
@param v2 Another value expression.

@return  A \"greater than\" constraint on the arguments."
      end

      operation 8263323 "geq"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a \"greater than or equal
to\" constraint on two values.

@param v1 A value expression.
@param v2 Another value expression.

@return  A \"greater than or equal to\" constraint on the arguments."
      end

      operation 8263451 "leq"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a \"less than or equal to\"
constraint on two values.

@param v1 A value expression.
@param v2 Another value expression.

@return  A \"less than or equal to\" constraint on the arguments."
      end

      operation 8263579 "lt"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a \"less than\" constraint on
two values.

@param v1 A value expression.
@param v2 Another value expression.

@return  A \"less than\" constraint on the arguments."
      end

      operation 8263707 "eq"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents an equality constraint on
two values.

@param v1 A value expression.
@param v2 Another value expression.

@return  A \"equal to\" constraint on the arguments."
      end

      operation 8263835 "between"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 3
	  param inout name "v1" type class_ref 1029403 // ValueExp
	  param inout name "v2" type class_ref 1029403 // ValueExp
	  param inout name "v3" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents the constraint that one
value is between two other values.

@param v1 A value expression that is \"between\" v2 and v3.
@param v2 Value expression that represents a boundary of the constraint.     
@param v3 Value expression that represents a boundary of the constraint.

@return  The constraint that v1 lies between v2 and v3."
      end

      operation 8263963 "match"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "a" type class_ref 1029275 // AttributeValueExp
	  param inout name "s" type class_ref 1030939 // StringValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a matching constraint on
a string argument. The matching syntax is consistent with file globbing:
Supports \"<code>?</code>\", \"<code>*</code>\", \"<code>[</code>\",
each of which may be escaped with \"<code>\\</code>\";
Character classes may use \"<code>!</code>\" for negation and
\"<code>-</code>\" for range.
(<code>*</code> for any character sequence,
<code>?</code> for a single arbitrary character,
<code>[...]</code> for a character sequence).
For example: <code>a*b?c</code> would match a string starting
with the character <code>a</code>, followed
by any number of characters, followed by a <code>b</code>,
any single character, and a <code>c</code>.

@param a An attribute expression
@param s A string value expression representing a matching constraint

@return  A query expression that represents the matching constraint on the
string argument."
      end

      operation 8264091 "attr"
	class_operation public return_type class_ref 1029275 // AttributeValueExp
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a new attribute expression.</p>

<p>Evaluating this expression for a given
<code>objectName</code> includes performing {@link
MBeanServer#getAttribute MBeanServer.getAttribute(objectName,
name)}.</p>

@param name The name of the attribute.

@return  An attribute expression for the attribute named name."
      end

      operation 8264219 "attr"
	class_operation public return_type class_ref 1029275 // AttributeValueExp
	nparams 2
	  param in name "className" explicit_type "String"
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a new qualified attribute expression.</p>

<p>Evaluating this expression for a given
<code>objectName</code> includes performing {@link
MBeanServer#getObjectInstance
MBeanServer.getObjectInstance(objectName)} and {@link
MBeanServer#getAttribute MBeanServer.getAttribute(objectName,
name)}.</p>

@param className The name of the class possessing the attribute.
@param name The name of the attribute.

@return  An attribute expression for the attribute named name."
      end

      operation 8264347 "classattr"
	class_operation public return_type class_ref 1029275 // AttributeValueExp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a new class attribute expression which can be used in any
Query call that expects a ValueExp.</p>

<p>Evaluating this expression for a given
<code>objectName</code> includes performing {@link
MBeanServer#getObjectInstance
MBeanServer.getObjectInstance(objectName)}.</p>

@return  A class attribute expression."
      end

      operation 8264475 "not"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 1
	  param inout name "queryExp" type class_ref 511771 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a constraint that is the negation of its argument.

@param queryExp The constraint to negate.

@return  A negated constraint."
      end

      operation 8264603 "in"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "val" type class_ref 1029403 // ValueExp
	  param inout name "valueList" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an expression constraining a value to be one of an explicit list.
     
@param val A value to be constrained.
@param valueList An array of ValueExps.

@return  A QueryExp that represents the constraint."
      end

      operation 8264731 "value"
	class_operation public return_type class_ref 1030939 // StringValueExp
	nparams 1
	  param in name "val" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new string expression.

@param val The string value.

@return  A ValueExp object containing the string argument."
      end

      operation 8264859 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "val" type class_ref 413979 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value expression that can be used in any Query call
that expects a ValueExp.

@param val An instance of Number.

@return  A ValueExp object containing the argument."
      end

      operation 8264987 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param in name "val" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value expression that can be used in any Query call
that expects a ValueExp.

@param val An int value.

@return  A ValueExp object containing the argument."
      end

      operation 8265115 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value expression that can be used in any Query call
that expects a ValueExp.

@param val A long value.

@return  A ValueExp object containing the argument."
      end

      operation 8265243 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param in name "val" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value expression that can be used in any Query call
that expects a ValueExp.

@param val A float value.

@return  A ValueExp object containing the argument."
      end

      operation 8265371 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param in name "val" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value expression that can be used in any Query call
that expects a ValueExp.

@param val A double value.

@return  A ValueExp object containing the argument."
      end

      operation 8265499 "value"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 1
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean value expression that can be used in any Query call
that expects a ValueExp.

@param val A boolean value.

@return  A ValueExp object containing the argument."
      end

      operation 8265627 "plus"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 2
	  param inout name "value1" type class_ref 1029403 // ValueExp
	  param inout name "value2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a binary expression representing the sum of two numeric values,
or the concatenation of two string values.

@param value1 The first '+' operand.
@param value2 The second '+' operand.

@return  A ValueExp representing the sum or concatenation of the two
arguments."
      end

      operation 8265755 "times"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 2
	  param inout name "value1" type class_ref 1029403 // ValueExp
	  param inout name "value2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a binary expression representing the product of two numeric values.


@param value1 The first '*' operand.      
@param value2 The second '*' operand.

@return  A ValueExp representing the product."
      end

      operation 8265883 "minus"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 2
	  param inout name "value1" type class_ref 1029403 // ValueExp
	  param inout name "value2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a binary expression representing the difference between two numeric
values.

@param value1 The first '-' operand.      
@param value2 The second '-' operand.

@return  A ValueExp representing the difference between two arguments."
      end

      operation 8266011 "div"
	class_operation public return_type class_ref 1029403 // ValueExp
	nparams 2
	  param inout name "value1" type class_ref 1029403 // ValueExp
	  param inout name "value2" type class_ref 1029403 // ValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a binary expression representing the quotient of two numeric
values.

@param value1 The first '/' operand.
@param value2 The second '/' operand.

@return  A ValueExp representing the quotient of two arguments."
      end

      operation 8266139 "initialSubString"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "a" type class_ref 1029275 // AttributeValueExp
	  param inout name "s" type class_ref 1030939 // StringValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a matching constraint on
a string argument. The value must start with the given string value.
     
@param a An attribute expression.
@param s A string value expression representing the beginning of the string value.      

@return  The constraint that a matches s."
      end

      operation 8266267 "anySubString"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "a" type class_ref 1029275 // AttributeValueExp
	  param inout name "s" type class_ref 1030939 // StringValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a matching constraint on
a string argument. The value must contain the given string value.

@param a An attribute expression.
@param s A string value expression representing the substring.

@return  The constraint that a matches s."
      end

      operation 8266395 "finalSubString"
	class_operation public return_type class_ref 511771 // QueryExp
	nparams 2
	  param inout name "a" type class_ref 1029275 // AttributeValueExp
	  param inout name "s" type class_ref 1030939 // StringValueExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a query expression that represents a matching constraint on
a string argument. The value must contain the given string value.

@param a An attribute expression.
@param s A string value expression representing the end of the string value.

@return  The constraint that a matches s."
      end
    end

    class 1033499 "RuntimeErrorException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "When a <CODE>java.lang.Error</CODE> occurs in the agent it should be caught and
re-thrown as a <CODE>RuntimeErrorException</CODE>.

@since 1.5"
      classrelation 2038811 // <generalisation>
	relation 2038811 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2038811 // <generalisation>
	  b parent class_ref 543643 // JMRuntimeException
      end

      attribute 3030683 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  704338937753949796L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2038939 // error (<unidirectional association>)
	relation 2038939 --->
	  a role_name "error" private
	    comment "
@serial The encapsulated {@link Error}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2038939 // error (<unidirectional association>)
	  b parent class_ref 221851 // Error
      end

      operation 8267035 "RuntimeErrorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 221851 // Error
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.

@param e the wrapped error."
      end

      operation 8267163 "RuntimeErrorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 221851 // Error
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows a specific error message to be specified.

@param e the wrapped error.
@param message the detail message."
      end

      operation 8267291 "getTargetError"
	public return_type class_ref 221851 // Error
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link Error} thrown.

@return the wrapped {@link Error}."
      end

      operation 8267419 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link Error} thrown.

@return the wrapped {@link Error}."
      end
    end

    class 1033627 "RuntimeMBeanException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents runtime exceptions thrown by MBean methods in
the agent. It \"wraps\" the actual <CODE>java.lang.RuntimeException</CODE> exception thrown.
This exception will be built by the MBeanServer when a call to an
MBean method throws a runtime exception.

@since 1.5"
      classrelation 2039067 // <generalisation>
	relation 2039067 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2039067 // <generalisation>
	  b parent class_ref 543643 // JMRuntimeException
      end

      attribute 3030811 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5274912751982730171L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2039195 // runtimeException (<unidirectional association>)
	relation 2039195 --->
	  a role_name "runtimeException" private
	    comment "
@serial The encapsulated {@link RuntimeException}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2039195 // runtimeException (<unidirectional association>)
	  b parent class_ref 241051 // RuntimeException
      end

      operation 8267547 "RuntimeMBeanException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 241051 // RuntimeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>RuntimeMBeanException</CODE> that wraps the actual <CODE>java.lang.RuntimeException</CODE>.

@param e the wrapped exception."
      end

      operation 8267675 "RuntimeMBeanException"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 241051 // RuntimeException
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <CODE>RuntimeMBeanException</CODE> that wraps the actual <CODE>java.lang.RuntimeException</CODE> with
a detailed message.

@param e the wrapped exception.
@param message the detail message."
      end

      operation 8267803 "getTargetException"
	public return_type class_ref 241051 // RuntimeException
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link RuntimeException} thrown.

@return the wrapped {@link RuntimeException}."
      end

      operation 8267931 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actual {@link RuntimeException} thrown.

@return the wrapped {@link RuntimeException}."
      end
    end
  end

  deploymentview 148635 "management"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 342555 "MBeanServerConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 510619 // MBeanServerConnection
      end
      comment "@(#)MBeanServerConnection.java	1.21 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 342811 "NotificationListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_classes
	class_ref 512411 // NotificationListener
      end
      comment "@(#)NotificationListener.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 344091 "MBeanServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Set;
import java.io.ObjectInputStream;
import javax.management.loading.ClassLoaderRepository;
${definition}"
      associated_classes
	class_ref 513179 // MBeanServer
      end
      comment "@(#)MBeanServer.java	1.140 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 344475 "MBeanServerBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.JmxMBeanServer;
${definition}"
      associated_classes
	class_ref 515867 // MBeanServerBuilder
      end
      comment "@(#)MBeanServerBuilder.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 344987 "MBeanServerDelegateMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 516251 // MBeanServerDelegateMBean
      end
      comment "@(#)MBeanServerDelegateMBean.java	4.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 345115 "NotificationBroadcaster"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 516507 // NotificationBroadcaster
      end
      comment "@(#)NotificationBroadcaster.java	1.35 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 345243 "NotificationEmitter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 516379 // NotificationEmitter
      end
      comment "@(#)NotificationEmitter.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 345371 "MBeanServerDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Properties;
import java.util.Random;
import com.sun.jmx.defaults.JmxProperties;
import com.sun.jmx.defaults.ServiceName;
${definition}"
      associated_classes
	class_ref 513307 // MBeanServerDelegate
      end
      comment "@(#)MBeanServerDelegate.java	1.57 06/09/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 345499 "DynamicMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 516891 // DynamicMBean
      end
      comment "@(#)DynamicMBean.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 345627 "MBeanRegistration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 517019 // MBeanRegistration
      end
      comment "@(#)MBeanRegistration.java	4.17 04/02/11

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 347035 "QueryEval"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.management.MBeanServer;
${definition}"
      associated_classes
	class_ref 519579 // QueryEval
      end
      comment "@(#)QueryEval.java	4.24 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 347163 "QueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 511771 // QueryExp
      end
      comment "@(#)QueryExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 364059 "Notification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.util.Date;
import java.util.EventObject;
import java.security.AccessController;
import java.security.PrivilegedAction;
import com.sun.jmx.mbeanserver.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 513819 // Notification
      end
      comment "@(#)Notification.java	4.40 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 364699 "JMRuntimeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 543643 // JMRuntimeException
      end
      comment "@(#)JMRuntimeException.java	4.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778011 "AndQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1028763 // AndQueryExp
      end
      comment "@(#)AndQueryExp.java	4.19 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778139 "Attribute"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 512155 // Attribute
      end
      comment "@(#)Attribute.java	4.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778267 "AttributeChangeNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1028891 // AttributeChangeNotification
      end
      comment "@(#)AttributeChangeNotification.java	4.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778395 "NotificationFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 512539 // NotificationFilter
      end
      comment "@(#)NotificationFilter.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778523 "AttributeChangeNotificationFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
${definition}"
      associated_classes
	class_ref 1029019 // AttributeChangeNotificationFilter
      end
      comment "@(#)AttributeChangeNotificationFilter.java	4.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778651 "AttributeList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 512027 // AttributeList
      end
      comment "@(#)AttributeList.java	1.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778779 "JMException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029147 // JMException
      end
      comment "@(#)JMException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 778907 "OperationsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 515483 // OperationsException
      end
      comment "@(#)OperationsException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779035 "AttributeNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511899 // AttributeNotFoundException
      end
      comment "@(#)AttributeNotFoundException.java	4.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779163 "ValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029403 // ValueExp
      end
      comment "@(#)ValueExp.java	4.21 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779291 "AttributeValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanServer;
${definition}"
      associated_classes
	class_ref 1029275 // AttributeValueExp
      end
      comment "@(#)AttributeValueExp.java	4.24 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779419 "BadAttributeValueExpException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 519963 // BadAttributeValueExpException
      end
      comment "@(#)BadAttributeValueExpException.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779547 "BadBinaryOpValueExpException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 519835 // BadBinaryOpValueExpException
      end
      comment "@(#)BadBinaryOpValueExpException.java	4.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779675 "BadStringOperationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 519707 // BadStringOperationException
      end
      comment "@(#)BadStringOperationException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779803 "BetweenQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029531 // BetweenQueryExp
      end
      comment "@(#)BetweenQueryExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 779931 "BinaryOpValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029659 // BinaryOpValueExp
      end
      comment "@(#)BinaryOpValueExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780059 "BinaryRelQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029787 // BinaryRelQueryExp
      end
      comment "@(#)BinaryRelQueryExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780187 "BooleanValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1029915 // BooleanValueExp
      end
      comment "@(#)BooleanValueExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780315 "ClassAttributeValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.PrivilegedAction;
import com.sun.jmx.mbeanserver.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 1030043 // ClassAttributeValueExp
      end
      comment "@(#)ClassAttributeValueExp.java	4.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780443 "DefaultLoaderRepository"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.loading.ClassLoaderRepository;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1030171 // DefaultLoaderRepository
      end
      comment "@(#)DefaultLoaderRepository.java	1.33 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780571 "Descriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.RuntimeOperationsException;
import javax.management.MBeanException;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1030299 // Descriptor
      end
      comment "@(#)file      Descriptor.java
@(#)author    IBM Corp.
@(#)version   1.23
@(#)lastedit      04/02/10


Copyright IBM Corp. 1999-2000.  All rights reserved.

The program is provided \"as is\" without any warranty express or implied,
including the warranty of non-infringement and the implied warranties of
merchantibility and fitness for a particular purpose. IBM will not be
liable for any damages suffered by you or any third party claim against 
you regarding the Program.

Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
This software is the proprietary information of Sun Microsystems, Inc.
Use is subject to license terms.

Copyright 2004 Sun Microsystems, Inc.  Tous droits reserves.
Ce logiciel est propriete de Sun Microsystems, Inc.
Distribue par des licences qui en restreignent l'utilisation. 
"
    end

    artifact 780699 "DescriptorAccess"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1030555 // DescriptorAccess
      end
      comment "@(#)file      DescriptorAccess.java
@(#)author    IBM Corp.
@(#)version   1.17
@(#)lastedit      03/12/19


Copyright IBM Corp. 1999-2000.  All rights reserved.

The program is provided \"as is\" without any warranty express or implied,
including the warranty of non-infringement and the implied warranties of
merchantibility and fitness for a particular purpose. IBM will not be
liable for any damages suffered by you or any third party claim against 
you regarding the Program.

Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
This software is the proprietary information of Sun Microsystems, Inc.
Use is subject to license terms.

Copyright 2004 Sun Microsystems, Inc.  Tous droits reserves.
Ce logiciel est propriete de Sun Microsystems, Inc.
Distribue par des licences qui en restreignent l'utilisation. 
"
    end

    artifact 780827 "InQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1030683 // InQueryExp
      end
      comment "@(#)InQueryExp.java	4.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 780955 "InstanceAlreadyExistsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511131 // InstanceAlreadyExistsException
      end
      comment "@(#)InstanceAlreadyExistsException.java	4.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781083 "InstanceNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511643 // InstanceNotFoundException
      end
      comment "@(#)InstanceNotFoundException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781211 "IntrospectionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 512923 // IntrospectionException
      end
      comment "@(#)IntrospectionException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781339 "InvalidApplicationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 520091 // InvalidApplicationException
      end
      comment "@(#)InvalidApplicationException.java	4.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781467 "InvalidAttributeValueException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 512283 // InvalidAttributeValueException
      end
      comment "@(#)InvalidAttributeValueException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781595 "ListenerNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 512667 // ListenerNotFoundException
      end
      comment "@(#)ListenerNotFoundException.java	4.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781723 "MalformedObjectNameException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 517787 // MalformedObjectNameException
      end
      comment "@(#)MalformedObjectNameException.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781851 "MatchQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1030811 // MatchQueryExp
      end
      comment "@(#)MatchQueryExp.java	1.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 781979 "MBeanFeatureInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1031067 // MBeanFeatureInfo
      end
      comment "@(#)MBeanFeatureInfo.java	1.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782107 "MBeanAttributeInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import java.security.AccessController;
import java.security.PrivilegedAction;
import com.sun.jmx.mbeanserver.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 514971 // MBeanAttributeInfo
      end
      comment "@(#)MBeanAttributeInfo.java	1.36 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782235 "MBeanConstructorInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 515099 // MBeanConstructorInfo
      end
      comment "@(#)MBeanConstructorInfo.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782363 "MBeanException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511387 // MBeanException
      end
      comment "@(#)MBeanException.java	4.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782491 "MBeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Map;
import java.util.WeakHashMap;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_classes
	class_ref 512795 // MBeanInfo
      end
      comment "@(#)MBeanInfo.java	1.44 04/06/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782619 "MBeanNotificationInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 516635 // MBeanNotificationInfo
      end
      comment "@(#)MBeanNotificationInfo.java	1.32 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782747 "MBeanOperationInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 1031323 // MBeanOperationInfo
      end
      comment "@(#)MBeanOperationInfo.java	1.31 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 782875 "MBeanParameterInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1031195 // MBeanParameterInfo
      end
      comment "@(#)MBeanParameterInfo.java	1.24 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783003 "MBeanPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.Permission;
import java.io.IOException;
import java.io.ObjectInputStream;
${definition}"
      associated_classes
	class_ref 1031579 // MBeanPermission
      end
      comment "@(#)MBeanPermission.java	1.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783131 "MBeanRegistrationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511259 // MBeanRegistrationException
      end
      comment "@(#)MBeanRegistrationException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783259 "MBeanServerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.Permission;
import java.security.PrivilegedAction;
import java.util.ArrayList;
import java.util.Iterator;
import javax.management.loading.ClassLoaderRepository;
import com.sun.jmx.defaults.ServiceName;
import com.sun.jmx.defaults.JmxProperties;
import com.sun.jmx.mbeanserver.GetPropertyAction;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1031707 // MBeanServerFactory
      end
      comment "@(#)MBeanServerFactory.java	1.55 04/02/23

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783387 "MBeanServerInvocationHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
${definition}"
      associated_classes
	class_ref 1031835 // MBeanServerInvocationHandler
      end
      comment "@(#)MBeanServerInvocationHandler.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783515 "MBeanServerNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 519195 // MBeanServerNotification
      end
      comment "@(#)MBeanServerNotification.java	4.24 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783643 "MBeanServerPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.security.BasicPermission;
import java.security.Permission;
import java.security.PermissionCollection;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Set;
import java.util.StringTokenizer;
${definition}"
      associated_classes
	class_ref 1031963 // MBeanServerPermission
	class_ref 1032091 // MBeanServerPermissionCollection
      end
      comment "@(#)MBeanServerPermission.java	1.26 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783771 "MBeanTrustPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
${definition}"
      associated_classes
	class_ref 1032219 // MBeanTrustPermission
      end
      comment "@(#)MBeanTrustPermission.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 783899 "NotCompliantMBeanException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511515 // NotCompliantMBeanException
      end
      comment "@(#)NotCompliantMBeanException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784027 "NotificationBroadcasterSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 516763 // NotificationBroadcasterSupport
      end
      comment "@(#)NotificationBroadcasterSupport.java	1.56 04/09/08

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784155 "NotificationFilterSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
${definition}"
      associated_classes
	class_ref 1032475 // NotificationFilterSupport
      end
      comment "@(#)NotificationFilterSupport.java	4.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784283 "NotQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1032603 // NotQueryExp
      end
      comment "@(#)NotQueryExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784411 "NumericValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.security.AccessController;
import java.security.PrivilegedAction;
import com.sun.jmx.mbeanserver.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 1032731 // NumericValueExp
      end
      comment "@(#)NumericValueExp.java	4.24 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784539 "ObjectInstance"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 510747 // ObjectInstance
      end
      comment "@(#)ObjectInstance.java	4.21 04/03/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784667 "ObjectName"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InvalidObjectException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import com.sun.jmx.mbeanserver.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 510875 // ObjectName
      end
      comment "@(#)ObjectName.java	1.70 07/10/23

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784795 "OrQueryExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1032987 // OrQueryExp
      end
      comment "@(#)OrQueryExp.java	4.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 784923 "PersistentMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanException;
import javax.management.RuntimeOperationsException;
import javax.management.InstanceNotFoundException;
${definition}"
      associated_classes
	class_ref 1033115 // PersistentMBean
      end
      comment "@(#)file      PersistentMBean.java
@(#)author    IBM Corp.
@(#)version   1.19
@(#)lastedit      04/02/10


Copyright IBM Corp. 1999-2000.  All rights reserved.

The program is provided \"as is\" without any warranty express or implied,
including the warranty of non-infringement and the implied warranties of
merchantibility and fitness for a particular purpose. IBM will not be
liable for any damages suffered by you or any third party claim against 
you regarding the Program.

Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
This software is the proprietary information of Sun Microsystems, Inc.
Use is subject to license terms.

Copyright 2004 Sun Microsystems, Inc.  Tous droits reserves.
Ce logiciel est propriete de Sun Microsystems, Inc.
Distribue par des licences qui en restreignent l'utilisation. 
"
    end

    artifact 785051 "QualifiedAttributeValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1033243 // QualifiedAttributeValueExp
      end
      comment "@(#)QualifiedAttributeValueExp.java	4.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785179 "Query"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1033371 // Query
      end
      comment "@(#)Query.java	1.26 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785307 "ReflectionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 511003 // ReflectionException
      end
      comment "@(#)ReflectionException.java	4.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785435 "RuntimeErrorException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1033499 // RuntimeErrorException
      end
      comment "@(#)RuntimeErrorException.java	4.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785563 "RuntimeMBeanException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1033627 // RuntimeMBeanException
      end
      comment "@(#)RuntimeMBeanException.java	4.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785691 "RuntimeOperationsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1030427 // RuntimeOperationsException
      end
      comment "@(#)RuntimeOperationsException.java	4.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785819 "ServiceNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.OperationsException;
${definition}"
      associated_classes
	class_ref 539675 // ServiceNotFoundException
      end
      comment "@(#)ServiceNotFoundException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 785947 "StandardMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.StandardMBeanMetaDataImpl;
import com.sun.jmx.trace.Trace;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.lang.reflect.UndeclaredThrowableException;
${definition}"
      associated_classes
	class_ref 518427 // StandardMBean
      end
      comment "@(#)StandardMBean.java	1.23 05/05/27

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786075 "StringValueExp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1030939 // StringValueExp
      end
      comment "@(#)StringValueExp.java	4.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end

  package_ref 159003 // loading

  package_ref 159387 // remote

  package_ref 180507 // openmbean

  package_ref 182171 // modelmbean

  package_ref 182299 // monitor

  package_ref 182427 // relation

  package_ref 182683 // timer
end
