format 66
"spec" // src::java::security::spec
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/security/spec"
  java_package "java.security.spec"
  classview 176155 "spec"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 960283 "AlgorithmParameterSpec"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A (transparent) specification of cryptographic parameters.

<P> This interface contains no methods or constants. Its only purpose
is to group (and provide type safety for) all parameter specifications.
All parameter specifications must implement this interface.

@author Jan Luehe

@version 1.14, 12/19/03

@see java.security.AlgorithmParameters
@see DSAParameterSpec

@since 1.2"
    end

    class 960795 "InvalidParameterSpecException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the exception for invalid parameter specifications.

@author Jan Luehe

@version 1.15, 12/19/03

@see java.security.AlgorithmParameters
@see AlgorithmParameterSpec
@see DSAParameterSpec

@since 1.2"
      classrelation 1902363 // <generalisation>
	relation 1902363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1902363 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2864923 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -970468769593399342L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7689883 "InvalidParameterSpecException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidParameterSpecException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7690011 "InvalidParameterSpecException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidParameterSpecException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end
    end

    class 963867 "KeySpec"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A (transparent) specification of the key material
that constitutes a cryptographic key.

<p>If the key is stored on a hardware device, its
specification may contain information that helps identify the key on the
device.

<P> A key may be specified in an algorithm-specific way, or in an
algorithm-independent encoding format (such as ASN.1).
For example, a DSA private key may be specified by its components
<code>x</code>, <code>p</code>, <code>q</code>, and <code>g</code>
(see {@link DSAPrivateKeySpec}), or it may be
specified using its DER encoding
(see {@link PKCS8EncodedKeySpec}).

<P> This interface contains no methods or constants. Its only purpose
is to group (and provide type safety for) all key specifications.
All key specifications must implement this interface.

@author Jan Luehe

@version 1.17, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see EncodedKeySpec
@see X509EncodedKeySpec
@see PKCS8EncodedKeySpec
@see DSAPrivateKeySpec
@see DSAPublicKeySpec

@since 1.2"
    end

    class 963995 "InvalidKeySpecException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the exception for invalid key specifications.

@author Jan Luehe

@version 1.16, 12/19/03

@see KeySpec

@since 1.2"
      classrelation 1902235 // <generalisation>
	relation 1902235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1902235 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2864795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  3546139293998810778L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7689371 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidKeySpecException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7689499 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidKeySpecException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end

      operation 7689627 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidKeySpecException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7689755 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidKeySpecException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 976027 "ECParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class specifies the set of domain parameters
used with elliptic curve cryptography (ECC). 

@see AlgorithmParameterSpec

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1900059 // <realization>
	relation 1900059 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1900059 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      classrelation 1900187 // curve (<unidirectional association>)
	relation 1900187 --->
	  a role_name "curve" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900187 // curve (<unidirectional association>)
	  b parent class_ref 978203 // EllipticCurve
      end

      classrelation 1900315 // g (<unidirectional association>)
	relation 1900315 --->
	  a role_name "g" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900315 // g (<unidirectional association>)
	  b parent class_ref 976411 // ECPoint
      end

      classrelation 1900443 // n (<unidirectional association>)
	relation 1900443 --->
	  a role_name "n" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900443 // n (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      attribute 2864411 "h"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7685659 "ECParameterSpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "curve" type class_ref 978203 // EllipticCurve
	  param inout name "g" type class_ref 976411 // ECPoint
	  param inout name "n" type class_ref 775835 // BigInteger
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates elliptic curve domain parameters based on the 
specified values.
@param curve the elliptic curve which this parameter 
defines.
@param g the generator which is also known as the base point.
@param n the order of the generator <code>g</code>.
@param h the cofactor.
@exception NullPointerException if <code>curve</code>,
<code>g</code>, or <code>n</code> is null.
@exception IllegalArgumentException if <code>n</code> 
or <code>h</code> is not positive."
      end

      operation 7685787 "getCurve"
	public return_type class_ref 978203 // EllipticCurve
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the elliptic curve that this parameter defines.
@return the elliptic curve that this parameter defines."
      end

      operation 7685915 "getGenerator"
	public return_type class_ref 976411 // ECPoint
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the generator which is also known as the base point.
@return the generator which is also known as the base point."
      end

      operation 7686043 "getOrder"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the order of the generator.
@return the order of the generator."
      end

      operation 7686171 "getCofactor"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cofactor.
@return the cofactor."
      end
    end

    class 976411 "ECPoint"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class represents a point on an elliptic curve (EC)
in affine coordinates. Other coordinate systems can
extend this class to represent this point in other
coordinates.

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1900571 // x (<unidirectional association>)
	relation 1900571 --->
	  a role_name "x" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900571 // x (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1900699 // y (<unidirectional association>)
	relation 1900699 --->
	  a role_name "y" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900699 // y (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1900827 // POINT_INFINITY (<unidirectional association>)
	relation 1900827 --->
	  a role_name "POINT_INFINITY" init_value "=  new ECPoint()" class_relation const_relation public
	    comment "
This defines the point at infinity.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1900827 // POINT_INFINITY (<unidirectional association>)
	  b parent class_ref 976411 // ECPoint
      end

      operation 7686299 "ECPoint"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " private constructor for constructing point at infinity"
      end

      operation 7686427 "ECPoint"
	public explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 775835 // BigInteger
	  param inout name "y" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an ECPoint from the specified affine x-coordinate
<code>x</code> and affine y-coordinate <code>y</code>.
@param x the affine x-coordinate.
@param y the affine y-coordinate.
@exception NullPointerException if <code>x</code> or 
<code>y</code> is null."
      end

      operation 7686555 "getAffineX"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the affine x-coordinate <code>x</code>.
Note: POINT_INFINITY has a null affine x-coordinate.
@return the affine x-coordinate."
      end

      operation 7686683 "getAffineY"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the affine y-coordinate <code>y</code>.
Note: POINT_INFINITY has a null affine y-coordinate.
@return the affine y-coordinate."
      end

      operation 7686811 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this elliptic curve point for equality with
the specified object. 
@param obj the object to be compared.
@return true if <code>obj</code> is an instance of 
ECPoint and the affine coordinates match, false otherwise."
      end

      operation 7686939 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this elliptic curve point.
@return a hash code value."
      end
    end

    class 976923 "RSAOtherPrimeInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents the triplet (prime, exponent, and coefficient)
inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. 
The ASN.1 syntax of RSA's OtherPrimeInfo is as follows: 

<pre>
OtherPrimeInfo ::= SEQUENCE {
  prime INTEGER,
  exponent INTEGER,
  coefficient INTEGER
  }

</pre>

@author Valerie Peng

@version 1.6 03/12/19

@see RSAPrivateCrtKeySpec
@see java.security.interfaces.RSAMultiPrimePrivateCrtKey

@since 1.4"
      classrelation 1905563 // prime (<unidirectional association>)
	relation 1905563 --->
	  a role_name "prime" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905563 // prime (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905691 // primeExponent (<unidirectional association>)
	relation 1905691 --->
	  a role_name "primeExponent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905691 // primeExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905819 // crtCoefficient (<unidirectional association>)
	relation 1905819 --->
	  a role_name "crtCoefficient" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905819 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7693595 "RSAOtherPrimeInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "prime" type class_ref 775835 // BigInteger
	  param inout name "primeExponent" type class_ref 775835 // BigInteger
	  param inout name "crtCoefficient" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>RSAOtherPrimeInfo</code>
given the prime, primeExponent, and
crtCoefficient as defined in PKCS#1.

@param prime the prime factor of n.
@param primeExponent the exponent.
@param crtCoefficient the Chinese Remainder Theorem
coefficient.
@exception NullPointerException if any of the parameters, i.e. 
<code>prime</code>, <code>primeExponent</code>, 
<code>crtCoefficient</code>, is null.
"
      end

      operation 7693723 "getPrime"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime.

@return the prime."
      end

      operation 7693851 "getExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime's exponent.

@return the primeExponent."
      end

      operation 7693979 "getCrtCoefficient"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime's crtCoefficient.

@return the crtCoefficient."
      end
    end

    class 977307 "DSAParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies the set of parameters used with the DSA algorithm.

@author Jan Luehe

@version 1.16, 12/19/03

@see AlgorithmParameterSpec

@since 1.2"
      classrelation 1897499 // <realization>
	relation 1897499 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1897499 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      classrelation 1897627 // <realization>
	relation 1897627 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1897627 // <realization>
	  b parent class_ref 975387 // DSAParams
      end

      classrelation 1897755 // p (<unidirectional association>)
	relation 1897755 --->
	  a role_name "p" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897755 // p (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1897883 // q (<unidirectional association>)
	relation 1897883 --->
	  a role_name "q" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1897883 // q (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1898011 // g (<unidirectional association>)
	relation 1898011 --->
	  a role_name "g" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898011 // g (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7681691 "DSAParameterSpec"
	public explicit_return_type ""
	nparams 3
	  param inout name "p" type class_ref 775835 // BigInteger
	  param inout name "q" type class_ref 775835 // BigInteger
	  param inout name "g" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new DSAParameterSpec with the specified parameter values.

@param p the prime.

@param q the sub-prime.

@param g the base."
      end

      operation 7681819 "getP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime <code>p</code>.

@return the prime <code>p</code>."
      end

      operation 7681947 "getQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime <code>q</code>.

@return the sub-prime <code>q</code>."
      end

      operation 7682075 "getG"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base <code>g</code>.

@return the base <code>g</code>."
      end
    end

    class 977435 "DSAPrivateKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies a DSA private key with its associated parameters.

@author Jan Luehe

@version 1.18, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see DSAPublicKeySpec
@see PKCS8EncodedKeySpec

@since 1.2"
      classrelation 1898139 // <realization>
	relation 1898139 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1898139 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1898267 // x (<unidirectional association>)
	relation 1898267 --->
	  a role_name "x" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898267 // x (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1898395 // p (<unidirectional association>)
	relation 1898395 --->
	  a role_name "p" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898395 // p (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1898523 // q (<unidirectional association>)
	relation 1898523 --->
	  a role_name "q" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898523 // q (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1898651 // g (<unidirectional association>)
	relation 1898651 --->
	  a role_name "g" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898651 // g (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7682203 "DSAPrivateKeySpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "x" type class_ref 775835 // BigInteger
	  param inout name "p" type class_ref 775835 // BigInteger
	  param inout name "q" type class_ref 775835 // BigInteger
	  param inout name "g" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new DSAPrivateKeySpec with the specified parameter values.

@param x the private key.

@param p the prime.

@param q the sub-prime.

@param g the base."
      end

      operation 7682331 "getX"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private key <code>x</code>.

@return the private key <code>x</code>."
      end

      operation 7682459 "getP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime <code>p</code>.

@return the prime <code>p</code>."
      end

      operation 7682587 "getQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime <code>q</code>.

@return the sub-prime <code>q</code>."
      end

      operation 7682715 "getG"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base <code>g</code>.

@return the base <code>g</code>."
      end
    end

    class 977563 "DSAPublicKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies a DSA public key with its associated parameters.

@author Jan Luehe

@version 1.18, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see DSAPrivateKeySpec
@see X509EncodedKeySpec

@since 1.2"
      classrelation 1898779 // <realization>
	relation 1898779 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1898779 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1898907 // y (<unidirectional association>)
	relation 1898907 --->
	  a role_name "y" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1898907 // y (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1899035 // p (<unidirectional association>)
	relation 1899035 --->
	  a role_name "p" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899035 // p (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1899163 // q (<unidirectional association>)
	relation 1899163 --->
	  a role_name "q" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899163 // q (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1899291 // g (<unidirectional association>)
	relation 1899291 --->
	  a role_name "g" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899291 // g (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7682843 "DSAPublicKeySpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "y" type class_ref 775835 // BigInteger
	  param inout name "p" type class_ref 775835 // BigInteger
	  param inout name "q" type class_ref 775835 // BigInteger
	  param inout name "g" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new DSAPublicKeySpec with the specified parameter values.

@param y the public key.

@param p the prime.

@param q the sub-prime.

@param g the base."
      end

      operation 7682971 "getY"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key <code>y</code>.

@return the public key <code>y</code>."
      end

      operation 7683099 "getP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime <code>p</code>.

@return the prime <code>p</code>."
      end

      operation 7683227 "getQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime <code>q</code>.

@return the sub-prime <code>q</code>."
      end

      operation 7683355 "getG"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base <code>g</code>.

@return the base <code>g</code>."
      end
    end

    class 977691 "ECField"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents an elliptic curve (EC) finite field.
All specialized EC fields must implements this interface.

@see ECFieldFp
@see ECFieldF2m

@author Valerie Peng
@version 1.4, 12/19/03

@since 1.5"
      operation 7683483 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the field size in bits. Note: For prime finite
field ECFieldFp, size of prime p in bits is returned.
For characteristic 2 finite field ECFieldF2m, m is returned.
@return the field size in bits."
      end
    end

    class 977819 "ECFieldF2m"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class defines an elliptic curve (EC)
characteristic 2 finite field.

@see ECField

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1899419 // <realization>
	relation 1899419 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1899419 // <realization>
	  b parent class_ref 977691 // ECField
      end

      attribute 2864027 "m"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2864155 "ks"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1899547 // rp (<unidirectional association>)
	relation 1899547 --->
	  a role_name "rp" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899547 // rp (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7683611 "ECFieldF2m"
	public explicit_return_type ""
	nparams 1
	  param in name "m" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve characteristic 2 finite
field which has 2^<code>m</code> elements with normal basis.
@param m with 2^<code>m</code> being the number of elements.
@exception IllegalArgumentException if <code>m</code>
is not positive."
      end

      operation 7683739 "ECFieldF2m"
	public explicit_return_type ""
	nparams 2
	  param in name "m" explicit_type "int"
	  param inout name "rp" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve characteristic 2 finite
field which has 2^<code>m</code> elements with 
polynomial basis.
The reduction polynomial for this field is based
on <code>rp</code> whose i-th bit correspondes to
the i-th coefficient of the reduction polynomial.<p> 
Note: A valid reduction polynomial is either a 
trinomial (X^<code>m</code> + X^<code>k</code> + 1
with <code>m</code> > <code>k</code> >= 1) or a
pentanomial (X^<code>m</code> + X^<code>k3</code> 
+ X^<code>k2</code> + X^<code>k1</code> + 1 with
<code>m</code> > <code>k3</code> > <code>k2</code> 
> <code>k1</code> >= 1). 
@param m with 2^<code>m</code> being the number of elements.
@param rp the BigInteger whose i-th bit corresponds to
the i-th coefficient of the reduction polynomial. 
@exception NullPointerException if <code>rp</code> is null.
@exception IllegalArgumentException if <code>m</code> 
is not positive, or <code>rp</code> does not represent 
a valid reduction polynomial. "
      end

      operation 7683867 "ECFieldF2m"
	public explicit_return_type ""
	nparams 2
	  param in name "m" explicit_type "int"
	  param in name "ks" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve characteristic 2 finite
field which has 2^<code>m</code> elements with
polynomial basis. The reduction polynomial for this
field is based on <code>ks</code> whose content
contains the order of the middle term(s) of the 
reduction polynomial. 
Note: A valid reduction polynomial is either a
trinomial (X^<code>m</code> + X^<code>k</code> + 1
with <code>m</code> > <code>k</code> >= 1) or a
pentanomial (X^<code>m</code> + X^<code>k3</code>
+ X^<code>k2</code> + X^<code>k1</code> + 1 with
<code>m</code> > <code>k3</code> > <code>k2</code>
> <code>k1</code> >= 1), so <code>ks</code> should
have length 1 or 3.
@param m with 2^<code>m</code> being the number of elements. 
@param ks the order of the middle term(s) of the
reduction polynomial. Contents of this array are copied 
to protect against subsequent modification.
@exception NullPointerException if <code>ks</code> is null.
@exception IllegalArgumentException if<code>m</code> 
is not positive, or the length of <code>ks</code> 
is neither 1 nor 3, or values in <code>ks</code> 
are not between <code>m</code>-1 and 1 (inclusive) 
and in descending order. "
      end

      operation 7683995 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the field size in bits which is <code>m</code>
for this characteristic 2 finite field.
@return the field size in bits."
      end

      operation 7684123 "getM"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value <code>m</code> of this characteristic
2 finite field.
@return <code>m</code> with 2^<code>m</code> being the 
number of elements."
      end

      operation 7684251 "getReductionPolynomial"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a BigInteger whose i-th bit corresponds to the 
i-th coefficient of the reduction polynomial for polynomial 
basis or null for normal basis. 
@return a BigInteger whose i-th bit corresponds to the 
i-th coefficient of the reduction polynomial for polynomial
basis or null for normal basis."
      end

      operation 7684379 "getMidTermsOfReductionPolynomial"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer array which contains the order of the 
middle term(s) of the reduction polynomial for polynomial 
basis or null for normal basis.
@return an integer array which contains the order of the 
middle term(s) of the reduction polynomial for polynomial 
basis or null for normal basis. A new array is returned 
each time this method is called."
      end

      operation 7684507 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this finite field for equality with the
specified object. 
@param obj the object to be compared.
@return true if <code>obj</code> is an instance
of ECFieldF2m and both <code>m</code> and the reduction 
polynomial match, false otherwise."
      end

      operation 7684635 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this characteristic 2 
finite field.
@return a hash code value."
      end
    end

    class 977947 "ECFieldFp"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class defines an elliptic curve (EC) prime 
finite field.

@see ECField

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1899675 // <realization>
	relation 1899675 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1899675 // <realization>
	  b parent class_ref 977691 // ECField
      end

      classrelation 1899803 // p (<unidirectional association>)
	relation 1899803 --->
	  a role_name "p" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1899803 // p (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7684763 "ECFieldFp"
	public explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve prime finite field 
with the specified prime <code>p</code>.
@param p the prime.
@exception NullPointerException if <code>p</code> is null.
@exception IllegalArgumentException if <code>p</code>
is not positive."
      end

      operation 7684891 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the field size in bits which is size of prime p
for this prime finite field.
@return the field size in bits."
      end

      operation 7685019 "getP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime <code>p</code> of this prime finite field.
@return the prime."
      end

      operation 7685147 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this prime finite field for equality with the
specified object. 
@param obj the object to be compared.
@return true if <code>obj</code> is an instance
of ECFieldFp and the prime value match, false otherwise."
      end

      operation 7685275 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this prime finite field.
@return a hash code value."
      end
    end

    class 978075 "ECGenParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class specifies the set of parameters used for 
generating elliptic curve (EC) domain parameters. 

@see AlgorithmParameterSpec

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1899931 // <realization>
	relation 1899931 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1899931 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      attribute 2864283 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7685403 "ECGenParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param in name "stdName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a parameter specification for EC parameter
generation using a standard (or predefined) name
<code>stdName</code> in order to generate the corresponding
(precomputed) elliptic curve domain parameters. For the
list of supported names, please consult the documentation 
of provider whose implementation will be used.
@param stdName the standard name of the to-be-generated EC
domain parameters.
@exception NullPointerException if <code>stdName</code>
is null."
      end

      operation 7685531 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the standard or predefined name of the 
to-be-generated EC domain parameters.
@return the standard or predefined name."
      end
    end

    class 978203 "EllipticCurve"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class holds the necessary values needed to represent 
an elliptic curve.

@see ECField
@see ECFieldFp
@see ECFieldF2m

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1901723 // field (<unidirectional association>)
	relation 1901723 --->
	  a role_name "field" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901723 // field (<unidirectional association>)
	  b parent class_ref 977691 // ECField
      end

      classrelation 1901851 // a (<unidirectional association>)
	relation 1901851 --->
	  a role_name "a" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901851 // a (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1901979 // b (<unidirectional association>)
	relation 1901979 --->
	  a role_name "b" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901979 // b (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      attribute 2864539 "seed"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7687835 "checkValidity"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "field" type class_ref 977691 // ECField
	  param inout name "c" type class_ref 775835 // BigInteger
	  param in name "cName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check coefficient c is a valid element in ECField field."
      end

      operation 7687963 "EllipticCurve"
	public explicit_return_type ""
	nparams 3
	  param inout name "field" type class_ref 977691 // ECField
	  param inout name "a" type class_ref 775835 // BigInteger
	  param inout name "b" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve with the specified elliptic field
<code>field</code> and the coefficients <code>a</code> and
<code>b</code>.
@param field the finite field that this elliptic curve is over.
@param a the first coefficient of this elliptic curve.
@param b the second coefficient of this elliptic curve.
@exception NullPointerException if <code>field</code>,
<code>a</code>, or <code>b</code> is null.
@exception IllegalArgumentException if <code>a</code>
or <code>b</code> is not null and not in <code>field</code>."
      end

      operation 7688091 "EllipticCurve"
	public explicit_return_type ""
	nparams 4
	  param inout name "field" type class_ref 977691 // ECField
	  param inout name "a" type class_ref 775835 // BigInteger
	  param inout name "b" type class_ref 775835 // BigInteger
	  param in name "seed" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an elliptic curve with the specified elliptic field
<code>field</code>, the coefficients <code>a</code> and
<code>b</code>, and the <code>seed</code> used for curve generation.
@param field the finite field that this elliptic curve is over.
@param a the first coefficient of this elliptic curve.
@param b the second coefficient of this elliptic curve.
@param seed the bytes used during curve generation for later
validation. Contents of this array are copied to protect against
subsequent modification.
@exception NullPointerException if <code>field</code>,
<code>a</code>, or <code>b</code> is null.
@exception IllegalArgumentException if <code>a</code>
or <code>b</code> is not null and not in <code>field</code>."
      end

      operation 7688219 "getField"
	public return_type class_ref 977691 // ECField
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the finite field <code>field</code> that this 
elliptic curve is over.
@return the field <code>field</code> that this curve 
is over."
      end

      operation 7688347 "getA"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first coefficient <code>a</code> of the
elliptic curve.
@return the first coefficient <code>a</code>."
      end

      operation 7688475 "getB"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the second coefficient <code>b</code> of the
elliptic curve.
@return the second coefficient <code>b</code>."
      end

      operation 7688603 "getSeed"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the seeding bytes <code>seed</code> used 
during curve generation. May be null if not specified.
@return the seeding bytes <code>seed</code>. A new
array is returned each time this method is called."
      end

      operation 7688731 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this elliptic curve for equality with the
specified object. 
@param obj the object to be compared.
@return true if <code>obj</code> is an instance of
EllipticCurve and the field, A, B, and seeding bytes 
match, false otherwise."
      end

      operation 7688859 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this elliptic curve.
@return a hash code value."
      end
    end

    class 978331 "ECPrivateKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class specifies an elliptic curve private key with 
its associated parameters.

@see KeySpec
@see ECParameterSpec

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1900955 // <realization>
	relation 1900955 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1900955 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1901083 // s (<unidirectional association>)
	relation 1901083 --->
	  a role_name "s" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901083 // s (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1901211 // params (<unidirectional association>)
	relation 1901211 --->
	  a role_name "params" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901211 // params (<unidirectional association>)
	  b parent class_ref 976027 // ECParameterSpec
      end

      operation 7687067 "ECPrivateKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 775835 // BigInteger
	  param inout name "params" type class_ref 976027 // ECParameterSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ECPrivateKeySpec with the specified 
parameter values.
@param s the private value.
@param params the associated elliptic curve domain 
parameters.
@exception NullPointerException if <code>s</code>
or <code>params</code> is null."
      end

      operation 7687195 "getS"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private value S.
@return the private value S."
      end

      operation 7687323 "getParams"
	public return_type class_ref 976027 // ECParameterSpec
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the associated elliptic curve domain 
parameters.
@return the EC domain parameters."
      end
    end

    class 978459 "ECPublicKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This immutable class specifies an elliptic curve public key with 
its associated parameters.

@see KeySpec
@see ECPoint
@see ECParameterSpec

@author Valerie Peng
@version 1.3, 12/19/03

@since 1.5"
      classrelation 1901339 // <realization>
	relation 1901339 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1901339 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1901467 // w (<unidirectional association>)
	relation 1901467 --->
	  a role_name "w" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901467 // w (<unidirectional association>)
	  b parent class_ref 976411 // ECPoint
      end

      classrelation 1901595 // params (<unidirectional association>)
	relation 1901595 --->
	  a role_name "params" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1901595 // params (<unidirectional association>)
	  b parent class_ref 976027 // ECParameterSpec
      end

      operation 7687451 "ECPublicKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "w" type class_ref 976411 // ECPoint
	  param inout name "params" type class_ref 976027 // ECParameterSpec
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ECPublicKeySpec with the specified 
parameter values.
@param w the public point.
@param params the associated elliptic curve domain 
parameters.
@exception NullPointerException if <code>w</code>
or <code>params</code> is null.
@exception IllegalArgumentException if <code>w</code>
is point at infinity, i.e. ECPoint.POINT_INFINITY"
      end

      operation 7687579 "getW"
	public return_type class_ref 976411 // ECPoint
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public point W.
@return the public point W."
      end

      operation 7687707 "getParams"
	public return_type class_ref 976027 // ECParameterSpec
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the associated elliptic curve domain 
parameters.
@return the EC domain parameters."
      end
    end

    class 978587 "EncodedKeySpec"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a public or private key in encoded format.

@author Jan Luehe

@version 1.20, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see X509EncodedKeySpec
@see PKCS8EncodedKeySpec

@since 1.2"
      classrelation 1902107 // <realization>
	relation 1902107 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1902107 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      attribute 2864667 "encodedKey"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7688987 "EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param in name "encodedKey" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new EncodedKeySpec with the given encoded key.

@param encodedKey the encoded key. The contents of the 
array are copied to protect against subsequent modification."
      end

      operation 7689115 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded key.

@return the encoded key. Returns a new array each time
this method is called."
      end

      operation 7689243 "getFormat"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format associated with this
key specification.

<p>If the opaque representation of a key
(see {@link java.security.Key Key}) can be transformed
(see {@link java.security.KeyFactory KeyFactory})
into this key specification (or a subclass of it),
<code>getFormat</code> called
on the opaque key returns the same value as the
<code>getFormat</code> method
of this key specification.

@return a string representation of the encoding format."
      end
    end

    class 978715 "MGF1ParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies the set of parameters used with mask generation
function MGF1 in OAEP Padding and RSA-PSS signature scheme, as 
defined in the
<a href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">
PKCS #1 v2.1</a> standard.

<p>Its ASN.1 definition in PKCS#1 standard is described below:
<pre>
MGF1Parameters ::= OAEP-PSSDigestAlgorthms
</pre>
where
<pre>
OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
  { OID id-sha1 PARAMETERS NULL   }|
  { OID id-sha256 PARAMETERS NULL }|
  { OID id-sha384 PARAMETERS NULL }|
  { OID id-sha512 PARAMETERS NULL },
  ...  -- Allows for future expansion --
}
</pre>
@see PSSParameterSpec
@see javax.crypto.spec.OAEPParameterSpec

@author Valerie Peng

@version 1.3, 01/27/04
@since 1.5"
      classrelation 1902491 // <realization>
	relation 1902491 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1902491 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      classrelation 1902619 // SHA1 (<unidirectional association>)
	relation 1902619 --->
	  a role_name "SHA1" init_value "=  
	new MGF1ParameterSpec(\"SHA-1\")" class_relation const_relation public
	    comment "
The MGF1ParameterSpec which uses \"SHA-1\" message digest.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902619 // SHA1 (<unidirectional association>)
	  b parent class_ref 978715 // MGF1ParameterSpec
      end

      classrelation 1902747 // SHA256 (<unidirectional association>)
	relation 1902747 --->
	  a role_name "SHA256" init_value "=  
	new MGF1ParameterSpec(\"SHA-256\")" class_relation const_relation public
	    comment "
The MGF1ParameterSpec which uses \"SHA-256\" message digest.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902747 // SHA256 (<unidirectional association>)
	  b parent class_ref 978715 // MGF1ParameterSpec
      end

      classrelation 1902875 // SHA384 (<unidirectional association>)
	relation 1902875 --->
	  a role_name "SHA384" init_value "=  
	new MGF1ParameterSpec(\"SHA-384\")" class_relation const_relation public
	    comment "
The MGF1ParameterSpec which uses \"SHA-384\" message digest.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1902875 // SHA384 (<unidirectional association>)
	  b parent class_ref 978715 // MGF1ParameterSpec
      end

      classrelation 1903003 // SHA512 (<unidirectional association>)
	relation 1903003 --->
	  a role_name "SHA512" init_value "= 
	new MGF1ParameterSpec(\"SHA-512\")" class_relation const_relation public
	    comment "
The MGF1ParameterSpec which uses SHA-512 message digest.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903003 // SHA512 (<unidirectional association>)
	  b parent class_ref 978715 // MGF1ParameterSpec
      end

      attribute 2865051 "mdName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7690139 "MGF1ParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param in name "mdName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a parameter set for mask generation function MGF1
as defined in the PKCS #1 standard.

@param mdName the algorithm name for the message digest
used in this mask generation function MGF1. 
@exception NullPointerException if <code>mdName</code> is null."
      end

      operation 7690267 "getDigestAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm name of the message digest used by the mask 
generation function. 

@return the algorithm name of the message digest. "
      end
    end

    class 978843 "PKCS8EncodedKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents the ASN.1 encoding of a private key,
encoded according to the ASN.1 type <code>PrivateKeyInfo</code>.
The <code>PrivateKeyInfo</code> syntax is defined in the PKCS#8 standard
as follows:

<pre>
PrivateKeyInfo ::= SEQUENCE {
  version Version,
  privateKeyAlgorithm PrivateKeyAlgorithmIdentifier,
  privateKey PrivateKey,
  attributes [0] IMPLICIT Attributes OPTIONAL }

Version ::= INTEGER

PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier

PrivateKey ::= OCTET STRING

Attributes ::= SET OF Attribute
</pre>

@author Jan Luehe

@version 1.19, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see EncodedKeySpec
@see X509EncodedKeySpec

@since 1.2"
      classrelation 1903131 // <generalisation>
	relation 1903131 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1903131 // <generalisation>
	  b parent class_ref 978587 // EncodedKeySpec
      end

      operation 7690395 "PKCS8EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param in name "encodedKey" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new PKCS8EncodedKeySpec with the given encoded key.

@param encodedKey the key, which is assumed to be
encoded according to the PKCS #8 standard. The contents of 
the array are copied to protect against subsequent modification."
      end

      operation 7690523 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key bytes, encoded according to the PKCS #8 standard.

@return the PKCS #8 encoding of the key. Returns a new array 
each time this method is called."
      end

      operation 7690651 "getFormat"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format associated with this
key specification.

@return the string <code>\"PKCS#8\"</code>."
      end
    end

    class 978971 "PSSParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies a parameter spec for RSA-PSS signature scheme,
as defined in the 
<a href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">
PKCS#1 v2.1</a> standard.

<p>Its ASN.1 definition in PKCS#1 standard is described below:
<pre>
RSASSA-PSS-params ::= SEQUENCE {
  hashAlgorithm      [0] OAEP-PSSDigestAlgorithms  DEFAULT sha1,
  maskGenAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
  saltLength         [2] INTEGER  DEFAULT 20,
  trailerField       [3] INTEGER  DEFAULT 1
}
</pre>
where
<pre>
OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
  { OID id-sha1 PARAMETERS NULL   }|
  { OID id-sha256 PARAMETERS NULL }|
  { OID id-sha384 PARAMETERS NULL }|
  { OID id-sha512 PARAMETERS NULL },
  ...  -- Allows for future expansion --
}

PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
  { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms },
  ...  -- Allows for future expansion --
}
</pre>
<p>Note: the PSSParameterSpec.DEFAULT uses the following:
    message digest  -- \"SHA-1\"
    mask generation function (mgf) -- \"MGF1\"
    parameters for mgf -- MGF1ParameterSpec.SHA1
    SaltLength   -- 20
    TrailerField -- 1

@see MGF1ParameterSpec
@see AlgorithmParameterSpec
@see java.security.Signature

@author Valerie Peng

@version 1.6 04/01/27

@since 1.4"
      classrelation 1903259 // <realization>
	relation 1903259 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1903259 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      attribute 2865179 "mdName"
	private explicit_type "String"
	init_value "=  \"SHA-1\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2865307 "mgfName"
	private explicit_type "String"
	init_value "=  \"MGF1\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1903387 // mgfSpec (<unidirectional association>)
	relation 1903387 --->
	  a role_name "mgfSpec" init_value "=  MGF1ParameterSpec.SHA1" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903387 // mgfSpec (<unidirectional association>)
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      attribute 2865435 "saltLen"
	private explicit_type "int"
	init_value "=  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2865563 "trailerField"
	private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1903515 // DEFAULT (<unidirectional association>)
	relation 1903515 --->
	  a role_name "DEFAULT" init_value "=  new PSSParameterSpec()" class_relation const_relation public
	    comment "
The PSS parameter set with all default values.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903515 // DEFAULT (<unidirectional association>)
	  b parent class_ref 978971 // PSSParameterSpec
      end

      operation 7690779 "PSSParameterSpec"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PSSParameterSpec</code> as defined in
the PKCS #1 standard using the default values."
      end

      operation 7690907 "PSSParameterSpec"
	public explicit_return_type ""
	nparams 5
	  param in name "mdName" explicit_type "String"
	  param in name "mgfName" explicit_type "String"
	  param inout name "mgfSpec" type class_ref 960283 // AlgorithmParameterSpec
	  param in name "saltLen" explicit_type "int"
	  param in name "trailerField" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PSSParameterSpec</code> as defined in
the PKCS #1 standard using the specified message digest,
mask generation function, parameters for mask generation 
function, salt length, and trailer field values.

@param mdName the algorithm name of the hash function.
@param mgfName the algorithm name of the mask generation 
function.
@param mgfSpec the parameters for the mask generation 
function. If null is specified, null will be returned by 
getMGFParameters().
@param saltLen the length of salt.
@param trailerField the value of the trailer field.
@exception NullPointerException if <code>mdName</code>, 
or <code>mgfName</code> is null.
@exception IllegalArgumentException if <code>saltLen</code>
or <code>trailerField</code> is less than 0.
@since 1.5"
      end

      operation 7691035 "PSSParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param in name "saltLen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PSSParameterSpec</code>
using the specified salt length and other default values as 
defined in PKCS#1.

@param saltLen the length of salt in bits to be used in PKCS#1 
PSS encoding.
@exception IllegalArgumentException if <code>saltLen</code> is
less than 0."
      end

      operation 7691163 "getDigestAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message digest algorithm name.

@return the message digest algorithm name.
@since 1.5"
      end

      operation 7691291 "getMGFAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the mask generation function algorithm name.

@return the mask generation function algorithm name.

@since 1.5"
      end

      operation 7691419 "getMGFParameters"
	public return_type class_ref 960283 // AlgorithmParameterSpec
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters for the mask generation function.

@return the parameters for the mask generation function.
@since 1.5"
      end

      operation 7691547 "getSaltLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the salt length in bits.

@return the salt length."
      end

      operation 7691675 "getTrailerField"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for the trailer field, i.e. bc in PKCS#1 v2.1.

@return the value for the trailer field, i.e. bc in PKCS#1 v2.1.
@since 1.5"
      end
    end

    class 979099 "RSAKeyGenParameterSpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies the set of parameters used to generate an RSA
key pair.

@author Jan Luehe
@version 1.8 12/19/03

@see java.security.KeyPairGenerator#initialize(java.security.spec.AlgorithmParameterSpec)

@since 1.3"
      classrelation 1903643 // <realization>
	relation 1903643 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1903643 // <realization>
	  b parent class_ref 960283 // AlgorithmParameterSpec
      end

      attribute 2865691 "keysize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1903771 // publicExponent (<unidirectional association>)
	relation 1903771 --->
	  a role_name "publicExponent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903771 // publicExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1903899 // F0 (<unidirectional association>)
	relation 1903899 --->
	  a role_name "F0" init_value "=  BigInteger.valueOf(3)" class_relation const_relation public
	    comment "
The public-exponent value F0 = 3.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1903899 // F0 (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1904027 // F4 (<unidirectional association>)
	relation 1904027 --->
	  a role_name "F4" init_value "=  BigInteger.valueOf(65537)" class_relation const_relation public
	    comment "
The public exponent-value F4 = 65537.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904027 // F4 (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7691803 "RSAKeyGenParameterSpec"
	public explicit_return_type ""
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "publicExponent" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>RSAParameterSpec</code> object from the
given keysize and public-exponent value.

@param keysize the modulus size (specified in number of bits)
@param publicExponent the public exponent"
      end

      operation 7691931 "getKeysize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keysize.

@return the keysize."
      end

      operation 7692059 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public-exponent value.

@return the public-exponent value."
      end
    end

    class 979227 "RSAMultiPrimePrivateCrtKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies an RSA multi-prime private key, as defined in the 
PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information 
values for efficiency.

@author Valerie Peng

@version 1.8 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see PKCS8EncodedKeySpec
@see RSAPrivateKeySpec
@see RSAPublicKeySpec
@see RSAOtherPrimeInfo

@since 1.4"
      classrelation 1904539 // <generalisation>
	relation 1904539 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1904539 // <generalisation>
	  b parent class_ref 979355 // RSAPrivateKeySpec
      end

      classrelation 1904667 // publicExponent (<unidirectional association>)
	relation 1904667 --->
	  a role_name "publicExponent" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904667 // publicExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1904795 // primeP (<unidirectional association>)
	relation 1904795 --->
	  a role_name "primeP" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904795 // primeP (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1904923 // primeQ (<unidirectional association>)
	relation 1904923 --->
	  a role_name "primeQ" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904923 // primeQ (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905051 // primeExponentP (<unidirectional association>)
	relation 1905051 --->
	  a role_name "primeExponentP" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905051 // primeExponentP (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905179 // primeExponentQ (<unidirectional association>)
	relation 1905179 --->
	  a role_name "primeExponentQ" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905179 // primeExponentQ (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905307 // crtCoefficient (<unidirectional association>)
	relation 1905307 --->
	  a role_name "crtCoefficient" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905307 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1905435 // otherPrimeInfo (<unidirectional association>)
	relation 1905435 --->
	  a role_name "otherPrimeInfo" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1905435 // otherPrimeInfo (<unidirectional association>)
	  b parent class_ref 976923 // RSAOtherPrimeInfo
      end

      operation 7692571 "RSAMultiPrimePrivateCrtKeySpec"
	public explicit_return_type ""
	nparams 9
	  param inout name "modulus" type class_ref 775835 // BigInteger
	  param inout name "publicExponent" type class_ref 775835 // BigInteger
	  param inout name "privateExponent" type class_ref 775835 // BigInteger
	  param inout name "primeP" type class_ref 775835 // BigInteger
	  param inout name "primeQ" type class_ref 775835 // BigInteger
	  param inout name "primeExponentP" type class_ref 775835 // BigInteger
	  param inout name "primeExponentQ" type class_ref 775835 // BigInteger
	  param inout name "crtCoefficient" type class_ref 775835 // BigInteger
	  param inout name "otherPrimeInfo" type class_ref 976923 // RSAOtherPrimeInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>RSAMultiPrimePrivateCrtKeySpec</code>
given the modulus, publicExponent, privateExponent,
primeP, primeQ, primeExponentP, primeExponentQ,
crtCoefficient, and otherPrimeInfo as defined in PKCS#1 v2.1.

<p>Note that the contents of <code>otherPrimeInfo</code> 
are copied to protect against subsequent modification when 
constructing this object.

@param modulus the modulus n.
@param publicExponent the public exponent e.
@param privateExponent the private exponent d.
@param primeP the prime factor p of n.
@param primeQ the prime factor q of n.
@param primeExponentP this is d mod (p-1).
@param primeExponentQ this is d mod (q-1).
@param crtCoefficient the Chinese Remainder Theorem
coefficient q-1 mod p.
@param otherPrimeInfo triplets of the rest of primes, null can be
specified if there are only two prime factors (p and q).
@exception NullPointerException if any of the parameters, i.e. 
<code>modulus</code>, 
<code>publicExponent</code>, <code>privateExponent</code>, 
<code>primeP</code>, <code>primeQ</code>, 
<code>primeExponentP</code>, <code>primeExponentQ</code>,
<code>crtCoefficient</code>, is null.
@exception IllegalArgumentException if an empty, i.e. 0-length,
<code>otherPrimeInfo</code> is specified."
      end

      operation 7692699 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent."
      end

      operation 7692827 "getPrimeP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP."
      end

      operation 7692955 "getPrimeQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ."
      end

      operation 7693083 "getPrimeExponentP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP."
      end

      operation 7693211 "getPrimeExponentQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ."
      end

      operation 7693339 "getCrtCoefficient"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient."
      end

      operation 7693467 "getOtherPrimeInfo"
	public return_type class_ref 976923 // RSAOtherPrimeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the otherPrimeInfo or null if there are 
only two prime factors (p and q).

@return the otherPrimeInfo. Returns a new array each
time this method is called."
      end
    end

    class 979355 "RSAPrivateKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies an RSA private key.

@author Jan Luehe

@version 1.10 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see PKCS8EncodedKeySpec
@see RSAPublicKeySpec
@see RSAPrivateCrtKeySpec"
      classrelation 1904155 // <realization>
	relation 1904155 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1904155 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1904283 // modulus (<unidirectional association>)
	relation 1904283 --->
	  a role_name "modulus" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904283 // modulus (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1904411 // privateExponent (<unidirectional association>)
	relation 1904411 --->
	  a role_name "privateExponent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904411 // privateExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7692187 "RSAPrivateKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "modulus" type class_ref 775835 // BigInteger
	  param inout name "privateExponent" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RSAPrivateKeySpec.

@param modulus the modulus
@param privateExponent the private exponent"
      end

      operation 7692315 "getModulus"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus.

@return the modulus"
      end

      operation 7692443 "getPrivateExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private exponent.

@return the private exponent"
      end
    end

    class 979483 "RSAPrivateCrtKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies an RSA private key, as defined in the PKCS#1
standard, using the Chinese Remainder Theorem (CRT) information values for
efficiency.

@author Jan Luehe

@version 1.12 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see PKCS8EncodedKeySpec
@see RSAPrivateKeySpec
@see RSAPublicKeySpec"
      classrelation 1905947 // <generalisation>
	relation 1905947 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1905947 // <generalisation>
	  b parent class_ref 979355 // RSAPrivateKeySpec
      end

      classrelation 1906075 // publicExponent (<unidirectional association>)
	relation 1906075 --->
	  a role_name "publicExponent" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906075 // publicExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1906203 // primeP (<unidirectional association>)
	relation 1906203 --->
	  a role_name "primeP" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906203 // primeP (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1906331 // primeQ (<unidirectional association>)
	relation 1906331 --->
	  a role_name "primeQ" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906331 // primeQ (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1906459 // primeExponentP (<unidirectional association>)
	relation 1906459 --->
	  a role_name "primeExponentP" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906459 // primeExponentP (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1906587 // primeExponentQ (<unidirectional association>)
	relation 1906587 --->
	  a role_name "primeExponentQ" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906587 // primeExponentQ (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1906715 // crtCoefficient (<unidirectional association>)
	relation 1906715 --->
	  a role_name "crtCoefficient" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906715 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7694107 "RSAPrivateCrtKeySpec"
	public explicit_return_type ""
	nparams 8
	  param inout name "modulus" type class_ref 775835 // BigInteger
	  param inout name "publicExponent" type class_ref 775835 // BigInteger
	  param inout name "privateExponent" type class_ref 775835 // BigInteger
	  param inout name "primeP" type class_ref 775835 // BigInteger
	  param inout name "primeQ" type class_ref 775835 // BigInteger
	  param inout name "primeExponentP" type class_ref 775835 // BigInteger
	  param inout name "primeExponentQ" type class_ref 775835 // BigInteger
	  param inout name "crtCoefficient" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>RSAPrivateCrtKeySpec</code>
given the modulus, publicExponent, privateExponent,
primeP, primeQ, primeExponentP, primeExponentQ, and
crtCoefficient as defined in PKCS#1.

@param modulus the modulus n
@param publicExponent the public exponent e
@param privateExponent the private exponent d
@param primeP the prime factor p of n
@param primeQ the prime factor q of n
@param primeExponentP this is d mod (p-1)
@param primeExponentQ this is d mod (q-1)
@param crtCoefficient the Chinese Remainder Theorem
coefficient q-1 mod p"
      end

      operation 7694235 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent"
      end

      operation 7694363 "getPrimeP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP"
      end

      operation 7694491 "getPrimeQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ"
      end

      operation 7694619 "getPrimeExponentP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP"
      end

      operation 7694747 "getPrimeExponentQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ"
      end

      operation 7694875 "getCrtCoefficient"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient"
      end
    end

    class 979611 "RSAPublicKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class specifies an RSA public key.

@author Jan Luehe

@version 1.10 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see X509EncodedKeySpec
@see RSAPrivateKeySpec
@see RSAPrivateCrtKeySpec"
      classrelation 1906843 // <realization>
	relation 1906843 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1906843 // <realization>
	  b parent class_ref 963867 // KeySpec
      end

      classrelation 1906971 // modulus (<unidirectional association>)
	relation 1906971 --->
	  a role_name "modulus" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906971 // modulus (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      classrelation 1907099 // publicExponent (<unidirectional association>)
	relation 1907099 --->
	  a role_name "publicExponent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907099 // publicExponent (<unidirectional association>)
	  b parent class_ref 775835 // BigInteger
      end

      operation 7695003 "RSAPublicKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "modulus" type class_ref 775835 // BigInteger
	  param inout name "publicExponent" type class_ref 775835 // BigInteger
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RSAPublicKeySpec.

@param modulus the modulus
@param publicExponent the public exponent"
      end

      operation 7695131 "getModulus"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus.

@return the modulus"
      end

      operation 7695259 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent"
      end
    end

    class 979739 "X509EncodedKeySpec"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents the ASN.1 encoding of a public key,
encoded according to the ASN.1 type <code>SubjectPublicKeyInfo</code>.
The <code>SubjectPublicKeyInfo</code> syntax is defined in the X.509 
standard as follows:

<pre>
SubjectPublicKeyInfo ::= SEQUENCE {
  algorithm AlgorithmIdentifier,
  subjectPublicKey BIT STRING }
</pre>

@author Jan Luehe

@version 1.19, 12/19/03

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see EncodedKeySpec
@see PKCS8EncodedKeySpec

@since 1.2"
      classrelation 1907227 // <generalisation>
	relation 1907227 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1907227 // <generalisation>
	  b parent class_ref 978587 // EncodedKeySpec
      end

      operation 7695387 "X509EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param in name "encodedKey" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new X509EncodedKeySpec with the given encoded key.

@param encodedKey the key, which is assumed to be
encoded according to the X.509 standard. The contents of the 
array are copied to protect against subsequent modification."
      end

      operation 7695515 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key bytes, encoded according to the X.509 standard.

@return the X.509 encoding of the key. Returns a new array 
each time this method is called."
      end

      operation 7695643 "getFormat"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format associated with this
key specification.

@return the string <code>\"X.509\"</code>."
      end
    end
  end

  deploymentview 168603 "spec"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 745883 "AlgorithmParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 960283 // AlgorithmParameterSpec
      end
      comment "@(#)AlgorithmParameterSpec.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746011 "DSAParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 977307 // DSAParameterSpec
      end
      comment "@(#)DSAParameterSpec.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746139 "KeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 963867 // KeySpec
      end
      comment "@(#)KeySpec.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746267 "DSAPrivateKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 977435 // DSAPrivateKeySpec
      end
      comment "@(#)DSAPrivateKeySpec.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746395 "DSAPublicKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 977563 // DSAPublicKeySpec
      end
      comment "@(#)DSAPublicKeySpec.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746523 "ECField"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 977691 // ECField
      end
      comment "@(#)ECField.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746651 "ECFieldF2m"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 977819 // ECFieldF2m
      end
      comment "@(#)ECFieldF2m.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746779 "ECFieldFp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 977947 // ECFieldFp
      end
      comment "@(#)ECFieldFp.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 746907 "ECGenParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 978075 // ECGenParameterSpec
      end
      comment "@(#)ECGenParameterSpec.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747035 "ECParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 976027 // ECParameterSpec
      end
      comment "@(#)ECParameterSpec.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747163 "ECPoint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 976411 // ECPoint
      end
      comment "@(#)ECPoint.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747291 "ECPrivateKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 978331 // ECPrivateKeySpec
      end
      comment "@(#)ECPrivateKeySpec.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747419 "ECPublicKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 978459 // ECPublicKeySpec
      end
      comment "@(#)ECPublicKeySpec.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747547 "EllipticCurve"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 978203 // EllipticCurve
      end
      comment "@(#)EllipticCurve.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747675 "EncodedKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 978587 // EncodedKeySpec
      end
      comment "@(#)EncodedKeySpec.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747803 "InvalidKeySpecException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 963995 // InvalidKeySpecException
      end
      comment "@(#)InvalidKeySpecException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 747931 "InvalidParameterSpecException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 960795 // InvalidParameterSpecException
      end
      comment "@(#)InvalidParameterSpecException.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748059 "MGF1ParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 978715 // MGF1ParameterSpec
      end
      comment "@(#)MGF1ParameterSpec.java	1.3 04/01/27

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748187 "PKCS8EncodedKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 978843 // PKCS8EncodedKeySpec
      end
      comment "@(#)PKCS8EncodedKeySpec.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748315 "PSSParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.spec.MGF1ParameterSpec;
${definition}"
      associated_classes
	class_ref 978971 // PSSParameterSpec
      end
      comment "@(#)PSSParameterSpec.java	1.6 04/01/27

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748443 "RSAKeyGenParameterSpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 979099 // RSAKeyGenParameterSpec
      end
      comment "@(#)RSAKeyGenParameterSpec.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748571 "RSAPrivateKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 979355 // RSAPrivateKeySpec
      end
      comment "@(#)RSAPrivateKeySpec.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748699 "RSAMultiPrimePrivateCrtKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 979227 // RSAMultiPrimePrivateCrtKeySpec
      end
      comment "@(#)RSAMultiPrimePrivateCrtKeySpec.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748827 "RSAOtherPrimeInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 976923 // RSAOtherPrimeInfo
      end
      comment "@(#)RSAOtherPrimeInfo.java	1.6 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 748955 "RSAPrivateCrtKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 979483 // RSAPrivateCrtKeySpec
      end
      comment "@(#)RSAPrivateCrtKeySpec.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 749083 "RSAPublicKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 979611 // RSAPublicKeySpec
      end
      comment "@(#)RSAPublicKeySpec.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 749211 "X509EncodedKeySpec"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 979739 // X509EncodedKeySpec
      end
      comment "@(#)X509EncodedKeySpec.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
