class Collator
!!!7815323.java!!!	getInstance() : Collator
        return getInstance(Locale.getDefault());
!!!7815451.java!!!	getInstance(inout desiredLocale : Locale) : Collator
        RuleBasedCollator result = null;
        result = (RuleBasedCollator) cache.get(desiredLocale);
        if (result != null) {
                 return (Collator)result.clone();  // make the world safe
        }

        // Load the resource of the desired locale from resource
        // manager.
        String colString = "";
        int decomp = CANONICAL_DECOMPOSITION;
        
        try {
            ResourceBundle resource = LocaleData.getLocaleElements(desiredLocale);

            colString = resource.getString("CollationElements");
            decomp = ((Integer)resource.getObject("CollationDecomp")).intValue();
        } catch (MissingResourceException e) {
            // Use default values
        }
        try
        {
            result = new RuleBasedCollator( CollationRules.DEFAULTRULES +
                                            colString,
                                            decomp );
        }
        catch(ParseException foo)
        {
            // predefined tables should contain correct grammar
            try {
                result = new RuleBasedCollator( CollationRules.DEFAULTRULES );
            } catch (ParseException bar) {
                // do nothing
            }
        }
        // Now that RuleBasedCollator adds expansions for pre-composed characters
        // into their decomposed equivalents, the default collators don't need
        // to have decomposition turned on.  Laura, 5/5/98, bug 4114077
        result.setDecomposition(NO_DECOMPOSITION);
        
        cache.put(desiredLocale,result);
        return (Collator)result.clone();
!!!7815707.java!!!	compare(inout o1 : Object, inout o2 : Object) : int
    return compare((String)o1, (String)o2);
!!!7815963.java!!!	equals(in source : String, in target : String) : boolean
        return (compare(source, target) == Collator.EQUAL);
!!!7816091.java!!!	getStrength() : int
        return strength;
!!!7816219.java!!!	setStrength(in newStrength : int) : void
        if ((newStrength != PRIMARY) &&
            (newStrength != SECONDARY) &&
            (newStrength != TERTIARY) &&
            (newStrength != IDENTICAL))
            throw new IllegalArgumentException("Incorrect comparison level.");
        strength = newStrength;
!!!7816347.java!!!	getDecomposition() : int
        return decmp;
!!!7816475.java!!!	setDecomposition(in decompositionMode : int) : void
        if ((decompositionMode != NO_DECOMPOSITION) &&
            (decompositionMode != CANONICAL_DECOMPOSITION) &&
            (decompositionMode != FULL_DECOMPOSITION))
            throw new IllegalArgumentException("Wrong decomposition mode.");
        decmp = decompositionMode;
!!!7816603.java!!!	getAvailableLocales() : Locale
        return LocaleData.getAvailableLocales("CollationElements");
!!!7816731.java!!!	clone() : Object
        try {
            return (Collator)super.clone();
        } catch (CloneNotSupportedException e) {
            throw new InternalError();
        }
!!!7816859.java!!!	equals(inout that : Object) : boolean
        if (this == that) return true;
        if (that == null) return false;
        if (getClass() != that.getClass()) return false;
        Collator other = (Collator) that;
        return ((strength == other.strength) &&
                (decmp == other.decmp));
!!!7817115.java!!!	Collator()
        strength = TERTIARY;
        decmp = CANONICAL_DECOMPOSITION;
