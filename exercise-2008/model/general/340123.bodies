class JPEGHuffmanTable
!!!1884955.java!!!	JPEGHuffmanTable()
		lengths = null;
		symbols = null;
!!!1885083.java!!!	JPEGHuffmanTable(in lengths : short, in symbols : short)
		if ( lengths.length > HUFF_MAX_LEN )
			throw new IllegalArgumentException( "lengths array is too long" );
		for (int i=1; i < lengths.length; i++)
			if (lengths[i] < 0)
				throw new IllegalArgumentException
					( "Values in lengths array must be non-negative." );

		
		if ( symbols.length > HUFF_MAX_SYM )
			throw new IllegalArgumentException( "symbols array is too long" );
		for (int i=0; i < symbols.length; i++)
			if (symbols[i] < 0)
				throw new IllegalArgumentException
					( "Values in symbols array must be non-negative." );
		
		this.lengths = new short[lengths.length];
		this.symbols = new short[symbols.length];
		
		System.arraycopy( lengths, 0, this.lengths, 0, lengths.length );
		System.arraycopy( symbols, 0, this.symbols, 0, symbols.length );

		checkTable();
!!!1885211.java!!!	checkTable() : void
		int numVals=2;
		int sum=0;
		for (int i=1; i<lengths.length; i++) {
			sum     += lengths[i];
			numVals -= lengths[i];
			numVals *= 2;
		}

		//System.out.println("NumVals: " + numVals);
		//System.out.println("Sum: " + sum + " Symbols: " + symbols.length);

		if (numVals < 0) 
			throw new IllegalArgumentException
				("Invalid Huffman Table provided, lengths are incorrect.");

		// I'll let them go if they gave us 'extra' symbols...
		if (sum > symbols.length)
			throw new IllegalArgumentException
				("Invalid Huffman Table provided, not enough symbols.");
!!!1885339.java!!!	getLengths() : short
		short[] ret = new short[ lengths.length];
		System.arraycopy( lengths, 0, ret, 0, lengths.length);
		return ret;
!!!1885467.java!!!	getSymbols() : short
		short[] ret = new short[symbols.length];
		System.arraycopy( symbols, 0, ret, 0, symbols.length);
		return ret;
