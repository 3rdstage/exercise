class ParameterBlock
!!!6697883.java!!!	ParameterBlock(inout sources : Vector)
        setSources(sources);
!!!6698011.java!!!	ParameterBlock(inout sources : Vector, inout parameters : Vector)
        setSources(sources);
        setParameters(parameters);
!!!6698139.java!!!	shallowClone() : Object
        try {
            return super.clone();
        } catch (Exception e) {
            // We can't be here since we implement Cloneable.
            return null;
        }
!!!6698267.java!!!	clone() : Object
        ParameterBlock theClone;

        try {
            theClone = (ParameterBlock) super.clone();
        } catch (Exception e) {
            // We can't be here since we implement Cloneable.
            return null;
        }

        if (sources != null) {
            theClone.setSources((Vector)sources.clone());
        }
        if (parameters != null) {
            theClone.setParameters((Vector)parameters.clone());
        }
        return (Object) theClone;
!!!6698395.java!!!	addSource(inout source : Object) : ParameterBlock
        sources.addElement(source);
        return this;
!!!6698523.java!!!	getSource(in index : int) : Object
        return sources.elementAt(index);
!!!6698651.java!!!	setSource(inout source : Object, in index : int) : ParameterBlock
        int oldSize = sources.size();
        int newSize = index + 1;
        if (oldSize < newSize) {
            sources.setSize(newSize);
        }
        sources.setElementAt(source, index);
        return this;
!!!6698779.java!!!	getRenderedSource(in index : int) : RenderedImage
        return (RenderedImage) sources.elementAt(index);
!!!6698907.java!!!	getRenderableSource(in index : int) : RenderableImage
        return (RenderableImage) sources.elementAt(index);
!!!6699035.java!!!	getNumSources() : int
        return sources.size();
!!!6699163.java!!!	getSources() : Vector
        return sources;
!!!6699291.java!!!	setSources(inout sources : Vector) : void
        this.sources = sources;
!!!6699419.java!!!	removeSources() : void
        sources = new Vector();
!!!6699547.java!!!	getNumParameters() : int
        return parameters.size();
!!!6699675.java!!!	getParameters() : Vector
        return parameters;
!!!6699803.java!!!	setParameters(inout parameters : Vector) : void
        this.parameters = parameters;
!!!6699931.java!!!	removeParameters() : void
        parameters = new Vector();
!!!6700059.java!!!	add(inout obj : Object) : ParameterBlock
        parameters.addElement(obj);
        return this;
!!!6700187.java!!!	add(in b : byte) : ParameterBlock
        return add(new Byte(b));
!!!6700315.java!!!	add(in c : char) : ParameterBlock
        return add(new Character(c));
!!!6700443.java!!!	add(in s : short) : ParameterBlock
        return add(new Short(s));
!!!6700571.java!!!	add(in i : int) : ParameterBlock
        return add(new Integer(i));
!!!6700699.java!!!	add(in l : long) : ParameterBlock
        return add(new Long(l));
!!!6700827.java!!!	add(in f : float) : ParameterBlock
        return add(new Float(f));
!!!6700955.java!!!	add(in d : double) : ParameterBlock
        return add(new Double(d));
!!!6701083.java!!!	set(inout obj : Object, in index : int) : ParameterBlock
        int oldSize = parameters.size();
        int newSize = index + 1;
        if (oldSize < newSize) {
            parameters.setSize(newSize);
        }
        parameters.setElementAt(obj, index);
        return this;
!!!6701211.java!!!	set(in b : byte, in index : int) : ParameterBlock
        return set(new Byte(b), index);
!!!6701339.java!!!	set(in c : char, in index : int) : ParameterBlock
        return set(new Character(c), index);
!!!6701467.java!!!	set(in s : short, in index : int) : ParameterBlock
        return set(new Short(s), index);
!!!6701595.java!!!	set(in i : int, in index : int) : ParameterBlock
        return set(new Integer(i), index);
!!!6701723.java!!!	set(in l : long, in index : int) : ParameterBlock
        return set(new Long(l), index);
!!!6701851.java!!!	set(in f : float, in index : int) : ParameterBlock
        return set(new Float(f), index);
!!!6701979.java!!!	set(in d : double, in index : int) : ParameterBlock
        return set(new Double(d), index);
!!!6702107.java!!!	getObjectParameter(in index : int) : Object
        return parameters.elementAt(index);
!!!6702235.java!!!	getByteParameter(in index : int) : byte
        return ((Byte)parameters.elementAt(index)).byteValue();
!!!6702363.java!!!	getCharParameter(in index : int) : char
        return ((Character)parameters.elementAt(index)).charValue();
!!!6702491.java!!!	getShortParameter(in index : int) : short
        return ((Short)parameters.elementAt(index)).shortValue();
!!!6702619.java!!!	getIntParameter(in index : int) : int
        return ((Integer)parameters.elementAt(index)).intValue();
!!!6702747.java!!!	getLongParameter(in index : int) : long
        return ((Long)parameters.elementAt(index)).longValue();
!!!6702875.java!!!	getFloatParameter(in index : int) : float
        return ((Float)parameters.elementAt(index)).floatValue();
!!!6703003.java!!!	getDoubleParameter(in index : int) : double
        return ((Double)parameters.elementAt(index)).doubleValue();
!!!6703131.java!!!	getParamClasses() : Class
        int numParams = getNumParameters();
        Class [] classes = new Class[numParams];
        int i;

        for (i = 0; i < numParams; i++) {
            Object obj = getObjectParameter(i);
            if (obj instanceof Byte) {
              classes[i] = byte.class;
            } else if (obj instanceof Character) {
              classes[i] = char.class;
            } else if (obj instanceof Short) {
              classes[i] = short.class;
            } else if (obj instanceof Integer) {
              classes[i] = int.class;
            } else if (obj instanceof Long) {
              classes[i] = long.class;
            } else if (obj instanceof Float) {
              classes[i] = float.class;
            } else if (obj instanceof Double) {
              classes[i] = double.class;
            } else {
              classes[i] = obj.getClass();
            }
        }
        
        return classes;
