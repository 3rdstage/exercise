class ModelMBeanOperationInfo
!!!8302363.java!!!	ModelMBeanOperationInfo(in description : String, inout operationMethod : Method)
		super(description, operationMethod);
		// create default descriptor
		if (tracing())
		{
			trace("ModelMBeanOperationInfo(String,Method)","Executed");
		}
		operationDescriptor = createDefaultDescriptor();


!!!8302491.java!!!	ModelMBeanOperationInfo(in description : String, inout operationMethod : Method, inout descriptor : Descriptor)

		super(description, operationMethod);
		if (tracing())
		{
			trace("ModelMBeanOperationInfo(String,Method,Descriptor)","Executed");
		}
		if (descriptor == null)
		{
			if (tracing())
			{
				trace("ModelMBeanOperationInfo()","Received null for new descriptor value, setting descriptor to default values");
			}
			operationDescriptor = createDefaultDescriptor();
		} else
		{
			if (isValid(descriptor))
			{
				operationDescriptor = (Descriptor) descriptor.clone();
			} else
			{
				operationDescriptor = createDefaultDescriptor();
				throw new RuntimeOperationsException(new IllegalArgumentException("Invalid descriptor passed in parameter"), ("Exception occured in ModelMBeanOperationInfo constructor"));
			}
		}
!!!8302619.java!!!	ModelMBeanOperationInfo(in name : String, in description : String, inout signature : MBeanParameterInfo, in type : String, in impact : int)

		super(name, description, signature, type, impact);
		// create default descriptor
		if (tracing())
		{
			trace("ModelMBeanOperationInfo(String,String,MBeanParameterInfo[],String,int)","Executed");
		}
		operationDescriptor = createDefaultDescriptor();

!!!8302747.java!!!	ModelMBeanOperationInfo(in name : String, in description : String, inout signature : MBeanParameterInfo, in type : String, in impact : int, inout descriptor : Descriptor)
		super(name, description, signature, type, impact);
		if (tracing())
		{
			trace("ModelMBeanOperationInfo(String,String,MBeanParameterInfo[],String,int,Descriptor)","Executed");
		}
		if (descriptor == null)
		{
			if (tracing())
			{
				trace("ModelMBeanOperationInfo()","Received null for new descriptor value, setting descriptor to default values");
			}
			operationDescriptor = createDefaultDescriptor();
		} else
		{
			if (isValid(descriptor))
			{
				operationDescriptor = (Descriptor) descriptor.clone();
			} else
			{
				operationDescriptor = createDefaultDescriptor();
				throw new RuntimeOperationsException(new IllegalArgumentException("Invalid descriptor passed in parameter"), ("Exception occured in ModelMBeanOperationInfo constructor"));
			}

		}
!!!8302875.java!!!	ModelMBeanOperationInfo(inout inInfo : ModelMBeanOperationInfo)
		super(inInfo.getName(), 
			  inInfo.getDescription(), 
			  inInfo.getSignature(),
			  inInfo.getReturnType(), 
			  inInfo.getImpact());
		if (tracing())
		{
			trace("ModelMBeanOperationInfo(ModelMBeanOperationInfo)","Executed");
		}
		Descriptor newDesc = inInfo.getDescriptor();
		if (newDesc == null)
		{
			operationDescriptor = createDefaultDescriptor();
		} else
		{
			if (isValid(newDesc))
			{
				operationDescriptor = (Descriptor) newDesc.clone();
			} else
			{
				operationDescriptor = createDefaultDescriptor();
				throw new RuntimeOperationsException(new IllegalArgumentException("Invalid descriptor passed in parameter"), ("Exception occured in ModelMBeanOperationInfo constructor"));
			}

		}
!!!8303003.java!!!	clone() : Object
		if (tracing())
		{
			trace("ModelMBeanOperationInfo.clone()","Executed");
		}
		return(new ModelMBeanOperationInfo(this)) ;
!!!8303131.java!!!	getDescriptor() : Descriptor
		if (tracing())
		{
			trace("ModelMBeanOperationInfo.getDescriptor()","Executed");
		}
		if (operationDescriptor == null)
		{
			operationDescriptor = createDefaultDescriptor();
		}

		return((Descriptor) operationDescriptor.clone());
!!!8303259.java!!!	setDescriptor(inout inDescriptor : Descriptor) : void
		if (tracing())
		{
			trace("ModelMBeanOperationInfo.setDescriptor(Descriptor)","Executed");
		}
		if (inDescriptor == null)
		{
			if (tracing())
			{
				trace("ModelMBeanOperationInfo.setDescriptor()","Received null for new descriptor value, setting descriptor to default values");
			}
			operationDescriptor = createDefaultDescriptor();
		} else
		{
			if (isValid(inDescriptor))
			{
				operationDescriptor = (Descriptor) inDescriptor.clone();
			} else
			{
				throw new RuntimeOperationsException(new IllegalArgumentException("Invalid descriptor passed in parameter"), ("Exception occured in ModelMBeanOperationInfo setDescriptor"));
			}
		}
!!!8303387.java!!!	toString() : String
		if (tracing())
		{
			trace("ModelMBeanConstructorInfo.toString()","Executed");
		}
		String retStr =
		    "ModelMBeanOperationInfo: " + this.getName() +
		    " ; Description: " + this.getDescription() +
		    " ; Descriptor: " + this.getDescriptor() +
		    " ; ReturnType: " + this.getReturnType() +
		    " ; Signature: ";
		MBeanParameterInfo[] pTypes = this.getSignature();
		for (int i=0; i < pTypes.length; i++)
		{
			retStr = retStr.concat((pTypes[i]).getType() + ", ");
		}
		return retStr;
!!!8303515.java!!!	createDefaultDescriptor() : Descriptor
		if (tracing())
		{
			trace("ModelMBeanOperationInfo.createDefaultDescriptor()","Executed");
		}
		return new DescriptorSupport(new String[] {"descriptorType=operation",
							       ("name=" + this.getName()),
							       "role=operation",
							       ("displayname=" + this.getName())});
!!!8303643.java!!!	isValid(inout inDesc : Descriptor) : boolean
		boolean results = true;
		String badField = "none";
		// if name != this.getName
		// if (descriptorType != operation)
		// look for displayName, persistPolicy, visibility and add in
		if (inDesc == null)
		{
			results = false;
		}

		else if (!inDesc.isValid())
		{	 // checks for empty descriptors, null,
			// checks for empty name and descriptorType
			// and valid values for fields.
			results = false;
		} else
		{
			if (! ((String)inDesc.getFieldValue("name")).equalsIgnoreCase(this.getName()))
			{
				results = false;
			}
			if (! ((String)inDesc.getFieldValue("descriptorType")).equalsIgnoreCase("operation"))
			{
				results = false;
			}
			Object roleValue = inDesc.getFieldValue("role");
			if (roleValue == null)
			{
				inDesc.setField("role","operation");
			} else {
			    final String role = (String)roleValue;
			    if (!(role.equalsIgnoreCase("operation")
				  || role.equalsIgnoreCase("setter")
				  || role.equalsIgnoreCase("getter"))) {
				results = false;
				badField="role";
			    }
			}

			Object targetValue = inDesc.getFieldValue("targetType");
			if (targetValue != null) {
			    if (!(targetValue instanceof java.lang.String)) {
				results = false;
				badField="targetType";
				
			    }
			}
			if ((inDesc.getFieldValue("displayName")) == null)
			    {
				inDesc.setField("displayName",this.getName());
			    }
		}
		if (tracing()) trace("isValid()",("Returning " + results + ": Invalid field is " + badField));
		return results;
!!!8303771.java!!!	tracing() : boolean
		//      return false;
		return Trace.isSelected(Trace.LEVEL_TRACE, Trace.INFO_MODELMBEAN);
!!!8303899.java!!!	trace(in inClass : String, in inMethod : String, in inText : String) : void
		//      System.out.println("TRACE: " + inClass + ":" + inMethod + ": " + inText);
		Trace.send(Trace.LEVEL_TRACE, Trace.INFO_MODELMBEAN, inClass,
				   inMethod,  Integer.toHexString(this.hashCode()) + " " + inText); 
!!!8304027.java!!!	trace(in inMethod : String, in inText : String) : void
		trace(currClass, inMethod, inText);
!!!8304155.java!!!	readObject(inout in : ObjectInputStream) : void
      // New serial form ignores extra field "currClass"
      in.defaultReadObject();
!!!8304283.java!!!	writeObject(inout out : ObjectOutputStream) : void
      if (compat)
      {
        // Serializes this instance in the old serial form
        //
        ObjectOutputStream.PutField fields = out.putFields();
	fields.put("operationDescriptor", operationDescriptor);
	fields.put("currClass", currClass);
	out.writeFields();
      }
      else
      {
        // Serializes this instance in the new serial form
        //
        out.defaultWriteObject();
      }
