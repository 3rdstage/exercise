class BetweenQueryExp
!!!8224795.java!!!	BetweenQueryExp()
 
!!!8224923.java!!!	BetweenQueryExp(inout v1 : ValueExp, inout v2 : ValueExp, inout v3 : ValueExp)
 
	exp1  = v1;
	exp2  = v2;
	exp3  = v3;
!!!8225051.java!!!	getCheckedValue() : ValueExp
 
	return exp1;
!!!8225179.java!!!	getLowerBound() : ValueExp
 
	return exp2;
!!!8225307.java!!!	getUpperBound() : ValueExp
 
	return exp3;
!!!8225435.java!!!	apply(inout name : ObjectName) : boolean
 
	ValueExp val1 = exp1.apply(name);
	ValueExp val2 = exp2.apply(name);
	ValueExp val3 = exp3.apply(name);
	String sval1;
	String sval2;
	String sval3;
	double dval1;
	double dval2;
	double dval3;
	long lval1;
	long lval2;
	long lval3;
	boolean numeric = val1 instanceof NumericValueExp;
	
	if (numeric) {
	    if (((NumericValueExp)val1).isLong()) {
		lval1 = ((NumericValueExp)val1).longValue();
		lval2 = ((NumericValueExp)val2).longValue();
		lval3 = ((NumericValueExp)val3).longValue();
		return lval2 <= lval1 && lval1 <= lval3;
	    } else {
		dval1 = ((NumericValueExp)val1).doubleValue();
		dval2 = ((NumericValueExp)val2).doubleValue();
		dval3 = ((NumericValueExp)val3).doubleValue();
		return dval2 <= dval1 && dval1 <= dval3;
	    }
	    
	} else {
	    sval1 = ((StringValueExp)val1).toString();
	    sval2 = ((StringValueExp)val2).toString();
	    sval3 = ((StringValueExp)val3).toString();
	    return sval2.compareTo(sval1) <= 0 && sval1.compareTo(sval3) <= 0;
	}
!!!8225563.java!!!	toString() : String
 
	return "(" + exp1 + ") between (" + exp2 + ") and (" + exp3 + ")";
