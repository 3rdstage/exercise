class HTMLElementImpl
!!!4011803.java!!!	HTMLElementImpl(inout owner : HTMLDocumentImpl, in tagName : String)
        super( owner, tagName.toUpperCase(Locale.ENGLISH) );
!!!4011931.java!!!	getId() : String
        return getAttribute( "id" );
!!!4012059.java!!!	setId(in id : String) : void
        setAttribute( "id", id );
!!!4012187.java!!!	getTitle() : String
        return getAttribute( "title" );
!!!4012315.java!!!	setTitle(in title : String) : void
        setAttribute( "title", title );
!!!4012443.java!!!	getLang() : String
        return getAttribute( "lang" );
!!!4012571.java!!!	setLang(in lang : String) : void
        setAttribute( "lang", lang );
!!!4012699.java!!!	getDir() : String
        return getAttribute( "dir" );
!!!4012827.java!!!	setDir(in dir : String) : void
        setAttribute( "dir", dir );
!!!4012955.java!!!	getClassName() : String
        return getAttribute( "class" );
!!!4013083.java!!!	setClassName(in className : String) : void
        setAttribute( "class", className );
!!!4013211.java!!!	getInteger(in value : String) : int
        try
        {
            return Integer.parseInt( value );
        }
        catch ( NumberFormatException except )
        {
            return 0;
        }
!!!4013339.java!!!	getBinary(in name : String) : boolean
        return ( getAttributeNode( name ) != null );
!!!4013467.java!!!	setAttribute(in name : String, inout value : boolean) : void
        if ( value )
            setAttribute( name, name );
        else
            removeAttribute( name );
!!!4013595.java!!!	getAttributeNode(in attrName : String) : Attr
	return super.getAttributeNode( attrName.toLowerCase(Locale.ENGLISH) );
!!!4013723.java!!!	getAttributeNodeNS(in namespaceURI : String, in localName : String) : Attr
	if ( namespaceURI != null && namespaceURI.length() > 0 )
	    return super.getAttributeNodeNS( namespaceURI, localName );
	else
	    return super.getAttributeNode( localName.toLowerCase(Locale.ENGLISH) );
!!!4013851.java!!!	getAttribute(in attrName : String) : String
	return super.getAttribute( attrName.toLowerCase(Locale.ENGLISH) );
!!!4013979.java!!!	getAttributeNS(in namespaceURI : String, in localName : String) : String
	if ( namespaceURI != null && namespaceURI.length() > 0 )
	    return super.getAttributeNS( namespaceURI, localName );
	else
	    return super.getAttribute( localName.toLowerCase(Locale.ENGLISH) );
!!!4014107.java!!!	getElementsByTagName(in tagName : String) : NodeList
	return super.getElementsByTagName( tagName.toUpperCase(Locale.ENGLISH) );
!!!4014235.java!!!	getElementsByTagNameNS(in namespaceURI : String, in localName : String) : NodeList
	if ( namespaceURI != null && namespaceURI.length() > 0 )
	    return super.getElementsByTagNameNS( namespaceURI, localName.toUpperCase(Locale.ENGLISH) );
	else
	    return super.getElementsByTagName( localName.toUpperCase(Locale.ENGLISH) );
!!!4014363.java!!!	capitalize(in value : String) : String
        char[]    chars;
        int        i;
        
        // Convert string to charactares. Convert the first one to upper case,
        // the other characters to lower case, and return the converted string.
        chars = value.toCharArray();
        if ( chars.length > 0 )
        {
            chars[ 0 ] = Character.toUpperCase( chars[ 0 ] );
            for ( i = 1 ; i < chars.length ; ++i )
                chars[ i ] = Character.toLowerCase( chars[ i ] );
            return String.valueOf( chars );
        }
        return value;
!!!4014491.java!!!	getCapitalized(in name : String) : String
        String    value;
        char[]    chars;
        int        i;
        
        value = getAttribute( name );
        if ( value != null )
        {
            // Convert string to charactares. Convert the first one to upper case,
            // the other characters to lower case, and return the converted string.
            chars = value.toCharArray();
            if ( chars.length > 0 )
            {
                chars[ 0 ] = Character.toUpperCase( chars[ 0 ] );
                for ( i = 1 ; i < chars.length ; ++i )
                    chars[ i ] = Character.toLowerCase( chars[ i ] );
                return String.valueOf( chars );
            }
        }
        return value;
!!!4014619.java!!!	getForm() : HTMLFormElement
        Node    parent;
        
        parent = getParentNode(); 
        while ( parent != null )
        {
            if ( parent instanceof HTMLFormElement )
                return (HTMLFormElement) parent;
            parent = parent.getParentNode();
        }
        return null;
