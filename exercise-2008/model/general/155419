format 66
"regex" // src::java::util::regex
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/util/regex"
  java_package "java.util.regex"
  classview 153627 "regex"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 393627 "PatternSyntaxException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Unchecked exception thrown to indicate a syntax error in a
regular-expression pattern.

@author  unascribed
@version 1.13, 03/12/19
@since 1.4
@spec JSR-51"
      classrelation 1991195 // <generalisation>
	relation 1991195 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1991195 // <generalisation>
	  b parent class_ref 216859 // IllegalArgumentException
      end

      attribute 2991899 "desc"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2992027 "pattern"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2992155 "index"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8138907 "PatternSyntaxException"
	public explicit_return_type ""
	nparams 3
	  param in name "desc" explicit_type "String"
	  param in name "regex" explicit_type "String"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class.

@param  desc
        A description of the error

@param  regex
        The erroneous pattern

@param  index
        The approximate index in the pattern of the error,
        or <tt>-1</tt> if the index is not known"
      end

      operation 8139035 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the error index.

@return  The approximate index in the pattern of the error,
        or <tt>-1</tt> if the index is not known"
      end

      operation 8139163 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the description of the error.

@return  The description of the error"
      end

      operation 8139291 "getPattern"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the erroneous regular-expression pattern.

@return  The erroneous pattern"
      end

      attribute 2992283 "nl"
	class_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 167195 "initialization"
	
	cpp "" ""
	java "  static {
	nl = (String)java.security.AccessController
	    .doPrivileged(new GetPropertyAction(\"line.separator\"));
    }"
	php ""
	python ""
	idl ""
      end

      operation 8139419 "getMessage"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a multi-line string containing the description of the syntax
error and its index, the erroneous regular-expression pattern, and a
visual indication of the error index within the pattern.

@return  The full detail message"
      end
    end

    class 435867 "Pattern"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A compiled representation of a regular expression.

<p> A regular expression, specified as a string, must first be compiled into
an instance of this class.  The resulting pattern can then be used to create
a {@link Matcher} object that can match arbitrary {@link
java.lang.CharSequence </code>character sequences<code>} against the regular
expression.  All of the state involved in performing a match resides in the
matcher, so many matchers can share the same pattern.

<p> A typical invocation sequence is thus

<blockquote><pre>
Pattern p = Pattern.{@link #compile compile}(\"a*b\");
Matcher m = p.{@link #matcher matcher}(\"aaaaab\");
boolean b = m.{@link Matcher#matches matches}();</pre></blockquote>

<p> A {@link #matches matches} method is defined by this class as a
convenience for when a regular expression is used just once.  This method
compiles an expression and matches an input sequence against it in a single
invocation.  The statement

<blockquote><pre>
boolean b = Pattern.matches(\"a*b\", \"aaaaab\");</pre></blockquote>

is equivalent to the three statements above, though for repeated matches it
is less efficient since it does not allow the compiled pattern to be reused.

<p> Instances of this class are immutable and are safe for use by multiple
concurrent threads.  Instances of the {@link Matcher} class are not safe for
such use.


<a name=\"sum\">
<h4> Summary of regular-expression constructs </h4>

<table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" 
 summary=\"Regular expression constructs, and what they match\">

<tr align=\"left\">
<th bgcolor=\"#CCCCFF\" align=\"left\" id=\"construct\">Construct</th>
<th bgcolor=\"#CCCCFF\" align=\"left\" id=\"matches\">Matches</th>
</tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"characters\">Characters</th></tr>

<tr><td valign=\"top\" headers=\"construct characters\"><i>x</i></td>
    <td headers=\"matches\">The character <i>x</i></td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\\\</tt></td>
    <td headers=\"matches\">The backslash character</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>n</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>n</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>nn</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>nn</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\0</tt><i>mnn</i></td>
    <td headers=\"matches\">The character with octal value <tt>0</tt><i>mnn</i>
        (0&nbsp;<tt>&lt;=</tt>&nbsp;<i>m</i>&nbsp;<tt>&lt;=</tt>&nbsp;3,
        0&nbsp;<tt>&lt;=</tt>&nbsp;<i>n</i>&nbsp;<tt>&lt;=</tt>&nbsp;7)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\x</tt><i>hh</i></td>
    <td headers=\"matches\">The character with hexadecimal&nbsp;value&nbsp;<tt>0x</tt><i>hh</i></td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>&#92;u</tt><i>hhhh</i></td>
    <td headers=\"matches\">The character with hexadecimal&nbsp;value&nbsp;<tt>0x</tt><i>hhhh</i></td></tr>
<tr><td valign=\"top\" headers=\"matches\"><tt>\\t</tt></td>
    <td headers=\"matches\">The tab character (<tt>'&#92;u0009'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\n</tt></td>
    <td headers=\"matches\">The newline (line feed) character (<tt>'&#92;u000A'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\r</tt></td>
    <td headers=\"matches\">The carriage-return character (<tt>'&#92;u000D'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\f</tt></td>
    <td headers=\"matches\">The form-feed character (<tt>'&#92;u000C'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\a</tt></td>
    <td headers=\"matches\">The alert (bell) character (<tt>'&#92;u0007'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\e</tt></td>
    <td headers=\"matches\">The escape character (<tt>'&#92;u001B'</tt>)</td></tr>
<tr><td valign=\"top\" headers=\"construct characters\"><tt>\\c</tt><i>x</i></td>
    <td headers=\"matches\">The control character corresponding to <i>x</i></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"classes\">Character classes</th></tr>

<tr><td valign=\"top\" headers=\"construct classes\"><tt>[abc]</tt></td>
    <td headers=\"matches\"><tt>a</tt>, <tt>b</tt>, or <tt>c</tt> (simple class)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[^abc]</tt></td>
    <td headers=\"matches\">Any character except <tt>a</tt>, <tt>b</tt>, or <tt>c</tt> (negation)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[a-zA-Z]</tt></td>
    <td headers=\"matches\"><tt>a</tt> through <tt>z</tt>
        or <tt>A</tt> through <tt>Z</tt>, inclusive (range)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[a-d[m-p]]</tt></td>
    <td headers=\"matches\"><tt>a</tt> through <tt>d</tt>,
     or <tt>m</tt> through <tt>p</tt>: <tt>[a-dm-p]</tt> (union)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[a-z&&[def]]</tt></td>
    <td headers=\"matches\"><tt>d</tt>, <tt>e</tt>, or <tt>f</tt> (intersection)</tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[a-z&&[^bc]]</tt></td>
    <td headers=\"matches\"><tt>a</tt> through <tt>z</tt>,
        except for <tt>b</tt> and <tt>c</tt>: <tt>[ad-z]</tt> (subtraction)</td></tr>
<tr><td valign=\"top\" headers=\"construct classes\"><tt>[a-z&&[^m-p]]</tt></td>
    <td headers=\"matches\"><tt>a</tt> through <tt>z</tt>,
         and not <tt>m</tt> through <tt>p</tt>: <tt>[a-lq-z]</tt>(subtraction)</td></tr>
<tr><th>&nbsp;</th></tr>

<tr align=\"left\"><th colspan=\"2\" id=\"predef\">Predefined character classes</th></tr>

<tr><td valign=\"top\" headers=\"construct predef\"><tt>.</tt></td>
    <td headers=\"matches\">Any character (may or may not match <a href=\"#lt\">line terminators</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\d</tt></td>
    <td headers=\"matches\">A digit: <tt>[0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\D</tt></td>
    <td headers=\"matches\">A non-digit: <tt>[^0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\s</tt></td>
    <td headers=\"matches\">A whitespace character: <tt>[ \\t\\n\\x0B\\f\\r]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\S</tt></td>
    <td headers=\"matches\">A non-whitespace character: <tt>[^\\s]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\w</tt></td>
    <td headers=\"matches\">A word character: <tt>[a-zA-Z_0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct predef\"><tt>\\W</tt></td>
    <td headers=\"matches\">A non-word character: <tt>[^\\w]</tt></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"posix\">POSIX character classes</b> (US-ASCII only)<b></th></tr>

<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Lower}</tt></td>
    <td headers=\"matches\">A lower-case alphabetic character: <tt>[a-z]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Upper}</tt></td>
    <td headers=\"matches\">An upper-case alphabetic character:<tt>[A-Z]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{ASCII}</tt></td>
    <td headers=\"matches\">All ASCII:<tt>[\\x00-\\x7F]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Alpha}</tt></td>
    <td headers=\"matches\">An alphabetic character:<tt>[\\p{Lower}\\p{Upper}]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Digit}</tt></td>
    <td headers=\"matches\">A decimal digit: <tt>[0-9]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Alnum}</tt></td>
    <td headers=\"matches\">An alphanumeric character:<tt>[\\p{Alpha}\\p{Digit}]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Punct}</tt></td>
    <td headers=\"matches\">Punctuation: One of <tt>!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~</tt></td></tr>
    <!-- <tt>[\\!\"#\\$%&'\\(\\)\\*\\+,\\-\\./:;\\<=\\>\\?@\\[\\\\\\]\\^_`\\{\\|\\}~]</tt>
         <tt>[\\X21-\\X2F\\X31-\\X40\\X5B-\\X60\\X7B-\\X7E]</tt> -->
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Graph}</tt></td>
    <td headers=\"matches\">A visible character: <tt>[\\p{Alnum}\\p{Punct}]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Print}</tt></td>
    <td headers=\"matches\">A printable character: <tt>[\\p{Graph}\\x20]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Blank}</tt></td>
    <td headers=\"matches\">A space or a tab: <tt>[ \\t]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Cntrl}</tt></td>
    <td headers=\"matches\">A control character: <tt>[\\x00-\\x1F\\x7F]</td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{XDigit}</tt></td>
    <td headers=\"matches\">A hexadecimal digit: <tt>[0-9a-fA-F]</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct posix\"><tt>\\p{Space}</tt></td>
    <td headers=\"matches\">A whitespace character: <tt>[ \\t\\n\\x0B\\f\\r]</tt></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\">java.lang.Character classes (simple <a href=\"#jcc\">java character type</a>)</th></tr>

<tr><td valign=\"top\"><tt>\\p{javaLowerCase}</tt></td>
    <td>Equivalent to java.lang.Character.isLowerCase()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaUpperCase}</tt></td>
    <td>Equivalent to java.lang.Character.isUpperCase()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaWhitespace}</tt></td>
    <td>Equivalent to java.lang.Character.isWhitespace()</td></tr>
<tr><td valign=\"top\"><tt>\\p{javaMirrored}</tt></td>
    <td>Equivalent to java.lang.Character.isMirrored()</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"unicode\">Classes for Unicode blocks and categories</th></tr>

<tr><td valign=\"top\" headers=\"construct unicode\"><tt>\\p{InGreek}</tt></td>
    <td headers=\"matches\">A character in the Greek&nbsp;block (simple <a href=\"#ubc\">block</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\"><tt>\\p{Lu}</tt></td>
    <td headers=\"matches\">An uppercase letter (simple <a href=\"#ubc\">category</a>)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\"><tt>\\p{Sc}</tt></td>
    <td headers=\"matches\">A currency symbol</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\"><tt>\\P{InGreek}</tt></td>
    <td headers=\"matches\">Any character except one in the Greek block (negation)</td></tr>
<tr><td valign=\"top\" headers=\"construct unicode\"><tt>[\\p{L}&&[^\\p{Lu}]]&nbsp;</tt></td>
    <td headers=\"matches\">Any letter except an uppercase letter (subtraction)</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"bounds\">Boundary matchers</th></tr>

<tr><td valign=\"top\" headers=\"construct bounds\"><tt>^</tt></td>
    <td headers=\"matches\">The beginning of a line</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>$</tt></td>
    <td headers=\"matches\">The end of a line</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\b</tt></td>
    <td headers=\"matches\">A word boundary</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\B</tt></td>
    <td headers=\"matches\">A non-word boundary</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\A</tt></td>
    <td headers=\"matches\">The beginning of the input</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\G</tt></td>
    <td headers=\"matches\">The end of the previous match</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\Z</tt></td>
    <td headers=\"matches\">The end of the input but for the final
        <a href=\"#lt\">terminator</a>, if&nbsp;any</td></tr>
<tr><td valign=\"top\" headers=\"construct bounds\"><tt>\\z</tt></td>
    <td headers=\"matches\">The end of the input</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"greedy\">Greedy quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>?</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>*</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>+</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>}</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>,}</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct greedy\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"reluc\">Reluctant quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>??</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>*?</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>+?</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>}?</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>,}?</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct reluc\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}?</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"poss\">Possessive quantifiers</th></tr>

<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>?+</tt></td>
    <td headers=\"matches\"><i>X</i>, once or not at all</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>*+</tt></td>
    <td headers=\"matches\"><i>X</i>, zero or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>++</tt></td>
    <td headers=\"matches\"><i>X</i>, one or more times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>}+</tt></td>
    <td headers=\"matches\"><i>X</i>, exactly <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>,}+</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> times</td></tr>
<tr><td valign=\"top\" headers=\"construct poss\"><i>X</i><tt>{</tt><i>n</i><tt>,</tt><i>m</i><tt>}+</tt></td>
    <td headers=\"matches\"><i>X</i>, at least <i>n</i> but not more than <i>m</i> times</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"logical\">Logical operators</th></tr>

<tr><td valign=\"top\" headers=\"construct logical\"><i>XY</i></td>
    <td headers=\"matches\"><i>X</i> followed by <i>Y</i></td></tr>
<tr><td valign=\"top\" headers=\"construct logical\"><i>X</i><tt>|</tt><i>Y</i></td>
    <td headers=\"matches\">Either <i>X</i> or <i>Y</i></td></tr>
<tr><td valign=\"top\" headers=\"construct logical\"><tt>(</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\">X, as a <a href=\"#cg\">capturing group</a></td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"backref\">Back references</th></tr>

<tr><td valign=\"bottom\" headers=\"construct backref\"><tt>\\</tt><i>n</i></td>
    <td valign=\"bottom\" headers=\"matches\">Whatever the <i>n</i><sup>th</sup>
    <a href=\"#cg\">capturing group</a> matched</td></tr>

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"quot\">Quotation</th></tr>

<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\</tt></td>
    <td headers=\"matches\">Nothing, but quotes the following character</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\Q</tt></td>
    <td headers=\"matches\">Nothing, but quotes all characters until <tt>\\E</tt></td></tr>
<tr><td valign=\"top\" headers=\"construct quot\"><tt>\\E</tt></td>
    <td headers=\"matches\">Nothing, but ends quoting started by <tt>\\Q</tt></td></tr>
    <!-- Metachars: !$()*+.<>?[\\]^{|} -->

<tr><th>&nbsp;</th></tr>
<tr align=\"left\"><th colspan=\"2\" id=\"special\">Special constructs (non-capturing)</th></tr>

<tr><td valign=\"top\" headers=\"construct special\"><tt>(?:</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, as a non-capturing group</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?idmsux-idmsux)&nbsp;</tt></td>
    <td headers=\"matches\">Nothing, but turns match flags on - off</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?idmsux-idmsux:</tt><i>X</i><tt>)</tt>&nbsp;&nbsp;</td>
    <td headers=\"matches\"><i>X</i>, as a <a href=\"#cg\">non-capturing group</a> with the
        given flags on - off</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?=</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width positive lookahead</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?!</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width negative lookahead</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&lt;=</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width positive lookbehind</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&lt;!</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, via zero-width negative lookbehind</td></tr>
<tr><td valign=\"top\" headers=\"construct special\"><tt>(?&gt;</tt><i>X</i><tt>)</tt></td>
    <td headers=\"matches\"><i>X</i>, as an independent, non-capturing group</td></tr>

</table>

<hr>


<a name=\"bs\">
<h4> Backslashes, escapes, and quoting </h4>

<p> The backslash character (<tt>'\\'</tt>) serves to introduce escaped
constructs, as defined in the table above, as well as to quote characters
that otherwise would be interpreted as unescaped constructs.  Thus the
expression <tt>\\\\</tt> matches a single backslash and <tt>\\{</tt> matches a
left brace.

<p> It is an error to use a backslash prior to any alphabetic character that
does not denote an escaped construct; these are reserved for future
extensions to the regular-expression language.  A backslash may be used
prior to a non-alphabetic character regardless of whether that character is
part of an unescaped construct.

<p> Backslashes within string literals in Java source code are interpreted
as required by the <a
href=\"http://java.sun.com/docs/books/jls/second_edition/html/\">Java Language
Specification</a> as either <a
href=\"http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#100850\">Unicode
escapes</a> or other <a
href=\"http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#101089\">character
escapes</a>.  It is therefore necessary to double backslashes in string
literals that represent regular expressions to protect them from
interpretation by the Java bytecode compiler.  The string literal
<tt>\"&#92;b\"</tt>, for example, matches a single backspace character when
interpreted as a regular expression, while <tt>\"&#92;&#92;b\"</tt> matches a
word boundary.  The string literal <tt>\"&#92;(hello&#92;)\"</tt> is illegal
and leads to a compile-time error; in order to match the string
<tt>(hello)</tt> the string literal <tt>\"&#92;&#92;(hello&#92;&#92;)\"</tt>
must be used.

<a name=\"cc\">
<h4> Character Classes </h4>

   <p> Character classes may appear within other character classes, and
   may be composed by the union operator (implicit) and the intersection
   operator (<tt>&amp;&amp;</tt>).
   The union operator denotes a class that contains every character that is
   in at least one of its operand classes.  The intersection operator
   denotes a class that contains every character that is in both of its
   operand classes.

   <p> The precedence of character-class operators is as follows, from
   highest to lowest:

   <blockquote><table border=\"0\" cellpadding=\"1\" cellspacing=\"0\" 
                summary=\"Precedence of character class operators.\">
     <tr><th>1&nbsp;&nbsp;&nbsp;&nbsp;</th>
	  <td>Literal escape&nbsp;&nbsp;&nbsp;&nbsp;</td>
	  <td><tt>\\x</tt></td></tr>
    <tr><th>2&nbsp;&nbsp;&nbsp;&nbsp;</th>
	  <td>Grouping</td>
	  <td><tt>[...]</tt></td></tr>
    <tr><th>3&nbsp;&nbsp;&nbsp;&nbsp;</th>
	  <td>Range</td>
	  <td><tt>a-z</tt></td></tr>
     <tr><th>4&nbsp;&nbsp;&nbsp;&nbsp;</th>
	  <td>Union</td>
	  <td><tt>[a-e][i-u]<tt></td></tr>
     <tr><th>5&nbsp;&nbsp;&nbsp;&nbsp;</th>
	  <td>Intersection</td>
	  <td><tt>[a-z&&[aeiou]]</tt></td></tr>
   </table></blockquote>

   <p> Note that a different set of metacharacters are in effect inside
   a character class than outside a character class. For instance, the
   regular expression <tt>.</tt> loses its special meaning inside a
   character class, while the expression <tt>-</tt> becomes a range
   forming metacharacter.

<a name=\"lt\">
<h4> Line terminators </h4>

<p> A <i>line terminator</i> is a one- or two-character sequence that marks
the end of a line of the input character sequence.  The following are
recognized as line terminators:

<ul>

  <li> A newline (line feed) character&nbsp;(<tt>'\\n'</tt>),

  <li> A carriage-return character followed immediately by a newline
  character&nbsp;(<tt>\"\\r\\n\"</tt>),

  <li> A standalone carriage-return character&nbsp;(<tt>'\\r'</tt>),

  <li> A next-line character&nbsp;(<tt>'&#92;u0085'</tt>),

  <li> A line-separator character&nbsp;(<tt>'&#92;u2028'</tt>), or

  <li> A paragraph-separator character&nbsp;(<tt>'&#92;u2029</tt>).

</ul>
<p>If {@link #UNIX_LINES} mode is activated, then the only line terminators
recognized are newline characters.

<p> The regular expression <tt>.</tt> matches any character except a line
terminator unless the {@link #DOTALL} flag is specified.

<p> By default, the regular expressions <tt>^</tt> and <tt>$</tt> ignore
line terminators and only match at the beginning and the end, respectively,
of the entire input sequence. If {@link #MULTILINE} mode is activated then
<tt>^</tt> matches at the beginning of input and after any line terminator
except at the end of input. When in {@link #MULTILINE} mode <tt>$</tt>
matches just before a line terminator or the end of the input sequence.

<a name=\"cg\">
<h4> Groups and capturing </h4>

<p> Capturing groups are numbered by counting their opening parentheses from
left to right.  In the expression <tt>((A)(B(C)))</tt>, for example, there
are four such groups: </p>

<blockquote><table cellpadding=1 cellspacing=0 summary=\"Capturing group numberings\">
<tr><th>1&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>((A)(B(C)))</tt></td></tr>
<tr><th>2&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(A)</tt></td></tr>
<tr><th>3&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(B(C))</tt></td></tr>
<tr><th>4&nbsp;&nbsp;&nbsp;&nbsp;</th>
    <td><tt>(C)</tt></td></tr>
</table></blockquote>

<p> Group zero always stands for the entire expression.

<p> Capturing groups are so named because, during a match, each subsequence
of the input sequence that matches such a group is saved.  The captured
subsequence may be used later in the expression, via a back reference, and
may also be retrieved from the matcher once the match operation is complete.

<p> The captured input associated with a group is always the subsequence
that the group most recently matched.  If a group is evaluated a second time
because of quantification then its previously-captured value, if any, will
be retained if the second evaluation fails.  Matching the string
<tt>\"aba\"</tt> against the expression <tt>(a(b)?)+</tt>, for example, leaves
group two set to <tt>\"b\"</tt>.  All captured input is discarded at the
beginning of each match.

<p> Groups beginning with <tt>(?</tt> are pure, <i>non-capturing</i> groups
that do not capture text and do not count towards the group total.


<h4> Unicode support </h4>

<p> This class is in conformance with Level 1 of <a
href=\"http://www.unicode.org/reports/tr18/\"><i>Unicode Technical
Standard #18: Unicode Regular Expression Guidelines</i></a>, plus RL2.1
Canonical Equivalents.

<p> Unicode escape sequences such as <tt>&#92;u2014</tt> in Java source code
are processed as described in <a
href=\"http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html#100850\">\\u00A73.3</a>
of the Java Language Specification.  Such escape sequences are also
implemented directly by the regular-expression parser so that Unicode
escapes can be used in expressions that are read from files or from the
keyboard.  Thus the strings <tt>\"&#92;u2014\"</tt> and <tt>\"\\\\u2014\"</tt>,
while not equal, compile into the same pattern, which matches the character
with hexadecimal value <tt>0x2014</tt>.

<a name=\"ubc\"> <p>Unicode blocks and categories are written with the
<tt>\\p</tt> and <tt>\\P</tt> constructs as in
Perl. <tt>\\p{</tt><i>prop</i><tt>}</tt> matches if the input has the
property <i>prop</i>, while \\P{</tt><i>prop</i><tt>}</tt> does not match if
the input has that property.  Blocks are specified with the prefix
<tt>In</tt>, as in <tt>InMongolian</tt>.  Categories may be specified with
the optional prefix <tt>Is</tt>: Both <tt>\\p{L}</tt> and <tt>\\p{IsL}</tt>
denote the category of Unicode letters.  Blocks and categories can be used
both inside and outside of a character class.

<p> The supported categories are those of 
<a href=\"http://www.unicode.org/unicode/standard/standard.html\">
<i>The Unicode Standard</i></a> in the version specified by the 
{@link java.lang.Character Character} class. The category names are those
defined in the Standard, both normative and informative.
The block names supported by <code>Pattern</code> are the valid block names
accepted and defined by 
{@link java.lang.Character.UnicodeBlock#forName(String) UnicodeBlock.forName}.

<a name=\"jcc\"> <p>Categories that behave like the java.lang.Character
boolean is<i>methodname</i> methods (except for the deprecated ones) are
available through the same <tt>\\p{</tt><i>prop</i><tt>}</tt> syntax where
the specified property has the name <tt>java<i>methodname</i></tt>.

<h4> Comparison to Perl 5 </h4>

<p>The <code>Pattern</code> engine performs traditional NFA-based matching
with ordered alternation as occurs in Perl 5.

<p> Perl constructs not supported by this class: </p>

<ul>

   <li><p> The conditional constructs <tt>(?{</tt><i>X</i><tt>})</tt> and
   <tt>(?(</tt><i>condition</i><tt>)</tt><i>X</i><tt>|</tt><i>Y</i><tt>)</tt>,
   </p></li>

   <li><p> The embedded code constructs <tt>(?{</tt><i>code</i><tt>})</tt>
   and <tt>(??{</tt><i>code</i><tt>})</tt>,</p></li>

   <li><p> The embedded comment syntax <tt>(?#comment)</tt>, and </p></li>

   <li><p> The preprocessing operations <tt>\\l</tt> <tt>&#92;u</tt>,
   <tt>\\L</tt>, and <tt>\\U</tt>.  </p></li>

</ul>

<p> Constructs supported by this class but not by Perl: </p>

<ul>

   <li><p> Possessive quantifiers, which greedily match as much as they can
   and do not back off, even when doing so would allow the overall match to
   succeed.  </p></li>

   <li><p> Character-class union and intersection as described
   <a href=\"#cc\">above</a>.</p></li>

</ul>

<p> Notable differences from Perl: </p>

<ul>

   <li><p> In Perl, <tt>\\1</tt> through <tt>\\9</tt> are always interpreted
   as back references; a backslash-escaped number greater than <tt>9</tt> is
   treated as a back reference if at least that many subexpressions exist,
   otherwise it is interpreted, if possible, as an octal escape.  In this
   class octal escapes must always begin with a zero. In this class,
   <tt>\\1</tt> through <tt>\\9</tt> are always interpreted as back
   references, and a larger number is accepted as a back reference if at
   least that many subexpressions exist at that point in the regular
   expression, otherwise the parser will drop digits until the number is
   smaller or equal to the existing number of groups or it is one digit.
   </p></li>

   <li><p> Perl uses the <tt>g</tt> flag to request a match that resumes
   where the last match left off.  This functionality is provided implicitly
   by the {@link Matcher} class: Repeated invocations of the {@link
   Matcher#find find} method will resume where the last match left off,
   unless the matcher is reset.  </p></li>

   <li><p> In Perl, embedded flags at the top level of an expression affect
   the whole expression.  In this class, embedded flags always take effect
   at the point at which they appear, whether they are at the top level or
   within a group; in the latter case, flags are restored at the end of the
   group just as in Perl.  </p></li>

   <li><p> Perl is forgiving about malformed matching constructs, as in the
   expression <tt>*a</tt>, as well as dangling brackets, as in the
   expression <tt>abc]</tt>, and treats them as literals.  This
   class also accepts dangling brackets but is strict about dangling
   metacharacters like +, ? and *, and will throw a
   {@link PatternSyntaxException} if it encounters them. </p></li>

</ul>


<p> For a more precise description of the behavior of regular expression
constructs, please see <a href=\"http://www.oreilly.com/catalog/regex2/\">
<i>Mastering Regular Expressions, 2nd Edition</i>, Jeffrey E. F. Friedl,
O'Reilly and Associates, 2002.</a>
</p>

@see java.lang.String#split(String, int)
@see java.lang.String#split(String)

@author      Mike McCloskey
@author      Mark Reinhold
@author	JSR-51 Expert Group
@version 	1.113, 07/05/07
@since       1.4
@spec	JSR-51"
      classrelation 1977371 // <realization>
	relation 1977371 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1977371 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2980891 "UNIX_LINES"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Regular expression modifier values.  Instead of being passed as
arguments, they can also be passed as inline modifiers.
For example, the following statements have the same effect.
<pre>
RegExp r1 = RegExp.compile(\"abc\", Pattern.I|Pattern.M);
RegExp r2 = RegExp.compile(\"(?im)abc\", 0);
</pre>

The flags are duplicated so that the familiar Perl match flag
names are available.


Enables Unix lines mode.

<p> In this mode, only the <tt>'\\n'</tt> line terminator is recognized
in the behavior of <tt>.</tt>, <tt>^</tt>, and <tt>$</tt>.

<p> Unix lines mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?d)</tt>.
"
      end

      attribute 2981019 "CASE_INSENSITIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables case-insensitive matching.

<p> By default, case-insensitive matching assumes that only characters
in the US-ASCII charset are being matched.  Unicode-aware
case-insensitive matching can be enabled by specifying the {@link
#UNICODE_CASE} flag in conjunction with this flag.

<p> Case-insensitive matching can also be enabled via the embedded flag
expression&nbsp;<tt>(?i)</tt>.

<p> Specifying this flag may impose a slight performance penalty.  </p>
"
      end

      attribute 2981147 "COMMENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Permits whitespace and comments in pattern.

<p> In this mode, whitespace is ignored, and embedded comments starting
with <tt>#</tt> are ignored until the end of a line.

<p> Comments mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?x)</tt>.
"
      end

      attribute 2981275 "MULTILINE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables multiline mode.

<p> In multiline mode the expressions <tt>^</tt> and <tt>$</tt> match
just after or just before, respectively, a line terminator or the end of
the input sequence.  By default these expressions only match at the
beginning and the end of the entire input sequence.

<p> Multiline mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?m)</tt>.  </p>
"
      end

      attribute 2981403 "LITERAL"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables literal parsing of the pattern.

<p> When this flag is specified then the input string that specifies
the pattern is treated as a sequence of literal characters.
Metacharacters or escape sequences in the input sequence will be
given no special meaning.

<p>The flags CASE_INSENSITIVE and UNICODE_CASE retain their impact on
matching when used in conjunction with this flag. The other flags
become superfluous.

<p> There is no embedded flag character for enabling literal parsing.
"
      end

      attribute 2981531 "DOTALL"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables dotall mode.

<p> In dotall mode, the expression <tt>.</tt> matches any character,
including a line terminator.  By default this expression does not match
line terminators.

<p> Dotall mode can also be enabled via the embedded flag
expression&nbsp;<tt>(?s)</tt>.  (The <tt>s</tt> is a mnemonic for
\"single-line\" mode, which is what this is called in Perl.)  </p>
"
      end

      attribute 2981659 "UNICODE_CASE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables Unicode-aware case folding.

<p> When this flag is specified then case-insensitive matching, when
enabled by the {@link #CASE_INSENSITIVE} flag, is done in a manner
consistent with the Unicode Standard.  By default, case-insensitive
matching assumes that only characters in the US-ASCII charset are being
matched.

<p> Unicode-aware case folding can also be enabled via the embedded flag
expression&nbsp;<tt>(?u)</tt>.

<p> Specifying this flag may impose a performance penalty.  </p>
"
      end

      attribute 2981787 "CANON_EQ"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Enables canonical equivalence.

<p> When this flag is specified then two characters will be considered
to match if, and only if, their full canonical decompositions match.
The expression <tt>\"a&#92;u030A\"</tt>, for example, will match the
string <tt>\"\\u00E5\"</tt> when this flag is specified.  By default,
matching does not take canonical equivalence into account.

<p> There is no embedded flag character for enabling canonical
equivalence.

<p> Specifying this flag may impose a performance penalty.  </p>
"
      end

      attribute 2981915 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5073258162644648461L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Pattern has only two serialized components: The pattern string
and the flags, which are all that is needed to recompile the pattern
when it is deserialized.

 use serialVersionUID from Merlin b59 for interoperability "
      end

      attribute 2982043 "pattern"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The original regular-expression pattern string.

@serial
"
      end

      attribute 2982171 "flags"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The original pattern flags.

@serial
"
      end

      attribute 2982299 "compiled"
	volatile private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Boolean indicating this Pattern is compiled; this is necessary in order
to lazily compile deserialized Patterns.
"
      end

      attribute 2982427 "normalizedPattern"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The normalized pattern string.
"
      end

      class 1011355 "Node"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978011 // <generalisation>
	  relation 1978011 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978011 // <generalisation>
	    b parent class_ref 168347 // Object
	end

	classrelation 1978139 // next (<unidirectional association>)
	  relation 1978139 --->
	    a role_name "next" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1978139 // next (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8109595 "Node"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8109723 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8109851 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method implements the classic accept node."
	end

	operation 8109979 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method is good for all zero length assertions."
	end
      end

      classrelation 1977499 // root (<unidirectional association>)
	relation 1977499 --->
	  a role_name "root" package
	    comment "
The starting point of state machine for the find operation.  This allows
a match to start anywhere in the input.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1977499 // root (<unidirectional association>)
	  b parent class_ref 1011355 // Node
      end

      classrelation 1977627 // matchRoot (<unidirectional association>)
	relation 1977627 --->
	  a role_name "matchRoot" package
	    comment "
The root of object tree for a match operation.  The pattern is matched
at the beginning.  This may include a find that uses BnM or a First
node.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1977627 // matchRoot (<unidirectional association>)
	  b parent class_ref 1011355 // Node
      end

      attribute 2982555 "buffer"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Temporary storage used by parsing pattern slice.
"
      end

      class 1011483 "GroupHead"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1985819 // <generalisation>
	  relation 1985819 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1985819 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2988955 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8130203 "GroupHead"
	  package explicit_return_type ""
	  nparams 1
	    param in name "localCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8130331 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8130459 "matchRef"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1977755 // groupNodes (<unidirectional association>)
	relation 1977755 --->
	  a role_name "groupNodes" multiplicity "[]" package
	    comment "
Temporary storage used while parsing group references.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1977755 // groupNodes (<unidirectional association>)
	  b parent class_ref 1011483 // GroupHead
      end

      attribute 2982683 "temp"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Temporary null terminating char array used by pattern compiling.
"
      end

      attribute 2982811 "capturingGroupCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of capturing groups in this Pattern. Used by matchers to
allocate storage needed to perform a match.
"
      end

      attribute 2982939 "localCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The local variable count used by parsing tree. Used by matchers to
allocate storage needed to perform a match.
"
      end

      attribute 2983067 "cursor"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index into the pattern string that keeps track of how much has been
parsed.
"
      end

      attribute 2983195 "patternLength"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Holds the length of the pattern string.
"
      end

      operation 8100251 "compile"
	class_operation public return_type class_ref 435867 // Pattern
	nparams 1
	  param in name "regex" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression into a pattern.  </p>

@param  regex
        The expression to be compiled

@throws  PatternSyntaxException
         If the expression's syntax is invalid"
      end

      operation 8100379 "compile"
	class_operation public return_type class_ref 435867 // Pattern
	nparams 2
	  param in name "regex" explicit_type "String"
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression into a pattern with the given
flags.  </p>

@param  regex
        The expression to be compiled

@param  flags
        Match flags, a bit mask that may include
        {@link #CASE_INSENSITIVE}, {@link #MULTILINE}, {@link #DOTALL},
        {@link #UNICODE_CASE}, and {@link #CANON_EQ}

@throws  IllegalArgumentException
         If bit values other than those corresponding to the defined
         match flags are set in <tt>flags</tt>

@throws  PatternSyntaxException
         If the expression's syntax is invalid"
      end

      operation 8100507 "pattern"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the regular expression from which this pattern was compiled.
</p>

@return  The source of this pattern"
      end

      operation 8100635 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the string representation of this pattern. This
is the regular expression from which this pattern was
compiled.</p>

@return  The string representation of this pattern
@since 1.5"
      end

      operation 8100763 "matcher"
	public return_type class_ref 1011099 // Matcher
	nparams 1
	  param inout name "input" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a matcher that will match the given input against this pattern.
</p>

@param  input
        The character sequence to be matched

@return  A new matcher for this pattern"
      end

      operation 8100891 "flags"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this pattern's match flags.  </p>

@return  The match flags specified when this pattern was compiled"
      end

      operation 8101019 "matches"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "regex" explicit_type "String"
	  param inout name "input" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the given regular expression and attempts to match the given
input against it.

<p> An invocation of this convenience method of the form

<blockquote><pre>
Pattern.matches(regex, input);</pre></blockquote>

behaves in exactly the same way as the expression

<blockquote><pre>
Pattern.compile(regex).matcher(input).matches()</pre></blockquote>

<p> If a pattern is to be used multiple times, compiling it once and reusing
it will be more efficient than invoking this method each time.  </p>

@param  regex
        The expression to be compiled

@param  input
        The character sequence to be matched

@throws  PatternSyntaxException
         If the expression's syntax is invalid"
      end

      operation 8101147 "split"
	public explicit_return_type "String"
	nparams 2
	  param inout name "input" type class_ref 393755 // CharSequence
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits the given input sequence around matches of this pattern.

<p> The array returned by this method contains each substring of the
input sequence that is terminated by another subsequence that matches
this pattern or is terminated by the end of the input sequence.  The
substrings in the array are in the order in which they occur in the
input.  If this pattern does not match any subsequence of the input then
the resulting array has just one element, namely the input sequence in
string form.

<p> The <tt>limit</tt> parameter controls the number of times the
pattern is applied and therefore affects the length of the resulting
array.  If the limit <i>n</i> is greater than zero then the pattern
will be applied at most <i>n</i>&nbsp;-&nbsp;1 times, the array's
length will be no greater than <i>n</i>, and the array's last entry
will contain all input beyond the last matched delimiter.  If <i>n</i>
is non-positive then the pattern will be applied as many times as
possible and the array can have any length.  If <i>n</i> is zero then
the pattern will be applied as many times as possible, the array can
have any length, and trailing empty strings will be discarded.

<p> The input <tt>\"boo:and:foo\"</tt>, for example, yields the following
results with these parameters:

<blockquote><table cellpadding=1 cellspacing=0 
             summary=\"Split examples showing regex, limit, and result\">
<tr><th><P align=\"left\"><i>Regex&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th><P align=\"left\"><i>Limit&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th><P align=\"left\"><i>Result&nbsp;&nbsp;&nbsp;&nbsp;</i></th></tr>
<tr><td align=center>:</td>
    <td align=center>2</td>
    <td><tt>{ \"boo\", \"and:foo\" }</tt></td></tr>
<tr><td align=center>:</td>
    <td align=center>5</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>:</td>
    <td align=center>-2</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>5</td>
    <td><tt>{ \"b\", \"\", \":and:f\", \"\", \"\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>-2</td>
    <td><tt>{ \"b\", \"\", \":and:f\", \"\", \"\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td align=center>0</td>
    <td><tt>{ \"b\", \"\", \":and:f\" }</tt></td></tr>
</table></blockquote>


@param  input
        The character sequence to be split

@param  limit
        The result threshold, as described above

@return  The array of strings computed by splitting the input
         around matches of this pattern"
      end

      operation 8101275 "split"
	public explicit_return_type "String"
	nparams 1
	  param inout name "input" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits the given input sequence around matches of this pattern.

<p> This method works as if by invoking the two-argument {@link
#split(java.lang.CharSequence, int) split} method with the given input
sequence and a limit argument of zero.  Trailing empty strings are
therefore not included in the resulting array. </p>

<p> The input <tt>\"boo:and:foo\"</tt>, for example, yields the following
results with these expressions:

<blockquote><table cellpadding=1 cellspacing=0 
             summary=\"Split examples showing regex and result\">
<tr><th><P align=\"left\"><i>Regex&nbsp;&nbsp;&nbsp;&nbsp;</i></th>
    <th><P align=\"left\"><i>Result</i></th></tr>
<tr><td align=center>:</td>
    <td><tt>{ \"boo\", \"and\", \"foo\" }</tt></td></tr>
<tr><td align=center>o</td>
    <td><tt>{ \"b\", \"\", \":and:f\" }</tt></td></tr>
</table></blockquote>


@param  input
        The character sequence to be split

@return  The array of strings computed by splitting the input
         around matches of this pattern"
      end

      operation 8101403 "quote"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a literal pattern <code>String</code> for the specified
<code>String</code>.

<p>This method produces a <code>String</code> that can be used to
create a <code>Pattern</code> that would match the string
<code>s</code> as if it were a literal pattern.</p> Metacharacters
or escape sequences in the input sequence will be given no special
meaning.

@param  s The string to be literalized
@return  A literal string replacement
@since 1.5"
      end

      operation 8101531 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recompile the Pattern instance from a stream.  The original pattern
string is read in and the object tree is recompiled from it."
      end

      operation 8101659 "Pattern"
	private explicit_return_type ""
	nparams 2
	  param in name "p" explicit_type "String"
	  param in name "f" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This private constructor is used to create all Patterns. The pattern
string and match flags are all that is needed to completely describe
a Pattern. An empty pattern string results in an object tree with
only a Start node and a LastNode node."
      end

      operation 8101787 "normalize"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The pattern is converted to normalizedD form and then a pure group
is constructed to match canonical equivalences of the characters."
      end

      operation 8101915 "normalizeCharClass"
	private explicit_return_type "int"
	nparams 2
	  param inout name "newPattern" type class_ref 360091 // StringBuilder
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Complete the character class being parsed and add a set
of alternations to it that will match the canonical equivalences
of the characters within the class."
      end

      operation 8102043 "produceEquivalentAlternation"
	private explicit_return_type "String"
	nparams 1
	  param in name "source" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a specific sequence composed of a regular character and
combining marks that follow it, produce the alternation that will
match all canonical equivalences of that sequence."
      end

      operation 8102171 "producePermutations"
	private explicit_return_type "String"
	nparams 1
	  param in name "input" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings that have all the possible
permutations of the characters in the input string.
This is used to get a list of all possible orderings
of a set of combining marks. Note that some of the permutations
are invalid because of combining class collisions, and these
possibilities must be removed because they are not canonically
equivalent."
      end

      operation 8102299 "getClass"
	private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8102427 "composeOneStep"
	private explicit_return_type "String"
	nparams 1
	  param in name "input" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to compose input by combining the first character
with the first combining mark following it. Returns a String
that is the composition of the leading character with its first
combining mark followed by the remaining combining marks. Returns
null if the first two characters cannot be further composed."
      end

      operation 8102555 "compile"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies regular expression to a char array and invokes the parsing
of the expression which will create the object tree."
      end

      operation 8102683 "printObjectTree"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 1011355 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to print out a subtree of the Pattern to help with debugging."
      end

      class 1011611 "TreeInfo"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2983323 "minLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2983451 "maxLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2983579 "maxValid"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2983707 "deterministic"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8102811 "TreeInfo"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8102939 "reset"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8103067 "has"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "f" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The following private methods are mainly used to improve the
readability of the code. In order to let the Java compiler easily
inline them, we should not put many assertions or error checks in them.


Indicates whether a particular flag is set or not."
      end

      operation 8103195 "accept"
	private explicit_return_type "void"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match next character, signal error if failed."
      end

      operation 8103323 "mark"
	private explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the end of pattern with a specific character."
      end

      operation 8103451 "peek"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peek the next character, and do not advance the cursor."
      end

      operation 8103579 "read"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the next character, and advance the cursor by one."
      end

      operation 8103707 "readEscaped"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the next character, and advance the cursor by one,
ignoring the COMMENTS setting"
      end

      operation 8103835 "next"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Advance the cursor by one, and peek the next character."
      end

      operation 8103963 "nextEscaped"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Advance the cursor by one, and peek the next character,
ignoring the COMMENTS setting"
      end

      operation 8104091 "peekPastWhitespace"
	private explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If in xmode peek past whitespace and comments."
      end

      operation 8104219 "parsePastWhitespace"
	private explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If in xmode parse past whitespace and comments."
      end

      operation 8104347 "parsePastLine"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "xmode parse past comment to end of line."
      end

      operation 8104475 "peekPastLine"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "xmode peek past comment to end of line."
      end

      operation 8104603 "isLineSeparator"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if character is a line separator in the current mode"
      end

      operation 8104731 "skip"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the character after the next one, and advance the cursor by two."
      end

      operation 8104859 "unread"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unread one next character, and retreat cursor by one."
      end

      operation 8104987 "error"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method used for handling all syntax errors. The pattern is
displayed with a pointer to aid in locating the syntax error."
      end

      operation 8105115 "findSupplementary"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if there is any supplementary character or unpaired
surrogate in the specified range."
      end

      operation 8105243 "isSupplementary"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified code point is a supplementary
character or unpaired surrogate."
      end

      operation 8105371 "expr"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "end" type class_ref 1011355 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The following methods handle the main parsing. They are sorted
 according to their precedence order, the lowest one first.


The expression is parsed with branch nodes added for alternations.
This may be called recursively to parse sub expressions that may
contain alternations."
      end

      operation 8105499 "sequence"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "end" type class_ref 1011355 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parsing of sequences between alternations."
      end

      operation 8105627 "atom"
	private return_type class_ref 1011355 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and add a new Single or Slice."
      end

      operation 8105755 "append"
	private explicit_return_type "void"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8105883 "ref"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param in name "refNum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a backref greedily, taking as many numbers as it
can. The first digit is always treated as a backref, but
multi digit numbers are only treated as a backref if at
least that many backrefs exist at this point in the regex."
      end

      operation 8106011 "escape"
	private explicit_return_type "int"
	nparams 2
	  param inout name "inclass" explicit_type "boolean"
	  param inout name "create" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses an escape sequence to determine the actual value that needs
to be matched.
If -1 is returned and create was true a new object was added to the tree
to handle the escape sequence.
If the returned value is greater than zero, it is the value that
matches the escape sequence."
      end

      operation 8106139 "clazz"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "consume" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a character class, and return the node that matches it.

Consumes a ] on the way out if consume is true. Usually consume
is true except for the case of [abc&&def] where def is a separate
right hand node with \"understood\" brackets."
      end

      operation 8106267 "range"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "bits" type class_ref 1011739 // BitClass
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a single character or a character range in a character class
and return its representative node."
      end

      class 1011739 "BitClass"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1977883 // <generalisation>
	  relation 1977883 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1977883 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2984475 "bits"
	  package explicit_type "boolean"
	  multiplicity "[]"
	  init_value "=  new boolean[256]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2984603 "complementMe"
	  package explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8108571 "BitClass"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8108699 "BitClass"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "newBits" explicit_type "boolean"
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8108827 "add"
	  package return_type class_ref 1011355 // Node
	  nparams 2
	    param in name "c" explicit_type "int"
	    param in name "f" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8108955 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8109083 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8109211 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8106395 "single"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8106523 "family"
	private return_type class_ref 1011355 // Node
	nparams 2
	  param inout name "not" explicit_type "boolean"
	  param inout name "singleLetter" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a Unicode character family and returns its representative node.
Reference to an unknown character family results in a list of supported
families in the error."
      end

      operation 8106651 "retrieveFamilyNode"
	private return_type class_ref 1011355 // Node
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "not" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8106779 "retrieveCategoryNode"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8106907 "familyError"
	private return_type class_ref 1011355 // Node
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8107035 "group0"
	private return_type class_ref 1011355 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a group and returns the head node of a set of nodes that process
the group. Sometimes a double return system is used where the tail is
returned in root."
      end

      operation 8107163 "createGroup"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "anonymous" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create group head and tail nodes using double return. If the group is
created with anonymous true then it is a pure group and should not
affect group counting."
      end

      operation 8107291 "addFlag"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses inlined match flags and set them appropriately."
      end

      operation 8107419 "subFlag"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the second part of inlined match flags and turns off
flags appropriately."
      end

      attribute 2983835 "MAX_REPS"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x7FFFFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2983963 "GREEDY"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2984091 "LAZY"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2984219 "POSSESSIVE"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2984347 "INDEPENDENT"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8107547 "closure"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param inout name "prev" type class_ref 1011355 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes repetition. If the next character peeked is a quantifier
then new nodes must be appended to handle the repetition.
Prev could be a single or a group, so it could be a chain of nodes."
      end

      operation 8107675 "c"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing control escape sequences."
      end

      operation 8107803 "o"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing octal escape sequences."
      end

      operation 8107931 "x"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing hexadecimal escape sequences."
      end

      operation 8108059 "u"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for parsing unicode escape sequences."
      end

      operation 8108187 "isSurrogate"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility methods for code point support


Tests a surrogate value."
      end

      operation 8108315 "countChars"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 393755 // CharSequence
	  param in name "index" explicit_type "int"
	  param in name "lengthInCodePoints" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8108443 "countCodePoints"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "seq" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8109339 "newSingle"
	private return_type class_ref 1011355 // Node
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for creating a single character matcher."
      end

      operation 8109467 "newSlice"
	private return_type class_ref 1011355 // Node
	nparams 3
	  param in name "buf" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "hasSupplementary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for creating a string slice matcher."
      end

      class 1011867 "LastNode"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978267 // <generalisation>
	  relation 1978267 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978267 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8110107 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method implements the classic accept node with
the addition of a check to see if the match occurred
using all of the input."
	end
      end

      class 1011995 "Dummy"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978395 // <generalisation>
	  relation 1978395 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978395 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8110235 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012123 "Start"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978523 // <generalisation>
	  relation 1978523 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978523 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2984731 "minLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8110363 "Start"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8110491 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8110619 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012251 "StartS"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978651 // <generalisation>
	  relation 1978651 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978651 // <generalisation>
	    b parent class_ref 1012123 // Start
	end

	operation 8110747 "StartS"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8110875 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012379 "Begin"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978779 // <generalisation>
	  relation 1978779 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978779 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8111003 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012507 "End"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1978907 // <generalisation>
	  relation 1978907 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1978907 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8111131 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012635 "Caret"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979035 // <generalisation>
	  relation 1979035 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979035 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8111259 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012763 "UnixCaret"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979163 // <generalisation>
	  relation 1979163 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979163 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8111387 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1012891 "LastMatch"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979291 // <generalisation>
	  relation 1979291 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979291 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8111515 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013019 "Dollar"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979419 // <generalisation>
	  relation 1979419 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979419 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2984859 "multiline"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8111643 "Dollar"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "mul" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8111771 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8111899 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013147 "UnixDollar"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979547 // <generalisation>
	  relation 1979547 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979547 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2984987 "multiline"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8112027 "UnixDollar"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "mul" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8112155 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8112283 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013275 "Single"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979675 // <generalisation>
	  relation 1979675 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979675 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2985115 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2985243 "len"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8112411 "Single"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8112539 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8112667 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8112795 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013403 "NotSingle"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979803 // <generalisation>
	  relation 1979803 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979803 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2985371 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8112923 "NotSingle"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113051 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113179 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113307 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013531 "SingleA"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1979931 // <generalisation>
	  relation 1979931 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1979931 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2985499 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8113435 "SingleA"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113563 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113691 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8113819 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013659 "NotSingleA"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980059 // <generalisation>
	  relation 1980059 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980059 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2985627 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8113947 "NotSingleA"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114075 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114203 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114331 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013787 "SingleU"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980187 // <generalisation>
	  relation 1980187 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980187 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2985755 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2985883 "len"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8114459 "SingleU"
	  package explicit_return_type ""
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114587 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114715 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8114843 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1013915 "NotSingleU"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980315 // <generalisation>
	  relation 1980315 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980315 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986011 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8114971 "NotSingleU"
	  package explicit_return_type ""
	  nparams 1
	    param in name "c" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115099 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115227 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115355 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014043 "Category"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980443 // <generalisation>
	  relation 1980443 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980443 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986139 "atype"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8115483 "Category"
	  package explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115611 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115739 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8115867 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014171 "Ctype"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980571 // <generalisation>
	  relation 1980571 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980571 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986267 "ctype"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8115995 "Ctype"
	  package explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116123 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116251 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116379 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014299 "NotCtype"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980699 // <generalisation>
	  relation 1980699 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980699 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986395 "ctype"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8116507 "NotCtype"
	  package explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116635 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116763 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8116891 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014427 "JavaTypeClass"
	abstract visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980827 // <generalisation>
	  relation 1980827 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980827 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8117019 "JavaTypeClass"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8117147 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8117275 "isProperty"
	  abstract package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8117403 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8117531 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014555 "JavaLowerCase"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1980955 // <generalisation>
	  relation 1980955 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1980955 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8117659 "JavaLowerCase"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8117787 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014683 "JavaUpperCase"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981083 // <generalisation>
	  relation 1981083 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981083 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8117915 "JavaUpperCase"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8118043 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014811 "JavaTitleCase"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981211 // <generalisation>
	  relation 1981211 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981211 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8118171 "JavaTitleCase"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8118299 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1014939 "JavaDigit"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981339 // <generalisation>
	  relation 1981339 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981339 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8118427 "JavaDigit"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8118555 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015067 "JavaDefined"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981467 // <generalisation>
	  relation 1981467 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981467 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8118683 "JavaDefined"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8118811 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015195 "JavaLetter"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981595 // <generalisation>
	  relation 1981595 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981595 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8118939 "JavaLetter"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8119067 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015323 "JavaLetterOrDigit"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981723 // <generalisation>
	  relation 1981723 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981723 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8119195 "JavaLetterOrDigit"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8119323 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015451 "JavaJavaIdentifierStart"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981851 // <generalisation>
	  relation 1981851 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981851 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8119451 "JavaJavaIdentifierStart"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8119579 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015579 "JavaJavaIdentifierPart"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1981979 // <generalisation>
	  relation 1981979 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1981979 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8119707 "JavaJavaIdentifierPart"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8119835 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015707 "JavaUnicodeIdentifierStart"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982107 // <generalisation>
	  relation 1982107 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982107 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8119963 "JavaUnicodeIdentifierStart"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8120091 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015835 "JavaUnicodeIdentifierPart"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982235 // <generalisation>
	  relation 1982235 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982235 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8120219 "JavaUnicodeIdentifierPart"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8120347 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1015963 "JavaIdentifierIgnorable"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982363 // <generalisation>
	  relation 1982363 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982363 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8120475 "JavaIdentifierIgnorable"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8120603 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016091 "JavaSpaceChar"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982491 // <generalisation>
	  relation 1982491 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982491 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8120731 "JavaSpaceChar"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8120859 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016219 "JavaWhitespace"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982619 // <generalisation>
	  relation 1982619 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982619 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8120987 "JavaWhitespace"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8121115 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016347 "JavaISOControl"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982747 // <generalisation>
	  relation 1982747 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982747 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8121243 "JavaISOControl"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8121371 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016475 "JavaMirrored"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1982875 // <generalisation>
	  relation 1982875 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1982875 // <generalisation>
	    b parent class_ref 1014427 // JavaTypeClass
	end

	operation 8121499 "JavaMirrored"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8121627 "isProperty"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "ch" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016603 "Specials"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983003 // <generalisation>
	  relation 1983003 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983003 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8121755 "Specials"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8121883 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122011 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122139 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016731 "Not"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983131 // <generalisation>
	  relation 1983131 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983131 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1983259 // atom (<unidirectional association>)
	  relation 1983259 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1983259 // atom (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8122267 "Not"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "atom" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122395 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122523 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016859 "Slice"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983387 // <generalisation>
	  relation 1983387 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983387 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986523 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8122651 "Slice"
	  package explicit_return_type ""
	  nparams 1
	    param in name "buf" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122779 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8122907 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1016987 "SliceA"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983515 // <generalisation>
	  relation 1983515 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983515 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986651 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8123035 "SliceA"
	  package explicit_return_type ""
	  nparams 1
	    param in name "buf" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8123163 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8123291 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017115 "SliceU"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983643 // <generalisation>
	  relation 1983643 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983643 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986779 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8123419 "SliceU"
	  package explicit_return_type ""
	  nparams 1
	    param in name "buf" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8123547 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8123675 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017243 "SliceS"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983771 // <generalisation>
	  relation 1983771 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983771 // <generalisation>
	    b parent class_ref 1016859 // Slice
	end

	operation 8123803 "SliceS"
	  package explicit_return_type ""
	  nparams 1
	    param in name "buf" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8123931 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017371 "Range"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1983899 // <generalisation>
	  relation 1983899 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1983899 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2986907 "lower"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2987035 "upper"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8124059 "Range"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124187 "Range"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124315 "Range"
	  package explicit_return_type ""
	  nparams 2
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124443 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124571 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124699 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017499 "CIRange"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984027 // <generalisation>
	  relation 1984027 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984027 // <generalisation>
	    b parent class_ref 1017371 // Range
	end

	operation 8124827 "CIRange"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8124955 "CIRange"
	  package explicit_return_type ""
	  nparams 2
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125083 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125211 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017627 "NotRange"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984155 // <generalisation>
	  relation 1984155 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984155 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2987163 "lower"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2987291 "upper"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8125339 "NotRange"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125467 "NotRange"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125595 "NotRange"
	  package explicit_return_type ""
	  nparams 2
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125723 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125851 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8125979 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017755 "CINotRange"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984283 // <generalisation>
	  relation 1984283 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984283 // <generalisation>
	    b parent class_ref 1017627 // NotRange
	end

	attribute 2987419 "lower"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2987547 "upper"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8126107 "CINotRange"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8126235 "CINotRange"
	  package explicit_return_type ""
	  nparams 2
	    param in name "lower" explicit_type "int"
	    param in name "upper" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8126363 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8126491 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1017883 "All"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984411 // <generalisation>
	  relation 1984411 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984411 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8126619 "All"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8126747 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8126875 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8127003 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018011 "Dot"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984539 // <generalisation>
	  relation 1984539 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984539 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8127131 "Dot"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8127259 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8127387 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018139 "UnixDot"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984667 // <generalisation>
	  relation 1984667 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984667 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	operation 8127515 "UnixDot"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8127643 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8127771 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018267 "Ques"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1984795 // <generalisation>
	  relation 1984795 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1984795 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1984923 // atom (<unidirectional association>)
	  relation 1984923 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1984923 // atom (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2987675 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8127899 "Ques"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "node" type class_ref 1011355 // Node
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8128027 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8128155 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018395 "Curly"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1985051 // <generalisation>
	  relation 1985051 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1985051 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1985179 // atom (<unidirectional association>)
	  relation 1985179 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1985179 // atom (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2987803 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2987931 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988059 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8128283 "Curly"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "node" type class_ref 1011355 // Node
	    param in name "cmin" explicit_type "int"
	    param in name "cmax" explicit_type "int"
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8128411 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8128539 "match0"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Greedy match.
 i is the index to start matching at
 j is the number of atoms that have matched"
	end

	operation 8128667 "match1"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Reluctant match. At this point, the minimum has been satisfied.
 i is the index to start matching at
 j is the number of atoms that have matched"
	end

	operation 8128795 "match2"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8128923 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018523 "GroupCurly"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1985307 // <generalisation>
	  relation 1985307 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1985307 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1985435 // atom (<unidirectional association>)
	  relation 1985435 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1985435 // atom (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2988187 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988315 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988443 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988571 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988699 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2988827 "capture"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8129051 "GroupCurly"
	  package explicit_return_type ""
	  nparams 7
	    param inout name "node" type class_ref 1011355 // Node
	    param in name "cmin" explicit_type "int"
	    param in name "cmax" explicit_type "int"
	    param in name "type" explicit_type "int"
	    param in name "local" explicit_type "int"
	    param in name "group" explicit_type "int"
	    param inout name "capture" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8129179 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8129307 "match0"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Aggressive group match"
	end

	operation 8129435 "match1"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Reluctant matching"
	end

	operation 8129563 "match2"
	  package explicit_return_type "boolean"
	  nparams 4
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param in name "j" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Possessive matching"
	end

	operation 8129691 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018651 "Branch"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1985563 // <generalisation>
	  relation 1985563 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1985563 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1985691 // prev (<unidirectional association>)
	  relation 1985691 --->
	    a role_name "prev" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1985691 // prev (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8129819 "Branch"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "lhs" type class_ref 1011355 // Node
	    param inout name "rhs" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8129947 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8130075 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018779 "GroupRef"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1985947 // <generalisation>
	  relation 1985947 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1985947 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1986075 // head (<unidirectional association>)
	  relation 1986075 --->
	    a role_name "head" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1986075 // head (<unidirectional association>)
	    b parent class_ref 1011483 // GroupHead
	end

	operation 8130587 "GroupRef"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "head" type class_ref 1011483 // GroupHead
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8130715 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8130843 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1018907 "GroupTail"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1986203 // <generalisation>
	  relation 1986203 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1986203 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2989083 "localIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2989211 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8130971 "GroupTail"
	  package explicit_return_type ""
	  nparams 2
	    param in name "localCount" explicit_type "int"
	    param in name "groupCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131099 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019035 "Prolog"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1986331 // <generalisation>
	  relation 1986331 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1986331 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1986459 // loop (<unidirectional association>)
	  relation 1986459 --->
	    a role_name "loop" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1986459 // loop (<unidirectional association>)
	    b parent class_ref 1019163 // Loop
	end

	operation 8131227 "Prolog"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "loop" type class_ref 1019163 // Loop
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131355 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131483 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019163 "Loop"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1986587 // <generalisation>
	  relation 1986587 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1986587 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1986715 // body (<unidirectional association>)
	  relation 1986715 --->
	    a role_name "body" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1986715 // body (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2989339 "countIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " local count index in matcher locals"
	end

	attribute 2989467 "beginIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " group beginning index"
	end

	attribute 2989595 "cmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2989723 "cmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8131611 "Loop"
	  package explicit_return_type ""
	  nparams 2
	    param in name "countIndex" explicit_type "int"
	    param in name "beginIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131739 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131867 "matchInit"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8131995 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019291 "LazyLoop"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1986843 // <generalisation>
	  relation 1986843 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1986843 // <generalisation>
	    b parent class_ref 1019163 // Loop
	end

	operation 8132123 "LazyLoop"
	  package explicit_return_type ""
	  nparams 2
	    param in name "countIndex" explicit_type "int"
	    param in name "beginIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8132251 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8132379 "matchInit"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8132507 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019419 "BackRef"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1986971 // <generalisation>
	  relation 1986971 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1986971 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2989851 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8132635 "BackRef"
	  package explicit_return_type ""
	  nparams 1
	    param in name "groupCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8132763 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8132891 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019547 "CIBackRef"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1987099 // <generalisation>
	  relation 1987099 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1987099 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2989979 "groupIndex"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8133019 "CIBackRef"
	  package explicit_return_type ""
	  nparams 1
	    param in name "groupCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8133147 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8133275 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019675 "First"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1987227 // <generalisation>
	  relation 1987227 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1987227 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1987355 // atom (<unidirectional association>)
	  relation 1987355 --->
	    a role_name "atom" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1987355 // atom (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8133403 "First"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "node" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8133531 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8133659 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019803 "Conditional"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1987483 // <generalisation>
	  relation 1987483 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1987483 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1987611 // cond (<unidirectional association>)
	  relation 1987611 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1987611 // cond (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	classrelation 1987739 // yes (<unidirectional association>)
	  relation 1987739 --->
	    a role_name "yes" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1987739 // yes (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	classrelation 1987867 // not (<unidirectional association>)
	  relation 1987867 --->
	    a role_name "not" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1987867 // not (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8133787 "Conditional"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1011355 // Node
	    param inout name "yes" type class_ref 1011355 // Node
	    param inout name "not" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8133915 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8134043 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1019931 "Pos"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1987995 // <generalisation>
	  relation 1987995 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1987995 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1988123 // cond (<unidirectional association>)
	  relation 1988123 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1988123 // cond (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8134171 "Pos"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cond" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8134299 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020059 "Neg"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1988251 // <generalisation>
	  relation 1988251 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1988251 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1988379 // cond (<unidirectional association>)
	  relation 1988379 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1988379 // cond (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8134427 "Neg"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cond" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8134555 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020187 "Behind"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1988507 // <generalisation>
	  relation 1988507 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1988507 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1988635 // cond (<unidirectional association>)
	  relation 1988635 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1988635 // cond (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2990107 "rmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2990235 "rmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8134683 "Behind"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1011355 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8134811 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020315 "BehindS"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1988763 // <generalisation>
	  relation 1988763 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1988763 // <generalisation>
	    b parent class_ref 1020187 // Behind
	end

	operation 8134939 "BehindS"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1011355 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8135067 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020443 "NotBehind"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1988891 // <generalisation>
	  relation 1988891 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1988891 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1989019 // cond (<unidirectional association>)
	  relation 1989019 --->
	    a role_name "cond" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1989019 // cond (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	attribute 2990363 "rmax"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2990491 "rmin"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8135195 "NotBehind"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1011355 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8135323 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020571 "NotBehindS"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1989147 // <generalisation>
	  relation 1989147 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1989147 // <generalisation>
	    b parent class_ref 1020443 // NotBehind
	end

	operation 8135451 "NotBehindS"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "cond" type class_ref 1011355 // Node
	    param in name "rmax" explicit_type "int"
	    param in name "rmin" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8135579 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020699 "Add"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1989275 // <generalisation>
	  relation 1989275 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1989275 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1989403 // lhs (<unidirectional association>)
	  relation 1989403 --->
	    a role_name "lhs" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1989403 // lhs (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	classrelation 1989531 // rhs (<unidirectional association>)
	  relation 1989531 --->
	    a role_name "rhs" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1989531 // rhs (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8135707 "Add"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "lhs" type class_ref 1011355 // Node
	    param inout name "rhs" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8135835 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8135963 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020827 "Both"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1989659 // <generalisation>
	  relation 1989659 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1989659 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1989787 // lhs (<unidirectional association>)
	  relation 1989787 --->
	    a role_name "lhs" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1989787 // lhs (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	classrelation 1989915 // rhs (<unidirectional association>)
	  relation 1989915 --->
	    a role_name "rhs" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1989915 // rhs (<unidirectional association>)
	    b parent class_ref 1011355 // Node
	end

	operation 8136091 "Both"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "lhs" type class_ref 1011355 // Node
	    param inout name "rhs" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8136219 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8136347 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1020955 "Sub"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1990043 // <generalisation>
	  relation 1990043 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1990043 // <generalisation>
	    b parent class_ref 1020699 // Add
	end

	operation 8136475 "Sub"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "lhs" type class_ref 1011355 // Node
	    param inout name "rhs" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8136603 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8136731 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1021083 "Bound"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1990171 // <generalisation>
	  relation 1990171 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1990171 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2990619 "LEFT"
	  class_attribute package explicit_type "int"
	  init_value "=  0x1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2990747 "RIGHT"
	  class_attribute package explicit_type "int"
	  init_value "=  0x2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2990875 "BOTH"
	  class_attribute package explicit_type "int"
	  init_value "=  0x3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2991003 "NONE"
	  class_attribute package explicit_type "int"
	  init_value "=  0x4"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2991131 "type"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8136859 "Bound"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8136987 "check"
	  package explicit_return_type "int"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8137115 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8137243 "hasBaseCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "matcher" type class_ref 1011099 // Matcher
	  param in name "i" explicit_type "int"
	  param inout name "seq" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Non spacing marks only count as word characters in bounds calculations 
if they have a base character."
      end

      class 1021211 "BnM"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1990299 // <generalisation>
	  relation 1990299 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1990299 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	attribute 2991259 "buffer"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2991387 "lastOcc"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2991515 "optoSft"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8137371 "optimize"
	  class_operation package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "node" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pre calculates arrays needed to generate the bad character
shift and the good suffix shift. Only the last seven bits
are used to see if chars match; This keeps the tables small
and covers the heavily used ASCII range, but occasionally
results in an aliased match for the bad character shift."
	end

	operation 8137499 "BnM"
	  package explicit_return_type ""
	  nparams 4
	    param in name "src" explicit_type "int"
	    param in name "lastOcc" explicit_type "int"
	    param in name "optoSft" explicit_type "int"
	    param inout name "next" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8137627 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8137755 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1021339 "BnMS"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1990427 // <generalisation>
	  relation 1990427 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1990427 // <generalisation>
	    b parent class_ref 1021211 // BnM
	end

	attribute 2991643 "lengthInChars"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8137883 "BnMS"
	  package explicit_return_type ""
	  nparams 4
	    param in name "src" explicit_type "int"
	    param in name "lastOcc" explicit_type "int"
	    param in name "optoSft" explicit_type "int"
	    param inout name "next" type class_ref 1011355 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138011 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1021467 "UBlock"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1990555 // <generalisation>
	  relation 1990555 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1990555 // <generalisation>
	    b parent class_ref 1011355 // Node
	end

	classrelation 1990683 // block (<unidirectional association>)
	  relation 1990683 --->
	    a role_name "block" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1990683 // block (<unidirectional association>)
	    b parent class_ref 882203 // UnicodeBlock
	end

	attribute 2991771 "complementMe"
	  package explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8138139 "UBlock"
	  package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138267 "UBlock"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "block" type class_ref 882203 // UnicodeBlock
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138395 "dup"
	  package return_type class_ref 1011355 // Node
	  nparams 1
	    param inout name "not" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138523 "match"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138651 "notMatch"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "matcher" type class_ref 1011099 // Matcher
	    param in name "i" explicit_type "int"
	    param inout name "seq" type class_ref 393755 // CharSequence
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8138779 "study"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "info" type class_ref 1011611 // TreeInfo
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1990811 // accept (<unidirectional association>)
	relation 1990811 --->
	  a role_name "accept" init_value "=  new Node()" class_relation package
	    comment "/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

 This must be the very first initializer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1990811 // accept (<unidirectional association>)
	  b parent class_ref 1011355 // Node
      end

      classrelation 1990939 // lastAccept (<unidirectional association>)
	relation 1990939 --->
	  a role_name "lastAccept" init_value "=  new LastNode()" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1990939 // lastAccept (<unidirectional association>)
	  b parent class_ref 1011355 // Node
      end

      class 1021595 "categoryNames"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1991067 // cMap (<unidirectional association>)
	  relation 1991067 --->
	    a role_name "cMap" init_value "=  new HashMap()" class_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1991067 // cMap (<unidirectional association>)
	    b parent class_ref 144923 // HashMap
	end

	extra_member 167067 "initialization"
	  
	  cpp "" ""
	  java "  static {
            cMap.put(\"Cn\", new Category(1<<0));        // UNASSIGNED
            cMap.put(\"Lu\", new Category(1<<1));        // UPPERCASE_LETTER
            cMap.put(\"Ll\", new Category(1<<2));        // LOWERCASE_LETTER
            cMap.put(\"Lt\", new Category(1<<3));        // TITLECASE_LETTER
            cMap.put(\"Lm\", new Category(1<<4));        // MODIFIER_LETTER
            cMap.put(\"Lo\", new Category(1<<5));        // OTHER_LETTER
            cMap.put(\"Mn\", new Category(1<<6));        // NON_SPACING_MARK
            cMap.put(\"Me\", new Category(1<<7));        // ENCLOSING_MARK
            cMap.put(\"Mc\", new Category(1<<8));        // COMBINING_SPACING_MARK
            cMap.put(\"Nd\", new Category(1<<9));        // DECIMAL_DIGIT_NUMBER
            cMap.put(\"Nl\", new Category(1<<10));       // LETTER_NUMBER
            cMap.put(\"No\", new Category(1<<11));       // OTHER_NUMBER
            cMap.put(\"Zs\", new Category(1<<12));       // SPACE_SEPARATOR
            cMap.put(\"Zl\", new Category(1<<13));       // LINE_SEPARATOR
            cMap.put(\"Zp\", new Category(1<<14));       // PARAGRAPH_SEPARATOR
            cMap.put(\"Cc\", new Category(1<<15));       // CNTRL
            cMap.put(\"Cf\", new Category(1<<16));       // FORMAT
            cMap.put(\"Co\", new Category(1<<18));       // PRIVATE USE
            cMap.put(\"Cs\", new Category(1<<19));       // SURROGATE
            cMap.put(\"Pd\", new Category(1<<20));       // DASH_PUNCTUATION
            cMap.put(\"Ps\", new Category(1<<21));       // START_PUNCTUATION
            cMap.put(\"Pe\", new Category(1<<22));       // END_PUNCTUATION
            cMap.put(\"Pc\", new Category(1<<23));       // CONNECTOR_PUNCTUATION
            cMap.put(\"Po\", new Category(1<<24));       // OTHER_PUNCTUATION
            cMap.put(\"Sm\", new Category(1<<25));       // MATH_SYMBOL
            cMap.put(\"Sc\", new Category(1<<26));       // CURRENCY_SYMBOL
            cMap.put(\"Sk\", new Category(1<<27));       // MODIFIER_SYMBOL
            cMap.put(\"So\", new Category(1<<28));       // OTHER_SYMBOL
            cMap.put(\"L\", new Category(0x0000003E));   // LETTER
            cMap.put(\"M\", new Category(0x000001C0));   // MARK
            cMap.put(\"N\", new Category(0x00000E00));   // NUMBER
            cMap.put(\"Z\", new Category(0x00007000));   // SEPARATOR
            cMap.put(\"C\", new Category(0x000D8000));   // CONTROL
            cMap.put(\"P\", new Category(0x01F00000));   // PUNCTUATION
            cMap.put(\"S\", new Category(0x1E000000));   // SYMBOL
            cMap.put(\"LD\", new Category(0x0000023E));   // LETTER_OR_DIGIT
            cMap.put(\"L1\", new Range(0x000000FF));      // Latin-1
            cMap.put(\"all\", new All());                  // ALL
            cMap.put(\"ASCII\", new Range(0x0000007F));    // ASCII
            cMap.put(\"Alnum\", new Ctype(ASCII.ALNUM));    // Alphanumeric characters
            cMap.put(\"Alpha\", new Ctype(ASCII.ALPHA));    // Alphabetic characters
            cMap.put(\"Blank\", new Ctype(ASCII.BLANK));    // Space and tab characters
            cMap.put(\"Cntrl\", new Ctype(ASCII.CNTRL));    // Control characters
            cMap.put(\"Digit\", new Range(('0'<<16)|'9'));  // Numeric characters
            cMap.put(\"Graph\", new Ctype(ASCII.GRAPH));    // printable and visible
            cMap.put(\"Lower\", new Range(('a'<<16)|'z'));  // Lower-case alphabetic
            cMap.put(\"Print\", new Range(0x0020007E));     // Printable characters
            cMap.put(\"Punct\", new Ctype(ASCII.PUNCT));    // Punctuation characters
            cMap.put(\"Space\", new Ctype(ASCII.SPACE));    // Space characters
            cMap.put(\"Upper\", new Range(('A'<<16)|'Z'));  // Upper-case alphabetic
            cMap.put(\"XDigit\", new Ctype(ASCII.XDIGIT));  // hexadecimal digits
            cMap.put(\"javaLowerCase\", new JavaLowerCase());
            cMap.put(\"javaUpperCase\", new JavaUpperCase());
            cMap.put(\"javaTitleCase\", new JavaTitleCase());
            cMap.put(\"javaDigit\", new JavaDigit());
            cMap.put(\"javaDefined\", new JavaDefined());
            cMap.put(\"javaLetter\", new JavaLetter());
            cMap.put(\"javaLetterOrDigit\", new JavaLetterOrDigit());
            cMap.put(\"javaJavaIdentifierStart\", new JavaJavaIdentifierStart());
            cMap.put(\"javaJavaIdentifierPart\", new JavaJavaIdentifierPart());
            cMap.put(\"javaUnicodeIdentifierStart\", new JavaUnicodeIdentifierStart());
            cMap.put(\"javaUnicodeIdentifierPart\", new JavaUnicodeIdentifierPart());
            cMap.put(\"javaIdentifierIgnorable\", new JavaIdentifierIgnorable());
            cMap.put(\"javaSpaceChar\", new JavaSpaceChar());
            cMap.put(\"javaWhitespace\", new JavaWhitespace());
            cMap.put(\"javaISOControl\", new JavaISOControl());
            cMap.put(\"javaMirrored\", new JavaMirrored());
        }"
	  php ""
	  python ""
	  idl ""
	end
      end
    end

    class 1010971 "ASCII"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class that implements the standard C ctype functionality.

@author Hong Zhang"
      attribute 2976923 "UPPER"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00000100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977051 "LOWER"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00000200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977179 "DIGIT"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00000400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977307 "SPACE"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00000800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977435 "PUNCT"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00001000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977563 "CNTRL"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00002000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977691 "BLANK"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00004000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977819 "HEX"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00008000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2977947 "UNDER"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x00010000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978075 "ASCII"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0x0000FF00"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978203 "ALPHA"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  (UPPER|LOWER)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978331 "ALNUM"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  (UPPER|LOWER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978459 "GRAPH"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  (PUNCT|UPPER|LOWER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978587 "WORD"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  (UPPER|LOWER|UNDER|DIGIT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978715 "XDIGIT"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  (HEX)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2978843 "ctype"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[] {
        CNTRL,                  /* 00 (NUL) */
        CNTRL,                  /* 01 (SOH) */
        CNTRL,                  /* 02 (STX) */
        CNTRL,                  /* 03 (ETX) */
        CNTRL,                  /* 04 (EOT) */
        CNTRL,                  /* 05 (ENQ) */
        CNTRL,                  /* 06 (ACK) */
        CNTRL,                  /* 07 (BEL) */
        CNTRL,                  /* 08 (BS)  */
        SPACE+CNTRL+BLANK,      /* 09 (HT)  */
        SPACE+CNTRL,            /* 0A (LF)  */
        SPACE+CNTRL,            /* 0B (VT)  */
        SPACE+CNTRL,            /* 0C (FF)  */
        SPACE+CNTRL,            /* 0D (CR)  */
        CNTRL,                  /* 0E (SI)  */
        CNTRL,                  /* 0F (SO)  */
        CNTRL,                  /* 10 (DLE) */
        CNTRL,                  /* 11 (DC1) */
        CNTRL,                  /* 12 (DC2) */
        CNTRL,                  /* 13 (DC3) */
        CNTRL,                  /* 14 (DC4) */
        CNTRL,                  /* 15 (NAK) */
        CNTRL,                  /* 16 (SYN) */
        CNTRL,                  /* 17 (ETB) */
        CNTRL,                  /* 18 (CAN) */
        CNTRL,                  /* 19 (EM)  */
        CNTRL,                  /* 1A (SUB) */
        CNTRL,                  /* 1B (ESC) */
        CNTRL,                  /* 1C (FS)  */
        CNTRL,                  /* 1D (GS)  */
        CNTRL,                  /* 1E (RS)  */
        CNTRL,                  /* 1F (US)  */
        SPACE+BLANK,            /* 20 SPACE */
        PUNCT,                  /* 21 !     */
        PUNCT,                  /* 22 \"     */
        PUNCT,                  /* 23 #     */
        PUNCT,                  /* 24 $     */
        PUNCT,                  /* 25 %     */
        PUNCT,                  /* 26 &     */
        PUNCT,                  /* 27 '     */
        PUNCT,                  /* 28 (     */
        PUNCT,                  /* 29 )     */
        PUNCT,                  /* 2A *     */
        PUNCT,                  /* 2B +     */
        PUNCT,                  /* 2C ,     */
        PUNCT,                  /* 2D -     */
        PUNCT,                  /* 2E .     */
        PUNCT,                  /* 2F /     */
        DIGIT+HEX+0,            /* 30 0     */
        DIGIT+HEX+1,            /* 31 1     */
        DIGIT+HEX+2,            /* 32 2     */
        DIGIT+HEX+3,            /* 33 3     */
        DIGIT+HEX+4,            /* 34 4     */
        DIGIT+HEX+5,            /* 35 5     */
        DIGIT+HEX+6,            /* 36 6     */
        DIGIT+HEX+7,            /* 37 7     */
        DIGIT+HEX+8,            /* 38 8     */
        DIGIT+HEX+9,            /* 39 9     */
        PUNCT,                  /* 3A :     */
        PUNCT,                  /* 3B ;     */
        PUNCT,                  /* 3C <     */
        PUNCT,                  /* 3D =     */
        PUNCT,                  /* 3E >     */
        PUNCT,                  /* 3F ?     */
        PUNCT,                  /* 40 @     */
        UPPER+HEX+10,           /* 41 A     */
        UPPER+HEX+11,           /* 42 B     */
        UPPER+HEX+12,           /* 43 C     */
        UPPER+HEX+13,           /* 44 D     */
        UPPER+HEX+14,           /* 45 E     */
        UPPER+HEX+15,           /* 46 F     */
        UPPER+16,               /* 47 G     */
        UPPER+17,               /* 48 H     */
        UPPER+18,               /* 49 I     */
        UPPER+19,               /* 4A J     */
        UPPER+20,               /* 4B K     */
        UPPER+21,               /* 4C L     */
        UPPER+22,               /* 4D M     */
        UPPER+23,               /* 4E N     */
        UPPER+24,               /* 4F O     */
        UPPER+25,               /* 50 P     */
        UPPER+26,               /* 51 Q     */
        UPPER+27,               /* 52 R     */
        UPPER+28,               /* 53 S     */
        UPPER+29,               /* 54 T     */
        UPPER+30,               /* 55 U     */
        UPPER+31,               /* 56 V     */
        UPPER+32,               /* 57 W     */
        UPPER+33,               /* 58 X     */
        UPPER+34,               /* 59 Y     */
        UPPER+35,               /* 5A Z     */
        PUNCT,                  /* 5B [     */
        PUNCT,                  /* 5C \\     */
        PUNCT,                  /* 5D ]     */
        PUNCT,                  /* 5E ^     */
        PUNCT|UNDER,            /* 5F _     */
        PUNCT,                  /* 60 `     */
        LOWER+HEX+10,           /* 61 a     */
        LOWER+HEX+11,           /* 62 b     */
        LOWER+HEX+12,           /* 63 c     */
        LOWER+HEX+13,           /* 64 d     */
        LOWER+HEX+14,           /* 65 e     */
        LOWER+HEX+15,           /* 66 f     */
        LOWER+16,               /* 67 g     */
        LOWER+17,               /* 68 h     */
        LOWER+18,               /* 69 i     */
        LOWER+19,               /* 6A j     */
        LOWER+20,               /* 6B k     */
        LOWER+21,               /* 6C l     */
        LOWER+22,               /* 6D m     */
        LOWER+23,               /* 6E n     */
        LOWER+24,               /* 6F o     */
        LOWER+25,               /* 70 p     */
        LOWER+26,               /* 71 q     */
        LOWER+27,               /* 72 r     */
        LOWER+28,               /* 73 s     */
        LOWER+29,               /* 74 t     */
        LOWER+30,               /* 75 u     */
        LOWER+31,               /* 76 v     */
        LOWER+32,               /* 77 w     */
        LOWER+33,               /* 78 x     */
        LOWER+34,               /* 79 y     */
        LOWER+35,               /* 7A z     */
        PUNCT,                  /* 7B {     */
        PUNCT,                  /* 7C |     */
        PUNCT,                  /* 7D }     */
        PUNCT,                  /* 7E ~     */
        CNTRL,                  /* 7F (DEL) */
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8092059 "getType"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092187 "isType"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092315 "isAscii"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092443 "isAlpha"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092571 "isDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092699 "isAlnum"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092827 "isGraph"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8092955 "isPrint"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093083 "isPunct"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093211 "isSpace"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093339 "isHexDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093467 "isOctDigit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093595 "isCntrl"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093723 "isLower"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093851 "isUpper"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8093979 "isWord"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8094107 "toDigit"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8094235 "toLower"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8094363 "toUpper"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1011099 "Matcher"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An engine that performs match operations on a {@link java.lang.CharSequence
</code>character sequence<code>} by interpreting a {@link Pattern}.

<p> A matcher is created from a pattern by invoking the pattern's {@link
Pattern#matcher matcher} method.  Once created, a matcher can be used to
perform three different kinds of match operations:

<ul>

  <li><p> The {@link #matches matches} method attempts to match the entire
  input sequence against the pattern.  </p></li>

  <li><p> The {@link #lookingAt lookingAt} method attempts to match the
  input sequence, starting at the beginning, against the pattern.  </p></li>

  <li><p> The {@link #find find} method scans the input sequence looking for
  the next subsequence that matches the pattern.  </p></li>

</ul>

<p> Each of these methods returns a boolean indicating success or failure.
More information about a successful match can be obtained by querying the
state of the matcher.

<p> A matcher finds matches in a subset of its input called the 
<i>region</i>. By default, the region contains all of the matcher's input. 
The region can be modified via the{@link #region region} method and queried
via the {@link #regionStart regionStart} and {@link #regionEnd regionEnd} 
methods. The way that the region boundaries interact with some pattern
constructs can be changed. See {@link #useAnchoringBounds 
useAnchoringBounds} and {@link #useTransparentBounds useTransparentBounds}
for more details.

<p> This class also defines methods for replacing matched subsequences with
new strings whose contents can, if desired, be computed from the match
result.  The {@link #appendReplacement appendReplacement} and {@link
#appendTail appendTail} methods can be used in tandem in order to collect
the result into an existing string buffer, or the more convenient {@link
#replaceAll replaceAll} method can be used to create a string in which every
matching subsequence in the input sequence is replaced.

<p> The explicit state of a matcher includes the start and end indices of
the most recent successful match.  It also includes the start and end
indices of the input subsequence captured by each <a
href=\"Pattern.html#cg\">capturing group</a> in the pattern as well as a total
count of such subsequences.  As a convenience, methods are also provided for
returning these captured subsequences in string form.

<p> The explicit state of a matcher is initially undefined; attempting to
query any part of it before a successful match will cause an {@link
IllegalStateException} to be thrown.  The explicit state of a matcher is
recomputed by every match operation.

<p> The implicit state of a matcher includes the input character sequence as
well as the <i>append position</i>, which is initially zero and is updated
by the {@link #appendReplacement appendReplacement} method.

<p> A matcher may be reset explicitly by invoking its {@link #reset()}
method or, if a new input sequence is desired, its {@link
#reset(java.lang.CharSequence) reset(CharSequence)} method.  Resetting a
matcher discards its explicit state information and sets the append position
to zero.

<p> Instances of this class are not safe for use by multiple concurrent
threads. </p>


@author      Mike McCloskey
@author	Mark Reinhold
@author	JSR-51 Expert Group
@version 	1.58, 04/06/28
@since	1.4
@spec        JSR-51"
      classrelation 1976987 // <realization>
	relation 1976987 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1976987 // <realization>
	  b parent class_ref 1011227 // MatchResult
      end

      classrelation 1977115 // parentPattern (<unidirectional association>)
	relation 1977115 --->
	  a role_name "parentPattern" package
	    comment "
The Pattern object that created this Matcher.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1977115 // parentPattern (<unidirectional association>)
	  b parent class_ref 435867 // Pattern
      end

      attribute 2978971 "groups"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The storage used by groups. They may contain invalid values if
a group was skipped during the matching.
"
      end

      attribute 2979099 "from"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The range within the sequence that is to be matched. Anchors
will match at these \"hard\" boundaries. Changing the region
changes these values.
"
      end

      attribute 2979227 "to"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The range within the sequence that is to be matched. Anchors
will match at these \"hard\" boundaries. Changing the region
changes these values.
"
      end

      classrelation 1977243 // text (<unidirectional association>)
	relation 1977243 --->
	  a role_name "text" package
	    comment "
The original string being matched.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1977243 // text (<unidirectional association>)
	  b parent class_ref 393755 // CharSequence
      end

      attribute 2979355 "ENDANCHOR"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Matcher state used by the last node. NOANCHOR is used when a
match does not have to consume all of the input. ENDANCHOR is
the mode used for matching all the input.
"
      end

      attribute 2979483 "NOANCHOR"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2979611 "acceptMode"
	package explicit_type "int"
	init_value "=  NOANCHOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2979739 "first"
	package explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The range of string that last matched the pattern. If the last
match failed then first is -1; last initially holds 0 then it
holds the index of the end of the last match (which is where the
next search starts).
"
      end

      attribute 2979867 "last"
	package explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The range of string that last matched the pattern. If the last
match failed then first is -1; last initially holds 0 then it
holds the index of the end of the last match (which is where the
next search starts).
"
      end

      attribute 2979995 "oldLast"
	package explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The end index of what matched in the last match operation.
"
      end

      attribute 2980123 "lastAppendPosition"
	package explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The index of the last position appended in a substitution.
"
      end

      attribute 2980251 "locals"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Storage used by nodes to tell what repetition they are on in
a pattern, and where groups begin. The nodes themselves are stateless,
so they rely on this field to hold state during a match.
"
      end

      attribute 2980379 "hitEnd"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Boolean indicating whether or not more input could change
the results of the last match. 

If hitEnd is true, and a match was found, then more input
might cause a different match to be found.
If hitEnd is true and a match was not found, then more
input could cause a match to be found.
If hitEnd is false and a match was found, then more input
will not change the match.
If hitEnd is false and a match was not found, then more
input will not cause a match to be found.
"
      end

      attribute 2980507 "requireEnd"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Boolean indicating whether or not more input could change
a positive match into a negative one.

If requireEnd is true, and a match was found, then more
input could cause the match to be lost.
If requireEnd is false and a match was found, then more
input might change the match but the match won't be lost.
If a match was not found, then requireEnd has no meaning.
"
      end

      attribute 2980635 "transparentBounds"
	package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If transparentBounds is true then the boundaries of this
matcher's region are transparent to lookahead, lookbehind,
and boundary matching constructs that try to see beyond them.
"
      end

      attribute 2980763 "anchoringBounds"
	package explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If anchoringBounds is true then the boundaries of this 
matcher's region match anchors such as ^ and $.
"
      end

      operation 8095387 "Matcher"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "No default constructor."
      end

      operation 8095515 "Matcher"
	package explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 435867 // Pattern
	  param inout name "text" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "All matchers have the state used by Pattern during a match."
      end

      operation 8095643 "pattern"
	public return_type class_ref 435867 // Pattern
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the pattern that is interpreted by this matcher.

@return  The pattern for which this matcher was created"
      end

      operation 8095771 "toMatchResult"
	public return_type class_ref 1011227 // MatchResult
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the match state of this matcher as a {@link MatchResult}.
The result is unaffected by subsequent operations performed upon this
matcher.

@return  a <code>MatchResult</code> with the state of this matcher"
      end

      operation 8095899 "usePattern"
	public return_type class_ref 1011099 // Matcher
	nparams 1
	  param inout name "newPattern" type class_ref 435867 // Pattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the <tt>Pattern</tt> that this <tt>Matcher</tt> uses to
find matches with.

<p> This method causes this matcher to lose information
about the groups of the last match that occurred. The
matcher's position in the input is maintained and its
last append position is unaffected.</p>

@param  newPattern
        The new pattern used by this matcher
@return  This matcher
@throws  IllegalArgumentException
         If newPattern is <tt>null</tt>
@since 1.5"
      end

      operation 8096027 "reset"
	public return_type class_ref 1011099 // Matcher
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher.

<p> Resetting a matcher discards all of its explicit state information
and sets its append position to zero. The matcher's region is set to the
default region, which is its entire character sequence. The anchoring
and transparency of this matcher's region boundaries are unaffected.

@return  This matcher"
      end

      operation 8096155 "reset"
	public return_type class_ref 1011099 // Matcher
	nparams 1
	  param inout name "input" type class_ref 393755 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher with a new input sequence.

<p> Resetting a matcher discards all of its explicit state information
and sets its append position to zero.  The matcher's region is set to
the default region, which is its entire character sequence.  The 
anchoring and transparency of this matcher's region boundaries are 
unaffected.

@param  input
        The new input character sequence

@return  This matcher"
      end

      operation 8096283 "start"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the previous match.  </p>

@return  The index of the first character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8096411 "start"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the subsequence captured by the given group
during the previous match operation.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>start(0)</tt> is equivalent to
<i>m.</i><tt>start()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The index of the first character captured by the group,
         or <tt>-1</tt> if the match was successful but the group
         itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8096539 "end"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character matched.  </p>

@return  The offset after the last character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8096667 "end"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character of the subsequence
captured by the given group during the previous match operation.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>end(0)</tt> is equivalent to
<i>m.</i><tt>end()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The offset after the last character captured by the group,
         or <tt>-1</tt> if the match was successful
         but the group itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8096795 "group"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence matched by the previous match.

<p> For a matcher <i>m</i> with input sequence <i>s</i>, 
the expressions <i>m.</i><tt>group()</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(),</tt>&nbsp;<i>m.</i><tt>end())</tt>
are equivalent.  </p>

<p> Note that some patterns, for example <tt>a*</tt>, match the empty
string.  This method will return the empty string when the pattern
successfully matches the empty string in the input.  </p>

@return The (possibly empty) subsequence matched by the previous match,
        in string form

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8096923 "group"
	public explicit_return_type "String"
	nparams 1
	  param in name "group" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence captured by the given group during the
previous match operation.

<p> For a matcher <i>m</i>, input sequence <i>s</i>, and group index
<i>g</i>, the expressions <i>m.</i><tt>group(</tt><i>g</i><tt>)</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(</tt><i>g</i><tt>),</tt>&nbsp;<i>m.</i><tt>end(</tt><i>g</i><tt>))</tt>
are equivalent.  </p>

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <tt>m.group(0)</tt> is equivalent to <tt>m.group()</tt>.
</p>

<p> If the match was successful but the group specified failed to match
any part of the input sequence, then <tt>null</tt> is returned. Note
that some groups, for example <tt>(a*)</tt>, match the empty string.
This method will return the empty string when such a group successfully
matches the empty string in the input.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The (possibly empty) subsequence captured by the group
         during the previous match, or <tt>null</tt> if the group
         failed to match part of the input

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8097051 "groupCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of capturing groups in this matcher's pattern.

<p> Group zero denotes the entire pattern by convention. It is not
included in this count.

<p> Any non-negative integer smaller than or equal to the value
returned by this method is guaranteed to be a valid group index for
this matcher.  </p>

@return The number of capturing groups in this matcher's pattern"
      end

      operation 8097179 "matches"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to match the entire region against the pattern.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, the entire region sequence
         matches this matcher's pattern"
      end

      operation 8097307 "find"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to find the next subsequence of the input sequence that matches
the pattern.

<p> This method starts at the beginning of this matcher's region, or, if
a previous invocation of the method was successful and the matcher has 
not since been reset, at the first character not matched by the previous
match.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, a subsequence of the input
         sequence matches this matcher's pattern"
      end

      operation 8097435 "find"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this matcher and then attempts to find the next subsequence of
the input sequence that matches the pattern, starting at the specified
index.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods, and subsequent
invocations of the {@link #find()} method will start at the first
character not matched by this match.  </p>

@throws  IndexOutOfBoundsException
         If start is less than zero or if start is greater than the
         length of the input sequence.

@return  <tt>true</tt> if, and only if, a subsequence of the input
         sequence starting at the given index matches this matcher's
         pattern"
      end

      operation 8097563 "lookingAt"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to match the input sequence, starting at the beginning of the 
region, against the pattern.

<p> Like the {@link #matches matches} method, this method always starts
at the beginning of the region; unlike that method, it does not
require that the entire region be matched.

<p> If the match succeeds then more information can be obtained via the
<tt>start</tt>, <tt>end</tt>, and <tt>group</tt> methods.  </p>

@return  <tt>true</tt> if, and only if, a prefix of the input
         sequence matches this matcher's pattern"
      end

      operation 8097691 "quoteReplacement"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a literal replacement <code>String</code> for the specified
<code>String</code>.

This method produces a <code>String</code> that will work
use as a literal replacement <code>s</code> in the
<code>appendReplacement</code> method of the {@link Matcher} class.
The <code>String</code> produced will match the sequence of characters
in <code>s</code> treated as a literal sequence. Slashes ('\\') and
dollar signs ('$') will be given no special meaning.

@param  s The string to be literalized
@return  A literal string replacement
@since 1.5"
      end

      operation 8097819 "appendReplacement"
	public return_type class_ref 1011099 // Matcher
	nparams 2
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "replacement" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements a non-terminal append-and-replace step.

<p> This method performs the following actions: </p>

<ol>

  <li><p> It reads characters from the input sequence, starting at the
  append position, and appends them to the given string buffer.  It
  stops after reading the last character preceding the previous match,
  that is, the character at index {@link
  #start()}&nbsp;<tt>-</tt>&nbsp;<tt>1</tt>.  </p></li>

  <li><p> It appends the given replacement string to the string buffer.
  </p></li>

  <li><p> It sets the append position of this matcher to the index of
  the last character matched, plus one, that is, to {@link #end()}.
  </p></li>

</ol>

<p> The replacement string may contain references to subsequences
captured during the previous match: Each occurrence of
<tt>$</tt><i>g</i><tt></tt> will be replaced by the result of
evaluating {@link #group(int) group}<tt>(</tt><i>g</i><tt>)</tt>. 
The first number after the <tt>$</tt> is always treated as part of
the group reference. Subsequent numbers are incorporated into g if
they would form a legal group reference. Only the numerals '0'
through '9' are considered as potential components of the group
reference. If the second group matched the string <tt>\"foo\"</tt>, for
example, then passing the replacement string <tt>\"$2bar\"</tt> would
cause <tt>\"foobar\"</tt> to be appended to the string buffer. A dollar
sign (<tt>$</tt>) may be included as a literal in the replacement
string by preceding it with a backslash (<tt>\\$</tt>).

<p> Note that backslashes (<tt>\\</tt>) and dollar signs (<tt>$</tt>) in
the replacement string may cause the results to be different than if it
were being treated as a literal replacement string. Dollar signs may be
treated as references to captured subsequences as described above, and
backslashes are used to escape literal characters in the replacement
string.

<p> This method is intended to be used in a loop together with the
{@link #appendTail appendTail} and {@link #find find} methods.  The
following code, for example, writes <tt>one dog two dogs in the
yard</tt> to the standard-output stream: </p>

<blockquote><pre>
Pattern p = Pattern.compile(\"cat\");
Matcher m = p.matcher(\"one cat two cats in the yard\");
StringBuffer sb = new StringBuffer();
while (m.find()) {
    m.appendReplacement(sb, \"dog\");
}
m.appendTail(sb);
System.out.println(sb.toString());</pre></blockquote>

@param  sb
        The target string buffer

@param  replacement
        The replacement string

@return  This matcher

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If the replacement string refers to a capturing group
         that does not exist in the pattern"
      end

      operation 8097947 "appendTail"
	public return_type class_ref 198171 // StringBuffer
	nparams 1
	  param inout name "sb" type class_ref 198171 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements a terminal append-and-replace step.

<p> This method reads characters from the input sequence, starting at
the append position, and appends them to the given string buffer.  It is
intended to be invoked after one or more invocations of the {@link
#appendReplacement appendReplacement} method in order to copy the
remainder of the input sequence.  </p>

@param  sb
        The target string buffer

@return  The target string buffer"
      end

      operation 8098075 "replaceAll"
	public explicit_return_type "String"
	nparams 1
	  param in name "replacement" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces every subsequence of the input sequence that matches the
pattern with the given replacement string.

<p> This method first resets this matcher.  It then scans the input
sequence looking for matches of the pattern.  Characters that are not
part of any match are appended directly to the result string; each match
is replaced in the result by the replacement string.  The replacement
string may contain references to captured subsequences as in the {@link
#appendReplacement appendReplacement} method.

<p> Note that backslashes (<tt>\\</tt>) and dollar signs (<tt>$</tt>) in
the replacement string may cause the results to be different than if it
were being treated as a literal replacement string. Dollar signs may be
treated as references to captured subsequences as described above, and
backslashes are used to escape literal characters in the replacement
string.

<p> Given the regular expression <tt>a*b</tt>, the input
<tt>\"aabfooaabfooabfoob\"</tt>, and the replacement string
<tt>\"-\"</tt>, an invocation of this method on a matcher for that
expression would yield the string <tt>\"-foo-foo-foo-\"</tt>.

<p> Invoking this method changes this matcher's state.  If the matcher
is to be used in further matching operations then it should first be
reset.  </p>

@param  replacement
        The replacement string

@return  The string constructed by replacing each matching subsequence
         by the replacement string, substituting captured subsequences
         as needed"
      end

      operation 8098203 "replaceFirst"
	public explicit_return_type "String"
	nparams 1
	  param in name "replacement" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the first subsequence of the input sequence that matches the
pattern with the given replacement string.

<p> This method first resets this matcher.  It then scans the input
sequence looking for a match of the pattern.  Characters that are not
part of the match are appended directly to the result string; the match
is replaced in the result by the replacement string.  The replacement
string may contain references to captured subsequences as in the {@link
#appendReplacement appendReplacement} method.

<p> Given the regular expression <tt>dog</tt>, the input
<tt>\"zzzdogzzzdogzzz\"</tt>, and the replacement string
<tt>\"cat\"</tt>, an invocation of this method on a matcher for that
expression would yield the string <tt>\"zzzcatzzzdogzzz\"</tt>.  </p>

<p> Invoking this method changes this matcher's state.  If the matcher
is to be used in further matching operations then it should first be
reset.  </p>

@param  replacement
        The replacement string
@return  The string constructed by replacing the first matching
         subsequence by the replacement string, substituting captured
@throws  NullPointerException  if <code>replacement</code> is null.
         subsequences as needed"
      end

      operation 8098331 "region"
	public return_type class_ref 1011099 // Matcher
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the limits of this matcher's region. The region is the part of the
input sequence that will be searched to find a match. Invoking this
method resets the matcher, and then sets the region to start at the
index specified by the <code>start</code> parameter and end at the
index specified by the <code>end</code> parameter.

<p>Depending on the transparency and anchoring being used (see
{@link #useTransparentBounds useTransparentBounds} and 
{@link #useAnchoringBounds useAnchoringBounds}), certain constructs such
as anchors may behave differently at or around the boundaries of the
region.

@param  start
        The index to start searching at (inclusive)
@param  end
        The index to end searching at (exclusive)
@throws  IndexOutOfBoundsException
         If start or end is less than zero, if
         start is greater than the length of the input sequence, if
         end is greater than the length of the input sequence, or if
         start is greater than end.
@return  this matcher
@since 1.5"
      end

      operation 8098459 "regionStart"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the start index of this matcher's region. The
searches this matcher conducts are limited to finding matches
within {@link #regionStart regionStart} (inclusive) and
{@link #regionEnd regionEnd} (exclusive).

@return  The starting point of this matcher's region
@since 1.5"
      end

      operation 8098587 "regionEnd"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the end index (exclusive) of this matcher's region.
The searches this matcher conducts are limited to finding matches
within {@link #regionStart regionStart} (inclusive) and
{@link #regionEnd regionEnd} (exclusive).

@return  the ending point of this matcher's region
@since 1.5"
      end

      operation 8098715 "hasTransparentBounds"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the transparency of region bounds for this matcher.

<p> This method returns <tt>true</tt> if this matcher uses
<i>transparent</i> bounds, <tt>false</tt> if it uses <i>opaque</i>
bounds.

<p> See {@link #useTransparentBounds useTransparentBounds} for a 
description of transparent and opaque bounds.

<p> By default, a matcher uses opaque region boundaries.

@return <tt>true</tt> iff this matcher is using transparent bounds,
        <tt>false</tt> otherwise.
@see java.util.regex.Matcher#useTransparentBounds(boolean)
@since 1.5"
      end

      operation 8098843 "useTransparentBounds"
	public return_type class_ref 1011099 // Matcher
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the transparency of region bounds for this matcher.

<p> Invoking this method with an argument of <tt>true</tt> will set this
matcher to use <i>transparent</i> bounds. If the boolean 
argument is <tt>false</tt>, then <i>opaque</i> bounds will be used.

<p> Using transparent bounds, the boundaries of this 
matcher's region are transparent to lookahead, lookbehind,
and boundary matching constructs. Those constructs can see beyond the 
boundaries of the region to see if a match is appropriate.

<p> Using opaque bounds, the boundaries of this matcher's 
region are opaque to lookahead, lookbehind, and boundary matching 
constructs that may try to see beyond them. Those constructs cannot
look past the boundaries so they will fail to match anything outside
of the region.

<p> By default, a matcher uses opaque bounds.

@param  b a boolean indicating whether to use opaque or transparent
        regions
@return this matcher
@see java.util.regex.Matcher#hasTransparentBounds
@since 1.5"
      end

      operation 8098971 "hasAnchoringBounds"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the anchoring of region bounds for this matcher.

<p> This method returns <tt>true</tt> if this matcher uses
<i>anchoring</i> bounds, <tt>false</tt> otherwise.

<p> See {@link #useAnchoringBounds useAnchoringBounds} for a 
description of anchoring bounds.

<p> By default, a matcher uses anchoring region boundaries.

@return <tt>true</tt> iff this matcher is using anchoring bounds,
        <tt>false</tt> otherwise.
@see java.util.regex.Matcher#useAnchoringBounds(boolean)
@since 1.5"
      end

      operation 8099099 "useAnchoringBounds"
	public return_type class_ref 1011099 // Matcher
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the anchoring of region bounds for this matcher.

<p> Invoking this method with an argument of <tt>true</tt> will set this
matcher to use <i>anchoring</i> bounds. If the boolean 
argument is <tt>false</tt>, then <i>non-anchoring</i> bounds will be 
used.

<p> Using anchoring bounds, the boundaries of this 
matcher's region match anchors such as ^ and $.

<p> Without anchoring bounds, the boundaries of this 
matcher's region will not match anchors such as ^ and $.

<p> By default, a matcher uses anchoring region boundaries.

@param  b a boolean indicating whether or not to use anchoring bounds.
@return this matcher
@see java.util.regex.Matcher#hasAnchoringBounds
@since 1.5"
      end

      operation 8099227 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the string representation of this matcher. The
string representation of a <code>Matcher</code> contains information
that may be useful for debugging. The exact format is unspecified.

@return  The string representation of this matcher
@since 1.5"
      end

      operation 8099355 "hitEnd"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if the end of input was hit by the search engine in
the last match operation performed by this matcher.

<p>When this method returns true, then it is possible that more input 
would have changed the result of the last search.

@return  true iff the end of input was hit in the last match; false
         otherwise
@since 1.5"
      end

      operation 8099483 "requireEnd"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns true if more input could change a positive match into a 
negative one.

<p>If this method returns true, and a match was found, then more
input could cause the match to be lost. If this method returns false 
and a match was found, then more input might change the match but the 
match won't be lost. If a match was not found, then requireEnd has no 
meaning.

@return  true iff more input could change a positive match into a 
         negative one.
@since 1.5"
      end

      operation 8099611 "search"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "from" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiates a search to find a Pattern within the given bounds.
The groups are filled with default values and the match of the root
of the state machine is called. The state machine will hold the state
of the match as it proceeds in this matcher.

Matcher.from is not set here, because it is the \"hard\" boundary
of the start of the search which anchors will set to. The from param
is the \"soft\" boundary of the start of the search, meaning that the
regex tries to match at that index but ^ won't match there. Subsequent
calls to the search methods start at a new \"soft\" boundary which is
the end of the previous match."
      end

      operation 8099739 "match"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "anchor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiates a search for an anchored match to a Pattern within the given
bounds. The groups are filled with default values and the match of the
root of the state machine is called. The state machine will hold the
state of the match as it proceeds in this matcher."
      end

      operation 8099867 "getTextLength"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the end index of the text.

@return the index after the last character in the text"
      end

      operation 8099995 "getSubSequence"
	package return_type class_ref 393755 // CharSequence
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a String from this Matcher's input in the specified range.

@param  beginIndex   the beginning index, inclusive
@param  endIndex     the ending index, exclusive
@return A String generated from this Matcher's input"
      end

      operation 8100123 "charAt"
	package explicit_return_type "char"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this Matcher's input character at index i.

@return A char from the specified index"
      end
    end

    class 1011227 "MatchResult"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The result of a match operation.

<p>This interface contains query methods used to determine the
results of a match against a regular expression. The match boundaries,
groups and group boundaries can be seen but not modified through
a <code>MatchResult</code>.

@author  Michael McCloskey
@version 1.5 06/28/04
@see Matcher
@since 1.5"
      operation 8094491 "start"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the match.

@return  The index of the first character matched

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8094619 "start"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start index of the subsequence captured by the given group
during this match.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>start(0)</tt> is equivalent to
<i>m.</i><tt>start()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The index of the first character captured by the group,
         or <tt>-1</tt> if the match was successful but the group
         itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8094747 "end"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character matched.  </p>

@return  @return  The offset after the last character matched 

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8094875 "end"
	public explicit_return_type "int"
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset after the last character of the subsequence 
captured by the given group during this match.

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <i>m.</i><tt>end(0)</tt> is equivalent to
<i>m.</i><tt>end()</tt>.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The offset after the last character captured by the group,
         or <tt>-1</tt> if the match was successful 
         but the group itself did not match anything

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8095003 "group"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence matched by the previous match.

<p> For a matcher <i>m</i> with input sequence <i>s</i>, 
the expressions <i>m.</i><tt>group()</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(),</tt>&nbsp;<i>m.</i><tt>end())</tt>
are equivalent.  </p>

<p> Note that some patterns, for example <tt>a*</tt>, match the empty
string.  This method will return the empty string when the pattern
successfully matches the empty string in the input.  </p>

@return The (possibly empty) subsequence matched by the previous match,
        in string form

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed"
      end

      operation 8095131 "group"
	public explicit_return_type "String"
	nparams 1
	  param in name "group" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input subsequence captured by the given group during the
previous match operation.

<p> For a matcher <i>m</i>, input sequence <i>s</i>, and group index
<i>g</i>, the expressions <i>m.</i><tt>group(</tt><i>g</i><tt>)</tt> and
<i>s.</i><tt>substring(</tt><i>m.</i><tt>start(</tt><i>g</i><tt>),</tt>&nbsp;<i>m.</i><tt>end(</tt><i>g</i><tt>))</tt>
are equivalent.  </p>

<p> <a href=\"Pattern.html#cg\">Capturing groups</a> are indexed from left
to right, starting at one.  Group zero denotes the entire pattern, so
the expression <tt>m.group(0)</tt> is equivalent to <tt>m.group()</tt>.
</p>

<p> If the match was successful but the group specified failed to match
any part of the input sequence, then <tt>null</tt> is returned. Note
that some groups, for example <tt>(a*)</tt>, match the empty string.
This method will return the empty string when such a group successfully
matches the empty string in the input.  </p>

@param  group
        The index of a capturing group in this matcher's pattern

@return  The (possibly empty) subsequence captured by the group
         during the previous match, or <tt>null</tt> if the group
         failed to match part of the input

@throws  IllegalStateException
         If no match has yet been attempted,
         or if the previous match operation failed

@throws  IndexOutOfBoundsException
         If there is no capturing group in the pattern
         with the given index"
      end

      operation 8095259 "groupCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of capturing groups in this match result's pattern.

<p> Group zero denotes the entire pattern by convention. It is not
included in this count.

<p> Any non-negative integer smaller than or equal to the value
returned by this method is guaranteed to be a valid group index for
this matcher.  </p>

@return The number of capturing groups in this matcher's pattern"
      end
    end
  end

  deploymentview 169627 "regex"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 770075 "ASCII"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1010971 // ASCII
      end
      comment "@(#)ASCII.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770203 "MatchResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1011227 // MatchResult
      end
      comment "@(#)MatchResult.java	1.5 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770331 "Matcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1011099 // Matcher
      end
      comment "@(#)Matcher.java	1.58 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770459 "Pattern"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.text.CharacterIterator;
import sun.text.Normalizer;
import java.util.ArrayList;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 435867 // Pattern
      end
      comment "@(#)Pattern.java	1.113 07/05/07

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 770587 "PatternSyntaxException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.security.action.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 393627 // PatternSyntaxException
      end
      comment "@(#)PatternSyntaxException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
