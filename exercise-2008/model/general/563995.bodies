class DeclarationFilter
!!!3565595.java!!!	getFilter(in mods : Collection) : DeclarationFilter
	return new DeclarationFilter() {
	    public boolean matches(Declaration d) {
		return d.getModifiers().containsAll(mods);
	    }
	};
!!!3565723.java!!!	getFilter(in kind : Class) : DeclarationFilter
	return new DeclarationFilter() {
	    public boolean matches(Declaration d) {
		return kind.isInstance(d);
	    }
	};
!!!3565851.java!!!	and(inout f : DeclarationFilter) : DeclarationFilter
	final DeclarationFilter f1 = this;
	final DeclarationFilter f2 = f;
	return new DeclarationFilter() {
	    public boolean matches(Declaration d) {
		return f1.matches(d) && f2.matches(d);
	    }
	};
!!!3565979.java!!!	or(inout f : DeclarationFilter) : DeclarationFilter
	final DeclarationFilter f1 = this;
	final DeclarationFilter f2 = f;
	return new DeclarationFilter() {
	    public boolean matches(Declaration d) {
		return f1.matches(d) || f2.matches(d);
	    }
	};
!!!3566107.java!!!	not() : DeclarationFilter
	return new DeclarationFilter() {
	    public boolean matches(Declaration d) {
		return !DeclarationFilter.this.matches(d);
	    }
	};
!!!3566235.java!!!	matches(inout decl : Declaration) : boolean
	return true;
!!!3566363.java!!!	filter(inout decls : Collection) : Collection
	ArrayList<D> res = new ArrayList<D>(decls.size());
	for (D d : decls) {
	    if (matches(d)) {
		res.add(d);
	    }
	}
	return res;
!!!3566491.java!!!	filter(inout decls : Collection, inout resType : Class) : Collection
	ArrayList<D> res = new ArrayList<D>(decls.size());
	for (Declaration d : decls) {
	    if (resType.isInstance(d) && matches(d)) {
		res.add(resType.cast(d));
	    }
	}
	return res;
