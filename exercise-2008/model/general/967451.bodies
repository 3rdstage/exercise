class Delegate
!!!7599131.java!!!	Delegate(inout digestSpi : MessageDigestSpi, in algorithm : String)
	    super(algorithm);
	    this.digestSpi = digestSpi;
!!!7599259.java!!!	clone() : Object
	    if (digestSpi instanceof Cloneable) {
		MessageDigestSpi digestSpiClone =
		    (MessageDigestSpi)digestSpi.clone();	
		// Because 'algorithm', 'provider', and 'state' are private
		// members of our supertype, we must perform a cast to
		// access them.
		MessageDigest that =
		    new Delegate(digestSpiClone,
				 ((MessageDigest)this).algorithm);
		that.provider = ((MessageDigest)this).provider;
		that.state = ((MessageDigest)this).state;
		return that;
	    } else {
		throw new CloneNotSupportedException();
	    }
!!!7599387.java!!!	engineGetDigestLength() : int
	    return digestSpi.engineGetDigestLength();
!!!7599515.java!!!	engineUpdate(in input : byte) : void
	    digestSpi.engineUpdate(input);
!!!7599643.java!!!	engineUpdate(in input : byte, in offset : int, in len : int) : void
	    digestSpi.engineUpdate(input, offset, len);
!!!7599771.java!!!	engineUpdate(inout input : ByteBuffer) : void
	    digestSpi.engineUpdate(input);
!!!7599899.java!!!	engineDigest() : byte
	    return digestSpi.engineDigest();
!!!7600027.java!!!	engineDigest(in buf : byte, in offset : int, in len : int) : int
		return digestSpi.engineDigest(buf, offset, len);
!!!7600155.java!!!	engineReset() : void
	    digestSpi.engineReset();
