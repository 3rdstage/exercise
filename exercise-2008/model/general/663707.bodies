class ElementAvailableCall
!!!4372379.java!!!	ElementAvailableCall(inout fname : QName, inout arguments : Vector)
	super(fname, arguments);
!!!4372507.java!!!	typeCheck(inout stable : SymbolTable) : Type
	if (argument() instanceof LiteralExpr) {
	    return _type = Type.Boolean;
	}
	ErrorMsg err = new ErrorMsg(ErrorMsg.NEED_LITERAL_ERR,
				    "element-available", this);
	throw new TypeCheckError(err);
!!!4372635.java!!!	evaluateAtCompileTime() : Object
	return getResult() ? Boolean.TRUE : Boolean.FALSE;
!!!4372763.java!!!	getResult() : boolean
	try {
	    final LiteralExpr arg = (LiteralExpr) argument();
	    final String qname = arg.getValue();
	    final int index = qname.indexOf(':');
	    final String localName = (index > 0) ? 
		qname.substring(index + 1) : qname;
	    return getParser().elementSupported(arg.getNamespace(), 
					        localName);
	}
	catch (ClassCastException e) {
	    return false;
	}
!!!4372891.java!!!	translate(inout classGen : ClassGenerator, inout methodGen : MethodGenerator) : void
	final ConstantPoolGen cpg = classGen.getConstantPool();
	final boolean result = getResult();
	methodGen.getInstructionList().append(new PUSH(cpg, result));
