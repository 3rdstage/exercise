class MethodDescriptor
!!!6779675.java!!!	MethodDescriptor(inout method : Method)
	this(method, null);
!!!6779803.java!!!	MethodDescriptor(inout method : Method, inout parameterDescriptors : ParameterDescriptor)
	setName(method.getName());
	setMethod(method);
	this.parameterDescriptors = parameterDescriptors;
!!!6779931.java!!!	getMethod() : Method
	Method method = getMethod0();
	if (method == null) {
	    Class cls = getClass0();
	    if (cls != null) {
		Class[] params = getParams();
		if (params == null) {
		    for (int i = 0; i < 3; i++) {
			// Find methods for up to 2 params. We are guessing here.
			// This block should never execute unless the classloader
			// that loaded the argument classes disappears.
			method = Introspector.findMethod(cls, getName(), i, null);
			if (method != null) {
			    break;
			}
		    }
		} else {
		    method = Introspector.findMethod(cls, getName(), 
						     params.length, params);
		}
		setMethod(method);
	    }
	}
	return method;
!!!6780059.java!!!	setMethod(inout method : Method) : void
	if (method == null) {
	    return;
	}
	if (getClass0() == null) {
	    setClass0(method.getDeclaringClass());
	}
	setParams(method.getParameterTypes());
	methodRef = createReference(method, true);
!!!6780187.java!!!	getMethod0() : Method
	return (Method)getObject(methodRef);
!!!6780315.java!!!	setParams(inout param : Class) : void
	if (param == null) {
	    return;
	}
	paramNames = new String[param.length];
	params = new ArrayList(param.length);
	for (int i = 0; i < param.length; i++) {
	    paramNames[i] = param[i].getName();
	    params.add(new WeakReference(param[i]));
	}
!!!6780443.java!!!	getParamNames() : String
	return paramNames;
!!!6780571.java!!!	getParams() : Class
	Class[] clss = new Class[params.size()];

	for (int i = 0; i < params.size(); i++) {
	    Reference ref = (Reference)params.get(i);
	    Class cls = (Class)ref.get();
	    if (cls == null) {
		return null;
	    } else {
		clss[i] = cls;
	    }
	}
	return clss;
!!!6780699.java!!!	getParameterDescriptors() : ParameterDescriptor
	return parameterDescriptors;
!!!6780827.java!!!	MethodDescriptor(inout x : MethodDescriptor, inout y : MethodDescriptor)
	super(x,y);

	methodRef = x.methodRef;
	if (y.methodRef != null) {
	    methodRef = y.methodRef;
	}
	params = x.params;
	if (y.params != null) {
	    params = y.params;
	}
	paramNames = x.paramNames;
	if (y.paramNames != null) {
	    paramNames = y.paramNames;
	}

	parameterDescriptors = x.parameterDescriptors;
	if (y.parameterDescriptors != null) {
	    parameterDescriptors = y.parameterDescriptors;
	}
!!!6780955.java!!!	MethodDescriptor(inout old : MethodDescriptor)
	super(old);

	methodRef = old.methodRef;
	params = old.params;
	paramNames = old.paramNames;

	if (old.parameterDescriptors != null) {
	    int len = old.parameterDescriptors.length;
	    parameterDescriptors = new ParameterDescriptor[len];
	    for (int i = 0; i < len ; i++) {
	        parameterDescriptors[i] = new ParameterDescriptor(old.parameterDescriptors[i]);
	    }
	}
