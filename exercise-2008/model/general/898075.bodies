class MetaData
!!!6778395.java!!!	equals(inout o1 : Object, inout o2 : Object) : boolean
        return (o1 == null) ? (o2 == null) : o1.equals(o2);
!!!6778523.java!!!	setPersistenceDelegate(inout type : Class, inout persistenceDelegate : PersistenceDelegate) : void
	setBeanAttribute(type, "persistenceDelegate", persistenceDelegate);
!!!6778651.java!!!	getPersistenceDelegate(inout type : Class) : PersistenceDelegate
        if (type == null) {
            return nullPersistenceDelegate;
        }
        if (ReflectionUtils.isPrimitive(type)) {
            return primitivePersistenceDelegate;
        }
        // The persistence delegate for arrays is non-trivial; instantiate it lazily.
        if (type.isArray()) {
            if (arrayPersistenceDelegate == null) {
                arrayPersistenceDelegate = new ArrayPersistenceDelegate();
            }
            return arrayPersistenceDelegate;
        }
        // Handle proxies lazily for backward compatibility with 1.2.
        try {
            if (java.lang.reflect.Proxy.isProxyClass(type)) {
                if (proxyPersistenceDelegate == null) {
                    proxyPersistenceDelegate = new ProxyPersistenceDelegate();
                }
                return proxyPersistenceDelegate;
            }
        }
        catch(Exception e) {}
        // else if (type.getDeclaringClass() != null) {
        //     return new DefaultPersistenceDelegate(new String[]{"this$0"});
        // }

	String typeName = type.getName();

	// Check to see if there are properties that have been lazily registered for removal.
	if (getBeanAttribute(type, "transient_init") == null) {
	    Vector tp = (Vector)transientProperties.get(typeName);
	    if (tp != null) {
		for(int i = 0; i < tp.size(); i++) {
		    setPropertyAttribute(type, (String)tp.get(i), "transient", Boolean.TRUE);
		}
	    }
	    setBeanAttribute(type, "transient_init", Boolean.TRUE);
	}

        PersistenceDelegate pd = (PersistenceDelegate)getBeanAttribute(type, "persistenceDelegate");
        if (pd == null) {
            pd = (PersistenceDelegate)internalPersistenceDelegates.get(typeName);
            if (pd != null) {
                return pd;
            }
            internalPersistenceDelegates.put(typeName, defaultPersistenceDelegate);
            try {
                String name =  type.getName();
                Class c = Class.forName("java.beans." + name.replace('.', '_') 
					+ "_PersistenceDelegate");
                pd = (PersistenceDelegate)c.newInstance();
                internalPersistenceDelegates.put(typeName, pd);
            }
            catch (ClassNotFoundException e) {}
            catch (Exception e) {
                System.err.println("Internal error: " + e);
            }
        }

        return (pd != null) ? pd : defaultPersistenceDelegate;
!!!6778779.java!!!	getBeanInfo(inout type : Class) : BeanInfo
	BeanInfo info = null;
	try {
	    info = Introspector.getBeanInfo(type);
	} catch (Throwable e) {
	    e.printStackTrace();
	} 

	return info;
!!!6778907.java!!!	getPropertyDescriptor(inout type : Class, in propertyName : String) : PropertyDescriptor
        BeanInfo info = getBeanInfo(type);
        PropertyDescriptor[] propertyDescriptors = info.getPropertyDescriptors();
        // System.out.println("Searching for: " + propertyName + " in " + type);
        for(int i = 0; i < propertyDescriptors.length; i++) {
            PropertyDescriptor pd  = propertyDescriptors[i];
            if (propertyName.equals(pd.getName())) {
                return pd;
            }
        }
        return null;
!!!6779035.java!!!	setPropertyAttribute(inout type : Class, in property : String, in attribute : String, inout value : Object) : void
        PropertyDescriptor pd = getPropertyDescriptor(type, property);
        if (pd == null) {
            System.err.println("Warning: property " + property + " is not defined on " + type);
            return;
        }
        pd.setValue(attribute, value);
!!!6779163.java!!!	setBeanAttribute(inout type : Class, in attribute : String, inout value : Object) : void
        getBeanInfo(type).getBeanDescriptor().setValue(attribute, value);
!!!6779291.java!!!	getBeanAttribute(inout type : Class, in attribute : String) : Object
	return getBeanInfo(type).getBeanDescriptor().getValue(attribute);
!!!6779419.java!!!	registerConstructor(in typeName : String, in constructor : String) : void
        internalPersistenceDelegates.put(typeName, 
					 new DefaultPersistenceDelegate(constructor));
!!!6779547.java!!!	removeProperty(in typeName : String, in property : String) : void
        Vector tp = (Vector)transientProperties.get(typeName);
        if (tp == null) {
            tp = new Vector();
            transientProperties.put(typeName, tp);
        }
        tp.add(property);
