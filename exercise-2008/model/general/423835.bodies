class PropertyTransferable
!!!2523163.java!!!	PropertyTransferable(inout p : PropertyDescriptor, inout c : JComponent)
	    property = p;
	    component = c;
!!!2523291.java!!!	getTransferDataFlavors() : DataFlavor
	    DataFlavor[] flavors = new DataFlavor[1];
	    Class propertyType = property.getPropertyType();
	    String mimeType = DataFlavor.javaJVMLocalObjectMimeType + ";class=" + propertyType.getName();
	    try {
		flavors[0] = new DataFlavor(mimeType);
	    } catch (ClassNotFoundException cnfe) {
		flavors = new DataFlavor[0];
	    }
	    return flavors;
!!!2523419.java!!!	isDataFlavorSupported(inout flavor : DataFlavor) : boolean
	    Class propertyType = property.getPropertyType();
	    if ("application".equals(flavor.getPrimaryType()) &&
		"x-java-jvm-local-objectref".equals(flavor.getSubType()) &&
		flavor.getRepresentationClass().isAssignableFrom(propertyType)) {

		return true;
	    }
	    return false;
!!!2523547.java!!!	getTransferData(inout flavor : DataFlavor) : Object
	    if (! isDataFlavorSupported(flavor)) {
		throw new UnsupportedFlavorException(flavor);
	    }
	    Method reader = property.getReadMethod();
	    Object value = null;
	    try {
		value = MethodUtil.invoke(reader, component, null);
	    } catch (Exception ex) {
		throw new IOException("Property read failed: " + property.getName());
	    }
	    return value;
