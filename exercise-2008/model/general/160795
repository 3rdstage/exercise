format 66
"login" // src::javax::security::auth::login
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/security/auth/login"
  java_package "javax.security.auth.login"
  classview 157979 "login"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 525083 "LoginException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the basic login exception.

@version 1.16, 12/19/03
@see javax.security.auth.login.LoginContext"
      classrelation 2214939 // <generalisation>
	relation 2214939 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2214939 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 3137819 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4679091624035232488L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8673819 "LoginException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LoginException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8673947 "LoginException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a LoginException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end

    class 525595 "LoginContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> The <code>LoginContext</code> class describes the basic methods used
to authenticate Subjects and provides a way to develop an
application independent of the underlying authentication technology.
A <code>Configuration</code> specifies the authentication technology, or
<code>LoginModule</code>, to be used with a particular application.
Different LoginModules can be plugged in under an application
without requiring any modifications to the application itself.

<p> In addition to supporting <i>pluggable</i> authentication, this class
also supports the notion of <i>stacked</i> authentication.
Applications may be configured to use more than one
LoginModule.  For example, one could
configure both a Kerberos LoginModule and a smart card
LoginModule under an application.

<p> A typical caller instantiates a LoginContext with
a <i>name</i> and a <code>CallbackHandler</code>.
LoginContext uses the <i>name</i> as the index into a
Configuration to determine which LoginModules should be used,
and which ones must succeed in order for the overall authentication to
succeed.  The <code>CallbackHandler</code> is passed to the underlying
LoginModules so they may communicate and interact with users
(prompting for a username and password via a graphical user interface,
for example).

<p> Once the caller has instantiated a LoginContext,
it invokes the <code>login</code> method to authenticate
a <code>Subject</code>.  The <code>login</code> method invokes
the configured modules to perform their respective types of authentication
(username/password, smart card pin verification, etc.).
Note that the LoginModules will not attempt authentication retries nor
introduce delays if the authentication fails.
Such tasks belong to the LoginContext caller.

<p> If the <code>login</code> method returns without
throwing an exception, then the overall authentication succeeded.
The caller can then retrieve
the newly authenticated Subject by invoking the
<code>getSubject</code> method.  Principals and Credentials associated
with the Subject may be retrieved by invoking the Subject's
respective <code>getPrincipals</code>, <code>getPublicCredentials</code>,
and <code>getPrivateCredentials</code> methods.

<p> To logout the Subject, the caller calls
the <code>logout</code> method.  As with the <code>login</code>
method, this <code>logout</code> method invokes the <code>logout</code>
method for the configured modules.

<p> A LoginContext should not be used to authenticate
more than one Subject.  A separate LoginContext
should be used to authenticate each different Subject.

<p> The following documentation applies to all LoginContext constructors:
<ol>

<li> <code>Subject</code>
<ul>
<li> If the constructor has a Subject
input parameter, the LoginContext uses the caller-specified
Subject object.
<p>
<li> If the caller specifies a <code>null</code> Subject
and a <code>null</code> value is permitted,
the LoginContext instantiates a new Subject.
<p>
<li> If the constructor does <b>not</b> have a Subject
input parameter, the LoginContext instantiates a new Subject.
<p>
</ul>

<li> <code>Configuration</code> 
<ul> 
<li> If the constructor has a Configuration 
input parameter and the caller specifies a non-null Configuration, 
the LoginContext uses the caller-specified Configuration.
<p>
If the constructor does <b>not</b> have a Configuration
input parameter, or if the caller specifies a <code>null</code>
Configuration object, the constructor uses the following call to
get the installed Configuration:
<pre>
     config = Configuration.getConfiguration();
</pre>
For both cases,
the <i>name</i> argument given to the constructor is passed to the
<code>Configuration.getAppConfigurationEntry</code> method.
If the Configuration has no entries for the specified <i>name</i>,
then the <code>LoginContext</code> calls
<code>getAppConfigurationEntry</code> with the name, \"<i>other</i>\"
(the default entry name).  If there is no entry for \"<i>other</i>\",
then a <code>LoginException</code> is thrown.
<p>
<li> When LoginContext uses the installed Configuration, the caller
requires the createLoginContext.<em>name</em> and possibly
createLoginContext.other AuthPermissions. Furthermore, the
LoginContext will invoke configured modules from within an
<code>AccessController.doPrivileged</code> call so that modules that
perform security-sensitive tasks (such as connecting to remote hosts,
and updating the Subject) will require the respective permissions, but
the callers of the LoginContext will not require those permissions.
<p>
<li> When LoginContext uses a caller-specified Configuration, the caller
does not require any createLoginContext AuthPermission.  The LoginContext
saves the <code>AccessControlContext</code> for the caller,
and invokes the configured modules from within an
<tt>AccessController.doPrivileged</tt> call constrained by that context.
This means the caller context (stored when the LoginContext was created)
must have sufficient permissions to perform any security-sensitive tasks
that the modules may perform.
<p>
</ul>

<li> <code>CallbackHandler</code>
<ul>
<li> If the constructor has a CallbackHandler
input parameter, the LoginContext uses the caller-specified
CallbackHandler object.
<p>
<li> If the constructor does <b>not</b> have a CallbackHandler
input parameter, or if the caller specifies a <code>null</code>
CallbackHandler object (and a <code>null</code> value is permitted),
the LoginContext queries the
<i>auth.login.defaultCallbackHandler</i> security property
for the fully qualified class name of a default handler implementation.
If the security property is not set,
then the underlying modules will not have a
CallbackHandler for use in communicating
with users.  The caller thus assumes that the configured
modules have alternative means for authenticating the user.

<p>
<li> When the LoginContext uses the installed Configuration (instead of
a caller-specified Configuration, see above),
then this LoginContext must wrap any
caller-specified or default CallbackHandler implementation
in a new CallbackHandler implementation
whose <code>handle</code> method implementation invokes the
specified CallbackHandler's <code>handle</code> method in a
<code>java.security.AccessController.doPrivileged</code> call
constrained by the caller's current <code>AccessControlContext</code>.
</ul>
</ol>

<p> Note that Security Properties
(such as <code>auth.login.defaultCallbackHandler</code>)
can be set programmatically via the
<code>java.security.Security</code> class,
or statically in the Java security properties file located in the
file named &lt;JAVA_HOME&gt;/lib/security/java.security,
where &lt;JAVA_HOME&gt; refers to the directory where the JDK
was installed.

@version 1.98, 06/28/04
@see java.security.Security
@see javax.security.auth.AuthPermission
@see javax.security.auth.Subject
@see javax.security.auth.callback.CallbackHandler
@see javax.security.auth.login.Configuration
@see javax.security.auth.spi.LoginModule"
      attribute 3139227 "INIT_METHOD"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"initialize\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139355 "LOGIN_METHOD"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"login\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139483 "COMMIT_METHOD"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"commit\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139611 "ABORT_METHOD"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"abort\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139739 "LOGOUT_METHOD"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"logout\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139867 "OTHER"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"other\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3139995 "DEFAULT_HANDLER"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
				\"auth.login.defaultCallbackHandler\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2216859 // subject (<unidirectional association>)
	relation 2216859 --->
	  a role_name "subject" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2216859 // subject (<unidirectional association>)
	  b parent class_ref 520987 // Subject
      end

      attribute 3140123 "subjectProvided"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3140251 "loginSucceeded"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2216987 // callbackHandler (<unidirectional association>)
	relation 2216987 --->
	  a role_name "callbackHandler" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2216987 // callbackHandler (<unidirectional association>)
	  b parent class_ref 524955 // CallbackHandler
      end

      classrelation 2217115 // state (<unidirectional association>)
	relation 2217115 --->
	  a role_name "state" init_value "=  new HashMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2217115 // state (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2217243 // config (<unidirectional association>)
	relation 2217243 --->
	  a role_name "config" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2217243 // config (<unidirectional association>)
	  b parent class_ref 526235 // Configuration
      end

      attribute 3140379 "configProvided"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2217371 // creatorAcc (<unidirectional association>)
	relation 2217371 --->
	  a role_name "creatorAcc" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2217371 // creatorAcc (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end

      class 1084699 "ModuleInfo"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2218523 // entry (<unidirectional association>)
	  relation 2218523 --->
	    a role_name "entry" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2218523 // entry (<unidirectional association>)
	    b parent class_ref 526363 // AppConfigurationEntry
	end

	attribute 3140891 "module"
	  package explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 8679067 "ModuleInfo"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "newEntry" type class_ref 526363 // AppConfigurationEntry
	    param inout name "newModule" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2217499 // moduleStack (<unidirectional association>)
	relation 2217499 --->
	  a role_name "moduleStack" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2217499 // moduleStack (<unidirectional association>)
	  b parent class_ref 1084699 // ModuleInfo
      end

      classrelation 2217627 // contextClassLoader (<unidirectional association>)
	relation 2217627 --->
	  a role_name "contextClassLoader" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2217627 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      classrelation 2217755 // PARAMS (<unidirectional association>)
	relation 2217755 --->
	  a role_name "PARAMS" multiplicity "[]" init_value "=  { }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2217755 // PARAMS (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 3140507 "moduleIndex"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " state saved in the event a user-specified asynchronous exception
 was specified and thrown"
      end

      classrelation 2217883 // firstError (<unidirectional association>)
	relation 2217883 --->
	  a role_name "firstError" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2217883 // firstError (<unidirectional association>)
	  b parent class_ref 525083 // LoginException
      end

      classrelation 2218011 // firstRequiredError (<unidirectional association>)
	relation 2218011 --->
	  a role_name "firstRequiredError" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2218011 // firstRequiredError (<unidirectional association>)
	  b parent class_ref 525083 // LoginException
      end

      attribute 3140635 "success"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3140763 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "= 
	sun.security.util.Debug.getInstance(\"logincontext\", \"\\t[LoginContext]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8676891 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8677019 "loadDefaultCallbackHandler"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8677147 "LoginContext"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new <code>LoginContext</code> object with a name.

@param name the name used as the index into the
		<code>Configuration</code>.

@exception LoginException if the caller-specified <code>name</code>
		does not appear in the <code>Configuration</code>
		and there is no <code>Configuration</code> entry
		for \"<i>other</i>\", or if the
		<i>auth.login.defaultCallbackHandler</i>
		security property was set, but the implementation
		class could not be loaded.
		<p>
@exception SecurityException if a SecurityManager is set and
		the caller does not have
		AuthPermission(\"createLoginContext.<i>name</i>\"),
		or if a configuration entry for <i>name</i> does not exist and
		the caller does not additionally have
		AuthPermission(\"createLoginContext.other\")"
      end

      operation 8677275 "LoginContext"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new <code>LoginContext</code> object with a name
and a <code>Subject</code> object.

<p>

@param name the name used as the index into the
		<code>Configuration</code>. <p>

@param subject the <code>Subject</code> to authenticate.

@exception LoginException if the caller-specified <code>name</code>
		does not appear in the <code>Configuration</code>
         and there is no <code>Configuration</code> entry
         for \"<i>other</i>\", if the caller-specified <code>subject</code>
		is <code>null</code>, or if the
		<i>auth.login.defaultCallbackHandler</i>
		security property was set, but the implementation
		class could not be loaded.
		<p>
@exception SecurityException if a SecurityManager is set and
		the caller does not have
		AuthPermission(\"createLoginContext.<i>name</i>\"),
		or if a configuration entry for <i>name</i> does not exist and
		the caller does not additionally have
		AuthPermission(\"createLoginContext.other\")"
      end

      operation 8677403 "LoginContext"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "callbackHandler" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new <code>LoginContext</code> object with a name
and a <code>CallbackHandler</code> object.

<p>

@param name the name used as the index into the
		<code>Configuration</code>. <p>

@param callbackHandler the <code>CallbackHandler</code> object used by
		LoginModules to communicate with the user.

@exception LoginException if the caller-specified <code>name</code>
         does not appear in the <code>Configuration</code>
         and there is no <code>Configuration</code> entry
         for \"<i>other</i>\", or if the caller-specified
		<code>callbackHandler</code> is <code>null</code>.
		<p>
@exception SecurityException if a SecurityManager is set and
		the caller does not have
		AuthPermission(\"createLoginContext.<i>name</i>\"),
		or if a configuration entry for <i>name</i> does not exist and
		the caller does not additionally have
		AuthPermission(\"createLoginContext.other\")"
      end

      operation 8677531 "LoginContext"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	  param inout name "callbackHandler" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new <code>LoginContext</code> object with a name,
a <code>Subject</code> to be authenticated, and a
<code>CallbackHandler</code> object.

<p>

@param name the name used as the index into the
		<code>Configuration</code>. <p>

@param subject the <code>Subject</code> to authenticate. <p>

@param callbackHandler the <code>CallbackHandler</code> object used by
		LoginModules to communicate with the user.

@exception LoginException if the caller-specified <code>name</code>
         does not appear in the <code>Configuration</code>
         and there is no <code>Configuration</code> entry
         for \"<i>other</i>\", or if the caller-specified
		<code>subject</code> is <code>null</code>,
		or if the caller-specified
		<code>callbackHandler</code> is <code>null</code>.
		<p>
@exception SecurityException if a SecurityManager is set and
		the caller does not have
		AuthPermission(\"createLoginContext.<i>name</i>\"),
		or if a configuration entry for <i>name</i> does not exist and
		the caller does not additionally have
		AuthPermission(\"createLoginContext.other\")"
      end

      operation 8677659 "LoginContext"
	public explicit_return_type ""
	nparams 4
	  param in name "name" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	  param inout name "callbackHandler" type class_ref 524955 // CallbackHandler
	  param inout name "config" type class_ref 526235 // Configuration
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new <code>LoginContext</code> object with a name,
a <code>Subject</code> to be authenticated,
a <code>CallbackHandler</code> object, and a login
<code>Configuration</code>.

<p>

@param name the name used as the index into the caller-specified
         <code>Configuration</code>. <p>

@param subject the <code>Subject</code> to authenticate,
         or <code>null</code>. <p>

@param callbackHandler the <code>CallbackHandler</code> object used by
         LoginModules to communicate with the user, or <code>null</code>.
		<p>

@param config the <code>Configuration</code> that lists the
         login modules to be called to perform the authentication,
         or <code>null</code>.

@exception LoginException if the caller-specified <code>name</code>
         does not appear in the <code>Configuration</code>
         and there is no <code>Configuration</code> entry
         for \"<i>other</i>\".
		<p>
@exception SecurityException if a SecurityManager is set,
		<i>config</i> is <code>null</code>,
		and either the caller does not have
		AuthPermission(\"createLoginContext.<i>name</i>\"),
		or if a configuration entry for <i>name</i> does not exist and
		the caller does not additionally have
		AuthPermission(\"createLoginContext.other\")

@since 1.5"
      end

      operation 8677787 "login"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the authentication.

<p> This method invokes the <code>login</code> method for each
LoginModule configured for the <i>name</i> specified to the
<code>LoginContext</code> constructor, as determined by the login
<code>Configuration</code>.  Each <code>LoginModule</code>
then performs its respective type of authentication
(username/password, smart card pin verification, etc.).

<p> This method completes a 2-phase authentication process by
calling each configured LoginModule's <code>commit</code> method
if the overall authentication succeeded (the relevant REQUIRED,
REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded),
or by calling each configured LoginModule's <code>abort</code> method
if the overall authentication failed.  If authentication succeeded,
each successful LoginModule's <code>commit</code> method associates
the relevant Principals and Credentials with the <code>Subject</code>.
If authentication failed, each LoginModule's <code>abort</code> method
removes/destroys any previously stored state.

<p> If the <code>commit</code> phase of the authentication process
fails, then the overall authentication fails and this method
invokes the <code>abort</code> method for each configured
<code>LoginModule</code>.

<p> If the <code>abort</code> phase
fails for any reason, then this method propagates the
original exception thrown either during the <code>login</code> phase
or the <code>commit</code> phase.  In either case, the overall
authentication fails.

<p> In the case where multiple LoginModules fail,
this method propagates the exception raised by the first
<code>LoginModule</code> which failed.

<p> Note that if this method enters the <code>abort</code> phase
(either the <code>login</code> or <code>commit</code> phase failed),
this method invokes all LoginModules configured for the
application regardless of their respective <code>Configuration</code>
flag parameters.  Essentially this means that <code>Requisite</code>
and <code>Sufficient</code> semantics are ignored during the
<code>abort</code> phase.  This guarantees that proper cleanup
and state restoration can take place.

<p>

@exception LoginException if the authentication fails."
      end

      operation 8677915 "logout"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logout the <code>Subject</code>.

<p> This method invokes the <code>logout</code> method for each
<code>LoginModule</code> configured for this <code>LoginContext</code>.
Each <code>LoginModule</code> performs its respective logout procedure
which may include removing/destroying
<code>Principal</code> and <code>Credential</code> information
from the <code>Subject</code> and state cleanup.

<p> Note that this method invokes all LoginModules configured for the
application regardless of their respective
<code>Configuration</code> flag parameters.  Essentially this means
that <code>Requisite</code> and <code>Sufficient</code> semantics are
ignored for this method.  This guarantees that proper cleanup
and state restoration can take place.

<p>

@exception LoginException if the logout fails."
      end

      operation 8678043 "getSubject"
	public return_type class_ref 520987 // Subject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the authenticated Subject.

<p>

@return the authenticated Subject.  If the caller specified a
		Subject to this LoginContext's constructor,
		this method returns the caller-specified Subject.
		If a Subject was not specified and authentication succeeds,
		this method returns the Subject instantiated and used for
		authentication by this LoginContext.
		If a Subject was not specified, and authentication fails or
		has not been attempted, this method returns null."
      end

      operation 8678171 "clearState"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8678299 "throwException"
	private explicit_return_type "void"
	nparams 2
	  param inout name "originalError" type class_ref 525083 // LoginException
	  param inout name "le" type class_ref 525083 // LoginException
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8678427 "invokePriv"
	private explicit_return_type "void"
	nparams 1
	  param in name "methodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the login, commit, and logout methods
from a LoginModule inside a doPrivileged block.

This version is called if the caller did not instantiate
the LoginContext with a Configuration object."
      end

      operation 8678555 "invokeCreatorPriv"
	private explicit_return_type "void"
	nparams 1
	  param in name "methodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invokes the login, commit, and logout methods
from a LoginModule inside a doPrivileged block restricted
by creatorAcc

This version is called if the caller instantiated
the LoginContext with a Configuration object."
      end

      operation 8678683 "invoke"
	private explicit_return_type "void"
	nparams 1
	  param in name "methodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1084827 "SecureCallbackHandler"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2218139 // <realization>
	  relation 2218139 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2218139 // <realization>
	    b parent class_ref 524955 // CallbackHandler
	end

	classrelation 2218267 // acc (<unidirectional association>)
	  relation 2218267 --->
	    a role_name "acc" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2218267 // acc (<unidirectional association>)
	    b parent class_ref 163739 // AccessControlContext
	end

	classrelation 2218395 // ch (<unidirectional association>)
	  relation 2218395 --->
	    a role_name "ch" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2218395 // ch (<unidirectional association>)
	    b parent class_ref 524955 // CallbackHandler
	end

	operation 8678811 "SecureCallbackHandler"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "acc" type class_ref 163739 // AccessControlContext
	    param inout name "ch" type class_ref 524955 // CallbackHandler
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8678939 "handle"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "callbacks" type class_ref 525851 // Callback
	  nexceptions 2
	    exception class_ref 179355 // IOException
	    exception class_ref 525979 // UnsupportedCallbackException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 526235 "Configuration"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This is an abstract class for representing the configuration of
LoginModules under an application.  The <code>Configuration</code> specifies
which LoginModules should be used for a particular application, and in what
order the LoginModules should be invoked.
This abstract class needs to be subclassed to provide an implementation
which reads and loads the actual <code>Configuration</code>.

<p> A login configuration contains the following information.
Note that this example only represents the default syntax for the
<code>Configuration</code>.  Subclass implementations of this class
may implement alternative syntaxes and may retrieve the
<code>Configuration</code> from any source such as files, databases,
or servers.

<pre>
     Name {
	      ModuleClass  Flag    ModuleOptions;
	      ModuleClass  Flag    ModuleOptions;
	      ModuleClass  Flag    ModuleOptions;
     };
     Name {
	      ModuleClass  Flag    ModuleOptions;
	      ModuleClass  Flag    ModuleOptions;
     };
     other {
	      ModuleClass  Flag    ModuleOptions;
	      ModuleClass  Flag    ModuleOptions;
     };
</pre>

<p> Each entry in the <code>Configuration</code> is indexed via an
application name, <i>Name</i>, and contains a list of
LoginModules configured for that application.  Each <code>LoginModule</code>
is specified via its fully qualified class name.
Authentication proceeds down the module list in the exact order specified.
If an application does not have specific entry,
it defaults to the specific entry for \"<i>other</i>\".

<p> The <i>Flag</i> value controls the overall behavior as authentication
proceeds down the stack.  The following represents a description of the
valid values for <i>Flag</i> and their respective semantics:

<pre>
     1) Required     - The <code>LoginModule</code> is required to succeed.
			If it succeeds or fails, authentication still continues
			to proceed down the <code>LoginModule</code> list.

     2) Requisite    - The <code>LoginModule</code> is required to succeed.
			If it succeeds, authentication continues down the
			<code>LoginModule</code> list.  If it fails,
			control immediately returns to the application
			(authentication does not proceed down the
			<code>LoginModule</code> list).

     3) Sufficient   - The <code>LoginModule</code> is not required to
			succeed.  If it does succeed, control immediately
			returns to the application (authentication does not
			proceed down the <code>LoginModule</code> list).
			If it fails, authentication continues down the
			<code>LoginModule</code> list.

     4) Optional     - The <code>LoginModule</code> is not required to
			succeed.  If it succeeds or fails,
			authentication still continues to proceed down the
			<code>LoginModule</code> list.
</pre>

<p> The overall authentication succeeds only if all <i>Required</i> and
<i>Requisite</i> LoginModules succeed.  If a <i>Sufficient</i>
<code>LoginModule</code> is configured and succeeds,
then only the <i>Required</i> and <i>Requisite</i> LoginModules prior to 
that <i>Sufficient</i> <code>LoginModule</code> need to have succeeded for
the overall authentication to succeed. If no <i>Required</i> or
<i>Requisite</i> LoginModules are configured for an application,
then at least one <i>Sufficient</i> or <i>Optional</i>
<code>LoginModule</code> must succeed.

<p> <i>ModuleOptions</i> is a space separated list of
<code>LoginModule</code>-specific values which are passed directly to
the underlying LoginModules.  Options are defined by the
<code>LoginModule</code> itself, and control the behavior within it.
For example, a <code>LoginModule</code> may define options to support
debugging/testing capabilities.  The correct way to specify options in the
<code>Configuration</code> is by using the following key-value pairing:
<i>debug=\"true\"</i>.  The key and value should be separated by an
'equals' symbol, and the value should be surrounded by double quotes.
If a String in the form, ${system.property}, occurs in the value,
it will be expanded to the value of the system property.
Note that there is no limit to the number of
options a <code>LoginModule</code> may define.

<p> The following represents an example <code>Configuration</code> entry
based on the syntax above:

<pre>
Login {
  com.sun.security.auth.module.UnixLoginModule required;
  com.sun.security.auth.module.Krb5LoginModule optional
                  useTicketCache=\"true\"
                  ticketCache=\"${user.home}${/}tickets\";
};
</pre>

<p> This <code>Configuration</code> specifies that an application named,
\"Login\", requires users to first authenticate to the
<i>com.sun.security.auth.module.UnixLoginModule</i>, which is
required to succeed.  Even if the <i>UnixLoginModule</i>
authentication fails, the
<i>com.sun.security.auth.module.Krb5LoginModule</i>
still gets invoked.  This helps hide the source of failure.
Since the <i>Krb5LoginModule</i> is <i>Optional</i>, the overall
authentication succeeds only if the <i>UnixLoginModule</i>
(<i>Required</i>) succeeds.

<p> Also note that the LoginModule-specific options,
<i>useTicketCache=\"true\"</i> and
<i>ticketCache=${user.home}${/}tickets\"</i>,
are passed to the <i>Krb5LoginModule</i>.
These options instruct the <i>Krb5LoginModule</i> to
use the ticket cache at the specified location.
The system properties, <i>user.home</i> and <i>/</i>
(file.separator), are expanded to their respective values.

<p> The default Configuration implementation can be changed by setting the
value of the \"login.configuration.provider\" security property (in the Java
security properties file) to the fully qualified name of
the desired Configuration implementation class.
The Java security properties file is located in the file named
&lt;JAVA_HOME&gt;/lib/security/java.security, where &lt;JAVA_HOME&gt;
refers to the directory where the JDK was installed.

@version 1.57, 12/19/03
@see javax.security.auth.login.LoginContext"
      classrelation 888475 // configuration (<unidirectional association>)
	relation 888475 --->
	  a role_name "configuration" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 888475 // configuration (<unidirectional association>)
	  b parent class_ref 526235 // Configuration
      end

      classrelation 888603 // contextClassLoader (<unidirectional association>)
	relation 888603 --->
	  a role_name "contextClassLoader" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 888603 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      extra_member 143387 "initialization"
	
	cpp "" ""
	java "  static {
	contextClassLoader =
		(ClassLoader)java.security.AccessController.doPrivileged
		(new java.security.PrivilegedAction() {
		public Object run() {
		    return Thread.currentThread().getContextClassLoader();	
		}
	});
    }"
	php ""
	python ""
	idl ""
      end

      operation 3246747 "Configuration"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)"
      end

      operation 3246875 "getConfiguration"
	class_operation public return_type class_ref 526235 // Configuration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the Login Configuration.

<p>

@return the login Configuration.  If a Configuration object was set
		via the <code>Configuration.setConfiguration</code> method,
		then that object is returned.  Otherwise, a default
		Configuration object is returned.

@exception SecurityException if the caller does not have permission
				to retrieve the Configuration.

@see #setConfiguration"
      end

      operation 3247003 "setConfiguration"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "configuration" type class_ref 526235 // Configuration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the Login <code>Configuration</code>.

<p>

@param configuration the new <code>Configuration</code>

@exception SecurityException if the current thread does not have
			Permission to set the <code>Configuration</code>.

@see #getConfiguration"
      end

      operation 3247131 "getAppConfigurationEntry"
	abstract public return_type class_ref 526363 // AppConfigurationEntry
	nparams 1
	  param in name "name" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the AppConfigurationEntries for the specified <i>name</i>
from this Configuration.

<p>

@param name the name used to index the Configuration.

@return an array of AppConfigurationEntries for the specified <i>name</i>
		from this Configuration, or null if there are no entries
		for the specified <i>name</i>"
      end

      operation 3247259 "refresh"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refresh and reload the Configuration.

<p> This method causes this Configuration object to refresh/reload its
contents in an implementation-dependent manner.
For example, if this Configuration object stores its entries in a file,
calling <code>refresh</code> may cause the file to be re-read.

<p>

@exception SecurityException if the caller does not have permission
				to refresh its Configuration."
      end
    end

    class 526363 "AppConfigurationEntry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a single <code>LoginModule</code> entry
configured for the application specified in the
<code>getAppConfigurationEntry(String appName)</code>
method in the <code>Configuration</code> class.  Each respective
<code>AppConfigurationEntry</code> contains a <code>LoginModule</code> name,
a control flag (specifying whether this <code>LoginModule</code> is
REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL), and LoginModule-specific
options.  Please refer to the <code>Configuration</code> class for
more information on the different control flags and their semantics.

@version 1.34, 05/05/04
@see javax.security.auth.login.Configuration"
      attribute 3138459 "loginModuleName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1084059 "LoginModuleControlFlag"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 3138587 "controlFlag"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 2215835 // REQUIRED (<unidirectional association>)
	  relation 2215835 --->
	    a role_name "REQUIRED" init_value "= 
				new LoginModuleControlFlag(\"required\")" class_relation const_relation public
	      comment "
Required <code>LoginModule</code>.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2215835 // REQUIRED (<unidirectional association>)
	    b parent class_ref 1084059 // LoginModuleControlFlag
	end

	classrelation 2215963 // REQUISITE (<unidirectional association>)
	  relation 2215963 --->
	    a role_name "REQUISITE" init_value "= 
				new LoginModuleControlFlag(\"requisite\")" class_relation const_relation public
	      comment "
Requisite <code>LoginModule</code>.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2215963 // REQUISITE (<unidirectional association>)
	    b parent class_ref 1084059 // LoginModuleControlFlag
	end

	classrelation 2216091 // SUFFICIENT (<unidirectional association>)
	  relation 2216091 --->
	    a role_name "SUFFICIENT" init_value "= 
				new LoginModuleControlFlag(\"sufficient\")" class_relation const_relation public
	      comment "
Sufficient <code>LoginModule</code>.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2216091 // SUFFICIENT (<unidirectional association>)
	    b parent class_ref 1084059 // LoginModuleControlFlag
	end

	classrelation 2216219 // OPTIONAL (<unidirectional association>)
	  relation 2216219 --->
	    a role_name "OPTIONAL" init_value "= 
				new LoginModuleControlFlag(\"optional\")" class_relation const_relation public
	      comment "
Optional <code>LoginModule</code>.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2216219 // OPTIONAL (<unidirectional association>)
	    b parent class_ref 1084059 // LoginModuleControlFlag
	end

	operation 8675611 "LoginModuleControlFlag"
	  private explicit_return_type ""
	  nparams 1
	    param in name "controlFlag" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8675739 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a String representation of this controlFlag.

@return a String representation of this controlFlag."
	end
      end

      classrelation 2215579 // controlFlag (<unidirectional association>)
	relation 2215579 --->
	  a role_name "controlFlag" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2215579 // controlFlag (<unidirectional association>)
	  b parent class_ref 1084059 // LoginModuleControlFlag
      end

      classrelation 2215707 // options (<unidirectional association>)
	relation 2215707 --->
	  a role_name "options" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2215707 // options (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8675099 "AppConfigurationEntry"
	public explicit_return_type ""
	nparams 3
	  param in name "loginModuleName" explicit_type "String"
	  param inout name "controlFlag" type class_ref 1084059 // LoginModuleControlFlag
	  param inout name "options" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor for this class.

<p> This entry represents a single <code>LoginModule</code>
entry configured for the application specified in the
<code>getAppConfigurationEntry(String appName)</code>
method from the <code>Configuration</code> class.

@param loginModuleName String representing the class name of the
			<code>LoginModule</code> configured for the
			specified application. <p>

@param controlFlag either REQUIRED, REQUISITE, SUFFICIENT,
			or OPTIONAL. <p>

@param options the options configured for this <code>LoginModule</code>.

@exception IllegalArgumentException if <code>loginModuleName</code>
			is null, if <code>LoginModuleName</code>
			has a length of 0, if <code>controlFlag</code>
			is not either REQUIRED, REQUISITE, SUFFICIENT
			or OPTIONAL, or if <code>options</code> is null."
      end

      operation 8675227 "getLoginModuleName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the class name of the configured <code>LoginModule</code>.

@return the class name of the configured <code>LoginModule</code> as
		a String."
      end

      operation 8675355 "getControlFlag"
	public return_type class_ref 1084059 // LoginModuleControlFlag
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the controlFlag
(either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
for this <code>LoginModule</code>.

@return the controlFlag
		(either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL)
		for this <code>LoginModule</code>."
      end

      operation 8675483 "getOptions"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the options configured for this <code>LoginModule</code>.

@return the options configured for this <code>LoginModule</code>
		as an unmodifiable <code>Map</code>."
      end
    end

    class 1083547 "AccountException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A generic account exception.

@version 1.3, 02/03/04
@since 1.5"
      classrelation 2215067 // <generalisation>
	relation 2215067 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2215067 // <generalisation>
	  b parent class_ref 525083 // LoginException
      end

      attribute 3137947 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2112878680072211787L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8674075 "AccountException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8674203 "AccountException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message."
      end
    end

    class 1083675 "AccountExpiredException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a user account has expired.

<p> This exception is thrown by LoginModules when they determine
that an account has expired.  For example, a <code>LoginModule</code>,
after successfully authenticating a user, may determine that the
user's account has expired.  In this case the <code>LoginModule</code>
throws this exception to notify the application.  The application can
then take the appropriate steps to notify the user.

@version 1.18, 12/19/03"
      classrelation 2215195 // <generalisation>
	relation 2215195 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2215195 // <generalisation>
	  b parent class_ref 1083547 // AccountException
      end

      attribute 3138075 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -6064064890162661560L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8674331 "AccountExpiredException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountExpiredException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8674459 "AccountExpiredException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountExpiredException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end

    class 1083803 "AccountLockedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an account was locked.

<p> This exception may be thrown by a LoginModule if it
determines that authentication is being attempted on a
locked account.

@version 1.2, 12/19/03
@since 1.5"
      classrelation 2215323 // <generalisation>
	relation 2215323 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2215323 // <generalisation>
	  b parent class_ref 1083547 // AccountException
      end

      attribute 3138203 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  8280345554014066334L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8674587 "AccountLockedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountLockedException with no detail message.
A detail message is a String that describes this particular exception."
      end

      operation 8674715 "AccountLockedException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountLockedException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message."
      end
    end

    class 1083931 "AccountNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an account was not found.

<p> This exception may be thrown by a LoginModule if it is unable
to locate an account necessary to perform authentication.

@version 1.2, 12/19/03
@since 1.5"
      classrelation 2215451 // <generalisation>
	relation 2215451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2215451 // <generalisation>
	  b parent class_ref 1083547 // AccountException
      end

      attribute 3138331 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1498349563916294614L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8674843 "AccountNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountNotFoundException with no detail message.
A detail message is a String that describes this particular exception."
      end

      operation 8674971 "AccountNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a AccountNotFoundException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message."
      end
    end

    class 1084187 "CredentialException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A generic credential exception.

@version 1.3, 02/03/04
@since 1.5"
      classrelation 2216347 // <generalisation>
	relation 2216347 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2216347 // <generalisation>
	  b parent class_ref 525083 // LoginException
      end

      attribute 3138715 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4772893876810601859L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8675867 "CredentialException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8675995 "CredentialException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialException with the specified detail message.
A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message."
      end
    end

    class 1084315 "CredentialExpiredException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a <code>Credential</code> has expired.

<p> This exception is thrown by LoginModules when they determine
that a <code>Credential</code> has expired.
For example, a <code>LoginModule</code> authenticating a user
in its <code>login</code> method may determine that the user's
password, although entered correctly, has expired.  In this case
the <code>LoginModule</code> throws this exception to notify
the application.  The application can then take the appropriate
steps to assist the user in updating the password.

@version 1.17, 12/19/03"
      classrelation 2216475 // <generalisation>
	relation 2216475 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2216475 // <generalisation>
	  b parent class_ref 1084187 // CredentialException
      end

      attribute 3138843 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5344739593859737937L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8676123 "CredentialExpiredException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialExpiredException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8676251 "CredentialExpiredException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialExpiredException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end

    class 1084443 "CredentialNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a credential was not found.

<p> This exception may be thrown by a LoginModule if it is unable
to locate a credential necessary to perform authentication.

@version 1.2, 12/19/03
@since 1.5"
      classrelation 2216603 // <generalisation>
	relation 2216603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2216603 // <generalisation>
	  b parent class_ref 1084187 // CredentialException
      end

      attribute 3138971 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7779934467214319475L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8676379 "CredentialNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialNotFoundException with no detail message.
A detail message is a String that describes this particular exception."
      end

      operation 8676507 "CredentialNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CredentialNotFoundException with the specified
detail message. A detail message is a String that describes
this particular exception.

<p>

@param msg the detail message."
      end
    end

    class 1084571 "FailedLoginException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that user authentication failed.

<p> This exception is thrown by LoginModules if authentication failed.
For example, a <code>LoginModule</code> throws this exception if
the user entered an incorrect password.

@version 1.15, 12/19/03"
      classrelation 2216731 // <generalisation>
	relation 2216731 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2216731 // <generalisation>
	  b parent class_ref 525083 // LoginException
      end

      attribute 3139099 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  802556922354616286L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8676635 "FailedLoginException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a FailedLoginException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8676763 "FailedLoginException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a FailedLoginException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end
  end

  deploymentview 150299 "login"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 350491 "Configuration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.AuthPermission;
import java.io.*;
import java.util.*;
import java.net.URL;
import java.security.PrivilegedActionException;
${definition}"
      associated_classes
	class_ref 526235 // Configuration
      end
      comment "@(#)Configuration.java	1.57 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832155 "LoginException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 525083 // LoginException
      end
      comment "@(#)LoginException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832283 "AccountException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1083547 // AccountException
      end
      comment "@(#)AccountException.java	1.3 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832411 "AccountExpiredException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1083675 // AccountExpiredException
      end
      comment "@(#)AccountExpiredException.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832539 "AccountLockedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1083803 // AccountLockedException
      end
      comment "@(#)AccountLockedException.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832667 "AccountNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1083931 // AccountNotFoundException
      end
      comment "@(#)AccountNotFoundException.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832795 "AppConfigurationEntry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.Collections;
${definition}"
      associated_classes
	class_ref 526363 // AppConfigurationEntry
      end
      comment "@(#)AppConfigurationEntry.java	1.34 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832923 "CredentialException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1084187 // CredentialException
      end
      comment "@(#)CredentialException.java	1.3 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833051 "CredentialExpiredException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1084315 // CredentialExpiredException
      end
      comment "@(#)CredentialExpiredException.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833179 "CredentialNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1084443 // CredentialNotFoundException
      end
      comment "@(#)CredentialNotFoundException.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833307 "FailedLoginException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1084571 // FailedLoginException
      end
      comment "@(#)FailedLoginException.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833435 "LoginContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import java.util.LinkedList;
import java.util.Map;
import java.util.HashMap;
import java.text.MessageFormat;
import javax.security.auth.Subject;
import javax.security.auth.AuthPermission;
import javax.security.auth.callback.*;
import java.security.AccessController;
import java.security.AccessControlContext;
import sun.security.util.PendingException;
import sun.security.util.ResourcesMgr;
${definition}"
      associated_classes
	class_ref 525595 // LoginContext
      end
      comment "@(#)LoginContext.java	1.98 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
