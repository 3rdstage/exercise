class ListItr
!!!148891.java!!!	ListItr(in index : int)
	    cursor = index;
!!!149019.java!!!	hasPrevious() : boolean
	    return cursor != 0;
!!!149147.java!!!	previous() : E
            checkForComodification();
            try {
                int i = cursor - 1;
                E previous = get(i);
                lastRet = cursor = i;
                return previous;
            } catch(IndexOutOfBoundsException e) {
                checkForComodification();
                throw new NoSuchElementException();
            }
!!!149275.java!!!	nextIndex() : int
	    return cursor;
!!!149403.java!!!	previousIndex() : int
	    return cursor-1;
!!!149531.java!!!	set(inout o : E) : void
	    if (lastRet == -1)
		throw new IllegalStateException();
            checkForComodification();

	    try {
		AbstractList.this.set(lastRet, o);
		expectedModCount = modCount;
	    } catch(IndexOutOfBoundsException e) {
		throw new ConcurrentModificationException();
	    }
!!!149659.java!!!	add(inout o : E) : void
            checkForComodification();

	    try {
		AbstractList.this.add(cursor++, o);
		lastRet = -1;
		expectedModCount = modCount;
	    } catch(IndexOutOfBoundsException e) {
		throw new ConcurrentModificationException();
	    }
