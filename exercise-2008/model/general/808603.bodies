class PrefixResolverDefault
!!!5820827.java!!!	PrefixResolverDefault(inout xpathExpressionContext : Node)
    m_context = xpathExpressionContext;
!!!5820955.java!!!	getNamespaceForPrefix(in prefix : String) : String
    return getNamespaceForPrefix(prefix, m_context);
!!!5821083.java!!!	getNamespaceForPrefix(in prefix : String, inout namespaceContext : Node) : String

    Node parent = namespaceContext;
    String namespace = null;

    if (prefix.equals("xml"))
    {
      namespace = Constants.S_XMLNAMESPACEURI;
    }
    else
    {
      int type;

      while ((null != parent) && (null == namespace)
             && (((type = parent.getNodeType()) == Node.ELEMENT_NODE)
                 || (type == Node.ENTITY_REFERENCE_NODE)))
      {
        if (type == Node.ELEMENT_NODE)
        {
                if (parent.getNodeName().indexOf(prefix+":") == 0) 
                        return parent.getNamespaceURI();                
          NamedNodeMap nnm = parent.getAttributes();

          for (int i = 0; i < nnm.getLength(); i++)
          {
            Node attr = nnm.item(i);
            String aname = attr.getNodeName();
            boolean isPrefix = aname.startsWith("xmlns:");

            if (isPrefix || aname.equals("xmlns"))
            {
              int index = aname.indexOf(':');
              String p = isPrefix ? aname.substring(index + 1) : "";

              if (p.equals(prefix))
              {
                namespace = attr.getNodeValue();

                break;
              }
            }
          }
        }

        parent = parent.getParentNode();
      }
    }

    return namespace;
!!!5821211.java!!!	getBaseIdentifier() : String
    return null;
!!!5821339.java!!!	handlesNullPrefixes() : boolean
		return false;
