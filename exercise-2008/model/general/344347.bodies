class ImageWriterSpi
!!!1925659.java!!!	ImageWriterSpi(in vendorName : String, in version : String, in names : String, in suffixes : String, in MIMETypes : String, in writerClassName : String, inout outputTypes : Class, in readerSpiNames : String, inout supportsStandardStreamMetadataFormat : boolean, in nativeStreamMetadataFormatName : String, in nativeStreamMetadataFormatClassName : String, in extraStreamMetadataFormatNames : String, in extraStreamMetadataFormatClassNames : String, inout supportsStandardImageMetadataFormat : boolean, in nativeImageMetadataFormatName : String, in nativeImageMetadataFormatClassName : String, in extraImageMetadataFormatNames : String, in extraImageMetadataFormatClassNames : String)
        super(vendorName, version,
              names, suffixes, MIMETypes, writerClassName,
              supportsStandardStreamMetadataFormat,
              nativeStreamMetadataFormatName,
              nativeStreamMetadataFormatClassName,
              extraStreamMetadataFormatNames,
              extraStreamMetadataFormatClassNames,
              supportsStandardImageMetadataFormat,
              nativeImageMetadataFormatName,
              nativeImageMetadataFormatClassName,
              extraImageMetadataFormatNames,
              extraImageMetadataFormatClassNames);

        if (outputTypes == null) {
            throw new IllegalArgumentException
                ("outputTypes == null!");
        }
        if (outputTypes.length == 0) {
            throw new IllegalArgumentException
                ("outputTypes.length == 0!");
        }
        this.outputTypes = (Class[])outputTypes.clone();
        // If length == 0, leave it null
        if (readerSpiNames != null && readerSpiNames.length > 0) {
            this.readerSpiNames = (String[])readerSpiNames.clone();
        }
!!!1925787.java!!!	isFormatLossless() : boolean
        return true;
!!!1925915.java!!!	getOutputTypes() : Class
        return (Class[])outputTypes.clone();
!!!1926171.java!!!	canEncodeImage(inout im : RenderedImage) : boolean
        return canEncodeImage(ImageTypeSpecifier.createFromRenderedImage(im));
!!!1926299.java!!!	createWriterInstance() : ImageWriter
        return createWriterInstance(null);
!!!1926555.java!!!	isOwnWriter(inout writer : ImageWriter) : boolean
 
        if (writer == null) {
            throw new IllegalArgumentException("writer == null!");
        }
        String name = writer.getClass().getName();
        return name.equals(pluginClassName);
!!!1926683.java!!!	getImageReaderSpiNames() : String
        return readerSpiNames == null ?
            null : (String[])readerSpiNames.clone();
