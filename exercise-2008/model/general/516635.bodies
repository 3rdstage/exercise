class MBeanNotificationInfo
!!!8240539.java!!!	MBeanNotificationInfo(in notifTypes : String, in name : String, in description : String)
	super(name, description);
	

	/* We do not validate the notifTypes, since the spec just says
	   they are dot-separated, not that they must look like Java
	   classes.  E.g. the spec doesn't forbid "sun.prob.25" as a
	   notifType, though it doesn't explicitly allow it
	   either.  */

	if (notifTypes == null)
	    notifTypes = NO_TYPES;
	this.types = notifTypes;
	this.immutable =
	    MBeanInfo.isImmutableClass(this.getClass(),
				       MBeanNotificationInfo.class);
!!!8240667.java!!!	clone() : Object
	 try {
	     return  super.clone() ;
	 } catch (CloneNotSupportedException e) {
	     // should not happen as this class is cloneable
	     return null;
	 }
!!!8240795.java!!!	getNotifTypes() : String
	if (types.length == 0)
            return NO_TYPES;
        else
            return (String[]) types.clone();
!!!8240923.java!!!	fastGetNotifTypes() : String
	if (immutable)
	    return types;
	else
	    return getNotifTypes();
!!!8241051.java!!!	equals(inout o : Object) : boolean
	if (o == this)
	    return true;
	if (!(o instanceof MBeanNotificationInfo))
	    return false;
	MBeanNotificationInfo p = (MBeanNotificationInfo) o;
	return (p.getName().equals(getName()) &&
		p.getDescription().equals(getDescription()) &&
		Arrays.equals(p.fastGetNotifTypes(), fastGetNotifTypes()));
!!!8241179.java!!!	hashCode() : int
	int hash = getName().hashCode();
	for (int i = 0; i < types.length; i++)
	    hash ^= types[i].hashCode();
	return hash;
