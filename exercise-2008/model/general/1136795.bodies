class SoftBevelBorder
!!!9328027.java!!!	SoftBevelBorder(in bevelType : int)
        super(bevelType);
!!!9328155.java!!!	SoftBevelBorder(in bevelType : int, inout highlight : Color, inout shadow : Color)
        super(bevelType, highlight, shadow);
!!!9328283.java!!!	SoftBevelBorder(in bevelType : int, inout highlightOuterColor : Color, inout highlightInnerColor : Color, inout shadowOuterColor : Color, inout shadowInnerColor : Color)
        super(bevelType, highlightOuterColor, highlightInnerColor, 
              shadowOuterColor, shadowInnerColor);
!!!9328411.java!!!	paintBorder(inout c : Component, inout g : Graphics, in x : int, in y : int, in width : int, in height : int) : void
        Color oldColor = g.getColor();
        g.translate(x, y);

        if (bevelType == RAISED) {
	    g.setColor(getHighlightOuterColor(c));
	    g.drawLine(0, 0, width-2, 0);
	    g.drawLine(0, 0, 0, height-2);
	    g.drawLine(1, 1, 1, 1);
	    
	    g.setColor(getHighlightInnerColor(c));
	    g.drawLine(2, 1, width-2, 1);
	    g.drawLine(1, 2, 1, height-2);
	    g.drawLine(2, 2, 2, 2);
	    g.drawLine(0, height-1, 0, height-2);
	    g.drawLine(width-1, 0, width-1, 0);
	    
	    g.setColor(getShadowOuterColor(c));
	    g.drawLine(2, height-1, width-1, height-1);
	    g.drawLine(width-1, 2, width-1, height-1);
	    
	    g.setColor(getShadowInnerColor(c));
	    g.drawLine(width-2, height-2, width-2, height-2);        


        } else if (bevelType == LOWERED) {
	    g.setColor(getShadowOuterColor(c));
	    g.drawLine(0, 0, width-2, 0);
	    g.drawLine(0, 0, 0, height-2);
	    g.drawLine(1, 1, 1, 1);
	    
	    g.setColor(getShadowInnerColor(c));
	    g.drawLine(2, 1, width-2, 1);
	    g.drawLine(1, 2, 1, height-2);
	    g.drawLine(2, 2, 2, 2);
	    g.drawLine(0, height-1, 0, height-2);
	    g.drawLine(width-1, 0, width-1, 0);
	    
	    g.setColor(getHighlightOuterColor(c));
	    g.drawLine(2, height-1, width-1, height-1);
	    g.drawLine(width-1, 2, width-1, height-1);
	    
	    g.setColor(getHighlightInnerColor(c));
	    g.drawLine(width-2, height-2, width-2, height-2);        
        }
        g.translate(-x, -y);
        g.setColor(oldColor);
!!!9328539.java!!!	getBorderInsets(inout c : Component) : Insets
	return getBorderInsets(c, new Insets(0,0,0,0));
!!!9328667.java!!!	getBorderInsets(inout c : Component, inout insets : Insets) : Insets
        insets.top = insets.left = insets.bottom = insets.right = 3;
	return insets;
!!!9328795.java!!!	isBorderOpaque() : boolean
 return false;
