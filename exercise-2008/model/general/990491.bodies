class Sync
!!!7891611.java!!!	nonfairTryAcquire(in acquires : int) : boolean
 
            final Thread current = Thread.currentThread();
            int c = getState();
            if (c == 0) {
                if (compareAndSetState(0, acquires)) {
                    owner = current;
                    return true;
                }
            }
            else if (current == owner) {
                setState(c+acquires);
                return true;
            }
            return false;
!!!7891739.java!!!	tryRelease(in releases : int) : boolean
            int c = getState() - releases;
            if (Thread.currentThread() != owner)
                throw new IllegalMonitorStateException();
            boolean free = false;
            if (c == 0) {
                free = true;
                owner = null;
            }
            setState(c);
            return free;
!!!7891867.java!!!	isHeldExclusively() : boolean
            return getState() != 0 && owner == Thread.currentThread();
!!!7891995.java!!!	newCondition() : ConditionObject
            return new ConditionObject();
!!!7892123.java!!!	getOwner() : Thread
            int c = getState();
            Thread o = owner;
            return (c == 0)? null : o;
!!!7892251.java!!!	getHoldCount() : int
            int c = getState();
            Thread o = owner;
            return (o == Thread.currentThread())? c : 0;
!!!7892379.java!!!	isLocked() : boolean
            return getState() != 0;
!!!7892507.java!!!	readObject(inout s : ObjectInputStream) : void
            s.defaultReadObject();
            setState(0); // reset to unlocked state
