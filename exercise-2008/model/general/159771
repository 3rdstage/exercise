format 66
"auth" // src::javax::security::auth
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/security/auth"
  java_package "javax.security.auth"
  classview 157083 "auth"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 520987 "Subject"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> A <code>Subject</code> represents a grouping of related information
for a single entity, such as a person.
Such information includes the Subject's identities as well as
its security-related attributes
(passwords and cryptographic keys, for example).

<p> Subjects may potentially have multiple identities.
Each identity is represented as a <code>Principal</code>
within the <code>Subject</code>.  Principals simply bind names to a
<code>Subject</code>.  For example, a <code>Subject</code> that happens
to be a person, Alice, might have two Principals:
one which binds \"Alice Bar\", the name on her driver license,
to the <code>Subject</code>, and another which binds,
\"999-99-9999\", the number on her student identification card,
to the <code>Subject</code>.  Both Principals refer to the same
<code>Subject</code> even though each has a different name.

<p> A <code>Subject</code> may also own security-related attributes,
which are referred to as credentials.
Sensitive credentials that require special protection, such as
private cryptographic keys, are stored within a private credential
<code>Set</code>.  Credentials intended to be shared, such as
public key certificates or Kerberos server tickets are stored
within a public credential <code>Set</code>.  Different permissions
are required to access and modify the different credential Sets.

<p> To retrieve all the Principals associated with a <code>Subject</code>,
invoke the <code>getPrincipals</code> method.  To retrieve
all the public or private credentials belonging to a <code>Subject</code>,
invoke the <code>getPublicCredentials</code> method or
<code>getPrivateCredentials</code> method, respectively.
To modify the returned <code>Set</code> of Principals and credentials,
use the methods defined in the <code>Set</code> class.
For example:
<pre>
	Subject subject;
	Principal principal;
	Object credential;

	// add a Principal and credential to the Subject
	subject.getPrincipals().add(principal);
	subject.getPublicCredentials().add(credential);
</pre>

<p> This <code>Subject</code> class implements <code>Serializable</code>.
While the Principals associated with the <code>Subject</code> are serialized,
the credentials associated with the <code>Subject</code> are not.
Note that the <code>java.security.Principal</code> class
does not implement <code>Serializable</code>.  Therefore all concrete
<code>Principal</code> implementations associated with Subjects
must implement <code>Serializable</code>.

@version 1.123, 05/05/04
@see java.security.Principal
@see java.security.DomainCombiner"
      classrelation 2207131 // <realization>
	relation 2207131 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2207131 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3125787 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8308522755600156056L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2207259 // principals (<unidirectional association>)
	relation 2207259 --->
	  a role_name "principals" package
	    comment "
A <code>Set</code> that provides a view of all of this
Subject's Principals

<p>

@serial Each element in this set is a
		<code>java.security.Principal</code>.
		The set is a <code>Subject.SecureSet</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207259 // principals (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 2207387 // pubCredentials (<unidirectional association>)
	relation 2207387 --->
	  a role_name "pubCredentials" package
	    comment "
Sets that provide a view of all of this
Subject's Credentials

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207387 // pubCredentials (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 2207515 // privCredentials (<unidirectional association>)
	relation 2207515 --->
	  a role_name "privCredentials" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207515 // privCredentials (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      attribute 3125915 "readOnly"
	volatile private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether this Subject is read-only

@serial
"
      end

      attribute 3126043 "PRINCIPAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3126171 "PUB_CREDENTIAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3126299 "PRIV_CREDENTIAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8651035 "Subject"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a <code>Subject</code>
with an empty <code>Set</code> of Principals and empty
Sets of public and private credentials.

<p> The newly constructed Sets check whether this <code>Subject</code>
has been set read-only before permitting subsequent modifications.
The newly created Sets also prevent illegal modifications
by ensuring that callers have sufficient permissions.

<p> To modify the Principals Set, the caller must have
<code>AuthPermission(\"modifyPrincipals\")</code>.
To modify the public credential Set, the caller must have
<code>AuthPermission(\"modifyPublicCredentials\")</code>.
To modify the private credential Set, the caller must have
<code>AuthPermission(\"modifyPrivateCredentials\")</code>."
      end

      operation 8651163 "Subject"
	public explicit_return_type ""
	nparams 4
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "principals" type class_ref 136731 // Set
	  param inout name "pubCredentials" type class_ref 136731 // Set
	  param inout name "privCredentials" type class_ref 136731 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? extends Principal> ${p1}, ${t2}<?> ${p2}, ${t3}<?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a <code>Subject</code> with
Principals and credentials.

<p> The Principals and credentials from the specified Sets
are copied into newly constructed Sets.
These newly created Sets check whether this <code>Subject</code>
has been set read-only before permitting subsequent modifications.
The newly created Sets also prevent illegal modifications
by ensuring that callers have sufficient permissions.

<p> To modify the Principals Set, the caller must have
<code>AuthPermission(\"modifyPrincipals\")</code>.
To modify the public credential Set, the caller must have
<code>AuthPermission(\"modifyPublicCredentials\")</code>.
To modify the private credential Set, the caller must have
<code>AuthPermission(\"modifyPrivateCredentials\")</code>.
<p>

@param readOnly true if the <code>Subject</code> is to be read-only,
		and false otherwise. <p>

@param principals the <code>Set</code> of Principals
		to be associated with this <code>Subject</code>. <p>

@param pubCredentials the <code>Set</code> of public credentials
		to be associated with this <code>Subject</code>. <p>

@param privCredentials the <code>Set</code> of private credentials
		to be associated with this <code>Subject</code>.

@exception NullPointerException if the specified
		<code>principals</code>, <code>pubCredentials</code>,
		or <code>privCredentials</code> are <code>null</code>."
      end

      operation 8651291 "setReadOnly"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set this <code>Subject</code> to be read-only.

<p> Modifications (additions and removals) to this Subject's
<code>Principal</code> <code>Set</code> and
credential Sets will be disallowed.
The <code>destroy</code> operation on this Subject's credentials will
still be permitted.

<p> Subsequent attempts to modify the Subject's <code>Principal</code>
and credential Sets will result in an
<code>IllegalStateException</code> being thrown.
Also, once a <code>Subject</code> is read-only,
it can not be reset to being writable again.

<p>

@exception SecurityException if the caller does not have permission
		to set this <code>Subject</code> to be read-only."
      end

      operation 8651419 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query whether this <code>Subject</code> is read-only.

<p>

@return true if this <code>Subject</code> is read-only, false otherwise."
      end

      operation 8651547 "getSubject"
	class_operation public return_type class_ref 520987 // Subject
	nparams 1
	  param in name "acc" type class_ref 163739 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>Subject</code> associated with the provided
<code>AccessControlContext</code>.

<p> The <code>AccessControlContext</code> may contain many
Subjects (from nested <code>doAs</code> calls).
In this situation, the most recent <code>Subject</code> associated
with the <code>AccessControlContext</code> is returned.

<p>

@param  acc the <code>AccessControlContext</code> from which to retrieve
		the <code>Subject</code>.

@return  the <code>Subject</code> associated with the provided
		<code>AccessControlContext</code>, or <code>null</code>
		if no <code>Subject</code> is associated
		with the provided <code>AccessControlContext</code>.

@exception SecurityException if the caller does not have permission
		to get the <code>Subject</code>. <p>

@exception NullPointerException if the provided
		<code>AccessControlContext</code> is <code>null</code>."
      end

      operation 8651675 "doAs"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param in name "subject" type class_ref 520987 // Subject
	  param in name "action" type class_ref 222363 // PrivilegedAction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform work as a particular <code>Subject</code>.

<p> This method first retrieves the current Thread's
<code>AccessControlContext</code> via
<code>AccessController.getContext</code>,
and then instantiates a new <code>AccessControlContext</code>
using the retrieved context along with a new
<code>SubjectDomainCombiner</code> (constructed using
the provided <code>Subject</code>).
Finally, this method invokes <code>AccessController.doPrivileged</code>,
passing it the provided <code>PrivilegedAction</code>,
as well as the newly constructed <code>AccessControlContext</code>.

<p>

@param subject the <code>Subject</code> that the specified
			<code>action</code> will run as.  This parameter
			may be <code>null</code>. <p>

@param action the code to be run as the specified
			<code>Subject</code>. <p>

@return the <code>Object</code> returned by the PrivilegedAction's
			<code>run</code> method.

@exception NullPointerException if the <code>PrivilegedAction</code>
			is <code>null</code>. <p>

@exception SecurityException if the caller does not have permission
			to invoke this method."
      end

      operation 8651803 "doAs"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param in name "subject" type class_ref 520987 // Subject
	  param in name "action" type class_ref 529051 // PrivilegedExceptionAction
	nexceptions 1
	  exception class_ref 959387 // PrivilegedActionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform work as a particular <code>Subject</code>.

<p> This method first retrieves the current Thread's
<code>AccessControlContext</code> via
<code>AccessController.getContext</code>,
and then instantiates a new <code>AccessControlContext</code>
using the retrieved context along with a new
<code>SubjectDomainCombiner</code> (constructed using
the provided <code>Subject</code>).
Finally, this method invokes <code>AccessController.doPrivileged</code>,
passing it the provided <code>PrivilegedExceptionAction</code>,
as well as the newly constructed <code>AccessControlContext</code>.

<p>

@param subject the <code>Subject</code> that the specified
			<code>action</code> will run as.  This parameter
			may be <code>null</code>. <p>

@param action the code to be run as the specified
			<code>Subject</code>. <p>

@return the <code>Object</code> returned by the
			PrivilegedExceptionAction's <code>run</code> method.

@exception PrivilegedActionException if the
			<code>PrivilegedExceptionAction.run</code>
			method throws a checked exception. <p>

@exception NullPointerException if the specified
			<code>PrivilegedExceptionAction</code> is
			<code>null</code>. <p>

@exception SecurityException if the caller does not have permission
			to invoke this method."
      end

      operation 8651931 "doAsPrivileged"
	class_operation public explicit_return_type "Object"
	nparams 3
	  param in name "subject" type class_ref 520987 // Subject
	  param in name "action" type class_ref 222363 // PrivilegedAction
	  param in name "acc" type class_ref 163739 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform privileged work as a particular <code>Subject</code>.

<p> This method behaves exactly as <code>Subject.doAs</code>,
except that instead of retrieving the current Thread's
<code>AccessControlContext</code>, it uses the provided
<code>AccessControlContext</code>.  If the provided
<code>AccessControlContext</code> is <code>null</code>,
this method instantiates a new <code>AccessControlContext</code>
with an empty collection of ProtectionDomains.

<p>

@param subject the <code>Subject</code> that the specified
			<code>action</code> will run as.  This parameter
			may be <code>null</code>. <p>

@param action the code to be run as the specified
			<code>Subject</code>. <p>

@param acc the <code>AccessControlContext</code> to be tied to the
			specified <i>subject</i> and <i>action</i>. <p>

@return the <code>Object</code> returned by the PrivilegedAction's
			<code>run</code> method.

@exception NullPointerException if the <code>PrivilegedAction</code>
			is <code>null</code>. <p>

@exception SecurityException if the caller does not have permission
			to invoke this method."
      end

      operation 8652059 "doAsPrivileged"
	class_operation public explicit_return_type "Object"
	nparams 3
	  param in name "subject" type class_ref 520987 // Subject
	  param in name "action" type class_ref 529051 // PrivilegedExceptionAction
	  param in name "acc" type class_ref 163739 // AccessControlContext
	nexceptions 1
	  exception class_ref 959387 // PrivilegedActionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform privileged work as a particular <code>Subject</code>.

<p> This method behaves exactly as <code>Subject.doAs</code>,
except that instead of retrieving the current Thread's
<code>AccessControlContext</code>, it uses the provided
<code>AccessControlContext</code>.  If the provided
<code>AccessControlContext</code> is <code>null</code>,
this method instantiates a new <code>AccessControlContext</code>
with an empty collection of ProtectionDomains.

<p>

@param subject the <code>Subject</code> that the specified
			<code>action</code> will run as.  This parameter
			may be <code>null</code>. <p>

@param action the code to be run as the specified
			<code>Subject</code>. <p>

@param acc the <code>AccessControlContext</code> to be tied to the
			specified <i>subject</i> and <i>action</i>. <p>

@return the <code>Object</code> returned by the
			PrivilegedExceptionAction's <code>run</code> method.

@exception PrivilegedActionException if the
			<code>PrivilegedExceptionAction.run</code>
			method throws a checked exception. <p>

@exception NullPointerException if the specified
			<code>PrivilegedExceptionAction</code> is
			<code>null</code>. <p>

@exception SecurityException if the caller does not have permission
			to invoke this method."
      end

      operation 8652187 "createContext"
	class_operation private return_type class_ref 163739 // AccessControlContext
	nparams 2
	  param in name "subject" type class_ref 520987 // Subject
	  param in name "acc" type class_ref 163739 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8652315 "getPrincipals"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Principal> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the <code>Set</code> of Principals associated with this
<code>Subject</code>.  Each <code>Principal</code> represents
an identity for this <code>Subject</code>.

<p> The returned <code>Set</code> is backed by this Subject's
internal <code>Principal</code> <code>Set</code>.  Any modification
to the returned <code>Set</code> affects the internal
<code>Principal</code> <code>Set</code> as well.

<p>

@return	The <code>Set</code> of Principals associated with this
		<code>Subject</code>."
      end

      operation 8652443 "getPrincipals"
	public return_type class_ref 136731 // Set
	nparams 1
	  param inout name "c" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Principal> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <code>Set</code> of Principals associated with this
<code>Subject</code> that are instances or subclasses of the specified
<code>Class</code>.

<p> The returned <code>Set</code> is not backed by this Subject's
internal <code>Principal</code> <code>Set</code>.  A new
<code>Set</code> is created and returned for each method invocation.
Modifications to the returned <code>Set</code>
will not affect the internal <code>Principal</code> <code>Set</code>.

<p>

@param c the returned <code>Set</code> of Principals will all be
		instances of this class.

@return a <code>Set</code> of Principals that are instances of the
		specified <code>Class</code>.

@exception NullPointerException if the specified <code>Class</code> 
			is <code>null</code>."
      end

      operation 8652571 "getPublicCredentials"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the <code>Set</code> of public credentials held by this
<code>Subject</code>.

<p> The returned <code>Set</code> is backed by this Subject's
internal public Credential <code>Set</code>.  Any modification
to the returned <code>Set</code> affects the internal public
Credential <code>Set</code> as well.

<p>

@return	A <code>Set</code> of public credentials held by this
		<code>Subject</code>."
      end

      operation 8652699 "getPrivateCredentials"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the <code>Set</code> of private credentials held by this
<code>Subject</code>.

<p> The returned <code>Set</code> is backed by this Subject's
internal private Credential <code>Set</code>.  Any modification
to the returned <code>Set</code> affects the internal private
Credential <code>Set</code> as well.

<p> A caller requires permissions to access the Credentials
in the returned <code>Set</code>, or to modify the
<code>Set</code> itself.  A <code>SecurityException</code>
is thrown if the caller does not have the proper permissions.

<p> While iterating through the <code>Set</code>,
a <code>SecurityException</code> is thrown
if the caller does not have permission to access a
particular Credential.  The <code>Iterator</code>
is nevertheless advanced to next element in the <code>Set</code>.

<p>

@return	A <code>Set</code> of private credentials held by this
		<code>Subject</code>."
      end

      operation 8652827 "getPublicCredentials"
	public return_type class_ref 136731 // Set
	nparams 1
	  param inout name "c" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <code>Set</code> of public credentials associated with this
<code>Subject</code> that are instances or subclasses of the specified
<code>Class</code>.

<p> The returned <code>Set</code> is not backed by this Subject's
internal public Credential <code>Set</code>.  A new
<code>Set</code> is created and returned for each method invocation.
Modifications to the returned <code>Set</code>
will not affect the internal public Credential <code>Set</code>.

<p>

@param c the returned <code>Set</code> of public credentials will all be
		instances of this class.

@return a <code>Set</code> of public credentials that are instances
		of the	specified <code>Class</code>.

@exception NullPointerException if the specified <code>Class</code>
		is <code>null</code>."
      end

      operation 8652955 "getPrivateCredentials"
	public return_type class_ref 136731 // Set
	nparams 1
	  param inout name "c" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <code>Set</code> of private credentials associated with this
<code>Subject</code> that are instances or subclasses of the specified
<code>Class</code>. 

<p> The caller must have permission to access all of the
requested Credentials, or a <code>SecurityException</code>
will be thrown.

<p> The returned <code>Set</code> is not backed by this Subject's
internal private Credential <code>Set</code>.  A new
<code>Set</code> is created and returned for each method invocation.
Modifications to the returned <code>Set</code>
will not affect the internal private Credential <code>Set</code>.

<p>

@param c the returned <code>Set</code> of private credentials will all be
		instances of this class.

@return a <code>Set</code> of private credentials that are instances
		of the	specified <code>Class</code>.

@exception NullPointerException if the specified <code>Class</code>
		is <code>null</code>."
      end

      operation 8653083 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this <code>Subject</code>
for equality.  Returns true if the given object is also a Subject
and the two <code>Subject</code> instances are equivalent.
More formally, two <code>Subject</code> instances are
equal if their <code>Principal</code> and <code>Credential</code>
Sets are equal.

<p>

@param o Object to be compared for equality with this
		<code>Subject</code>.

@return true if the specified Object is equal to this
		<code>Subject</code>.

@exception SecurityException if the caller does not have permission
		to access the private credentials for this <code>Subject</code>,
		or if the caller does not have permission to access the
		private credentials for the provided <code>Subject</code>."
      end

      operation 8653211 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the String representation of this <code>Subject</code>.

<p>

@return the String representation of this <code>Subject</code>."
      end

      operation 8653339 "toString"
	package explicit_return_type "String"
	nparams 1
	  param inout name "includePrivateCredentials" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package private convenience method to print out the Subject
without firing off a security check when trying to access
the Private Credentials"
      end

      operation 8653467 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this <code>Subject</code>.

<p>

@return a hashcode for this <code>Subject</code>.

@exception SecurityException if the caller does not have permission
		to access this Subject's private credentials."
      end

      operation 8653595 "getCredHashCode"
	private explicit_return_type "int"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get a credential's hashcode"
      end

      operation 8653723 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this object out to a stream (i.e., serializes it)."
      end

      operation 8653851 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)"
      end

      class 1082139 "SecureSet"
	visibility private 
	nactuals 4
	actual class class_ref 137499 // AbstractSet
	  rank 0 explicit_value ""
	actual class class_ref 137499 // AbstractSet
	  rank 1 explicit_value ""
	actual class class_ref 137499 // AbstractSet
	  rank 2 explicit_value ""
	actual class class_ref 137499 // AbstractSet
	  rank 3 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2207643 // <generalisation>
	  relation 2207643 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2207643 // <generalisation>
	    b parent class_ref 137499 // AbstractSet
	end

	classrelation 2207771 // <realization>
	  relation 2207771 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2207771 // <realization>
	    b parent class_ref 137883 // Serializable
	end

	attribute 3126427 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value "=  7911754171111800359L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 2207899 // serialPersistentFields (<unidirectional association>)
	  relation 2207899 --->
	    a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
	    new ObjectStreamField(\"this$0\", Subject.class),
	    new ObjectStreamField(\"elements\", LinkedList.class),
	    new ObjectStreamField(\"which\", int.class)
	}" class_relation const_relation private
	      comment "
@serialField this$0 Subject The outer Subject instance.
@serialField elements LinkedList The elements in this set.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2207899 // serialPersistentFields (<unidirectional association>)
	    b parent class_ref 285723 // ObjectStreamField
	end

	classrelation 2208027 // subject (<unidirectional association>)
	  relation 2208027 --->
	    a role_name "subject" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2208027 // subject (<unidirectional association>)
	    b parent class_ref 520987 // Subject
	end

	classrelation 2208155 // elements (<unidirectional association>)
	  relation 2208155 --->
	    a role_name "elements" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2208155 // elements (<unidirectional association>)
	    b parent class_ref 152987 // LinkedList
	end

	attribute 3126555 "which"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "@serial An integer identifying the type of objects contained
	in this set.  If <code>which == 1</code>,
	this is a Principal set and all the elements are
	of type <code>java.security.Principal</code>.
	If <code>which == 2</code>, this is a public credential
	set and all the elements are of type <code>Object</code>.
	If <code>which == 3</code>, this is a private credential
	set and all the elements are of type <code>Object</code>.
"
	end

	operation 8653979 "SecureSet"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "subject" type class_ref 520987 // Subject
	    param in name "which" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654107 "SecureSet"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "subject" type class_ref 520987 // Subject
	    param in name "which" explicit_type "int"
	    param inout name "set" type class_ref 136731 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654235 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654363 "iterator"
	  public return_type class_ref 135323 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654491 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654619 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654747 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8654875 "removeAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 135067 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655003 "retainAll"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 135067 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655131 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655259 "writeObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "oos" type class_ref 205339 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Writes this object out to a stream (i.e., serializes it).

<p>

@serialData If this is a private credential set,
	a security check is performed to ensure that
	the caller has permission to access each credential
	in the set.  If the security check passes,
	the set is serialized."
	end

	operation 8655387 "readObject"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "ois" type class_ref 201115 // ObjectInputStream
	  nexceptions 2
	    exception class_ref 179355 // IOException
	    exception class_ref 201883 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1082267 "ClassSet"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 4
	actual class class_ref 137499 // AbstractSet
	  rank 0 explicit_value "T"
	actual class class_ref 137499 // AbstractSet
	  rank 1 explicit_value ""
	actual class class_ref 137499 // AbstractSet
	  rank 2 explicit_value ""
	actual class class_ref 137499 // AbstractSet
	  rank 3 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2208283 // <realization>
	  relation 2208283 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 2208283 // <realization>
	    b parent class_ref 137499 // AbstractSet
	end

	attribute 3126683 "which"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 2208411 // c (<unidirectional association>)
	  relation 2208411 --->
	    a role_name "c" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2208411 // c (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	classrelation 2208539 // set (<unidirectional association>)
	  relation 2208539 --->
	    a role_name "set" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 2208539 // set (<unidirectional association>)
	    b parent class_ref 136731 // Set
	end

	operation 8655515 "ClassSet"
	  package explicit_return_type ""
	  nparams 2
	    param in name "which" explicit_type "int"
	    param inout name "c" type class_ref 164635 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655643 "populateSet"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655771 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8655899 "iterator"
	  public return_type class_ref 135323 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8656027 "add"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "T"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 526619 "SubjectDomainCombiner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A <code>SubjectDomainCombiner</code> updates ProtectionDomains
with Principals from the <code>Subject</code> associated with this
<code>SubjectDomainCombiner</code>.

@version 1.48, 08/25/05"
      classrelation 888987 // <realization>
	relation 888987 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 888987 // <realization>
	  b parent class_ref 526747 // DomainCombiner
      end

      classrelation 889115 // subject (<unidirectional association>)
	relation 889115 --->
	  a role_name "subject" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 889115 // subject (<unidirectional association>)
	  b parent class_ref 520987 // Subject
      end

      class 527003 "WeakKeyValueMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 8
	actual class class_ref 159387 // WeakHashMap
	  rank 0 explicit_value "K"
	actual class class_ref 159387 // WeakHashMap
	  rank 1 explicit_value "WeakReference<V>"
	actual class class_ref 159387 // WeakHashMap
	  rank 2 explicit_value ""
	actual class class_ref 159387 // WeakHashMap
	  rank 3 explicit_value ""
	actual class class_ref 159387 // WeakHashMap
	  rank 4 explicit_value ""
	actual class class_ref 159387 // WeakHashMap
	  rank 5 explicit_value ""
	actual class class_ref 159387 // WeakHashMap
	  rank 6 explicit_value ""
	actual class class_ref 159387 // WeakHashMap
	  rank 7 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 889627 // <realization>
	  relation 889627 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 889627 // <realization>
	    b parent class_ref 159387 // WeakHashMap
	end

	operation 3249051 "getValue"
	  public explicit_return_type "V"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3249179 "putValue"
	  public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 889243 // cachedPDs (<unidirectional association>)
	relation 889243 --->
	  a role_name "cachedPDs" init_value "= 
		new WeakKeyValueMap<ProtectionDomain, ProtectionDomain>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ProtectionDomain, ProtectionDomain> ${name}${value};
"
	    classrelation_ref 889243 // cachedPDs (<unidirectional association>)
	  b parent class_ref 527003 // WeakKeyValueMap
      end

      classrelation 889371 // principalSet (<unidirectional association>)
	relation 889371 --->
	  a role_name "principalSet" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 889371 // principalSet (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 889499 // principals (<unidirectional association>)
	relation 889499 --->
	  a role_name "principals" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 889499 // principals (<unidirectional association>)
	  b parent class_ref 527131 // Principal
      end

      attribute 926491 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "= 
	sun.security.util.Debug.getInstance(\"combiner\",
					\"\\t[SubjectDomainCombiner]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 926619 "useJavaxPolicy"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "=  compatPolicy()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: check only at classloading time, not dynamically during combine()"
      end

      attribute 926747 "allowCaching"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "= 
					(useJavaxPolicy && cachePolicy())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Relevant only when useJavaxPolicy is true"
      end

      operation 3247899 "SubjectDomainCombiner"
	public explicit_return_type ""
	nparams 1
	  param inout name "subject" type class_ref 520987 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate the provided <code>Subject</code> with this
<code>SubjectDomainCombiner</code>.

<p>

@param subject the <code>Subject</code> to be associated with
		with this <code>SubjectDomainCombiner</code>."
      end

      operation 3248027 "getSubject"
	public return_type class_ref 520987 // Subject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>Subject</code> associated with this
<code>SubjectDomainCombiner</code>.

<p>

@return the <code>Subject</code> associated with this
		<code>SubjectDomainCombiner</code>, or <code>null</code>
		if no <code>Subject</code> is associated with this
		<code>SubjectDomainCombiner</code>.

@exception SecurityException if the caller does not have permission
		to get the <code>Subject</code> associated with this
		<code>SubjectDomainCombiner</code>."
      end

      operation 3248155 "combine"
	public return_type class_ref 526875 // ProtectionDomain
	nparams 2
	  param inout name "currentDomains" type class_ref 526875 // ProtectionDomain
	  param inout name "assignedDomains" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the relevant ProtectionDomains with the Principals
from the <code>Subject</code> associated with this
<code>SubjectDomainCombiner</code>.

<p> A new <code>ProtectionDomain</code> instance is created
for each <code>ProtectionDomain</code> in the
<i>currentDomains</i> array.  Each new <code>ProtectionDomain</code>
instance is created using the <code>CodeSource</code>,
<code>Permission</code>s and <code>ClassLoader</code>
from the corresponding <code>ProtectionDomain</code> in
<i>currentDomains</i>, as well as with the Principals from
the <code>Subject</code> associated with this
<code>SubjectDomainCombiner</code>.

<p> All of the newly instantiated ProtectionDomains are
combined into a new array.  The ProtectionDomains from the
<i>assignedDomains</i> array are appended to this new array,
and the result is returned.

<p> Note that optimizations such as the removal of duplicate
ProtectionDomains may have occurred.
In addition, caching of ProtectionDomains may be permitted.

<p>

@param currentDomains the ProtectionDomains associated with the
		current execution Thread, up to the most recent
		privileged <code>ProtectionDomain</code>.
		The ProtectionDomains are are listed in order of execution,
		with the most recently executing <code>ProtectionDomain</code>
		residing at the beginning of the array. This parameter may
		be <code>null</code> if the current execution Thread
		has no associated ProtectionDomains.<p>

@param assignedDomains the ProtectionDomains inherited from the
		parent Thread, or the ProtectionDomains from the
		privileged <i>context</i>, if a call to
		AccessController.doPrivileged(..., <i>context</i>)
		had occurred  This parameter may be <code>null</code>
		if there were no ProtectionDomains inherited from the
		parent Thread, or from the privileged <i>context</i>.

@return a new array consisting of the updated ProtectionDomains,
		or <code>null</code>."
      end

      operation 3248283 "combineJavaxPolicy"
	private return_type class_ref 526875 // ProtectionDomain
	nparams 2
	  param inout name "currentDomains" type class_ref 526875 // ProtectionDomain
	  param inout name "assignedDomains" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the javax.security.auth.Policy implementation"
      end

      operation 3248411 "optimize"
	class_operation private return_type class_ref 526875 // ProtectionDomain
	nparams 1
	  param inout name "domains" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3248539 "cachePolicy"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3248667 "compatPolicy"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " maintain backwards compatibility for people who provide
 their own javax.security.auth.Policy implementations"
      end

      operation 3248795 "printInputDomains"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "currentDomains" type class_ref 526875 // ProtectionDomain
	  param inout name "assignedDomains" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3248923 "printDomain"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "pd" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 840731 "Policy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This is an abstract class for representing the system policy for
Subject-based authorization.  A subclass implementation
of this class provides a means to specify a Subject-based
access control <code>Policy</code>.

<p> A <code>Policy</code> object can be queried for the set of
Permissions granted to code running as a 
<code>Principal</code> in the following manner:

<pre>
	policy = Policy.getPolicy();
	PermissionCollection perms = policy.getPermissions(subject,
							codeSource);
</pre>

The <code>Policy</code> object consults the local policy and returns
and appropriate <code>Permissions</code> object with the
Permissions granted to the Principals associated with the
provided <i>subject</i>, and granted to the code specified
by the provided <i>codeSource</i>.

<p> A <code>Policy</code> contains the following information.
Note that this example only represents the syntax for the default
<code>Policy</code> implementation. Subclass implementations of this class
may implement alternative syntaxes and may retrieve the
<code>Policy</code> from any source such as files, databases,
or servers.

<p> Each entry in the <code>Policy</code> is represented as
a <b><i>grant</i></b> entry.  Each <b><i>grant</i></b> entry
specifies a codebase, code signers, and Principals triplet,
as well as the Permissions granted to that triplet.

<pre>
	grant CodeBase [\"URL\"], Signedby [\"signers\"],
	      Principal [Principal_Class] \"Principal_Name\" {
	    Permission Permission_Class [\"Target_Name\"]
					[, \"Permission_Actions\"]
					[, signedBy \"SignerName\"];
	};
</pre>

The CodeBase and Signedby components of the triplet name/value pairs
are optional.  If they are not present, then any any codebase will match,
and any signer (including unsigned code) will match.
For Example,

<pre>
	grant CodeBase \"foo.com\", Signedby \"foo\",
	      Principal com.sun.security.auth.SolarisPrincipal \"duke\" {
	    permission java.io.FilePermission \"/home/duke\", \"read, write\";
	};
</pre>

This <b><i>grant</i></b> entry specifies that code from \"foo.com\",
signed by \"foo', and running as a <code>SolarisPrincipal</code> with the
name, duke, has one <code>Permission</code>.  This <code>Permission</code>
permits the executing code to read and write files in the directory,
\"/home/duke\".

<p> To \"run\" as a particular <code>Principal</code>,
code invokes the <code>Subject.doAs(subject, ...)</code> method.
After invoking that method, the code runs as all the Principals
associated with the specified <code>Subject</code>.
Note that this <code>Policy</code> (and the Permissions
granted in this <code>Policy</code>) only become effective
after the call to <code>Subject.doAs</code> has occurred.

<p> Multiple Principals may be listed within one <b><i>grant</i></b> entry.
All the Principals in the grant entry must be associated with
the <code>Subject</code> provided to <code>Subject.doAs</code>
for that <code>Subject</code> to be granted the specified Permissions.

<pre>
	grant Principal com.sun.security.auth.SolarisPrincipal \"duke\",
	      Principal com.sun.security.auth.SolarisNumericUserPrincipal \"0\" {
	    permission java.io.FilePermission \"/home/duke\", \"read, write\";
	    permission java.net.SocketPermission \"duke.com\", \"connect\";
	};
</pre>

This entry grants any code running as both \"duke\" and \"0\"
permission to read and write files in duke's home directory,
as well as permission to make socket connections to \"duke.com\".

<p> Note that non Principal-based grant entries are not permitted
in this <code>Policy</code>.  Therefore, grant entries such as:

<pre>
	grant CodeBase \"foo.com\", Signedby \"foo\" {
	    permission java.io.FilePermission \"/tmp/scratch\", \"read, write\";
	};
</pre>

are rejected.  Such permission must be listed in the
<code>java.security.Policy</code>.

<p> The default <code>Policy</code> implementation can be changed by
setting the value of the \"auth.policy.provider\" security property
(in the Java security properties file) to the fully qualified name of
the desired <code>Policy</code> implementation class.
The Java security properties file is located in the file named
&lt;JAVA_HOME&gt;/lib/security/java.security, where &lt;JAVA_HOME&gt;
refers to the directory where the JDK was installed.

@deprecated	as of JDK version 1.4 -- Replaced by java.security.Policy.
		java.security.Policy has a method:
<pre>
	public PermissionCollection getPermissions
 	    (java.security.ProtectionDomain pd)

</pre>
and ProtectionDomain has a constructor:
<pre>
	public ProtectionDomain
	    (CodeSource cs,
	     PermissionCollection permissions,
	     ClassLoader loader,
	     Principal[] principals)
</pre>

These two APIs provide callers the means to query the
Policy for Principal-based Permission entries.


@version 1.50, 05/18/04"
      classrelation 1553819 // policy (<unidirectional association>)
	relation 1553819 --->
	  a role_name "policy" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1553819 // policy (<unidirectional association>)
	  b parent class_ref 840731 // Policy
      end

      classrelation 1553947 // contextClassLoader (<unidirectional association>)
	relation 1553947 --->
	  a role_name "contextClassLoader" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1553947 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      extra_member 154139 "initialization"
	
	cpp "" ""
	java "  static {
	contextClassLoader =
		(ClassLoader)java.security.AccessController.doPrivileged
                (new java.security.PrivilegedAction() {
                public Object run() {
                    return Thread.currentThread().getContextClassLoader();
                }
        });
    }"
	php ""
	python ""
	idl ""
      end

      operation 6092443 "Policy"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)"
      end

      operation 6092571 "getPolicy"
	class_operation public return_type class_ref 840731 // Policy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object.
This method first calls
<code>SecurityManager.checkPermission</code> with the
<code>AuthPermission(\"getPolicy\")</code> permission
to ensure the caller has permission to get the Policy object.

<p>

@return the installed Policy.  The return value cannot be
		<code>null</code>.

@exception java.lang.SecurityException if the current thread does not
	    have permission to get the Policy object.

@see #setPolicy"
      end

      operation 6092699 "getPolicyNoCheck"
	class_operation package return_type class_ref 840731 // Policy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object, skipping the security check.

@return the installed Policy.
"
      end

      operation 6092827 "setPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "policy" type class_ref 840731 // Policy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system-wide Policy object. This method first calls
<code>SecurityManager.checkPermission</code> with the
<code>AuthPermission(\"setPolicy\")</code>
permission to ensure the caller has permission to set the Policy.

<p>

@param policy the new system Policy object.

@exception java.lang.SecurityException if the current thread does not
		have permission to set the Policy.

@see #getPolicy"
      end

      operation 6092955 "getPermissions"
	abstract public return_type class_ref 285467 // PermissionCollection
	nparams 2
	  param inout name "subject" type class_ref 520987 // Subject
	  param inout name "cs" type class_ref 527259 // CodeSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the Permissions granted to the Principals associated with
the specified <code>CodeSource</code>.

<p>

@param subject the <code>Subject</code>
			whose associated Principals,
			in conjunction with the provided
			<code>CodeSource</code>, determines the Permissions
			returned by this method.  This parameter
			may be <code>null</code>. <p>

@param cs the code specified by its <code>CodeSource</code>
			that determines, in conjunction with the provided
			<code>Subject</code>, the Permissions
			returned by this method.  This parameter may be
			<code>null</code>.

@return the Collection of Permissions granted to all the
			<code>Subject</code> and code specified in
			the provided <i>subject</i> and <i>cs</i>
			parameters."
      end

      operation 6093083 "refresh"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refresh and reload the Policy.

<p>This method causes this object to refresh/reload its current
Policy. This is implementation-dependent.
For example, if the Policy object is stored in
a file, calling <code>refresh</code> will cause the file to be re-read.

<p>

@exception SecurityException if the caller does not have permission
				to refresh the Policy."
      end
    end

    class 965531 "Destroyable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Objects such as credentials may optionally implement this interface
to provide the capability to destroy its contents.

@version 1.11, 12/19/03
@see javax.security.auth.Subject"
      operation 7585179 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 965659 // DestroyFailedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroy this <code>Object</code>.

<p> Sensitive information associated with this <code>Object</code>
is destroyed or cleared.  Subsequent calls to certain methods
on this <code>Object</code> will result in an
<code>IllegalStateException</code> being thrown.

<p>

@exception DestroyFailedException if the destroy operation fails. <p>

@exception SecurityException if the caller does not have permission
		to destroy this <code>Object</code>."
      end

      operation 7585307 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if this <code>Object</code> has been destroyed.

<p>

@return true if this <code>Object</code> has been destroyed,
		false otherwise."
      end
    end

    class 965659 "DestroyFailedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a <code>destroy</code> operation failed.

<p> This exception is thrown by credentials implementing
the <code>Destroyable</code> interface when the <code>destroy</code>
method fails.

@version 1.8, 12/19/03"
      classrelation 2206235 // <generalisation>
	relation 2206235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2206235 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3124763 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7790152857282749162L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8648219 "DestroyFailedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DestroyFailedException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8648347 "DestroyFailedException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DestroyFailedException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end

    class 1081499 "AuthPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is for authentication permissions.
An AuthPermission contains a name
(also referred to as a \"target name\")
but no actions list; you either have the named permission
or you don't.

<p> The target name is the name of a security configuration parameter
(see below).  Currently the AuthPermission object is used to
guard access to the Policy, Subject, LoginContext,
and Configuration objects.

<p> The possible target names for an Authentication Permission are:

<pre>
	doAs -			allow the caller to invoke the
				<code>Subject.doAs</code> methods.

	doAsPrivileged -	allow the caller to invoke the
				<code>Subject.doAsPrivileged</code> methods.

	getSubject -		allow for the retrieval of the
				Subject(s) associated with the
				current Thread.

	getSubjectFromDomainCombiner -	allow for the retrieval of the
				Subject associated with the
				a <code>SubjectDomainCombiner</code>.

	setReadOnly -		allow the caller to set a Subject
				to be read-only.

	modifyPrincipals -	allow the caller to modify the <code>Set</code>
				of Principals associated with a
				<code>Subject</code>

	modifyPublicCredentials - allow the caller to modify the
				<code>Set</code> of public credentials
				associated with a <code>Subject</code>

	modifyPrivateCredentials - allow the caller to modify the
				<code>Set</code> of private credentials
				associated with a <code>Subject</code>

	refreshCredential -	allow code to invoke the <code>refresh</code>
				method on a credential which implements
				the <code>Refreshable</code> interface.

	destroyCredential -	allow code to invoke the <code>destroy</code>
				method on a credential <code>object</code>
				which implements the <code>Destroyable</code>
				interface.

	createLoginContext.{name} -  allow code to instantiate a
				<code>LoginContext</code> with the
				specified <i>name</i>.  <i>name</i>
				is used as the index into the installed login
				<code>Configuration</code>
				(that returned by
				<code>Configuration.getConfiguration()</code>).
				<i>name</i> can be wildcarded (set to '*')
				to allow for any name.

	getLoginConfiguration - allow for the retrieval of the system-wide
				login Configuration.

	setLoginConfiguration - allow for the setting of the system-wide
				login Configuration.

	refreshLoginConfiguration - allow for the refreshing of the system-wide
				login Configuration.
</pre>

<p> The following target name has been deprecated in favor of
<code>createLoginContext.{name}</code>.

<pre>
	createLoginContext -	allow code to instantiate a
				<code>LoginContext</code>.
</pre>

<p> <code>javax.security.auth.Policy</code> has been
deprecated in favor of <code>java.security.Policy</code>.
Therefore, the following target names have also been deprecated:

<pre>
	getPolicy -		allow the caller to retrieve the system-wide
				Subject-based access control policy.

	setPolicy -		allow the caller to set the system-wide
				Subject-based access control policy.

	refreshPolicy -		allow the caller to refresh the system-wide
				Subject-based access control policy.
</pre>

@version 1.51, 12/19/03"
      classrelation 2206107 // <generalisation>
	relation 2206107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2206107 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      attribute 3124635 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5806031445061587174L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8647963 "AuthPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AuthPermission with the specified name.
The name is the symbolic name of the AuthPermission.

<p>

@param name the name of the AuthPermission"
      end

      operation 8648091 "AuthPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AuthPermission object with the specified name.
The name is the symbolic name of the AuthPermission, and the
actions String is currently unused and should be null.

<p>

@param name the name of the AuthPermission <p>

@param actions should be null."
      end
    end

    class 1081627 "PrivateCredentialPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to protect access to private Credentials
belonging to a particular <code>Subject</code>.  The <code>Subject</code>
is represented by a Set of Principals.

<p> The target name of this <code>Permission</code> specifies
a Credential class name, and a Set of Principals.
The only valid value for this Permission's actions is, \"read\".
The target name must abide by the following syntax:

<pre>
	CredentialClass {PrincipalClass \"PrincipalName\"}*
</pre>

For example, the following permission grants access to the
com.sun.PrivateCredential owned by Subjects which have
a com.sun.Principal with the name, \"duke\".  Note that although
this example, as well as all the examples below, do not contain
Codebase, SignedBy, or Principal information in the grant statement
(for simplicity reasons), actual policy configurations should
specify that information when appropriate.

<pre>

   grant {
	permission javax.security.auth.PrivateCredentialPermission
		\"com.sun.PrivateCredential com.sun.Principal \\\"duke\\\"\",
		\"read\";
   };
</pre>

If CredentialClass is \"*\", then access is granted to
all private Credentials belonging to the specified
<code>Subject</code>.
If \"PrincipalName\" is \"*\", then access is granted to the
specified Credential owned by any <code>Subject</code> that has the
specified <code>Principal</code> (the actual PrincipalName doesn't matter).
For example, the following grants access to the
a.b.Credential owned by any <code>Subject</code> that has
an a.b.Principal.

<pre>
   grant {
	permission javax.security.auth.PrivateCredentialPermission
		\"a.b.Credential a.b.Principal \"*\"\",
		\"read\";
   };
</pre>

If both the PrincipalClass and \"PrincipalName\" are \"*\",
then access is granted to the specified Credential owned by
any <code>Subject</code>.

<p> In addition, the PrincipalClass/PrincipalName pairing may be repeated:

<pre>
   grant {
	permission javax.security.auth.PrivateCredentialPermission
		\"a.b.Credential a.b.Principal \"duke\" c.d.Principal \"dukette\"\",
		\"read\";
   };
</pre>

The above grants access to the private Credential, \"a.b.Credential\",
belonging to a <code>Subject</code> with at least two associated Principals:
\"a.b.Principal\" with the name, \"duke\", and \"c.d.Principal\", with the name,
\"dukette\".

@version 1.31, 12/19/03"
      classrelation 2206363 // <generalisation>
	relation 2206363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2206363 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      attribute 3124891 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5284372143517237068L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1081755 "CredOwner"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2206875 // <realization>
	  relation 2206875 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2206875 // <realization>
	    b parent class_ref 137883 // Serializable
	end

	attribute 3125275 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value "=  -5607449830436408266L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3125403 "principalClass"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "@serial
"
	end

	attribute 3125531 "principalName"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "@serial
"
	end

	operation 8650139 "CredOwner"
	  package explicit_return_type ""
	  nparams 2
	    param in name "principalClass" explicit_type "String"
	    param in name "principalName" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8650267 "implies"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8650395 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2206491 // EMPTY_PRINCIPALS (<unidirectional association>)
	relation 2206491 --->
	  a role_name "EMPTY_PRINCIPALS" multiplicity "[]" init_value "=  new CredOwner[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2206491 // EMPTY_PRINCIPALS (<unidirectional association>)
	  b parent class_ref 1081755 // CredOwner
      end

      attribute 3125019 "credentialClass"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      classrelation 2206619 // principals (<unidirectional association>)
	relation 2206619 --->
	  a role_name "principals" private
	    comment "
@serial The Principals associated with this permission.
		The set contains elements of type,
		<code>PrivateCredentialPermission.CredOwner</code>.

 ignored - kept around for compatibility"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2206619 // principals (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 2206747 // credOwners (<unidirectional association>)
	relation 2206747 --->
	  a role_name "credOwners" multiplicity "[]" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2206747 // credOwners (<unidirectional association>)
	  b parent class_ref 1081755 // CredOwner
      end

      attribute 3125147 "testing"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 8648475 "PrivateCredentialPermission"
	package explicit_return_type ""
	nparams 2
	  param in name "credentialClass" explicit_type "String"
	  param inout name "principals" type class_ref 136731 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>PrivateCredentialPermission</code>
with the specified <code>credentialClass</code> and Principals."
      end

      operation 8648603 "PrivateCredentialPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PrivateCredentialPermission</code>
with the specified <code>name</code>.  The <code>name</code>
specifies both a Credential class and a <code>Principal</code> Set.

<p>

@param name the name specifying the Credential class and
		<code>Principal</code> Set. <p>

@param actions the actions specifying that the Credential can be read.

@throws IllegalArgumentException if <code>name</code> does not conform
		to the correct syntax or if <code>actions</code> is not \"read\"."
      end

      operation 8648731 "getCredentialClass"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Class name of the Credential associated with this
<code>PrivateCredentialPermission</code>.

<p>

@return the Class name of the Credential associated with this
		<code>PrivateCredentialPermission</code>."
      end

      operation 8648859 "getPrincipals"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Principal</code> classes and names
associated with this <code>PrivateCredentialPermission</code>.
The information is returned as a two-dimensional array (array[x][y]).
The 'x' value corresponds to the number of <code>Principal</code>
class and name pairs.  When (y==0), it corresponds to
the <code>Principal</code> class value, and when (y==1),
it corresponds to the <code>Principal</code> name value.
For example, array[0][0] corresponds to the class name of
the first <code>Principal</code> in the array.  array[0][1]
corresponds to the <code>Principal</code> name of the
first <code>Principal</code> in the array.

<p>

@return the <code>Principal</code> class and names associated
		with this <code>PrivateCredentialPermission</code>."
      end

      operation 8648987 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this <code>PrivateCredentialPermission</code> implies
the specified <code>Permission</code>.

<p>

This method returns true if:
<p><ul>
<li> <i>p</i> is an instanceof PrivateCredentialPermission and <p>
<li> the target name for <i>p</i> is implied by this object's
		target name.  For example:
<pre>
	[* P1 \"duke\"] implies [a.b.Credential P1 \"duke\"].
	[C1 P1 \"duke\"] implies [C1 P1 \"duke\" P2 \"dukette\"].
	[C1 P2 \"dukette\"] implies [C1 P1 \"duke\" P2 \"dukette\"].
</pre>
</ul>		

<p>

@param p the <code>Permission</code> to check against.

@return true if this <code>PrivateCredentialPermission</code> implies
the specified <code>Permission</code>, false if not."
      end

      operation 8649115 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two <code>PrivateCredentialPermission</code> objects for
equality.  Checks that <i>obj</i> is a
<code>PrivateCredentialPermission</code>,
and has the same credential class as this object,
as well as the same Principals as this object.
The order of the Principals in the respective Permission's
target names is not relevant.

<p>

@param obj the object we are testing for equality with this object.

@return true if obj is a <code>PrivateCredentialPermission</code>,
		has the same credential class as this object,
		and has the same Principals as this object."
      end

      operation 8649243 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 8649371 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions.
This method always returns the String, \"read\".

<p>

@return the actions (always returns \"read\")."
      end

      operation 8649499 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a homogeneous collection of PrivateCredentialPermissions
in a <code>PermissionCollection</code>.
No such <code>PermissionCollection</code> is defined,
so this method always returns <code>null</code>.

<p>

@return null in all cases."
      end

      operation 8649627 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8649755 "impliesCredentialClass"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "thisC" explicit_type "String"
	  param in name "thatC" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8649883 "impliesPrincipalSet"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "thisP" type class_ref 1081755 // CredOwner
	  param inout name "thatP" type class_ref 1081755 // CredOwner
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8650011 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)"
      end
    end

    class 1081883 "Refreshable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Objects such as credentials may optionally implement this
interface to provide the capability to refresh itself.
For example, a credential with a particular time-restricted lifespan 
may implement this interface to allow callers to refresh the time period
for which it is valid.

@version 1.9, 12/19/03
@see javax.security.auth.Subject"
      operation 8650523 "isCurrent"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if this <code>Object</code> is current.

<p>

@return true if this <code>Object</code> is currently current,
		false otherwise."
      end

      operation 8650651 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1082011 // RefreshFailedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update or extend the validity period for this
<code>Object</code>.

<p>

@exception SecurityException if the caller does not have permission
		to update or extend the validity period for this
		<code>Object</code>. <p>

@exception RefreshFailedException if the refresh attempt failed."
      end
    end

    class 1082011 "RefreshFailedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a <code>refresh</code> operation failed.

<p> This exception is thrown by credentials implementing
the <code>Refreshable</code> interface when the <code>refresh</code>
method fails.

@version 1.8, 12/19/03"
      classrelation 2207003 // <generalisation>
	relation 2207003 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2207003 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 3125659 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5058444488565265840L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8650779 "RefreshFailedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a RefreshFailedException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 8650907 "RefreshFailedException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a RefreshFailedException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.  "
      end
    end
  end

  package_ref 160539 // spi

  package_ref 160667 // callback

  package_ref 160795 // login

  deploymentview 150427 "auth"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 350875 "SubjectDomainCombiner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.AllPermission;
import java.security.Permission;
import java.security.Permissions;
import java.security.PermissionCollection;
import java.security.Policy;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.ProtectionDomain;
import java.lang.ClassLoader;
import java.security.Security;
import java.util.Set;
import java.util.Iterator;
import java.util.WeakHashMap;
import java.lang.ref.WeakReference;
${definition}"
      associated_classes
	class_ref 526619 // SubjectDomainCombiner
      end
      comment "@(#)SubjectDomainCombiner.java	1.50 07/09/11

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 619803 "Policy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 840731 // Policy
      end
      comment "@(#)Policy.java	1.50 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734619 "Destroyable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 965531 // Destroyable
      end
      comment "@(#)Destroyable.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 829467 "AuthPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1081499 // AuthPermission
      end
      comment "@(#)AuthPermission.java	1.51 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 829595 "DestroyFailedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 965659 // DestroyFailedException
      end
      comment "@(#)DestroyFailedException.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 829723 "PrivateCredentialPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.text.MessageFormat;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.Principal;
import sun.security.util.ResourcesMgr;
${definition}"
      associated_classes
	class_ref 1081627 // PrivateCredentialPermission
      end
      comment "@(#)PrivateCredentialPermission.java	1.31 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 829851 "Refreshable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1081883 // Refreshable
      end
      comment "@(#)Refreshable.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 829979 "RefreshFailedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1082011 // RefreshFailedException
      end
      comment "@(#)RefreshFailedException.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 830107 "Subject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.*;
import java.lang.reflect.*;
import java.text.MessageFormat;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.DomainCombiner;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.PrivilegedActionException;
import java.security.ProtectionDomain;
import sun.security.util.ResourcesMgr;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 520987 // Subject
      end
      comment "@(#)Subject.java	1.123 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end

  package_ref 177947 // x500

  package_ref 178075 // kerberos
end
