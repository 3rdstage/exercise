format 66
"spi" // src::javax::sound::sampled::spi
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/sound/sampled/spi"
  java_package "javax.sound.sampled.spi"
  classview 178715 "spi"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1092251 "MixerProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A provider or factory for a particular mixer type.
This mechanism allows the implementation to determine
how resources are managed in creation / management of
a mixer.

@version 1.18 03/12/19
@author Kara Kytle
@since 1.3"
      operation 8749851 "isMixerSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "info" type class_ref 1091483 // Info
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the mixer provider supports the mixer represented by
the specified mixer info object.
@param info an info object that describes the mixer for which support is queried
@return <code>true</code> if the specified mixer is supported, 
otherwise <code>false</code>"
      end

      operation 8749979 "getMixerInfo"
	abstract public return_type class_ref 1091483 // Info
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the set of info objects representing the mixer
or mixers provided by this MixerProvider.
@return set of mixer info objects"
      end

      operation 8750107 "getMixer"
	abstract public return_type class_ref 1091355 // Mixer
	nparams 1
	  param inout name "info" type class_ref 1091483 // Info
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an instance of the mixer represented by the info object.
@param info an info object that describes the desired mixer
@return mixer instance
@throws IllegalArgumentException if the info object specified does not
match the info object for a mixer supported by this MixerProvider."
      end
    end

    class 1093659 "AudioFileReader"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provider for audio file reading services.  Classes providing concrete
implementations can parse the format information from one or more types of
audio file, and can produce audio input streams from files of these types.

@author Kara Kytle
@version 1.15 03/12/19
@since 1.3"
      operation 8747035 "getAudioFileFormat"
	abstract public return_type class_ref 1090203 // AudioFileFormat
	nparams 1
	  param inout name "stream" type class_ref 179099 // InputStream
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the audio file format of the input stream provided.  The stream must
point to valid audio file data.  In general, audio file readers may
need to read some data from the stream before determining whether they
support it.  These parsers must
be able to mark the stream, read enough data to determine whether they
support the stream, and, if not, reset the stream's read pointer to its original
position.  If the input stream does not support this, this method may fail
with an <code>IOException</code>.
@param stream the input stream from which file format information should be
extracted
@return an <code>AudioFileFormat</code> object describing the audio file format
@throws UnsupportedAudioFileException if the stream does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs
@see InputStream#markSupported
@see InputStream#mark"
      end

      operation 8747163 "getAudioFileFormat"
	abstract public return_type class_ref 1090203 // AudioFileFormat
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the audio file format of the URL provided.  The URL must
point to valid audio file data.
@param url the URL from which file format information should be
extracted
@return an <code>AudioFileFormat</code> object describing the audio file format
@throws UnsupportedAudioFileException if the URL does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs"
      end

      operation 8747291 "getAudioFileFormat"
	abstract public return_type class_ref 1090203 // AudioFileFormat
	nparams 1
	  param inout name "file" type class_ref 165147 // File
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the audio file format of the <code>File</code> provided.  The <code>File</code> must
point to valid audio file data.
@param file the <code>File</code> from which file format information should be
extracted
@return an <code>AudioFileFormat</code> object describing the audio file format
@throws UnsupportedAudioFileException if the <code>File</code> does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs"
      end

      operation 8747419 "getAudioInputStream"
	abstract public return_type class_ref 1090715 // AudioInputStream
	nparams 1
	  param inout name "stream" type class_ref 179099 // InputStream
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an audio input stream from the input stream provided.  The stream must
point to valid audio file data.  In general, audio file readers may
need to read some data from the stream before determining whether they
support it.  These parsers must
be able to mark the stream, read enough data to determine whether they
support the stream, and, if not, reset the stream's read pointer to its original
position.  If the input stream does not support this, this method may fail
with an <code>IOException</code>.
@param stream the input stream from which the <code>AudioInputStream</code> should be
constructed
@return an <code>AudioInputStream</code> object based on the audio file data contained
in the input stream.
@throws UnsupportedAudioFileException if the stream does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs
@see InputStream#markSupported
@see InputStream#mark"
      end

      operation 8747547 "getAudioInputStream"
	abstract public return_type class_ref 1090715 // AudioInputStream
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an audio input stream from the URL provided.  The URL must
point to valid audio file data.
@param url the URL for which the <code>AudioInputStream</code> should be
constructed
@return an <code>AudioInputStream</code> object based on the audio file data pointed
to by the URL
@throws UnsupportedAudioFileException if the URL does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs"
      end

      operation 8747675 "getAudioInputStream"
	abstract public return_type class_ref 1090715 // AudioInputStream
	nparams 1
	  param inout name "file" type class_ref 165147 // File
	nexceptions 2
	  exception class_ref 1092123 // UnsupportedAudioFileException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an audio input stream from the <code>File</code> provided.  The <code>File</code> must
point to valid audio file data.
@param file the <code>File</code> for which the <code>AudioInputStream</code> should be
constructed
@return an <code>AudioInputStream</code> object based on the audio file data pointed
to by the File
@throws UnsupportedAudioFileException if the <code>File</code> does not point to valid audio
file data recognized by the system
@throws IOException if an I/O exception occurs"
      end
    end

    class 1093787 "AudioFileWriter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provider for audio file writing services.  Classes providing concrete
implementations can write one or more types of audio file from an audio
stream.

@author Kara Kytle
@version 1.24, 03/12/19
@since 1.3"
      operation 8747803 "getAudioFileTypes"
	abstract public return_type class_ref 1090331 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the file types for which file writing support is provided by this
audio file writer.
@return array of file types.  If no file types are supported,
an array of length 0 is returned."
      end

      operation 8747931 "isFileTypeSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "fileType" type class_ref 1090331 // Type
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether file writing support for the specified file type is provided
by this audio file writer.
@param fileType the file type for which write capabilities are queried
@return <code>true</code> if the file type is supported,
otherwise <code>false</code>"
      end

      operation 8748059 "getAudioFileTypes"
	abstract public return_type class_ref 1090331 // Type
	nparams 1
	  param inout name "stream" type class_ref 1090715 // AudioInputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the file types that this audio file writer can write from the
audio input stream specified.
@param stream the audio input stream for which audio file type support
is queried
@return array of file types.  If no file types are supported,
an array of length 0 is returned."
      end

      operation 8748187 "isFileTypeSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "fileType" type class_ref 1090331 // Type
	  param inout name "stream" type class_ref 1090715 // AudioInputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether an audio file of the type specified can be written
from the audio input stream indicated.
@param fileType file type for which write capabilities are queried
@param stream for which file writing support is queried
@return <code>true</code> if the file type is supported for this audio input stream,
otherwise <code>false</code>"
      end

      operation 8748315 "write"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "stream" type class_ref 1090715 // AudioInputStream
	  param inout name "fileType" type class_ref 1090331 // Type
	  param inout name "out" type class_ref 183835 // OutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a stream of bytes representing an audio file of the file type
indicated to the output stream provided.  Some file types require that
the length be written into the file header, and cannot be written from
start to finish unless the length is known in advance.  An attempt
to write such a file type will fail with an IOException if the length in
the audio file format is
{@link javax.sound.sampled.AudioSystem#NOT_SPECIFIED AudioSystem.NOT_SPECIFIED}.
@param stream the audio input stream containing audio data to be
written to the output stream
@param fileType file type to be written to the output stream
@param out stream to which the file data should be written
@return the number of bytes written to the output stream
@throws IOException if an I/O exception occurs
@throws IllegalArgumentException if the file type is not supported by
the system
@see #isFileTypeSupported(AudioFileFormat.Type, AudioInputStream)
@see #getAudioFileTypes"
      end

      operation 8748443 "write"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "stream" type class_ref 1090715 // AudioInputStream
	  param inout name "fileType" type class_ref 1090331 // Type
	  param inout name "out" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a stream of bytes representing an audio file of the file format
indicated to the external file provided.
@param stream the audio input stream containing audio data to be
written to the file
@param fileType file type to be written to the file
@param out external file to which the file data should be written
@return the number of bytes written to the file
@throws IOException if an I/O exception occurs
@throws IllegalArgumentException if the file format is not supported by
the system
@see #isFileTypeSupported
@see #getAudioFileTypes"
      end
    end

    class 1093915 "FormatConversionProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A format conversion provider provides format conversion services
from one or more input formats to one or more output formats.
Converters include codecs, which encode and/or decode audio data,
as well as transcoders, etc.  Format converters provide methods for
determining what conversions are supported and for obtaining an audio
stream from which converted data can be read.
<p>
The source format represents the format of the incoming
audio data, which will be converted.
<p>
The target format represents the format of the processed, converted
audio data.  This is the format of the data that can be read from
the stream returned by one of the <code>getAudioInputStream</code> methods.

@author Kara Kytle
@version 1.29, 03/12/19
@since 1.3"
      operation 8748571 "getSourceEncodings"
	abstract public return_type class_ref 1090587 // Encoding
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NEW METHODS

Obtains the set of source format encodings from which format
conversion services are provided by this provider.
@return array of source format encodings.  The array will always
have a length of at least 1."
      end

      operation 8748699 "getTargetEncodings"
	abstract public return_type class_ref 1090587 // Encoding
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the set of target format encodings to which format
conversion services are provided by this provider.
@return array of target format encodings.  The array will always
have a length of at least 1."
      end

      operation 8748827 "isSourceEncodingSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "sourceEncoding" type class_ref 1090587 // Encoding
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the format converter supports conversion from the
specified source format encoding.
@param sourceEncoding the source format encoding for which support is queried
@return <code>true</code> if the encoding is supported, otherwise <code>false</code>"
      end

      operation 8748955 "isTargetEncodingSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "targetEncoding" type class_ref 1090587 // Encoding
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the format converter supports conversion to the
specified target format encoding.
@param targetEncoding the target format encoding for which support is queried
@return <code>true</code> if the encoding is supported, otherwise <code>false</code>"
      end

      operation 8749083 "getTargetEncodings"
	abstract public return_type class_ref 1090587 // Encoding
	nparams 1
	  param inout name "sourceFormat" type class_ref 1090459 // AudioFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the set of target format encodings supported by the format converter
given a particular source format.
If no target format encodings are supported for this source format,
an array of length 0 is returned.
@return array of supported target format encodings."
      end

      operation 8749211 "isConversionSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "targetEncoding" type class_ref 1090587 // Encoding
	  param inout name "sourceFormat" type class_ref 1090459 // AudioFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the format converter supports conversion to a particular encoding
from a particular format.
@param targetEncoding desired encoding of the outgoing data
@param sourceFormat format of the incoming data
@return <code>true</code> if the conversion is supported, otherwise <code>false</code>"
      end

      operation 8749339 "getTargetFormats"
	abstract public return_type class_ref 1090459 // AudioFormat
	nparams 2
	  param inout name "targetEncoding" type class_ref 1090587 // Encoding
	  param inout name "sourceFormat" type class_ref 1090459 // AudioFormat
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the set of target formats with the encoding specified
supported by the format converter
If no target formats with the specified encoding are supported
for this source format, an array of length 0 is returned.
@return array of supported target formats."
      end

      operation 8749467 "isConversionSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "targetFormat" type class_ref 1090459 // AudioFormat
	  param inout name "sourceFormat" type class_ref 1090459 // AudioFormat
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the format converter supports conversion to one
particular format from another.
@param targetFormat desired format of outgoing data
@param sourceFormat format of the incoming data
@return <code>true</code> if the conversion is supported, otherwise <code>false</code>"
      end

      operation 8749595 "getAudioInputStream"
	abstract public return_type class_ref 1090715 // AudioInputStream
	nparams 2
	  param inout name "targetEncoding" type class_ref 1090587 // Encoding
	  param inout name "sourceStream" type class_ref 1090715 // AudioInputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an audio input stream with the specified encoding from the given audio
input stream.
@param targetEncoding desired encoding of the stream after processing
@param sourceStream stream from which data to be processed should be read
@return stream from which processed data with the specified target encoding may be read
@throws IllegalArgumentException if the format combination supplied is
not supported."
      end

      operation 8749723 "getAudioInputStream"
	abstract public return_type class_ref 1090715 // AudioInputStream
	nparams 2
	  param inout name "targetFormat" type class_ref 1090459 // AudioFormat
	  param inout name "sourceStream" type class_ref 1090715 // AudioInputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains an audio input stream with the specified format from the given audio
input stream.
@param targetFormat desired data format of the stream after processing
@param sourceStream stream from which data to be processed should be read
@return stream from which processed data with the specified format may be read
@throws IllegalArgumentException if the format combination supplied is
not supported."
      end
    end
  end

  deploymentview 172571 "spi"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 840475 "AudioFileReader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.InputStream;
import java.io.IOException;
import java.net.URL;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.UnsupportedAudioFileException;
${definition}"
      associated_classes
	class_ref 1093659 // AudioFileReader
      end
      comment "@(#)AudioFileReader.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 840603 "AudioFileWriter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioInputStream;
${definition}"
      associated_classes
	class_ref 1093787 // AudioFileWriter
      end
      comment "@(#)AudioFileWriter.java	1.24 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 840731 "FormatConversionProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
${definition}"
      associated_classes
	class_ref 1093915 // FormatConversionProvider
      end
      comment "@(#)FormatConversionProvider.java	1.29 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 840859 "MixerProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.sound.sampled.Mixer;
${definition}"
      associated_classes
	class_ref 1092251 // MixerProvider
      end
      comment "@(#)MixerProvider.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
