class LocateRegistry
!!!7536155.java!!!	getRegistry() : Registry
	return getRegistry(null, Registry.REGISTRY_PORT);
!!!7536283.java!!!	getRegistry(in port : int) : Registry
	return getRegistry(null, port);
!!!7536411.java!!!	getRegistry(in host : String) : Registry
	return getRegistry(host, Registry.REGISTRY_PORT);
!!!7536539.java!!!	getRegistry(in host : String, in port : int) : Registry
	return getRegistry(host, port, null);
!!!7536667.java!!!	getRegistry(in host : String, in port : int, inout csf : RMIClientSocketFactory) : Registry
	Registry registry = null;

	if (port <= 0)
	    port = Registry.REGISTRY_PORT;

	if (host == null || host.length() == 0) {
	    // If host is blank (as returned by "file:" URL in 1.0.2 used in
	    // java.rmi.Naming), try to convert to real local host name so
	    // that the RegistryImpl's checkAccess will not fail.
	    try {
		host = java.net.InetAddress.getLocalHost().getHostAddress();
	    } catch (Exception e) {
		// If that failed, at least try "" (localhost) anyway...
		host = "";
	    }
	}

	/*
	 * Create a proxy for the registry with the given host, port, and
	 * client socket factory.  If the supplied client socket factory is
	 * null, then the ref type is a UnicastRef, otherwise the ref type
	 * is a UnicastRef2.  If the property
	 * java.rmi.server.ignoreStubClasses is true, then the proxy
	 * returned is an instance of a dynamic proxy class that implements
	 * the Registry interface; otherwise the proxy returned is an
	 * instance of the pregenerated stub class for RegistryImpl.
	 **/
	LiveRef liveRef =
	    new LiveRef(new ObjID(ObjID.REGISTRY_ID),
			new TCPEndpoint(host, port, csf, null),
			false);
	RemoteRef ref =
	    (csf == null) ? new UnicastRef(liveRef) : new UnicastRef2(liveRef);

	return (Registry) Util.createProxy(RegistryImpl.class, ref, false);
!!!7536795.java!!!	createRegistry(in port : int) : Registry
	return new RegistryImpl(port);
!!!7536923.java!!!	createRegistry(in port : int, inout csf : RMIClientSocketFactory, inout ssf : RMIServerSocketFactory) : Registry
	return new RegistryImpl(port, csf, ssf);
