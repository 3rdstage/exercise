format 66
"parsers" // src::javax::xml::parsers
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/xml/parsers"
  java_package "javax.xml.parsers"
  classview 153755 "parsers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 394139 "DocumentBuilder"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the API to obtain DOM Document instances from an XML
document. Using this class, an application programmer can obtain a
{@link Document} from XML.<p>

An instance of this class can be obtained from the
{@link DocumentBuilderFactory#newDocumentBuilder()} method. Once
an instance of this class is obtained, XML can be parsed from a
variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

Note that this class reuses several classes from the SAX API. This
does not require that the implementor of the underlying DOM
implementation use a SAX parser to parse XML document into a
<code>Document</code>. It merely requires that the implementation
communicate with the application using these existing APIs.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.25.14.1.2.1 $, $Date: 2004/06/28 18:23:44 $"
      operation 5369115 "DocumentBuilder"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected constructor "
      end

      operation 5369243 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>DocumentBuilder</code> to its original configuration.</p>

<p><code>DocumentBuilder</code> is reset to the same state as when it was created with
{@link DocumentBuilderFactory#newDocumentBuilder()}.
<code>reset()</code> is designed to allow the reuse of existing <code>DocumentBuilder</code>s
thus saving resources associated with the creation of new <code>DocumentBuilder</code>s.</p>

<p>The reset <code>DocumentBuilder</code> is not guaranteed to have the same {@link EntityResolver} or {@link ErrorHandler}
<code>Object</code>s, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>EntityResolver</code> and <code>ErrorHandler</code>.</p>

@since 1.5"
      end

      operation 5369371 "parse"
	public return_type class_ref 394267 // Document
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an XML
document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.
@return <code>Document</code> result of parsing the
 <code>InputStream</code>
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 5369499 "parse"
	public return_type class_ref 394267 // Document
	nparams 2
	  param inout name "is" type class_ref 179099 // InputStream
	  param in name "systemId" explicit_type "String"
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an
XML document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.
@param systemId Provide a base for resolving relative URIs.
@return A new DOM Document object.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 5369627 "parse"
	public return_type class_ref 394267 // Document
	nparams 1
	  param in name "uri" explicit_type "String"
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given URI as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
URI is <code>null</code> null.

@param uri The location of the content to be parsed.
@return A new DOM Document object.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 5369755 "parse"
	public return_type class_ref 394267 // Document
	nparams 1
	  param inout name "f" type class_ref 165147 // File
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given file as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>File</code> is <code>null</code> null.

@param f The file containing the XML to parse.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler
@return A new DOM Document object."
      end

      operation 5369883 "parse"
	abstract public return_type class_ref 394267 // Document
	nparams 1
	  param inout name "is" type class_ref 671003 // InputSource
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given input source as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputSource</code> is <code>null</code> null.

@param is InputSource containing the content to be parsed.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler
@return A new DOM Document object."
      end

      operation 5370011 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to understand
        namespaces; false otherwise."
      end

      operation 5370139 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to validate
        XML documents; false otherwise."
      end

      operation 5370267 "setEntityResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "er" type class_ref 683035 // EntityResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link EntityResolver} to be used to resolve
entities present in the XML document to be parsed. Setting
this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param er The <code>EntityResolver</code> to be used to resolve entities
          present in the XML document to be parsed."
      end

      operation 5370395 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "eh" type class_ref 682011 // ErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link ErrorHandler} to be used by the parser.
Setting this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param eh The <code>ErrorHandler</code> to be used by the parser."
      end

      operation 5370523 "newDocument"
	abstract public return_type class_ref 394267 // Document
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a DOM {@link Document} object
to build a DOM tree with.

@return A new instance of a DOM Document object."
      end

      operation 5370651 "getDOMImplementation"
	abstract public return_type class_ref 620187 // DOMImplementation
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain an instance of a {@link DOMImplementation} object.

@return A new instance of a <code>DOMImplementation</code>."
      end

      operation 5370779 "getSchema"
	public return_type class_ref 773147 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}

 <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5370907 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link DocumentBuilderFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5

@see DocumentBuilderFactory#setXIncludeAware(boolean)"
      end
    end

    class 394779 "ParserConfigurationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates a serious configuration error.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.2 $, $Date: 2003/12/06 00:21:41 $"
      classrelation 2615579 // <generalisation>
	relation 2615579 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2615579 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      operation 10083227 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with no
detail mesage."
      end

      operation 10083355 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with
the <code>String</code> specified as an error message.

@param msg The error message for the exception."
      end
    end

    class 685979 "SAXParser"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the API that wraps an {@link org.xml.sax.XMLReader}
implementation class. In JAXP 1.0, this class wrapped the
{@link org.xml.sax.Parser} interface, however this interface was
replaced by the {@link org.xml.sax.XMLReader}. For ease
of transition, this class continues to support the same name
and interface as well as supporting new methods.

An instance of this class can be obtained from the
{@link javax.xml.parsers.SAXParserFactory#newSAXParser()} method.
Once an instance of this class is obtained, XML can be parsed from
a variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

This static method creates a new factory instance based
on a system property setting or uses the platform default
if no property has been defined.<p>

The system property that controls which Factory implementation
to create is named <code>&quot;javax.xml.parsers.SAXParserFactory&quot;</code>.
This property names a class that is a concrete subclass of this
abstract class. If no property is defined, a platform default
will be used.</p>

As the content is parsed by the underlying parser, methods of the
given {@link org.xml.sax.HandlerBase} or the
{@link org.xml.sax.helpers.DefaultHandler} are called.<p>

Implementors of this class which wrap an underlaying implementation
can consider using the {@link org.xml.sax.helpers.ParserAdapter}
class to initially adapt their SAX1 impelemntation to work under
this revised class.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.28.12.1.2.1 $, $Date: 2004/05/02 04:30:56 $"
      operation 5381275 "SAXParser"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to prevent instaniation.
Use {@link javax.xml.parsers.SAXParserFactory#newSAXParser()}.</p>"
      end

      operation 5381403 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>SAXParser</code> to its original configuration.</p>

<p><code>SAXParser</code> is reset to the same state as when it was created with
{@link SAXParserFactory#newSAXParser()}.
<code>reset()</code> is designed to allow the reuse of existing <code>SAXParser</code>s
thus saving resources associated with the creation of new <code>SAXParser</code>s.</p>

<p>The reset <code>SAXParser</code> is not guaranteed to have the same {@link Schema}
<code>Object</code>, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>Schema</code>.</p>

@since 1.5"
      end

      operation 5381531 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 179099 // InputStream
	  param inout name "hb" type class_ref 774683 // HandlerBase
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws SAXException If parse produces a SAX error.
@throws IOException If an IO error occurs interacting with the
  <code>InputStream</code>.

@see org.xml.sax.DocumentHandler"
      end

      operation 5381659 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 179099 // InputStream
	  param inout name "hb" type class_ref 774683 // HandlerBase
	  param in name "systemId" explicit_type "String"
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given <code>InputStream</code> is
  <code>null</code>.
@throws IOException If any IO error occurs interacting with the
  <code>InputStream</code>.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead."
      end

      operation 5381787 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 179099 // InputStream
	  param inout name "dh" type class_ref 772763 // DefaultHandler
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5381915 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 179099 // InputStream
	  param inout name "dh" type class_ref 772763 // DefaultHandler
	  param in name "systemId" explicit_type "String"
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead."
      end

      operation 5382043 "parse"
	public explicit_return_type "void"
	nparams 2
	  param in name "uri" explicit_type "String"
	  param inout name "hb" type class_ref 774683 // HandlerBase
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the <code>HandlerBase</code> class has been deprecated in SAX 2.0</i>

@param uri The location of the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382171 "parse"
	public explicit_return_type "void"
	nparams 2
	  param in name "uri" explicit_type "String"
	  param inout name "dh" type class_ref 772763 // DefaultHandler
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param uri The location of the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382299 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 165147 // File
	  param inout name "hb" type class_ref 774683 // HandlerBase
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param f The file containing the XML to parse
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382427 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 165147 // File
	  param inout name "dh" type class_ref 772763 // DefaultHandler
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.helpers.DefaultHandler}.

@param f The file containing the XML to parse
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382555 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 671003 // InputSource
	  param inout name "hb" type class_ref 774683 // HandlerBase
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param is The InputSource containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382683 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 671003 // InputSource
	  param inout name "dh" type class_ref 772763 // DefaultHandler
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is The InputSource containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 5382811 "getParser"
	abstract public return_type class_ref 774811 // Parser
	nparams 0
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SAX parser that is encapsultated by the
implementation of this class.

@return The SAX parser that is encapsultated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing."
      end

      operation 5382939 "getXMLReader"
	abstract public return_type class_ref 670875 // XMLReader
	nparams 0
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link org.xml.sax.XMLReader} that is encapsulated by the
implementation of this class.

@return The XMLReader that is encapsulated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing."
      end

      operation 5383067 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to
        understand namespaces; false otherwise."
      end

      operation 5383195 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to
        validate XML documents; false otherwise."
      end

      operation 5383323 "setProperty"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the particular property in the underlying implementation of
{@link org.xml.sax.XMLReader}.
A list of the core features and properties can be found at
<a href=\"http://sax.sourceforge.net/?selected=get-set\">
http://sax.sourceforge.net/?selected=get-set</a>.</p>

@param name The name of the property to be set.
@param value The value of the property to be set.

@throws SAXNotRecognizedException When the underlying XMLReader does
  not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#setProperty"
      end

      operation 5383451 "getProperty"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the particular property requested for in the underlying
implementation of {@link org.xml.sax.XMLReader}.</p>

@param name The name of the property to be retrieved.
@return Value of the requested property.

@throws SAXNotRecognizedException When the underlying XMLReader does
   not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty"
      end

      operation 5383579 "getSchema"
	public return_type class_ref 773147 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}    

 <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5383707 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link SAXParserFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5

@see SAXParserFactory#setXIncludeAware(boolean)"
      end
    end

    class 773019 "DocumentBuilderFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory API that enables applications to obtain a
parser that produces DOM object trees from XML documents.

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.39.16.1 $, $Date: 2004/07/17 00:22:03 $"
      attribute 1901083 "DEFAULT_PROPERTY_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"javax.xml.parsers.DocumentBuilderFactory\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The default property name according to the JAXP spec "
      end

      attribute 1901211 "validating"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901339 "namespaceAware"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901467 "whitespace"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901595 "expandEntityRef"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901723 "ignoreComments"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901851 "coalescing"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1901979 "canonicalState"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 5365019 "DocumentBuilderFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5365147 "newInstance"
	class_operation public return_type class_ref 773019 // DocumentBuilderFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a
<code>DocumentBuilderFactory</code>. This static method creates
a new factory instance.
This method uses the following ordered lookup procedure to determine
the <code>DocumentBuilderFactory</code> implementation class to
load:
<ul>
<li>
Use the <code>javax.xml.parsers.DocumentBuilderFactory</code> system
property.
</li>
<li>
Use the properties file \"lib/jaxp.properties\" in the JRE directory.
This configuration file is in standard <code>java.util.Properties
</code> format and contains the fully qualified name of the
implementation class with the key being the system property defined
above.

The jaxp.properties file is read only once by the JAXP implementation
and it's values are then cached for future use.  If the file does not exist
when the first attempt is made to read from it, no further attempts are
made to check for its existence.  It is not possible to change the value
of any property in jaxp.properties after it has been read for the first time.
</li>
<li>
Use the Services API (as detailed in the JAR specification), if
available, to determine the classname. The Services API will look
for a classname in the file
<code>META-INF/services/javax.xml.parsers.DocumentBuilderFactory</code>
in jars available to the runtime.
</li>
<li>
Platform default <code>DocumentBuilderFactory</code> instance.
</li>
</ul>

Once an application has obtained a reference to a
<code>DocumentBuilderFactory</code> it can use the factory to
configure and obtain parser instances.


<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <tt>System.err</tt> about what it is doing and where it is looking at.</p>

<p> If you have problems loading {@link DocumentBuilder}s, try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>

@return New instance of a <code>DocumentBuilderFactory</code>

@exception FactoryConfigurationError if the implementation is not
available or cannot be instantiated."
      end

      operation 5365275 "newDocumentBuilder"
	abstract public return_type class_ref 394139 // DocumentBuilder
	nparams 0
	nexceptions 1
	  exception class_ref 394779 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of a {@link javax.xml.parsers.DocumentBuilder}
using the currently configured parameters.

@exception ParserConfigurationException if a DocumentBuilder
cannot be created which satisfies the configuration requested.
@return A new instance of a DocumentBuilder."
      end

      operation 5365403 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>

@param awareness true if the parser produced will provide support
                 for XML namespaces; false otherwise."
      end

      operation 5365531 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this
is set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.
See <a href=\"#validationCompatibility\">here</a> for more details.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <tt>false</tt>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced will validate documents
                  as they are parsed; false otherwise."
      end

      operation 5365659 "setIgnoringElementContentWhitespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "whitespace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parsers created by this  factory must eliminate
whitespace in element content (sometimes known loosely as
'ignorable whitespace') when parsing XML documents (see XML Rec
2.10). Note that only whitespace which is directly contained within
element content that has an element only content model (see XML
Rec 3.2.1) will be eliminated. Due to reliance on the content model
this setting requires the parser to be in validating mode. By default
the value of this is set to <code>false</code>.

@param whitespace true if the parser created must eliminate whitespace
                  in the element content when parsing XML documents;
                  false otherwise."
      end

      operation 5365787 "setExpandEntityReferences"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expandEntityRef" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
expand entity reference nodes. By default the value of this is set to
<code>true</code>

@param expandEntityRef true if the parser produced will expand entity
                       reference nodes; false otherwise."
      end

      operation 5365915 "setIgnoringComments"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignoreComments" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Specifies that the parser produced by this code will
ignore comments. By default the value of this is set to <code>false
</code>.</p>

@param ignoreComments <code>boolean</code> value to ignore comments during processing"
      end

      operation 5366043 "setCoalescing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "coalescing" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
convert CDATA nodes to Text nodes and append it to the
adjacent (if any) text node. By default the value of this is set to
<code>false</code>

@param coalescing  true if the parser produced will convert CDATA nodes
                   to Text nodes and append it to the adjacent (if any)
                   text node; false otherwise."
      end

      operation 5366171 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return  true if the factory is configured to produce parsers which
         are namespace aware; false otherwise."
      end

      operation 5366299 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return  true if the factory is configured to produce parsers
         which validate the XML content during parse; false otherwise."
      end

      operation 5366427 "isIgnoringElementContentWhitespace"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignore ignorable whitespace in element content.

@return  true if the factory is configured to produce parsers
         which ignore ignorable whitespace in element content;
         false otherwise."
      end

      operation 5366555 "isExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which expand entity reference nodes.

@return  true if the factory is configured to produce parsers
         which expand entity reference nodes; false otherwise."
      end

      operation 5366683 "isIgnoringComments"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignores comments.

@return  true if the factory is configured to produce parsers
         which ignores comments; false otherwise."
      end

      operation 5366811 "isCoalescing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which converts CDATA nodes to Text nodes and appends it to
the adjacent (if any) Text node.

@return  true if the factory is configured to produce parsers
         which converts CDATA nodes to Text nodes and appends it to
         the adjacent (if any) Text node; false otherwise."
      end

      operation 5366939 "setAttribute"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to set specific attributes on the underlying
implementation.
@param name The name of the attribute.
@param value The value of the attribute.
@exception IllegalArgumentException thrown if the underlying
implementation doesn't recognize the attribute."
      end

      operation 5367067 "getAttribute"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to retrieve specific attributes on the underlying
implementation.
@param name The name of the attribute.
@return value The value of the attribute.
@exception IllegalArgumentException thrown if the underlying
implementation doesn't recognize the attribute."
      end

      operation 5367195 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 394779 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>DocumentBuilderFactory</code> and <code>DocumentBuilder</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for an <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

<p>
All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is:</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include enity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
   {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link  DocumentBuilder#setErrorHandler(org.xml.sax.ErrorHandler errorHandler)}.
  </li>
  <li>
    <code>false</code>: the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.
 
@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code> or the <code>DocumentBuilder</code>s
  it creates cannot support this feature.
@throws NullPointerException If the <code>name</code> parameter is null."
      end

      operation 5367323 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 394779 // ParserConfigurationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for an <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code>
  or the <code>DocumentBuilder</code>s it creates cannot support this feature."
      end

      operation 5367451 "getSchema"
	public return_type class_ref 773147 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}


Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.


@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link SAXParserFactory}
     is created.

@since 1.5"
      end

      operation 5367579 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 773147 // Schema
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Set canonicalization control to <code>true</code> or
</code>false</code>.</p>

@param state of canonicalization


public void setCanonicalization(boolean state) {
canonicalState = state;
}


<p>Set the {@link Schema} to be used by parsers created
from this factory.

<p>
When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.

<p>When errors are found by the validator, the parser is responsible
to report them to the user-specified {@link org.w3c.dom.DOMErrorHandler}
(or if the error handler is not set, ignore them or throw them), just
like any other errors found by the parser itself.
In other words, if the user-specified {@link org.w3c.dom.DOMErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>
A validator may modify the outcome of a parse (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
modified DOM trees.  

<p>
Initialy, null is set as the {@link Schema}. 

<p>
This processing will take effect even if
the {@link #isValidating()} method returns <tt>false</tt>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a {@link Schema} object.
Such configuration will cause a {@link ParserConfigurationException}
exception when the {@link #newDocumentBuilder()} is invoked.</p>

 
<h4>Note for implmentors</h4>
<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.

@param schema <code>Schema</code> to use or <code>null</code> to remove a schema.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5367707 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5367835 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end
    end

    class 774427 "SAXParserFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory API that enables applications to configure and
obtain a SAX based parser to parse XML documents.

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.39 $, $Date: 2004/04/20 00:22:02 $"
      attribute 1902875 "DEFAULT_PROPERTY_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"javax.xml.parsers.SAXParserFactory\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The default property name according to the JAXP spec "
      end

      attribute 1903003 "validating"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Should Parsers be validating?</p>
"
      end

      attribute 1903131 "namespaceAware"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Should Parsers be namespace aware?</p>
"
      end

      operation 5378587 "SAXParserFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to force use of {@link #newInstance()}.</p>"
      end

      operation 5378715 "newInstance"
	class_operation public return_type class_ref 774427 // SAXParserFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a <code>SAXParserFactory</code>. This
static method creates a new factory instance
This method uses the following ordered lookup procedure to determine
the <code>SAXParserFactory</code> implementation class to
load:
<ul>
<li>
Use the <code>javax.xml.parsers.SAXParserFactory</code> system
property.
</li>
<li>
Use the properties file \"lib/jaxp.properties\" in the JRE directory.
This configuration file is in standard <code>java.util.Properties
</code> format and contains the fully qualified name of the
implementation class with the key being the system property defined
above.

The jaxp.properties file is read only once by the JAXP implementation
and it's values are then cached for future use.  If the file does not exist
when the first attempt is made to read from it, no further attempts are
made to check for its existence.  It is not possible to change the value
of any property in jaxp.properties after it has been read for the first time.
</li>
<li>
Use the Services API (as detailed in the JAR specification), if
available, to determine the classname. The Services API will look
for a classname in the file
<code>META-INF/services/javax.xml.parsers.SAXParserFactory</code>
in jars available to the runtime.
</li>
<li>
Platform default <code>SAXParserFactory</code> instance.
</li>
</ul>

Once an application has obtained a reference to a
<code>SAXParserFactory</code> it can use the factory to
configure and obtain parser instances.



<h2>Tip for Trouble-shooting</h2>
<p>Setting the <code>jaxp.debug</code> system property will cause
this method to print a lot of debug messages
to <tt>System.err</tt> about what it is doing and where it is looking at.</p>

<p> If you have problems loading {@link DocumentBuilder}s, try:</p>
<pre>
java -Djaxp.debug=1 YourProgram ....
</pre>


@return A new instance of a SAXParserFactory.

@exception FactoryConfigurationError if the implementation is
not available or cannot be instantiated."
      end

      operation 5378843 "newSAXParser"
	abstract public return_type class_ref 685979 // SAXParser
	nparams 0
	nexceptions 2
	  exception class_ref 394779 // ParserConfigurationException
	  exception class_ref 394907 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new instance of a SAXParser using the currently
configured factory parameters.</p>

@return A new instance of a SAXParser.

@exception ParserConfigurationException if a parser cannot
  be created which satisfies the requested configuration.
@exception SAXException for SAX errors."
      end

      operation 5378971 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>.

@param awareness true if the parser produced by this code will
                 provide support for XML namespaces; false otherwise."
      end

      operation 5379099 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this is
set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.
See <a href=\"#validationCompatibility\">here</a> for more details.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <tt>false</tt>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced by this code will
                  validate documents as they are parsed; false otherwise."
      end

      operation 5379227 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return true if the factory is configured to produce
        parsers which are namespace aware; false otherwise."
      end

      operation 5379355 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return true if the factory is configured to produce parsers which validate
        the XML content during parse; false otherwise."
      end

      operation 5379483 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 3
	  exception class_ref 394779 // ParserConfigurationException
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Sets the particular feature in the underlying implementation of
org.xml.sax.XMLReader.
A list of the core features and properties can be found at
<a href=\"http://www.saxproject.org/\">http://www.saxproject.org/</a></p>

<p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include enity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
    {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link SAXParser} <code>parse</code> methods for handler specification.
  </li>
  <li>
    When the feature is <code>false</code>, the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name The name of the feature to be set.
@param value The value of the feature to be set.

@exception ParserConfigurationException if a parser cannot
    be created which satisfies the requested configuration.
@exception SAXNotRecognizedException When the underlying XMLReader does
           not recognize the property name.
@exception SAXNotSupportedException When the underlying XMLReader
           recognizes the property name but doesn't support the
           property.
@throws NullPointerException If the <code>name</code> parameter is null.

@see org.xml.sax.XMLReader#setFeature"
      end

      operation 5379611 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 3
	  exception class_ref 394779 // ParserConfigurationException
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Returns the particular property requested for in the underlying
implementation of org.xml.sax.XMLReader.</p>

@param name The name of the property to be retrieved.

@return Value of the requested property.

@exception ParserConfigurationException if a parser cannot be created which satisfies the requested configuration.
@exception SAXNotRecognizedException When the underlying XMLReader does not recognize the property name.
@exception SAXNotSupportedException When the underlying XMLReader recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty"
      end

      operation 5379739 "getSchema"
	public return_type class_ref 773147 // Schema
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get current state of canonicalization.</p>

@return current state canonicalization control


public boolean getCanonicalization() {
return canonicalState;
}


Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.


@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link SAXParserFactory}
     is created.

@since 1.5"
      end

      operation 5379867 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 773147 // Schema
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Set canonicalization control to <code>true</code> or
</code>false</code>.</p>

@param state of canonicalization


public void setCanonicalization(boolean state) {
canonicalState = state;
}


<p>Set the {@link Schema} to be used by parsers created
from this factory.</p>

<p>When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.</p>

<p>When warnings/errors/fatal errors are found by the validator, the parser must
handle them as if those errors were found by the parser itself. 
In other words, if the user-specified {@link org.xml.sax.ErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>A validator may modify the SAX event stream (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
those modified event stream.</p>  

<p>Initialy, <code>null</code> is set as the {@link Schema}.</p> 

<p>This processing will take effect even if
the {@link #isValidating()} method returns <code>false</code>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a non-null {@link Schema} object.
Such configuration will cause a {@link SAXException}
exception when those properties are set on a {@link SAXParser}.</p>

<h4>Note for implmentors</h4>
<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.
</p>

@param schema <code>Schema</code> to use, <code>null</code> to remove a schema.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5379995 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 5380123 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end
    end

    class 1215003 "FactoryConfigurationError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a problem with configuration with the Parser Factories
exists. This error will typically be thrown when the class of a
parser factory specified in the system properties cannot be found
or instantiated.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.2 $, $Date: 2003/12/06 00:21:42 $"
      classrelation 2614811 // <generalisation>
	relation 2614811 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2614811 // <generalisation>
	  b parent class_ref 221851 // Error
      end

      classrelation 2614939 // exception (<unidirectional association>)
	relation 2614939 --->
	  a role_name "exception" private
	    comment "
<code>Exception</code> that represents the error.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614939 // exception (<unidirectional association>)
	  b parent class_ref 165403 // Exception
      end

      operation 10081691 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with no
detail mesage."
      end

      operation 10081819 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with
the <code>String </code> specified as an error message.

@param msg The error message for the exception."
      end

      operation 10081947 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with a
given <code>Exception</code> base cause of the error.

@param e The exception to be encapsulated in a
FactoryConfigurationError."
      end

      operation 10082075 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 165403 // Exception
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with the
given <code>Exception</code> base cause and detail message.

@param e The exception to be encapsulated in a
FactoryConfigurationError
@param msg The detail message."
      end

      operation 10082203 "getMessage"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the message (if any) for this error . If there is no
message for the exception and there is an encapsulated
exception then the message of that exception, if it exists will be 
returned. Else the name of the encapsulated exception will be
returned.

@return The error message."
      end

      operation 10082331 "getException"
	public return_type class_ref 165403 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual exception (if any) that caused this exception to
be raised.

@return The encapsulated exception, or null if there is none."
      end
    end

    class 1215131 "FactoryFinder"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is duplicated for each JAXP subpackage so keep it in
sync.  It is package private.

This code is designed to implement the JAXP 1.1 spec pluggability
feature and is designed to run on JDK version 1.1 and later including
JVMs that perform early linking like the Microsoft JVM in IE 5.  Note
however that it must be compiled on a JDK version 1.2 or later system
since it calls Thread#getContextClassLoader().  The code also runs both
as part of an unbundled jar file and when bundled as part of the JDK."
      attribute 3388059 "debug"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temp debug code - this will be removed after we test everything
"
      end

      classrelation 2615067 // cacheProps (<unidirectional association>)
	relation 2615067 --->
	  a role_name "cacheProps" init_value "=  new Properties()" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615067 // cacheProps (<unidirectional association>)
	  b parent class_ref 154907 // Properties
      end

      classrelation 2615195 // ss (<unidirectional association>)
	relation 2615195 --->
	  a role_name "ss" init_value "=  new SecuritySupport() " class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615195 // ss (<unidirectional association>)
	  b parent class_ref 1215259 // SecuritySupport
      end

      attribute 3388187 "firstTime"
	class_attribute package explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 177051 "initialization"
	
	cpp "" ""
	java "  static {
        // Use try/catch block to support applets, which throws
        // SecurityException out of this code.
        try {
            String val = ss.getSystemProperty(\"jaxp.debug\");
            // Allow simply setting the prop to turn on debug
            debug = val != null && (! \"false\".equals(val));
        } catch (SecurityException se) {
            debug = false;
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 10082459 "dPrint"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10082587 "newInstance"
	class_operation private explicit_return_type "Object"
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "cl" type class_ref 163611 // ClassLoader
	  param inout name "doFallback" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1215387 // ConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a class using the specified ClassLoader and
optionally fall back to the current ClassLoader if not found.

@param className Name of the concrete class corresponding to the
service provider

@param cl ClassLoader to use to load the class, null means to use
the bootstrap ClassLoader

@param doFallback true if the current ClassLoader should be tried as
a fallback if the class is not found using cl"
      end

      class 1215387 "ConfigurationError"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2615323 // <generalisation>
	  relation 2615323 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2615323 // <generalisation>
	    b parent class_ref 221851 // Error
	end

	classrelation 2615451 // exception (<unidirectional association>)
	  relation 2615451 --->
	    a role_name "exception" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2615451 // exception (<unidirectional association>)
	    b parent class_ref 165403 // Exception
	end

	operation 10082971 "ConfigurationError"
	  package explicit_return_type ""
	  nparams 2
	    param in name "msg" explicit_type "String"
	    param inout name "x" type class_ref 165403 // Exception
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new instance with the specified detail string and
exception."
	end

	operation 10083099 "getException"
	  package return_type class_ref 165403 // Exception
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10082715 "find"
	class_operation package explicit_return_type "Object"
	nparams 2
	  param in name "factoryId" explicit_type "String"
	  param in name "fallbackClassName" explicit_type "String"
	nexceptions 1
	  exception class_ref 1215387 // ConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the implementation Class object in the specified order.  Main
entry point.
@return Class object of factory, never null

@param factoryId             Name of the factory to find, same as
                             a property name
@param fallbackClassName     Implementation class name, if nothing else
                             is found.  Use null to mean no fallback.

Package private so this code can be shared."
      end

      operation 10082843 "findJarServiceProvider"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param in name "factoryId" explicit_type "String"
	nexceptions 1
	  exception class_ref 1215387 // ConfigurationError
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to find provider using Jar Service Provider Mechanism

@return instance of provider class if found or null"
      end
    end

    class 1215259 "SecuritySupport"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is duplicated for each JAXP subpackage so keep it in sync.
It is package private and therefore is not exposed as part of the JAXP
API.

Security related methods that only work on J2SE 1.2 and newer."
      operation 10083483 "getContextClassLoader"
	package return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10083611 "getSystemProperty"
	package explicit_return_type "String"
	nparams 1
	  param in name "propName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10083739 "getFileInputStream"
	package return_type class_ref 635547 // FileInputStream
	nparams 1
	  param in name "file" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 509851 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10083867 "getResourceAsStream"
	package return_type class_ref 179099 // InputStream
	nparams 2
	  param in name "cl" type class_ref 163611 // ClassLoader
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10083995 "doesFileExist"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 162459 "parsers"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 557083 "DocumentBuilderFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
${definition}"
      associated_classes
	class_ref 773019 // DocumentBuilderFactory
      end
      comment " $Id: DocumentBuilderFactory.java,v 1.39.16.1 2004/07/17 00:22:03 jsuttor Exp $

@(#)DocumentBuilderFactory.java	1.39 04/07/27

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 557339 "DocumentBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.w3c.dom.Document;
import org.w3c.dom.DOMImplementation;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
${definition}"
      associated_classes
	class_ref 394139 // DocumentBuilder
      end
      comment " $Id: DocumentBuilder.java,v 1.25.14.1.2.1 2004/06/28 18:23:44 ndw Exp $

@(#)DocumentBuilder.java	1.19 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 557979 "SAXParserFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_classes
	class_ref 774427 // SAXParserFactory
      end
      comment " $Id: SAXParserFactory.java,v 1.39 2004/04/20 00:22:02 kk122374 Exp $

@(#)SAXParserFactory.java	1.41 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 558235 "SAXParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;
${definition}"
      associated_classes
	class_ref 685979 // SAXParser
      end
      comment " $Id: SAXParser.java,v 1.28.12.1.2.1 2004/05/02 04:30:56 jsuttor Exp $

@(#)SAXParser.java	1.19 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 900891 "FactoryConfigurationError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1215003 // FactoryConfigurationError
      end
      comment " $Id: FactoryConfigurationError.java,v 1.2 2003/12/06 00:21:42 jsuttor Exp $

@(#)FactoryConfigurationError.java	1.12 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 901019 "FactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.util.Properties;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
${definition}"
      associated_classes
	class_ref 1215131 // FactoryFinder
      end
      comment " $Id: FactoryFinder.java,v 1.7 2004/03/17 10:31:30 nb131165 Exp $

@(#)FactoryFinder.java	1.8 06/09/06

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 901147 "ParserConfigurationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 394779 // ParserConfigurationException
      end
      comment " $Id: ParserConfigurationException.java,v 1.2 2003/12/06 00:21:41 jsuttor Exp $

@(#)ParserConfigurationException.java	1.12 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 901275 "SecuritySupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.net.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_classes
	class_ref 1215259 // SecuritySupport
      end
      comment "@(#)SecuritySupport.java	1.2 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
