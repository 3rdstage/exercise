class TraceImplementation
!!!3548955.java!!!	newDestination(in level : int) : TraceImplementation
      try {
	  final TraceImplementation impl = new TraceImplementation();
	  impl.level = level;
	  return impl;
      } catch (IOException x) {
	  return null;
      }
!!!3549083.java!!!	init() : void
    Trace.setDestination(new TraceImplementation());
!!!3549211.java!!!	init(in level : int) : void
      final TraceImplementation impl = new TraceImplementation();
      impl.level = level;
      Trace.setDestination(impl);
!!!3549339.java!!!	TraceImplementation()
    String filename;
    if ((filename = System.getProperty("com.sun.jmx.trace.file")) != null)
    {
      // Output sent to the specified log file
      //
      this.out = new PrintWriter(new FileOutputStream(filename), true);
    }
    else
    {
      // Output sent to the system console
      //
      this.out = new PrintWriter(System.err, true);
    }

    String level;
    if ((level = System.getProperty("com.sun.jmx.trace.level")) != null)
    {
      // Read log level from value of system property
      //
      if (level.equals("DEBUG"))
      {
        this.level = TraceTags.LEVEL_DEBUG;
      }
      else if (level.equals("TRACE"))
      {
        this.level = TraceTags.LEVEL_TRACE;
      }
      else 
      {
        this.level = TraceTags.LEVEL_ERROR;
      }
    }
    else
    {
      // Log level defaults to ERROR
      //
      this.level = TraceTags.LEVEL_ERROR;
    }
!!!3549467.java!!!	isSelected(in level : int, in type : int) : boolean
    return (level <= this.level);
!!!3549595.java!!!	send(in level : int, in type : int, in className : String, in methodName : String, in info : String) : boolean
    if (isSelected(level, type))
    {
      out.println(((className!=null)?"Class:  " + className:"")+ 
                  ((methodName!=null)?"\nMethod: " + methodName:"") +
                  "\n\tlevel:   " + getLevel(level) +
                  "\n\ttype:    " + getType(type) +
                  "\n\tmessage: " + info);
      //out.flush();
      return true;
    }
    return false;
!!!3549723.java!!!	send(in level : int, in type : int, in className : String, in methodName : String, inout exception : Throwable) : boolean
      final boolean result = send(level, type, className, methodName, 
				  exception.toString());
      if (result) 
	  exception.printStackTrace(out);
      
      return result;
!!!3549851.java!!!	reset() : void

!!!3549979.java!!!	getType(in type : int) : String
       
    switch (type) {
    
    case TraceTags.INFO_MBEANSERVER:
      return "INFO_MBEANSERVER";

    case TraceTags.INFO_ADAPTOR_SNMP:
      return "INFO_ADAPTOR_SNMP";

    case TraceTags.INFO_SNMP:
      return "INFO_SNMP";

    case TraceTags.INFO_MLET:
      return "INFO_MLET";

    case TraceTags.INFO_MONITOR:
      return "INFO_MONITOR";

    case TraceTags.INFO_TIMER:
      return "INFO_TIMER";

    case TraceTags.INFO_MISC:
      return "INFO_MISC";

    case TraceTags.INFO_NOTIFICATION:
      return "INFO_NOTIFICATION";

    case TraceTags.INFO_RELATION:
      return "INFO_RELATION";
   
    case TraceTags.INFO_MODELMBEAN:
      return "INFO_MODELMBEAN";

    default:
      return "UNKNOWN_TRACE_TYPE";
    }
!!!3550107.java!!!	getLevel(in level : int) : String
    
    switch (level) {
    
    case TraceTags.LEVEL_ERROR:
      return "LEVEL_ERROR";

    case TraceTags.LEVEL_TRACE:
      return "LEVEL_TRACE";

    case TraceTags.LEVEL_DEBUG:
      return "LEVEL_DEBUG";

    default :
      return "UNKNOWN_TRACE_LEVEL";
    }
