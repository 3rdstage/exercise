format 66
"serial" // src::javax::sql::rowset::serial
  revision 1
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/sql/rowset/serial"
  java_package "javax.sql.rowset.serial"
  classview 179227 "serial"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1097499 "SerialArray"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized version of an <code>Array</code>
object, which is the mapping in the Java programming language of an SQL 
<code>ARRAY</code> value.
<P>
The <code>SerialArray</code> class provides a constructor for creating
a <code>SerialArray</code> instance from an <code>Array</code> object,
methods for getting the base type and the SQL name for the base type, and
methods for copying all or part of a <code>SerialArray</code> object.
<P>
Note: In order for this class to function correctly, a connection to the
data source 
must be available in order for the SQL <code>Array</code> object to be 
materialized (have all of its elements brought to the client server)
if necessary. At this time, logical pointers to the data in the data source,
such as locators, are not currently supported. "
      classrelation 2232475 // <realization>
	relation 2232475 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2232475 // <realization>
	  b parent class_ref 979867 // Array
      end

      classrelation 2232603 // <realization>
	relation 2232603 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2232603 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2232731 // <realization>
	relation 2232731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2232731 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3163675 "elements"
	private explicit_type "Object"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A serialized array in which each element is an <code>Object</code>
in the Java programming language that represents an element
in the SQL <code>ARRAY</code> value. 
@serial
"
      end

      attribute 3163803 "baseType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SQL type of the elements in this <code>SerialArray</code> object.  The
type is expressed as one of the constants from the class 
<code>java.sql.Types</code>.
@serial
"
      end

      attribute 3163931 "baseTypeName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The type name used by the DBMS for the elements in the SQL <code>ARRAY</code>
value that this <code>SerialArray</code> object represents. 
@serial
"
      end

      attribute 3164059 "len"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of elements in this <code>SerialArray</code> object, which
is also the number of elements in the SQL <code>ARRAY</code> value
that this <code>SerialArray</code> object represents.
@serial
"
      end

      operation 8791195 "SerialArray"
	public explicit_return_type ""
	nparams 2
	  param inout name "array" type class_ref 979867 // Array
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialArray</code> object from the given
<code>Array</code> object, using the given type map for the custom
mapping of each element when the elements are SQL UDTs.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive, 
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.
<P>
The new <code>SerialArray</code>
object contains the same elements as the <code>Array</code> object 
from which it is built, except when the base type is the SQL type
<code>STRUCT</code>, <code>ARRAY</code>, <code>BLOB</code>, 
<code>CLOB</code>, <code>DATALINK</code> or <code>JAVA_OBJECT</code>.  
In this case, each element in the new 
<code>SerialArray</code> object is the appropriate serialized form,
that is, a <code>SerialStruct</code>, <code>SerialArray</code>,
<code>SerialBlob</code>, <code>SerialClob</code>, 
<code>SerialDatalink</code>, or <code>SerialJavaObject</code> object.
<P> 
Note: (1) The <code>Array</code> object from which a <code>SerialArray</code>
object is created must have materialized the SQL <code>ARRAY</code> value's
data on the client before it is passed to the constructor.  Otherwise,
the new <code>SerialArray</code> object will contain no data.
<p>
Note: (2) If the <code>Array</code> contains <code>java.sql.Types.JAVA_OBJECT</code>
types, the <code>SerialJavaObject</code> constructor is called where checks
are made to ensure this object is serializable. 
<p>
Note: (3) The <code>Array</code> object supplied to this constructor cannot
return <code>null</code> for any <code>Array.getArray()</code> methods. 
<code>SerialArray</code> cannot serialize null array values.


@param array the <code>Array</code> object to be serialized
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT (an SQL structured type or
       distinct type) and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped. The <i>map</i> 
       parameter does not have any effect for <code>Blob</code>, 
       <code>Clob</code>, <code>DATALINK</code>, or 
       <code>JAVA_OBJECT</code> types.
@throws SerialException if an error occurs serializing the 
       <code>Array</code> object
@throws SQLException if a database access error occurs or if the 
       <i>array</i> or the <i>map</i> values are <code>null</code>"
      end

      operation 8791323 "SerialArray"
	public explicit_return_type ""
	nparams 1
	  param inout name "array" type class_ref 979867 // Array
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialArray</code> object from the given
<code>Array</code> object.
<P>
This constructor does not do custom mapping.  If the base type of the array
is an SQL structured type and custom mapping is desired, the constructor
<code>SerialArray(Array array, Map map)</code> should be used.
<P>
The new <code>SerialArray</code>
object contains the same elements as the <code>Array</code> object 
from which it is built, except when the base type is the SQL type
<code>BLOB</code>, 
<code>CLOB</code>, <code>DATALINK</code> or <code>JAVA_OBJECT</code>.  
In this case, each element in the new 
<code>SerialArray</code> object is the appropriate serialized form,
that is, a <code>SerialBlob</code>, <code>SerialClob</code>,
<code>SerialDatalink</code>, or <code>SerialJavaObject</code> object.
<P> 
Note: (1) The <code>Array</code> object from which a <code>SerialArray</code>
object is created must have materialized the SQL <code>ARRAY</code> value's
data on the client before it is passed to the constructor.  Otherwise,
the new <code>SerialArray</code> object will contain no data.
<p>
Note: (2) The <code>Array</code> object supplied to this constructor cannot
return <code>null</code> for any <code>Array.getArray()</code> methods. 
<code>SerialArray</code> cannot serialize <code>null</code> array values.

@param array the <code>Array</code> object to be serialized
@throws SerialException if an error occurs serializing the 
    <code>Array</code> object
@throws SQLException if a database access error occurs or the 
    <i>array</i> parameter is <code>null</code>.         "
      end

      operation 8791451 "getArray"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of this <code>SerialArray</code> 
object.

@return a copy of this <code>SerialArray</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if an error occurs retrieving a copy of
        this <code>SerialArray</code> object"
      end

      operation 8791579 "getArray"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[if an error occurstype map used??]

Returns a new array that is a copy of this <code>SerialArray</code> 
object, using the given type map for the custom
mapping of each element when the elements are SQL UDTs.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive, 
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a copy of this <code>SerialArray</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if an error occurs"
      end

      operation 8791707 "getArray"
	public explicit_return_type "Object"
	nparams 2
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of a slice 
of this <code>SerialArray</code> object, starting with the
element at the given index and containing the given number
of consecutive elements.

@param index the index into this <code>SerialArray</code> object
             of the first element to be copied; 
             the index of the first element is <code>0</code>  
@param count the number of consecutive elements to be copied, starting
             at the given index
@return a copy of the designated elements in this <code>SerialArray</code>
        object as an <code>Object</code> in the Java programming language
@throws SerialException if an error occurs"
      end

      operation 8791835 "getArray"
	public explicit_return_type "Object"
	nparams 3
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,Class<?>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new array that is a copy of a slice 
of this <code>SerialArray</code> object, starting with the
element at the given index and containing the given number
of consecutive elements.
<P>
This method does custom mapping if the array elements are a UDT
and the given type map has an entry for that UDT.
Custom mapping is recursive, 
meaning that if, for instance, an element of an SQL structured type
is an SQL structured type that itself has an element that is an SQL
structured type, each structured type that has a custom mapping will be
mapped according to the given type map.

@param index the index into this <code>SerialArray</code> object
             of the first element to be copied; the index of the 
             first element in the array is <code>0</code>  
@param count the number of consecutive elements to be copied, starting
             at the given index
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a copy of the designated elements in this <code>SerialArray</code>
        object as an <code>Object</code> in the Java programming language
@throws SerialException if an error occurs"
      end

      operation 8791963 "getBaseType"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the SQL type of the elements in this <code>SerialArray</code>
object.  The <code>int</code> returned is one of the constants in the class
<code>java.sql.Types</code>.

@return one of the constants in <code>java.sql.Types</code>, indicating
        the SQL type of the elements in this <code>SerialArray</code> object
@throws SerialException if an error occurs"
      end

      operation 8792091 "getBaseTypeName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the DBMS-specific type name for the elements in this
<code>SerialArray</code> object.

@return the SQL type name used by the DBMS for the base type of this
        <code>SerialArray</code> object
@throws SerialException if an error occurs"
      end

      operation 8792219 "getResultSet"
	public return_type class_ref 980123 // ResultSet
	nparams 2
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a <code>ResultSet</code> object holding the elements of 
the subarray that starts at
index <i>index</i> and contains up to <i>count</i> successive elements. 
This method uses the connection's type map to map the elements of 
the array if the map contains
an entry for the base type. Otherwise, the standard mapping is used.  
    
@param index the index into this <code>SerialArray</code> object	
        of the first element to be copied; the index of the 	
        first element in the array is <code>0</code>  	
@param count the number of consecutive elements to be copied, starting	
        at the given index	
@return a <code>ResultSet</code> object containing the designated	
        elements in this <code>SerialArray</code> object, with a	
        separate row for each element	
@throws SerialException, which in turn throws an	
        <code>UnsupportedOperationException</code>, if this method is called     "
      end

      operation 8792347 "getResultSet"
	public return_type class_ref 980123 // ResultSet
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Retrieves a <code>ResultSet</code> object that contains all of 
the elements of the SQL <code>ARRAY</code>
value represented by this <code>SerialArray</code> object. This method uses 
the specified map for type map customizations unless the base type of the
array does not match a user-defined type (UDT) in <i>map</code>, in
which case it uses the
standard mapping. This version of the method <code>getResultSet</code>
uses either the given type map or the standard mapping; it never uses the
type map associated with the connection.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return a <code>ResultSet</code> object containing all of the	
        elements in this <code>SerialArray</code> object, with a	
        separate row for each element	
@throws SerialException, which in turn throws an	
        <code>UnsupportedOperationException</code>, if this method is called	"
      end

      operation 8792475 "getResultSet"
	public return_type class_ref 980123 // ResultSet
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a <code>ResultSet</code> object that contains all of
the elements in the <code>ARRAY</code> value that this 
<code>SerialArray</code> object represents. 
If appropriate, the elements of the array are mapped using the connection's 
type map; otherwise, the standard mapping is used.          

@return a <code>ResultSet</code> object containing all of the 
        elements in this <code>SerialArray</code> object, with a	
        separate row for each element
@throws SerialException if called, which in turn throws an	
        <code>UnsupportedOperationException</code>, if this method is called	"
      end

      operation 8792603 "getResultSet"
	public return_type class_ref 980123 // ResultSet
	nparams 3
	  param in name "index" explicit_type "long"
	  param in name "count" explicit_type "int"
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,Class<?>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a result set holding the elements of the subarray that starts at
Retrieves a <code>ResultSet</code> object that contains a subarray of the
elements in this <code>SerialArray</code> object, starting at 
index <i>index</i> and containing up to <i>count</i> successive 
elements. This method uses
the specified map for type map customizations unless the base type of the 
array does not match a user-defined type (UDT) in <i>map</i>, in
which case it uses the
standard mapping. This version of the method <code>getResultSet</code> uses
either the given type map or the standard mapping; it never uses the type
map associated with the connection.

@param index the index into this <code>SerialArray</code> object	
             of the first element to be copied; the index of the 	
             first element in the array is <code>0</code>  	
@param count the number of consecutive elements to be copied, starting	
             at the given index     
@param map a <code>java.util.Map</code> object in which     
       each entry consists of 1) a <code>String</code> object     
       giving the fully qualified name of a UDT and 2) the     
       <code>Class</code> object for the <code>SQLData</code> implementation     
       that defines how the UDT is to be mapped	
@return a <code>ResultSet</code> object containing the designated	
        elements in this <code>SerialArray</code> object, with a	
        separate row for each element	
@throws SerialException if called, which in turn throws an	
        <code>UnsupportedOperationException</code>"
      end

      class 1097755 "InternalResultSetImpl"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2232859 // <realization>
	  relation 2232859 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2232859 // <realization>
	    b parent class_ref 980123 // ResultSet
	end

	operation 8792731 "absolute"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "row" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8792859 "afterLast"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8792987 "beforeFirst"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793115 "cancelRowUpdates"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793243 "clearWarnings"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793371 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793499 "deleteRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793627 "findColumn"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793755 "first"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8793883 "getArray"
	  public return_type class_ref 979867 // Array
	  nparams 1
	    param in name "i" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794011 "getArray"
	  public return_type class_ref 979867 // Array
	  nparams 1
	    param in name "colName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794139 "getAsciiStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794267 "getAsciiStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794395 "getBigDecimal"
	  public return_type class_ref 178459 // BigDecimal
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794523 "getBigDecimal"
	  public return_type class_ref 178459 // BigDecimal
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794651 "getBigDecimal"
	  public return_type class_ref 178459 // BigDecimal
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "scale" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794779 "getBigDecimal"
	  public return_type class_ref 178459 // BigDecimal
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "scale" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8794907 "getBinaryStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795035 "getBinaryStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795163 "getBlob"
	  public return_type class_ref 980379 // Blob
	  nparams 1
	    param in name "i" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795291 "getBlob"
	  public return_type class_ref 980379 // Blob
	  nparams 1
	    param in name "colName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795419 "getBoolean"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795547 "getBoolean"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795675 "getByte"
	  public explicit_return_type "byte"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795803 "getByte"
	  public explicit_return_type "byte"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8795931 "getBytes"
	  public explicit_return_type "byte"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796059 "getBytes"
	  public explicit_return_type "byte"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796187 "getCharacterStream"
	  public return_type class_ref 364827 // Reader
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796315 "getCharacterStream"
	  public return_type class_ref 364827 // Reader
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796443 "getClob"
	  public return_type class_ref 981659 // Clob
	  nparams 1
	    param in name "i" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796571 "getClob"
	  public return_type class_ref 981659 // Clob
	  nparams 1
	    param in name "colName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796699 "getConcurrency"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796827 "getCursorName"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8796955 "getDate"
	  public return_type class_ref 981147 // Date
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797083 "getDate"
	  public return_type class_ref 981147 // Date
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797211 "getDate"
	  public return_type class_ref 981147 // Date
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797339 "getDate"
	  public return_type class_ref 981147 // Date
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797467 "getDouble"
	  public explicit_return_type "double"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797595 "getDouble"
	  public explicit_return_type "double"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797723 "getFetchDirection"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797851 "getFetchSize"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8797979 "getFloat"
	  public explicit_return_type "float"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798107 "getFloat"
	  public explicit_return_type "float"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798235 "getInt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798363 "getInt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798491 "getLong"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798619 "getLong"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798747 "getMetaData"
	  public return_type class_ref 981787 // ResultSetMetaData
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8798875 "getObject"
	  public explicit_return_type "Object"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799003 "getObject"
	  public explicit_return_type "Object"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799131 "getObject"
	  public explicit_return_type "Object"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param inout name "map" type class_ref 136603 // Map
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799259 "getObject"
	  public explicit_return_type "Object"
	  nparams 2
	    param in name "colName" explicit_type "String"
	    param inout name "map" type class_ref 136603 // Map
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799387 "getRef"
	  public return_type class_ref 981531 // Ref
	  nparams 1
	    param in name "i" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799515 "getRef"
	  public return_type class_ref 981531 // Ref
	  nparams 1
	    param in name "colName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799643 "getRow"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799771 "getShort"
	  public explicit_return_type "short"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8799899 "getShort"
	  public explicit_return_type "short"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800027 "getStatement"
	  public return_type class_ref 980763 // Statement
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800155 "getString"
	  public explicit_return_type "String"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800283 "getString"
	  public explicit_return_type "String"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800411 "getTime"
	  public return_type class_ref 981275 // Time
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800539 "getTime"
	  public return_type class_ref 981275 // Time
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800667 "getTime"
	  public return_type class_ref 981275 // Time
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800795 "getTime"
	  public return_type class_ref 981275 // Time
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8800923 "getTimestamp"
	  public return_type class_ref 981403 // Timestamp
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801051 "getTimestamp"
	  public return_type class_ref 981403 // Timestamp
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801179 "getTimestamp"
	  public return_type class_ref 981403 // Timestamp
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801307 "getTimestamp"
	  public return_type class_ref 981403 // Timestamp
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "cal" type class_ref 138523 // Calendar
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801435 "getType"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801563 "getURL"
	  public return_type class_ref 269467 // URL
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801691 "getURL"
	  public return_type class_ref 269467 // URL
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801819 "getUnicodeStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8801947 "getUnicodeStream"
	  public return_type class_ref 179099 // InputStream
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802075 "getWarnings"
	  public return_type class_ref 980891 // SQLWarning
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802203 "insertRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802331 "isAfterLast"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802459 "isBeforeFirst"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802587 "isFirst"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802715 "isLast"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802843 "last"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8802971 "moveToCurrentRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803099 "moveToInsertRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803227 "next"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803355 "previous"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803483 "refreshRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803611 "relative"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "rows" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803739 "rowDeleted"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803867 "rowInserted"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8803995 "rowUpdated"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804123 "setFetchDirection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "direction" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804251 "setFetchSize"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "rows" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804379 "updateArray"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 979867 // Array
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804507 "updateArray"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 979867 // Array
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804635 "updateAsciiStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 179099 // InputStream
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804763 "updateAsciiStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 179099 // InputStream
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8804891 "updateBigDecimal"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 178459 // BigDecimal
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805019 "updateBigDecimal"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 178459 // BigDecimal
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805147 "updateBinaryStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 179099 // InputStream
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805275 "updateBinaryStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 179099 // InputStream
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805403 "updateBlob"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 980379 // Blob
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805531 "updateBlob"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 980379 // Blob
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805659 "updateBoolean"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805787 "updateBoolean"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8805915 "updateByte"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806043 "updateByte"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806171 "updateBytes"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806299 "updateBytes"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806427 "updateCharacterStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 364827 // Reader
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806555 "updateCharacterStream"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnName" explicit_type "String"
	    param inout name "reader" type class_ref 364827 // Reader
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806683 "updateClob"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 981659 // Clob
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806811 "updateClob"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 981659 // Clob
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8806939 "updateDate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 981147 // Date
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807067 "updateDate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 981147 // Date
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807195 "updateDouble"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "double"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807323 "updateDouble"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "double"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807451 "updateFloat"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "float"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807579 "updateFloat"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "float"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807707 "updateInt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807835 "updateInt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8807963 "updateLong"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "long"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808091 "updateLong"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "long"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808219 "updateNull"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "columnName" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808347 "updateNull"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "columnIndex" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808475 "updateObject"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808603 "updateObject"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808731 "updateObject"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" explicit_type "Object"
	    param in name "scale" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808859 "updateObject"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "columnName" explicit_type "String"
	    param inout name "x" explicit_type "Object"
	    param in name "scale" explicit_type "int"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8808987 "updateRef"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 981531 // Ref
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809115 "updateRef"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 981531 // Ref
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809243 "updateRow"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809371 "updateShort"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "short"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809499 "updateShort"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "short"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809627 "updateString"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param in name "x" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8809755 "updateString"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param in name "x" explicit_type "String"
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8809883 "updateTime"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 981275 // Time
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8810011 "updateTime"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 981275 // Time
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8810139 "updateTimestamp"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnName" explicit_type "String"
	    param inout name "x" type class_ref 981403 // Timestamp
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8810267 "updateTimestamp"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "columnIndex" explicit_type "int"
	    param inout name "x" type class_ref 981403 // Timestamp
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Signature coverage for internal ResultSet implementation."
	end

	operation 8810395 "wasNull"
	  public explicit_return_type "boolean"
	  nparams 0
	  nexceptions 1
	    exception class_ref 979995 // SQLException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 3164187 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -8466174297270688520L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this <code>SerialArray</code>
object.
"
      end
    end

    class 1097627 "SerialException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates and an error with the serialization or de-serialization of
SQL types such as <code>BLOB, CLOB, STRUCT or ARRAY</code> in 
addition to SQL types such as <code>DATALINK and JAVAOBJECT</code>

@version 0.1"
      classrelation 2234395 // <generalisation>
	relation 2234395 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2234395 // <generalisation>
	  b parent class_ref 979995 // SQLException
      end

      operation 8813851 "SerialException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SerialException</code> without a
message."
      end

      operation 8813979 "SerialException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SerialException</code> with the
specified message.

@param msg the detail message"
      end

      attribute 3165723 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -489794565168592690L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 1097883 "SerialBlob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized mapping in the Java programming language of an SQL 
<code>BLOB</code> value. 
<P>
The <code>SerialBlob</code> class provides a constructor for creating
an instance from a <code>Blob</code> object.  Note that the 
<code>Blob</code>
object should have brought the SQL <code>BLOB</code> value's data over
to the client before a <code>SerialBlob</code> object
is constructed from it.  The data of an SQL <code>BLOB</code> value can
be materialized on the client as an array of bytes (using the method
<code>Blob.getBytes</code>) or as a stream of uninterpreted bytes
(using the method <code>Blob.getBinaryStream</code>).
<P>
<code>SerialBlob</code> methods make it possible to make a copy of a 
<code>SerialBlob</code> object as an array of bytes or as a stream.
They also make it possible to locate a given pattern of bytes or a
<code>Blob</code> object within a <code>SerialBlob</code> object
and to update or truncate a <code>Blob</code> object.

@author Jonathan Bruce"
      classrelation 2232987 // <realization>
	relation 2232987 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2232987 // <realization>
	  b parent class_ref 980379 // Blob
      end

      classrelation 2233115 // <realization>
	relation 2233115 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2233115 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2233243 // <realization>
	relation 2233243 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2233243 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3164315 "buf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A serialized array of uninterpreted bytes representing the
value of this <code>SerialBlob</code> object.
@serial
"
      end

      classrelation 2233371 // blob (<unidirectional association>)
	relation 2233371 --->
	  a role_name "blob" private
	    comment "
The internal representation of the <code>Blob</code> object on which this
<code>SerialBlob</code> object is based.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2233371 // blob (<unidirectional association>)
	  b parent class_ref 980379 // Blob
      end

      attribute 3164443 "len"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of bytes in this <code>SerialBlob</code> object's
array of bytes.
@serial
"
      end

      attribute 3164571 "origLen"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The orginal number of bytes in this <code>SerialBlob</code> object's
array of bytes when it was first established.
@serial
"
      end

      operation 8810523 "SerialBlob"
	public explicit_return_type ""
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialBlob</code> object that is a serialized version of
the given <code>byte</code> array.
<p>
The new <code>SerialBlob</code> object is initialized with the data from the
<code>byte</code> array, thus allowing disconnected <code>RowSet</code>
objects to establish serialized <code>Blob</code> objects without 
touching the data source.

@param b the <code>byte</code> array containing the data for the 
       <code>Blob</code> object to be serialized
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL errors occurs"
      end

      operation 8810651 "SerialBlob"
	public explicit_return_type ""
	nparams 1
	  param inout name "blob" type class_ref 980379 // Blob
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialBlob</code> object that is a serialized
version of the given <code>Blob</code> object. 
<P>
The new <code>SerialBlob</code> object is initialized with the
data from the <code>Blob</code> object; therefore, the 
<code>Blob</code> object should have previously brought the
SQL <code>BLOB</code> value's data over to the client from
the database. Otherwise, the new <code>SerialBlob</code> object
will contain no data.

@param blob the <code>Blob</code> object from which this
    <code>SerialBlob</code> object is to be constructed;
    cannot be null.
@throws SerialException if an error occurs during serialization
@throws SQLException if the <code>Blob</code> passed to this
    to this constructor is a <code>null</code>.
@see java.sql.Blob     "
      end

      operation 8810779 "getBytes"
	public explicit_return_type "byte"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified number of bytes, starting at the given
position, from this <code>SerialBlob</code> object to 
another array of bytes.
<P>
Note that if the given number of bytes to be copied is larger than
the length of this <code>SerialBlob</code> object's array of
bytes, the given number will be shortened to the array's length.

@param pos the ordinal position of the first byte in this
           <code>SerialBlob</code> object to be copied;
           numbering starts at <code>1</code>; must not be less 
           than <code>1</code> and must be less than or equal
           to the length of this <code>SerialBlob</code> object
@param length the number of bytes to be copied 
@return an array of bytes that is a copy of a region of this
        <code>SerialBlob</code> object, starting at the given
        position and containing the given number of consecutive bytes
@throws SerialException if the given starting position is out of bounds"
      end

      operation 8810907 "length"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of bytes in this <code>SerialBlob</code>
object's array of bytes.

@return a <code>long</code> indicating the length in bytes of this
        <code>SerialBlob</code> object's array of bytes
@throws SerialException if an error occurs"
      end

      operation 8811035 "getBinaryStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>SerialBlob</code> object as an input stream.
Unlike the related method, <code>setBinaryStream</code>,
a stream is produced regardless of whether the <code>SerialBlob</code>
was created with a <code>Blob</code> object or a <code>byte</code> array.

@return a <code>java.io.InputStream</code> object that contains
        this <code>SerialBlob</code> object's array of bytes
@throws SerialException if an error occurs     
@see #setBinaryStream"
      end

      operation 8811163 "position"
	public explicit_return_type "long"
	nparams 2
	  param in name "pattern" explicit_type "byte"
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialBlob</code> object where	
the given pattern of bytes begins, starting the search at the	
specified position.	
	
@param pattern the pattern of bytes for which to search 	
@param start the position of the byte in this	
             <code>SerialBlob</code> object from which to begin 	
             the search; the first position is <code>1</code>;	
             must not be less than <code>1</code> nor greater than	
             the length of this <code>SerialBlob</code> object	
@return the position in this <code>SerialBlob</code> object	
        where the given pattern begins, starting at the specified	
        position; <code>-1</code> if the pattern is not found
        or the given starting position is out of bounds; position
        numbering for the return value starts at <code>1</code>	
@throws SerialException if an error occurs when serializing the blob	
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database     "
      end

      operation 8811291 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "pattern" type class_ref 980379 // Blob
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialBlob</code> object where	
the given <code>Blob</code> object begins, starting the search at the	
specified position.	
	
@param pattern the <code>Blob</code> object for which to search; 	
@param start the position of the byte in this	
             <code>SerialBlob</code> object from which to begin 	
             the search; the first position is <code>1</code>;	
             must not be less than <code>1</code> nor greater than	
             the length of this <code>SerialBlob</code> object	
@return the position in this <code>SerialBlob</code> object	
        where the given <code>Blob</code> object begins, starting 	
        at the specified position; <code>-1</code> if the pattern is 
        not found or the given starting position is out of bounds;	     
        position numbering for the return value starts at <code>1</code>     
@throws SerialException if an error occurs when serializing the blob
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database     "
      end

      operation 8811419 "setBytes"
	public explicit_return_type "int"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "bytes" explicit_type "byte"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the given array of bytes to the <code>BLOB</code> value that
this <code>Blob</code> object represents, starting at position 
<code>pos</code>, and returns the number of bytes written.

@param pos the position in the SQL <code>BLOB</code> value at which
    to start writing. The first position is <code>1</code>;	
    must not be less than <code>1</code> nor greater than	
    the length of this <code>SerialBlob</code> object.
@param bytes the array of bytes to be written to the <code>BLOB</code>
       value that this <code>Blob</code> object represents
@return the number of bytes written
@throws SerialException if there is an error accessing the
    <code>BLOB</code> value; or if an invalid position is set; if an 
    invalid offset value is set
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database     
@see #getBytes"
      end

      operation 8811547 "setBytes"
	public explicit_return_type "int"
	nparams 4
	  param in name "pos" explicit_type "long"
	  param in name "bytes" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes all or part of the given <code>byte</code> array to the
<code>BLOB</code> value that this <code>Blob</code> object represents
and returns the number of bytes written.
Writing starts at position <code>pos</code> in the <code>BLOB</code>
value; <i>len</i> bytes from the given byte array are written.

@param pos the position in the <code>BLOB</code> object at which
    to start writing. The first position is <code>1</code>;	
    must not be less than <code>1</code> nor greater than	
    the length of this <code>SerialBlob</code> object.
@param bytes the array of bytes to be written to the <code>BLOB</code>
    value
@param offset the offset in the <code>byte</code> array at which
    to start reading the bytes. The first offset position is
    <code>0</code>; must not be less than <code>0</code> nor greater
    than the length of the <code>byte</code> array
@param length the number of bytes to be written to the 
    <code>BLOB</code> value from the array of bytes <i>bytes</i>.
       
@return the number of bytes written
@throws SerialException if there is an error accessing the 
    <code>BLOB</code> value; if an invalid position is set; if an 
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialBlob</code> length; or the combined
    values of the length and offset is greater than the Blob buffer
@throws SQLException if there is an error accessing the <code>BLOB</code>
        value from the database.     
@see #getBytes"
      end

      operation 8811675 "setBinaryStream"
	public return_type class_ref 183835 // OutputStream
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream that can be used to write to the <code>BLOB</code> 
value that this <code>Blob</code> object represents.  The stream begins
at position <code>pos</code>. This method forwards the 
<code>setBinaryStream()</code> call to the underlying <code>Blob</code> in 
the event that this <code>SerialBlob</code> object is instantiated with a 
<code>Blob</code>. If this <code>SerialBlob</code> is instantiated with
a <code>byte</code> array, a <code>SerialException</code> is thrown.

@param pos the position in the <code>BLOB</code> value at which
       to start writing
@return a <code>java.io.OutputStream</code> object to which data can 
        be written
@throws SQLException if there is an error accessing the
           <code>BLOB</code> value
@throws SerialException if the SerialBlob in not instantiated with a 
    <code>Blob</code> object that supports <code>setBinaryStream()</code>
@see #getBinaryStream"
      end

      operation 8811803 "truncate"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Truncates the <code>BLOB</code> value that this <code>Blob</code>
object represents to be <code>len</code> bytes in length.

@param length the length, in bytes, to which the <code>BLOB</code>
       value that this <code>Blob</code> object represents should be 
       truncated
@throws SerialException if there is an error accessing the Blob value;
    or the length to truncate is greater that the SerialBlob length     "
      end

      attribute 3164699 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -8144641928112860441L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this <code>SerialBlob</code>
object.
"
      end
    end

    class 1098011 "SerialClob"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized mapping in the Java programming language of an SQL
<code>CLOB</code> value.
<P>
The <code>SerialClob</code> class provides a constructor for creating
an instance from a <code>Clob</code> object.  Note that the <code>Clob</code>
object should have brought the SQL <code>CLOB</code> value's data over
to the client before a <code>SerialClob</code> object
is constructed from it.  The data of an SQL <code>CLOB</code> value can
be materialized on the client as a stream of Unicode characters.
<P>
<code>SerialClob</code> methods make it possible to get a substring
from a <code>SerialClob</code> object or to locate the start of
a pattern of characters.

@author Jonathan Bruce"
      classrelation 2233499 // <realization>
	relation 2233499 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2233499 // <realization>
	  b parent class_ref 981659 // Clob
      end

      classrelation 2233627 // <realization>
	relation 2233627 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2233627 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2233755 // <realization>
	relation 2233755 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2233755 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3164827 "buf"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A serialized array of characters containing the data of the SQL
<code>CLOB</code> value that this <code>SerialClob</code> object
represents.

@serial
"
      end

      classrelation 2233883 // clob (<unidirectional association>)
	relation 2233883 --->
	  a role_name "clob" private
	    comment "
Internal Clob representation if SerialClob is intialized with a
Clob

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2233883 // clob (<unidirectional association>)
	  b parent class_ref 981659 // Clob
      end

      attribute 3164955 "len"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The length in characters of this <code>SerialClob</code> object's
internal array of characters.

@serial
"
      end

      attribute 3165083 "origLen"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The original length in characters of tgus <code>SerialClob</code> 
objects internal array of characters.

@serial
"
      end

      operation 8811931 "SerialClob"
	public explicit_return_type ""
	nparams 1
	  param in name "ch" explicit_type "char"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialClob</code> object that is a serialized version of
the given <code>char</code> array.
<p>
The new <code>SerialClob</code> object is initialized with the data from the
<code>char</code> array, thus allowing disconnected <code>RowSet</code>
objects to establish a serialized <code>Clob</code> object without touching
the data source.

@param ch the char array representing the <code>Clob</code> object to be
        serialized
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL error occurs"
      end

      operation 8812059 "SerialClob"
	public explicit_return_type ""
	nparams 1
	  param inout name "clob" type class_ref 981659 // Clob
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialClob</code> object that is a serialized
version of the given <code>Clob</code> object.
<P>
The new <code>SerialClob</code> object is initialized with the
data from the <code>Clob</code> object; therefore, the
<code>Clob</code> object should have previously brought the
SQL <code>CLOB</code> value's data over to the client from
the database. Otherwise, the new <code>SerialClob</code> object
object will contain no data.
<p>
Note: The <code>Clob</code> object supplied to this constructor cannot
return <code>null</code> for the <code>Clob.getCharacterStream()</code> 
and <code>Clob.getAsciiStream</code> methods. This <code>SerialClob</code> 
constructor cannot  serialize a <code>Clob</code> object in this instance
and will throw an <code>SQLException</code> object.

@param  clob the <code>Clob</code> object from which this
    <code>SerialClob</code> object is to be constructed; cannot be null
@throws SerialException if an error occurs during serialization
@throws SQLException if a SQL error occurs in capturing the CLOB;
    if the <code>Clob</code> object is a null; or if at least one of the 
    <code>Clob.getCharacterStream()</code> and <code>Clob.getAsciiStream()</code>
    methods on the <code>Clob</code> return a null
@see java.sql.Clob"
      end

      operation 8812187 "length"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of characters in this <code>SerialClob</code>
object's array of characters. 

@return a <code>long</code> indicating the length in characters of this
        <code>SerialClob</code> object's array of character
@throws SerialException if an error occurs"
      end

      operation 8812315 "getCharacterStream"
	public return_type class_ref 364827 // Reader
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this <code>SerialClob</code> object's data as a stream
of Unicode characters. Unlike the related method, <code>getAsciiStream</code>,
a stream is produced regardless of whether the <code>SerialClob</code> object
was created with a <code>Clob</code> object or a <code>char</code> array.

@return a <code>java.io.Reader</code> object containing this
        <code>SerialClob</code> object's data
@throws SerialException if an error occurs"
      end

      operation 8812443 "getAsciiStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>CLOB</code> value designated by this <code>SerialClob</code>
object as an ascii stream. This method forwards the <code>getAsciiStream</code>
call to the underlying <code>Clob</code> object in the event that this 
<code>SerialClob</code> object is instantiated with a <code>Clob</code>
object. If this <code>SerialClob</code> object is instantiated with
a <code>char</code> array, a <code>SerialException</code> object is thrown.

@return a <code>java.io.InputStream</code> object containing
    this <code>SerialClob</code> object's data
@throws SerialException if this <code>SerialClob<code> object was not instantiated
    with a <code>Clob</code> object
@throws SQLException if there is an error accessing the 
    <code>CLOB</code> value represented by the <code>Clob</code> object that was
    used to create this <code>SerialClob</code> object"
      end

      operation 8812571 "getSubString"
	public explicit_return_type "String"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the substring contained in this
<code>SerialClob</code> object, starting at the given position
and continuing for the specified number or characters.

@param pos the position of the first character in the substring
           to be copied; the first character of the
           <code>SerialClob</code> object is at position
           <code>1</code>; must not be less than <code>1</code>,
           and the sum of the starting position and the length
           of the substring must be less than the length of this
           <code>SerialClob</code> object
@param length the number of characters in the substring to be
              returned; must not be greater than the length of
              this <code>SerialClob</code> object, and the
              sum of the starting position and the length
              of the substring must be less than the length of this
              <code>SerialClob</code> object
@return a <code>String</code> object containing a substring of
        this <code>SerialClob</code> object beginning at the
        given position and containing the specified number of
        consecutive characters
@throws SerialException if either of the arguments is out of bounds       "
      end

      operation 8812699 "position"
	public explicit_return_type "long"
	nparams 2
	  param in name "searchStr" explicit_type "String"
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialClob</code> object
where the given <code>String</code> object begins, starting
the search at the specified position. This method returns
<code>-1</code> if the pattern is not found.

@param searchStr the <code>String</code> object for which to
                 search
@param start the position in this <code>SerialClob</code> object
        at which to start the search; the first position is
        <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object     
@return the position at which the given <code>String</code> object
        begins, starting the search at the specified position;
        <code>-1</code> if the given <code>String</code> object is
        not found or the starting position is out of bounds; position
        numbering for the return value starts at <code>1</code>	
@throws SerialException if an error occurs locating the String signature
@throws SQLException if there is an error accessing the Blob value 	
        from the database.          "
      end

      operation 8812827 "position"
	public explicit_return_type "long"
	nparams 2
	  param inout name "searchStr" type class_ref 981659 // Clob
	  param in name "start" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position in this <code>SerialClob</code> object
where the given <code>Clob</code> signature begins, starting
the search at the specified position. This method returns
<code>-1</code> if the pattern is not found.

@param searchStr the <code>Clob</code> object for which to search
@param start the position in this <code>SerialClob</code> object
       at which to begin the search; the first position is
        <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object 
@return the position at which the given <code>Clob</code> 
        object begins in this <code>SerialClob</code> object,
        at or after the specified starting position
@throws SerialException if an error occurs locating the Clob signature
@throws SQLException if there is an error accessing the Blob value 	
        from the database        "
      end

      operation 8812955 "setString"
	public explicit_return_type "int"
	nparams 2
	  param in name "pos" explicit_type "long"
	  param in name "str" explicit_type "String"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the given Java <code>String</code> to the <code>CLOB</code>
value that this <code>SerialClob</code> object represents, at the position 
<code>pos</code>.

@param pos the position at which to start writing to the <code>CLOB</code>
        value that this <code>SerialClob</code> object represents; the first 
        position is <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object 
@param str the string to be written to the <code>CLOB</code>
       value that this <code>SerialClob</code> object represents
@return the number of characters written
@throws SerialException if there is an error accessing the 
    <code>CLOB</code> value; if an invalid position is set; if an 
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialClob</code> length; or the combined
    values of the length and offset is greater than the Clob buffer             "
      end

      operation 8813083 "setString"
	public explicit_return_type "int"
	nparams 4
	  param in name "pos" explicit_type "long"
	  param in name "str" explicit_type "String"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes <code>len</code> characters of <code>str</code>, starting 
at character <code>offset</code>, to the <code>CLOB</code> value
that this <code>Clob</code> represents.

@param pos the position at which to start writing to the <code>CLOB</code>
        value that this <code>SerialClob</code> object represents; the first 
        position is <code>1</code>; must not be less than <code>1</code> nor
        greater than the length of this <code>SerialClob</code> object
@param str the string to be written to the <code>CLOB</code> 
       value that this <code>Clob</code> object represents
@param offset the offset into <code>str</code> to start reading
       the characters to be written
@param length the number of characters to be written
@return the number of characters written
@throws SerialException if there is an error accessing the 
    <code>CLOB</code> value; if an invalid position is set; if an 
    invalid offset value is set; if number of bytes to be written
    is greater than the <code>SerialClob</code> length; or the combined
    values of the length and offset is greater than the Clob buffer     "
      end

      operation 8813211 "setAsciiStream"
	public return_type class_ref 183835 // OutputStream
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream to be used to write Ascii characters to the
<code>CLOB</code> value that this <code>SerialClob</code> object represents, 
starting at position <code>pos</code>. This method forwards the 
<code>setAsciiStream()</code> call to the underlying <code>Clob</code> object in 
the event that this <code>SerialClob</code> object is instantiated with a 
<code>Clob</code> object. If this <code>SerialClob</code> object is instantiated
 with a <code>char</code> array, a <code>SerialException</code> object is thrown.

@param pos the position at which to start writing to the
       <code>CLOB</code> object
@return the stream to which ASCII encoded characters can be written
@throws SerialException if SerialClob is not instantiated with a
    Clob object that supports <code>setAsciiStream</code>
@throws SQLException if there is an error accessing the 
    <code>CLOB</code> value     
@see #getAsciiStream"
      end

      operation 8813339 "setCharacterStream"
	public return_type class_ref 446619 // Writer
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a stream to be used to write a stream of Unicode characters 
to the <code>CLOB</code> value that this <code>SerialClob</code> object
represents, at position <code>pos</code>. This method forwards the 
<code>setCharacterStream()</code> call to the underlying <code>Clob</code> 
object in the event that this <code>SerialClob</code> object is instantiated with a 
<code>Clob</code> object. If this <code>SerialClob</code> object is instantiated with
a <code>char</code> array, a <code>SerialException</code> is thrown.

@param  pos the position at which to start writing to the
       <code>CLOB</code> value

@return a stream to which Unicode encoded characters can be written
@throws SerialException if the SerialClob is not instantiated with
    a Clob object that supports <code>setCharacterStream</code>
@throws SQLException if there is an error accessing the 
           <code>CLOB</code> value
@see #getCharacterStream"
      end

      operation 8813467 "truncate"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "long"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Truncates the <code>CLOB</code> value that this <code>SerialClob</code> 
object represents so that it has a length of <code>len</code>
characters. 
<p>
Truncating a <code>SerialClob</code> object to length 0 has the effect of 
clearing its contents.

@param length the length, in bytes, to which the <code>CLOB</code>
       value should be truncated
@throws SQLException if there is an error accessing the 
       <code>CLOB</code> value"
      end

      attribute 3165211 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -1662519690087375313L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this <code>SerialClob</code>
object.
"
      end
    end

    class 1098139 "SerialDatalink"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized mapping in the Java programming language of an SQL 
<code>DATALINK</code> value. A <code>DATALINK</code> value 
references a file outside of the underlying data source that the
data source manages.
<P>
<code>RowSet</code> implementations can use the method <code>RowSet.getURL</code>
to retrieve a <code>java.net.URL</code> object, which can be used
to manipulate the external data.
<pre>
     java.net.URL url = rowset.getURL(1);
</pre>"
      classrelation 2234011 // <realization>
	relation 2234011 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2234011 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2234139 // <realization>
	relation 2234139 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2234139 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 2234267 // url (<unidirectional association>)
	relation 2234267 --->
	  a role_name "url" private
	    comment "
The extracted URL field retrieved from the DATALINK field.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2234267 // url (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      attribute 3165339 "baseType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SQL type of the elements in this <code>SerialDatalink</code> 
object.  The type is expressed as one of the contants from the
class <code>java.sql.Types</code>.
@serial
"
      end

      attribute 3165467 "baseTypeName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The type name used by the DBMS for the elements in the SQL 
<code>DATALINK</code> value that this SerialDatalink object
represents.
@serial
"
      end

      operation 8813595 "SerialDatalink"
	public explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SerialDatalink</code> object from the given
<code>java.net.URL</code> object.
<P>
@throws SerialException if url parameter is a null"
      end

      operation 8813723 "getDatalink"
	public return_type class_ref 269467 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new URL that is a copy of this <code>SerialDatalink</code> 
object. 

@return a copy of this <code>SerialDatalink</code> object as a
<code>URL</code> object in the Java programming language.
@throws SerialException if the <code>URL</code> object cannot be de-serialized"
      end

      attribute 3165595 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  2826907821828733626L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this <code>SerialDatalink</code>
object.
"
      end
    end

    class 1098267 "SerialJavaObject"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serializable mapping in the Java programming language of an SQL 
<code>JAVA_OBJECT</code> value. Assuming the Java object 
implements the <code>Serializable</code> interface, this class simply wraps the 
serialization process.
<P>
If however, the serialization is not possible because
the Java object is not immediately serializable, this class will
attempt to serialize all non-static members to permit the object
state to be serialized. 
Static or transient fields cannot be serialized; an attempt to serialize
them will result in a <code>SerialException</code> object being thrown.

@version 0.1
@author Jonathan Bruce"
      classrelation 2234523 // <realization>
	relation 2234523 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2234523 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2234651 // <realization>
	relation 2234651 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2234651 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3165851 "obj"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Placeholder for object to be serialized.
"
      end

      classrelation 2234779 // fields (<unidirectional association>)
	relation 2234779 --->
	  a role_name "fields" multiplicity "[]" private
	    comment "
Placeholder for all fields in the <code>JavaObject</code> being serialized.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2234779 // fields (<unidirectional association>)
	  b parent class_ref 220443 // Field
      end

      operation 8814107 "SerialJavaObject"
	public explicit_return_type ""
	nparams 1
	  param inout name "obj" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for <code>SerialJavaObject</code> helper class.
<p>

@param obj the Java <code>Object</code> to be serialized
@throws SerialException if the object is found
to be unserializable"
      end

      operation 8814235 "getObject"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> that is a copy of this <code>SerialJavaObject</code> 
object. 

@return a copy of this <code>SerialJavaObject</code> object as an
        <code>Object</code> in the Java programming language
@throws SerialException if the instance is corrupt"
      end

      operation 8814363 "getFields"
	public return_type class_ref 220443 // Field
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Field</code> objects that contains each
field of the object that this helper class is serializing.

@return an array of <code>Field</code> objects
@throws SerialException if an error is encountered accessing
the serialized object "
      end

      attribute 3165979 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -1465795139032831023L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this 
<code>SerialJavaObject</code> object.
"
      end

      classrelation 2234907 // chain (<unidirectional association>)
	relation 2234907 --->
	  a role_name "chain" package
	    comment "
A container for the warnings issued on this <code>SerialJavaObject</code>
object. When there are multiple warnings, each warning is chained to the
previous warning.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2234907 // chain (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 8814491 "setWarning"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1096475 // RowSetWarning
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers the given warning."
      end
    end

    class 1098395 "SerialRef"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized mapping of a <code>Ref</code> object, which is the mapping in the
Java programming language of an SQL <code>REF</code> value.
<p>
The <code>SerialRef</code> class provides a constructor  for
creating a <code>SerialRef</code> instance from a <code>Ref</code>
object and provides methods for getting and setting the <code>Ref</code> object."
      classrelation 2235035 // <realization>
	relation 2235035 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235035 // <realization>
	  b parent class_ref 981531 // Ref
      end

      classrelation 2235163 // <realization>
	relation 2235163 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235163 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2235291 // <realization>
	relation 2235291 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235291 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3166107 "baseTypeName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "String containing the base type name.
@serial
"
      end

      attribute 3166235 "object"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This will store the type <code>Ref</code> as an <code>Object</code>.
"
      end

      classrelation 2235419 // reference (<unidirectional association>)
	relation 2235419 --->
	  a role_name "reference" private
	    comment "
Private copy of the Ref reference.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2235419 // reference (<unidirectional association>)
	  b parent class_ref 981531 // Ref
      end

      operation 8814619 "SerialRef"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 981531 // Ref
	nexceptions 2
	  exception class_ref 1097627 // SerialException
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialRef</code> object from the given <code>Ref</code>
object.

@param ref a Ref object; cannot be <code>null</code>
@throws SQLException if a database access occurs; if <code>ref</code>
    is <code>null</code>; or if the <code>Ref</code> object returns a
    <code>null</code> value base type name.
@throws SerialException if an error occurs serializing the <code>Ref</code>
    object"
      end

      operation 8814747 "getBaseTypeName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the base type name of the <code>Ref</code>.

@return a string of the base type name of the Ref
@throws SerialException in no Ref object has been set"
      end

      operation 8814875 "getObject"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> representing the SQL structured type 
to which this <code>SerialRef</code> object refers.  The attributes
of the structured type are mapped according to the given type map.

@param map a <code>java.util.Map</code> object containing zero or
       more entries, with each entry consisting of 1) a <code>String</code>
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@return an object instance resolved from the Ref reference and mapped
       according to the supplied type map
@throws SerialException if an error is encountered in the reference
       resolution"
      end

      operation 8815003 "getObject"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> representing the SQL structured type 
to which this <code>SerialRef</code> object refers.  

@return an object instance resolved from the Ref reference
@throws SerialException if an error is encountered in the reference
        resolution"
      end

      operation 8815131 "setObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SQL structured type that this <code>SerialRef</code> object
references to the given <code>Object</code> object.

@param obj an <code>Object</code> representing the SQL structured type
       to be referenced
@throws SerialException if an error is encountered generating the
the structured type referenced by this <code>SerialRef</code> object"
      end

      attribute 3166363 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -4727123500609662274L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this <code>SerialRef</code>
object.
"
      end
    end

    class 1098523 "SerialStruct"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A serialized mapping in the Java programming language of an SQL
structured type. Each attribute that is not already serialized 
is mapped to a serialized form, and if an attribute is itself 
a structured type, each of its attributes that is not already
serialized is mapped to a serialized form. 
<P>
In addition, the structured type is custom mapped to a class in the
Java programming language if there is such a mapping, as are
its attributes, if appropriate.
<P>
The <code>SerialStruct</code> class provides a constructor for creating
an instance from a <code>Struct</code> object, a method for retrieving
the SQL type name of the SQL structured type in the database, and methods
for retrieving its attribute values."
      classrelation 2235547 // <realization>
	relation 2235547 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235547 // <realization>
	  b parent class_ref 983451 // Struct
      end

      classrelation 2235675 // <realization>
	relation 2235675 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235675 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2235803 // <realization>
	relation 2235803 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235803 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      attribute 3166491 "SQLTypeName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SQL type name for the structured type that this
<code>SerialStruct</code> object represents.  This is the name
used in the SQL definition of the SQL structured type.

@serial
"
      end

      attribute 3166619 "attribs"
	private explicit_type "Object"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of <code>Object</code> instances in  which each
element is an attribute of the SQL structured type that this
<code>SerialStruct</code> object represents.  The attributes are
ordered according to their order in the definition of the
SQL structured type.

@serial
"
      end

      operation 8815259 "SerialStruct"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 983451 // Struct
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialStruct</code> object from the given
<code>Struct</code> object, using the given <code>java.util.Map</code>
object for custom mapping the SQL structured type or any of its
attributes that are SQL structured types.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs
@see java.sql.Struct"
      end

      operation 8815387 "SerialStruct"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 983067 // SQLData
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SerialStruct</code> object from the
given <code>SQLData</code> object, using the given type
map to custom map it to a class in the Java programming
language.  The type map gives the SQL type and the class
to which it is mapped.  The <code>SQLData</code> object
defines the class to which the SQL type will be mapped.

@param in an instance of the <code>SQLData</code> class
          that defines the mapping of the SQL structured
          type to one or more objects in the Java programming language
@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs"
      end

      operation 8815515 "getSQLTypeName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the SQL type name for this <code>SerialStruct</code>
object. This is the name used in the SQL definition of the
structured type

@return a <code>String</code> object representing the SQL
        type name for the SQL structured type that this
        <code>SerialStruct</code> object represents
@throws SerialException if an error occurs"
      end

      operation 8815643 "getAttributes"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves an array of <code>Object</code> values containing the 
attributes of the SQL structured type that this
<code>SerialStruct</code> object represents. 

@return an array of <code>Object</code> values, with each
        element being an attribute of the SQL structured type
        that this <code>SerialStruct</code> object represents
@throws SerialException if an error occurs"
      end

      operation 8815771 "getAttributes"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the attributes for the SQL structured type that
this <code>SerialStruct</code> represents as an array of 
<code>Object</code> values, using the given type map for
custom mapping if appropriate.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped 
@return an array of <code>Object</code> values, with each
        element being an attribute of the SQL structured
        type that this <code>SerialStruct</code> object
        represents
@throws SerialException if an error occurs"
      end

      operation 8815899 "mapToSerial"
	private explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1097627 // SerialException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps attributes of an SQL structured type that are not
serialized to a serialized form, using the given type map
for custom mapping when appropriate.  The following types
in the Java programming language are mapped to their
serialized forms:  <code>Struct</code>, <code>SQLData</code>,
<code>Ref</code>, <code>Blob</code>, <code>Clob</code>, and 
<code>Array</code>.
<P>
This method is called internally and is not used by an
application programmer.

@param map a <code>java.util.Map</code> object in which
       each entry consists of 1) a <code>String</code> object
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SerialException if an error occurs"
      end

      attribute 3166747 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -8322445504027483372L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier that assists in the serialization of this 
<code>SerialStruct</code> object.
"
      end
    end

    class 1098651 "SQLInputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An input stream used for custom mapping user-defined types (UDTs).
An <code>SQLInputImpl</code> object is an input stream that contains a
stream of values that are the attributes of a UDT.
<p>
This class is used by the driver behind the scenes when the method 
<code>getObject</code> is called on an SQL structured or distinct type 
that has a custom mapping; a programmer never invokes
<code>SQLInputImpl</code> methods directly. They are provided here as a 
convenience for those who write <code>RowSet</code> implementations.
<P>
The <code>SQLInputImpl</code> class provides a set of
reader methods analogous to the <code>ResultSet</code> getter
methods.  These methods make it possible to read the values in an
<code>SQLInputImpl</code> object.
<P>
The method <code>wasNull</code> is used to determine whether the
the last value read was SQL <code>NULL</code>.
<P>When the method <code>getObject</code> is called with an
object of a class implementing the interface <code>SQLData</code>,
the JDBC driver calls the method <code>SQLData.getSQLType</code>
to determine the SQL type of the UDT being custom mapped. The driver
creates an instance of <code>SQLInputImpl</code>, populating it with the
attributes of the UDT.  The driver then passes the input
stream to the method <code>SQLData.readSQL</code>, which in turn
calls the <code>SQLInputImpl</code> reader methods
to read the attributes from the input stream.
@see java.sql.SQLData"
      classrelation 2235931 // <realization>
	relation 2235931 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2235931 // <realization>
	  b parent class_ref 983195 // SQLInput
      end

      attribute 3166875 "lastValueWasNull"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<code>true</code> if the last value returned was <code>SQL NULL</code>;
<code>false</code> otherwise.
"
      end

      attribute 3167003 "idx"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The current index into the array of SQL structured type attributes
that will be read from this <code>SQLInputImpl</code> object and 
mapped to the fields of a class in the Java programming language.
"
      end

      attribute 3167131 "attrib"
	private explicit_type "Object"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The array of attributes to be read from this stream.  The order
of the attributes is the same as the order in which they were
listed in the SQL definition of the UDT.
"
      end

      classrelation 2236059 // map (<unidirectional association>)
	relation 2236059 --->
	  a role_name "map" private
	    comment "
The type map to use when the method <code>readObject</code>
is invoked. This is a <code>java.util.Map</code> object in which
there may be zero or more entries.  Each entry consists of the
fully qualified name of a UDT (the value to be mapped) and the 
<code>Class</code> object for a class that implements
<code>SQLData</code> (the Java class that defines how the UDT
will be mapped).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2236059 // map (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8816027 "SQLInputImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "attributes" explicit_type "Object"
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}<String,Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>SQLInputImpl</code> object initialized with the
given array of attributes and the given type map. If any of the
attributes is a UDT whose name is in an entry in the type map,
the attribute will be mapped according to the corresponding
<code>SQLData</code> implementation.

@param attributes an array of <code>Object</code> instances in which
       each element is an attribute of a UDT. The order of the 
       attributes in the array is the same order in which
       the attributes were defined in the UDT definition.
@param map a <code>java.util.Map</code> object containing zero or more
       entries, with each entry consisting of 1) a <code>String</code>
       giving the fully
       qualified name of the UDT and 2) the <code>Class</code> object
       for the <code>SQLData</code> implementation that defines how
       the UDT is to be mapped
@throws SQLException if the <code>attributes</code> or the <code>map</code>
       is a <code>null</code> value"
      end

      operation 8816155 "getNextAttribute"
	private explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object 
as an <code>Object</code> in the Java programming language.

@return the next value in the input stream 
        as an <code>Object</code> in the Java programming language
@throws SQLException if the read position is located at an invalid
        position or if there are no further values in the stream"
      end

      operation 8816283 "readString"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for reading attributes from the stream of SQL data.
 These methods correspond to the column-accessor methods of
 java.sql.ResultSet.
================================================================

Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>String</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object; 
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream."
      end

      operation 8816411 "readBoolean"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>boolean</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object; 
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream."
      end

      operation 8816539 "readByte"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>byte</code> in the Java programming language.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code>
implementation.
<p>
@return the next attribute in this <code>SQLInputImpl</code> object; 
    if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
    position or if there are no further values in the stream"
      end

      operation 8816667 "readShort"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object 
as a <code>short</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8816795 "readInt"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object 
as an <code>int</code> in the Java programming language.     
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8816923 "readLong"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>long</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817051 "readFloat"
	public explicit_return_type "float"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>float</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817179 "readDouble"
	public explicit_return_type "double"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a <code>double</code> in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817307 "readBigDecimal"
	public return_type class_ref 178459 // BigDecimal
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object 
as a <code>java.math.BigDecimal</code>.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817435 "readBytes"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as an array of bytes.
<p>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817563 "readDate"
	public return_type class_ref 981147 // Date
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> as 
a <code>java.sql.Date</code> object.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type; this responsibility is delegated
to the UDT mapping as defined by a <code>SQLData</code> implementation.
<P>
@return the next attribute in this <code>SQLInputImpl</code> object;
      if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
      position or if there are no more values in the stream "
      end

      operation 8817691 "readTime"
	public return_type class_ref 981275 // Time
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as
a <code>java.sql.Time</code> object.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream. "
      end

      operation 8817819 "readTimestamp"
	public return_type class_ref 981403 // Timestamp
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object as 
a <code>java.sql.Timestamp</code> object.

@return the attribute; if the value is <code>SQL NULL</code>, return
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream. "
      end

      operation 8817947 "readCharacterStream"
	public return_type class_ref 364827 // Reader
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the next attribute in this <code>SQLInputImpl</code> object
as a stream of Unicode characters.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818075 "readAsciiStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next attribute in this <code>SQLInputImpl</code> object
as a stream of ASCII characters.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, 
return <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818203 "readBinaryStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next attribute in this <code>SQLInputImpl</code> object
as a stream of uninterpreted bytes.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return the attribute; if the value is <code>SQL NULL</code>, return 
<code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818331 "readObject"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for reading items of SQL user-defined types from the stream.
================================================================

Retrieves the value at the head of this <code>SQLInputImpl</code>
object as an <code>Object</code> in the Java programming language.  The
actual type of the object returned is determined by the default 
mapping of SQL types to types in the Java programming language unless
there is a custom mapping, in which case the type of the object
returned is determined by this stream's type map.
<P>
The JDBC technology-enabled driver registers a type map with the stream 
before passing the stream to the application.
<P>
When the datum at the head of the stream is an SQL <code>NULL</code>,
this method returns <code>null</code>.  If the datum is an SQL
structured or distinct type with a custom mapping, this method
determines the SQL type of the datum at the head of the stream, 
constructs an object of the appropriate class, and calls the method 
<code>SQLData.readSQL</code> on that object. The <code>readSQL</code>
method then calls the appropriate <code>SQLInputImpl.readXXX</code> 
methods to retrieve the attribute values from the stream.

@return the value at the head of the stream as an <code>Object</code>
        in the Java programming language; <code>null</code> if
        the value is SQL <code>NULL</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818459 "readRef"
	public return_type class_ref 981531 // Ref
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the value at the head of this <code>SQLInputImpl</code> object
as a <code>Ref</code> object in the Java programming language. 

@return a <code>Ref</code> object representing the SQL 
        <code>REF</code> value at the head of the stream; if the value
        is <code>SQL NULL</code> return <code>null</code>
@throws SQLException if the read position is located at an invalid 
        position; or if there are no further values in the stream.     "
      end

      operation 8818587 "readBlob"
	public return_type class_ref 980379 // Blob
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>BLOB</code> value at the head of this
<code>SQLInputImpl</code> object as a <code>Blob</code> object
in the Java programming language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return a <code>Blob</code> object representing the SQL 
        <code>BLOB</code> value at the head of this stream; 
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818715 "readClob"
	public return_type class_ref 981659 // Clob
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the <code>CLOB</code> value at the head of this
<code>SQLInputImpl</code> object as a <code>Clob</code> object
in the Java programming language.
<P>    
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return a <code>Clob</code> object representing the SQL 
        <code>CLOB</code> value at the head of the stream; 
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end

      operation 8818843 "readArray"
	public return_type class_ref 979867 // Array
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>ARRAY</code> value from the stream and
returns it as an <code>Array</code> object in the Java programming 
language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return an <code>Array</code> object representing the SQL
        <code>ARRAY</code> value at the head of the stream; *
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream.
"
      end

      operation 8818971 "wasNull"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ascertains whether the last value read from this 
<code>SQLInputImpl</code> object was <code>null</code>.

@return <code>true</code> if the SQL value read most recently was 
        <code>null</code>; otherwise, <code>false</code>; by default it
        will return false
@throws SQLException if an error occurs determining the last value
        read was a <code>null</code> value or not; "
      end

      operation 8819099 "readURL"
	public return_type class_ref 269467 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads an SQL <code>DATALINK</code> value from the stream and
returns it as an <code>URL</code> object in the Java programming 
language.
<P>
This method does not perform type-safe checking to determine if the
returned type is the expected type as this responsibility is delegated
to the UDT mapping as implemented by a <code>SQLData</code>
implementation.

@return an <code>URL</code> object representing the SQL
        <code>DATALINK</code> value at the head of the stream; *
        if the value is <code>SQL NULL</code>, return
        <code>null</code>
@throws SQLException if the read position is located at an invalid
position; or if there are no further values in the stream."
      end
    end

    class 1098779 "SQLOutputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The output stream for writing the attributes of a 
custom-mapped user-defined type (UDT) back to the database. 
The driver uses this interface internally, and its
methods are never directly invoked by an application programmer.
<p>
When an application calls the
method <code>PreparedStatement.setObject</code>, the driver
checks to see whether the value to be written is a UDT with
a custom mapping.  If it is, there will be an entry in a
type map containing the <code>Class</code> object for the
class that implements <code>SQLData</code> for this UDT.
If the value to be written is an instance of <code>SQLData</code>,
the driver will create an instance of <code>SQLOutputImpl</code> 
and pass it to the method <code>SQLData.writeSQL</code>.
The method <code>writeSQL</code> in turn calls the
appropriate <code>SQLOutputImpl.writeXXX</code> methods 
to write data from the <code>SQLData</code> object to
the <code>SQLOutputImpl</code> output stream as the 
representation of an SQL user-defined type."
      classrelation 2236187 // <realization>
	relation 2236187 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2236187 // <realization>
	  b parent class_ref 983323 // SQLOutput
      end

      classrelation 2236315 // attribs (<unidirectional association>)
	relation 2236315 --->
	  a role_name "attribs" private
	    comment "
A reference to an existing vector that
contains the attributes of a <code>Struct</code> object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2236315 // attribs (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      classrelation 2236443 // map (<unidirectional association>)
	relation 2236443 --->
	  a role_name "map" private
	    comment "
The type map the driver supplies to a newly created
<code>SQLOutputImpl</code> object.  This type map
indicates the <code>SQLData</code> class whose
<code>writeSQL</code> method will be called.  This
method will in turn call the appropriate 
<code>SQLOutputImpl/code> writer methods.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2236443 // map (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8819227 "SQLOutputImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "attributes" type class_ref 153883 // Vector
	  param inout name "map" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SQLOutputImpl</code> object
initialized with the given vector of attributes and
type map.  The driver will use the type map to determine
which <code>SQLData.writeSQL</code> method to invoke.
This method will then call the appropriate
<code>SQLOutputImpl</code> writer methods in order and
thereby write the attributes to the new output stream.

@param attributes a <code>Vector</code> object containing the attributes of
       the UDT to be mapped to one or more objects in the Java 
       programming language

@param map a <code>java.util.Map</code> object containing zero or
       more entries, with each entry consisting of 1) a <code>String</code>
       giving the fully qualified name of a UDT and 2) the
       <code>Class</code> object for the <code>SQLData</code> implementation
       that defines how the UDT is to be mapped
@throws SQLException if the <code>attributes</code> or the <code>map</code>
       is a <code>null</code> value"
      end

      operation 8819355 "writeString"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "String"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for writing attributes to the stream of SQL data.
 These methods correspond to the column-accessor methods of
 java.sql.ResultSet.
================================================================

Writes a <code>String</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>CHAR</code>, <code>VARCHAR</code>, or 
<code>LONGVARCHAR</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8819483 "writeBoolean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>boolean</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIT</code> before returning it to the database.

@param x the value to pass to the database     
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8819611 "writeByte"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "byte"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>byte</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8819739 "writeShort"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "short"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>short</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>SMALLINT</code> before returning it to the database.

@param x the value to pass to the database     
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8819867 "writeInt"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "int"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an <code>int</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>INTEGER</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8819995 "writeLong"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "long"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>long</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>BIGINT</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820123 "writeFloat"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "float"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>float</code> in the Java programming language
to this <code><code>SQLOutputImpl</code></code> object. The driver converts
it to an SQL <code>REAL</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820251 "writeDouble"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "double"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>double</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>DOUBLE</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820379 "writeBigDecimal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 178459 // BigDecimal
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>java.math.BigDecimal</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>NUMERIC</code> before returning it to the database.

@param x the value to pass to the database    
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database.     "
      end

      operation 8820507 "writeBytes"
	public explicit_return_type "void"
	nparams 1
	  param in name "x" explicit_type "byte"
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an array of <code>bytes</code> in the Java programming language
to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>VARBINARY</code> or <code>LONGVARBINARY</code>
before returning it to the database.

@param x the value to pass to the database  
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820635 "writeDate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 981147 // Date
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>java.sql.Date</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>DATE</code> before returning it to the database.

@param x the value to pass to the database          
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820763 "writeTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 981275 // Time
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>java.sql.Time</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>TIME</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8820891 "writeTimestamp"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 981403 // Timestamp
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>java.sql.Timestamp</code> object in the Java programming
language to this <code>SQLOutputImpl</code> object. The driver converts
it to an SQL <code>TIMESTAMP</code> before returning it to the database.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821019 "writeCharacterStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 364827 // Reader
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a stream of Unicode characters to this
<code>SQLOutputImpl</code> object. The driver will do any necessary
conversion from Unicode to the database <code>CHAR</code> format.

@param x the value to pass to the database           
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821147 "writeAsciiStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a stream of ASCII characters to this
<code>SQLOutputImpl</code> object. The driver will do any necessary
conversion from ASCII to the database <code>CHAR</code> format.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821275 "writeBinaryStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a stream of uninterpreted bytes to this <code>SQLOutputImpl</code>
object.

@param x the value to pass to the database
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821403 "writeObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 983067 // SQLData
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "================================================================
 Methods for writing items of SQL user-defined types to the stream.
 These methods pass objects to the database as values of SQL
 Structured Types, Distinct Types, Constructed Types, and Locator
 Types.  They decompose the Java object(s) and write leaf data
 items using the methods above.
================================================================

Writes to the stream the data contained in the given 
<code>SQLData</code> object.
When the <code>SQLData</code> object is <code>null</code>, this
method writes an SQL <code>NULL</code> to the stream.  
Otherwise, it calls the <code>SQLData.writeSQL</code>
method of the given object, which 
writes the object's attributes to the stream.
<P>
The implementation of the method <code>SQLData.writeSQ</code>
calls the appropriate <code>SQLOutputImpl.writeXXX</code> method(s)
for writing each of the object's attributes in order.
The attributes must be read from an <code>SQLInput</code>
input stream and written to an <code>SQLOutputImpl</code>
output stream in the same order in which they were
listed in the SQL definition of the user-defined type.

@param x the object representing data of an SQL structured or
         distinct type
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821531 "writeRef"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 981531 // Ref
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>Ref</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialRef</code> SQL <code>REF</code> value 
before returning it to the database.

@param x an object representing an SQL <code>REF</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821659 "writeBlob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 980379 // Blob
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>Blob</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialBlob</code> SQL <code>BLOB</code> value 
before returning it to the database.

@param x an object representing an SQL <code>BLOB</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821787 "writeClob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 981659 // Clob
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>Clob</code> object in the Java programming language
to this <code>SQLOutputImpl</code> object.  The driver converts
it to a serializable <code>SerialClob</code> SQL <code>CLOB</code> value 
before returning it to the database.

@param x an object representing an SQL <code>CLOB</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8821915 "writeStruct"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 983451 // Struct
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a <code>Struct</code> object in the Java
programming language to this <code>SQLOutputImpl</code>
object. The driver converts this value to an SQL structured type
before returning it to the database.
<P>
This method should be used when an SQL structured type has been
mapped to a <code>Struct</code> object in the Java programming
language (the standard mapping).  The method 
<code>writeObject</code> should be used if an SQL structured type
has been custom mapped to a class in the Java programming language.

@param x an object representing the attributes of an SQL structured type          
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8822043 "writeArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 979867 // Array
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an <code>Array</code> object in the Java
programming language to this <code>SQLOutputImpl</code>
object. The driver converts this value to a serializable 
<code>SerialArray</code> SQL <code>ARRAY</code>
value before returning it to the database.

@param x an object representing an SQL <code>ARRAY</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end

      operation 8822171 "writeURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 979995 // SQLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes an <code>java.sql.Type.DATALINK</code> object in the Java 
programming language to this <code>SQLOutputImpl</code> object. The
driver converts this value to a serializable <code>SerialDatalink</code>
SQL <code>DATALINK</code> value before return it to the database.
    
@param url an object representing a SQL <code>DATALINK</code> value
@throws SQLException if the <code>SQLOutputImpl</code> object is in
       use by a <code>SQLData</code> object attempting to write the attribute
       values of a UDT to the database."
      end
    end
  end

  deploymentview 172955 "serial"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 844059 "SerialArray"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.Map;
import java.net.URL;
${definition}"
      associated_classes
	class_ref 1097499 // SerialArray
      end
      comment "@(#)SerialArray.java	1.9 04/05/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844187 "SerialBlob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.lang.reflect.*;
${definition}"
      associated_classes
	class_ref 1097883 // SerialBlob
      end
      comment "@(#)SerialBlob.java	1.8 04/05/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844315 "SerialClob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
${definition}"
      associated_classes
	class_ref 1098011 // SerialClob
      end
      comment "@(#)SerialClob.java	1.11 04/08/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844443 "SerialDatalink"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.net.URL;
${definition}"
      associated_classes
	class_ref 1098139 // SerialDatalink
      end
      comment "@(#)SerialDatalink.java	1.5 04/05/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844571 "SerialException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.SQLException;
${definition}"
      associated_classes
	class_ref 1097627 // SerialException
      end
      comment "@(#)SerialException.java	1.4 04/03/11

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844699 "SerialJavaObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.Map;
import java.lang.reflect.*;
import javax.sql.rowset.RowSetWarning;
${definition}"
      associated_classes
	class_ref 1098267 // SerialJavaObject
      end
      comment "@(#)SerialJavaObject.java	1.7 05/10/31

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844827 "SerialRef"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_classes
	class_ref 1098395 // SerialRef
      end
      comment "@(#)SerialRef.java	1.7 04/05/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 844955 "SerialStruct"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.math.*;
import java.util.Map;
import java.util.Vector;
import javax.sql.rowset.*;
${definition}"
      associated_classes
	class_ref 1098523 // SerialStruct
      end
      comment "@(#)SerialStruct.java	1.6 04/05/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 845083 "SQLInputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.math.*;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1098651 // SQLInputImpl
      end
      comment "@(#)SQLInputImpl.java	1.4 04/05/05 

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 845211 "SQLOutputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.sql.*;
import javax.sql.*;
import java.io.*;
import java.lang.String;
import java.math.*;
import java.util.Map;
import java.util.Vector;
${definition}"
      associated_classes
	class_ref 1098779 // SQLOutputImpl
      end
      comment "@(#)SQLOutputImpl.java	1.5 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
