class TokenMgrError
!!!3543195.java!!!	addEscapes(in str : String) : String
      StringBuffer retval = new StringBuffer();
      char ch;
      for (int i = 0; i < str.length(); i++) {
        switch (str.charAt(i))
        {
           case 0 :
              continue;
           case '\b':
              retval.append("\\b");
              continue;
           case '\t':
              retval.append("\\t");
              continue;
           case '\n':
              retval.append("\\n");
              continue;
           case '\f':
              retval.append("\\f");
              continue;
           case '\r':
              retval.append("\\r");
              continue;
           case '\"':
              retval.append("\\\"");
              continue;
           case '\'':
              retval.append("\\\'");
              continue;
           case '\\':
              retval.append("\\\\");
              continue;
           default:
              if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {
                 String s = "0000" + Integer.toString(ch, 16);
                 retval.append("\\u" + s.substring(s.length() - 4, s.length()));
              } else {
                 retval.append(ch);
              }
              continue;
        }
      }
      return retval.toString();
!!!3543323.java!!!	LexicalError(inout EOFSeen : boolean, in lexState : int, in errorLine : int, in errorColumn : int, in errorAfter : String, in curChar : char) : String
      return("Lexical error at line " +
           errorLine + ", column " +
           errorColumn + ".  Encountered: " +
           (EOFSeen ? "<EOF> " : ("\"" + addEscapes(String.valueOf(curChar)) + "\"") + " (" + (int)curChar + "), ") +
           "after : \"" + addEscapes(errorAfter) + "\"");
!!!3543451.java!!!	getMessage() : String
      return super.getMessage();
!!!3543707.java!!!	TokenMgrError(in message : String, in reason : int)
      super(message);
      errorCode = reason;
!!!3543835.java!!!	TokenMgrError(inout EOFSeen : boolean, in lexState : int, in errorLine : int, in errorColumn : int, in errorAfter : String, in curChar : char, in reason : int)
      this(LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar), reason);
