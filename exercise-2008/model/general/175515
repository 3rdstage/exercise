format 66
"dom" // src::javax::xml::transform::dom
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/xml/transform/dom"
  java_package "javax.xml.transform.dom"
  classview 170651 "dom"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 778523 "DOMSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as a holder for a transformation Source tree in the
form of a Document Object Model (DOM) tree.</p>

<p>Note that XSLT requires namespace support. Attempting to transform a DOM
that was not contructed with a namespace-aware parser may result in errors.
Parsers can be made namespace aware by calling
{@link javax.xml.parsers.DocumentBuilderFactory#setNamespaceAware(boolean awareness)}.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.5.14.1.2.2 $, $Date: 2004/07/13 22:27:49 $
@see <a href=\"http://www.w3.org/TR/DOM-Level-2\">Document Object Model (DOM) Level 2 Specification</a>"
      classrelation 2617115 // <realization>
	relation 2617115 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2617115 // <realization>
	  b parent class_ref 691227 // Source
      end

      classrelation 2617243 // node (<unidirectional association>)
	relation 2617243 --->
	  a role_name "node" private
	    comment "
<p><code>Node</code> to serve as DOM source.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2617243 // node (<unidirectional association>)
	  b parent class_ref 345499 // Node
      end

      attribute 3390363 "systemID"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>The base ID (URL or system ID) from where URLs
will be resolved.</p>
"
      end

      attribute 3390491 "FEATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"http://javax.xml.transform.dom.DOMSource/feature\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Source input of this type.
"
      end

      operation 10089115 "DOMSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.  If this constructor is used, and
no DOM source is set using {@link #setNode(Node node)} , then the
<code>Transformer</code> will
create an empty source {@link org.w3c.dom.Document} using
{@link javax.xml.parsers.DocumentBuilder#newDocument()}.</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)"
      end

      operation 10089243 "DOMSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "n" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new input source with a DOM node.  The operation
will be applied to the subtree rooted at this node.  In XSLT,
a \"/\" pattern still means the root of the tree (not the subtree),
and the evaluation of global variables and parameters is done
from the root node also.

@param n The DOM node that will contain the Source tree."
      end

      operation 10089371 "DOMSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "node" type class_ref 345499 // Node
	  param in name "systemID" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new input source with a DOM node, and with the
system ID also passed in as the base URI.

@param node The DOM node that will contain the Source tree.
@param systemID Specifies the base URI associated with node."
      end

      operation 10089499 "setNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the node that will represents a Source DOM tree.

@param node The node that is to be transformed."
      end

      operation 10089627 "getNode"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the node that represents a Source DOM tree.

@return The node that is to be transformed."
      end

      operation 10089755 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param in name "systemID" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base ID (URL or system ID) from where URLs
will be resolved.

@param systemID Base URL for this DOM tree."
      end

      operation 10089883 "getSystemId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base ID (URL or system ID) from where URLs
will be resolved.

@return Base URL for this DOM tree."
      end
    end

    class 778651 "DOMResult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as a holder for a transformation result tree in the form of a Document Object Model (DOM) tree.</p>

<p>If no output DOM source is set, the transformation will create a Document node as the holder for the result of the transformation,
which may be retrieved with {@link #getNode()}.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.4.16.5 $, $Date: 2004/07/13 22:27:49 $"
      classrelation 2616731 // <realization>
	relation 2616731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2616731 // <realization>
	  b parent class_ref 707483 // Result
      end

      attribute 3390107 "FEATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"http://javax.xml.transform.dom.DOMResult/feature\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " <p>If {@link javax.xml.transform.TransformerFactory#getFeature}
returns <code>true</code> when passed this value as an argument,
the <code>Transformer</code> supports <code>Result</code> output of this type.</p>
"
      end

      operation 10087707 "DOMResult"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.</p>

<p><code>node</code>,
<code>siblingNode</code> and
<code>systemId</code>
will be set to <code>null</code>.</p>"
      end

      operation 10087835 "DOMResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Use a DOM node to create a new output target.</p>

<p>In practice, the node should be
a {@link org.w3c.dom.Document} node,
a {@link org.w3c.dom.DocumentFragment} node, or
a {@link org.w3c.dom.Element} node.
In other words, a node that accepts children.</p>

<p><code>siblingNode</code> and
<code>systemId</code>
will be set to <code>null</code>.</p>

@param node The DOM node that will contain the result tree."
      end

      operation 10087963 "DOMResult"
	public explicit_return_type ""
	nparams 2
	  param inout name "node" type class_ref 345499 // Node
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Use a DOM node to create a new output target with the specified System ID.<p>

<p>In practice, the node should be
a {@link org.w3c.dom.Document} node,
a {@link org.w3c.dom.DocumentFragment} node, or
a {@link org.w3c.dom.Element} node.
In other words, a node that accepts children.</p>

<p><code>siblingNode</code> will be set to <code>null</code>.</p>

@param node The DOM node that will contain the result tree.
@param systemId The system identifier which may be used in association with this node."
      end

      operation 10088091 "DOMResult"
	public explicit_return_type ""
	nparams 2
	  param inout name "node" type class_ref 345499 // Node
	  param inout name "nextSibling" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before.</p>

<p>In practice, <code>node</code> and <code>nextSibling</code> should be
a {@link org.w3c.dom.Document} node,
a {@link org.w3c.dom.DocumentFragment} node, or
a {@link org.w3c.dom.Element} node.
In other words, a node that accepts children.</p>

<p>Use <code>nextSibling</code> to specify the child node 
where the result nodes should be inserted before. 
If <code>nextSibling</code> is not a sibling of <code>node</code>,
then an <code>IllegalArgumentException</code> is thrown.
If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>,
then an <code>IllegalArgumentException</code> is thrown.
If <code>nextSibling</code> is <code>null</code>,
then the behavior is the same as calling {@link #DOMResult(Node node)},
i.e. append the result nodes as the last child of the specified <code>node</code>.</p>

<p><code>systemId</code> will be set to <code>null</code>.</p>

@param node The DOM node that will contain the result tree.
@param nextSibling The child node where the result nodes should be inserted before.

@throws IllegalArgumentException If <code>nextSibling</code> is not a sibling of <code>node</code>.
@throws IllegalArgumentException If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>.

@since 1.5"
      end

      operation 10088219 "DOMResult"
	public explicit_return_type ""
	nparams 3
	  param inout name "node" type class_ref 345499 // Node
	  param inout name "nextSibling" type class_ref 345499 // Node
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and
the specified System ID.</p>

<p>In practice, <code>node</code> and <code>nextSibling</code> should be
a {@link org.w3c.dom.Document} node,
a {@link org.w3c.dom.DocumentFragment} node, or a
{@link org.w3c.dom.Element} node.
In other words, a node that accepts children.</p>

<p>Use <code>nextSibling</code> to specify the child node 
where the result nodes should be inserted before.
If <code>nextSibling</code> is not a sibling of <code>node</code>,
then an <code>IllegalArgumentException</code> is thrown.
If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>,
then an <code>IllegalArgumentException</code> is thrown.
If <code>nextSibling</code> is <code>null</code>,
then the behavior is the same as calling {@link #DOMResult(Node node, String systemId)},
i.e. append the result nodes as the last child of the specified node and use the specified System ID.</p>

@param node The DOM node that will contain the result tree.
@param nextSibling The child node where the result nodes should be inserted before.
@param systemId The system identifier which may be used in association with this node.

@throws IllegalArgumentException If <code>nextSibling</code> is not a sibling of <code>node</code>.
@throws IllegalArgumentException If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>.

@since 1.5"
      end

      operation 10088347 "setNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the node that will contain the result DOM tree.<p>

<p>In practice, the node should be
a {@link org.w3c.dom.Document} node,
a {@link org.w3c.dom.DocumentFragment} node, or
a {@link org.w3c.dom.Element} node.
In other words, a node that accepts children.</p>

<p>An <code>IllegalStateException</code> is thrown if <code>nextSibling</code> is not <code>null</code> and
<code>node</code> is not a parent of <code>nextSibling</code>. 
An <code>IllegalStateException</code> is thrown if <code>node</code> is <code>null</code> and
<code>nextSibling</code> is not <code>null</code>.</p> 

@param node The node to which the transformation will be appended.

@throws IllegalStateException If <code>nextSibling</code> is not <code>null</code> and
  <code>nextSibling</code> is not a child of <code>node</code>.
@throws IllegalStateException If <code>node</code> is <code>null</code> and
  <code>nextSibling</code> is not <code>null</code>."
      end

      operation 10088475 "getNode"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the node that will contain the result DOM tree.</p>

<p>If no node was set via
{@link #DOMResult(Node node)},
{@link #DOMResult(Node node, String systeId)},
{@link #DOMResult(Node node, Node nextSibling)},
{@link #DOMResult(Node node, Node nextSibling, String systemId)} or
{@link #setNode(Node node)},
then the node will be set by the transformation, and may be obtained from this method once the transformation is complete.
Calling this method before the transformation will return <code>null</code>.</p>

@return The node to which the transformation will be appended."
      end

      operation 10088603 "setNextSibling"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nextSibling" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the child node before which the result nodes will be inserted.</p>

<p>Use <code>nextSibling</code> to specify the child node
before which the result nodes should be inserted.
If <code>nextSibling</code> is not a descendant of <code>node</code>,
then an <code>IllegalArgumentException</code> is thrown.
If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>,
then an <code>IllegalStateException</code> is thrown.
If <code>nextSibling</code> is <code>null</code>,
then the behavior is the same as calling {@link #DOMResult(Node node)},
i.e. append the result nodes as the last child of the specified <code>node</code>.</p>

@param nextSibling The child node before which the result nodes will be inserted.

@throws IllegalArgumentException If <code>nextSibling</code> is not a descendant of <code>node</code>.
@throws IllegalStateException If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>.

@since 1.5"
      end

      operation 10088731 "getNextSibling"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the child node before which the result nodes will be inserted.</p>

<p>If no node was set via
{@link #DOMResult(Node node, Node nextSibling)},
{@link #DOMResult(Node node, Node nextSibling, String systemId)} or
{@link #setNextSibling(Node nextSibling)},
then <code>null</code> will be returned.</p>

@return The child node before which the result nodes will be inserted.

@since 1.5"
      end

      operation 10088859 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the systemId that may be used in association with the node.</p>

@param systemId The system identifier as a URI string."
      end

      operation 10088987 "getSystemId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the System Identifier.</p>

<p>If no System ID was set via
{@link #DOMResult(Node node, String systemId)},
{@link #DOMResult(Node node, Node nextSibling, String systemId)} or
{@link #setSystemId(String systemId)},
then <code>null</code> will be returned.</p>

@return The system identifier."
      end

      classrelation 2616859 // node (<unidirectional association>)
	relation 2616859 --->
	  a role_name "node" init_value "=  null" private
	    comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

<p>The node to which the transformation will be appended.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616859 // node (<unidirectional association>)
	  b parent class_ref 345499 // Node
      end

      classrelation 2616987 // nextSibling (<unidirectional association>)
	relation 2616987 --->
	  a role_name "nextSibling" init_value "=  null" private
	    comment "
<p>The child node before which the result nodes will be inserted.</p>

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2616987 // nextSibling (<unidirectional association>)
	  b parent class_ref 345499 // Node
      end

      attribute 3390235 "systemId"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>The System ID that may be used in association with the node.</p>
"
      end
    end

    class 1216027 "DOMLocator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates the position of a node in a source DOM, intended
primarily for error reporting.  To use a DOMLocator, the receiver of an
error must downcast the {@link javax.xml.transform.SourceLocator}
object returned by an exception. A {@link javax.xml.transform.Transformer}
may use this object for purposes other than error reporting, for instance,
to indicate the source node that originated a result node."
      classrelation 2616603 // <generalisation>
	relation 2616603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2616603 // <generalisation>
	  b parent class_ref 681371 // SourceLocator
      end

      operation 10087579 "getOriginatingNode"
	public return_type class_ref 345499 // Node
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node where the event occurred.

@return The node that is the location for the event."
      end
    end
  end

  deploymentview 173979 "dom"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 902299 "DOMLocator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.SourceLocator;
import org.w3c.dom.Node;
${definition}"
      associated_classes
	class_ref 1216027 // DOMLocator
      end
      comment "Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


@(#)DOMLocator.java	1.10 03/12/19"
    end

    artifact 902427 "DOMResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import org.w3c.dom.Node;
${definition}"
      associated_classes
	class_ref 778651 // DOMResult
      end
      comment " $Id: DOMResult.java,v 1.4.16.5 2004/07/13 22:27:49 jsuttor Exp $

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


@(#)DOMResult.java	1.15 04/07/13"
    end

    artifact 902555 "DOMSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import org.w3c.dom.Node;
${definition}"
      associated_classes
	class_ref 778523 // DOMSource
      end
      comment " $Id: DOMSource.java,v 1.5.14.1.2.2 2004/07/13 22:27:49 jsuttor Exp $

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


@(#)DOMSource.java	1.16 04/07/13"
    end
  end
end
