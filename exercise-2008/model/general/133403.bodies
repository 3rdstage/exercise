class LargeSquareRootTable
!!!134427.java!!!	LargeSquareRootTable()

		this.table = new ListOrderedMap();
		for(int i = MIN; i <= MAX; i++){ table.put(i, Math.sqrt(i));}
!!!134555.java!!!	getInstance() : LargeSquareRootTable

		return singleton;
!!!134683.java!!!	squareRoot(in n : int) : double

		if(n < MIN || n > MAX){ 
			throw new IllegalArgumentException("The number should be integer between " + MIN + " and " + MAX + ".");
		}
		
		return (Double) table.get(n);
!!!134811.java!!!	toString() : String

		StringBuilder stb = new StringBuilder(100*(MAX + 1));
		
		Integer key = null;
		for(Iterator<Integer> keys = this.table.keySet().iterator(); keys.hasNext(); ){
			key = keys.next();
			stb.append("sqrt(").append(key).append(") = ").append(table.get(key)).append("\n");
		}
		
		return stb.toString();
