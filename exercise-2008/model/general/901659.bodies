class BeanContextServicesSupport
!!!6816411.java!!!	BeanContextServicesSupport(inout peer : BeanContextServices, inout lcle : Locale, inout dTime : boolean, inout visible : boolean)
	super(peer, lcle, dTime, visible);
!!!6816539.java!!!	BeanContextServicesSupport(inout peer : BeanContextServices, inout lcle : Locale, inout dtime : boolean)
	this (peer, lcle, dtime, true);
!!!6816667.java!!!	BeanContextServicesSupport(inout peer : BeanContextServices, inout lcle : Locale)
	this (peer, lcle, false, true);
!!!6816795.java!!!	BeanContextServicesSupport(inout peer : BeanContextServices)
	this (peer, null, false, true);
!!!6816923.java!!!	BeanContextServicesSupport()
	this (null, null, false, true);
!!!6817051.java!!!	initialize() : void
	super.initialize();

	services     = new HashMap(serializable + 1);
	bcsListeners = new ArrayList(1);
!!!6817179.java!!!	getBeanContextServicesPeer() : BeanContextServices
 
	return (BeanContextServices)getBeanContextChildPeer();
!!!6820891.java!!!	createBCSChild(inout targetChild : Object, inout peer : Object) : BCSChild
	return new BCSSChild(targetChild, peer);
!!!6821275.java!!!	createBCSSServiceProvider(inout sc : Class, inout bcsp : BeanContextServiceProvider) : BCSSServiceProvider
	    return new BCSSServiceProvider(sc, bcsp);
!!!6821403.java!!!	addBeanContextServicesListener(inout bcsl : BeanContextServicesListener) : void
	if (bcsl == null) throw new NullPointerException("bcsl");

	synchronized(bcsListeners) {
	    if (bcsListeners.contains(bcsl))
		return;
	    else
	        bcsListeners.add(bcsl);
	}
!!!6821531.java!!!	removeBeanContextServicesListener(inout bcsl : BeanContextServicesListener) : void
	if (bcsl == null) throw new NullPointerException("bcsl");

	synchronized(bcsListeners) {
	    if (!bcsListeners.contains(bcsl))
		return;
	    else
	        bcsListeners.remove(bcsl);
	}
!!!6821659.java!!!	addService(inout serviceClass : Class, inout bcsp : BeanContextServiceProvider) : boolean
	return addService(serviceClass, bcsp, true);
!!!6821787.java!!!	addService(inout serviceClass : Class, inout bcsp : BeanContextServiceProvider, inout fireEvent : boolean) : boolean

	if (serviceClass == null) throw new NullPointerException("serviceClass");
	if (bcsp         == null) throw new NullPointerException("bcsp");

	synchronized(BeanContext.globalHierarchyLock) {
            if (services.containsKey(serviceClass))
    	        return false;
    	    else {
    	        services.put(serviceClass,  createBCSSServiceProvider(serviceClass, bcsp));
    
    	        if (bcsp instanceof Serializable) serializable++;
    
    	        if (!fireEvent) return true;
    
    
    	        BeanContextServiceAvailableEvent bcssae = new BeanContextServiceAvailableEvent(getBeanContextServicesPeer(), serviceClass);
    
    	        fireServiceAdded(bcssae);
    
    	        synchronized(children) {
    	            Iterator i = children.keySet().iterator();
    
    	            while (i.hasNext()) {
    	                Object c = i.next();
    
    	                if (c instanceof BeanContextServices) {
    		            ((BeanContextServicesListener)c).serviceAvailable(bcssae);
    	                }
    	            }
    	        }
    
    	        return true;
    	    }
	}
!!!6821915.java!!!	revokeService(inout serviceClass : Class, inout bcsp : BeanContextServiceProvider, inout revokeCurrentServicesNow : boolean) : void

	if (serviceClass == null) throw new NullPointerException("serviceClass");
	if (bcsp         == null) throw new NullPointerException("bcsp");

	synchronized(BeanContext.globalHierarchyLock) {
	    if (!services.containsKey(serviceClass)) return;

	    BCSSServiceProvider bcsssp = (BCSSServiceProvider)services.get(serviceClass);
	
	    if (!bcsssp.getServiceProvider().equals(bcsp)) 
	        throw new IllegalArgumentException("service provider mismatch");

	    services.remove(serviceClass);

            if (bcsp instanceof Serializable) serializable--;

	    Iterator i = bcsChildren(); // get the BCSChild values.

	    while (i.hasNext()) {
	        ((BCSSChild)i.next()).revokeService(serviceClass, false, revokeCurrentServicesNow);
	    }

	    fireServiceRevoked(serviceClass, revokeCurrentServicesNow);
	}
!!!6822043.java!!!	hasService(inout serviceClass : Class) : boolean
	if (serviceClass == null) throw new NullPointerException("serviceClass");

	synchronized(BeanContext.globalHierarchyLock) {
	    if (services.containsKey(serviceClass)) return true;

	    BeanContextServices bcs = null;

	    try {
	        bcs = (BeanContextServices)getBeanContext();
	    } catch (ClassCastException cce) {
	        return false;
	    }

	    return bcs == null ? false : bcs.hasService(serviceClass);
	}
!!!6822811.java!!!	getService(inout child : BeanContextChild, inout requestor : Object, inout serviceClass : Class, inout serviceSelector : Object, inout bcsrl : BeanContextServiceRevokedListener) : Object
	if (child        == null) throw new NullPointerException("child");
	if (serviceClass == null) throw new NullPointerException("serviceClass");
	if (requestor    == null) throw new NullPointerException("requestor");
	if (bcsrl        == null) throw new NullPointerException("bcsrl");

	Object              service = null;
	BCSSChild           bcsc;
	BeanContextServices bcssp   = getBeanContextServicesPeer();

	synchronized(BeanContext.globalHierarchyLock) {
	    synchronized(children) { bcsc = (BCSSChild)children.get(child); }

	    if (bcsc == null) throw new IllegalArgumentException("not a child of this context"); // not a child ...

	    BCSSServiceProvider bcsssp = (BCSSServiceProvider)services.get(serviceClass);

	    if (bcsssp != null) {
	        BeanContextServiceProvider bcsp = bcsssp.getServiceProvider();
	        service = bcsp.getService(bcssp, requestor, serviceClass, serviceSelector);
	        if (service != null) { // do bookkeeping ...
		    try {
	                bcsc.usingService(requestor, service, serviceClass, bcsp, false, bcsrl);
		    } catch (TooManyListenersException tmle) {
		        bcsp.releaseService(bcssp, requestor, service);
		        throw tmle;
		    } catch (UnsupportedOperationException uope) {
		        bcsp.releaseService(bcssp, requestor, service);
		        throw uope; // unchecked rt exception
		    }

		    return service;
	        }
	    }


	    if (proxy != null) {

	        // try to delegate ...

	        service = proxy.getService(bcssp, requestor, serviceClass, serviceSelector);
	
	        if (service != null) { // do bookkeeping ...
		    try {
		        bcsc.usingService(requestor, service, serviceClass, proxy, true, bcsrl);
		    } catch (TooManyListenersException tmle) {
		        proxy.releaseService(bcssp, requestor, service);
		        throw tmle;
		    } catch (UnsupportedOperationException uope) {
		        proxy.releaseService(bcssp, requestor, service);
		        throw uope; // unchecked rt exception
		    }

		    return service;
	        }
	    }
	}

       	return null;
!!!6822939.java!!!	releaseService(inout child : BeanContextChild, inout requestor : Object, inout service : Object) : void
	if (child     == null) throw new NullPointerException("child");
	if (requestor == null) throw new NullPointerException("requestor");
	if (service   == null) throw new NullPointerException("service");

	BCSSChild bcsc;

	synchronized(BeanContext.globalHierarchyLock) {
	        synchronized(children) { bcsc = (BCSSChild)children.get(child); }

	        if (bcsc != null)
		    bcsc.releaseService(requestor, service);
		else
		   throw new IllegalArgumentException("child actual is not a child of this BeanContext");
        }
!!!6823067.java!!!	getCurrentServiceClasses() : Iterator
	return new BCSIterator(services.keySet().iterator());
!!!6823195.java!!!	getCurrentServiceSelectors(inout serviceClass : Class) : Iterator
	
	BCSSServiceProvider bcsssp = (BCSSServiceProvider)services.get(serviceClass);
	
	return bcsssp != null ? new BCSIterator(bcsssp.getServiceProvider().getCurrentServiceSelectors(getBeanContextServicesPeer(), serviceClass)) : null;
!!!6823323.java!!!	serviceAvailable(inout bcssae : BeanContextServiceAvailableEvent) : void
	synchronized(BeanContext.globalHierarchyLock) {
	    if (services.containsKey(bcssae.getServiceClass())) return;

	    fireServiceAdded(bcssae);

	    Iterator i;

	    synchronized(children) {
	        i = children.keySet().iterator();
	    }

	    while (i.hasNext()) {
	        Object c = i.next();

	        if (c instanceof BeanContextServices) {
	            ((BeanContextServicesListener)c).serviceAvailable(bcssae);
	        }
	    }
	}
!!!6823451.java!!!	serviceRevoked(inout bcssre : BeanContextServiceRevokedEvent) : void
	synchronized(BeanContext.globalHierarchyLock) {
	    if (services.containsKey(bcssre.getServiceClass())) return;

	    fireServiceRevoked(bcssre);

	    Iterator i;

	    synchronized(children) {
	        i = children.keySet().iterator();
	    }

	    while (i.hasNext()) {
	        Object c = i.next();

	        if (c instanceof BeanContextServices) {
	            ((BeanContextServicesListener)c).serviceRevoked(bcssre);
	        }
	    }
	}
!!!6823579.java!!!	getChildBeanContextServicesListener(inout child : Object) : BeanContextServicesListener
	try {
	    return (BeanContextServicesListener)child;
	} catch (ClassCastException cce) {
	    return null;
	}
!!!6823707.java!!!	childJustRemovedHook(inout child : Object, inout bcsc : BCSChild) : void
	BCSSChild bcssc = (BCSSChild)bcsc;

	bcssc.cleanupReferences();
!!!6823835.java!!!	releaseBeanContextResources() : void
	Object[] bcssc;

	super.releaseBeanContextResources();

	synchronized(children) {
	    if (children.isEmpty()) return;

	    bcssc = children.values().toArray();
	}


	for (int i = 0; i < bcssc.length; i++) {
	    ((BCSSChild)bcssc[i]).revokeAllDelegatedServicesNow();
	}

	proxy = null;
!!!6823963.java!!!	initializeBeanContextResources() : void
	super.initializeBeanContextResources();

	BeanContext nbc = getBeanContext();

	if (nbc == null) return;

	try {
	    BeanContextServices bcs = (BeanContextServices)nbc;

	    proxy = new BCSSProxyServiceProvider(bcs);
	} catch (ClassCastException cce) {
	    // do nothing ...
	}
!!!6824091.java!!!	fireServiceAdded(inout serviceClass : Class) : void
	BeanContextServiceAvailableEvent bcssae = new BeanContextServiceAvailableEvent(getBeanContextServicesPeer(), serviceClass); 

	fireServiceAdded(bcssae);
!!!6824219.java!!!	fireServiceAdded(inout bcssae : BeanContextServiceAvailableEvent) : void
	Object[]		         copy;

	synchronized (bcsListeners) { copy = bcsListeners.toArray(); }

	for (int i = 0; i < copy.length; i++) {
	    ((BeanContextServicesListener)copy[i]).serviceAvailable(bcssae);
	}
!!!6824347.java!!!	fireServiceRevoked(inout bcsre : BeanContextServiceRevokedEvent) : void
	Object[]		         copy;

	synchronized (bcsListeners) { copy = bcsListeners.toArray(); }

	for (int i = 0; i < copy.length; i++) {
	    ((BeanContextServiceRevokedListener)copy[i]).serviceRevoked(bcsre);
	}
!!!6824475.java!!!	fireServiceRevoked(inout serviceClass : Class, inout revokeNow : boolean) : void
	Object[]		       copy;
	BeanContextServiceRevokedEvent bcsre = new BeanContextServiceRevokedEvent(getBeanContextServicesPeer(), serviceClass, revokeNow); 

	synchronized (bcsListeners) { copy = bcsListeners.toArray(); }

	for (int i = 0; i < copy.length; i++) {
	    ((BeanContextServicesListener)copy[i]).serviceRevoked(bcsre);
	}
!!!6824603.java!!!	bcsPreSerializationHook(inout oos : ObjectOutputStream) : void

	oos.writeInt(serializable);

	if (serializable <= 0) return;

	int count = 0;

	Iterator i = services.entrySet().iterator();

	while (i.hasNext() && count < serializable) {
	    Map.Entry 		entry = (Map.Entry)i.next();
	    BCSSServiceProvider bcsp  = null;

	     try {
		bcsp = (BCSSServiceProvider)entry.getValue();
	     } catch (ClassCastException cce) {
		continue;
	     }

	     if (bcsp.getServiceProvider() instanceof Serializable) {
		oos.writeObject(entry.getKey());
		oos.writeObject(bcsp);
		count++;
	     }
	}

	if (count != serializable) 
	    throw new IOException("wrote different number of service providers than expected");
!!!6824731.java!!!	bcsPreDeserializationHook(inout ois : ObjectInputStream) : void

	serializable = ois.readInt();

	int count = serializable;

	while (count > 0) {
	    services.put(ois.readObject(), ois.readObject());
	    count--;
	} 
!!!6824859.java!!!	writeObject(inout oos : ObjectOutputStream) : void
	oos.defaultWriteObject();

	serialize(oos, (Collection)bcsListeners);
!!!6824987.java!!!	readObject(inout ois : ObjectInputStream) : void

	ois.defaultReadObject();

	deserialize(ois, (Collection)bcsListeners);
