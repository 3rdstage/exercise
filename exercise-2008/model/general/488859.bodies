class WindowsArrowButton
!!!3013147.java!!!	WindowsArrowButton(in direction : int, inout background : Color, inout shadow : Color, inout darkShadow : Color, inout highlight : Color)
	    super(direction, background, shadow, darkShadow, highlight);
!!!3013275.java!!!	WindowsArrowButton(in direction : int)
            super(direction);
!!!3013403.java!!!	paint(inout g : Graphics) : void
	    XPStyle xp = XPStyle.getXP();
	    if (xp != null) {
		ButtonModel model = getModel();
                Skin skin = xp.getSkin(scrollbar, Part.SBP_ARROWBTN);
                State state = null;

		// normal, rollover, pressed, disabled
		if (model.isArmed() && model.isPressed()) {
                    switch (direction) {
                    case NORTH: state = State.UPPRESSED;    break;
                    case SOUTH: state = State.DOWNPRESSED;  break;
                    case WEST:  state = State.LEFTPRESSED;  break;
                    case EAST:  state = State.RIGHTPRESSED; break;
                    }
		} else if (!model.isEnabled()) {
                    switch (direction) {
                    case NORTH: state = State.UPDISABLED;    break;
                    case SOUTH: state = State.DOWNDISABLED;  break;
                    case WEST:  state = State.LEFTDISABLED;  break;
                    case EAST:  state = State.RIGHTDISABLED; break;
                    }
		} else if (model.isRollover() || model.isPressed()) {
                    switch (direction) {
                    case NORTH: state = State.UPHOT;    break;
                    case SOUTH: state = State.DOWNHOT;  break;
                    case WEST:  state = State.LEFTHOT;  break;
                    case EAST:  state = State.RIGHTHOT; break;
                    }
                } else {
                  switch (direction) {
                  case NORTH: state = State.UPNORMAL;    break;
                  case SOUTH: state = State.DOWNNORMAL;  break;
                  case WEST:  state = State.LEFTNORMAL;  break;
                  case EAST:  state = State.RIGHTNORMAL; break;
                  }
		}

                skin.paintSkin(g, 0, 0, getWidth(), getHeight(), state);
	    } else {
		super.paint(g);
	    }
!!!3013531.java!!!	getPreferredSize() : Dimension
            int size = 16;
            if (scrollbar != null) {
                switch (scrollbar.getOrientation()) {
                case JScrollBar.VERTICAL:
                    size = scrollbar.getWidth();
                    break;
                case JScrollBar.HORIZONTAL:
                    size = scrollbar.getHeight();
                    break;
                }
                size = Math.max(size, 5);
            }
            return new Dimension(size, size);
