format 76
"rmi" // src::javax::management::remote::rmi
  revision 4
  modified_by 31 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management/remote/rmi"
  java_package "javax.management.remote.rmi"
  classview 177307 "rmi"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1045147 "NoCallStackClassLoader"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A class loader that only knows how to define a limited number
of classes, and load a limited number of other classes through
delegation to another loader.  It is used to get around a problem
with Serialization, in particular as used by RMI (including
RMI/IIOP).  The JMX Remote API defines exactly what class loader
must be used to deserialize arguments on the server, and return
values on the client.  We communicate this class loader to RMI by
setting it as the context class loader.  RMI uses the context
class loader to load classes as it deserializes, which is what we
want.  However, before consulting the context class loader, it
looks up the call stack for a class with a non-null class loader,
and uses that if it finds one.  So, in the standalone version of
javax.management.remote, if the class you're looking for is known
to the loader of jmxremote.jar (typically the system class loader)
then that loader will load it.  This contradicts the class-loading
semantics required.

<p>We get around the problem by ensuring that the search up the
call stack will find a non-null class loader that doesn't load any
classes of interest, namely this one.  So even though this loader
is indeed consulted during deserialization, it never finds the
class being deserialized.  RMI then proceeds to use the context
class loader, as we require.

<p>This loader is constructed with the name and byte-code of one
or more classes that it defines, and a class-loader to which it
will delegate certain other classes required by that byte-code.
We construct the byte-code somewhat painstakingly, by compiling
the Java code directly, converting into a string, copying that
string into the class that needs this loader, and using the
stringToBytes method to convert it into the byte array.  We
compile with -g:none because there's not much point in having
line-number information and the like in these directly-encoded
classes.

<p>The referencedClassNames should contain the names of all
classes that are referenced by the classes defined by this loader.
It is not necessary to include standard J2SE classes, however.
Here, a class is referenced if it is the superclass or a
superinterface of a defined class, or if it is the type of a
field, parameter, or return value.  A class is not referenced if
it only appears in the throws clause of a method or constructor.
Of course, referencedClassNames should not contain any classes
that the user might want to deserialize, because the whole point
of this loader is that it does not find such classes."
      classrelation 2080795 // <generalisation>
	relation 2080795 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2080795 // <generalisation>
	  b parent class_ref 163611 // ClassLoader
      end

      operation 8409627 "NoCallStackClassLoader"
	public explicit_return_type ""
	nparams 5
	  param in name "className" explicit_type "String"
	  param in name "byteCode" explicit_type "byte"
	  param in name "referencedClassNames" explicit_type "String"
	  param inout name "referencedClassLoader" type class_ref 163611 // ClassLoader
	  param inout name "protectionDomain" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Simplified constructor when this loader only defines one class.  "
      end

      operation 8409755 "NoCallStackClassLoader"
	public explicit_return_type ""
	nparams 5
	  param in name "classNames" explicit_type "String"
	  param in name "byteCodes" explicit_type "byte"
	  param in name "referencedClassNames" explicit_type "String"
	  param inout name "referencedClassLoader" type class_ref 163611 // ClassLoader
	  param inout name "protectionDomain" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8409883 "findClass"
	protected return_type class_ref 164635 // Class
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is called at most once per name.  Define the name
if it is one of the classes whose byte code we have, or
delegate the load if it is one of the referenced classes."
      end

      attribute 3066651 "classNames"
	const_attribute private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3066779 "byteCodes"
	const_attribute private explicit_type "byte"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3066907 "referencedClassNames"
	const_attribute private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2080923 // referencedClassLoader (<unidirectional association>)
	relation 2080923 --->
	  a role_name "referencedClassLoader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2080923 // referencedClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      classrelation 2081051 // protectionDomain (<unidirectional association>)
	relation 2081051 --->
	  a role_name "protectionDomain" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2081051 // protectionDomain (<unidirectional association>)
	  b parent class_ref 526875 // ProtectionDomain
      end

      operation 8410011 "stringToBytes"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>byte[]</code> using the characters of the
given <code>String</code>.  Only the low-order byte of each
character is used.  This method is useful to reduce the
footprint of classes that include big byte arrays (e.g. the
byte code of other classes), because a string takes up much
less space in a class file than the byte code to initialize a
<code>byte[]</code> with the same number of bytes.</p>

<p>We use just one byte per character even though characters
contain two bytes.  The resultant output length is much the
same: using one byte per character is shorter because it has
more characters in the optimal 1-127 range but longer because
it has more zero bytes (which are frequent, and are encoded as
two bytes in classfile UTF-8).  But one byte per character has
two key advantages: (1) you can see the string constants, which
is reassuring, (2) you don't need to know whether the class
file length is odd.</p>

<p>This method differs from {@link String#getBytes()} in that
it does not use any encoding.  So it is guaranteed that each
byte of the result is numerically identical (mod 256) to the
corresponding character of the input."
      end
    end

    class 1045275 "RMIConnection"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>RMI object used to forward an MBeanServer request from a client
to its MBeanServer implementation on the server side.  There is one
Remote object implementing this interface for each remote client
connected to an RMI connector.</p>

<p>User code does not usually refer to this interface.  It is
specified as part of the public API so that different
implementations of that API will interoperate.</p>

<p>To ensure that client parameters will be deserialized at the
server side with the correct classloader, client parameters such as
parameters used to invoke a method are wrapped in a {@link
MarshalledObject}.  An implementation of this interface must first
get the appropriate class loader for the operation and its target,
then deserialize the marshalled parameters with this classloader.
Except as noted, a parameter that is a
<code>MarshalledObject</code> or <code>MarshalledObject[]</code>
must not be null; the behavior is unspecified if it is.</p>

<p>Class loading aspects are detailed in the companion document 
<em>JMX Remote API</em>, which completes this documentation.
It should be available as a PDF document in the same place as this 
Javadoc specification.</p>

@since 1.5
@since.unbundled 1.0
<p>Most methods in this interface parallel methods in the {@link
MBeanServerConnection} interface.  Where an aspect of the behavior
of a method is not specified here, it is the same as in the
corresponding <code>MBeanServerConnection</code> method."
      classrelation 2081179 // <generalisation>
	relation 2081179 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2081179 // <generalisation>
	  b parent class_ref 233371 // Remote
      end

      operation 8410139 "getConnectionId"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the connection ID.  This string is different for
every open connection to a given RMI connector server.</p>

@return the connection ID

@see RMIConnector#connect RMIConnector.connect

@throws IOException if a general communication exception occurred."
      end

      operation 8410267 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes this connection.  On return from this method, the RMI
object implementing this interface is unexported, so further
remote calls to it will fail.</p>

@throws IOException if the connection could not be closed,
or the Remote object could not be unexported, or there was a
communication failure when transmitting the remote close
request."
      end

      operation 8410395 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName)}.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred
when trying to invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8410523 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 4
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, ObjectName)}.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param loaderName The object name of the class loader to be used.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8410651 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 5
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, Object[], String[])}.  The <code>Object[]</code>
parameter is wrapped in a <code>MarshalledObject</code>.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
constructor to be invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern, or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8410779 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 6
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, ObjectName, Object[], String[])}.  The
<code>Object[]</code> parameter is wrapped in a
<code>MarshalledObject</code>.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param loaderName The object name of the class loader to be used.
@param params An array containing the parameters of the
constructor to be invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
constructor to be invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern, or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8410907 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#unregisterMBean(ObjectName)}.

@param name The object name of the MBean to be unregistered.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws MBeanRegistrationException The preDeregister
((<code>MBeanRegistration</code> interface) method of the MBean
has thrown an exception.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the MBean you are when trying to
unregister is the {@link javax.management.MBeanServerDelegate
MBeanServerDelegate} MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411035 "getObjectInstance"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getObjectInstance(ObjectName)}.

@param name The object name of the MBean.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The <code>ObjectInstance</code> associated with the MBean
specified by <var>name</var>.  The contained <code>ObjectName</code>
is <code>name</code> and the contained class name is
<code>{@link #getMBeanInfo getMBeanInfo(name)}.getClassName()</code>.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411163 "queryMBeans"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#queryMBeans(ObjectName,
QueryExp)}.  The <code>QueryExp</code> is wrapped in a
<code>MarshalledObject</code>.

@param name The object name pattern identifying the MBeans to
be retrieved. If null or no domain and key properties are
specified, all the MBeans registered will be retrieved.
@param query The query expression to be applied for selecting
MBeans, encapsulated into a <code>MarshalledObject</code>. If
the <code>MarshalledObject</code> encapsulates a null value no
query expression will be applied for selecting MBeans.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return A set containing the <code>ObjectInstance</code>
objects for the selected MBeans.  If no MBean satisfies the
query an empty list is returned.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411291 "queryNames"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#queryNames(ObjectName,
QueryExp)}.  The <code>QueryExp</code> is wrapped in a
<code>MarshalledObject</code>.

@param name The object name pattern identifying the MBean names
to be retrieved. If null or no domain and key properties are
specified, the name of all registered MBeans will be retrieved.
@param query The query expression to be applied for selecting
MBeans, encapsulated into a <code>MarshalledObject</code>. If
the <code>MarshalledObject</code> encapsulates a null value no
query expression will be applied for selecting MBeans.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return A set containing the ObjectNames for the MBeans
selected.  If no MBean satisfies the query, an empty list is
returned.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411419 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#isRegistered(ObjectName)}.

@param name The object name of the MBean to be checked.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return True if the MBean is already registered in the MBean
server, false otherwise.

@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411547 "getMBeanCount"
	public return_type class_ref 170395 // Integer
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getMBeanCount()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the number of MBeans registered.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8411675 "getAttribute"
	public explicit_return_type "Object"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attribute" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 5
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#getAttribute(ObjectName,
String)}.

@param name The object name of the MBean from which the
attribute is to be retrieved.
@param attribute A String specifying the name of the attribute
to be retrieved.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return	The value of the retrieved attribute.

@throws AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@throws MBeanException Wraps an exception thrown by the
MBean's getter.
@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown when trying to invoke
the getter.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the attribute in parameter is
null.
@throws RuntimeMBeanException Wraps a runtime exception thrown
by the MBean's getter.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #setAttribute"
      end

      operation 8411803 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attributes" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#getAttributes(ObjectName,
String[])}.

@param name The object name of the MBean from which the
attributes are retrieved.
@param attributes A list of the attributes to be retrieved.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The list of the retrieved attributes.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@throws RuntimeOperationsException Wrap a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or attributes in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #setAttributes"
      end

      operation 8411931 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attribute" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#setAttribute(ObjectName,
Attribute)}.  The <code>Attribute</code> parameter is wrapped
in a <code>MarshalledObject</code>.

@param name The name of the MBean within which the attribute is
to be set.
@param attribute The identification of the attribute to be set
and the value it is to be set to, encapsulated into a
<code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@throws InvalidAttributeValueException The value specified
for the attribute is not valid.
@throws MBeanException Wraps an exception thrown by the
MBean's setter.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown when trying to invoke
the setter.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the attribute in parameter is
null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #getAttribute"
      end

      operation 8412059 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attributes" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#setAttributes(ObjectName,
AttributeList)}.  The <code>AttributeList</code> parameter is
wrapped in a <code>MarshalledObject</code>.

@param name The object name of the MBean within which the
attributes are to be set.
@param attributes A list of attributes: The identification of
the attributes to be set and the values they are to be set to,
encapsulated into a <code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The list of attributes that were set, with their new
values.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or attributes in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #getAttributes"
      end

      operation 8412187 "invoke"
	public explicit_return_type "Object"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "operationName" explicit_type "String"
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#invoke(ObjectName,
String, Object[], String[])}.  The <code>Object[]</code>
parameter is wrapped in a <code>MarshalledObject</code>.

@param name The object name of the MBean on which the method is
to be invoked.
@param operationName The name of the operation to be invoked.
@param params An array containing the parameters to be set when
the operation is invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
operation. The class objects will be loaded using the same
class loader as the one used for loading the MBean on which the
operation was invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The object returned by the operation, which represents
the result of invoking the operation on the MBean specified.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws MBeanException Wraps an exception thrown by the
MBean's invoked method.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown while trying to invoke
the method.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>operationName</code> is null."
      end

      operation 8412315 "getDefaultDomain"
	public explicit_return_type "String"
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getDefaultDomain()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the default domain.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8412443 "getDomains"
	public explicit_return_type "String"
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getDomains()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the list of domains.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred."
      end

      operation 8412571 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512923 // IntrospectionException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getMBeanInfo(ObjectName)}.

@param name The name of the MBean to analyze
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An instance of <code>MBeanInfo</code> allowing the
retrieval of all attributes and operations of this MBean.

@throws IntrospectionException An exception occured during
introspection.
@throws InstanceNotFoundException The MBean specified was
not found.
@throws ReflectionException An exception occurred when
trying to invoke the getMBeanInfo of a Dynamic MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null."
      end

      operation 8412699 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "className" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#isInstanceOf(ObjectName,
String)}.

@param name The <code>ObjectName</code> of the MBean.
@param className The name of the class.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return true if the MBean specified is an instance of the
specified class according to the rules above, false otherwise.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null."
      end

      operation 8412827 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 523419 // MarshalledObject
	  param inout name "handback" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#addNotificationListener(ObjectName,
ObjectName, NotificationFilter, Object)}.  The
<code>NotificationFilter</code> parameter is wrapped in a
<code>MarshalledObject</code>.  The <code>Object</code>
(handback) parameter is also wrapped in a
<code>MarshalledObject</code>.

@param name The name of the MBean on which the listener should
be added.
@param listener The object name of the listener which will
handle the notifications emitted by the registered MBean.
@param filter The filter object, encapsulated into a
<code>MarshalledObject</code>. If filter encapsulated in the
<code>MarshalledObject</code> has a null value, no filtering
will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted, encapsulated into a
<code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name of the
notification listener or of the notification broadcaster does
not match any of the registered MBeans.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException}.  The MBean named by
<code>listener</code> exists but does not implement the {@link
NotificationListener} interface, or <code>name</code> or
<code>listener</code> is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #removeNotificationListener(ObjectName, ObjectName, Subject)
@see #removeNotificationListener(ObjectName, ObjectName,
MarshalledObject, MarshalledObject, Subject)"
      end

      operation 8412955 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,
ObjectName)}.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@throws ListenerNotFoundException The listener is not
registered in the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>listener</code> is null.

@see #addNotificationListener"
      end

      operation 8413083 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 523419 // MarshalledObject
	  param inout name "handback" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,
ObjectName, NotificationFilter, Object)}.  The
<code>NotificationFilter</code> parameter is wrapped in a
<code>MarshalledObject</code>.  The <code>Object</code>
parameter is also wrapped in a <code>MarshalledObject</code>.

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added, encapsulated into a <code>MarshalledObject</code>.
@param handback The handback that was specified when the
listener was added, encapsulated into a <code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@throws ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>listener</code> is null.

@see #addNotificationListener"
      end

      operation 8413211 "addNotificationListeners"
	public return_type class_ref 170395 // Integer
	nparams 3
	  param inout name "names" type class_ref 510875 // ObjectName
	  param inout name "filters" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubjects" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Special Handling of Notifications -------------------------------------

<p>Handles the method {@link
javax.management.MBeanServerConnection#addNotificationListener(ObjectName,
NotificationListener, NotificationFilter, Object)}.</p>

<p>Register for notifications from the given MBeans that match
the given filters.  The remote client can subsequently retrieve
the notifications using the {@link #fetchNotifications
fetchNotifications} method.</p>

<p>For each listener, the original
<code>NotificationListener</code> and <code>handback</code> are
kept on the client side; in order for the client to be able to
identify them, the server generates and returns a unique
<code>listenerID</code>.  This <code>listenerID</code> is
forwarded with the <code>Notifications</code> to the remote
client.</p>

<p>If any one of the given (name, filter) pairs cannot be
registered, then the operation fails with an exception, and no
names or filters are registered.</p>

@param names the <code>ObjectNames</code> identifying the
MBeans emitting the Notifications.
@param filters an array of marshalled representations of the
<code>NotificationFilters</code>.  Elements of this array can
be null.
@param delegationSubjects the <code>Subjects</code> on behalf
of which the listeners are being added.  Elements of this array
can be null.  Also, the <code>delegationSubjects</code>
parameter itself can be null, which is equivalent to an array
of null values with the same size as the <code>names</code> and
<code>filters</code> arrays.

@return an array of <code>listenerIDs</code> identifying the
local listeners.  This array has the same number of elements as
the parameters.

@throws IllegalArgumentException if <code>names</code> or
<code>filters</code> is null, or if <code>names</code> contains
a null element, or if the three arrays do not all have the same
size.
@throws ClassCastException if one of the elements of
<code>filters</code> unmarshalls as a non-null object that is
not a <code>NotificationFilter</code>.
@throws InstanceNotFoundException if one of the
<code>names</code> does not correspond to any registered MBean.
@throws SecurityException if, for one of the MBeans, the
client, or the delegated Subject if any, does not have
permission to add a listener.
@throws IOException if a general communication exception occurred."
      end

      operation 8413339 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listenerIDs" type class_ref 170395 // Integer
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Handles the
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener)
removeNotificationListener(ObjectName, NotificationListener)} and
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener,NotificationFilter,Object)
removeNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)} methods.</p>

<p>This method removes one or more
<code>NotificationListener</code>s from a given MBean in the
MBean server.</p>

<p>The <code>NotificationListeners</code> are identified by the
IDs which were returned by the {@link
#addNotificationListeners(ObjectName[], MarshalledObject[],
Subject[])} method.</p>

@param name the <code>ObjectName</code> identifying the MBean 
emitting the Notifications.
@param listenerIDs the list of the IDs corresponding to the
listeners to remove.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException if the given
<code>name</code> does not correspond to any registered MBean.
@throws ListenerNotFoundException if one of the listeners was
not found on the server side.  This exception can happen if the
MBean discarded a listener for some reason other than a call to
<code>MBeanServer.removeNotificationListener</code>.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to remove the listeners.
@throws IOException if a general communication exception occurred.
@throws IllegalArgumentException if <code>ObjectName</code> or
<code>listenerIds</code> is null or if <code>listenerIds</code>
contains a null element."
      end

      operation 8413467 "fetchNotifications"
	public return_type class_ref 518811 // NotificationResult
	nparams 3
	  param in name "clientSequenceNumber" explicit_type "long"
	  param in name "maxNotifications" explicit_type "int"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Retrieves notifications from the connector server.  This
method can block until there is at least one notification or
until the specified timeout is reached.  The method can also
return at any time with zero notifications.</p>

<p>A notification can be included in the result if its sequence
number is no less than <code>clientSequenceNumber</code> and
this client has registered at least one listener for the MBean
generating the notification, with a filter that accepts the
notification.  Each listener that is interested in the
notification is identified by an Integer ID that was returned
by {@link #addNotificationListeners(ObjectName[],
MarshalledObject[], Subject[])}.</p>

@param clientSequenceNumber the first sequence number that the
client is interested in.  If negative, it is interpreted as
meaning the sequence number that the next notification will
have.

@param maxNotifications the maximum number of different
notifications to return.  The <code>TargetedNotification</code>
array in the returned <code>NotificationResult</code> can have
more elements than this if the same notification appears more
than once.  The behavior is unspecified if this parameter is
negative.

@param timeout the maximum time in milliseconds to wait for a
notification to arrive.  This can be 0 to indicate that the
method should not wait if there are no notifications, but
should return at once.  It can be <code>Long.MAX_VALUE</code>
to indicate that there is no timeout.  The behavior is
unspecified if this parameter is negative.

@return A <code>NotificationResult</code>.

@throws IOException if a general communication exception occurred."
      end
    end

    class 1045403 "RMIConnectionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Implementation of the {@link RMIConnection} interface.  User
code will not usually reference this class.</p>

@since 1.5
@since.unbundled 1.0"
      classrelation 2081307 // <realization>
	relation 2081307 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2081307 // <realization>
	  b parent class_ref 1045275 // RMIConnection
      end

      classrelation 2081435 // <realization>
	relation 2081435 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2081435 // <realization>
	  b parent class_ref 959003 // Unreferenced
      end

      operation 8413595 "RMIConnectionImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "rmiServer" type class_ref 1045531 // RMIServerImpl
	  param in name "connectionId" explicit_type "String"
	  param inout name "defaultClassLoader" type class_ref 163611 // ClassLoader
	  param inout name "subject" type class_ref 520987 // Subject
	  param inout name "env" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@link RMIConnection}. This connection can be
used with either the JRMP or IIOP transport. This object does
not export itself: it is the responsibility of the caller to
export it appropriately (see {@link
RMIJRMPServerImpl#makeClient(String,Subject)} and {@link
RMIIIOPServerImpl#makeClient(String,Subject)}.

@param rmiServer The RMIServerImpl object for which this
connection is created.  The behavior is unspecified if this
parameter is null.
@param connectionId The ID for this connection.  The behavior
is unspecified if this parameter is null.
@param defaultClassLoader The default ClassLoader to be used
when deserializing marshalled objects.  Can be null, to signify
the bootstrap class loader.
@param subject the authenticated subject to be used for
authorization.  Can be null, to signify that no subject has
been authenticated.
@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, equivalent to an
empty map."
      end

      operation 8413723 "getServerNotifFwd"
	private explicit_return_type "ServerNotifForwarder"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8413851 "getConnectionId"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8413979 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414107 "unreferenced"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414235 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 3
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------------
 MBeanServerConnection Wrapper
-------------------------------------------------------------------------"
      end

      operation 8414363 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 4
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414491 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 5
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414619 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 6
	  param in name "className" explicit_type "String"
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "loaderName" type class_ref 510875 // ObjectName
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414747 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8414875 "getObjectInstance"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415003 "queryMBeans"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415131 "queryNames"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "query" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415259 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415387 "getMBeanCount"
	public return_type class_ref 170395 // Integer
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415515 "getAttribute"
	public explicit_return_type "Object"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attribute" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 5
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415643 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "attributes" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415771 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attribute" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8415899 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "attributes" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416027 "invoke"
	public explicit_return_type "Object"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "operationName" explicit_type "String"
	  param inout name "params" type class_ref 523419 // MarshalledObject
	  param in name "signature" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416155 "getDefaultDomain"
	public explicit_return_type "String"
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416283 "getDomains"
	public explicit_return_type "String"
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416411 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 2
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512923 // IntrospectionException
	  exception class_ref 511003 // ReflectionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416539 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param in name "className" explicit_type "String"
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416667 "addNotificationListeners"
	public return_type class_ref 170395 // Integer
	nparams 3
	  param inout name "names" type class_ref 510875 // ObjectName
	  param inout name "filters" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubjects" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416795 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 523419 // MarshalledObject
	  param inout name "handback" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8416923 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listenerIDs" type class_ref 170395 // Integer
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8417051 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8417179 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "listener" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 523419 // MarshalledObject
	  param inout name "handback" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8417307 "fetchNotifications"
	public return_type class_ref 518811 // NotificationResult
	nparams 3
	  param in name "clientSequenceNumber" explicit_type "long"
	  param in name "maxNotifications" explicit_type "int"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8417435 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a string representation of this object.  In general,
the <code>toString</code> method returns a string that
\"textually represents\" this object. The result should be a
concise but informative representation that is easy for a
person to read.</p>

@return a String representation of this object."
      end

      class 1045659 "PrivilegedOperation"
	visibility private 
	nactuals 3
	actual class class_ref 529051 // PrivilegedExceptionAction
	  rank 0 explicit_value ""
	actual class class_ref 529051 // PrivilegedExceptionAction
	  rank 1 explicit_value ""
	actual class class_ref 529051 // PrivilegedExceptionAction
	  rank 2 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2081563 // <realization>
	  relation 2081563 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2081563 // <realization>
	    b parent class_ref 529051 // PrivilegedExceptionAction
	end

	operation 8417563 "PrivilegedOperation"
	  public explicit_return_type ""
	  nparams 2
	    param in name "operation" explicit_type "int"
	    param inout name "params" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8417691 "run"
	  public explicit_return_type "Object"
	  nparams 0
	  nexceptions 1
	    exception class_ref 165403 // Exception
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 3067035 "operation"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3067163 "params"
	  private explicit_type "Object"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 1045787 "RMIServerCommunicatorAdmin"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 8417819 "RMIServerCommunicatorAdmin"
	  public explicit_return_type ""
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8417947 "doStop"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8418075 "getClassLoaderRepository"
	private return_type class_ref 514331 // ClassLoaderRepository
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------------------------------------
 private methods
------------------------------------------------------------------------"
      end

      operation 8418203 "getClassLoader"
	private return_type class_ref 163611 // ClassLoader
	nparams 1
	  param in name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8418331 "getClassLoaderFor"
	private return_type class_ref 163611 // ClassLoader
	nparams 1
	  param in name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8418459 "doPrivilegedOperation"
	private explicit_return_type "Object"
	nparams 3
	  param in name "operation" explicit_type "int"
	  param in name "params" explicit_type "Object"
	  param in name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 959387 // PrivilegedActionException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8418587 "doOperation"
	private explicit_return_type "Object"
	nparams 2
	  param in name "operation" explicit_type "int"
	  param inout name "params" explicit_type "Object"
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3067291 "unmarshalClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	\"com.sun.jmx.remote.internal.MOGet\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Parameters to certain MBeanServer operations are passed
remotely wrapped inside a MarshalledObject, so that they can be
unwrapped with the right class loader.  This loader is
typically the target MBean's class loader.
MarshalledObject.get() uses the context class loader to load
classes as it deserializes, which is what we want.  However,
before consulting the context class loader, it consults the
calling class's loader, if that's not null.  So, in the
standalone version of javax.management.remote, if the class
you're looking for is known to RMIConnectionImpl's class loader
(typically the system class loader) then that loader will load
it. This contradicts the class-loading semantics defined in JSR
160, and can lead to problems if the same class name is known
to RMIConnectionImpl's class loader and to the class loader of
the target MBean in an invoke, setAttribute, or createMBean
operation. If it is deserialized by the former, it can't be
passed to the MBean, which expects the latter.

We therefore call MarshalledObject.get() from within a class
that is loaded by a NoCallStackClassLoader.  This loader
doesn't know any other classes, so cannot load any that it is
not supposed to.

This is not needed in J2SE 5, where javax.management.remote
is loaded by the bootstrap class loader.

The byteCodeString below encodes the following Java class,
compiled with \"javac -g:none\" on J2SE 1.4.2.

package com.sun.jmx.remote.internal;

import java.io.IOException;
import java.rmi.MarshalledObject;

public class MOGet implements Unmarshal {
public Object get(MarshalledObject mo)
throws IOException, ClassNotFoundException {
return mo.get();
}
}

"
      end

      attribute 3067419 "bootstrapLoaded"
	class_attribute private explicit_type "boolean"
	init_value "= 
	(RMIConnectionImpl.class.getClassLoader() ==
	 Object.class.getClassLoader())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 172315 "initialization"
	
	cpp "" ""
	java "  static {
	final String byteCodeString =
	    \"\\312\\376\\272\\276\\0\\0\\0.\\0\\30\\12\\0\\4\\0\\16\\12\\0\\17\\0\\20\\7\\0\\21\\7\\0\"+
	    \"\\22\\7\\0\\23\\1\\0\\6<init>\\1\\0\\3()V\\1\\0\\4Code\\1\\0\\3get\\1\\0/(Ljava/r\"+
	    \"mi/MarshalledObject;)Ljava/lang/Object;\\1\\0\\12Exceptions\\7\\0\\24\"+
	    \"\\7\\0\\25\\14\\0\\6\\0\\7\\7\\0\\26\\14\\0\\11\\0\\27\\1\\0!com/sun/jmx/remote/i\"+
	    \"nternal/MOGet\\1\\0\\20java/lang/Object\\1\\0%com/sun/jmx/remote/int\"+
	    \"ernal/Unmarshal\\1\\0\\23java/io/IOException\\1\\0\\40java/lang/Class\"+
	    \"NotFoundException\\1\\0\\31java/rmi/MarshalledObject\\1\\0\\24()Ljava\"+
	    \"/lang/Object;\\0!\\0\\3\\0\\4\\0\\1\\0\\5\\0\\0\\0\\2\\0\\1\\0\\6\\0\\7\\0\\1\\0\\10\\0\"+
	    \"\\0\\0\\21\\0\\1\\0\\1\\0\\0\\0\\5*\\267\\0\\1\\261\\0\\0\\0\\0\\0\\1\\0\\11\\0\\12\\0\\2\\0\"+
	    \"\\10\\0\\0\\0\\21\\0\\1\\0\\2\\0\\0\\0\\5+\\266\\0\\2\\260\\0\\0\\0\\0\\0\\13\\0\\0\\0\\6\\0\"+
	    \"\\2\\0\\14\\0\\15\\0\\0\";
	if (bootstrapLoaded)
	    unmarshal = null;
	else {
	    final byte[] byteCode =
		NoCallStackClassLoader.stringToBytes(byteCodeString);
	    final String[] otherClassNames = {
		Unmarshal.class.getName()
	    };
	    final Class thisClass = RMIConnectionImpl.class;
	    final ClassLoader thisClassLoader = thisClass.getClassLoader();
	    final PrivilegedExceptionAction action =
		new PrivilegedExceptionAction() {
		    public Object run() throws Exception {
			final ProtectionDomain thisProtectionDomain =
			    thisClass.getProtectionDomain();
			ClassLoader cl =
			    new NoCallStackClassLoader(unmarshalClassName,
						       byteCode,
						       otherClassNames,
						       thisClassLoader,
						       thisProtectionDomain);
			Class c = cl.loadClass(unmarshalClassName);
			return c.newInstance();
		    }
		};
	    try {
		unmarshal = (Unmarshal) AccessController.doPrivileged(action);
	    } catch (PrivilegedActionException e) {
		Error error = new Error(\"Internal error: \" + e);
		EnvHelp.initCause(error, e);
		throw error;
	    }
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 8418715 "unwrap"
	class_operation private explicit_return_type "Object"
	nparams 2
	  param in name "mo" type class_ref 523419 // MarshalledObject
	  param in name "cl" type class_ref 163611 // ClassLoader
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8418843 "unwrap"
	class_operation private explicit_return_type "Object"
	nparams 3
	  param in name "mo" type class_ref 523419 // MarshalledObject
	  param in name "cl1" type class_ref 163611 // ClassLoader
	  param in name "cl2" type class_ref 163611 // ClassLoader
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8418971 "newIOException"
	class_operation private return_type class_ref 179355 // IOException
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new IOException with a nested exception.
The nested exception is set only if JDK >= 1.4"
      end

      operation 8419099 "extractException"
	class_operation private return_type class_ref 165403 // Exception
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterate until we extract the real exception
from a stack of PrivilegedActionExceptions."
      end

      attribute 3067547 "NO_OBJECTS"
	class_attribute const_attribute private explicit_type "Object"
	multiplicity "[]"
	init_value "=  new Object[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3067675 "NO_STRINGS"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8419227 "nullIsEmpty"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param inout name "array" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The JMX spec doesn't explicitly say that a null Object[] or
String[] in e.g. MBeanServer.invoke is equivalent to an empty
array, but the RI behaves that way.  In the interests of
maximal interoperability, we make it so even when we're
connected to some other JMX implementation that might not do
that.  This should be clarified in the next version of JMX."
      end

      operation 8419355 "nullIsEmpty"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "array" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8419483 "checkNonNull"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "String"
	  param inout name "x" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similarly, the JMX spec says for some but not all methods in
MBeanServer that take an ObjectName target, that if it's null
you get this exception.  We specify it for all of them, and
make it so for the ones where it's not specified in JMX even if
the JMX implementation doesn't do so."
      end

      classrelation 2081947 // subject (<unidirectional association>)
	relation 2081947 --->
	  a role_name "subject" const_relation private
	    comment "------------------------------------------------------------------------
 private variables
------------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2081947 // subject (<unidirectional association>)
	  b parent class_ref 520987 // Subject
      end

      classrelation 2082203 // acc (<unidirectional association>)
	relation 2082203 --->
	  a role_name "acc" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2082203 // acc (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end

      classrelation 2082331 // rmiServer (<unidirectional association>)
	relation 2082331 --->
	  a role_name "rmiServer" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2082331 // rmiServer (<unidirectional association>)
	  b parent class_ref 1045531 // RMIServerImpl
      end

      classrelation 2082459 // mbeanServer (<unidirectional association>)
	relation 2082459 --->
	  a role_name "mbeanServer" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2082459 // mbeanServer (<unidirectional association>)
	  b parent class_ref 513179 // MBeanServer
      end

      classrelation 2082587 // defaultClassLoader (<unidirectional association>)
	relation 2082587 --->
	  a role_name "defaultClassLoader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2082587 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      attribute 3067803 "terminated"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3067931 "connectionId"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068059 "ADD_NOTIFICATION_LISTENERS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Method IDs for doOperation
---------------------------"
      end

      attribute 3068187 "ADD_NOTIFICATION_LISTENER_OBJECTNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068315 "CREATE_MBEAN"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068443 "CREATE_MBEAN_PARAMS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068571 "CREATE_MBEAN_LOADER"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068699 "CREATE_MBEAN_LOADER_PARAMS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068827 "GET_ATTRIBUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3068955 "GET_ATTRIBUTES"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069083 "GET_DEFAULT_DOMAIN"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069211 "GET_DOMAINS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069339 "GET_MBEAN_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069467 "GET_MBEAN_INFO"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069595 "GET_OBJECT_INSTANCE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069723 "INVOKE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069851 "IS_INSTANCE_OF"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3069979 "IS_REGISTERED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070107 "QUERY_MBEANS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070235 "QUERY_NAMES"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070363 "REMOVE_NOTIFICATION_LISTENER"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070491 "REMOVE_NOTIFICATION_LISTENER_FILTER_HANDBACK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070619 "REMOVE_NOTIFICATION_LISTENER_OBJECTNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070747 "REMOVE_NOTIFICATION_LISTENER_OBJECTNAME_FILTER_HANDBACK"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3070875 "SET_ATTRIBUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3071003 "SET_ATTRIBUTES"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3071131 "UNREGISTER_MBEAN"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2083099 // env (<unidirectional association>)
	relation 2083099 --->
	  a role_name "env" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2083099 // env (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8419611 "objects"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "objs" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8419739 "strings"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "strs" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

    end

    class 1045531 "RMIServerImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An RMI object representing a connector server.  Remote clients
can make connections using the {@link #newClient(Object)} method.  This
method returns an RMI object representing the connection.</p>

<p>User code does not usually reference this class directly.
RMI connection servers are usually created with the class {@link
RMIConnectorServer}.  Remote clients usually create connections
either with {@link javax.management.remote.JMXConnectorFactory}
or by instantiating {@link RMIConnector}.</p>

<p>This is an abstract class.  Concrete subclasses define the
details of the client connection objects, such as whether they use
JRMP or IIOP.</p>

@since 1.5
@since.unbundled 1.0"
      classrelation 2091163 // <realization>
	relation 2091163 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2091163 // <realization>
	  b parent class_ref 1046171 // RMIServer
      end

      operation 8436635 "RMIServerImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "env" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>RMIServerImpl</code>.</p>

@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, which is equivalent
to an empty Map."
      end

      operation 8436763 "setRMIConnectorServer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "connServer" type class_ref 1046811 // RMIConnectorServer
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8436891 "export"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Exports this RMI object.</p>

@exception IOException if this RMI object cannot be exported."
      end

      operation 8437019 "toStub"
	abstract public return_type class_ref 233371 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a remotable stub for this server object.
@return a remotable stub.
@exception IOException if the stub cannot be obtained - e.g the
           RMIServerImpl has not been exported yet."
      end

      operation 8437147 "setDefaultClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the default <code>ClassLoader</code> for this connector
server. New client connections will use this classloader.
Existing client connections are unaffected.</p>

@param cl the new <code>ClassLoader</code> to be used by this
connector server.

@see #getDefaultClassLoader"
      end

      operation 8437275 "getDefaultClassLoader"
	public return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Gets the default <code>ClassLoader</code> used by this connector
server.</p>

@return the default <code>ClassLoader</code> used by this
connector server.</p>

@see #setDefaultClassLoader"
      end

      operation 8437403 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the <code>MBeanServer</code> to which this connector
server is attached. New client connections will interact
with this <code>MBeanServer</code>. Existing client connections are
unaffected.</p>

@param mbs the new <code>MBeanServer</code>.  Can be null, but
new client connections will be refused as long as it is.

@see #getMBeanServer"
      end

      operation 8437531 "getMBeanServer"
	public return_type class_ref 513179 // MBeanServer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The <code>MBeanServer</code> to which this connector server
is attached.  This is the last value passed to {@link
#setMBeanServer} on this object, or null if that method has
never been called.</p>

@return the <code>MBeanServer</code> to which this connector
is attached.

@see #setMBeanServer"
      end

      operation 8437659 "getVersion"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8437787 "newClient"
	public return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection.  This method calls {@link
#makeClient makeClient} and adds the returned client connection
object to an internal list.  When this
<code>RMIServerImpl</code> is shut down via its {@link
#close()} method, the {@link RMIConnection#close() close()}
method of each object remaining in the list is called.</p>

<p>The fact that a client connection object is in this internal
list does not prevent it from being garbage collected.</p>

@param credentials this object specifies the user-defined
credentials to be passed in to the server in order to
authenticate the caller before creating the
<code>RMIConnection</code>.  Can be null.

@return the newly-created <code>RMIConnection</code>.  This is
usually the object created by <code>makeClient</code>, though
an implementation may choose to wrap that object in another
object implementing <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported.

@exception SecurityException if the given credentials do not allow
the server to authenticate the user successfully.

@exception IllegalStateException if {@link #getMBeanServer()}
is null."
      end

      operation 8437915 "doNewClient"
	package return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method could be overridden by subclasses defined in this package
to perform additional operations specific to the underlying transport
before creating the new client connection."
      end

      operation 8438043 "makeClient"
	abstract protected return_type class_ref 1045275 // RMIConnection
	nparams 2
	  param in name "connectionId" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection.  This method is called by
the public method {@link #newClient(Object)}.</p>

@param connectionId the ID of the new connection.  Every
connection opened by this connector server will have a
different ID.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported."
      end

      operation 8438171 "closeClient"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1045275 // RMIConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes a client connection made by {@link #makeClient makeClient}.

@param client a connection previously returned by
<code>makeClient</code> on which the <code>closeClient</code>
method has not previously been called.  The behavior is
unspecified if these conditions are violated, including the
case where <code>client</code> is null.

@exception IOException if the client connection cannot be
closed."
      end

      operation 8438299 "getProtocol"
	abstract protected explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the protocol string for this object.  The string is
<code>rmi</code> for RMI/JRMP and <code>iiop</code> for RMI/IIOP.

@return the protocol string for this object."
      end

      operation 8438427 "clientClosed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1045275 // RMIConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Method called when a client connection created by {@link
#makeClient makeClient} is closed.  A subclass that defines
<code>makeClient</code> must arrange for this method to be
called when the resultant object's {@link RMIConnection#close()
close} method is called.  This enables it to be removed from
the <code>RMIServerImpl</code>'s list of connections.  It is
not an error for <code>client</code> not to be in that
list.</p>

<p>After removing <code>client</code> from the list of
connections, this method calls {@link #closeClient
closeClient(client)}.</p>

@param client the client connection that has been closed.

@exception IOException if {@link #closeClient} throws this
exception.

@exception NullPointerException if <code>client</code> is null."
      end

      operation 8438555 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes this connection server.  This method first calls the
{@link #closeServer()} method so that no new client connections
will be accepted.  Then, for each remaining {@link
RMIConnection} object returned by {@link #makeClient
makeClient}, its {@link RMIConnection#close() close} method is
called.</p>

<p>The behavior when this method is called more than once is
unspecified.</p>

<p>If {@link #closeServer()} throws an
<code>IOException</code>, the individual connections are
nevertheless closed, and then the <code>IOException</code> is
thrown from this method.</p>

<p>If {@link #closeServer()} returns normally but one or more
of the individual connections throws an
<code>IOException</code>, then, after closing all the
connections, one of those <code>IOException</code>s is thrown
from this method.  If more than one connection throws an
<code>IOException</code>, it is unspecified which one is thrown
from this method.</p>

@exception IOException if {@link #closeServer()} or one of the
{@link RMIConnection#close()} calls threw
<code>IOException</code>."
      end

      operation 8438683 "closeServer"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server.
After returning from this method, the connector server must
not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed."
      end

      operation 8438811 "makeConnectionId"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "protocol" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8438939 "dropDeadReferences"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8439067 "getNotifBuffer"
	package explicit_return_type "NotificationBuffer"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2091419 // clientList (<unidirectional association>)
	relation 2091419 --->
	  a role_name "clientList" init_value "=  new ArrayList()" const_relation private
	    comment " List of WeakReference values.  Each one references an
RMIConnection created by this object, or null if the
RMIConnection has been garbage-collected.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2091419 // clientList (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      classrelation 2091547 // cl (<unidirectional association>)
	relation 2091547 --->
	  a role_name "cl" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2091547 // cl (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      classrelation 2091675 // mbeanServer (<unidirectional association>)
	relation 2091675 --->
	  a role_name "mbeanServer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2091675 // mbeanServer (<unidirectional association>)
	  b parent class_ref 513179 // MBeanServer
      end

      classrelation 2091803 // env (<unidirectional association>)
	relation 2091803 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2091803 // env (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2091931 // connServer (<unidirectional association>)
	relation 2091931 --->
	  a role_name "connServer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2091931 // connServer (<unidirectional association>)
	  b parent class_ref 1046811 // RMIConnectorServer
      end

      attribute 3074075 "connectionIdNumber"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

    end

    class 1045915 "RMIConnectionImpl_Stub"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2083355 // <generalisation>
	relation 2083355 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2083355 // <generalisation>
	  b parent class_ref 955035 // RemoteStub
      end

      classrelation 2083483 // <realization>
	relation 2083483 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2083483 // <realization>
	  b parent class_ref 1045275 // RMIConnection
      end

      attribute 3071259 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2083611 // $method_addNotificationListener_0 (<unidirectional association>)
	relation 2083611 --->
	  a role_name "$method_addNotificationListener_0" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2083611 // $method_addNotificationListener_0 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2083739 // $method_addNotificationListeners_1 (<unidirectional association>)
	relation 2083739 --->
	  a role_name "$method_addNotificationListeners_1" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2083739 // $method_addNotificationListeners_1 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2083867 // $method_close_2 (<unidirectional association>)
	relation 2083867 --->
	  a role_name "$method_close_2" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2083867 // $method_close_2 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2083995 // $method_createMBean_3 (<unidirectional association>)
	relation 2083995 --->
	  a role_name "$method_createMBean_3" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2083995 // $method_createMBean_3 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084123 // $method_createMBean_4 (<unidirectional association>)
	relation 2084123 --->
	  a role_name "$method_createMBean_4" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084123 // $method_createMBean_4 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084251 // $method_createMBean_5 (<unidirectional association>)
	relation 2084251 --->
	  a role_name "$method_createMBean_5" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084251 // $method_createMBean_5 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084379 // $method_createMBean_6 (<unidirectional association>)
	relation 2084379 --->
	  a role_name "$method_createMBean_6" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084379 // $method_createMBean_6 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084507 // $method_fetchNotifications_7 (<unidirectional association>)
	relation 2084507 --->
	  a role_name "$method_fetchNotifications_7" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084507 // $method_fetchNotifications_7 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084635 // $method_getAttribute_8 (<unidirectional association>)
	relation 2084635 --->
	  a role_name "$method_getAttribute_8" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084635 // $method_getAttribute_8 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084763 // $method_getAttributes_9 (<unidirectional association>)
	relation 2084763 --->
	  a role_name "$method_getAttributes_9" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084763 // $method_getAttributes_9 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2084891 // $method_getConnectionId_10 (<unidirectional association>)
	relation 2084891 --->
	  a role_name "$method_getConnectionId_10" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2084891 // $method_getConnectionId_10 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085019 // $method_getDefaultDomain_11 (<unidirectional association>)
	relation 2085019 --->
	  a role_name "$method_getDefaultDomain_11" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085019 // $method_getDefaultDomain_11 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085147 // $method_getDomains_12 (<unidirectional association>)
	relation 2085147 --->
	  a role_name "$method_getDomains_12" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085147 // $method_getDomains_12 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085275 // $method_getMBeanCount_13 (<unidirectional association>)
	relation 2085275 --->
	  a role_name "$method_getMBeanCount_13" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085275 // $method_getMBeanCount_13 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085403 // $method_getMBeanInfo_14 (<unidirectional association>)
	relation 2085403 --->
	  a role_name "$method_getMBeanInfo_14" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085403 // $method_getMBeanInfo_14 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085531 // $method_getObjectInstance_15 (<unidirectional association>)
	relation 2085531 --->
	  a role_name "$method_getObjectInstance_15" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085531 // $method_getObjectInstance_15 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085659 // $method_invoke_16 (<unidirectional association>)
	relation 2085659 --->
	  a role_name "$method_invoke_16" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085659 // $method_invoke_16 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085787 // $method_isInstanceOf_17 (<unidirectional association>)
	relation 2085787 --->
	  a role_name "$method_isInstanceOf_17" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085787 // $method_isInstanceOf_17 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2085915 // $method_isRegistered_18 (<unidirectional association>)
	relation 2085915 --->
	  a role_name "$method_isRegistered_18" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2085915 // $method_isRegistered_18 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086043 // $method_queryMBeans_19 (<unidirectional association>)
	relation 2086043 --->
	  a role_name "$method_queryMBeans_19" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086043 // $method_queryMBeans_19 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086171 // $method_queryNames_20 (<unidirectional association>)
	relation 2086171 --->
	  a role_name "$method_queryNames_20" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086171 // $method_queryNames_20 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086299 // $method_removeNotificationListener_21 (<unidirectional association>)
	relation 2086299 --->
	  a role_name "$method_removeNotificationListener_21" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086299 // $method_removeNotificationListener_21 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086427 // $method_removeNotificationListener_22 (<unidirectional association>)
	relation 2086427 --->
	  a role_name "$method_removeNotificationListener_22" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086427 // $method_removeNotificationListener_22 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086555 // $method_removeNotificationListeners_23 (<unidirectional association>)
	relation 2086555 --->
	  a role_name "$method_removeNotificationListeners_23" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086555 // $method_removeNotificationListeners_23 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086683 // $method_setAttribute_24 (<unidirectional association>)
	relation 2086683 --->
	  a role_name "$method_setAttribute_24" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086683 // $method_setAttribute_24 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086811 // $method_setAttributes_25 (<unidirectional association>)
	relation 2086811 --->
	  a role_name "$method_setAttributes_25" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086811 // $method_setAttributes_25 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2086939 // $method_unregisterMBean_26 (<unidirectional association>)
	relation 2086939 --->
	  a role_name "$method_unregisterMBean_26" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2086939 // $method_unregisterMBean_26 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      extra_member 172443 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    $method_addNotificationListener_0 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"addNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_addNotificationListeners_1 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"addNotificationListeners\", new java.lang.Class[] {javax.management.ObjectName[].class, java.rmi.MarshalledObject[].class, javax.security.auth.Subject[].class});
	    $method_close_2 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"close\", new java.lang.Class[] {});
	    $method_createMBean_3 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_createMBean_4 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_createMBean_5 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_createMBean_6 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_fetchNotifications_7 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"fetchNotifications\", new java.lang.Class[] {long.class, int.class, long.class});
	    $method_getAttribute_8 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getAttribute\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, javax.security.auth.Subject.class});
	    $method_getAttributes_9 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getAttributes\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_getConnectionId_10 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getConnectionId\", new java.lang.Class[] {});
	    $method_getDefaultDomain_11 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getDefaultDomain\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getDomains_12 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getDomains\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getMBeanCount_13 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getMBeanCount\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getMBeanInfo_14 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getMBeanInfo\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_getObjectInstance_15 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getObjectInstance\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_invoke_16 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"invoke\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_isInstanceOf_17 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"isInstanceOf\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, javax.security.auth.Subject.class});
	    $method_isRegistered_18 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"isRegistered\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_queryMBeans_19 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"queryMBeans\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_queryNames_20 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"queryNames\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListener_21 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListener_22 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListeners_23 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListeners\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.Integer[].class, javax.security.auth.Subject.class});
	    $method_setAttribute_24 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"setAttribute\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_setAttributes_25 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"setAttributes\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_unregisterMBean_26 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"unregisterMBean\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		\"stub class initialization failed\");
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 8419867 "RMIConnectionImpl_Stub"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 522011 // RemoteRef
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructors"
      end

      operation 8419995 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 523419 // MarshalledObject
	  param inout name "$param_MarshalledObject_4" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_5" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " methods from remote interfaces
 implementation of addNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)"
      end

      operation 8420123 "addNotificationListeners"
	public return_type class_ref 170395 // Integer
	nparams 3
	  param inout name "$param_arrayOf_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_arrayOf_MarshalledObject_2" type class_ref 523419 // MarshalledObject
	  param inout name "$param_arrayOf_Subject_3" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])"
      end

      operation 8420251 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of close()"
      end

      operation 8420379 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 5
	  param inout name "$param_String_1" type class_ref 179611 // String
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 523419 // MarshalledObject
	  param inout name "$param_arrayOf_String_4" type class_ref 179611 // String
	  param inout name "$param_Subject_5" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 179355 // IOException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, MarshalledObject, String[], Subject)"
      end

      operation 8420507 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 6
	  param inout name "$param_String_1" type class_ref 179611 // String
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_ObjectName_3" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_4" type class_ref 523419 // MarshalledObject
	  param inout name "$param_arrayOf_String_5" type class_ref 179611 // String
	  param inout name "$param_Subject_6" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 179355 // IOException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, ObjectName, MarshalledObject, String[], Subject)"
      end

      operation 8420635 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 4
	  param inout name "$param_String_1" type class_ref 179611 // String
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_ObjectName_3" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_4" type class_ref 520987 // Subject
	nexceptions 7
	  exception class_ref 179355 // IOException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, ObjectName, Subject)"
      end

      operation 8420763 "createMBean"
	public return_type class_ref 510747 // ObjectInstance
	nparams 3
	  param inout name "$param_String_1" type class_ref 179611 // String
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 179355 // IOException
	  exception class_ref 511131 // InstanceAlreadyExistsException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511259 // MBeanRegistrationException
	  exception class_ref 511515 // NotCompliantMBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, Subject)"
      end

      operation 8420891 "fetchNotifications"
	public return_type class_ref 518811 // NotificationResult
	nparams 3
	  param in name "$param_long_1" explicit_type "long"
	  param in name "$param_int_2" explicit_type "int"
	  param in name "$param_long_3" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of fetchNotifications(long, int, long)"
      end

      operation 8421019 "getAttribute"
	public return_type class_ref 168347 // Object
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_String_2" type class_ref 179611 // String
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 5
	  exception class_ref 179355 // IOException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getAttribute(ObjectName, String, Subject)"
      end

      operation 8421147 "getAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_arrayOf_String_2" type class_ref 179611 // String
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getAttributes(ObjectName, String[], Subject)"
      end

      operation 8421275 "getConnectionId"
	public return_type class_ref 179611 // String
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getConnectionId()"
      end

      operation 8421403 "getDefaultDomain"
	public return_type class_ref 179611 // String
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getDefaultDomain(Subject)"
      end

      operation 8421531 "getDomains"
	public return_type class_ref 179611 // String
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getDomains(Subject)"
      end

      operation 8421659 "getMBeanCount"
	public return_type class_ref 170395 // Integer
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getMBeanCount(Subject)"
      end

      operation 8421787 "getMBeanInfo"
	public return_type class_ref 512795 // MBeanInfo
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512923 // IntrospectionException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getMBeanInfo(ObjectName, Subject)"
      end

      operation 8421915 "getObjectInstance"
	public return_type class_ref 510747 // ObjectInstance
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getObjectInstance(ObjectName, Subject)"
      end

      operation 8422043 "invoke"
	public return_type class_ref 168347 // Object
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_String_2" type class_ref 179611 // String
	  param inout name "$param_MarshalledObject_3" type class_ref 523419 // MarshalledObject
	  param inout name "$param_arrayOf_String_4" type class_ref 179611 // String
	  param inout name "$param_Subject_5" type class_ref 520987 // Subject
	nexceptions 4
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of invoke(ObjectName, String, MarshalledObject, String[], Subject)"
      end

      operation 8422171 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_String_2" type class_ref 179611 // String
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of isInstanceOf(ObjectName, String, Subject)"
      end

      operation 8422299 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of isRegistered(ObjectName, Subject)"
      end

      operation 8422427 "queryMBeans"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of queryMBeans(ObjectName, MarshalledObject, Subject)"
      end

      operation 8422555 "queryNames"
	public return_type class_ref 136731 // Set
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of queryNames(ObjectName, MarshalledObject, Subject)"
      end

      operation 8422683 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 523419 // MarshalledObject
	  param inout name "$param_MarshalledObject_4" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_5" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)"
      end

      operation 8422811 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListener(ObjectName, ObjectName, Subject)"
      end

      operation 8422939 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_arrayOf_Integer_2" type class_ref 170395 // Integer
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListeners(ObjectName, Integer[], Subject)"
      end

      operation 8423067 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 6
	  exception class_ref 179355 // IOException
	  exception class_ref 511899 // AttributeNotFoundException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 512283 // InvalidAttributeValueException
	  exception class_ref 511387 // MBeanException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of setAttribute(ObjectName, MarshalledObject, Subject)"
      end

      operation 8423195 "setAttributes"
	public return_type class_ref 512027 // AttributeList
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 523419 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511003 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of setAttributes(ObjectName, MarshalledObject, Subject)"
      end

      operation 8423323 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 510875 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 520987 // Subject
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 511259 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of unregisterMBean(ObjectName, Subject)"
      end
    end

    class 1046043 "RMIConnector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A connection to a remote RMI connector.  Usually, such
connections are made using {@link
javax.management.remote.JMXConnectorFactory JMXConnectorFactory}.
However, specialized applications can use this class directly, for
example with an {@link RMIServer} stub obtained without going
through JNDI.</p>

@since 1.5
@since.unbundled 1.0"
      classrelation 2087067 // <realization>
	relation 2087067 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2087067 // <realization>
	  b parent class_ref 523803 // JMXConnector
      end

      classrelation 2087195 // <realization>
	relation 2087195 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2087195 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3071387 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  817323035842634473L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8423451 "RMIConnector"
	private explicit_return_type ""
	nparams 3
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "address" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8423579 "RMIConnector"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an <code>RMIConnector</code> that will connect
the RMI connector server with the given address.</p>

<p>The address can refer directly to the connector server,
using one of the following syntaxes:</p>

<pre>
service:jmx:rmi://<em>[host[:port]]</em>/stub/<em>encoded-stub</em>
service:jmx:iiop://<em>[host[:port]]</em>/ior/<em>encoded-IOR</em>
</pre>

<p>(Here, the square brackets <code>[]</code> are not part of the
address but indicate that the host and port are optional.)</p>

<p>The address can instead indicate where to find an RMI stub
through JNDI, using one of the following syntaxes:</p>

<pre>
service:jmx:rmi://<em>[host[:port]]</em>/jndi/<em>jndi-name</em>
service:jmx:iiop://<em>[host[:port]]</em>/jndi/<em>jndi-name</em>
</pre>

<p>An implementation may also recognize additional address
syntaxes, for example:</p>

<pre>
service:jmx:iiop://<em>[host[:port]]</em>/stub/<em>encoded-stub</em>
</pre>

@param url the address of the RMI connector server.

@param environment additional attributes specifying how to make
the connection.  For JNDI-based addresses, these attributes can
usefully include JNDI attributes recognized by {@link
InitialContext#InitialContext(Hashtable) InitialContext}.  This
parameter can be null, which is equivalent to an empty Map.

@exception IllegalArgumentException if <code>url</code>
is null."
      end

      operation 8423707 "RMIConnector"
	public explicit_return_type ""
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "environment" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an <code>RMIConnector</code> using the given RMI stub.

@param rmiServer an RMI stub representing the RMI connector server.
@param environment additional attributes specifying how to make
the connection.  This parameter can be null, which is
equivalent to an empty Map.

@exception IllegalArgumentException if <code>rmiServer</code>
is null."
      end

      operation 8423835 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a string representation of this object.  In general,
the <code>toString</code> method returns a string that
\"textually represents\" this object. The result should be a
concise but informative representation that is easy for a
person to read.</p>

@return a String representation of this object."
      end

      operation 8423963 "connect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 implements JMXConnector interface
--------------------------------------------------------------------"
      end

      operation 8424091 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "environment" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424219 "getConnectionId"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424347 "getMBeanServerConnection"
	public return_type class_ref 510619 // MBeanServerConnection
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424475 "getMBeanServerConnection"
	public return_type class_ref 510619 // MBeanServerConnection
	nparams 1
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424603 "addConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424731 "removeConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 512411 // NotificationListener
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424859 "removeConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 512411 // NotificationListener
	  param inout name "filter" type class_ref 512539 // NotificationFilter
	  param inout name "handback" explicit_type "Object"
	nexceptions 1
	  exception class_ref 512667 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8424987 "sendNotification"
	private explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 513819 // Notification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8425115 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8425243 "close"
	private explicit_return_type "void"
	nparams 1
	  param inout name "intern" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " allows to do close after setting the flag \"terminated\" to true. 
 It is necessary to avoid a deadlock, see 6296324 "
      end

      operation 8425371 "addListenerWithSubject"
	private return_type class_ref 170395 // Integer
	nparams 4
	  param inout name "name" type class_ref 510875 // ObjectName
	  param inout name "filter" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 520987 // Subject
	  param inout name "reconnect" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " added for re-connection"
      end

      operation 8425499 "addListenersWithSubjects"
	private return_type class_ref 170395 // Integer
	nparams 4
	  param inout name "names" type class_ref 510875 // ObjectName
	  param inout name "filters" type class_ref 523419 // MarshalledObject
	  param inout name "delegationSubjects" type class_ref 520987 // Subject
	  param inout name "reconnect" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 511643 // InstanceNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " added for re-connection"
      end

      class 1046299 "RemoteMBeanServerConnection"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2087451 // <realization>
	  relation 2087451 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2087451 // <realization>
	    b parent class_ref 510619 // MBeanServerConnection
	end

	classrelation 2087579 // delegationSubject (<unidirectional association>)
	  relation 2087579 --->
	    a role_name "delegationSubject" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2087579 // delegationSubject (<unidirectional association>)
	    b parent class_ref 520987 // Subject
	end

	operation 8425627 "RemoteMBeanServerConnection"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8425755 "RemoteMBeanServerConnection"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "delegationSubject" type class_ref 520987 // Subject
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8425883 "createMBean"
	  public return_type class_ref 510747 // ObjectInstance
	  nparams 2
	    param in name "className" explicit_type "String"
	    param inout name "name" type class_ref 510875 // ObjectName
	  nexceptions 6
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 511131 // InstanceAlreadyExistsException
	    exception class_ref 511259 // MBeanRegistrationException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511515 // NotCompliantMBeanException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426011 "createMBean"
	  public return_type class_ref 510747 // ObjectInstance
	  nparams 3
	    param in name "className" explicit_type "String"
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "loaderName" type class_ref 510875 // ObjectName
	  nexceptions 7
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 511131 // InstanceAlreadyExistsException
	    exception class_ref 511259 // MBeanRegistrationException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511515 // NotCompliantMBeanException
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426139 "createMBean"
	  public return_type class_ref 510747 // ObjectInstance
	  nparams 4
	    param in name "className" explicit_type "String"
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "params" explicit_type "Object"
	    param in name "signature" explicit_type "String"
	  nexceptions 6
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 511131 // InstanceAlreadyExistsException
	    exception class_ref 511259 // MBeanRegistrationException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511515 // NotCompliantMBeanException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426267 "createMBean"
	  public return_type class_ref 510747 // ObjectInstance
	  nparams 5
	    param in name "className" explicit_type "String"
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "loaderName" type class_ref 510875 // ObjectName
	    param inout name "params" explicit_type "Object"
	    param in name "signature" explicit_type "String"
	  nexceptions 7
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 511131 // InstanceAlreadyExistsException
	    exception class_ref 511259 // MBeanRegistrationException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511515 // NotCompliantMBeanException
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426395 "unregisterMBean"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "name" type class_ref 510875 // ObjectName
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511259 // MBeanRegistrationException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426523 "getObjectInstance"
	  public return_type class_ref 510747 // ObjectInstance
	  nparams 1
	    param inout name "name" type class_ref 510875 // ObjectName
	  nexceptions 2
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426651 "queryMBeans"
	  public return_type class_ref 136731 // Set
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "query" type class_ref 511771 // QueryExp
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426779 "queryNames"
	  public return_type class_ref 136731 // Set
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "query" type class_ref 511771 // QueryExp
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8426907 "isRegistered"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "name" type class_ref 510875 // ObjectName
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427035 "getMBeanCount"
	  public return_type class_ref 170395 // Integer
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427163 "getAttribute"
	  public explicit_return_type "Object"
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param in name "attribute" explicit_type "String"
	  nexceptions 5
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511899 // AttributeNotFoundException
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427291 "getAttributes"
	  public return_type class_ref 512027 // AttributeList
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param in name "attributes" explicit_type "String"
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427419 "setAttribute"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "attribute" type class_ref 512155 // Attribute
	  nexceptions 6
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511899 // AttributeNotFoundException
	    exception class_ref 512283 // InvalidAttributeValueException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427547 "setAttributes"
	  public return_type class_ref 512027 // AttributeList
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "attributes" type class_ref 512027 // AttributeList
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427675 "invoke"
	  public explicit_return_type "Object"
	  nparams 4
	    param inout name "name" type class_ref 510875 // ObjectName
	    param in name "operationName" explicit_type "String"
	    param inout name "params" explicit_type "Object"
	    param in name "signature" explicit_type "String"
	  nexceptions 4
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 511387 // MBeanException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427803 "getDefaultDomain"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8427931 "getDomains"
	  public explicit_return_type "String"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428059 "getMBeanInfo"
	  public return_type class_ref 512795 // MBeanInfo
	  nparams 1
	    param inout name "name" type class_ref 510875 // ObjectName
	  nexceptions 4
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512923 // IntrospectionException
	    exception class_ref 511003 // ReflectionException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428187 "isInstanceOf"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param in name "className" explicit_type "String"
	  nexceptions 2
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428315 "addNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 510875 // ObjectName
	    param inout name "filter" type class_ref 512539 // NotificationFilter
	    param inout name "handback" explicit_type "Object"
	  nexceptions 2
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428443 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 510875 // ObjectName
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512667 // ListenerNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428571 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 510875 // ObjectName
	    param inout name "filter" type class_ref 512539 // NotificationFilter
	    param inout name "handback" explicit_type "Object"
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512667 // ListenerNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428699 "addNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 512411 // NotificationListener
	    param inout name "filter" type class_ref 512539 // NotificationFilter
	    param inout name "handback" explicit_type "Object"
	  nexceptions 2
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Specific Notification Handle ----------------------------------"
	end

	operation 8428827 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 512411 // NotificationListener
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512667 // ListenerNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8428955 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 510875 // ObjectName
	    param inout name "listener" type class_ref 512411 // NotificationListener
	    param inout name "filter" type class_ref 512539 // NotificationFilter
	    param inout name "handback" explicit_type "Object"
	  nexceptions 3
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512667 // ListenerNotFoundException
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1046427 "RMINotifClient"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 8429083 "RMINotifClient"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "cl" type class_ref 163611 // ClassLoader
	    param inout name "env" type class_ref 136603 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429211 "fetchNotifs"
	  protected return_type class_ref 518811 // NotificationResult
	  nparams 3
	    param in name "clientSequenceNumber" explicit_type "long"
	    param in name "maxNotifications" explicit_type "int"
	    param in name "timeout" explicit_type "long"
	  nexceptions 2
	    exception class_ref 179355 // IOException
	    exception class_ref 201883 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429339 "addListenerForMBeanRemovedNotif"
	  protected return_type class_ref 170395 // Integer
	  nparams 0
	  nexceptions 2
	    exception class_ref 179355 // IOException
	    exception class_ref 511643 // InstanceNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429467 "removeListenerForMBeanRemovedNotif"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "id" type class_ref 170395 // Integer
	  nexceptions 3
	    exception class_ref 179355 // IOException
	    exception class_ref 511643 // InstanceNotFoundException
	    exception class_ref 512667 // ListenerNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429595 "lostNotifs"
	  protected explicit_return_type "void"
	  nparams 2
	    param in name "message" explicit_type "String"
	    param in name "number" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1046555 "RMIClientCommunicatorAdmin"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 8429723 "RMIClientCommunicatorAdmin"
	  public explicit_return_type ""
	  nparams 1
	    param in name "period" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429851 "gotIOException"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ioe" type class_ref 179355 // IOException
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8429979 "reconnectNotificationListeners"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "old" explicit_type "ClientListenerInfo"
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8430107 "checkConnection"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8430235 "doStart"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8430363 "doStop"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 8430491 "connectStub"
	class_operation package return_type class_ref 1046171 // RMIServer
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "environment" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - Serialization
--------------------------------------------------------------------

<p>In order to be usable, an IIOP stub must be connected to an ORB.
The stub is automagically connected to the ORB if:
<ul>
    <li> It was returned by the COS naming</li>
    <li> Its server counterpart has been registered in COS naming
         through JNDI.</li>
</ul>
Otherwise, it is not connected. A stub which is deserialized
from Jini is not connected. A stub which is obtained from a
non registered RMIIIOPServerImpl is not a connected.<br>
A stub which is not connected can't be serialized, and thus
can't be registered in Jini. A stub which is not connected can't
be used to invoke methods on the server.
<p>
In order to palliate this, this method will connect the
given stub if it is not yet connected. If the given
<var>RMIServer</var> is not an instance of
{@link javax.rmi.CORBA.Stub javax.rmi.CORBA.Stub}, then the
method do nothing and simply returns that stub. Otherwise,
this method will attempt to connect the stub to an ORB as
follows:
<ul>
<p>This method looks in the provided <var>environment</var> for
the \"java.naming.corba.orb\" property. If it is found, the
referenced object (an {@link org.omg.CORBA.ORB ORB}) is used to
connect the stub. Otherwise, a new org.omg.CORBA.ORB is created
by calling {@link
org.omg.CORBA.ORB#init(String[], Properties)
org.omg.CORBA.ORB.init((String[])null,(Properties)null)}
<p>The new created ORB is kept in a static
{@link WeakReference} and can be reused for connecting other
stubs. However, no reference is ever kept on the ORB provided
in the <var>environment</var> map, if any.
</ul>
@param rmiServer A RMI Server Stub.
@param environment An environment map, possibly containing an ORB.
@return the given stub.
@exception IllegalArgumentException if the
     <tt>java.naming.corba.orb</tt> property is specified and
     does not point to an {@link org.omg.CORBA.ORB ORB}.
@exception IOException if the connection to the ORB failed."
      end

      operation 8430619 "resolveOrb"
	class_operation package explicit_return_type "ORB"
	nparams 1
	  param inout name "environment" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ORB specified by <var>environment</var>, or create a
new one.
<p>This method looks in the provided <var>environment</var> for
the \"java.naming.corba.orb\" property. If it is found, the
referenced object (an {@link org.omg.CORBA.ORB ORB}) is
returned. Otherwise, a new org.omg.CORBA.ORB is created
by calling {@link
org.omg.CORBA.ORB#init(String[], java.util.Properties)
org.omg.CORBA.ORB.init((String[])null,(Properties)null)}
<p>The new created ORB is kept in a static
{@link WeakReference} and can be reused for connecting other
stubs. However, no reference is ever kept on the ORB provided
in the <var>environment</var> map, if any.
@param environment An environment map, possibly containing an ORB.
@return An ORB.
@exception IllegalArgumentException if the
     <tt>java.naming.corba.orb</tt> property is specified and
     does not point to an {@link org.omg.CORBA.ORB ORB}.
@exception IOException if the ORB initialization failed."
      end

      operation 8430747 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read RMIConnector fields from an {@link java.io.ObjectInputStream
ObjectInputStream}.
Calls <code>s.defaultReadObject()</code> and then initializes
all transient variables that need initializing.
@param s The ObjectInputStream to read from.
@exception InvalidObjectException if none of <var>rmiServer</var> stub
   or <var>jmxServiceURL</var> are set.
@see #RMIConnector(JMXServiceURL,Map)
@see #RMIConnector(RMIServer,Map)"
      end

      operation 8430875 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the RMIConnector fields to an {@link java.io.ObjectOutputStream
ObjectOutputStream}.
<p>Connects the underlying RMIServer stub to an ORB, if needed,
before serializing it. This is done using the environment
map that was provided to the constructor, if any, and as documented
in {@link javax.management.remote.rmi}.</p>
<p>This method then calls <code>s.defaultWriteObject()</code>.
Usually, <var>rmiServer</var> is null if this object
was constructed with a JMXServiceURL, and <var>jmxServiceURL</var>
is null if this object is constructed with a RMIServer stub.
<p>Note that the environment Map is not serialized, since the objects
it contains are assumed to be contextual and relevant only
with respect to the local environment (class loader, ORB, etc...).</p>
<p>After an RMIConnector is deserialized, it is assumed that the
user will call {@link #connect(Map)}, providing a new Map that
can contain values which are contextually relevant to the new
local environment.</p>
<p>Since connection to the ORB is needed prior to serializing, and
since the ORB to connect to is one of those contextual parameters,
it is not recommended to re-serialize a just de-serialized object -
as the de-serialized object has no map. Thus, when an RMIConnector
object is needed for serialization or transmission to a remote
application, it is recommended to obtain a new RMIConnector stub
by calling {@link RMIConnectorServer#toJMXConnector(Map)}.</p>
@param s The ObjectOutputStream to write to.
@exception InvalidObjectException if none of <var>rmiServer</var> stub
   or <var>jmxServiceURL</var> are set.
@see #RMIConnector(JMXServiceURL,Map)
@see #RMIConnector(RMIServer,Map)"
      end

      operation 8431003 "initTransients"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialization of transient variables."
      end

      operation 8431131 "findRMIServer"
	private return_type class_ref 1046171 // RMIServer
	nparams 2
	  param inout name "directoryURL" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	nexceptions 2
	  exception class_ref 289947 // NamingException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - RMIServer creation
--------------------------------------------------------------------"
      end

      operation 8431259 "findRMIServerJNDI"
	private return_type class_ref 1046171 // RMIServer
	nparams 3
	  param in name "jndiURL" explicit_type "String"
	  param inout name "env" type class_ref 136603 // Map
	  param inout name "isIiop" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 289947 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lookup the RMIServer stub in a directory.
@param jndiURL A JNDI URL indicating the location of the Stub
               (see {@link javax.management.remote.rmi}), e.g.:
  <ul><li><tt>rmi://registry-host:port/rmi-stub-name</tt></li>
      <li>or <tt>iiop://cosnaming-host:port/iiop-stub-name</tt></li>
      <li>or <tt>ldap://ldap-host:port/java-container-dn</tt></li>
  </ul>
@param env the environment Map passed to the connector.
@param isIiop true if the stub is expected to be an IIOP stub.
@return The retrieved RMIServer stub.
@exception NamingException if the stub couldn't be found."
      end

      operation 8431387 "narrowJRMPServer"
	class_operation private return_type class_ref 1046171 // RMIServer
	nparams 1
	  param inout name "objref" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8431515 "narrowIIOPServer"
	class_operation private return_type class_ref 1046171 // RMIServer
	nparams 1
	  param inout name "objref" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8431643 "findRMIServerIIOP"
	private return_type class_ref 1046171 // RMIServer
	nparams 3
	  param in name "ior" explicit_type "String"
	  param inout name "env" type class_ref 136603 // Map
	  param inout name "isIiop" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8431771 "findRMIServerJRMP"
	private return_type class_ref 1046171 // RMIServer
	nparams 3
	  param in name "base64" explicit_type "String"
	  param inout name "env" type class_ref 136603 // Map
	  param inout name "isIiop" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1046683 "ObjectInputStreamWithLoader"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2087963 // <generalisation>
	  relation 2087963 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2087963 // <generalisation>
	    b parent class_ref 201115 // ObjectInputStream
	end

	operation 8431899 "ObjectInputStreamWithLoader"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 179099 // InputStream
	    param inout name "cl" type class_ref 163611 // ClassLoader
	  nexceptions 1
	    exception class_ref 179355 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 8432027 "resolveClass"
	  protected return_type class_ref 164635 // Class
	  nparams 1
	    param inout name "classDesc" type class_ref 202395 // ObjectStreamClass
	  nexceptions 2
	    exception class_ref 179355 // IOException
	    exception class_ref 201883 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 2088091 // loader (<unidirectional association>)
	  relation 2088091 --->
	    a role_name "loader" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2088091 // loader (<unidirectional association>)
	    b parent class_ref 163611 // ClassLoader
	end
      end

      attribute 3071515 "rmiConnectionImplStubClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	RMIConnection.class.getName() + \"Impl_Stub\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The following section of code avoids a class loading problem
with RMI.  The problem is that an RMI stub, when deserializing
a remote method return value or exception, will first of all
consult the first non-bootstrap class loader it finds in the
call stack.  This can lead to behavior that is not portable
between implementations of the JMX Remote API.  Notably, an
implementation on J2SE 1.4 will find the RMI stub's loader on
the stack.  But in J2SE 5, this stub is loaded by the
bootstrap loader, so RMI will find the loader of the user code
that called an MBeanServerConnection method.

To avoid this problem, we take advantage of what the RMI stub
is doing internally.  Each remote call will end up calling
ref.invoke(...), where ref is the RemoteRef parameter given to
the RMI stub's constructor.  It is within this call that the
deserialization will happen.  So we fabricate our own RemoteRef
that delegates everything to the \"real\" one but that is loaded
by a class loader that knows no other classes.  The class
loader NoCallStackClassLoader does this: the RemoteRef is an
instance of the class named by proxyRefClassName, which is
fabricated by the class loader using byte code that is defined
by the string below.

The call stack when the deserialization happens is thus this:
MBeanServerConnection.getAttribute (or whatever)
-> RMIConnectionImpl_Stub.getAttribute
-> ProxyRef.invoke(...getAttribute...)
-> UnicastRef.invoke(...getAttribute...)
-> internal RMI stuff

Here UnicastRef is the RemoteRef created when the stub was
deserialized (which is of some RMI internal class).  It and the
\"internal RMI stuff\" are loaded by the bootstrap loader, so are
transparent to the stack search.  The first non-bootstrap
loader found is our ProxyRefLoader, as required.

In a future version of this code as integrated into J2SE 5,
this workaround could be replaced by direct access to the
internals of RMI.  For now, we use the same code base for J2SE
and for the standalone Reference Implementation.

The byte code below encodes the following class, compiled using
J2SE 1.4.2 with the -g:none option.

package com.sun.jmx.remote.internal;

import java.lang.reflect.Method;
import java.rmi.Remote;
import java.rmi.server.RemoteRef;
import com.sun.jmx.remote.internal.ProxyRef;

public class PRef extends ProxyRef {
public PRef(RemoteRef ref) {
super(ref);
}

public Object invoke(Remote obj, Method method,
Object[] params, long opnum)
throws Exception {
return ref.invoke(obj, method, params, opnum);
}
}
"
      end

      classrelation 2088219 // rmiConnectionImplStubClass (<unidirectional association>)
	relation 2088219 --->
	  a role_name "rmiConnectionImplStubClass" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088219 // rmiConnectionImplStubClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 3071643 "pRefClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	\"com.sun.jmx.remote.internal.PRef\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2088347 // proxyRefConstructor (<unidirectional association>)
	relation 2088347 --->
	  a role_name "proxyRefConstructor" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088347 // proxyRefConstructor (<unidirectional association>)
	  b parent class_ref 218395 // Constructor
      end

      extra_member 172571 "initialization"
	
	cpp "" ""
	java "  static {
	final String pRefByteCodeString =
	    \"\\312\\376\\272\\276\\0\\0\\0.\\0\\27\\12\\0\\5\\0\\15\\11\\0\\4\\0\\16\\13\\0\\17\\0\"+
	    \"\\20\\7\\0\\21\\7\\0\\22\\1\\0\\6<init>\\1\\0\\36(Ljava/rmi/server/RemoteRef;\"+
	    \")V\\1\\0\\4Code\\1\\0\\6invoke\\1\\0S(Ljava/rmi/Remote;Ljava/lang/reflec\"+
	    \"t/Method;[Ljava/lang/Object;J)Ljava/lang/Object;\\1\\0\\12Exception\"+
	    \"s\\7\\0\\23\\14\\0\\6\\0\\7\\14\\0\\24\\0\\25\\7\\0\\26\\14\\0\\11\\0\\12\\1\\0\\40com/\"+
	    \"sun/jmx/remote/internal/PRef\\1\\0$com/sun/jmx/remote/internal/Pr\"+
	    \"oxyRef\\1\\0\\23java/lang/Exception\\1\\0\\3ref\\1\\0\\33Ljava/rmi/serve\"+
	    \"r/RemoteRef;\\1\\0\\31java/rmi/server/RemoteRef\\0!\\0\\4\\0\\5\\0\\0\\0\\0\"+
	    \"\\0\\2\\0\\1\\0\\6\\0\\7\\0\\1\\0\\10\\0\\0\\0\\22\\0\\2\\0\\2\\0\\0\\0\\6*+\\267\\0\\1\\261\"+
	    \"\\0\\0\\0\\0\\0\\1\\0\\11\\0\\12\\0\\2\\0\\10\\0\\0\\0\\33\\0\\6\\0\\6\\0\\0\\0\\17*\\264\\0\"+
	    \"\\2+,-\\26\\4\\271\\0\\3\\6\\0\\260\\0\\0\\0\\0\\0\\13\\0\\0\\0\\4\\0\\1\\0\\14\\0\\0\";
	final byte[] pRefByteCode =
	    NoCallStackClassLoader.stringToBytes(pRefByteCodeString);
	PrivilegedExceptionAction action = new PrivilegedExceptionAction() {
	    public Object run() throws Exception {
		Class thisClass = RMIConnector.class;
		ClassLoader thisLoader = thisClass.getClassLoader();
		ProtectionDomain thisProtectionDomain =
		    thisClass.getProtectionDomain();
		String[] otherClassNames = {ProxyRef.class.getName()};
		ClassLoader cl =
		    new NoCallStackClassLoader(pRefClassName,
					       pRefByteCode,
					       otherClassNames,
					       thisLoader,
					       thisProtectionDomain);
		Class c = cl.loadClass(pRefClassName);
		return c.getConstructor(new Class[] {RemoteRef.class});
	    }
	};

	Class stubClass;
	Constructor constr;
	try {
	    stubClass = Class.forName(rmiConnectionImplStubClassName);
	    constr = (Constructor) AccessController.doPrivileged(action);
	} catch (Exception e) {
	    logger.error(\"<clinit>\", 
			 \"Failed to initialize proxy reference consructor \"+
			 \"for \" + rmiConnectionImplStubClassName + \": \" + e);
	    logger.debug(\"<clinit>\",e);
	    stubClass = null;
	    constr = null;
	}
	rmiConnectionImplStubClass = stubClass;
	proxyRefConstructor = constr;
    }"
	php ""
	python ""
	idl ""
      end

      operation 8432155 "shadowJrmpStub"
	class_operation private return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "stub" type class_ref 522267 // RemoteObject
	nexceptions 5
	  exception class_ref 220059 // InstantiationException
	  exception class_ref 306331 // IllegalAccessException
	  exception class_ref 220187 // InvocationTargetException
	  exception class_ref 201883 // ClassNotFoundException
	  exception class_ref 791451 // NoSuchMethodException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3071771 "iiopConnectionStubClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	\"org.omg.stub.javax.management.remote.rmi._RMIConnection_Stub\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The following code performs a similar trick for RMI/IIOP to the
one described above for RMI/JRMP.  Unlike JRMP, though, we
can't easily insert an object between the RMIConnection stub
and the RMI/IIOP deserialization code, as explained below.

A method in an RMI/IIOP stub does the following.  It makes an
org.omg.CORBA_2_3.portable.OutputStream for each request, and
writes the parameters to it.  Then it calls
_invoke(OutputStream) which it inherits from CORBA's
ObjectImpl.  That returns an
org.omg.CORBA_2_3.portable.InputStream.  The return value is
read from this InputStream.  So the stack during
deserialization looks like this:

MBeanServerConnection.getAttribute (or whatever)
-> _RMIConnection_Stub.getAttribute
-> Util.readAny (a CORBA method)
-> InputStream.read_any
-> internal CORBA stuff

What we would have *liked* to have done would be the same thing
as for RMI/JRMP.  We create a \"ProxyDelegate\" that is an
org.omg.CORBA.portable.Delegate that simply forwards every
operation to the real original Delegate from the RMIConnection
stub, except that the InputStream returned by _invoke is
wrapped by a \"ProxyInputStream\" that is loaded by our
NoCallStackClassLoader.

Unfortunately, this doesn't work, at least with Sun's J2SE
1.4.2, because the CORBA code is not designed to allow you to
change Delegates arbitrarily.  You get a ClassCastException
from code that expects the Delegate to implement an internal
interface.

So instead we do the following.  We create a subclass of the
stub that overrides the _invoke method so as to wrap the
returned InputStream in a ProxyInputStream.  We create a
subclass of ProxyInputStream using the NoCallStackClassLoader
and override its read_any and read_value(Class) methods.
(These are the only methods called during deserialization of
MBeanServerConnection return values.)  We extract the Delegate
from the original stub and insert it into our subclass stub,
and away we go.  The state of a stub consists solely of its
Delegate.

We also need to catch ApplicationException, which will encode
any exceptions declared in the throws clause of the called
method.  Its InputStream needs to be wrapped in a
ProxyInputSteam too.

We override _releaseReply in the stub subclass so that it
replaces a ProxyInputStream argument with the original
InputStream.  This avoids problems if the implementation of
_releaseReply ends up casting this InputStream to an
implementation-specific interface (which in Sun's J2SE 5 it
does).

It is not strictly necessary for the stub subclass to be loaded
by a NoCallStackClassLoader, since the call-stack search stops
at the ProxyInputStream subclass.  However, it is convenient
for two reasons.  One is that it means that the
ProxyInputStream subclass can be accessed directly, without
using reflection.  The other is that it avoids build problems,
since usually stubs are created after other classes are
compiled, so we can't access them from this class without,
again, using reflection.

The strings below encode the following two Java classes,
compiled using J2SE 1.4.2 with javac -g:none.

package com.sun.jmx.remote.internal;

import org.omg.stub.javax.management.remote.rmi._RMIConnection_Stub;

import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;

public class ProxyStub extends _RMIConnection_Stub {
public InputStream _invoke(OutputStream out)
throws ApplicationException, RemarshalException {
try {
return new PInputStream(super._invoke(out));
} catch (ApplicationException e) {
InputStream pis = new PInputStream(e.getInputStream());
throw new ApplicationException(e.getId(), pis);
}
}

public void _releaseReply(InputStream in) {
PInputStream pis = (PInputStream) in;
super._releaseReply(pis.getProxiedInputStream());
}
}

package com.sun.jmx.remote.internal;

public class PInputStream extends ProxyInputStream {
public PInputStream(org.omg.CORBA.portable.InputStream in) {
super(in);
}

public org.omg.CORBA.Any read_any() {
return in.read_any();
}

public java.io.Serializable read_value(Class clz) {
return narrow().read_value(clz);
}
}


"
      end

      attribute 3071899 "proxyStubClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	\"com.sun.jmx.remote.internal.ProxyStub\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3072027 "pInputStreamClassName"
	class_attribute const_attribute private explicit_type "String"
	init_value "= 
	\"com.sun.jmx.remote.internal.PInputStream\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2088475 // proxyStubClass (<unidirectional association>)
	relation 2088475 --->
	  a role_name "proxyStubClass" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088475 // proxyStubClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      extra_member 172699 "initialization"
	
	cpp "" ""
	java "  static {
	final String proxyStubByteCodeString =
	    \"\\312\\376\\272\\276\\0\\0\\0.\\0)\\12\\0\\14\\0\\26\\7\\0\\27\\12\\0\\14\\0\\30\\12\"+
	    \"\\0\\2\\0\\31\\7\\0\\32\\12\\0\\5\\0\\33\\12\\0\\5\\0\\34\\12\\0\\5\\0\\35\\12\\0\\2\\0\"+
	    \"\\36\\12\\0\\14\\0\\37\\7\\0\\40\\7\\0!\\1\\0\\6<init>\\1\\0\\3()V\\1\\0\\4Code\\1\"+
	    \"\\0\\7_invoke\\1\\0K(Lorg/omg/CORBA/portable/OutputStream;)Lorg/o\"+
	    \"mg/CORBA/portable/InputStream;\\1\\0\\12Exceptions\\7\\0\\\"\\1\\0\\15_\"+
	    \"releaseReply\\1\\0'(Lorg/omg/CORBA/portable/InputStream;)V\\14\\0\"+
	    \"\\15\\0\\16\\1\\0(com/sun/jmx/remote/internal/PInputStream\\14\\0\\20\"+
	    \"\\0\\21\\14\\0\\15\\0\\25\\1\\0+org/omg/CORBA/portable/ApplicationExce\"+
	    \"ption\\14\\0#\\0$\\14\\0%\\0&\\14\\0\\15\\0'\\14\\0(\\0$\\14\\0\\24\\0\\25\\1\\0%\"+
	    \"com/sun/jmx/remote/internal/ProxyStub\\1\\0<org/omg/stub/javax/\"+
	    \"management/remote/rmi/_RMIConnection_Stub\\1\\0)org/omg/CORBA/p\"+
	    \"ortable/RemarshalException\\1\\0\\16getInputStream\\1\\0&()Lorg/om\"+
	    \"g/CORBA/portable/InputStream;\\1\\0\\5getId\\1\\0\\24()Ljava/lang/S\"+
	    \"tring;\\1\\09(Ljava/lang/String;Lorg/omg/CORBA/portable/InputSt\"+
	    \"ream;)V\\1\\0\\25getProxiedInputStream\\0!\\0\\13\\0\\14\\0\\0\\0\\0\\0\\3\\0\"+
	    \"\\1\\0\\15\\0\\16\\0\\1\\0\\17\\0\\0\\0\\21\\0\\1\\0\\1\\0\\0\\0\\5*\\267\\0\\1\\261\\0\"+
	    \"\\0\\0\\0\\0\\1\\0\\20\\0\\21\\0\\2\\0\\17\\0\\0\\0;\\0\\4\\0\\4\\0\\0\\0'\\273\\0\\2Y*\"+
	    \"+\\267\\0\\3\\267\\0\\4\\260M\\273\\0\\2Y,\\266\\0\\6\\267\\0\\4N\\273\\0\\5Y,\\266\"+
	    \"\\0\\7-\\267\\0\\10\\277\\0\\1\\0\\0\\0\\14\\0\\15\\0\\5\\0\\0\\0\\22\\0\\0\\0\\6\\0\\2\"+
	    \"\\0\\5\\0\\23\\0\\1\\0\\24\\0\\25\\0\\1\\0\\17\\0\\0\\0\\36\\0\\2\\0\\2\\0\\0\\0\\22+\\306\"+
	    \"\\0\\13+\\300\\0\\2\\266\\0\\11L*+\\267\\0\\12\\261\\0\\0\\0\\0\\0\\0\";
	final String pInputStreamByteCodeString =
	    \"\\312\\376\\272\\276\\0\\0\\0.\\0\\36\\12\\0\\7\\0\\17\\11\\0\\6\\0\\20\\12\\0\\21\\0\"+
	    \"\\22\\12\\0\\6\\0\\23\\12\\0\\24\\0\\25\\7\\0\\26\\7\\0\\27\\1\\0\\6<init>\\1\\0'(L\"+
	    \"org/omg/CORBA/portable/InputStream;)V\\1\\0\\4Code\\1\\0\\10read_an\"+
	    \"y\\1\\0\\25()Lorg/omg/CORBA/Any;\\1\\0\\12read_value\\1\\0)(Ljava/lan\"+
	    \"g/Class;)Ljava/io/Serializable;\\14\\0\\10\\0\\11\\14\\0\\30\\0\\31\\7\\0\"+
	    \"\\32\\14\\0\\13\\0\\14\\14\\0\\33\\0\\34\\7\\0\\35\\14\\0\\15\\0\\16\\1\\0(com/sun\"+
	    \"/jmx/remote/internal/PInputStream\\1\\0,com/sun/jmx/remote/inte\"+
	    \"rnal/ProxyInputStream\\1\\0\\2in\\1\\0$Lorg/omg/CORBA/portable/Inp\"+
	    \"utStream;\\1\\0\\\"org/omg/CORBA/portable/InputStream\\1\\0\\6narrow\"+
	    \"\\1\\0*()Lorg/omg/CORBA_2_3/portable/InputStream;\\1\\0&org/omg/C\"+
	    \"ORBA_2_3/portable/InputStream\\0!\\0\\6\\0\\7\\0\\0\\0\\0\\0\\3\\0\\1\\0\\10\"+
	    \"\\0\\11\\0\\1\\0\\12\\0\\0\\0\\22\\0\\2\\0\\2\\0\\0\\0\\6*+\\267\\0\\1\\261\\0\\0\\0\\0\"+
	    \"\\0\\1\\0\\13\\0\\14\\0\\1\\0\\12\\0\\0\\0\\24\\0\\1\\0\\1\\0\\0\\0\\10*\\264\\0\\2\\266\"+
	    \"\\0\\3\\260\\0\\0\\0\\0\\0\\1\\0\\15\\0\\16\\0\\1\\0\\12\\0\\0\\0\\25\\0\\2\\0\\2\\0\\0\\0\"+
	    \"\\11*\\266\\0\\4+\\266\\0\\5\\260\\0\\0\\0\\0\\0\\0\";
	final byte[] proxyStubByteCode =
	    NoCallStackClassLoader.stringToBytes(proxyStubByteCodeString);
	final byte[] pInputStreamByteCode =
	    NoCallStackClassLoader.stringToBytes(pInputStreamByteCodeString);
	final String[] classNames={proxyStubClassName, pInputStreamClassName};
	final byte[][] byteCodes = {proxyStubByteCode, pInputStreamByteCode};
	final String[] otherClassNames = {
	    iiopConnectionStubClassName,
	    ProxyInputStream.class.getName(),
	};
	PrivilegedExceptionAction action = new PrivilegedExceptionAction() {
	    public Object run() throws Exception {
		Class thisClass = RMIConnector.class;
		ClassLoader thisLoader = thisClass.getClassLoader();
		ProtectionDomain thisProtectionDomain =
		    thisClass.getProtectionDomain();
		ClassLoader cl =
		    new NoCallStackClassLoader(classNames,
					       byteCodes,
					       otherClassNames,
					       thisLoader,
					       thisProtectionDomain);
		return cl.loadClass(proxyStubClassName);
	    }
	};
	Class stubClass;
	try {
	    stubClass = (Class) AccessController.doPrivileged(action);
	} catch (Exception e) {
	    logger.error(\"<clinit>\",
		   \"Unexpected exception making shadow IIOP stub class: \"+e);
	    logger.debug(\"<clinit>\",e);
	    stubClass = null;
	}
	proxyStubClass = stubClass;
    }"
	php ""
	python ""
	idl ""
      end

      operation 8432283 "shadowIiopStub"
	class_operation private return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "stub" type class_ref 234139 // Stub
	nexceptions 2
	  exception class_ref 220059 // InstantiationException
	  exception class_ref 306331 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8432411 "getConnection"
	class_operation private return_type class_ref 1045275 // RMIConnection
	nparams 2
	  param inout name "server" type class_ref 1046171 // RMIServer
	  param inout name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8432539 "base64ToByteArray"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8432667 "base64toInt"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the specified character, which is assumed to be in the
\"Base 64 Alphabet\" into its equivalent 6-bit positive integer.

@throw IllegalArgumentException if
       c is not in the Base64 Alphabet."
      end

      attribute 3072155 "base64ToInt"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value "=  {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54,
        55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4,
        5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
        24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This array is a lookup table that translates unicode characters
drawn from the \"Base64 Alphabet\" (as specified in Table 1 of RFC 2045)
into their 6-bit positive integer equivalents.  Characters that
are not in the Base64 alphabet but fall within the bounds of the
array are translated to -1.
"
      end

      operation 8432795 "pushDefaultClassLoader"
	private return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - Find / Set default class loader
--------------------------------------------------------------------"
      end

      operation 8432923 "popDefaultClassLoader"
	private explicit_return_type "void"
	nparams 1
	  param in name "old" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2088603 // rmiServer (<unidirectional association>)
	relation 2088603 --->
	  a role_name "rmiServer" const_relation private
	    comment "--------------------------------------------------------------------
 Private variables
--------------------------------------------------------------------

@serial The RMIServer stub of the RMI JMX Connector server to
which this client connector is (or will be) connected. This
field can be null when <var>jmxServiceURL</var> is not
null. This includes the case where <var>jmxServiceURL</var>
contains a serialized RMIServer stub. If both
<var>rmiServer</var> and <var>jmxServiceURL</var> are null then
serialization will fail.

@see #RMIConnector(RMIServer,Map)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088603 // rmiServer (<unidirectional association>)
	  b parent class_ref 1046171 // RMIServer
      end

      classrelation 2088731 // jmxServiceURL (<unidirectional association>)
	relation 2088731 --->
	  a role_name "jmxServiceURL" const_relation private
	    comment "
@serial The JMXServiceURL of the RMI JMX Connector server to
which this client connector will be connected. This field can
be null when <var>rmiServer</var> is not null. If both
<var>rmiServer</var> and <var>jmxServiceURL</var> are null then
serialization will fail.

@see #RMIConnector(JMXServiceURL,Map)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088731 // jmxServiceURL (<unidirectional association>)
	  b parent class_ref 523931 // JMXServiceURL
      end

      classrelation 2088859 // env (<unidirectional association>)
	relation 2088859 --->
	  a role_name "env" private
	    comment " ---------------------------------------------------------
 WARNING - WARNING - WARNING - WARNING - WARNING - WARNING
 ---------------------------------------------------------
 Any transient variable which needs to be initialized should
 be initialized in the method initTransient()
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088859 // env (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2088987 // defaultClassLoader (<unidirectional association>)
	relation 2088987 --->
	  a role_name "defaultClassLoader" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2088987 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      classrelation 2089115 // connection (<unidirectional association>)
	relation 2089115 --->
	  a role_name "connection" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089115 // connection (<unidirectional association>)
	  b parent class_ref 1045275 // RMIConnection
      end

      attribute 3072283 "connectionId"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3072411 "clientNotifID"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2089243 // rmbscMap (<unidirectional association>)
	relation 2089243 --->
	  a role_name "rmbscMap" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089243 // rmbscMap (<unidirectional association>)
	  b parent class_ref 159387 // WeakHashMap
      end

      classrelation 2089371 // rmiNotifClient (<unidirectional association>)
	relation 2089371 --->
	  a role_name "rmiNotifClient" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089371 // rmiNotifClient (<unidirectional association>)
	  b parent class_ref 1046427 // RMINotifClient
      end

      attribute 3072539 "clientNotifCounter"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " = new RMINotifClient(new Integer(0));"
      end

      attribute 3072667 "connected"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3072795 "terminated"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " = false;"
      end

      classrelation 2089499 // closeException (<unidirectional association>)
	relation 2089499 --->
	  a role_name "closeException" private
	    comment " = false;
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089499 // closeException (<unidirectional association>)
	  b parent class_ref 165403 // Exception
      end

      classrelation 2089627 // connectionBroadcaster (<unidirectional association>)
	relation 2089627 --->
	  a role_name "connectionBroadcaster" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089627 // connectionBroadcaster (<unidirectional association>)
	  b parent class_ref 516763 // NotificationBroadcasterSupport
      end

      classrelation 2089883 // orb (<unidirectional association>)
	relation 2089883 --->
	  a role_name "orb" init_value "=  null" class_relation private
	    comment "
A static WeakReference to an {@link org.omg.CORBA.ORB ORB} to
connect unconnected stubs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2089883 // orb (<unidirectional association>)
	  b parent class_ref 392347 // WeakReference
      end

      classrelation 2090011 // delegateName (<unidirectional association>)
	relation 2090011 --->
	  a role_name "delegateName" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090011 // delegateName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      extra_member 172827 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    delegateName =
		new ObjectName(\"JMImplementation:type=MBeanServerDelegate\");
	} catch (MalformedObjectNameException e) {
	    Error error = new Error(\"Can't initialize delegateName\");
	    EnvHelp.initCause(error, e);
	    throw error;
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 8433051 "objects"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "objs" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8433179 "strings"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "strs" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1046171 "RMIServer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>RMI object used to establish connections to an RMI connector.
There is one Remote object implementing this interface for each RMI
connector.</p>

<p>User code does not usually refer to this interface.  It is
specified as part of the public API so that different
implementations of that API will interoperate.</p>

@since 1.5
@since.unbundled 1.0"
      classrelation 2091035 // <generalisation>
	relation 2091035 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2091035 // <generalisation>
	  b parent class_ref 233371 // Remote
      end

      operation 8436379 "getVersion"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 233499 // RemoteException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The version of the RMI Connector Protocol understood by this
connector server.  This is a string with the following format:</p>

<pre>
<em>protocol-version</em> <em>implementation-name</em>
</pre>

<p>The <code><em>protocol-version</em></code> is a series of
two or more non-negative integers separated by periods
(<code>.</code>).  An implementation of the version described
by this documentation must use the string <code>1.0</code>
here.</p>

<p>After the protocol version there must be a space, followed
by the implementation name.  The format of the implementation
name is unspecified.  It is recommended that it include an
implementation version number.  An implementation can use an
empty string as its implementation name, for example for
security reasons.</p>

@return a string with the format described here.

@exception RemoteException if there is a communication
exception during the remote method call."
      end

      operation 8436507 "newClient"
	public return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes a new connection through this RMI connector.  Each
remote client calls this method to obtain a new RMI object
representing its connection.</p>

@param credentials this object specifies the user-defined credentials
to be passed in to the server in order to authenticate the user before
creating the <code>RMIConnection</code>.  Can be null.

@return the newly-created connection object.

@exception IOException if the new client object cannot be
created or exported, or if there is a communication exception
during the remote method call.

@exception SecurityException if the given credentials do not
allow the server to authenticate the caller successfully."
      end
    end

    class 1046811 "RMIConnectorServer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A JMX API connector server that creates RMI-based connections
from remote clients.  Usually, such connector servers are made
using {@link javax.management.remote.JMXConnectorServerFactory
JMXConnectorServerFactory}.  However, specialized applications can
use this class directly, for example with an {@link RMIServerImpl}
object.</p>

@since 1.5
@since.unbundled 1.0"
      classrelation 2090139 // <generalisation>
	relation 2090139 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2090139 // <generalisation>
	  b parent class_ref 524315 // JMXConnectorServer
      end

      attribute 3072923 "JNDI_REBIND_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"jmx.remote.jndi.rebind\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Name of the attribute that specifies whether the {@link
RMIServer} stub that represents an RMI connector server should
override an existing stub at the same address.  The value
associated with this attribute, if any, should be a string that
is equal, ignoring case, to <code>\"true\"</code> or
<code>\"false\"</code>.  The default value is false.</p>
"
      end

      attribute 3073051 "RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"jmx.remote.rmi.client.socket.factory\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Name of the attribute that specifies the {@link
RMIClientSocketFactory} for the RMI objects created in
conjunction with this connector. The value associated with this
attribute must be of type <code>RMIClientSocketFactory</code> and can
only be specified in the <code>Map</code> argument supplied when
creating a connector server.</p>
"
      end

      attribute 3073179 "RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"jmx.remote.rmi.server.socket.factory\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Name of the attribute that specifies the {@link
RMIServerSocketFactory} for the RMI objects created in
conjunction with this connector. The value associated with this
attribute must be of type <code>RMIServerSocketFactory</code> and can
only be specified in the <code>Map</code> argument supplied when
creating a connector server.</p>
"
      end

      operation 8433307 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code>.
This is equivalent to calling {@link #RMIConnectorServer(
JMXServiceURL,Map,RMIServerImpl,MBeanServer) 
RMIConnectorServer(directoryURL,environment,null,null)}</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"jrmp\"
are valid when this constructor is used.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail."
      end

      operation 8433435 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 3
	  param inout name "url" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	  param inout name "mbeanServer" type class_ref 513179 // MBeanServer
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code> for the given MBean
server.
This is equivalent to calling {@link #RMIConnectorServer(
JMXServiceURL,Map,RMIServerImpl,MBeanServer) 
RMIConnectorServer(directoryURL,environment,null,mbeanServer)}</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@param mbeanServer the MBean server to which the new connector
server is attached, or null if it will be attached by being
registered as an MBean in the MBean server.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"jrmp\"
are valid when this constructor is used.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail."
      end

      operation 8433563 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 4
	  param inout name "url" type class_ref 523931 // JMXServiceURL
	  param inout name "environment" type class_ref 136603 // Map
	  param inout name "rmiServerImpl" type class_ref 1045531 // RMIServerImpl
	  param inout name "mbeanServer" type class_ref 513179 // MBeanServer
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code> for the given MBean
server.</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@param rmiServerImpl An implementation of the RMIServer interface,
 consistent with the protocol type specified in <var>url</var>.
 If this parameter is non null, the protocol type specified by
 <var>url</var> is not constrained, and is assumed to be valid. 
 Otherwise, only \"rmi\" and \"iiop\" will be recognized. 

@param mbeanServer the MBean server to which the new connector
server is attached, or null if it will be attached by being
registered as an MBean in the MBean server.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"jrmp\"
are recognized when <var>rmiServerImpl</var> is null.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail.

@see #start"
      end

      operation 8433691 "toJMXConnector"
	public return_type class_ref 523803 // JMXConnector
	nparams 1
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a client stub for this connector server.  A client
stub is a serializable object whose {@link
JMXConnector#connect(Map) connect} method can be used to make
one new connection to this connector server.</p>

@param env client connection parameters of the same sort that
could be provided to {@link JMXConnector#connect(Map)
JMXConnector.connect(Map)}.  Can be null, which is equivalent
to an empty map.

@return a client stub that can be used to make a new connection
to this connector server.

@exception UnsupportedOperationException if this connector
server does not support the generation of client stubs.

@exception IllegalStateException if the JMXConnectorServer is
not started (see {@link #isActive()}).

@exception IOException if a communications problem means that a
stub cannot be created."
      end

      operation 8433819 "start"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Activates the connector server, that is starts listening for
client connections.  Calling this method when the connector
server is already active has no effect.  Calling this method
when the connector server has been stopped will generate an
<code>IOException</code>.</p>

<p>The behaviour of this method when called for the first time
depends on the parameters that were supplied at construction,
as described below.</p>

<p>First, an object of a subclass of {@link RMIServerImpl} is
required, to export the connector server through RMI:</p>

<ul>

<li>If an <code>RMIServerImpl</code> was supplied to the
constructor, it is used.

<li>Otherwise, if the protocol part of the
<code>JMXServiceURL</code> supplied to the constructor was
<code>iiop</code>, an object of type {@link RMIIIOPServerImpl}
is created.

<li>Otherwise, if the <code>JMXServiceURL</code>
was null, or its protocol part was <code>rmi</code>, an object
of type {@link RMIJRMPServerImpl} is created.

<li>Otherwise, the implementation can create an
implementation-specific {@link RMIServerImpl} or it can throw
{@link MalformedURLException}.

</ul>

<p>If the given address includes a JNDI directory URL as
specified in the package documentation for {@link
javax.management.remote.rmi}, then this
<code>RMIConnectorServer</code> will bootstrap by binding the
<code>RMIServerImpl</code> to the given address.</p>

<p>If the URL path part of the <code>JMXServiceURL</code> was
empty or a single slash (<code>/</code>), then the RMI object
will not be bound to a directory.  Instead, a reference to it
will be encoded in the URL path of the RMIConnectorServer
address (returned by {@link #getAddress()}).  The encodings for
<code>rmi</code> and <code>iiop</code> are described in the
package documentation for {@link
javax.management.remote.rmi}.</p>

<p>The behavior when the URL path is neither empty nor a JNDI
directory URL, or when the protocol is neither <code>rmi</code>
nor <code>iiop</code>, is implementation defined, and may
include throwing {@link MalformedURLException} when the
connector server is created or when it is started.</p>

@exception IllegalStateException if the connector server has
not been attached to an MBean server.
@exception IOException if the connector server cannot be
started."
      end

      operation 8433947 "stop"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Deactivates the connector server, that is, stops listening for
client connections.  Calling this method will also close all
client connections that were made by this server.  After this
method returns, whether normally or with an exception, the
connector server will not create any new client
connections.</p>

<p>Once a connector server has been stopped, it cannot be started
again.</p>

<p>Calling this method when the connector server has already
been stopped has no effect.  Calling this method when the
connector server has not yet been started will disable the
connector server object permanently.</p>

<p>If closing a client connection produces an exception, that
exception is not thrown from this method.  A {@link
JMXConnectionNotification} is emitted from this MBean with the
connection ID of the connection that could not be closed.</p>

<p>Closing a connector server is a potentially slow operation.
For example, if a client machine with an open connection has
crashed, the close operation might have to wait for a network
protocol timeout.  Callers that do not want to block in a close
operation should do it in a separate thread.</p>

<p>This method calls the method {@link RMIServerImpl#close()
close} on the connector server's <code>RMIServerImpl</code>
object.</p>

<p>If the <code>RMIServerImpl</code> was bound to a JNDI
directory by the {@link #start() start} method, it is unbound
from the directory by this method.</p>

@exception IOException if the server cannot be closed cleanly,
or if the <code>RMIServerImpl</code> cannot be unbound from the
directory.  When this exception is thrown, the server has
already attempted to close all client connections, if
appropriate; to call {@link RMIServerImpl#close()}; and to
unbind the <code>RMIServerImpl</code> from its directory, if
appropriate.  All client connections are closed except possibly
those that generated exceptions when the server attempted to
close them."
      end

      operation 8434075 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8434203 "getAddress"
	public return_type class_ref 523931 // JMXServiceURL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8434331 "getAttributes"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8434459 "connectionOpened"
	protected explicit_return_type "void"
	nparams 3
	  param in name "connectionId" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We repeat the definitions of connection{Opened,Closed,Failed}
here so that they are accessible to other classes in this package
even though they have protected access.  "
      end

      operation 8434587 "connectionClosed"
	protected explicit_return_type "void"
	nparams 3
	  param in name "connectionId" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8434715 "connectionFailed"
	protected explicit_return_type "void"
	nparams 3
	  param in name "connectionId" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8434843 "bind"
	package explicit_return_type "void"
	nparams 4
	  param in name "jndiUrl" explicit_type "String"
	  param inout name "attributes" type class_ref 139035 // Hashtable
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "rebind" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 289947 // NamingException
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bind a stub to a registry.
@param jndiUrl URL of the stub in the registry, extracted 
       from the <code>JMXServiceURL</code>.
@param attributes A Hashtable containing environment parameters,
       built from the Map specified at this object creation.
@param rmiServer The object to bind in the registry
@param rebind true if the object must be rebound."
      end

      operation 8434971 "newServer"
	package return_type class_ref 1045531 // RMIServerImpl
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RMIServerImpl."
      end

      operation 8435099 "encodeStubInAddress"
	private explicit_return_type "void"
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "attributes" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encode a stub into the JMXServiceURL.
@param rmiServer The stub object to encode in the URL
@param attributes A Map containing environment parameters,
       built from the Map specified at this object creation."
      end

      operation 8435227 "isIiopURL"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "directoryURL" type class_ref 523931 // JMXServiceURL
	  param inout name "strict" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8435355 "encodeStub"
	class_operation package explicit_return_type "String"
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IOR of the given rmiServer."
      end

      operation 8435483 "encodeJRMPStub"
	class_operation package explicit_return_type "String"
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8435611 "encodeIIOPStub"
	class_operation package explicit_return_type "String"
	nparams 2
	  param inout name "rmiServer" type class_ref 1046171 // RMIServer
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8435739 "objectToBind"
	class_operation private return_type class_ref 1046171 // RMIServer
	nparams 2
	  param inout name "rmiServer" type class_ref 1045531 // RMIServerImpl
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Object that we will bind to the registry.
This object is a stub connected to our RMIServerImpl."
      end

      operation 8435867 "newJRMPServer"
	class_operation private return_type class_ref 1045531 // RMIServerImpl
	nparams 2
	  param inout name "env" type class_ref 136603 // Map
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8435995 "newIIOPServer"
	class_operation private return_type class_ref 1045531 // RMIServerImpl
	nparams 1
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8436123 "byteArrayToBase64"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "a" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3073307 "intToAlpha"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "=  {
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This array is a lookup table that translates 6-bit positive integer
index values into their \"Base64 Alphabet\" equivalents as specified 
in Table 1 of RFC 2045.
"
      end

      operation 8436251 "newIOException"
	class_operation private return_type class_ref 179355 // IOException
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new IOException with a nested exception.  
The nested exception is set only if JDK >= 1.4"
      end

      classrelation 2090395 // address (<unidirectional association>)
	relation 2090395 --->
	  a role_name "address" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090395 // address (<unidirectional association>)
	  b parent class_ref 523931 // JMXServiceURL
      end

      classrelation 2090523 // rmiServerImpl (<unidirectional association>)
	relation 2090523 --->
	  a role_name "rmiServerImpl" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090523 // rmiServerImpl (<unidirectional association>)
	  b parent class_ref 1045531 // RMIServerImpl
      end

      classrelation 2090651 // attributes (<unidirectional association>)
	relation 2090651 --->
	  a role_name "attributes" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090651 // attributes (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2090779 // defaultClassLoader (<unidirectional association>)
	relation 2090779 --->
	  a role_name "defaultClassLoader" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090779 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      attribute 3073435 "boundJndiUrl"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3073563 "CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " state "
      end

      attribute 3073691 "STARTED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3073819 "STOPPED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3073947 "state"
	private explicit_type "int"
	init_value "=  CREATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2090907 // openedServers (<unidirectional association>)
	relation 2090907 --->
	  a role_name "openedServers" init_value "=  new HashSet()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2090907 // openedServers (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end
    end

    class 1046939 "RMIIIOPServerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An {@link RMIServerImpl} that is exported through IIOP and that
creates client connections as RMI objects exported through IIOP.
User code does not usually reference this class directly.</p>

@see RMIServerImpl

@since 1.5
@since.unbundled 1.0"
      classrelation 2092187 // <generalisation>
	relation 2092187 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2092187 // <generalisation>
	  b parent class_ref 1045531 // RMIServerImpl
      end

      operation 8439195 "RMIIIOPServerImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link RMIServerImpl}.</p>

@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, which is equivalent
to an empty Map.

@exception IOException if the RMI object cannot be created."
      end

      operation 8439323 "export"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8439451 "getProtocol"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8439579 "toStub"
	public return_type class_ref 233371 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns an IIOP stub.</p>
The stub might not yet be connected to the ORB. The stub will
be serializable only if it is connected to the ORB.
@return an IIOP stub.
@exception IOException if the stub cannot be created - e.g the
           RMIIIOPServerImpl has not been exported yet."
      end

      operation 8439707 "makeClient"
	protected return_type class_ref 1045275 // RMIConnection
	nparams 2
	  param in name "connectionId" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection as an RMI object exported
through IIOP.

@param connectionId the ID of the new connection.  Every
connection opened by this connector server will have a
different ID.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported."
      end

      operation 8439835 "closeClient"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1045275 // RMIConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8439963 "closeServer"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server by
unexporting this object.  After returning from this method, the
connector server must not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed."
      end

      operation 8440091 "doNewClient"
	package return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param in name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 8440219 "superDoNewClient"
	package return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "credentials" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2092315 // env (<unidirectional association>)
	relation 2092315 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2092315 // env (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2092443 // callerACC (<unidirectional association>)
	relation 2092443 --->
	  a role_name "callerACC" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2092443 // callerACC (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end
    end

    class 1047067 "RMIJRMPServerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An {@link RMIServer} object that is exported through JRMP and that
creates client connections as RMI objects exported through JRMP.
User code does not usually reference this class directly.</p>

@see RMIServerImpl

@since 1.5
@since.unbundled 1.0"
      classrelation 2092571 // <generalisation>
	relation 2092571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2092571 // <generalisation>
	  b parent class_ref 1045531 // RMIServerImpl
      end

      operation 8440347 "RMIJRMPServerImpl"
	public explicit_return_type ""
	nparams 4
	  param in name "port" explicit_type "int"
	  param inout name "csf" type class_ref 522651 // RMIClientSocketFactory
	  param inout name "ssf" type class_ref 522779 // RMIServerSocketFactory
	  param inout name "env" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link RMIServer} object that will be exported
on the given port using the given socket factories.</p>

@param port the port on which this object and the {@link
RMIConnectionImpl} objects it creates will be exported.  Can be
zero, to indicate any available port.

@param csf the client socket factory for the created RMI
objects.  Can be null.

@param ssf the server socket factory for the created RMI
objects.  Can be null.

@param env the environment map.  Can be null.

@exception IOException if the {@link RMIServer} object
cannot be created.

@exception IllegalArgumentException if <code>port</code> is
negative."
      end

      operation 8440475 "export"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8440603 "export"
	private explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 233371 // Remote
	nexceptions 1
	  exception class_ref 233499 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8440731 "unexport"
	private explicit_return_type "void"
	nparams 2
	  param inout name "obj" type class_ref 233371 // Remote
	  param inout name "force" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 233627 // NoSuchObjectException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8440859 "getProtocol"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8440987 "toStub"
	public return_type class_ref 233371 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a serializable stub for this {@link RMIServer} object.</p>

@return a serializable stub.

@exception IOException if the stub cannot be obtained - e.g the
           RMIJRMPServerImpl has not been exported yet."
      end

      operation 8441115 "makeClient"
	protected return_type class_ref 1045275 // RMIConnection
	nparams 2
	  param in name "connectionId" explicit_type "String"
	  param inout name "subject" type class_ref 520987 // Subject
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection as an RMI object exported
through JRMP. The port and socket factories for the new
{@link RMIConnection} object are the ones supplied
to the <code>RMIJRMPServerImpl</code> constructor.</p>

@param connectionId the ID of the new connection. Every
connection opened by this connector server will have a
different id.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new {@link RMIConnection}
object cannot be created or exported."
      end

      operation 8441243 "closeClient"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1045275 // RMIConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8441371 "closeServer"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server by
unexporting this object.  After returning from this method, the
connector server must not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed."
      end

      attribute 3074203 "port"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2092699 // csf (<unidirectional association>)
	relation 2092699 --->
	  a role_name "csf" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2092699 // csf (<unidirectional association>)
	  b parent class_ref 522651 // RMIClientSocketFactory
      end

      classrelation 2092827 // ssf (<unidirectional association>)
	relation 2092827 --->
	  a role_name "ssf" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2092827 // ssf (<unidirectional association>)
	  b parent class_ref 522779 // RMIServerSocketFactory
      end

      classrelation 2092955 // env (<unidirectional association>)
	relation 2092955 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2092955 // env (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end
    end

    class 1047195 "RMIServerImpl_Stub"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2093083 // <generalisation>
	relation 2093083 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2093083 // <generalisation>
	  b parent class_ref 955035 // RemoteStub
      end

      classrelation 2093211 // <realization>
	relation 2093211 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2093211 // <realization>
	  b parent class_ref 1046171 // RMIServer
      end

      attribute 3074331 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2093339 // $method_getVersion_0 (<unidirectional association>)
	relation 2093339 --->
	  a role_name "$method_getVersion_0" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2093339 // $method_getVersion_0 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      classrelation 2093467 // $method_newClient_1 (<unidirectional association>)
	relation 2093467 --->
	  a role_name "$method_newClient_1" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2093467 // $method_newClient_1 (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      extra_member 172955 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    $method_getVersion_0 = javax.management.remote.rmi.RMIServer.class.getMethod(\"getVersion\", new java.lang.Class[] {});
	    $method_newClient_1 = javax.management.remote.rmi.RMIServer.class.getMethod(\"newClient\", new java.lang.Class[] {java.lang.Object.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		\"stub class initialization failed\");
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 8441499 "RMIServerImpl_Stub"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 522011 // RemoteRef
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructors"
      end

      operation 8441627 "getVersion"
	public return_type class_ref 179611 // String
	nparams 0
	nexceptions 1
	  exception class_ref 233499 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " methods from remote interfaces
 implementation of getVersion()"
      end

      operation 8441755 "newClient"
	public return_type class_ref 1045275 // RMIConnection
	nparams 1
	  param inout name "$param_Object_1" type class_ref 168347 // Object
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of newClient(Object)"
      end
    end
  end

  deploymentview 170523 "rmi"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 798107 "NoCallStackClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.security.ProtectionDomain;
${definition}"
      associated_classes
	class_ref 1045147 // NoCallStackClassLoader
      end
      comment "@(#)NoCallStackClassLoader.java	1.5 04/02/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 798235 "RMIConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.io.InterruptedIOException;
import java.rmi.Remote;
import java.rmi.MarshalledObject;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MalformedObjectNameException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.MBeanServerConnection;
import javax.management.NotificationListener;
import javax.management.NotCompliantMBeanException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.RuntimeOperationsException;
import javax.management.loading.ClassLoaderRepository;
import javax.management.remote.NotificationResult;
import java.util.Set;
import javax.security.auth.Subject;
${definition}"
      associated_classes
	class_ref 1045275 // RMIConnection
      end
      comment "@(#)RMIConnection.java	1.39 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 798363 "RMIConnectionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InterruptedIOException;
import java.io.IOException;
import java.io.Serializable;
import java.rmi.MarshalledObject;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.rmi.server.UnicastRemoteObject;
import java.rmi.server.Unreferenced;
import java.rmi.NoSuchObjectException;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.security.ProtectionDomain;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;
import java.util.Map;
import java.rmi.UnmarshalException;
import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MalformedObjectNameException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.NotCompliantMBeanException;
import javax.management.Notification;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.RuntimeOperationsException;
import javax.management.loading.ClassLoaderRepository;
import javax.management.remote.NotificationResult;
import javax.management.remote.SubjectDelegationPermission;
import javax.management.remote.TargetedNotification;
import javax.management.remote.JMXServerErrorException;
import javax.security.auth.Subject;
import com.sun.jmx.remote.internal.ServerNotifForwarder;
import com.sun.jmx.remote.internal.ServerCommunicatorAdmin;
import com.sun.jmx.remote.internal.Unmarshal;
import com.sun.jmx.remote.security.JMXSubjectDomainCombiner;
import com.sun.jmx.remote.security.SubjectDelegator;
import com.sun.jmx.remote.util.CacheMap;
import com.sun.jmx.remote.util.ClassLoaderWithRepository;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import com.sun.jmx.remote.util.OrderClassLoaders;
${definition}"
      associated_classes
	class_ref 1045403 // RMIConnectionImpl
      end
      comment "@(#)RMIConnectionImpl.java	1.88 06/10/23

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 798491 "RMIConnectionImpl_Stub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1045915 // RMIConnectionImpl_Stub
      end
      comment " Stub class generated by rmic, do not edit.
 Contents subject to change without notice."
    end

    artifact 798619 "RMIConnector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MalformedObjectNameException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServerConnection;
import javax.management.MBeanServerNotification;
import javax.management.NotCompliantMBeanException;
import javax.management.Notification;
import javax.management.NotificationBroadcasterSupport;
import javax.management.NotificationEmitter;
import javax.management.NotificationFilter;
import javax.management.NotificationFilterSupport;
import javax.management.NotificationListener;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.remote.JMXAuthenticator;
import javax.management.remote.JMXConnectionNotification;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;
import javax.management.remote.NotificationResult;
import javax.management.remote.TargetedNotification;
import javax.management.remote.JMXServerErrorException;
import java.lang.ref.WeakReference;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.WeakHashMap;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectStreamClass;
import java.io.Serializable;
import java.io.WriteAbortedException;
import java.io.NotSerializableException;
import java.net.MalformedURLException;
import java.rmi.MarshalledObject;
import java.rmi.NoSuchObjectException;
import java.rmi.MarshalException;
import java.rmi.UnmarshalException;
import java.rmi.ServerException;
import java.rmi.server.RemoteObject;
import java.rmi.server.RemoteRef;
import javax.rmi.PortableRemoteObject;
import javax.rmi.CORBA.Stub;
import org.omg.CORBA.portable.Delegate;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import com.sun.jmx.remote.internal.ClientNotifForwarder;
import com.sun.jmx.remote.internal.ClientCommunicatorAdmin;
import com.sun.jmx.remote.internal.ClientListenerInfo;
import com.sun.jmx.remote.internal.ProxyInputStream;
import com.sun.jmx.remote.internal.ProxyRef;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.ProtectionDomain;
import javax.security.auth.Subject;
${definition}"
      associated_classes
	class_ref 1046043 // RMIConnector
      end
      comment "@(#)RMIConnector.java	1.117 05/12/01

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 798747 "RMIConnectorServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.MalformedURLException;
import java.rmi.Remote;
import java.rmi.server.RemoteObject;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.util.Collections;
import java.util.Hashtable;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.management.MBeanRegistration;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.InstanceNotFoundException;
import javax.management.remote.JMXConnectionNotification;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorServer;
import javax.management.remote.JMXServiceURL;
import javax.management.remote.MBeanServerForwarder;
import com.sun.jmx.remote.security.MBeanServerFileAccessController;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
${definition}"
      associated_classes
	class_ref 1046811 // RMIConnectorServer
      end
      comment "@(#)RMIConnectorServer.java	1.61 04/06/21

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 798875 "RMIServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.Remote;
import java.rmi.RemoteException;
${definition}"
      associated_classes
	class_ref 1046171 // RMIServer
      end
      comment "@(#)RMIServer.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799003 "RMIServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.remote.internal.ArrayNotificationBuffer;
import com.sun.jmx.remote.internal.NotificationBuffer;
import com.sun.jmx.remote.security.JMXPluggableAuthenticator;
import com.sun.jmx.remote.util.ClassLogger;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.rmi.Remote;
import java.rmi.server.RemoteServer;
import java.rmi.server.ServerNotActiveException;
import java.security.Principal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.management.MBeanServer;
import javax.management.remote.JMXAuthenticator;
import javax.management.remote.JMXConnectorServer;
import javax.security.auth.Subject;
${definition}"
      associated_classes
	class_ref 1045531 // RMIServerImpl
      end
      comment "@(#)RMIServerImpl.java	1.58 07/08/14

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799131 "RMIIIOPServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.Remote;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Map;
import java.util.Collections;
import javax.rmi.PortableRemoteObject;
import javax.security.auth.Subject;
${definition}"
      associated_classes
	class_ref 1046939 // RMIIIOPServerImpl
      end
      comment "@(#)RMIIIOPServerImpl.java	1.26 07/08/14

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799259 "RMIJRMPServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.NoSuchObjectException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.rmi.server.UnicastRemoteObject;
import java.rmi.server.RemoteObject;
import java.util.Map;
import java.util.Collections;
import javax.security.auth.Subject;
import com.sun.jmx.remote.internal.RMIExporter;
${definition}"
      associated_classes
	class_ref 1047067 // RMIJRMPServerImpl
      end
      comment "@(#)RMIJRMPServerImpl.java	1.27 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799387 "RMIServerImpl_Stub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1047195 // RMIServerImpl_Stub
      end
      comment " Stub class generated by rmic, do not edit.
 Contents subject to change without notice."
    end
  end
end
