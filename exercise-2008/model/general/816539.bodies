class Function
!!!6012571.java!!!	setArg(inout arg : Expression, in argNum : int) : void
			// throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("zero", null));
      reportWrongNumberArgs();
!!!6012699.java!!!	checkNumberArgs(in argNum : int) : void
    if (argNum != 0)
      reportWrongNumberArgs();
!!!6012827.java!!!	reportWrongNumberArgs() : void
      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("zero", null));
!!!6012955.java!!!	execute(inout xctxt : XPathContext) : XObject

    // Programmer's assert.  (And, no, I don't want the method to be abstract).
    System.out.println("Error! Function.execute should not be called!");

    return null;
!!!6013211.java!!!	callVisitors(inout owner : ExpressionOwner, inout visitor : XPathVisitor) : void
  	if(visitor.visitFunction(owner, this))
  	{
  		callArgVisitors(visitor);
  	}
!!!6013339.java!!!	deepEquals(inout expr : Expression) : boolean
  	if(!isSameClass(expr))
  		return false;
  		
  	return true;
!!!6013467.java!!!	postCompileStep(inout compiler : Compiler) : void
    // no default action
