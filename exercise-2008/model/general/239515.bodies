class CorbaContactInfoBase
!!!938395.java!!!	getBroker() : Broker
	return orb;
!!!938523.java!!!	getContactInfoList() : ContactInfoList
	return contactInfoList;
!!!938651.java!!!	getClientRequestDispatcher() : ClientRequestDispatcher
	int scid =
	    getEffectiveProfile().getObjectKeyTemplate().getSubcontractId() ;
	RequestDispatcherRegistry scr = orb.getRequestDispatcherRegistry() ;
	return scr.getClientRequestDispatcher( scid ) ;
!!!938779.java!!!	setConnectionCache(inout connectionCache : OutboundConnectionCache) : void
	this.connectionCache = connectionCache;
!!!938907.java!!!	getConnectionCache() : OutboundConnectionCache
	return connectionCache;
!!!939035.java!!!	createMessageMediator(inout broker : Broker, inout contactInfo : ContactInfo, inout connection : Connection, in methodName : String, inout isOneWay : boolean) : MessageMediator
	// REVISIT: Would like version, ior, requestid, etc., decisions
	// to be in client subcontract.  Cannot pass these to this
	// factory method because it breaks generic abstraction.
	// Maybe set methods on mediator called from subcontract
	// after creation?
	CorbaMessageMediator messageMediator =
 	    new CorbaMessageMediatorImpl(
	        (ORB) broker,
		contactInfo,
 		connection,
 		GIOPVersion.chooseRequestVersion( (ORB)broker,
		     effectiveTargetIOR),
 		effectiveTargetIOR,
 		((CorbaConnection)connection).getNextRequestId(),
 		getAddressingDisposition(),
 		methodName,
 		isOneWay);

	return messageMediator;
!!!939163.java!!!	createMessageMediator(inout broker : Broker, inout conn : Connection) : MessageMediator
	ORB orb = (ORB) broker;
	CorbaConnection connection = (CorbaConnection) conn;

        if (orb.transportDebugFlag) {
	    if (connection.shouldReadGiopHeaderOnly()) {
		dprint(
		".createMessageMediator: waiting for message header on connection: "
		+ connection);
	    } else {
		dprint(
		".createMessageMediator: waiting for message on connection: "
		+ connection);
	    }
	}

	Message msg = null;

	if (connection.shouldReadGiopHeaderOnly()) {
	    // read giop header only
	    msg = MessageBase.readGIOPHeader(orb, connection);
	} else {
	    // read entire giop message
	    msg = MessageBase.readGIOPMessage(orb, connection);
	}

	ByteBuffer byteBuffer = msg.getByteBuffer();
	msg.setByteBuffer(null);
	CorbaMessageMediator messageMediator =
	    new CorbaMessageMediatorImpl(orb, connection, msg, byteBuffer);

	return messageMediator;
!!!939291.java!!!	finishCreatingMessageMediator(inout broker : Broker, inout conn : Connection, inout messageMediator : MessageMediator) : MessageMediator
	ORB orb = (ORB) broker;
	CorbaConnection connection = (CorbaConnection) conn;
	CorbaMessageMediator corbaMessageMediator =
	              (CorbaMessageMediator)messageMediator;

        if (orb.transportDebugFlag) {
	    dprint(
	    ".finishCreatingMessageMediator: waiting for message body on connection: "
		+ connection);
	}

	Message msg = corbaMessageMediator.getDispatchHeader();
	msg.setByteBuffer(corbaMessageMediator.getDispatchBuffer());

	// read giop body only
	msg = MessageBase.readGIOPBody(orb, connection, msg);

	ByteBuffer byteBuffer = msg.getByteBuffer();
	msg.setByteBuffer(null);
	corbaMessageMediator.setDispatchHeader(msg);
	corbaMessageMediator.setDispatchBuffer(byteBuffer);

	return corbaMessageMediator;
!!!939419.java!!!	createOutputObject(inout messageMediator : MessageMediator) : OutputObject
	CorbaMessageMediator corbaMessageMediator = (CorbaMessageMediator)
	    messageMediator;
	
	OutputObject outputObject = 
	    new CDROutputObject(orb, messageMediator, 
				corbaMessageMediator.getRequestHeader(),
				corbaMessageMediator.getStreamFormatVersion());

	messageMediator.setOutputObject(outputObject);
	return outputObject;
!!!939547.java!!!	createInputObject(inout broker : Broker, inout messageMediator : MessageMediator) : InputObject
	// REVISIT: Duplicate of acceptor code.
	CorbaMessageMediator corbaMessageMediator = (CorbaMessageMediator)
	    messageMediator;
	return new CDRInputObject((ORB)broker,
				  (CorbaConnection)messageMediator.getConnection(),
				  corbaMessageMediator.getDispatchBuffer(),
				  corbaMessageMediator.getDispatchHeader());
!!!939675.java!!!	getAddressingDisposition() : short
	return addressingDisposition;
!!!939803.java!!!	setAddressingDisposition(in addressingDisposition : short) : void
        this.addressingDisposition = addressingDisposition;
!!!939931.java!!!	getTargetIOR() : IOR
	return  contactInfoList.getTargetIOR();
!!!940059.java!!!	getEffectiveTargetIOR() : IOR
	return effectiveTargetIOR ;
!!!940187.java!!!	getEffectiveProfile() : IIOPProfile
	return effectiveTargetIOR.getProfile();
!!!940315.java!!!	toString() : String
	return
	    "CorbaContactInfoBase[" 
	    + "]";
!!!940443.java!!!	dprint(in msg : String) : void
	ORBUtility.dprint("CorbaContactInfoBase", msg);
