class HeapLongBufferR
!!!7466011.java!!!	HeapLongBufferR(in cap : int, in lim : int)
		// package-private







	super(cap, lim);
	this.isReadOnly = true;

!!!7466139.java!!!	HeapLongBufferR(in buf : long, in off : int, in len : int)
 // package-private







	super(buf, off, len);
	this.isReadOnly = true;

!!!7466267.java!!!	HeapLongBufferR(in buf : long, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)








	super(buf, mark, pos, lim, cap, off);
	this.isReadOnly = true;

!!!7466395.java!!!	slice() : LongBuffer

	return new HeapLongBufferR(hb,
					-1,
					0,
					this.remaining(),
					this.remaining(),
					this.position() + offset);
!!!7466523.java!!!	duplicate() : LongBuffer

	return new HeapLongBufferR(hb,
					this.markValue(),
					this.position(),
					this.limit(),
					this.capacity(),
					offset);
!!!7466651.java!!!	asReadOnlyBuffer() : LongBuffer









	return duplicate();

!!!7466779.java!!!	isReadOnly() : boolean

	return true;
!!!7466907.java!!!	put(in x : long) : LongBuffer





	throw new ReadOnlyBufferException();

!!!7467035.java!!!	put(in i : int, in x : long) : LongBuffer





	throw new ReadOnlyBufferException();

!!!7467163.java!!!	put(in src : long, in offset : int, in length : int) : LongBuffer









	throw new ReadOnlyBufferException();

!!!7467291.java!!!	put(inout src : LongBuffer) : LongBuffer
























	throw new ReadOnlyBufferException();

!!!7467419.java!!!	compact() : LongBuffer







	throw new ReadOnlyBufferException();

!!!7467547.java!!!	order() : ByteOrder

	return ByteOrder.nativeOrder();
