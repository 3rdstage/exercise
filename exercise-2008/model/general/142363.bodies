class CheckedList
!!!226587.java!!!	CheckedList(inout list : List, inout type : Class<E>)
            super(list, type);
            this.list = list;
!!!226715.java!!!	equals(inout o : Object) : boolean
 return list.equals(o);
!!!226843.java!!!	hashCode() : int
 return list.hashCode();
!!!226971.java!!!	get(in index : int) : E
 return list.get(index);
!!!227099.java!!!	remove(in index : int) : E
 return list.remove(index);
!!!227227.java!!!	indexOf(inout o : Object) : int
 return list.indexOf(o);
!!!227355.java!!!	lastIndexOf(inout o : Object) : int
 return list.lastIndexOf(o);
!!!227483.java!!!	set(in index : int, inout element : E) : E
            typeCheck(element);
            return list.set(index, element);
!!!227611.java!!!	add(in index : int, inout element : E) : void
            typeCheck(element);
            list.add(index, element);
!!!227739.java!!!	addAll(in index : int, inout c : Collection) : boolean
            // See CheckCollection.addAll, above, for an explanation
            E[] a = null;
            try {
                a = c.toArray(zeroLengthElementArray());
            } catch(ArrayStoreException e) {
                throw new ClassCastException();
            }

            return list.addAll(index, Arrays.asList(a));
!!!227867.java!!!	listIterator() : ListIterator
 return listIterator(0);
!!!227995.java!!!	listIterator(in index : int) : ListIterator
            return new ListIterator<E>() {
                ListIterator<E> i = list.listIterator(index);

                public boolean hasNext()     { return i.hasNext(); }
                public E next()              { return i.next(); }
                public boolean hasPrevious() { return i.hasPrevious(); }
                public E previous()          { return i.previous(); }
                public int nextIndex()       { return i.nextIndex(); }
                public int previousIndex()   { return i.previousIndex(); }
                public void remove()         { i.remove(); }

                public void set(E o) {
                    typeCheck(o);
                    i.set(o);
                }

                public void add(E o) {
                    typeCheck(o);
                    i.add(o);
                }
            };
!!!228123.java!!!	subList(in fromIndex : int, in toIndex : int) : List
            return new CheckedList<E>(list.subList(fromIndex, toIndex), type);
