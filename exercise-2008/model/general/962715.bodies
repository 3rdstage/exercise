class MessageDigest
!!!7596827.java!!!	MessageDigest(in algorithm : String)
	this.algorithm = algorithm;
!!!7596955.java!!!	getInstance(in algorithm : String) : MessageDigest
 
	try {
	    Object[] objs = Security.getImpl(algorithm, "MessageDigest",
					     (String)null);
	    if (objs[0] instanceof MessageDigest) {
		MessageDigest md = (MessageDigest)objs[0];
		md.provider = (Provider)objs[1];
		return md;
	    } else {
		MessageDigest delegate =
		    new Delegate((MessageDigestSpi)objs[0], algorithm);
		delegate.provider = (Provider)objs[1];
		return delegate;
	    }
	} catch(NoSuchProviderException e) {
	    throw new NoSuchAlgorithmException(algorithm + " not found");
	}
!!!7597083.java!!!	getInstance(in algorithm : String, in provider : String) : MessageDigest
	if (provider == null || provider.length() == 0)
	    throw new IllegalArgumentException("missing provider");
	Object[] objs = Security.getImpl(algorithm, "MessageDigest", provider);
	if (objs[0] instanceof MessageDigest) {
	    MessageDigest md = (MessageDigest)objs[0];
	    md.provider = (Provider)objs[1];
	    return md;
	} else {
	    MessageDigest delegate =
		new Delegate((MessageDigestSpi)objs[0], algorithm);
	    delegate.provider = (Provider)objs[1];
	    return delegate;
	}
!!!7597211.java!!!	getInstance(in algorithm : String, inout provider : Provider) : MessageDigest
	if (provider == null)
	    throw new IllegalArgumentException("missing provider");
	Object[] objs = Security.getImpl(algorithm, "MessageDigest", provider);
	if (objs[0] instanceof MessageDigest) {
	    MessageDigest md = (MessageDigest)objs[0];
	    md.provider = (Provider)objs[1];
	    return md;
	} else {
	    MessageDigest delegate =
		new Delegate((MessageDigestSpi)objs[0], algorithm);
	    delegate.provider = (Provider)objs[1];
	    return delegate;
	}
!!!7597339.java!!!	getProvider() : Provider
	return this.provider;
!!!7597467.java!!!	update(in input : byte) : void
	engineUpdate(input);
	state = IN_PROGRESS;
!!!7597595.java!!!	update(in input : byte, in offset : int, in len : int) : void
	if (input == null) {
	    throw new IllegalArgumentException("No input buffer given");
	}
	if (input.length - offset < len) {
	    throw new IllegalArgumentException("Input buffer too short");
	}
	engineUpdate(input, offset, len);
	state = IN_PROGRESS;
!!!7597723.java!!!	update(in input : byte) : void
	engineUpdate(input, 0, input.length);
	state = IN_PROGRESS;
!!!7597851.java!!!	update(inout input : ByteBuffer) : void
	if (input == null) {
	    throw new NullPointerException();
	}
	engineUpdate(input);
	state = IN_PROGRESS;
!!!7597979.java!!!	digest() : byte
	/* Resetting is the responsibility of implementors. */
	byte[] result = engineDigest();
	state = INITIAL;
	return result;
!!!7598107.java!!!	digest(in buf : byte, in offset : int, in len : int) : int
	if (buf == null) {
	    throw new IllegalArgumentException("No output buffer given");
	}
	if (buf.length - offset < len) {
	    throw new IllegalArgumentException
		("Output buffer too small for specified offset and length");
	}
	int numBytes = engineDigest(buf, offset, len);
	state = INITIAL;
	return numBytes;
!!!7598235.java!!!	digest(in input : byte) : byte
	update(input);
	return digest();
!!!7598363.java!!!	toString() : String
	ByteArrayOutputStream baos = new ByteArrayOutputStream();
	PrintStream p = new PrintStream(baos);
	p.print(algorithm+" Message Digest from "+provider.getName()+", ");
	switch (state) {
	case INITIAL:
	    p.print("<initialized>");
	    break;
	case IN_PROGRESS:
	    p.print("<in progress>");
	    break;
	}
	p.println();
	return (baos.toString());
!!!7598491.java!!!	isEqual(in digesta : byte, in digestb : byte) : boolean
	if (digesta.length != digestb.length)
	    return false;

	for (int i = 0; i < digesta.length; i++) {
	    if (digesta[i] != digestb[i]) {
		return false;
	    }
	}
	return true;
!!!7598619.java!!!	reset() : void
	engineReset();
	state = INITIAL;
!!!7598747.java!!!	getAlgorithm() : String
	return this.algorithm;
!!!7598875.java!!!	getDigestLength() : int
	int digestLen = engineGetDigestLength();
	if (digestLen == 0) {
	    try {
		MessageDigest md = (MessageDigest)clone();
		byte[] digest = md.digest();
		return digest.length;
	    } catch (CloneNotSupportedException e) {
		return digestLen;
	    }
	}
	return digestLen;
!!!7599003.java!!!	clone() : Object
	if (this instanceof Cloneable) {
	    return super.clone();
	} else {
	    throw new CloneNotSupportedException();
	}
