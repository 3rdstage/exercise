class HeapDoubleBufferR
!!!7454107.java!!!	HeapDoubleBufferR(in cap : int, in lim : int)
		// package-private







	super(cap, lim);
	this.isReadOnly = true;

!!!7454235.java!!!	HeapDoubleBufferR(in buf : double, in off : int, in len : int)
 // package-private







	super(buf, off, len);
	this.isReadOnly = true;

!!!7454363.java!!!	HeapDoubleBufferR(in buf : double, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)








	super(buf, mark, pos, lim, cap, off);
	this.isReadOnly = true;

!!!7454491.java!!!	slice() : DoubleBuffer

	return new HeapDoubleBufferR(hb,
					-1,
					0,
					this.remaining(),
					this.remaining(),
					this.position() + offset);
!!!7454619.java!!!	duplicate() : DoubleBuffer

	return new HeapDoubleBufferR(hb,
					this.markValue(),
					this.position(),
					this.limit(),
					this.capacity(),
					offset);
!!!7454747.java!!!	asReadOnlyBuffer() : DoubleBuffer









	return duplicate();

!!!7454875.java!!!	isReadOnly() : boolean

	return true;
!!!7455003.java!!!	put(in x : double) : DoubleBuffer





	throw new ReadOnlyBufferException();

!!!7455131.java!!!	put(in i : int, in x : double) : DoubleBuffer





	throw new ReadOnlyBufferException();

!!!7455259.java!!!	put(in src : double, in offset : int, in length : int) : DoubleBuffer









	throw new ReadOnlyBufferException();

!!!7455387.java!!!	put(inout src : DoubleBuffer) : DoubleBuffer
























	throw new ReadOnlyBufferException();

!!!7455515.java!!!	compact() : DoubleBuffer







	throw new ReadOnlyBufferException();

!!!7455643.java!!!	order() : ByteOrder

	return ByteOrder.nativeOrder();
