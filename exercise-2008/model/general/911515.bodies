class MethodArray
!!!6971291.java!!!	MethodArray()
            methods = new Method[20];
            length = 0;
!!!6971419.java!!!	add(inout m : Method) : void
            if (length == methods.length) {
                Method[] newMethods = new Method[2 * methods.length];
                System.arraycopy(methods, 0, newMethods, 0, methods.length);
                methods = newMethods;
            }
            methods[length++] = m;
!!!6971547.java!!!	addAll(inout ma : Method) : void
            for (int i = 0; i < ma.length; i++) {
                add(ma[i]);
            }
!!!6971675.java!!!	addAll(inout ma : MethodArray) : void
            for (int i = 0; i < ma.length(); i++) {
                add(ma.get(i));
            }
!!!6971803.java!!!	addIfNotPresent(inout newMethod : Method) : void
            for (int i = 0; i < length; i++) {
                Method m = methods[i];
                if (m == newMethod || (m != null && m.equals(newMethod))) {
                    return;
                }
            }
            add(newMethod);
!!!6971931.java!!!	addAllIfNotPresent(inout newMethods : MethodArray) : void
            for (int i = 0; i < newMethods.length(); i++) {
                Method m = newMethods.get(i);
                if (m != null) {
                    addIfNotPresent(m);
                }
            }
!!!6972059.java!!!	length() : int
            return length;
!!!6972187.java!!!	get(in i : int) : Method
            return methods[i];
!!!6972315.java!!!	removeByNameAndSignature(inout toRemove : Method) : void
            for (int i = 0; i < length; i++) {
                Method m = methods[i];
                if (m != null &&
                    m.getReturnType() == toRemove.getReturnType() &&
                    m.getName() == toRemove.getName() &&
                    arrayContentsEq(m.getParameterTypes(),
                                    toRemove.getParameterTypes())) {
                    methods[i] = null;
                }
            }
!!!6972443.java!!!	compactAndTrim() : void
            int newPos = 0;
            // Get rid of null slots
            for (int pos = 0; pos < length; pos++) {
                Method m = methods[pos];
                if (m != null) {
                    if (pos != newPos) {
                        methods[newPos] = m;
                    }
                    newPos++;
                }
            }
            if (newPos != methods.length) {
                Method[] newMethods = new Method[newPos];
                System.arraycopy(methods, 0, newMethods, 0, newPos);
                methods = newMethods;
            }
!!!6972571.java!!!	getArray() : Method
            return methods;
