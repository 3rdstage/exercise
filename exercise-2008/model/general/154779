format 76
"accessibility" // src::javax::accessibility
  revision 4
  modified_by 31 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/accessibility"
  java_package "javax.accessibility"
  classview 153115 "accessibility"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 375835 "AccessibleContext"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AccessibleContext represents the minimum information all accessible objects
return.  This information includes the accessible name, description, role,
and state of the object, as well as information about its parent and 
children.  AccessibleContext also contains methods for
obtaining more specific accessibility information about a component.
If the component supports them, these methods will return an object that
implements one or more of the following interfaces:
<P><ul>
<li>{@link AccessibleAction} - the object can perform one or more actions.  
This interface provides the standard mechanism for an assistive
technology to determine what those actions are and tell the object
to perform them.  Any object that can be manipulated should
support this interface.
<li>{@link AccessibleComponent} - the object has a graphical representation.
This interface provides the standard mechanism for an assistive 
technology to determine and set the graphical representation of the 
object.  Any object that is rendered on the screen should support
this interface.
<li>{@link  AccessibleSelection} - the object allows its children to be 
selected.  This interface provides the standard mechanism for an
assistive technology to determine the currently selected children of the object
as well as modify its selection set.  Any object that has children
that can be selected should support this interface.
<li>{@link AccessibleText} - the object presents editable textual information
on the display.  This interface provides the standard mechanism for
an assistive technology to access that text via its content, attributes,
and spatial location.  Any object that contains editable text should
support this interface.
<li>{@link AccessibleValue} - the object supports a numerical value.  This
interface provides the standard mechanism for an assistive technology
to determine and set the current value of the object, as well as obtain its
minimum and maximum values.  Any object that supports a numerical value
should support this interface.</ul>


@beaninfo
  attribute: isContainer false
description: Minimal information that all accessible objects return


@version     1.43 04/02/04
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker
@author      Lynn Monsanto"
      attribute 651803 "ACCESSIBLE_NAME_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleName\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleName property has
changed.  The old value in the PropertyChangeEvent will be the old 
accessibleName and the new value will be the new accessibleName.

@see #getAccessibleName
@see #addPropertyChangeListener
"
      end

      attribute 651931 "ACCESSIBLE_DESCRIPTION_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleDescription\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleDescription property has
changed.  The old value in the PropertyChangeEvent will be the
old accessibleDescription and the new value will be the new
accessibleDescription.

@see #getAccessibleDescription
@see #addPropertyChangeListener
"
      end

      attribute 652059 "ACCESSIBLE_STATE_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleState\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleStateSet property has 
changed.  The old value will be the old AccessibleState and the new
value will be the new AccessibleState in the accessibleStateSet.  
For example, if a component that supports the vertical and horizontal
states changes its orientation from vertical to horizontal, the old
value will be AccessibleState.VERTICAL and the new value will be
AccessibleState.HORIZONTAL.  Please note that either value can also 
be null.  For example, when a component changes from being enabled 
to disabled, the old value will be AccessibleState.ENABLED
and the new value will be null.

@see #getAccessibleStateSet
@see AccessibleState
@see AccessibleStateSet
@see #addPropertyChangeListener
"
      end

      attribute 652187 "ACCESSIBLE_VALUE_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleValue\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleValue property has
changed.  The old value in the PropertyChangeEvent will be a Number 
representing the old value and the new value will be a Number 
representing the new value

@see #getAccessibleValue
@see #addPropertyChangeListener
"
      end

      attribute 652315 "ACCESSIBLE_SELECTION_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleSelection\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleSelection has changed.
The old and new values in the PropertyChangeEvent are currently 
reserved for future use.

@see #getAccessibleSelection
@see #addPropertyChangeListener
"
      end

      attribute 652443 "ACCESSIBLE_CARET_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleCaret\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the accessibleText caret has changed.
The old value in the PropertyChangeEvent will be an
integer representing the old caret position, and the new value will 
be an integer representing the new/current caret position.

@see #addPropertyChangeListener
"
      end

      attribute 652571 "ACCESSIBLE_VISIBLE_DATA_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleVisibleData\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the visual appearance of the object
has changed.  The old and new values in the PropertyChangeEvent are 
currently reserved for future use.

@see #addPropertyChangeListener
"
      end

      attribute 652699 "ACCESSIBLE_CHILD_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleChild\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when Accessible children are added/removed
from the object.  If an Accessible child is being added, the old
value will be null and the new value will be the Accessible child.  If an
Accessible child is being removed, the old value will be the Accessible
child, and the new value will be null.

@see #addPropertyChangeListener
"
      end

      attribute 652827 "ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleActiveDescendant\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to determine when the active descendant of a component
has changed.  The active descendant is used for objects such as 
list, tree, and table, which may have transient children.  When the
active descendant has changed, the old value of the property change
event will be the Accessible representing the previous active child, and 
the new value will be the Accessible representing the current active
child.

@see #addPropertyChangeListener
"
      end

      attribute 652955 "ACCESSIBLE_TABLE_CAPTION_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  
	\"accessibleTableCaptionChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the table caption has changed
The old value in the PropertyChangeEvent will be an Accessible
representing the previous table caption and the new value will
be an Accessible representing the new table caption.
@see Accessible
@see AccessibleTable
"
      end

      attribute 653083 "ACCESSIBLE_TABLE_SUMMARY_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  
	\"accessibleTableSummaryChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the table summary has changed
The old value in the PropertyChangeEvent will be an Accessible
representing the previous table summary and the new value will
be an Accessible representing the new table summary.
@see Accessible
@see AccessibleTable
"
      end

      attribute 653211 "ACCESSIBLE_TABLE_MODEL_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  
	\"accessibleTableModelChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that table data has changed.
The old value in the PropertyChangeEvent will be null and the 
new value will be an AccessibleTableModelChange representing
the table change.
@see AccessibleTable
@see AccessibleTableModelChange
"
      end

      attribute 653339 "ACCESSIBLE_TABLE_ROW_HEADER_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  
	\"accessibleTableRowHeaderChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the row header has changed
The old value in the PropertyChangeEvent will be null and the 
new value will be an AccessibleTableModelChange representing
the header change.
@see AccessibleTable
@see AccessibleTableModelChange
"
      end

      attribute 653467 "ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
	\"accessibleTableRowDescriptionChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the row description has changed
The old value in the PropertyChangeEvent will be null and the 
new value will be an Integer representing the row index.
@see AccessibleTable
"
      end

      attribute 653595 "ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
	\"accessibleTableColumnHeaderChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the column header has changed
The old value in the PropertyChangeEvent will be null and the 
new value will be an AccessibleTableModelChange representing
the header change.
@see AccessibleTable
@see AccessibleTableModelChange
"
      end

      attribute 653723 "ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
	\"accessibleTableColumnDescriptionChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the column description has changed
The old value in the PropertyChangeEvent will be null and the 
new value will be an Integer representing the column index.
@see AccessibleTable
"
      end

      attribute 653851 "ACCESSIBLE_ACTION_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
	\"accessibleActionProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the supported set of actions
has changed.  The old value in the PropertyChangeEvent will
be an Integer representing the old number of actions supported
and the new value will be an Integer representing the new 
number of actions supported.
@see AccessibleAction
"
      end

      attribute 653979 "ACCESSIBLE_HYPERTEXT_OFFSET"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
	\"AccessibleHypertextOffset\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that a hypertext element has received focus.
The old value in the PropertyChangeEvent will be an Integer
representing the start index in the document of the previous element
that had focus and the new value will be an Integer representing
the start index in the document of the current element that has
focus.  A value of -1 indicates that an element does not or did 
not have focus.
@see AccessibleHyperlink
"
      end

      attribute 654107 "ACCESSIBLE_TEXT_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"AccessibleText\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "PropertyChangeEvent which indicates that text has changed.
<br>
For text insertion, the oldValue is null and the newValue
is an AccessibleTextSequence specifying the text that was
inserted.  
<br>
For text deletion, the oldValue is an AccessibleTextSequence
specifying the text that was deleted and the newValue is null.
<br>
For text replacement, the oldValue is an AccessibleTextSequence
specifying the old text and the newValue is an AccessibleTextSequence
specifying the new text.

@see #getAccessibleText
@see #addPropertyChangeListener
@see #AccessibleText.AccessibleTextSequence
"
      end

      attribute 654235 "ACCESSIBLE_INVALIDATE_CHILDREN"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"accessibleInvalidateChildren\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "PropertyChangeEvent which indicates that a significant change
has occurred to the children of a component like a tree or text.  
This change notifies the event listener that it needs to
reacquire the state of the subcomponents. The oldValue is
null and the newValue is the component whose children have
become invalid.

@see #getAccessibleText
@see #addPropertyChangeListener
@see #AccessibleText.AccessibleTextSequence

@since 1.5
"
      end

      attribute 654363 "ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"accessibleTextAttributesChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "PropertyChangeEvent which indicates that text attributes have changed.
<br>
For attribute insertion, the oldValue is null and the newValue
is an AccessibleAttributeSequence specifying the attributes that were
inserted.  
<br>
For attribute deletion, the oldValue is an AccessibleAttributeSequence
specifying the attributes that were deleted and the newValue is null.
<br>
For attribute replacement, the oldValue is an AccessibleAttributeSequence
specifying the old attributes and the newValue is an   
AccessibleAttributeSequence specifying the new attributes.

@see #getAccessibleText
@see #addPropertyChangeListener
@see #AccessibleText.AccessibleAttributeSequence

@since 1.5
"
      end

      attribute 654491 "ACCESSIBLE_COMPONENT_BOUNDS_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"accessibleComponentBoundsChanged\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "PropertyChangeEvent which indicates that a change has occurred
in a component's bounds.  
The oldValue is the old component bounds and the newValue is 
the new component bounds.

@see #addPropertyChangeListener

@since 1.5
"
      end

      classrelation 557851 // accessibleParent (<unidirectional association>)
	relation 557851 --->
	  a role_name "accessibleParent" init_value "=  null" protected
	    comment " 
The accessible parent of this object.

@see #getAccessibleParent
@see #setAccessibleParent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 557851 // accessibleParent (<unidirectional association>)
	  b parent class_ref 376091 // Accessible
      end

      attribute 654619 "accessibleName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A localized String containing the name of the object.

@see #getAccessibleName
@see #setAccessibleName 
"
      end

      attribute 654747 "accessibleDescription"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A localized String containing the description of the object.

@see #getAccessibleDescription
@see #setAccessibleDescription 
"
      end

      classrelation 557979 // accessibleChangeSupport (<unidirectional association>)
	relation 557979 --->
	  a role_name "accessibleChangeSupport" init_value "=  null" private
	    comment "
Used to handle the listener list for property change events.

@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #firePropertyChangeListener

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 557979 // accessibleChangeSupport (<unidirectional association>)
	  b parent class_ref 372379 // PropertyChangeSupport
      end

      classrelation 558107 // relationSet (<unidirectional association>)
	relation 558107 --->
	  a role_name "relationSet" init_value "=  new AccessibleRelationSet()" private
	    comment "
Used to represent the context's relation set
@see #getAccessibleRelationSet

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 558107 // relationSet (<unidirectional association>)
	  b parent class_ref 376219 // AccessibleRelationSet
      end

      operation 2156699 "getAccessibleName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the accessibleName property of this object.  The accessibleName
property of an object is a localized String that designates the purpose
of the object.  For example, the accessibleName property of a label
or button might be the text of the label or button itself.  In the
case of an object that doesn't display its name, the accessibleName
should still be set.  For example, in the case of a text field used
to enter the name of a city, the accessibleName for the en_US locale
could be 'city.'

@return the localized name of the object; null if this 
object does not have a name

@see #setAccessibleName"
      end

      operation 2156827 "setAccessibleName"
	public explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the localized accessible name of this object.  Changing the
name will cause a PropertyChangeEvent to be fired for the
ACCESSIBLE_NAME_PROPERTY property.

@param s the new localized name of the object.

@see #getAccessibleName
@see #addPropertyChangeListener

@beaninfo
   preferred:   true
   description: Sets the accessible name for the component."
      end

      operation 2156955 "getAccessibleDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the accessibleDescription property of this object.  The
accessibleDescription property of this object is a short localized
phrase describing the purpose of the object.  For example, in the 
case of a 'Cancel' button, the accessibleDescription could be
'Ignore changes and close dialog box.'

@return the localized description of the object; null if 
this object does not have a description

@see #setAccessibleDescription"
      end

      operation 2157083 "setAccessibleDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the accessible description of this object.  Changing the
name will cause a PropertyChangeEvent to be fired for the
ACCESSIBLE_DESCRIPTION_PROPERTY property.

@param s the new localized description of the object

@see #setAccessibleName
@see #addPropertyChangeListener

@beaninfo
   preferred:   true
   description: Sets the accessible description for the component."
      end

      operation 2157211 "getAccessibleRole"
	abstract public return_type class_ref 376347 // AccessibleRole
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the role of this object.  The role of the object is the generic
purpose or use of the class of this object.  For example, the role
of a push button is AccessibleRole.PUSH_BUTTON.  The roles in 
AccessibleRole are provided so component developers can pick from
a set of predefined roles.  This enables assistive technologies to
provide a consistent interface to various tweaked subclasses of 
components (e.g., use AccessibleRole.PUSH_BUTTON for all components
that act like a push button) as well as distinguish between sublasses
that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes
and AccessibleRole.RADIO_BUTTON for radio buttons).
<p>Note that the AccessibleRole class is also extensible, so 
custom component developers can define their own AccessibleRole's
if the set of predefined roles is inadequate.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole"
      end

      operation 2157339 "getAccessibleStateSet"
	abstract public return_type class_ref 376475 // AccessibleStateSet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state set of this object.  The AccessibleStateSet of an object
is composed of a set of unique AccessibleStates.  A change in the 
AccessibleStateSet of an object will cause a PropertyChangeEvent to 
be fired for the ACCESSIBLE_STATE_PROPERTY property.

@return an instance of AccessibleStateSet containing the 
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener"
      end

      operation 2157467 "getAccessibleParent"
	public return_type class_ref 376091 // Accessible
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Accessible parent of this object.

@return the Accessible parent of this object; null if this
object does not have an Accessible parent"
      end

      operation 2157595 "setAccessibleParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 376091 // Accessible
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Accessible parent of this object.  This is meant to be used
only in the situations where the actual component's parent should 
not be treated as the component's accessible parent and is a method 
that should only be called by the parent of the accessible child. 

@param a - Accessible to be set as the parent	"
      end

      operation 2157723 "getAccessibleIndexInParent"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the 0-based index of this object in its accessible parent.

@return the 0-based index of this object in its parent; -1 if this 
object does not have an accessible parent.

@see #getAccessibleParent 
@see #getAccessibleChildrenCount
@see #getAccessibleChild"
      end

      operation 2157851 "getAccessibleChildrenCount"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object."
      end

      operation 2157979 "getAccessibleChild"
	abstract public return_type class_ref 376091 // Accessible
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified Accessible child of the object.  The Accessible
children of an Accessible object are zero-based, so the first child 
of an Accessible child is at index 0, the second child is at index 1,
and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount"
      end

      operation 2158107 "getLocale"
	abstract public return_type class_ref 138907 // Locale
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalComponentStateException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locale of the component. If the component does not have a 
locale, then the locale of its parent is returned.  

@return this component's locale.  If this component does not have 
a locale, the locale of its parent is returned.

@exception IllegalComponentStateException 
If the Component does not have its own locale and has not yet been 
added to a containment hierarchy such that the locale can be
determined from the containing parent. "
      end

      operation 2158235 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list.
The listener is registered for all Accessible properties and will
be called when those properties change.

@see #ACCESSIBLE_NAME_PROPERTY
@see #ACCESSIBLE_DESCRIPTION_PROPERTY
@see #ACCESSIBLE_STATE_PROPERTY
@see #ACCESSIBLE_VALUE_PROPERTY
@see #ACCESSIBLE_SELECTION_PROPERTY
@see #ACCESSIBLE_TEXT_PROPERTY
@see #ACCESSIBLE_VISIBLE_DATA_PROPERTY

@param listener  The PropertyChangeListener to be added"
      end

      operation 2158363 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.

@param listener  The PropertyChangeListener to be removed"
      end

      operation 2158491 "getAccessibleAction"
	public return_type class_ref 376731 // AccessibleAction
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleAction associated with this object that supports
one or more actions. 

@return AccessibleAction if supported by object; else return null
@see AccessibleAction"
      end

      operation 2158619 "getAccessibleComponent"
	public return_type class_ref 376859 // AccessibleComponent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleComponent associated with this object that has a 
graphical representation.

@return AccessibleComponent if supported by object; else return null
@see AccessibleComponent"
      end

      operation 2158747 "getAccessibleSelection"
	public return_type class_ref 376987 // AccessibleSelection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleSelection associated with this object which allows its
Accessible children to be selected.  

@return AccessibleSelection if supported by object; else return null
@see AccessibleSelection"
      end

      operation 2158875 "getAccessibleText"
	public return_type class_ref 377115 // AccessibleText
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleText associated with this object presenting 
text on the display.

@return AccessibleText if supported by object; else return null
@see AccessibleText"
      end

      operation 2159003 "getAccessibleEditableText"
	public return_type class_ref 377243 // AccessibleEditableText
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleEditableText associated with this object 
presenting editable text on the display.

@return AccessibleEditableText if supported by object; else return null
@see AccessibleEditableText"
      end

      operation 2159131 "getAccessibleValue"
	public return_type class_ref 377371 // AccessibleValue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleValue associated with this object that supports a 
Numerical value. 

@return AccessibleValue if supported by object; else return null 
@see AccessibleValue"
      end

      operation 2159259 "getAccessibleIcon"
	public return_type class_ref 377499 // AccessibleIcon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleIcons associated with an object that has
one or more associated icons

@return an array of AccessibleIcon if supported by object; 
otherwise return null 
@see AccessibleIcon"
      end

      operation 2159387 "getAccessibleRelationSet"
	public return_type class_ref 376219 // AccessibleRelationSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleRelationSet associated with an object

@return an AccessibleRelationSet if supported by object;
otherwise return null
@see AccessibleRelationSet"
      end

      operation 2159515 "getAccessibleTable"
	public return_type class_ref 377627 // AccessibleTable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleTable associated with an object

@return an AccessibleTable if supported by object;
otherwise return null
@see AccessibleTable"
      end

      operation 2159643 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes.  If oldValue and 
newValue are not equal and the PropertyChangeEvent listener list 
is not empty, then fire a PropertyChange event to each listener.
In general, this is for use by the Accessible objects themselves
and should not be called by an application program.
@param propertyName  The programmatic name of the property that
was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property.
@see java.beans.PropertyChangeSupport
@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #ACCESSIBLE_NAME_PROPERTY
@see #ACCESSIBLE_DESCRIPTION_PROPERTY
@see #ACCESSIBLE_STATE_PROPERTY
@see #ACCESSIBLE_VALUE_PROPERTY
@see #ACCESSIBLE_SELECTION_PROPERTY
@see #ACCESSIBLE_TEXT_PROPERTY
@see #ACCESSIBLE_VISIBLE_DATA_PROPERTY"
      end
    end

    class 376091 "Accessible"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface Accessible is the main interface for the accessibility package. 
All components that support
the accessibility package must implement this interface.  
It contains a single method, {@link #getAccessibleContext}, which  
returns an instance of the class {@link AccessibleContext}.

@version     1.1 11/24/97 20:34:48
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker"
      operation 2207515 "getAccessibleContext"
	public return_type class_ref 375835 // AccessibleContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AccessibleContext associated with this object.  In most
cases, the return value should not be null if the object implements
interface Accessible.  If a component developer creates a subclass
of an object that implements Accessible, and that subclass
is not Accessible, the developer should override the 
getAccessibleContext method to return null."
      end
    end

    class 376219 "AccessibleRelationSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class AccessibleRelationSet determines a component's relation set.  The 
relation set of a component is a set of AccessibleRelation objects that 
describe the component's relationships with other components.

@see AccessibleRelation

@version     1.13 05/05/04
@author      Lynn Monsanto"
      classrelation 1993499 // relations (<unidirectional association>)
	relation 1993499 --->
	  a role_name "relations" init_value "=  null" protected
	    comment "
Each entry in the Vector represents an AccessibleRelation.
@see #add
@see #addAll
@see #remove
@see #contains
@see #get
@see #size
@see #toArray
@see #clear

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibleRelation> ${name}${value};
"
	    classrelation_ref 1993499 // relations (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 8161307 "AccessibleRelationSet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new empty relation set."
      end

      operation 8161435 "AccessibleRelationSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "relations" type class_ref 1023515 // AccessibleRelation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new relation with the initial set of relations contained in 
the array of relations passed in.  Duplicate entries are ignored.

@param relations an array of AccessibleRelation describing the 
relation set."
      end

      operation 8161563 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "relation" type class_ref 1023515 // AccessibleRelation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new relation to the current relation set.  If the relation 
is already in the relation set, the target(s) of the specified
relation is merged with the target(s) of the existing relation.  
Otherwise,  the new relation is added to the relation set.

@param relation the relation to add to the relation set
@return true if relation is added to the relation set; false if the 
relation set is unchanged"
      end

      operation 8161691 "addAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "relations" type class_ref 1023515 // AccessibleRelation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the relations to the existing relation set.  Duplicate 
entries are ignored.

@param relations  AccessibleRelation array describing the relation set."
      end

      operation 8161819 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "relation" type class_ref 1023515 // AccessibleRelation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a relation from the current relation set.  If the relation 
is not in the set, the relation set will be unchanged and the 
return value will be false.  If the relation is in the relation 
set, it will be removed from the set and the return value will be 
true.
	
@param relation the relation to remove from the relation set
@return true if the relation is in the relation set; false if the 
relation set is unchanged"
      end

      operation 8161947 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the relations from the current relation set."
      end

      operation 8162075 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of relations in the relation set."
      end

      operation 8162203 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the relation set contains a relation
that matches the specified key.
@param key the AccessibleRelation key
@return true if the relation is in the relation set; otherwise false"
      end

      operation 8162331 "get"
	public return_type class_ref 1023515 // AccessibleRelation
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the relation that matches the specified key.  
@param key the AccessibleRelation key
@return the relation, if one exists, that matches the specified key.
Otherwise, null is returned."
      end

      operation 8162459 "toArray"
	public return_type class_ref 1023515 // AccessibleRelation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current relation set as an array of AccessibleRelation
@return AccessibleRelation array contacting the current relation."
      end

      operation 8162587 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a localized String representing all the relations in the set 
using the default locale.

@return comma separated localized String
@see AccessibleBundle#toDisplayString"
      end
    end

    class 376347 "AccessibleRole"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>Class AccessibleRole determines the role of a component.  The role of a 
component describes its generic function. (E.G., 
\"push button,\" \"table,\" or \"list.\")
<p>The toDisplayString method allows you to obtain the localized string 
for a locale independent key from a predefined ResourceBundle for the 
keys defined in this class.
<p>The constants in this class present a strongly typed enumeration
of common object roles.  A public constructor for this class has been
purposely omitted and applications should use one of the constants
from this class.  If the constants in this class are not sufficient
to describe the role of an object, a subclass should be generated
from this class and it should provide constants in a similar manner.

@version     1.45 04/15/04
@author      Willie Walker
@author	Peter Korn
@author	Lynn Monsanto"
      classrelation 1993755 // <generalisation>
	relation 1993755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1993755 // <generalisation>
	  b parent class_ref 1022747 // AccessibleBundle
      end

      classrelation 1993883 // ALERT (<unidirectional association>)
	relation 1993883 --->
	  a role_name "ALERT" init_value "=  new AccessibleRole(\"alert\")" class_relation const_relation public
	    comment " If you add or remove anything from here, make sure you 
 update AccessibleResourceBundle.java.

Object is used to alert the user about something.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1993883 // ALERT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994011 // COLUMN_HEADER (<unidirectional association>)
	relation 1994011 --->
	  a role_name "COLUMN_HEADER" init_value "=  new AccessibleRole(\"columnheader\")" class_relation const_relation public
	    comment "
The header for a column of data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994011 // COLUMN_HEADER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994139 // CANVAS (<unidirectional association>)
	relation 1994139 --->
	  a role_name "CANVAS" init_value "=  new AccessibleRole(\"canvas\")" class_relation const_relation public
	    comment " 
Object that can be drawn into and is used to trap
events.
@see #FRAME
@see #GLASS_PANE
@see #LAYERED_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994139 // CANVAS (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994267 // COMBO_BOX (<unidirectional association>)
	relation 1994267 --->
	  a role_name "COMBO_BOX" init_value "=  new AccessibleRole(\"combobox\")" class_relation const_relation public
	    comment " 
A list of choices the user can select from.  Also optionally 
allows the user to enter a choice of their own.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994267 // COMBO_BOX (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994395 // DESKTOP_ICON (<unidirectional association>)
	relation 1994395 --->
	  a role_name "DESKTOP_ICON" init_value "=  new AccessibleRole(\"desktopicon\")" class_relation const_relation public
	    comment " 
An iconified internal frame in a DESKTOP_PANE.
@see #DESKTOP_PANE
@see #INTERNAL_FRAME

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994395 // DESKTOP_ICON (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994523 // INTERNAL_FRAME (<unidirectional association>)
	relation 1994523 --->
	  a role_name "INTERNAL_FRAME" init_value "=  new AccessibleRole(\"internalframe\")" class_relation const_relation public
	    comment " 
A frame-like object that is clipped by a desktop pane.  The
desktop pane, internal frame, and desktop icon objects are 
often used to create multiple document interfaces within an
application.
@see #DESKTOP_ICON
@see #DESKTOP_PANE
@see #FRAME

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994523 // INTERNAL_FRAME (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994651 // DESKTOP_PANE (<unidirectional association>)
	relation 1994651 --->
	  a role_name "DESKTOP_PANE" init_value "=  new AccessibleRole(\"desktoppane\")" class_relation const_relation public
	    comment "
A pane that supports internal frames and 
iconified versions of those internal frames.
@see #DESKTOP_ICON
@see #INTERNAL_FRAME

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994651 // DESKTOP_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994779 // OPTION_PANE (<unidirectional association>)
	relation 1994779 --->
	  a role_name "OPTION_PANE" init_value "=  new AccessibleRole(\"optionpane\")" class_relation const_relation public
	    comment " 
A specialized pane whose primary use is inside a DIALOG
@see #DIALOG

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994779 // OPTION_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1994907 // WINDOW (<unidirectional association>)
	relation 1994907 --->
	  a role_name "WINDOW" init_value "=  new AccessibleRole(\"window\")" class_relation const_relation public
	    comment " 
A top level window with no title or border.
@see #FRAME
@see #DIALOG

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1994907 // WINDOW (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995035 // FRAME (<unidirectional association>)
	relation 1995035 --->
	  a role_name "FRAME" init_value "=  new AccessibleRole(\"frame\")" class_relation const_relation public
	    comment "
A top level window with a title bar, border, menu bar, etc.  It is
often used as the primary window for an application.
@see #DIALOG
@see #CANVAS
@see #WINDOW

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995035 // FRAME (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995163 // DIALOG (<unidirectional association>)
	relation 1995163 --->
	  a role_name "DIALOG" init_value "=  new AccessibleRole(\"dialog\")" class_relation const_relation public
	    comment " 
A top level window with title bar and a border.  A dialog is similar 
to a frame, but it has fewer properties and is often used as a 
secondary window for an application.
@see #FRAME
@see #WINDOW

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995163 // DIALOG (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995291 // COLOR_CHOOSER (<unidirectional association>)
	relation 1995291 --->
	  a role_name "COLOR_CHOOSER" init_value "=  new AccessibleRole(\"colorchooser\")" class_relation const_relation public
	    comment "
A specialized dialog that lets the user choose a color.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995291 // COLOR_CHOOSER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995419 // DIRECTORY_PANE (<unidirectional association>)
	relation 1995419 --->
	  a role_name "DIRECTORY_PANE" init_value "=  new AccessibleRole(\"directorypane\")" class_relation const_relation public
	    comment "
A pane that allows the user to navigate through 
and select the contents of a directory.  May be used
by a file chooser.
@see #FILE_CHOOSER

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995419 // DIRECTORY_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995547 // FILE_CHOOSER (<unidirectional association>)
	relation 1995547 --->
	  a role_name "FILE_CHOOSER" init_value "=  new AccessibleRole(\"filechooser\")" class_relation const_relation public
	    comment "
A specialized dialog that displays the files in the directory
and lets the user select a file, browse a different directory,
or specify a filename.  May use the directory pane to show the
contents of a directory.
@see #DIRECTORY_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995547 // FILE_CHOOSER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995675 // FILLER (<unidirectional association>)
	relation 1995675 --->
	  a role_name "FILLER" init_value "=  new AccessibleRole(\"filler\")" class_relation const_relation public
	    comment " 
An object that fills up space in a user interface.  It is often
used in interfaces to tweak the spacing between components,
but serves no other purpose.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995675 // FILLER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995803 // HYPERLINK (<unidirectional association>)
	relation 1995803 --->
	  a role_name "HYPERLINK" init_value "=  new AccessibleRole(\"hyperlink\")" class_relation const_relation public
	    comment "
A hypertext anchor

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995803 // HYPERLINK (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1995931 // ICON (<unidirectional association>)
	relation 1995931 --->
	  a role_name "ICON" init_value "=  new AccessibleRole(\"icon\")" class_relation const_relation public
	    comment "
A small fixed size picture, typically used to decorate components.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1995931 // ICON (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996059 // LABEL (<unidirectional association>)
	relation 1996059 --->
	  a role_name "LABEL" init_value "=  new AccessibleRole(\"label\")" class_relation const_relation public
	    comment " 
An object used to present an icon or short string in an interface.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996059 // LABEL (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996187 // ROOT_PANE (<unidirectional association>)
	relation 1996187 --->
	  a role_name "ROOT_PANE" init_value "=  new AccessibleRole(\"rootpane\")" class_relation const_relation public
	    comment "
A specialized pane that has a glass pane and a layered pane as its
children.
@see #GLASS_PANE
@see #LAYERED_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996187 // ROOT_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996315 // GLASS_PANE (<unidirectional association>)
	relation 1996315 --->
	  a role_name "GLASS_PANE" init_value "=  new AccessibleRole(\"glasspane\")" class_relation const_relation public
	    comment "
A pane that is guaranteed to be painted on top
of all panes beneath it.
@see #ROOT_PANE
@see #CANVAS

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996315 // GLASS_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996443 // LAYERED_PANE (<unidirectional association>)
	relation 1996443 --->
	  a role_name "LAYERED_PANE" init_value "=  new AccessibleRole(\"layeredpane\")" class_relation const_relation public
	    comment " 
A specialized pane that allows its children to be drawn in layers,
providing a form of stacking order.  This is usually the pane that
holds the menu bar as well as the pane that contains most of the
visual components in a window.
@see #GLASS_PANE
@see #ROOT_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996443 // LAYERED_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996571 // LIST (<unidirectional association>)
	relation 1996571 --->
	  a role_name "LIST" init_value "=  new AccessibleRole(\"list\")" class_relation const_relation public
	    comment "
An object that presents a list of objects to the user and allows the
user to select one or more of them.  A list is usually contained
within a scroll pane.
@see #SCROLL_PANE
@see #LIST_ITEM

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996571 // LIST (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996699 // LIST_ITEM (<unidirectional association>)
	relation 1996699 --->
	  a role_name "LIST_ITEM" init_value "=  new AccessibleRole(\"listitem\")" class_relation const_relation public
	    comment "
An object that presents an element in a list.  A list is usually
contained within a scroll pane.
@see #SCROLL_PANE
@see #LIST

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996699 // LIST_ITEM (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996827 // MENU_BAR (<unidirectional association>)
	relation 1996827 --->
	  a role_name "MENU_BAR" init_value "=  new AccessibleRole(\"menubar\")" class_relation const_relation public
	    comment "
An object usually drawn at the top of the primary dialog box of
an application that contains a list of menus the user can choose
from.  For example, a menu bar might contain menus for \"File,\"
\"Edit,\" and \"Help.\"
@see #MENU
@see #POPUP_MENU
@see #LAYERED_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996827 // MENU_BAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1996955 // POPUP_MENU (<unidirectional association>)
	relation 1996955 --->
	  a role_name "POPUP_MENU" init_value "=  new AccessibleRole(\"popupmenu\")" class_relation const_relation public
	    comment " 
A temporary window that is usually used to offer the user a 
list of choices, and then hides when the user selects one of
those choices.
@see #MENU
@see #MENU_ITEM

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1996955 // POPUP_MENU (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997083 // MENU (<unidirectional association>)
	relation 1997083 --->
	  a role_name "MENU" init_value "=  new AccessibleRole(\"menu\")" class_relation const_relation public
	    comment " 
An object usually found inside a menu bar that contains a list
of actions the user can choose from.  A menu can have any object
as its children, but most often they are menu items, other menus,
or rudimentary objects such as radio buttons, check boxes, or
separators.  For example, an application may have an \"Edit\" menu 
that contains menu items for \"Cut\" and \"Paste.\"
@see #MENU_BAR
@see #MENU_ITEM
@see #SEPARATOR
@see #RADIO_BUTTON
@see #CHECK_BOX
@see #POPUP_MENU

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997083 // MENU (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997211 // MENU_ITEM (<unidirectional association>)
	relation 1997211 --->
	  a role_name "MENU_ITEM" init_value "=  new AccessibleRole(\"menuitem\")" class_relation const_relation public
	    comment "
An object usually contained in a menu that presents an action 
the user can choose.  For example, the \"Cut\" menu item in an
\"Edit\" menu would be an action the user can select to cut the
selected area of text in a document.
@see #MENU_BAR
@see #SEPARATOR
@see #POPUP_MENU

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997211 // MENU_ITEM (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997339 // SEPARATOR (<unidirectional association>)
	relation 1997339 --->
	  a role_name "SEPARATOR" init_value "=  new AccessibleRole(\"separator\")" class_relation const_relation public
	    comment "
An object usually contained in a menu to provide a visual
and logical separation of the contents in a menu.  For example,
the \"File\" menu of an application might contain menu items for
\"Open,\" \"Close,\" and \"Exit,\" and will place a separator between
\"Close\" and \"Exit\" menu items.
@see #MENU
@see #MENU_ITEM

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997339 // SEPARATOR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997467 // PAGE_TAB_LIST (<unidirectional association>)
	relation 1997467 --->
	  a role_name "PAGE_TAB_LIST" init_value "=  new AccessibleRole(\"pagetablist\")" class_relation const_relation public
	    comment "
An object that presents a series of panels (or page tabs), one at a 
time, through some mechanism provided by the object.  The most common 
mechanism is a list of tabs at the top of the panel.  The children of
a page tab list are all page tabs.
@see #PAGE_TAB

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997467 // PAGE_TAB_LIST (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997595 // PAGE_TAB (<unidirectional association>)
	relation 1997595 --->
	  a role_name "PAGE_TAB" init_value "=  new AccessibleRole(\"pagetab\")" class_relation const_relation public
	    comment "
An object that is a child of a page tab list.  Its sole child is
the panel that is to be presented to the user when the user 
selects the page tab from the list of tabs in the page tab list.
@see #PAGE_TAB_LIST

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997595 // PAGE_TAB (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997723 // PANEL (<unidirectional association>)
	relation 1997723 --->
	  a role_name "PANEL" init_value "=  new AccessibleRole(\"panel\")" class_relation const_relation public
	    comment "
A generic container that is often used to group objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997723 // PANEL (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997851 // PROGRESS_BAR (<unidirectional association>)
	relation 1997851 --->
	  a role_name "PROGRESS_BAR" init_value "=  new AccessibleRole(\"progressbar\")" class_relation const_relation public
	    comment "
An object used to indicate how much of a task has been completed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997851 // PROGRESS_BAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1997979 // PASSWORD_TEXT (<unidirectional association>)
	relation 1997979 --->
	  a role_name "PASSWORD_TEXT" init_value "=  new AccessibleRole(\"passwordtext\")" class_relation const_relation public
	    comment "
A text object used for passwords, or other places where the 
text contents is not shown visibly to the user

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1997979 // PASSWORD_TEXT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998107 // PUSH_BUTTON (<unidirectional association>)
	relation 1998107 --->
	  a role_name "PUSH_BUTTON" init_value "=  new AccessibleRole(\"pushbutton\")" class_relation const_relation public
	    comment "
An object the user can manipulate to tell the application to do
something.
@see #CHECK_BOX
@see #TOGGLE_BUTTON
@see #RADIO_BUTTON

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998107 // PUSH_BUTTON (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998235 // TOGGLE_BUTTON (<unidirectional association>)
	relation 1998235 --->
	  a role_name "TOGGLE_BUTTON" init_value "=  new AccessibleRole(\"togglebutton\")" class_relation const_relation public
	    comment "
A specialized push button that can be checked or unchecked, but
does not provide a separate indicator for the current state.
@see #PUSH_BUTTON
@see #CHECK_BOX
@see #RADIO_BUTTON

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998235 // TOGGLE_BUTTON (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998363 // CHECK_BOX (<unidirectional association>)
	relation 1998363 --->
	  a role_name "CHECK_BOX" init_value "=  new AccessibleRole(\"checkbox\")" class_relation const_relation public
	    comment "
A choice that can be checked or unchecked and provides a 
separate indicator for the current state.
@see #PUSH_BUTTON
@see #TOGGLE_BUTTON
@see #RADIO_BUTTON

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998363 // CHECK_BOX (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998491 // RADIO_BUTTON (<unidirectional association>)
	relation 1998491 --->
	  a role_name "RADIO_BUTTON" init_value "=  new AccessibleRole(\"radiobutton\")" class_relation const_relation public
	    comment "
A specialized check box that will cause other radio buttons in the
same group to become unchecked when this one is checked.  
@see #PUSH_BUTTON
@see #TOGGLE_BUTTON
@see #CHECK_BOX

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998491 // RADIO_BUTTON (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998619 // ROW_HEADER (<unidirectional association>)
	relation 1998619 --->
	  a role_name "ROW_HEADER" init_value "=  new AccessibleRole(\"rowheader\")" class_relation const_relation public
	    comment "
The header for a row of data.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998619 // ROW_HEADER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998747 // SCROLL_PANE (<unidirectional association>)
	relation 1998747 --->
	  a role_name "SCROLL_PANE" init_value "=  new AccessibleRole(\"scrollpane\")" class_relation const_relation public
	    comment "
An object that allows a user to incrementally view a large amount
of information.  Its children can include scroll bars and a viewport.
@see #SCROLL_BAR
@see #VIEWPORT

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998747 // SCROLL_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1998875 // SCROLL_BAR (<unidirectional association>)
	relation 1998875 --->
	  a role_name "SCROLL_BAR" init_value "=  new AccessibleRole(\"scrollbar\")" class_relation const_relation public
	    comment " 
An object usually used to allow a user to incrementally view a
large amount of data.  Usually used only by a scroll pane.
@see #SCROLL_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1998875 // SCROLL_BAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999003 // VIEWPORT (<unidirectional association>)
	relation 1999003 --->
	  a role_name "VIEWPORT" init_value "=  new AccessibleRole(\"viewport\")" class_relation const_relation public
	    comment "
An object usually used in a scroll pane.  It represents the portion 
of the entire data that the user can see.  As the user manipulates 
the scroll bars, the contents of the viewport can change.
@see #SCROLL_PANE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999003 // VIEWPORT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999131 // SLIDER (<unidirectional association>)
	relation 1999131 --->
	  a role_name "SLIDER" init_value "=  new AccessibleRole(\"slider\")" class_relation const_relation public
	    comment "
An object that allows the user to select from a bounded range.  For
example, a slider might be used to select a number between 0 and 100.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999131 // SLIDER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999259 // SPLIT_PANE (<unidirectional association>)
	relation 1999259 --->
	  a role_name "SPLIT_PANE" init_value "=  new AccessibleRole(\"splitpane\")" class_relation const_relation public
	    comment "
A specialized panel that presents two other panels at the same time.
Between the two panels is a divider the user can manipulate to make
one panel larger and the other panel smaller.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999259 // SPLIT_PANE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999387 // TABLE (<unidirectional association>)
	relation 1999387 --->
	  a role_name "TABLE" init_value "=  new AccessibleRole(\"table\")" class_relation const_relation public
	    comment "
An object used to present information in terms of rows and columns.
An example might include a spreadsheet application.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999387 // TABLE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999515 // TEXT (<unidirectional association>)
	relation 1999515 --->
	  a role_name "TEXT" init_value "=  new AccessibleRole(\"text\")" class_relation const_relation public
	    comment "
An object that presents text to the user.  The text is usually
editable by the user as opposed to a label.
@see #LABEL

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999515 // TEXT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999643 // TREE (<unidirectional association>)
	relation 1999643 --->
	  a role_name "TREE" init_value "=  new AccessibleRole(\"tree\")" class_relation const_relation public
	    comment "
An object used to present hierarchical information to the user.
The individual nodes in the tree can be collapsed and expanded
to provide selective disclosure of the tree's contents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999643 // TREE (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999771 // TOOL_BAR (<unidirectional association>)
	relation 1999771 --->
	  a role_name "TOOL_BAR" init_value "=  new AccessibleRole(\"toolbar\")" class_relation const_relation public
	    comment "
A bar or palette usually composed of push buttons or toggle buttons.
It is often used to provide the most frequently used functions for an
application.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999771 // TOOL_BAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 1999899 // TOOL_TIP (<unidirectional association>)
	relation 1999899 --->
	  a role_name "TOOL_TIP" init_value "=  new AccessibleRole(\"tooltip\")" class_relation const_relation public
	    comment " 
An object that provides information about another object.  The 
accessibleDescription property of the tool tip is often displayed 
to the user in a small \"help bubble\" when the user causes the 
mouse to hover over the object associated with the tool tip.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1999899 // TOOL_TIP (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000027 // AWT_COMPONENT (<unidirectional association>)
	relation 2000027 --->
	  a role_name "AWT_COMPONENT" init_value "=  new AccessibleRole(\"awtcomponent\")" class_relation const_relation public
	    comment "
An AWT component, but nothing else is known about it.
@see #SWING_COMPONENT
@see #UNKNOWN

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000027 // AWT_COMPONENT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000155 // SWING_COMPONENT (<unidirectional association>)
	relation 2000155 --->
	  a role_name "SWING_COMPONENT" init_value "=  new AccessibleRole(\"swingcomponent\")" class_relation const_relation public
	    comment "
A Swing component, but nothing else is known about it.
@see #AWT_COMPONENT
@see #UNKNOWN

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000155 // SWING_COMPONENT (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000283 // UNKNOWN (<unidirectional association>)
	relation 2000283 --->
	  a role_name "UNKNOWN" init_value "=  new AccessibleRole(\"unknown\")" class_relation const_relation public
	    comment "
The object contains some Accessible information, but its role is
not known.
@see #AWT_COMPONENT
@see #SWING_COMPONENT

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000283 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000411 // STATUS_BAR (<unidirectional association>)
	relation 2000411 --->
	  a role_name "STATUS_BAR" init_value "=  new AccessibleRole(\"statusbar\")" class_relation const_relation public
	    comment "
A STATUS_BAR is an simple component that can contain
multiple labels of status information to the user.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000411 // STATUS_BAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000539 // DATE_EDITOR (<unidirectional association>)
	relation 2000539 --->
	  a role_name "DATE_EDITOR" init_value "=  new AccessibleRole(\"dateeditor\")" class_relation const_relation public
	    comment "
A DATE_EDITOR is a component that allows users to edit
java.util.Date and java.util.Time objects

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000539 // DATE_EDITOR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000667 // SPIN_BOX (<unidirectional association>)
	relation 2000667 --->
	  a role_name "SPIN_BOX" init_value "=  new AccessibleRole(\"spinbox\")" class_relation const_relation public
	    comment "
A SPIN_BOX is a simple spinner component and its main use
is for simple numbers.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000667 // SPIN_BOX (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000795 // FONT_CHOOSER (<unidirectional association>)
	relation 2000795 --->
	  a role_name "FONT_CHOOSER" init_value "=  new AccessibleRole(\"fontchooser\")" class_relation const_relation public
	    comment "
A FONT_CHOOSER is a component that lets the user pick various
attributes for fonts.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000795 // FONT_CHOOSER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2000923 // GROUP_BOX (<unidirectional association>)
	relation 2000923 --->
	  a role_name "GROUP_BOX" init_value "=  new AccessibleRole(\"groupbox\")" class_relation const_relation public
	    comment "
A GROUP_BOX is a simple container that contains a border
around it and contains components inside it.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2000923 // GROUP_BOX (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001051 // HEADER (<unidirectional association>)
	relation 2001051 --->
	  a role_name "HEADER" init_value "= 
        new AccessibleRole(\"header\")" class_relation const_relation public
	    comment "
A text header

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001051 // HEADER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001179 // FOOTER (<unidirectional association>)
	relation 2001179 --->
	  a role_name "FOOTER" init_value "= 
        new AccessibleRole(\"footer\")" class_relation const_relation public
	    comment "
A text footer

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001179 // FOOTER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001307 // PARAGRAPH (<unidirectional association>)
	relation 2001307 --->
	  a role_name "PARAGRAPH" init_value "= 
        new AccessibleRole(\"paragraph\")" class_relation const_relation public
	    comment "
A text paragraph

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001307 // PARAGRAPH (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001435 // RULER (<unidirectional association>)
	relation 2001435 --->
	  a role_name "RULER" init_value "= 
        new AccessibleRole(\"ruler\")" class_relation const_relation public
	    comment "
A ruler is an object used to measure distance

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001435 // RULER (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001563 // EDITBAR (<unidirectional association>)
	relation 2001563 --->
	  a role_name "EDITBAR" init_value "= 
        new AccessibleRole(\"editbar\")" class_relation const_relation public
	    comment "
A role indicating the object acts as a formula for
calculating a value.  An example is a formula in
a spreadsheet cell.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001563 // EDITBAR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      classrelation 2001691 // PROGRESS_MONITOR (<unidirectional association>)
	relation 2001691 --->
	  a role_name "PROGRESS_MONITOR" init_value "= 
        new AccessibleRole(\"progressMonitor\")" class_relation const_relation public
	    comment "
A role indicating the object monitors the progress 
of some operation.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001691 // PROGRESS_MONITOR (<unidirectional association>)
	  b parent class_ref 376347 // AccessibleRole
      end

      operation 8162843 "AccessibleRole"
	protected explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The following are all under consideration for potential future use.
    public static final AccessibleRole APPLICATION
            = new AccessibleRole(\"application\");
    public static final AccessibleRole BORDER
            = new AccessibleRole(\"border\");
    public static final AccessibleRole CHECK_BOX_MENU_ITEM
            = new AccessibleRole(\"checkboxmenuitem\");
    public static final AccessibleRole CHOICE
            = new AccessibleRole(\"choice\");
    public static final AccessibleRole COLUMN
            = new AccessibleRole(\"column\");
    public static final AccessibleRole CURSOR
            = new AccessibleRole(\"cursor\");
    public static final AccessibleRole DOCUMENT
            = new AccessibleRole(\"document\");
    public static final AccessibleRole IMAGE
            = new AccessibleRole(\"Image\");
    public static final AccessibleRole INDICATOR
            = new AccessibleRole(\"indicator\");
    public static final AccessibleRole RADIO_BUTTON_MENU_ITEM
            = new AccessibleRole(\"radiobuttonmenuitem\");
    public static final AccessibleRole ROW
            = new AccessibleRole(\"row\");
    public static final AccessibleRole TABLE_CELL
	    = new AccessibleRole(\"tablecell\");
    public static final AccessibleRole TREE_NODE
            = new AccessibleRole(\"treenode\");

Creates a new AccessibleRole using the given locale independent key.
This should not be a public method.  Instead, it is used to create
the constants in this file to make it a strongly typed enumeration.
Subclasses of this class should enforce similar policy.
<p>
The key String should be a locale independent key for the role.
It is not intended to be used as the actual String to display 
to the user.  To get the localized string, use toDisplayString.

@param key the locale independent name of the role.
@see AccessibleBundle#toDisplayString"
      end
    end

    class 376475 "AccessibleStateSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class AccessibleStateSet determines a component's state set.  The state set
of a component is a set of AccessibleState objects and descriptions. E.G., The
current overall state of the object, such as whether it is enabled, 
has focus, etc.

@see AccessibleState

@version     1.10 10/12/99 15:05:34
@author      Willie Walker"
      classrelation 2005659 // states (<unidirectional association>)
	relation 2005659 --->
	  a role_name "states" init_value "=  null" protected
	    comment "
Each entry in the Vector represents an AccessibleState.
@see #add
@see #addAll
@see #remove
@see #contains
@see #toArray
@see #clear

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibleState> ${name}${value};
"
	    classrelation_ref 2005659 // states (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 8163099 "AccessibleStateSet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new empty state set."
      end

      operation 8163227 "AccessibleStateSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "states" type class_ref 1023771 // AccessibleState
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new state with the initial set of states contained in 
the array of states passed in.  Duplicate entries are ignored.

@param states an array of AccessibleState describing the state set."
      end

      operation 8163355 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "state" type class_ref 1023771 // AccessibleState
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new state to the current state set if it is not already
present.  If the state is already in the state set, the state
set is unchanged and the return value is false.  Otherwise, 
the state is added to the state set and the return value is
true.
@param state the state to add to the state set
@return true if state is added to the state set; false if the state set 
is unchanged"
      end

      operation 8163483 "addAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "states" type class_ref 1023771 // AccessibleState
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the states to the existing state set.  Duplicate entries 
are ignored.
@param states  AccessibleState array describing the state set."
      end

      operation 8163611 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "state" type class_ref 1023771 // AccessibleState
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a state from the current state set.  If the state is not
in the set, the state set will be unchanged and the return value
will be false.  If the state is in the state set, it will be removed
from the set and the return value will be true.
	
@param state the state to remove from the state set
@return true if the state is in the state set; false if the state set 
will be unchanged"
      end

      operation 8163739 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the states from the current state set."
      end

      operation 8163867 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "state" type class_ref 1023771 // AccessibleState
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the current state is in the state set.
@param state the state
@return true if the state is in the state set; otherwise false"
      end

      operation 8163995 "toArray"
	public return_type class_ref 1023771 // AccessibleState
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current state set as an array of AccessibleState
@return AccessibleState array containing the current state."
      end

      operation 8164123 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a localized String representing all the states in the set 
using the default locale.

@return comma separated localized String
@see AccessibleBundle#toDisplayString"
      end
    end

    class 376731 "AccessibleAction"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleAction interface should be supported by any object 
that can perform one or more actions.  This interface
provides the standard mechanism for an assistive technology to determine 
what those actions are as well as tell the object to perform them.
Any object that can be manipulated should support this
interface.  Applications can determine if an object supports the 
AccessibleAction interface by first obtaining its AccessibleContext (see
{@link Accessible}) and then calling the {@link AccessibleContext#getAccessibleAction}
method.  If the return value is not null, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleAction

@version     1.17 04/15/04
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker
@author      Lynn Monsanto"
      attribute 719387 "TOGGLE_EXPAND"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        new String (\"toggle expand\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An action which causes a tree node to
collapse if expanded and expand if collapsed.
@since 1.5
"
      end

      attribute 719515 "INCREMENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        new String (\"increment\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An action which increments a value.
@since 1.5
"
      end

      attribute 719643 "DECREMENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        new String (\"decrement\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An action which decrements a value.
@since 1.5
"
      end

      operation 2390427 "getAccessibleActionCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible actions available in this object
If there are more than one, the first one is considered the \"default\"
action of the object.

@return the zero-based number of Actions in this object"
      end

      operation 2390555 "getAccessibleActionDescription"
	public explicit_return_type "String"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the specified action of the object.

@param i zero-based index of the actions
@return a String description of the action
@see #getAccessibleActionCount"
      end

      operation 2390683 "doAccessibleAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified Action on the object

@param i zero-based index of actions
@return true if the action was performed; otherwise false.
@see #getAccessibleActionCount"
      end
    end

    class 376859 "AccessibleComponent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleComponent interface should be supported by any object 
that is rendered on the screen.  This interface provides the standard 
mechanism for an assistive technology to determine and set the 
graphical representation of an object.  Applications can determine
if an object supports the AccessibleComponent interface by first
obtaining its AccessibleContext 
and then calling the
{@link AccessibleContext#getAccessibleComponent} method.
If the return value is not null, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleComponent

@version     1.7 10/05/99 14:00:28
@author	Peter Korn
@author	Hans Muller
@author      Willie Walker"
      operation 2159771 "getBackground"
	public explicit_return_type "Color"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the background color of this object.

@return the background color, if supported, of the object; 
otherwise, null
@see #setBackground"
      end

      operation 2159899 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" explicit_type "Color"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color of this object.

@param c the new Color for the background
@see #setBackground"
      end

      operation 2160027 "getForeground"
	public explicit_return_type "Color"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the foreground color of this object.

@return the foreground color, if supported, of the object; 
otherwise, null
@see #setForeground"
      end

      operation 2160155 "setForeground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" explicit_type "Color"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the foreground color of this object.

@param c the new Color for the foreground
@see #getForeground"
      end

      operation 2160283 "getCursor"
	public explicit_return_type "Cursor"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Cursor of this object.

@return the Cursor, if supported, of the object; otherwise, null
@see #setCursor"
      end

      operation 2160411 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Cursor of this object.

@param cursor  the new Cursor for the object
@see #getCursor"
      end

      operation 2160539 "getFont"
	public explicit_return_type "Font"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Font of this object.

@return the Font,if supported, for the object; otherwise, null
@see #setFont"
      end

      operation 2160667 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" explicit_type "Font"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Font of this object.

@param f the new Font for the object
@see #getFont"
      end

      operation 2160795 "getFontMetrics"
	public explicit_return_type "FontMetrics"
	nparams 1
	  param inout name "f" explicit_type "Font"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the FontMetrics of this object.

@param f the Font
@return the FontMetrics, if supported, the object; otherwise, null
@see #getFont"
      end

      operation 2160923 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the object is enabled.  Objects that are enabled
will also have the AccessibleState.ENABLED state set in their
AccessibleStateSets.

@return true if object is enabled; otherwise, false
@see #setEnabled
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#ENABLED
@see AccessibleStateSet"
      end

      operation 2161051 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the enabled state of the object.

@param b if true, enables this object; otherwise, disables it 
@see #isEnabled"
      end

      operation 2161179 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the object is visible.  Note: this means that the
object intends to be visible; however, it may not be
showing on the screen because one of the objects that this object
is contained by is currently not visible.  To determine if an object is
showing on the screen, use isShowing().
<p>Objects that are visible will also have the 
AccessibleState.VISIBLE state set in their AccessibleStateSets.

@return true if object is visible; otherwise, false
@see #setVisible
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#VISIBLE
@see AccessibleStateSet"
      end

      operation 2161307 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the visible state of the object.

@param b if true, shows this object; otherwise, hides it 
@see #isVisible"
      end

      operation 2161435 "isShowing"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the object is showing.  This is determined by checking
the visibility of the object and its ancestors.
Note: this
will return true even if the object is obscured by another (for example,
it is underneath a menu that was pulled down).

@return true if object is showing; otherwise, false"
      end

      operation 2161563 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" explicit_type "Point"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the specified point is within this object's bounds,
where the point's x and y coordinates are defined to be relative to the
coordinate system of the object. 

@param p the Point relative to the coordinate system of the object
@return true if object contains Point; otherwise false
@see #getBounds"
      end

      operation 2161691 "getLocationOnScreen"
	public explicit_return_type "Point"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of the object on the screen.

@return the location of the object on screen; null if this object
is not on the screen
@see #getBounds
@see #getLocation"
      end

      operation 2161819 "getLocation"
	public explicit_return_type "Point"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the location of the object relative to the parent in the form 
of a point specifying the object's top-left corner in the screen's 
coordinate space.

@return An instance of Point representing the top-left corner of the 
object's bounds in the coordinate space of the screen; null if
this object or its parent are not on the screen
@see #getBounds
@see #getLocationOnScreen"
      end

      operation 2161947 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" explicit_type "Point"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the object relative to the parent.
@param p the new position for the top-left corner
@see #getLocation"
      end

      operation 2162075 "getBounds"
	public explicit_return_type "Rectangle"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bounds of this object in the form of a Rectangle object. 
The bounds specify this object's width, height, and location
relative to its parent. 

@return A rectangle indicating this component's bounds; null if 
this object is not on the screen.
@see #contains"
      end

      operation 2162203 "setBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" explicit_type "Rectangle"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounds of this object in the form of a Rectangle object. 
The bounds specify this object's width, height, and location
relative to its parent.
	
@param r rectangle indicating this component's bounds
@see #getBounds"
      end

      operation 2162331 "getSize"
	public explicit_return_type "Dimension"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of this object in the form of a Dimension object. 
The height field of the Dimension object contains this object's
height, and the width field of the Dimension object contains this 
object's width. 

@return A Dimension object that indicates the size of this component; 
null if this object is not on the screen
@see #setSize"
      end

      operation 2162459 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" explicit_type "Dimension"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes this object so that it has width and height. 
	
@param d The dimension specifying the new size of the object. 
@see #getSize"
      end

      operation 2162587 "getAccessibleAt"
	public return_type class_ref 376091 // Accessible
	nparams 1
	  param inout name "p" explicit_type "Point"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Accessible child, if one exists, contained at the local 
coordinate Point.

@param p The point relative to the coordinate system of this object.
@return the Accessible, if it exists, at the specified location; 
otherwise null"
      end

      operation 2162715 "isFocusTraversable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this object can accept focus or not.   Objects that 
can accept focus will also have the AccessibleState.FOCUSABLE state 
set in their AccessibleStateSets.

@return true if object can accept focus; otherwise false
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#FOCUSABLE
@see AccessibleState#FOCUSED
@see AccessibleStateSet"
      end

      operation 2162843 "requestFocus"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests focus for this object.  If this object cannot accept focus,
nothing will happen.  Otherwise, the object will attempt to take
focus.
@see #isFocusTraversable"
      end

      operation 2162971 "addFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" explicit_type "FocusListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified focus listener to receive focus events from this 
component. 

@param l the focus listener
@see #removeFocusListener"
      end

      operation 2163099 "removeFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" explicit_type "FocusListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified focus listener so it no longer receives focus 
events from this component.

@param l the focus listener
@see #addFocusListener"
      end
    end

    class 376987 "AccessibleSelection"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This AccessibleSelection interface
provides the standard mechanism for an assistive technology to determine 
what the current selected children are, as well as modify the selection set.
Any object that has children that can be selected should support 
the AccessibleSelection interface.  Applications can determine if an object supports the 
AccessibleSelection interface by first obtaining its AccessibleContext (see
{@link Accessible}) and then calling the
{@link AccessibleContext#getAccessibleSelection} method.
If the return value is not null, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleSelection

@version     1.7 08/26/98 21:14:11
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker"
      operation 2390811 "getAccessibleSelectionCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of Accessible children currently selected.
If no children are selected, the return value will be 0.

@return the number of items currently selected."
      end

      operation 2390939 "getAccessibleSelection"
	public return_type class_ref 376091 // Accessible
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Accessible representing the specified selected child
of the object.  If there isn't a selection, or there are 
fewer children selected than the integer passed in, the return
value will be null.
<p>Note that the index represents the i-th selected child, which
is different from the i-th child.

@param i the zero-based index of selected children
@return the i-th selected child
@see #getAccessibleSelectionCount"
      end

      operation 2391067 "isAccessibleChildSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the current child of this object is selected.

@return true if the current child of this object is selected; else false.
@param i the zero-based index of the child in this Accessible object.
@see AccessibleContext#getAccessibleChild"
      end

      operation 2391195 "addAccessibleSelection"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified Accessible child of the object to the object's
selection.  If the object supports multiple selections,
the specified child is added to any existing selection, otherwise
it replaces any existing selection in the object.  If the
specified child is already selected, this method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild"
      end

      operation 2391323 "removeAccessibleSelection"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified child of the object from the object's
selection.  If the specified item isn't currently selected, this
method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild"
      end

      operation 2391451 "clearAccessibleSelection"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the selection in the object, so that no children in the
object are selected."
      end

      operation 2391579 "selectAllAccessibleSelection"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes every child of the object to be selected
if the object supports multiple selections."
      end
    end

    class 377115 "AccessibleText"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleText interface should be implemented by all 
classes that present textual information on the display.  This interface
provides the standard mechanism for an assistive technology to access 
that text via its content, attributes, and spatial location.  
Applications can determine if an object supports the AccessibleText 
interface by first obtaining its AccessibleContext (see {@link Accessible})
and then calling the {@link AccessibleContext#getAccessibleText} method of 
AccessibleContext.  If the return value is not null, the object supports this
interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleText

@version	1.13 01/20/98 07:53:43
@author	Peter Korn"
      attribute 672283 "CHARACTER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the part of the text that should be
retrieved is a character.

@see #getAtIndex
@see #getAfterIndex
@see #getBeforeIndex
"
      end

      attribute 672411 "WORD"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the part of the text that should be 
retrieved is a word.

@see #getAtIndex
@see #getAfterIndex
@see #getBeforeIndex
"
      end

      attribute 672539 "SENTENCE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the part of the text that should be 
retrieved is a sentence.

@see #getAtIndex
@see #getAfterIndex
@see #getBeforeIndex
"
      end

      operation 2225563 "getIndexAtPoint"
	public explicit_return_type "int"
	nparams 1
	  param inout name "p" explicit_type "Point"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p; if 
Point is invalid return -1."
      end

      operation 2225691 "getCharacterBounds"
	public explicit_return_type "Rectangle"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the bounding box of the character at the given 
index into the string.  The bounds are returned in local
coordinates.  If the index is invalid an empty rectangle is returned.

@param i the index into the String
@return the screen coordinates of the character's bounding box,
if index is invalid return an empty rectangle."
      end

      operation 2225819 "getCharCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of characters (valid indicies) 

@return the number of characters"
      end

      operation 2225947 "getCaretPosition"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the zero-based offset of the caret.

Note: That to the right of the caret will have the same index
value as the offset (the caret is between two characters).
@return the zero-based offset of the caret."
      end

      operation 2226075 "getAtIndex"
	public explicit_return_type "String"
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String at a given index. 

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence"
      end

      operation 2226203 "getAfterIndex"
	public explicit_return_type "String"
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String after a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence"
      end

      operation 2226331 "getBeforeIndex"
	public explicit_return_type "String"
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String before a given index.

@param part the CHARACTER, WORD, or SENTENCE to retrieve
@param index an index within the text
@return the letter, word, or sentence"
      end

      operation 2226459 "getCharacterAttribute"
	public explicit_return_type "AttributeSet"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AttributeSet for a given character at a given index

@param i the zero-based index into the text 
@return the AttributeSet of the character"
      end

      operation 2226587 "getSelectionStart"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into the text of the start of the selection"
      end

      operation 2226715 "getSelectionEnd"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.

@return the index into teh text of the end of the selection"
      end

      operation 2226843 "getSelectedText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the portion of the text that is selected. 

@return the String portion of the text that is selected"
      end
    end

    class 377243 "AccessibleEditableText"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleEditableText interface should be implemented by all 
classes that present editable textual information on the display.  
Along with the AccessibleText interface, this interface provides 
the standard mechanism for an assistive technology to access 
that text via its content, attributes, and spatial location.  
Applications can determine if an object supports the AccessibleEditableText 
interface by first obtaining its AccessibleContext (see {@link Accessible})
and then calling the {@link AccessibleContext#getAccessibleEditableText} 
method of AccessibleContext.  If the return value is not null, the object 
supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleText
@see AccessibleContext#getAccessibleEditableText

@version	1.4 @(#)AccessibleEditableText.java	1.4
@author	Lynn Monsanto"
      classrelation 723355 // <generalisation>
	relation 723355 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 723355 // <generalisation>
	  b parent class_ref 377115 // AccessibleText
      end

      operation 2708123 "setTextContents"
	public explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text contents to the specified string.

@param s the string to set the text contents"
      end

      operation 2708251 "insertTextAtIndex"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified string at the given index/

@param index the index in the text where the string will 
be inserted
@param s the string to insert in the text"
      end

      operation 2708379 "getTextRange"
	public explicit_return_type "String"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text string between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@return the text string between the indices"
      end

      operation 2708507 "delete"
	public explicit_return_type "void"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the text between two indices

@param startIndex the starting index in the text
@param endIndex the ending index in the text"
      end

      operation 2708635 "cut"
	public explicit_return_type "void"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cuts the text between two indices into the system clipboard.

@param startIndex the starting index in the text
@param endIndex the ending index in the text"
      end

      operation 2708763 "paste"
	public explicit_return_type "void"
	nparams 1
	  param in name "startIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pastes the text from the system clipboard into the text
starting at the specified index.

@param startIndex the starting index in the text"
      end

      operation 2708891 "replaceText"
	public explicit_return_type "void"
	nparams 3
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the text between two indices with the specified
string.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@param s the string to replace the text between two indices"
      end

      operation 2709019 "selectText"
	public explicit_return_type "void"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the text between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text"
      end

      operation 2709147 "setAttributes"
	public explicit_return_type "void"
	nparams 3
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param inout name "as" explicit_type "AttributeSet"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets attributes for the text between two indices.

@param startIndex the starting index in the text
@param endIndex the ending index in the text
@param as the attribute set
@see AttributeSet"
      end
    end

    class 377371 "AccessibleValue"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleValue interface should be supported by any object 
that supports a numerical value (e.g., a scroll bar).  This interface 
provides the standard mechanism for an assistive technology to determine 
and set the numerical value as well as get the minimum and maximum values.
Applications can determine
if an object supports the AccessibleValue interface by first
obtaining its AccessibleContext (see
{@link Accessible}) and then calling the
{@link AccessibleContext#getAccessibleValue} method.
If the return value is not null, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleValue

@version     1.9 10/12/99 15:41:54
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker"
      operation 2443419 "getCurrentAccessibleValue"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of this object as a Number.  If the value has not been
set, the return value will be null.

@return value of the object
@see #setCurrentAccessibleValue"
      end

      operation 2443547 "setCurrentAccessibleValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "n" type class_ref 413979 // Number
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of this object as a Number.

@return True if the value was set; else False
@see #getCurrentAccessibleValue"
      end

      operation 2443675 "getMinimumAccessibleValue"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "    /**
     * Get the description of the value of this object.
     *
     * @return description of the value of the object
     */
    public String getAccessibleValueDescription();

Get the minimum value of this object as a Number.

@return Minimum value of the object; null if this object does not 
have a minimum value
@see #getMaximumAccessibleValue"
      end

      operation 2443803 "getMaximumAccessibleValue"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum value of this object as a Number.

@return Maximum value of the object; null if this object does not 
have a maximum value
@see #getMinimumAccessibleValue"
      end
    end

    class 377499 "AccessibleIcon"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleIcon interface should be supported by any object 
that has an associated icon (e.g., buttons). This interface 
provides the standard mechanism for an assistive technology
to get descriptive information about icons.
Applications can determine
if an object supports the AccessibleIcon interface by first
obtaining its AccessibleContext (see
{@link Accessible}) and then calling the
{@link AccessibleContext#getAccessibleIcon} method.
If the return value is not null, the object supports this interface.

@see Accessible
@see AccessibleContext

@version     1.3 10/12/99
@author	Lynn Monsanto"
      operation 8159899 "getAccessibleIconDescription"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the description of the icon.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the icon.

@return the description of the icon"
      end

      operation 8160027 "setAccessibleIconDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "description" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description of the icon.  This is meant to be a brief
textual description of the object.  For example, it might be
presented to a blind user to give an indication of the purpose
of the icon.

@param description the description of the icon"
      end

      operation 8160155 "getAccessibleIconWidth"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the width of the icon

@return the width of the icon."
      end

      operation 8160283 "getAccessibleIconHeight"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the height of the icon

@return the height of the icon."
      end
    end

    class 377627 "AccessibleTable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class AccessibleTable describes a user-interface component that
presents data in a two-dimensional table format.

@version     1.2 10/12/99 
@author      Lynn Monsanto"
      operation 8154651 "getAccessibleCaption"
	public return_type class_ref 376091 // Accessible
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the caption for the table.

@return the caption for the table"
      end

      operation 8154779 "setAccessibleCaption"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 376091 // Accessible
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the caption for the table.

@param a the caption for the table"
      end

      operation 8154907 "getAccessibleSummary"
	public return_type class_ref 376091 // Accessible
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the summary description of the table.

@return the summary description of the table"
      end

      operation 8155035 "setAccessibleSummary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 376091 // Accessible
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the summary description of the table

@param a the summary description of the table"
      end

      operation 8155163 "getAccessibleRowCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the table.

@return the number of rows in the table"
      end

      operation 8155291 "getAccessibleColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in the table.

@return the number of columns in the table"
      end

      operation 8155419 "getAccessibleAt"
	public return_type class_ref 376091 // Accessible
	nparams 2
	  param in name "r" explicit_type "int"
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Accessible at a specified row and column
in the table.

@param r zero-based row of the table
@param c zero-based column of the table
@return the Accessible at the specified row and column"
      end

      operation 8155547 "getAccessibleRowExtentAt"
	public explicit_return_type "int"
	nparams 2
	  param in name "r" explicit_type "int"
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows occupied by the Accessible at
a specified row and column in the table.

@return the number of rows occupied by the Accessible at a
given specified (row, column)"
      end

      operation 8155675 "getAccessibleColumnExtentAt"
	public explicit_return_type "int"
	nparams 2
	  param in name "r" explicit_type "int"
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns occupied by the Accessible at
a specified row and column in the table.

@return the number of columns occupied by the Accessible at a
given specified row and column"
      end

      operation 8155803 "getAccessibleRowHeader"
	public return_type class_ref 377627 // AccessibleTable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the row headers as an AccessibleTable.

@return an AccessibleTable representing the row
headers"
      end

      operation 8155931 "setAccessibleRowHeader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "table" type class_ref 377627 // AccessibleTable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the row headers.

@param table an AccessibleTable representing the
row headers"
      end

      operation 8156059 "getAccessibleColumnHeader"
	public return_type class_ref 377627 // AccessibleTable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the column headers as an AccessibleTable.

@return an AccessibleTable representing the column
headers"
      end

      operation 8156187 "setAccessibleColumnHeader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "table" type class_ref 377627 // AccessibleTable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the column headers.

@param table an AccessibleTable representing the
column headers"
      end

      operation 8156315 "getAccessibleRowDescription"
	public return_type class_ref 376091 // Accessible
	nparams 1
	  param in name "r" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the description of the specified row in the table.

@param r zero-based row of the table
@return the description of the row"
      end

      operation 8156443 "setAccessibleRowDescription"
	public explicit_return_type "void"
	nparams 2
	  param in name "r" explicit_type "int"
	  param inout name "a" type class_ref 376091 // Accessible
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description text of the specified row of the table.

@param r zero-based row of the table
@param a the description of the row"
      end

      operation 8156571 "getAccessibleColumnDescription"
	public return_type class_ref 376091 // Accessible
	nparams 1
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the description text of the specified column in the table.

@param c zero-based column of the table
@return the text description of the column"
      end

      operation 8156699 "setAccessibleColumnDescription"
	public explicit_return_type "void"
	nparams 2
	  param in name "c" explicit_type "int"
	  param inout name "a" type class_ref 376091 // Accessible
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the description text of the specified column in the table.

@param c zero-based column of the table
@param a the text description of the column"
      end

      operation 8156827 "isAccessibleSelected"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "r" explicit_type "int"
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean value indicating whether the accessible at
a specified row and column is selected.

@param r zero-based row of the table
@param c zero-based column of the table
@return the boolean value true if the accessible at the
row and column is selected. Otherwise, the boolean value 
false"
      end

      operation 8156955 "isAccessibleRowSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "r" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean value indicating whether the specified row
is selected.

@param r zero-based row of the table
@return the boolean value true if the specified row is selected.
Otherwise, false."
      end

      operation 8157083 "isAccessibleColumnSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a boolean value indicating whether the specified column
is selected.

@param c zero-based column of the table
@return the boolean value true if the specified column is selected.
Otherwise, false."
      end

      operation 8157211 "getSelectedAccessibleRows"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected rows in a table.

@return an array of selected rows where each element is a
zero-based row of the table"
      end

      operation 8157339 "getSelectedAccessibleColumns"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected columns in a table.

@return an array of selected columns where each element is a
zero-based column of the table"
      end
    end

    class 381723 "AccessibleExtendedComponent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleExtendedComponent interface should be supported by any object 
that is rendered on the screen.  This interface provides the standard 
mechanism for an assistive technology to determine the extended
graphical representation of an object.  Applications can determine
if an object supports the AccessibleExtendedComponent interface by first
obtaining its AccessibleContext 
and then calling the
{@link AccessibleContext#getAccessibleComponent} method.
If the return value is not null and the type of the return value is
AccessibleEditableComponent, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleComponent

@version     1.4 12/19/03
@author	Lynn Monsanto"
      classrelation 566299 // <generalisation>
	relation 566299 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 566299 // <generalisation>
	  b parent class_ref 376859 // AccessibleComponent
      end

      operation 2207003 "getToolTipText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tool tip text

@return the tool tip text, if supported, of the object; 
otherwise, null"
      end

      operation 2207131 "getTitledBorderText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the titled border text

@return the titled border text, if supported, of the object; 
otherwise, null"
      end

      operation 2207259 "getAccessibleKeyBinding"
	public return_type class_ref 381851 // AccessibleKeyBinding
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns key bindings associated with this object

@return the key bindings, if supported, of the object; 
otherwise, null
@see AccessibleKeyBinding"
      end
    end

    class 381851 "AccessibleKeyBinding"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleKeyBinding interface should be supported by any object
that has a keyboard bindings such as a keyboard mnemonic and/or keyboard
shortcut which can be used to select the object.  This interface provides
the standard mechanism for an assistive technology to determine the
key bindings which exist for this object.
Any object that has such key bindings should support this
interface.  Applications can determine if an object supports the
AccessibleKeyBinding interface by first obtaining its AccessibleContext
(see @link Accessible} and then calling the
{@link AccessibleContext#getAccessibleKeyBinding} method.  If the return
value is not null, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleKeyBinding

@version     1.4 12/19/03
@author	Lynn Monsanto"
      operation 2229787 "getAccessibleKeyBindingCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key bindings for this object

@return the zero-based number of key bindings for this object"
      end

      operation 2229915 "getAccessibleKeyBinding"
	public return_type class_ref 168347 // Object
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key binding for this object.  The value returned is an
java.lang.Object which must be cast to appropriate type depending
on the underlying implementation of the key.  For example, if the
Object returned is a javax.swing.KeyStroke, the user of this
method should do the following:
<nf><code>
Component c = <get the component that has the key bindings>
AccessibleContext ac = c.getAccessibleContext();
AccessibleKeyBinding akb = ac.getAccessibleKeyBinding();
for (int i = 0; i < akb.getAccessibleKeyBindingCount(); i++) {
    Object o = akb.getAccessibleKeyBinding(i);
    if (o instanceof javax.swing.KeyStroke) {
        javax.swing.KeyStroke keyStroke = (javax.swing.KeyStroke)o;
        <do something with the key binding>
    }
}
</code></nf>

@param i zero-based index of the key bindings
@return a javax.lang.Object which specifies the key binding
@see #getAccessibleKeyBindingCount"
      end
    end

    class 1022619 "AccessibleAttributeSequence"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleAttributeSequence provides information about
a contiguous sequence of text attributes

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleText
@see AccessibleTextSequence

@version      1.2 12/19/03
@author       Lynn Monsanto


Information about a contiguous sequence of text attributes"
      attribute 2997147 "startIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the start index of the text attribute sequence"
      end

      attribute 2997275 "endIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the end index of the text attribute sequence"
      end

    end

    class 1022747 "AccessibleBundle"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Base class used to maintain a strongly typed enumeration.  This is
the superclass of {@link AccessibleState} and {@link AccessibleRole}. 
<p>The toDisplayString method allows you to obtain the localized string 
for a locale independent key from a predefined ResourceBundle for the 
keys defined in this class.  This localized string is intended to be
readable by humans.

@see AccessibleRole
@see AccessibleState

@version     1.12 10/05/99
@author      Willie Walker
@author	Peter Korn
@author	Lynn Monsanto"
      classrelation 1992859 // table (<unidirectional association>)
	relation 1992859 --->
	  a role_name "table" init_value "=  new Hashtable()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1992859 // table (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 2997403 "defaultResourceBundleName"
	const_attribute private explicit_type "String"
	init_value "=  \"com.sun.accessibility.internal.resources.accessibility\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8153883 "AccessibleBundle"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2997531 "key"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The locale independent name of the state.  This is a programmatic 
name that is not intended to be read by humans.
@see #toDisplayString
"
      end

      operation 8154011 "toDisplayString"
	protected explicit_return_type "String"
	nparams 2
	  param in name "resourceBundleName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the key as a localized string. 
If a localized string cannot be found for the key, the 
locale independent key stored in the role will be returned. 
This method is intended to be used only by subclasses so that they 
can specify their own resource bundles which contain localized
strings for their keys.
@param resourceBundleName the name of the resource bundle to use for 
lookup
@param locale the locale for which to obtain a localized string
@return a localized String for the key."
      end

      operation 8154139 "toDisplayString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the key as a localized string. 
If a localized string cannot be found for the key, the 
locale independent key stored in the role will be returned. 

@param locale the locale for which to obtain a localized string
@return a localized String for the key."
      end

      operation 8154267 "toDisplayString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets localized string describing the key using the default locale.
@return a localized String describing the key for the default locale"
      end

      operation 8154395 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets localized string describing the key using the default locale.
@return a localized String describing the key using the default locale
@see #toDisplayString"
      end

      operation 8154523 "loadResourceBundle"
	private explicit_return_type "void"
	nparams 2
	  param in name "resourceBundleName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the Accessibility resource bundle if necessary."
      end
    end

    class 1022875 "AccessibleExtendedTable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class AccessibleExtendedTable provides extended information about
a user-interface component that presents data in a two-dimensional
table format.
Applications can determine if an object supports the
AccessibleExtendedTable interface by first obtaining its
AccessibleContext and then calling the
{@link AccessibleContext#getAccessibleTable} method.
If the return value is not null and the type of the return value is
AccessibleExtendedTable, the object supports this interface.

@version     1.5 12/19/03
@author      Lynn Monsanto"
      classrelation 1992987 // <generalisation>
	relation 1992987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1992987 // <generalisation>
	  b parent class_ref 377627 // AccessibleTable
      end

      operation 8157467 "getAccessibleRow"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the row number of an index in the table.

@param index the zero-based index in the table.  The index is
the table cell offset from row == 0 and column == 0.
@return the zero-based row of the table if one exists;
otherwise -1."
      end

      operation 8157595 "getAccessibleColumn"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the column number of an index in the table.

@param index the zero-based index in the table.  The index is
the table cell offset from row == 0 and column == 0.
@return the zero-based column of the table if one exists;
otherwise -1."
      end

      operation 8157723 "getAccessibleIndex"
	public explicit_return_type "int"
	nparams 2
	  param in name "r" explicit_type "int"
	  param in name "c" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index at a row and column in the table.

@param r zero-based row of the table
@param c zero-based column of the table
@return the zero-based index in the table if one exists;
otherwise -1.  The index is  the table cell offset from
row == 0 and column == 0."
      end
    end

    class 1023003 "AccessibleExtendedText"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleExtendedText interface contains additional methods
not provided by the AccessibleText interface
 
Applications can determine if an object supports the AccessibleExtendedText
interface by first obtaining its AccessibleContext (see {@link Accessible})
and then calling the {@link AccessibleContext#getAccessibleText} method of
AccessibleContext.  If the return value is an instance of
AccessibleExtendedText, the object supports this interface.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleText
@see AccessibleText.AccessibleTextChunk

@version      1.2 12/19/03
@author       Peter Korn
@author       Lynn Monsanto"
      attribute 2997659 "LINE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the part of the text that should be
retrieved is a line of text.

@see #getAtIndex
@see #getAfterIndex
@see #getBeforeIndex

 BugID: 4849720"
      end

      attribute 2997787 "ATTRIBUTE_RUN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant used to indicate that the part of the text that should be
retrieved is contiguous text with the same text attributes.

@see #getAtIndex
@see #getAfterIndex
@see #getBeforeIndex

 BugID: 4849720"
      end

      operation 8157851 "getTextRange"
	public explicit_return_type "String"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text between two indices

@param startIndex the start index in the text
@param endIndex the end index in the text
@return the text string if the indices are valid.
Otherwise, null is returned."
      end

      operation 8157979 "getTextSequenceAt"
	public return_type class_ref 1023131 // AccessibleTextSequence
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AccessibleTextSequence at a given index.

@param part the CHARACTER, WORD, SENTENCE, LINE or ATTRIBUTE_RUN to     
retrieve
@param index an index within the text
@return an AccessibleTextSequence specifying the text if part and index
are valid.  Otherwise, null is returned.

@see AccessibleText.CHARACTER
@see AccessibleText.WORK
@see AccessibleText.SENTENCE"
      end

      operation 8158107 "getTextSequenceAfter"
	public return_type class_ref 1023131 // AccessibleTextSequence
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AccessibleTextSequence after a given index.

@param part the CHARACTER, WORD, SENTENCE, LINE or ATTRIBUTE_RUN to
retrieve
@param index an index within the text
@return an AccessibleTextSequence specifying the text if part and index
are valid.  Otherwise, null is returned.

@see AccessibleText.CHARACTER
@see AccessibleText.WORK
@see AccessibleText.SENTENCE"
      end

      operation 8158235 "getTextSequenceBefore"
	public return_type class_ref 1023131 // AccessibleTextSequence
	nparams 2
	  param in name "part" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AccessibleTextSequence before a given index.

@param part the CHARACTER, WORD, SENTENCE, LINE or ATTRIBUTE_RUN to
retrieve
@param index an index within the text
@return an AccessibleTextSequence specifying the text if part and index
are valid.  Otherwise, null is returned.

@see AccessibleText.CHARACTER
@see AccessibleText.WORK
@see AccessibleText.SENTENCE"
      end

      operation 8158363 "getTextBounds"
	public explicit_return_type "Rectangle"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounding rectangle of the text between two indices.

@param startIndex the start index in the text
@param endIndex the end index in the text
@return the bounding rectangle of the text if the indices are valid.
Otherwise, null is returned."
      end
    end

    class 1023131 "AccessibleTextSequence"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleTextSequence provides information about
a contiguous sequence of text.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleText
@see AccessibleAttributeSequence

@version      1.2 12/19/03
@author       Lynn Monsanto


Information about a contiguous sequence of text."
      attribute 3001627 "startIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the start index of the text sequence"
      end

      attribute 3001755 "endIndex"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the end index of the text sequence"
      end

      attribute 3001883 "text"
	public explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the text"
      end
    end

    class 1023259 "AccessibleHyperlink"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Encapsulation of a link, or set of links (e.g. client side imagemap)
in a Hypertext document

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleText
@see AccessibleContext#getAccessibleText

@version 1.13, 12/19/03
@author	Peter Korn"
      classrelation 1993115 // <realization>
	relation 1993115 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1993115 // <realization>
	  b parent class_ref 376731 // AccessibleAction
      end

      operation 8158491 "isValid"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Since the document a link is associated with may have
changed, this method returns whether or not this Link is still valid
(with respect to the document it references).

@return a flag indicating whether this link is still valid with
        respect to the AccessibleHypertext it belongs to"
      end

      operation 8158619 "getAccessibleActionCount"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible actions available in this Link
If there are more than one, the first one is NOT considered the
\"default\" action of this LINK object (e.g. in an HTML imagemap).
In general, links will have only one AccessibleAction in them.

@return the zero-based number of Actions in this object"
      end

      operation 8158747 "doAccessibleAction"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified Action on the object

@param i zero-based index of actions
@return true if the action was performed; otherwise false.
@see #getAccessibleActionCount"
      end

      operation 8158875 "getAccessibleActionDescription"
	abstract public explicit_return_type "String"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String description of this particular
link action.  This should be a text string
associated with anchoring text, this should be the
anchor text.  E.g. from HTML:
  &lt;a HREF=\"http://www.sun.com/access\"&gt;Accessibility&lt;/a&gt;
this method would return \"Accessibility\".

Similarly, from this HTML:
  &lt;a HREF=\"#top\"&gt;&lt;img src=\"top-hat.gif\" alt=\"top hat\"&gt;&lt;/a&gt;
this method would return \"top hat\"

@param i zero-based index of the actions
@return a String description of the action
@see #getAccessibleActionCount"
      end

      operation 8159003 "getAccessibleActionObject"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object that represents the link action,
as appropriate for that link.  E.g. from HTML:
  &lt;a HREF=\"http://www.sun.com/access\"&gt;Accessibility&lt;/a&gt;
this method would return a
java.net.URL(\"http://www.sun.com/access.html\");

@param i zero-based index of the actions
@return an Object representing the hypertext link itself
@see #getAccessibleActionCount"
      end

      operation 8159131 "getAccessibleActionAnchor"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object that represents the link anchor,
as appropriate for that link.  E.g. from HTML:
  &lt;a href=\"http://www.sun.com/access\"&gt;Accessibility&lt;/a&gt;
this method would return a String containing the text:
\"Accessibility\".

Similarly, from this HTML:
  &lt;a HREF=\"#top\"&gt;&lt;img src=\"top-hat.gif\" alt=\"top hat\"&gt;&lt;/a&gt;
this might return the object ImageIcon(\"top-hat.gif\", \"top hat\");

@param i zero-based index of the actions
@return an Object representing the hypertext anchor
@see #getAccessibleActionCount"
      end

      operation 8159259 "getStartIndex"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index with the hypertext document at which this
link begins

@return index of start of link"
      end

      operation 8159387 "getEndIndex"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index with the hypertext document at which this
link ends

@return index of end of link"
      end
    end

    class 1023387 "AccessibleHypertext"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>The AccessibleHypertext class is the base class for all
classes that present hypertext information on the display.  This class
provides the standard mechanism for an assistive technology to access
that text via its content, attributes, and spatial location.
It also provides standard mechanisms for manipulating hyperlinks.
Applications can determine if an object supports the AccessibleHypertext
interface by first obtaining its AccessibleContext (see {@link Accessible})
and then calling the {@link AccessibleContext#getAccessibleText}
method of AccessibleContext.  If the return value is a class which extends
AccessibleHypertext, then that object supports AccessibleHypertext.

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleText
@see AccessibleContext#getAccessibleText

@version
@author	Peter Korn"
      classrelation 1993243 // <generalisation>
	relation 1993243 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1993243 // <generalisation>
	  b parent class_ref 377115 // AccessibleText
      end

      operation 8159515 "getLinkCount"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of links within this hypertext document.

@return number of links in this hypertext doc."
      end

      operation 8159643 "getLink"
	abstract public return_type class_ref 1023259 // AccessibleHyperlink
	nparams 1
	  param in name "linkIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the nth Link of this Hypertext document.

@param linkIndex within the links of this Hypertext
@return Link object encapsulating the nth link(s)"
      end

      operation 8159771 "getLinkIndex"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "charIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index into an array of hyperlinks that
is associated with this character index, or -1 if there
is no hyperlink associated with this index.

@param charIndex index within the text
@return index into the set of hyperlinks for this hypertext doc."
      end
    end

    class 1023515 "AccessibleRelation"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>Class AccessibleRelation describes a relation between the
object that implements the AccessibleRelation and one or more other
objects.  The actual relations that an object has with other
objects are defined as an AccessibleRelationSet, which is a composed
set of AccessibleRelations.
<p>The toDisplayString method allows you to obtain the localized string 
for a locale independent key from a predefined ResourceBundle for the 
keys defined in this class.
<p>The constants in this class present a strongly typed enumeration
of common object roles. If the constants in this class are not sufficient
to describe the role of an object, a subclass should be generated
from this class and it should provide constants in a similar manner.

@version     1.14 04/15/04
@author      Lynn Monsanto"
      classrelation 1993371 // <generalisation>
	relation 1993371 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1993371 // <generalisation>
	  b parent class_ref 1022747 // AccessibleBundle
      end

      attribute 2997915 "target"
	private explicit_type "Object"
	multiplicity "[]"
	init_value "=  new Object[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The group of objects that participate in the relation.
The relation may be one-to-one or one-to-many.  For
example, in the case of a LABEL_FOR relation, the target
vector would contain a list of objects labeled by the object
that implements this AccessibleRelation.  In the case of a 
MEMBER_OF relation, the target vector would contain all 
of the components that are members of the same group as the
object that implements this AccessibleRelation.
"
      end

      attribute 2998043 "LABEL_FOR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  new String(\"labelFor\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is a label for one or more target objects.

@see #getTarget
@see #CONTROLLER_FOR
@see #CONTROLLED_BY
@see #LABELED_BY
@see #MEMBER_OF
"
      end

      attribute 2998171 "LABELED_BY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  new String(\"labeledBy\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is labeled by one or more target objects.

@see #getTarget
@see #CONTROLLER_FOR
@see #CONTROLLED_BY
@see #LABEL_FOR
@see #MEMBER_OF
"
      end

      attribute 2998299 "MEMBER_OF"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  new String(\"memberOf\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is a member of a group of one or more
target objects.

@see #getTarget
@see #CONTROLLER_FOR
@see #CONTROLLED_BY
@see #LABEL_FOR
@see #LABELED_BY
"
      end

      attribute 2998427 "CONTROLLER_FOR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  new String(\"controllerFor\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is a controller for one or more target
objects.

@see #getTarget
@see #CONTROLLED_BY
@see #LABEL_FOR
@see #LABELED_BY
@see #MEMBER_OF
"
      end

      attribute 2998555 "CONTROLLED_BY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  new String(\"controlledBy\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is controlled by one or more target
objects.

@see #getTarget
@see #CONTROLLER_FOR
@see #LABEL_FOR
@see #LABELED_BY
@see #MEMBER_OF
"
      end

      attribute 2998683 "FLOWS_TO"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"flowsTo\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is logically contiguous with a second
object where the second object occurs after the object.
An example is a paragraph of text that runs to the end of
a page and continues on the next page with an intervening
text footer and/or text header.  The two parts of
the paragraph are separate text elements but are related
in that the second element is a continuation
of the first
element.  In other words, the first element \"flows to\"
the second element.

@since 1.5
"
      end

      attribute 2998811 "FLOWS_FROM"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"flowsFrom\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates an object is logically contiguous with a second
object where the second object occurs before the object.
An example is a paragraph of text that runs to the end of
a page and continues on the next page with an intervening
text footer and/or text header.  The two parts of
the paragraph are separate text elements but are related
in that the second element is a continuation of the first
element.  In other words, the second element \"flows from\"
the second element.

@since 1.5
"
      end

      attribute 2998939 "SUBWINDOW_OF"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"subwindowOf\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that an object is a subwindow of one or more
objects.

@since 1.5
"
      end

      attribute 2999067 "PARENT_WINDOW_OF"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"parentWindowOf\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that an object is a parent window of one or more
objects.

@since 1.5
"
      end

      attribute 2999195 "EMBEDS"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"embeds\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that an object has one or more objects
embedded in it.

@since 1.5
"
      end

      attribute 2999323 "EMBEDDED_BY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"embeddedBy\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that an object is embedded in one or more
objects.

@since 1.5
"
      end

      attribute 2999451 "CHILD_NODE_OF"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"childNodeOf\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that an object is a child node of one
or more objects.

@since 1.5
"
      end

      attribute 2999579 "LABEL_FOR_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"labelForProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies that the target group for a label has changed
"
      end

      attribute 2999707 "LABELED_BY_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"labeledByProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies that the objects that are doing the labeling have changed
"
      end

      attribute 2999835 "MEMBER_OF_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"memberOfProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies that group membership has changed. 
"
      end

      attribute 2999963 "CONTROLLER_FOR_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"controllerForProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies that the controller for the target object has changed
"
      end

      attribute 3000091 "CONTROLLED_BY_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"controlledByProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies that the target object that is doing the controlling has
changed
"
      end

      attribute 3000219 "FLOWS_TO_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"flowsToProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the FLOWS_TO relation between two objects
has changed.

@since 1.5
"
      end

      attribute 3000347 "FLOWS_FROM_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"flowsFromProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the FLOWS_FROM relation between two objects
has changed.

@since 1.5
"
      end

      attribute 3000475 "SUBWINDOW_OF_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"subwindowOfProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the SUBWINDOW_OF relation between two or more objects
has changed.

@since 1.5
"
      end

      attribute 3000603 "PARENT_WINDOW_OF_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"parentWindowOfProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the PARENT_WINDOW_OF relation between two or more objects
has changed.

@since 1.5
"
      end

      attribute 3000731 "EMBEDS_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"embedsProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the EMBEDS relation between two or more objects
has changed.

@since 1.5
"
      end

      attribute 3000859 "EMBEDDED_BY_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"embeddedByProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the EMBEDDED_BY relation between two or more objects
has changed.

@since 1.5
"
      end

      attribute 3000987 "CHILD_NODE_OF_PROPERTY"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"childNodeOfProperty\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates the CHILD_NODE_OF relation between two or more objects
has changed.

@since 1.5
"
      end

      operation 8160411 "AccessibleRelation"
	public explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new AccessibleRelation using the given locale independent key.
The key String should be a locale independent key for the relation.
It is not intended to be used as the actual String to display 
to the user.  To get the localized string, use toDisplayString.

@param key the locale independent name of the relation.
@see AccessibleBundle#toDisplayString"
      end

      operation 8160539 "AccessibleRelation"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "target" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AccessibleRelation using the given locale independent key.
The key String should be a locale independent key for the relation.
It is not intended to be used as the actual String to display 
to the user.  To get the localized string, use toDisplayString.

@param key the locale independent name of the relation.
@param target the target object for this relation
@see AccessibleBundle#toDisplayString"
      end

      operation 8160667 "AccessibleRelation"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "target" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AccessibleRelation using the given locale independent key.
The key String should be a locale independent key for the relation.
It is not intended to be used as the actual String to display 
to the user.  To get the localized string, use toDisplayString.

@param key the locale independent name of the relation.
@param target the target object(s) for this relation
@see AccessibleBundle#toDisplayString"
      end

      operation 8160795 "getKey"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key for this relation

@return the key for this relation

@see #CONTROLLER_FOR
@see #CONTROLLED_BY
@see #LABEL_FOR
@see #LABELED_BY
@see #MEMBER_OF"
      end

      operation 8160923 "getTarget"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the target objects for this relation

@return an array containing the target objects for this relation"
      end

      operation 8161051 "setTarget"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the target object for this relation

@param target the target object for this relation"
      end

      operation 8161179 "setTarget"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the target objects for this relation

@param target an array containing the target objects for this relation"
      end
    end

    class 1023643 "AccessibleResourceBundle"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A resource bundle containing the localized strings in the accessibility 
package.  This is meant only for internal use by Java Accessibility and
is not meant to be used by assistive technologies or applications.

@version     1.32 05/18/04 21:18:13
@author      Willie Walker
@deprecated This class is deprecated as of version 1.3 of the 
            Java 2 Platform."
      classrelation 1993627 // <generalisation>
	relation 1993627 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1993627 // <generalisation>
	  b parent class_ref 153243 // ListResourceBundle
      end

      operation 8162715 "getContents"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the mapping between the programmatic keys and the
localized display strings."
      end

      attribute 3001115 "contents"
	class_attribute const_attribute package explicit_type "Object"
	multiplicity "[][]"
	init_value "=  {
    // LOCALIZE THIS
        // Role names
//        { \"application\",\"application\" },
//        { \"border\",\"border\" },
//        { \"checkboxmenuitem\",\"check box menu item\" },
//        { \"choice\",\"choice\" },
//        { \"column\",\"column\" },
//        { \"cursor\",\"cursor\" },
//        { \"document\",\"document\" },
//        { \"grouping\",\"grouping\" },
//        { \"image\",\"image\" },
//        { \"indicator\",\"indicator\" },
//        { \"radiobuttonmenuitem\",\"radio button menu item\" },
//        { \"row\",\"row\" },
//        { \"tablecell\",\"table cell\" },
//        { \"treenode\",\"tree node\" },
        { \"alert\",\"alert\" },
        { \"awtcomponent\",\"AWT component\" },
        { \"checkbox\",\"check box\" },
        { \"colorchooser\",\"color chooser\" },
        { \"columnheader\",\"column header\" },
        { \"combobox\",\"combo box\" },
        { \"canvas\",\"canvas\" },
        { \"desktopicon\",\"desktop icon\" },
        { \"desktoppane\",\"desktop pane\" },
        { \"dialog\",\"dialog\" },
        { \"directorypane\",\"directory pane\" },
        { \"glasspane\",\"glass pane\" },
        { \"filechooser\",\"file chooser\" },
        { \"filler\",\"filler\" },
        { \"frame\",\"frame\" },
        { \"internalframe\",\"internal frame\" },
        { \"label\",\"label\" },
        { \"layeredpane\",\"layered pane\" },
        { \"list\",\"list\" },
        { \"listitem\",\"list item\" },
        { \"menubar\",\"menu bar\" },
        { \"menu\",\"menu\" },
        { \"menuitem\",\"menu item\" },
        { \"optionpane\",\"option pane\" },
        { \"pagetab\",\"page tab\" },
        { \"pagetablist\",\"page tab list\" },
        { \"panel\",\"panel\" },
	{ \"passwordtext\",\"password text\" },
        { \"popupmenu\",\"popup menu\" },
        { \"progressbar\",\"progress bar\" },
        { \"pushbutton\",\"push button\" },
        { \"radiobutton\",\"radio button\" },
        { \"rootpane\",\"root pane\" },
        { \"rowheader\",\"row header\" },
        { \"scrollbar\",\"scroll bar\" },
        { \"scrollpane\",\"scroll pane\" },
        { \"separator\",\"separator\" },
        { \"slider\",\"slider\" },
        { \"splitpane\",\"split pane\" },
        { \"swingcomponent\",\"swing component\" },
        { \"table\",\"table\" },
        { \"text\",\"text\" },
        { \"tree\",\"tree\" },
        { \"togglebutton\",\"toggle button\" },
        { \"toolbar\",\"tool bar\" },
        { \"tooltip\",\"tool tip\" },
        { \"unknown\",\"unknown\" },
        { \"viewport\",\"viewport\" },
        { \"window\",\"window\" },
        // Relations
        { \"labelFor\",\"label for\" },
        { \"labeledBy\",\"labeled by\" },
        { \"memberOf\",\"member of\" },
        { \"controlledBy\",\"controlledBy\" },
        { \"controllerFor\",\"controllerFor\" },
        // State modes
        { \"active\",\"active\" },
        { \"armed\",\"armed\" },
        { \"busy\",\"busy\" },
        { \"checked\",\"checked\" },
	{ \"collapsed\", \"collapsed\" },
        { \"editable\",\"editable\" },
	{ \"expandable\", \"expandable\" },
	{ \"expanded\", \"expanded\" },
        { \"enabled\",\"enabled\" },
        { \"focusable\",\"focusable\" },
        { \"focused\",\"focused\" },
	{ \"iconified\", \"iconified\" },
	{ \"modal\", \"modal\" },
	{ \"multiline\", \"multiple line\" },
        { \"multiselectable\",\"multiselectable\" },
	{ \"opaque\", \"opaque\" },
        { \"pressed\",\"pressed\" },
	{ \"resizable\", \"resizable\" },
        { \"selectable\",\"selectable\" },
        { \"selected\",\"selected\" },
        { \"showing\",\"showing\" },
	{ \"singleline\", \"single line\" },
	{ \"transient\", \"transient\" },
        { \"visible\",\"visible\" },
        { \"vertical\",\"vertical\" },
        { \"horizontal\",\"horizontal\" }
    // END OF MATERIAL TO LOCALIZE
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The table holding the mapping between the programmatic keys
and the display strings for the en_US locale.
"
      end
    end

    class 1023771 "AccessibleState"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<P>Class AccessibleState describes a component's particular state.  The actual
state of the component is defined as an AccessibleStateSet, which is a
composed set of AccessibleStates.
<p>The toDisplayString method allows you to obtain the localized string 
for a locale independent key from a predefined ResourceBundle for the 
keys defined in this class.
<p>The constants in this class present a strongly typed enumeration
of common object roles.  A public constructor for this class has been
purposely omitted and applications should use one of the constants
from this class.  If the constants in this class are not sufficient
to describe the role of an object, a subclass should be generated
from this class and it should provide constants in a similar manner.

@version     1.38 04/15/04
@author      Willie Walker
@author	Peter Korn"
      classrelation 2001819 // <generalisation>
	relation 2001819 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2001819 // <generalisation>
	  b parent class_ref 1022747 // AccessibleBundle
      end

      classrelation 2001947 // ACTIVE (<unidirectional association>)
	relation 2001947 --->
	  a role_name "ACTIVE" init_value "=  new AccessibleState(\"active\")" class_relation const_relation public
	    comment " If you add or remove anything from here, make sure you 
 update AccessibleResourceBundle.java.

Indicates a window is currently the active window.  This includes 
windows, dialogs, frames, etc.  In addition, this state is used
to indicate the currently active child of a component such as a
list, table, or tree.  For example, the active child of a list
is the child that is drawn with a rectangle around it.
@see AccessibleRole#WINDOW
@see AccessibleRole#FRAME
@see AccessibleRole#DIALOG

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2001947 // ACTIVE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002075 // PRESSED (<unidirectional association>)
	relation 2002075 --->
	  a role_name "PRESSED" init_value "=  new AccessibleState(\"pressed\")" class_relation const_relation public
	    comment "
Indicates this object is currently pressed.  This is usually
associated with buttons and indicates the user has pressed a
mouse button while the pointer was over the button and has
not yet released the mouse button.
@see AccessibleRole#PUSH_BUTTON

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002075 // PRESSED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002203 // ARMED (<unidirectional association>)
	relation 2002203 --->
	  a role_name "ARMED" init_value "=  new AccessibleState(\"armed\")" class_relation const_relation public
	    comment "
Indicates that the object is armed.  This is usually used on buttons
that have been pressed but not yet released, and the mouse pointer
is still over the button.
@see AccessibleRole#PUSH_BUTTON

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002203 // ARMED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002331 // BUSY (<unidirectional association>)
	relation 2002331 --->
	  a role_name "BUSY" init_value "=  new AccessibleState(\"busy\")" class_relation const_relation public
	    comment "
Indicates the current object is busy.  This is usually used on objects
such as progress bars, sliders, or scroll bars to indicate they are 
in a state of transition.
@see AccessibleRole#PROGRESS_BAR
@see AccessibleRole#SCROLL_BAR
@see AccessibleRole#SLIDER

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002331 // BUSY (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002459 // CHECKED (<unidirectional association>)
	relation 2002459 --->
	  a role_name "CHECKED" init_value "=  new AccessibleState(\"checked\")" class_relation const_relation public
	    comment " 
Indicates this object is currently checked.  This is usually used on 
objects such as toggle buttons, radio buttons, and check boxes.
@see AccessibleRole#TOGGLE_BUTTON
@see AccessibleRole#RADIO_BUTTON
@see AccessibleRole#CHECK_BOX

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002459 // CHECKED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002587 // EDITABLE (<unidirectional association>)
	relation 2002587 --->
	  a role_name "EDITABLE" init_value "=  new AccessibleState(\"editable\")" class_relation const_relation public
	    comment "
Indicates the user can change the contents of this object.  This
is usually used primarily for objects that allow the user to 
enter text.  Other objects, such as scroll bars and sliders, 
are automatically editable if they are enabled.
@see #ENABLED

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002587 // EDITABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002715 // EXPANDABLE (<unidirectional association>)
	relation 2002715 --->
	  a role_name "EXPANDABLE" init_value "=  new AccessibleState(\"expandable\")" class_relation const_relation public
	    comment " 
Indicates this object allows progressive disclosure of its children.
This is usually used with hierarchical objects such as trees and
is often paired with the EXPANDED or COLLAPSED states.
@see #EXPANDED
@see #COLLAPSED
@see AccessibleRole#TREE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002715 // EXPANDABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002843 // COLLAPSED (<unidirectional association>)
	relation 2002843 --->
	  a role_name "COLLAPSED" init_value "=  new AccessibleState(\"collapsed\")" class_relation const_relation public
	    comment "
Indicates this object is collapsed.  This is usually paired with the
EXPANDABLE state and is used on objects that provide progressive
disclosure such as trees.
@see #EXPANDABLE
@see #EXPANDED
@see AccessibleRole#TREE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002843 // COLLAPSED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2002971 // EXPANDED (<unidirectional association>)
	relation 2002971 --->
	  a role_name "EXPANDED" init_value "=  new AccessibleState(\"expanded\")" class_relation const_relation public
	    comment "
Indicates this object is expanded.  This is usually paired with the
EXPANDABLE state and is used on objects that provide progressive
disclosure such as trees.
@see #EXPANDABLE
@see #COLLAPSED
@see AccessibleRole#TREE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2002971 // EXPANDED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003099 // ENABLED (<unidirectional association>)
	relation 2003099 --->
	  a role_name "ENABLED" init_value "=  new AccessibleState(\"enabled\")" class_relation const_relation public
	    comment "
Indicates this object is enabled.  The absence of this state from an
object's state set indicates this object is not enabled.  An object
that is not enabled cannot be manipulated by the user.  In a graphical
display, it is usually grayed out.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003099 // ENABLED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003227 // FOCUSABLE (<unidirectional association>)
	relation 2003227 --->
	  a role_name "FOCUSABLE" init_value "=  new AccessibleState(\"focusable\")" class_relation const_relation public
	    comment " 
Indicates this object can accept keyboard focus, which means all 
events resulting from typing on the keyboard will normally be 
passed to it when it has focus.
@see #FOCUSED

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003227 // FOCUSABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003355 // FOCUSED (<unidirectional association>)
	relation 2003355 --->
	  a role_name "FOCUSED" init_value "=  new AccessibleState(\"focused\")" class_relation const_relation public
	    comment "
Indicates this object currently has the keyboard focus.
@see #FOCUSABLE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003355 // FOCUSED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003483 // ICONIFIED (<unidirectional association>)
	relation 2003483 --->
	  a role_name "ICONIFIED" init_value "=  new AccessibleState(\"iconified\")" class_relation const_relation public
	    comment "
Indicates this object is minimized and is represented only by an
icon.  This is usually only associated with frames and internal
frames. 
@see AccessibleRole#FRAME
@see AccessibleRole#INTERNAL_FRAME

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003483 // ICONIFIED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003611 // MODAL (<unidirectional association>)
	relation 2003611 --->
	  a role_name "MODAL" init_value "=  new AccessibleState(\"modal\")" class_relation const_relation public
	    comment " 
Indicates something must be done with this object before the
user can interact with an object in a different window.  This
is usually associated only with dialogs. 
@see AccessibleRole#DIALOG

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003611 // MODAL (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003739 // OPAQUE (<unidirectional association>)
	relation 2003739 --->
	  a role_name "OPAQUE" init_value "=  new AccessibleState(\"opaque\")" class_relation const_relation public
	    comment " 
Indicates this object paints every pixel within its
rectangular region. A non-opaque component paints only some of
its pixels, allowing the pixels underneath it to \"show through\".
A component that does not fully paint its pixels therefore
provides a degree of transparency.
@see Accessible#getAccessibleContext
@see AccessibleContext#getAccessibleComponent
@see AccessibleComponent#getBounds

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003739 // OPAQUE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003867 // RESIZABLE (<unidirectional association>)
	relation 2003867 --->
	  a role_name "RESIZABLE" init_value "=  new AccessibleState(\"resizable\")" class_relation const_relation public
	    comment "
Indicates the size of this object is not fixed.
@see Accessible#getAccessibleContext
@see AccessibleContext#getAccessibleComponent
@see AccessibleComponent#getSize
@see AccessibleComponent#setSize

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003867 // RESIZABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2003995 // MULTISELECTABLE (<unidirectional association>)
	relation 2003995 --->
	  a role_name "MULTISELECTABLE" init_value "=  new AccessibleState(\"multiselectable\")" class_relation const_relation public
	    comment "
Indicates this object allows more than one of its children to
be selected at the same time.
@see Accessible#getAccessibleContext
@see AccessibleContext#getAccessibleSelection
@see AccessibleSelection

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2003995 // MULTISELECTABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004123 // SELECTABLE (<unidirectional association>)
	relation 2004123 --->
	  a role_name "SELECTABLE" init_value "=  new AccessibleState(\"selectable\")" class_relation const_relation public
	    comment "
Indicates this object is the child of an object that allows its
children to be selected, and that this child is one of those
children that can be selected.
@see #SELECTED
@see Accessible#getAccessibleContext
@see AccessibleContext#getAccessibleSelection
@see AccessibleSelection

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004123 // SELECTABLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004251 // SELECTED (<unidirectional association>)
	relation 2004251 --->
	  a role_name "SELECTED" init_value "=  new AccessibleState(\"selected\")" class_relation const_relation public
	    comment "
Indicates this object is the child of an object that allows its
children to be selected, and that this child is one of those
children that has been selected.
@see #SELECTABLE
@see Accessible#getAccessibleContext
@see AccessibleContext#getAccessibleSelection
@see AccessibleSelection

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004251 // SELECTED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004379 // SHOWING (<unidirectional association>)
	relation 2004379 --->
	  a role_name "SHOWING" init_value "=  new AccessibleState(\"showing\")" class_relation const_relation public
	    comment "
Indicates this object, the object's parent, the object's parent's
parent, and so on, are all visible.  Note that this does not 
necessarily mean the object is painted on the screen.  It might
be occluded by some other showing object.
@see #VISIBLE

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004379 // SHOWING (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004507 // VISIBLE (<unidirectional association>)
	relation 2004507 --->
	  a role_name "VISIBLE" init_value "=  new AccessibleState(\"visible\")" class_relation const_relation public
	    comment "
Indicates this object is visible.  Note: this means that the
object intends to be visible; however, it may not in fact be
showing on the screen because one of the objects that this object
is contained by is not visible.
@see #SHOWING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004507 // VISIBLE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004635 // VERTICAL (<unidirectional association>)
	relation 2004635 --->
	  a role_name "VERTICAL" init_value "=  new AccessibleState(\"vertical\")" class_relation const_relation public
	    comment "
Indicates the orientation of this object is vertical.  This is
usually associated with objects such as scrollbars, sliders, and
progress bars.
@see #VERTICAL
@see AccessibleRole#SCROLL_BAR
@see AccessibleRole#SLIDER
@see AccessibleRole#PROGRESS_BAR

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004635 // VERTICAL (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004763 // HORIZONTAL (<unidirectional association>)
	relation 2004763 --->
	  a role_name "HORIZONTAL" init_value "=  new AccessibleState(\"horizontal\")" class_relation const_relation public
	    comment "
Indicates the orientation of this object is horizontal.  This is
usually associated with objects such as scrollbars, sliders, and
progress bars.
@see #HORIZONTAL
@see AccessibleRole#SCROLL_BAR
@see AccessibleRole#SLIDER
@see AccessibleRole#PROGRESS_BAR

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004763 // HORIZONTAL (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2004891 // SINGLE_LINE (<unidirectional association>)
	relation 2004891 --->
	  a role_name "SINGLE_LINE" init_value "=  new AccessibleState(\"singleline\")" class_relation const_relation public
	    comment "
Indicates this (text) object can contain only a single line of text

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2004891 // SINGLE_LINE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2005019 // MULTI_LINE (<unidirectional association>)
	relation 2005019 --->
	  a role_name "MULTI_LINE" init_value "=  new AccessibleState(\"multiline\")" class_relation const_relation public
	    comment "
Indicates this (text) object can contain multiple lines of text

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2005019 // MULTI_LINE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2005147 // TRANSIENT (<unidirectional association>)
	relation 2005147 --->
	  a role_name "TRANSIENT" init_value "=  new AccessibleState(\"transient\")" class_relation const_relation public
	    comment "
Indicates this object is transient.  An assistive technology should
not add a PropertyChange listener to an object with transient state,
as that object will never generate any events.  Transient objects
are typically created to answer Java Accessibility method queries,
but otherwise do not remain linked to the underlying object (for
example, those objects underneath lists, tables, and trees in Swing,
where only one actual UI Component does shared rendering duty for
all of the data objects underneath the actual list/table/tree elements).

@since 1.5


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2005147 // TRANSIENT (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2005275 // MANAGES_DESCENDANTS (<unidirectional association>)
	relation 2005275 --->
	  a role_name "MANAGES_DESCENDANTS" init_value "=  new AccessibleState (\"managesDescendants\")" class_relation const_relation public
	    comment "
Indicates this object is responsible for managing its
subcomponents.  This is typically used for trees and tables
that have a large number of subcomponents and where the
objects are created only when needed and otherwise remain virtual.
The application should not manage the subcomponents directly.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2005275 // MANAGES_DESCENDANTS (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2005403 // INDETERMINATE (<unidirectional association>)
	relation 2005403 --->
	  a role_name "INDETERMINATE" init_value "=  new AccessibleState (\"indeterminate\")" class_relation const_relation public
	    comment "
Indicates that the object state is indeterminate.  An example
is selected text that is partially bold and partially not
bold. In this case the attributes associated with the selected
text are indeterminate.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2005403 // INDETERMINATE (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      classrelation 2005531 // TRUNCATED (<unidirectional association>)
	relation 2005531 --->
	  a role_name "TRUNCATED" init_value "=   new AccessibleState(\"truncated\")" class_relation const_relation public
	    comment "
A state indicating that text is truncated by a bounding rectangle
and that some of the text is not displayed on the screen.  An example
is text in a spreadsheet cell that is truncated by the bounds of
the cell.

@since 1.5

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2005531 // TRUNCATED (<unidirectional association>)
	  b parent class_ref 1023771 // AccessibleState
      end

      operation 8162971 "AccessibleState"
	protected explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AccessibleState using the given locale independent key.
This should not be a public method.  Instead, it is used to create
the constants in this file to make it a strongly typed enumeration.
Subclasses of this class should enforce similar policy.
<p>
The key String should be a locale independent key for the state.
It is not intended to be used as the actual String to display 
to the user.  To get the localized string, use toDisplayString.

@param key the locale independent name of the state.
@see AccessibleBundle#toDisplayString"
      end
    end

    class 1023899 "AccessibleStreamable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
The <code>AccessibleStreamable</code> interface should be implemented
by the <code>AccessibleContext</code> of any component that presents the
raw stream behind a component on the display screen.  Examples of such
components are HTML, bitmap images and MathML.  An object that implements
<code>AccessibleStreamable</code> provides two things: a list of MIME
types supported by the object and a streaming interface for each MIME type to
get the data.

@version 1.3 12/19/03
@author Lynn Monsanto
@author Peter Korn

@see javax.accessibility.AccessibleContext
@since 1.5"
      operation 8164251 "getMimeTypes"
	public explicit_return_type "DataFlavor"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of DataFlavor objects for the MIME types
this object supports.

@return an array of DataFlavor objects for the MIME types
this object supports."
      end

      operation 8164379 "getStream"
	public return_type class_ref 179099 // InputStream
	nparams 1
	  param inout name "flavor" explicit_type "DataFlavor"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an InputStream for a DataFlavor

@param flavor the DataFlavor
@return an ImputStream if an ImputStream for this DataFlavor exists.  
Otherwise, null is returned."
      end
    end

    class 1024027 "AccessibleTableModelChange"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AccessibleTableModelChange interface describes a change to
the table model.  The attributes of the model change can be
obtained by the following methods:
<ul>
<li> public int getType()
<li> public int getFirstRow();
<li> public int getLastRow();
<li> public int getFirstColumn();
<li> public int getLastColumn();
</ul>
The model change type returned by getType() will be one of:
<ul>
<li> INSERT - one or more rows and/or columns have been inserted
<li> UPDATE - some of the table data has changed
<li> DELETE - one or more rows and/or columns have been deleted
</ul>
The affected area of the table can be determined by the other
four methods which specify ranges of rows and columns

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleTable

@version     1.2 10/12/99
@author	Lynn Monsanto"
      attribute 3001243 "INSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=   1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies the insertion of new rows and/or columns. 
"
      end

      attribute 3001371 "UPDATE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=   0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies a change to existing data. 
"
      end

      attribute 3001499 "DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifies the deletion of rows and/or columns. 
"
      end

      operation 8164507 "getType"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the type of event

 @see #INSERT
 @see #UPDATE
 @see #DELETE"
      end

      operation 8164635 "getFirstRow"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first row that changed."
      end

      operation 8164763 "getLastRow"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last row that changed. "
      end

      operation 8164891 "getFirstColumn"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first column that changed."
      end

      operation 8165019 "getLastColumn"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last column that changed. "
      end
    end
  end

  deploymentview 144795 "accessibility"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 286491 "AccessibleContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyChangeEvent;
import java.awt.IllegalComponentStateException;
${definition}"
      associated_classes
	class_ref 375835 // AccessibleContext
      end
      comment "@(#)AccessibleContext.java	1.43 04/04/02

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 286619 "AccessibleComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.event.*;
${definition}"
      associated_classes
	class_ref 376859 // AccessibleComponent
      end
      comment "@(#)AccessibleComponent.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 287515 "AccessibleExtendedComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 381723 // AccessibleExtendedComponent
      end
      comment "@(#)AccessibleExtendedComponent.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 287643 "Accessible"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 376091 // Accessible
      end
      comment "@(#)Accessible.java	1.36 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 288411 "AccessibleText"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import javax.swing.text.*;
${definition}"
      associated_classes
	class_ref 377115 // AccessibleText
      end
      comment "@(#)AccessibleText.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 288539 "AccessibleKeyBinding"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 381851 // AccessibleKeyBinding
      end
      comment "@(#)AccessibleKeyBinding.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 299163 "AccessibleAction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 376731 // AccessibleAction
      end
      comment "@(#)AccessibleAction.java	1.17 04/04/15

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 299291 "AccessibleSelection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 376987 // AccessibleSelection
      end
      comment "@(#)AccessibleSelection.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 301083 "AccessibleValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 377371 // AccessibleValue
      end
      comment "@(#)AccessibleValue.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 311451 "AccessibleEditableText"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import javax.swing.text.*;
${definition}"
      associated_classes
	class_ref 377243 // AccessibleEditableText
      end
      comment "@(#)AccessibleEditableText.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 771995 "AccessibleAttributeSequence"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.text.AttributeSet;
${definition}"
      associated_classes
	class_ref 1022619 // AccessibleAttributeSequence
      end
      comment "@(#)AccessibleAttributeSequence.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772123 "AccessibleBundle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 1022747 // AccessibleBundle
      end
      comment "@(#)AccessibleBundle.java	1.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772251 "AccessibleTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 377627 // AccessibleTable
      end
      comment "@(#)AccessibleTable.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772379 "AccessibleExtendedTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1022875 // AccessibleExtendedTable
      end
      comment "@(#)AccessibleExtendedTable.java	1.5 03/12/19 

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
"
    end

    artifact 772507 "AccessibleExtendedText"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import javax.swing.text.*;
${definition}"
      associated_classes
	class_ref 1023003 // AccessibleExtendedText
      end
      comment "@(#)AccessibleExtendedText.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772635 "AccessibleHyperlink"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import javax.swing.text.*;
${definition}"
      associated_classes
	class_ref 1023259 // AccessibleHyperlink
      end
      comment "@(#)AccessibleHyperlink.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772763 "AccessibleHypertext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.*;
import javax.swing.text.*;
${definition}"
      associated_classes
	class_ref 1023387 // AccessibleHypertext
      end
      comment "@(#)AccessibleHypertext.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 772891 "AccessibleIcon"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 377499 // AccessibleIcon
      end
      comment "@(#)AccessibleIcon.java	1.8 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773019 "AccessibleRelation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 1023515 // AccessibleRelation
      end
      comment "@(#)AccessibleRelation.java	1.14 04/04/15

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773147 "AccessibleRelationSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 376219 // AccessibleRelationSet
      end
      comment "@(#)AccessibleRelationSet.java	1.13 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773275 "AccessibleResourceBundle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_classes
	class_ref 1023643 // AccessibleResourceBundle
      end
      comment "@(#)AccessibleResourceBundle.java	1.32 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773403 "AccessibleRole"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 376347 // AccessibleRole
      end
      comment "@(#)AccessibleRole.java	1.45 04/04/15

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773531 "AccessibleState"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 1023771 // AccessibleState
      end
      comment "@(#)AccessibleState.java	1.38 04/04/15

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773659 "AccessibleStateSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_classes
	class_ref 376475 // AccessibleStateSet
      end
      comment "@(#)AccessibleStateSet.java	1.18 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773787 "AccessibleStreamable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.awt.datatransfer.DataFlavor;
${definition}"
      associated_classes
	class_ref 1023899 // AccessibleStreamable
      end
      comment "@(#)AccessibleStreamable.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 773915 "AccessibleTableModelChange"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1024027 // AccessibleTableModelChange
      end
      comment "@(#)AccessibleTableModelChange.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 774043 "AccessibleTextSequence"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1023131 // AccessibleTextSequence
      end
      comment "@(#)AccessibleTextSequence.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
