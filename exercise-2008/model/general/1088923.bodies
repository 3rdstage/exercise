class Sequence
!!!8704155.java!!!	Sequence(in divisionType : float, in resolution : int)

	if (divisionType == PPQ)
	    this.divisionType = PPQ;
	else if (divisionType == SMPTE_24)
	    this.divisionType = SMPTE_24;
	else if (divisionType == SMPTE_25)
	    this.divisionType = SMPTE_25;
	else if (divisionType == SMPTE_30DROP)
	    this.divisionType = SMPTE_30DROP;
	else if (divisionType == SMPTE_30)
	    this.divisionType = SMPTE_30;
	else throw new InvalidMidiDataException("Unsupported division type: " + divisionType);

	this.resolution = resolution;
!!!8704283.java!!!	Sequence(in divisionType : float, in resolution : int, in numTracks : int)

	if (divisionType == PPQ)
	    this.divisionType = PPQ;
	else if (divisionType == SMPTE_24)
	    this.divisionType = SMPTE_24;
	else if (divisionType == SMPTE_25)
	    this.divisionType = SMPTE_25;
	else if (divisionType == SMPTE_30DROP)
	    this.divisionType = SMPTE_30DROP;
	else if (divisionType == SMPTE_30)
	    this.divisionType = SMPTE_30;
	else throw new InvalidMidiDataException("Unsupported division type: " + divisionType);

	this.resolution = resolution;

	for (int i = 0; i < numTracks; i++) {
	    tracks.addElement(new Track());
	}
!!!8704411.java!!!	getDivisionType() : float
	return divisionType;
!!!8704539.java!!!	getResolution() : int
	return resolution;
!!!8704667.java!!!	createTrack() : Track

	Track track = new Track();
	tracks.addElement(track);

	return track;
!!!8704795.java!!!	deleteTrack(inout track : Track) : boolean

	synchronized(tracks) {

	    return tracks.removeElement(track);
	}
!!!8704923.java!!!	getTracks() : Track

	return (Track[]) tracks.toArray(new Track[tracks.size()]);
!!!8705051.java!!!	getMicrosecondLength() : long

    	return com.sun.media.sound.MidiUtils.tick2microsecond(this, getTickLength(), null);
!!!8705179.java!!!	getTickLength() : long

	long length = 0;

	synchronized(tracks) {

	    for(int i=0; i<tracks.size(); i++ ) {
		long temp = ((Track)tracks.elementAt(i)).ticks();
		if( temp>length ) {
		    length = temp;
		}
	    }
	    return length;
	}
!!!8705307.java!!!	getPatchList() : Patch

	// $$kk: 04.09.99: need to implement!!
	return new Patch[0];
