class ListenerThreadImpl
!!!1671323.java!!!	ListenerThreadImpl(inout orb : ORB, inout acceptor : Acceptor, inout selector : Selector)
	this.orb = orb;
	this.acceptor = acceptor;
	this.selector = selector;
	keepRunning = true;
!!!1671451.java!!!	getAcceptor() : Acceptor
	return acceptor;
!!!1671579.java!!!	close() : void
	if (orb.transportDebugFlag) {
	    dprint(".close: " + acceptor);
	}

	keepRunning = false;
!!!1671707.java!!!	doWork() : void
	try {
	    if (orb.transportDebugFlag) {
		dprint(".doWork: Start ListenerThread: " + acceptor);
	    }
	    while (keepRunning) {
		try {
		    if (orb.transportDebugFlag) {
			dprint(".doWork: BEFORE ACCEPT CYCLE: " + acceptor);
		    }

		    acceptor.accept();

		    if (orb.transportDebugFlag) {
			dprint(".doWork: AFTER ACCEPT CYCLE: " + acceptor);
		    }
		} catch (Throwable t) {
		    if (orb.transportDebugFlag) {
			dprint(".doWork: Exception in accept: " + acceptor,t);
		    }
		    orb.getTransportManager().getSelector(0)
			.unregisterForEvent(getAcceptor().getEventHandler());
		    getAcceptor().close();
		}
	    }
	} finally {
	    if (orb.transportDebugFlag) {
		dprint(".doWork: Terminated ListenerThread: " + acceptor);
	    }
	}
!!!1671835.java!!!	setEnqueueTime(in timeInMillis : long) : void
	enqueueTime = timeInMillis;
!!!1671963.java!!!	getEnqueueTime() : long
	return enqueueTime;
!!!1672091.java!!!	getName() : String
 return "ListenerThread";
!!!1672219.java!!!	dprint(in msg : String) : void
	ORBUtility.dprint("ListenerThreadImpl", msg);
!!!1672347.java!!!	dprint(in msg : String, inout t : Throwable) : void
	dprint(msg);
	t.printStackTrace(System.out);
