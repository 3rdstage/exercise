class MBeanAttributeInfo
!!!8234779.java!!!	MBeanAttributeInfo(in name : String, in type : String, in description : String, inout isReadable : boolean, inout isWritable : boolean, inout isIs : boolean)

	super(name, description);

	this.attributeType = type;
	this.isRead= isReadable;
	this.isWrite = isWritable;
	if (isIs && !isReadable) {
	    throw new IllegalArgumentException("Cannot have an \"is\" getter for a non-readable attribute.");
	}
	if (isIs && (!type.equals("java.lang.Boolean") && (!type.equals("boolean")))) {
	    throw new IllegalArgumentException("Cannot have an \"is\" getter for a non-boolean attribute.");
	}
	this.is = isIs;
!!!8234907.java!!!	MBeanAttributeInfo(in name : String, in description : String, inout getter : Method, inout setter : Method)
	this(name,
	     attributeType(getter, setter),
	     description,
	     (getter != null),
	     (setter != null),
	     isIs(getter));
!!!8235035.java!!!	clone() : Object
	 try {
	     return  super.clone() ;
	 } catch (CloneNotSupportedException e) {
	     // should not happen as this class is cloneable
	     return null;
	 }
!!!8235163.java!!!	getType() : String
	return attributeType;
!!!8235291.java!!!	isReadable() : boolean
	return isRead;
!!!8235419.java!!!	isWritable() : boolean
	return isWrite;
!!!8235547.java!!!	isIs() : boolean
	return is;
!!!8235675.java!!!	equals(inout o : Object) : boolean
	if (o == this)
	    return true;
	if (!(o instanceof MBeanAttributeInfo))
	    return false;
	MBeanAttributeInfo p = (MBeanAttributeInfo) o;
	return (p.getName().equals(getName()) &&
		p.getType().equals(getType()) &&
		p.getDescription().equals(getDescription()) &&
		p.isReadable() == isReadable() &&
		p.isWritable() == isWritable() &&
		p.isIs() == isIs());
!!!8235803.java!!!	hashCode() : int
	return getName().hashCode() ^ getType().hashCode();
!!!8235931.java!!!	isIs(inout getter : Method) : boolean
	return (getter != null &&
		getter.getName().startsWith("is") &&
		(getter.getReturnType().equals(Boolean.TYPE) ||
                 getter.getReturnType().equals(Boolean.class)));
!!!8236059.java!!!	attributeType(inout getter : Method, inout setter : Method) : String
	Class type = null;

	if (getter != null) {
	    if (getter.getParameterTypes().length != 0) {
		throw new IntrospectionException("bad getter arg count");
	    }
	    type = getter.getReturnType();
	    if (type == Void.TYPE) {
		throw new IntrospectionException("getter " + getter.getName() +
						 " returns void");
	    }
	}

	if (setter != null) {
	    Class params[] = setter.getParameterTypes();
	    if (params.length != 1) {
		throw new IntrospectionException("bad setter arg count");
	    }
	    if (type == null)
		type = params[0];
	    else if (type != params[0]) {
		throw new IntrospectionException("type mismatch between " +
						 "getter and setter");
	    }
	}

	if (type == null) {
	    throw new IntrospectionException("getter and setter cannot " +
					     "both be null");
	}

	return type.getName();
