format 66
"net" // src::java::net
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/net"
  java_package "java.net"
  classview 141467 "net"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 235163 "ServerSocket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements server sockets. A server socket waits for 
requests to come in over the network. It performs some operation 
based on that request, and then possibly returns a result to the requester.
<p>
The actual work of the server socket is performed by an instance 
of the <code>SocketImpl</code> class. An application can 
change the socket factory that creates the socket 
implementation to configure itself to create sockets 
appropriate to the local firewall. 

@author  unascribed
@version 1.86, 05/24/04
@see     java.net.SocketImpl
@see     java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory)
@see     java.nio.channels.ServerSocketChannel
@since   JDK1.0"
      attribute 2783643 "created"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Various states of this socket.
"
      end

      attribute 2783771 "bound"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2783899 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2784027 "closeLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1817499 // impl (<unidirectional association>)
	relation 1817499 --->
	  a role_name "impl" private
	    comment "
The implementation of this Socket.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817499 // impl (<unidirectional association>)
	  b parent class_ref 931099 // SocketImpl
      end

      attribute 2784155 "oldImpl"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Are we using an older SocketImpl?
"
      end

      operation 7240475 "ServerSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unbound server socket.

@exception IOException IO error when opening the socket.
@revised 1.4"
      end

      operation 7240603 "ServerSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a server socket, bound to the specified port. A port of 
<code>0</code> creates a socket on any free port. 
<p>
The maximum queue length for incoming connection indications (a 
request to connect) is set to <code>50</code>. If a connection 
indication arrives when the queue is full, the connection is refused.
<p>
If the application has specified a server socket factory, that 
factory's <code>createSocketImpl</code> method is called to create 
the actual socket implementation. Otherwise a \"plain\" socket is created.
<p>
If there is a security manager, 
its <code>checkListen</code> method is called
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.


@param      port  the port number, or <code>0</code> to use any
                  free port.

@exception  IOException  if an I/O error occurs when opening the socket.
@exception  SecurityException
if a security manager exists and its <code>checkListen</code> 
method doesn't allow the operation.

@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory)
@see        SecurityManager#checkListen"
      end

      operation 7240731 "ServerSocket"
	public explicit_return_type ""
	nparams 2
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a server socket and binds it to the specified local port 
number, with the specified backlog. 
A port number of <code>0</code> creates a socket on any 
free port. 
<p>
The maximum queue length for incoming connection indications (a 
request to connect) is set to the <code>backlog</code> parameter. If 
a connection indication arrives when the queue is full, the 
connection is refused. 
<p>
If the application has specified a server socket factory, that 
factory's <code>createSocketImpl</code> method is called to create 
the actual socket implementation. Otherwise a \"plain\" socket is created.
<p>
If there is a security manager, 
its <code>checkListen</code> method is called
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

<P>The <code>backlog</code> argument must be a positive
value greater than 0. If the value passed if equal or less
than 0, then the default value will be assumed.
<P>

@param      port     the specified port, or <code>0</code> to use
                     any free port.
@param      backlog  the maximum length of the queue.

@exception  IOException  if an I/O error occurs when opening the socket.
@exception  SecurityException
if a security manager exists and its <code>checkListen</code> 
method doesn't allow the operation.

@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory)
@see        SecurityManager#checkListen"
      end

      operation 7240859 "ServerSocket"
	public explicit_return_type ""
	nparams 3
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	  param inout name "bindAddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a server with the specified port, listen backlog, and 
local IP address to bind to.  The <i>bindAddr</i> argument
can be used on a multi-homed host for a ServerSocket that
will only accept connect requests to one of its addresses.
If <i>bindAddr</i> is null, it will default accepting
connections on any/all local addresses.
The port must be between 0 and 65535, inclusive.

<P>If there is a security manager, this method 
calls its <code>checkListen</code> method
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

<P>The <code>backlog</code> argument must be a positive
value greater than 0. If the value passed if equal or less
than 0, then the default value will be assumed.
<P>
@param port the local TCP port
@param backlog the listen backlog
@param bindAddr the local InetAddress the server will bind to

@throws  SecurityException if a security manager exists and 
its <code>checkListen</code> method doesn't allow the operation.

@throws  IOException if an I/O error occurs when opening the socket.

@see SocketOptions
@see SocketImpl
@see SecurityManager#checkListen
@since   JDK1.1"
      end

      operation 7240987 "getImpl"
	package return_type class_ref 931099 // SocketImpl
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>SocketImpl</code> attached to this socket, creating
it if necessary.

@return	the <code>SocketImpl</code> attached to that ServerSocket.
@throws SocketException if creation fails.
@since 1.4"
      end

      operation 7241115 "checkOldImpl"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7241243 "setImpl"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7241371 "createImpl"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the socket implementation.

@throws IOException if creation fails
@since 1.4"
      end

      operation 7241499 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "endpoint" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Binds the <code>ServerSocket</code> to a specific address
(IP address and port number).
<p>
If the address is <code>null</code>, then the system will pick up
an ephemeral port and a valid local address to bind the socket.
<p>
@param	endpoint	The IP address & port number to bind to.
@throws	IOException if the bind operation fails, or if the socket
			   is already bound.
@throws	SecurityException	if a <code>SecurityManager</code> is present and
its <code>checkListen</code> method doesn't allow the operation.
@throws  IllegalArgumentException if endpoint is a
         SocketAddress subclass not supported by this socket
@since 1.4"
      end

      operation 7241627 "bind"
	public explicit_return_type "void"
	nparams 2
	  param inout name "endpoint" type class_ref 927387 // SocketAddress
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Binds the <code>ServerSocket</code> to a specific address
(IP address and port number).
<p>
If the address is <code>null</code>, then the system will pick up
an ephemeral port and a valid local address to bind the socket.
<P>
The <code>backlog</code> argument must be a positive
value greater than 0. If the value passed if equal or less
than 0, then the default value will be assumed.
@param	endpoint	The IP address & port number to bind to.
@param	backlog		The listen backlog length.
@throws	IOException if the bind operation fails, or if the socket
			   is already bound.
@throws	SecurityException	if a <code>SecurityManager</code> is present and
its <code>checkListen</code> method doesn't allow the operation.
@throws  IllegalArgumentException if endpoint is a
         SocketAddress subclass not supported by this socket
@since 1.4"
      end

      operation 7241755 "getInetAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local address of this server socket.

@return  the address to which this socket is bound,
         or <code>null</code> if the socket is unbound."
      end

      operation 7241883 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port on which this socket is listening.

@return  the port number to which this socket is listening or
	        -1 if the socket is not bound yet."
      end

      operation 7242011 "getLocalSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the endpoint this socket is bound to, or
<code>null</code> if it is not bound yet.

@return a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.
@see #getInetAddress()
@see #getLocalPort()
@see #bind(SocketAddress)
@since 1.4"
      end

      operation 7242139 "accept"
	public return_type class_ref 235419 // Socket
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Listens for a connection to be made to this socket and accepts 
it. The method blocks until a connection is made. 

<p>A new Socket <code>s</code> is created and, if there 
is a security manager, 
the security manager's <code>checkAccept</code> method is called
with <code>s.getInetAddress().getHostAddress()</code> and
<code>s.getPort()</code>
as its arguments to ensure the operation is allowed. 
This could result in a SecurityException.

@exception  IOException  if an I/O error occurs when waiting for a
              connection.
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.
@exception  SocketTimeoutException if a timeout was previously set with setSoTimeout and
            the timeout has been reached.
@exception  java.nio.channels.IllegalBlockingModeException
            if this socket has an associated channel, the channel is in
            non-blocking mode, and there is no connection ready to be
            accepted

@return the new Socket
@see SecurityManager#checkAccept
@revised 1.4
@spec JSR-51"
      end

      operation 7242267 "implAccept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 235419 // Socket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses of ServerSocket use this method to override accept()
to return their own subclass of socket.  So a FooServerSocket
will typically hand this method an <i>empty</i> FooSocket.  On
return from implAccept the FooSocket will be connected to a client.

@param s the Socket
@throws java.nio.channels.IllegalBlockingModeException
        if this socket has an associated channel,
        and the channel is in non-blocking mode
@throws IOException if an I/O error occurs when waiting 
for a connection.
@since   JDK1.1
@revised 1.4
@spec JSR-51"
      end

      operation 7242395 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this socket. 

Any thread currently blocked in {@link #accept()} will throw
a {@link SocketException}.

<p> If this socket has an associated channel then the channel is closed
as well.

@exception  IOException  if an I/O error occurs when closing the socket.
@revised 1.4
@spec JSR-51"
      end

      operation 7242523 "getChannel"
	public return_type class_ref 237979 // ServerSocketChannel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.nio.channels.ServerSocketChannel} object
associated with this socket, if any.

<p> A server socket will have a channel if, and only if, the channel
itself was created via the {@link
java.nio.channels.ServerSocketChannel#open ServerSocketChannel.open}
method.

@return  the server-socket channel associated with this socket,
         or <tt>null</tt> if this socket was not created
         for a channel

@since 1.4
@spec JSR-51"
      end

      operation 7242651 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding state of the ServerSocket.

@return true if the ServerSocket succesfuly bound to an address
@since 1.4"
      end

      operation 7242779 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closed state of the ServerSocket.

@return true if the socket has been closed
@since 1.4"
      end

      operation 7242907 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable SO_TIMEOUT with the specified timeout, in
milliseconds.  With this option set to a non-zero timeout,
a call to accept() for this ServerSocket
will block for only this amount of time.  If the timeout expires,
a <B>java.net.SocketTimeoutException</B> is raised, though the
ServerSocket is still valid.  The option <B>must</B> be enabled
prior to entering the blocking operation to have effect.  The 
timeout must be > 0.
A timeout of zero is interpreted as an infinite timeout.  
@param timeout the specified timeout, in milliseconds
@exception SocketException if there is an error in 
the underlying protocol, such as a TCP error. 
@since   JDK1.1
@see #getSoTimeout()"
      end

      operation 7243035 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrive setting for SO_TIMEOUT.  0 returns implies that the
option is disabled (i.e., timeout of infinity).
@return the SO_TIMEOUT value
@exception IOException if an I/O error occurs
@since   JDK1.1
@see #setSoTimeout(int)"
      end

      operation 7243163 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the SO_REUSEADDR socket option.
<p>
When a TCP connection is closed the connection may remain
in a timeout state for a period of time after the connection
is closed (typically known as the <tt>TIME_WAIT</tt> state 
or <tt>2MSL</tt> wait state).
For applications using a well known socket address or port 
it may not be possible to bind a socket to the required
<tt>SocketAddress</tt> if there is a connection in the
timeout state involving the socket address or port. 
<p>
Enabling <tt>SO_REUSEADDR</tt> prior to binding the socket
using {@link #bind(SocketAddress)} allows the socket to be
bound even though a previous connection is in a timeout
state.
<p>
When a <tt>ServerSocket</tt> is created the initial setting
of <tt>SO_REUSEADDR</tt> is not defined. Applications can
use {@link #getReuseAddress()} to determine the initial 
setting of <tt>SO_REUSEADDR</tt>. 
<p>
The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
disabled after a socket is bound (See {@link #isBound()})
is not defined.

@param on  whether to enable or disable the socket option
@exception SocketException if an error occurs enabling or
           disabling the <tt>SO_RESUEADDR</tt> socket option,
		  or the socket is closed.
@since 1.4
@see #getReuseAddress()     
@see #bind(SocketAddress)
@see #isBound()
@see #isClosed()"
      end

      operation 7243291 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if SO_REUSEADDR is enabled.

@return a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   1.4
@see #setReuseAddress(boolean)"
      end

      operation 7243419 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the implementation address and implementation port of 
this socket as a <code>String</code>.

@return  a string representation of this socket."
      end

      operation 7243547 "setBound"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7243675 "setCreated"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1817627 // factory (<unidirectional association>)
	relation 1817627 --->
	  a role_name "factory" init_value "=  null" class_relation private
	    comment "
The factory for all server sockets.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817627 // factory (<unidirectional association>)
	  b parent class_ref 932251 // SocketImplFactory
      end

      operation 7243803 "setSocketFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 932251 // SocketImplFactory
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the server socket implementation factory for the 
application. The factory can be specified only once. 
<p>
When an application creates a new server socket, the socket 
implementation factory's <code>createSocketImpl</code> method is 
called to create the actual socket implementation. 
<p>
Passing <code>null</code> to the method is a no-op unless the factory
was already set.
<p>
If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param      fac   the desired factory.
@exception  IOException  if an I/O error occurs when setting the
              socket factory.
@exception  SocketException  if the factory has already been defined.
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't allow the operation.
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkSetFactory"
      end

      operation 7243931 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a default proposed value for the SO_RCVBUF option for sockets 
accepted from this <tt>ServerSocket</tt>. The value actually set 
in the accepted socket must be determined by calling 
{@link Socket#getReceiveBufferSize()} after the socket 
is returned by {@link #accept()}. 
<p>
The value of SO_RCVBUF is used both to set the size of the internal
socket receive buffer, and to set the size of the TCP receive window
that is advertized to the remote peer.
<p>
It is possible to change the value subsequently, by calling 
{@link Socket#setReceiveBufferSize(int)}. However, if the application 
wishes to allow a receive window larger than 64K bytes, as defined by RFC1323
then the proposed value must be set in the ServerSocket <B>before</B> 
it is bound to a local address. This implies, that the ServerSocket must be 
created with the no-argument constructor, then setReceiveBufferSize() must 
be called and lastly the ServerSocket is bound to an address by calling bind(). 
<p>
Failure to do this will not cause an error, and the buffer size may be set to the
requested value but the TCP receive window in sockets accepted from 
this ServerSocket will be no larger than 64K bytes.

@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 

@param size the size to which to set the receive buffer
size. This value must be greater than 0.

@exception IllegalArgumentException if the 
value is 0 or is negative.

@since 1.4
@see #getReceiveBufferSize"
      end

      operation 7244059 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the SO_RCVBUF option for this <tt>ServerSocket</tt>, 
that is the proposed buffer size that will be used for Sockets accepted
from this <tt>ServerSocket</tt>.

<p>Note, the value actually set in the accepted socket is determined by
calling {@link Socket#getReceiveBufferSize()}.
@return the value of the SO_RCVBUF option for this <tt>Socket</tt>.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@see #setReceiveBufferSize(int)
@since 1.4"
      end

      operation 7244187 "setPerformancePreferences"
	public explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preferences for this ServerSocket.

<p> Sockets use the TCP/IP protocol by default.  Some implementations
may offer alternative protocols which have different performance
characteristics than TCP/IP.  This method allows the application to
express its own preferences as to how these tradeoffs should be made
when the implementation chooses from the available protocols.

<p> Performance preferences are described by three integers
whose values indicate the relative importance of short connection time,
low latency, and high bandwidth.  The absolute values of the integers
are irrelevant; in order to choose a protocol the values are simply
compared, with larger values indicating stronger preferences.  If the
application prefers short connection time over both low latency and high
bandwidth, for example, then it could invoke this method with the values
<tt>(1, 0, 0)</tt>.  If the application prefers high bandwidth above low
latency, and low latency above short connection time, then it could
invoke this method with the values <tt>(0, 1, 2)</tt>.

<p> Invoking this method after this socket has been bound
will have no effect. This implies that in order to use this capability
requires the socket to be created with the no-argument constructor.

@param  connectionTime
        An <tt>int</tt> expressing the relative importance of a short
        connection time

@param  latency
        An <tt>int</tt> expressing the relative importance of low
        latency

@param  bandwidth
        An <tt>int</tt> expressing the relative importance of high
        bandwidth

@since 1.5"
      end
    end

    class 235419 "Socket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements client sockets (also called just
\"sockets\"). A socket is an endpoint for communication
between two machines.
<p>
The actual work of the socket is performed by an instance of the
<code>SocketImpl</code> class. An application, by changing
the socket factory that creates the socket implementation,
can configure itself to create sockets appropriate to the local
firewall.

@author  unascribed
@version 1.112, 09/11/07
@see     java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)
@see     java.net.SocketImpl
@see     java.nio.channels.SocketChannel
@since   JDK1.0"
      attribute 2784283 "created"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Various states of this socket.
"
      end

      attribute 2784411 "bound"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2784539 "connected"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2784667 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2784795 "closeLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2784923 "shutIn"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2785051 "shutOut"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1817755 // impl (<unidirectional association>)
	relation 1817755 --->
	  a role_name "impl" package
	    comment "
The implementation of this Socket.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817755 // impl (<unidirectional association>)
	  b parent class_ref 931099 // SocketImpl
      end

      attribute 2785179 "oldImpl"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Are we using an older SocketImpl?
"
      end

      operation 7244315 "Socket"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unconnected socket, with the
system-default type of SocketImpl.

@since   JDK1.1
@revised 1.4"
      end

      operation 7244443 "Socket"
	public explicit_return_type ""
	nparams 1
	  param inout name "proxy" type class_ref 931611 // Proxy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unconnected socket, specifying the type of proxy, if any,
that should be used regardless of any other settings.
<P>
If there is a security manager, its <code>checkConnect</code> method
is called with the proxy host address and port number
as its arguments. This could result in a SecurityException.
<P>
Examples: 
<UL> <LI><code>Socket s = new Socket(Proxy.NO_PROXY);</code> will create
a plain socket ignoring any other proxy configuration.</LI>
<LI><code>Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(\"socks.mydom.com\", 1080)));</code>
will create a socket connecting through the specified SOCKS proxy
server.</LI>
</UL>

@param proxy a {@link java.net.Proxy Proxy} object specifying what kind
		    of proxying should be used.
@throws IllegalArgumentException if the proxy is of an invalid type 
		or <code>null</code>.
@throws SecurityException if a security manager is present and
				 permission to connect to the proxy is
				 denied.
@see java.net.ProxySelector
@see java.net.Proxy

@since   1.5"
      end

      operation 7244571 "Socket"
	protected explicit_return_type ""
	nparams 1
	  param inout name "impl" type class_ref 931099 // SocketImpl
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unconnected Socket with a user-specified
SocketImpl.
<P>
@param impl an instance of a <B>SocketImpl</B>
the subclass wishes to use on the Socket.

@exception SocketException if there is an error in the underlying protocol,     
such as a TCP error. 
@since   JDK1.1"
      end

      operation 7244699 "Socket"
	public explicit_return_type ""
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 272667 // UnknownHostException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a stream socket and connects it to the specified port
number on the named host.
<p>
If the specified host is <tt>null</tt> it is the equivalent of
specifying the address as <tt>{@link java.net.InetAddress#getByName InetAddress.getByName}(null)</tt>.
In other words, it is equivalent to specifying an address of the 
loopback interface. </p>
<p>
If the application has specified a server socket factory, that
factory's <code>createSocketImpl</code> method is called to create
the actual socket implementation. Otherwise a \"plain\" socket is created.
<p>
If there is a security manager, its
<code>checkConnect</code> method is called
with the host address and <code>port</code> 
as its arguments. This could result in a SecurityException.

@param      host   the host name, or <code>null</code> for the loopback address.
@param      port   the port number.

@exception  UnknownHostException if the IP address of 
the host could not be determined.

@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)
@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkConnect"
      end

      operation 7244827 "Socket"
	public explicit_return_type ""
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a stream socket and connects it to the specified port
number at the specified IP address.
<p>
If the application has specified a socket factory, that factory's
<code>createSocketImpl</code> method is called to create the
actual socket implementation. Otherwise a \"plain\" socket is created.
<p>
If there is a security manager, its
<code>checkConnect</code> method is called
with the host address and <code>port</code> 
as its arguments. This could result in a SecurityException.

@param      address   the IP address.
@param      port      the port number.
@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)
@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkConnect"
      end

      operation 7244955 "Socket"
	public explicit_return_type ""
	nparams 4
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "localAddr" type class_ref 530715 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket and connects it to the specified remote host on
the specified remote port. The Socket will also bind() to the local
address and port supplied.
<p>
If the specified host is <tt>null</tt> it is the equivalent of
specifying the address as <tt>{@link java.net.InetAddress#getByName InetAddress.getByName}(null)</tt>.
In other words, it is equivalent to specifying an address of the 
loopback interface. </p>
<p>
If there is a security manager, its
<code>checkConnect</code> method is called
with the host address and <code>port</code> 
as its arguments. This could result in a SecurityException.

@param host the name of the remote host, or <code>null</code> for the loopback address.
@param port the remote port
@param localAddr the local address the socket is bound to
@param localPort the local port the socket is bound to
@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        SecurityManager#checkConnect
@since   JDK1.1"
      end

      operation 7245083 "Socket"
	public explicit_return_type ""
	nparams 4
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "localAddr" type class_ref 530715 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket and connects it to the specified remote address on
the specified remote port. The Socket will also bind() to the local
address and port supplied.
<p>
If there is a security manager, its
<code>checkConnect</code> method is called
with the host address and <code>port</code> 
as its arguments. This could result in a SecurityException.

@param address the remote address
@param port the remote port
@param localAddr the local address the socket is bound to
@param localPort the local port the socket is bound to
@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        SecurityManager#checkConnect
@since   JDK1.1"
      end

      operation 7245211 "Socket"
	public explicit_return_type ""
	nparams 3
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a stream socket and connects it to the specified port
number on the named host.
<p>
If the specified host is <tt>null</tt> it is the equivalent of
specifying the address as <tt>{@link java.net.InetAddress#getByName InetAddress.getByName}(null)</tt>.
In other words, it is equivalent to specifying an address of the 
loopback interface. </p>
<p>
If the stream argument is <code>true</code>, this creates a
stream socket. If the stream argument is <code>false</code>, it
creates a datagram socket.
<p>
If the application has specified a server socket factory, that
factory's <code>createSocketImpl</code> method is called to create
the actual socket implementation. Otherwise a \"plain\" socket is created.
<p>
If there is a security manager, its
<code>checkConnect</code> method is called
with the host address and <code>port</code> 
as its arguments. This could result in a SecurityException.
<p>
If a UDP socket is used, TCP/IP related socket options will not apply.

@param      host     the host name, or <code>null</code> for the loopback address.
@param      port     the port number.
@param      stream   a <code>boolean</code> indicating whether this is
                     a stream socket or a datagram socket.
@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)
@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkConnect
@deprecated Use DatagramSocket instead for UDP transport."
      end

      operation 7245339 "Socket"
	public explicit_return_type ""
	nparams 3
	  param inout name "host" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a socket and connects it to the specified port number at
the specified IP address.
<p>
If the stream argument is <code>true</code>, this creates a
stream socket. If the stream argument is <code>false</code>, it
creates a datagram socket.
<p>
If the application has specified a server socket factory, that
factory's <code>createSocketImpl</code> method is called to create
the actual socket implementation. Otherwise a \"plain\" socket is created.

<p>If there is a security manager, its
<code>checkConnect</code> method is called
with <code>host.getHostAddress()</code> and <code>port</code> 
as its arguments. This could result in a SecurityException.
<p>
If UDP socket is used, TCP/IP related socket options will not apply.

@param      host     the IP address.
@param      port      the port number.
@param      stream    if <code>true</code>, create a stream socket;
                      otherwise, create a datagram socket.
@exception  IOException  if an I/O error occurs when creating the socket.
@exception  SecurityException  if a security manager exists and its  
            <code>checkConnect</code> method doesn't allow the operation.
@see        java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory)
@see        java.net.SocketImpl
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkConnect
@deprecated Use DatagramSocket instead for UDP transport."
      end

      operation 7245467 "Socket"
	private explicit_return_type ""
	nparams 3
	  param inout name "address" type class_ref 927387 // SocketAddress
	  param inout name "localAddr" type class_ref 927387 // SocketAddress
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7245595 "createImpl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the socket implementation.

@param stream a <code>boolean</code> value : <code>true</code> for a TCP socket,
		     <code>false</code> for UDP.
@throws IOException if creation fails
@since 1.4"
      end

      operation 7245723 "checkOldImpl"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7245851 "setImpl"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets impl to the system-default type of SocketImpl.
@since 1.4"
      end

      operation 7245979 "getImpl"
	package return_type class_ref 931099 // SocketImpl
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>SocketImpl</code> attached to this socket, creating
it if necessary.

@return	the <code>SocketImpl</code> attached to that ServerSocket.
@throws SocketException if creation fails
@since 1.4"
      end

      operation 7246107 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "endpoint" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the server.

@param	endpoint the <code>SocketAddress</code>
@throws	IOException if an error occurs during the connection
@throws  java.nio.channels.IllegalBlockingModeException
         if this socket has an associated channel,
         and the channel is in non-blocking mode
@throws  IllegalArgumentException if endpoint is null or is a
         SocketAddress subclass not supported by this socket
@since 1.4
@spec JSR-51"
      end

      operation 7246235 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "endpoint" type class_ref 927387 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the server with a specified timeout value.
A timeout of zero is interpreted as an infinite timeout. The connection
will then block until established or an error occurs.

@param	endpoint the <code>SocketAddress</code>
@param	timeout  the timeout value to be used in milliseconds.
@throws	IOException if an error occurs during the connection
@throws	SocketTimeoutException if timeout expires before connecting
@throws  java.nio.channels.IllegalBlockingModeException
         if this socket has an associated channel,
         and the channel is in non-blocking mode
@throws  IllegalArgumentException if endpoint is null or is a
         SocketAddress subclass not supported by this socket
@since 1.4
@spec JSR-51"
      end

      operation 7246363 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bindpoint" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds the socket to a local address.
<P>
If the address is <code>null</code>, then the system will pick up
an ephemeral port and a valid local address to bind the socket.

@param	bindpoint the <code>SocketAddress</code> to bind to
@throws	IOException if the bind operation fails, or if the socket
			   is already bound.
@throws  IllegalArgumentException if bindpoint is a
         SocketAddress subclass not supported by this socket

@since	1.4
@see #isBound"
      end

      operation 7246491 "postAccept"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "set the flags after an accept() call."
      end

      operation 7246619 "setCreated"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7246747 "setBound"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7246875 "setConnected"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7247003 "getInetAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address to which the socket is connected.

@return  the remote IP address to which this socket is connected,
		or <code>null</code> if the socket is not connected."
      end

      operation 7247131 "getLocalAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local address to which the socket is bound.

@return the local address to which the socket is bound or 
	       <code>InetAddress.anyLocalAddress()</code>
	       if the socket is not bound yet.
@since   JDK1.1"
      end

      operation 7247259 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the remote port to which this socket is connected.

@return  the remote port number to which this socket is connected, or
	        0 if the socket is not connected yet."
      end

      operation 7247387 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local port to which this socket is bound.

@return  the local port number to which this socket is bound or -1
	        if the socket is not bound yet."
      end

      operation 7247515 "getRemoteSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the endpoint this socket is connected to, or
<code>null</code> if it is unconnected.
@return a <code>SocketAddress</code> reprensenting the remote endpoint of this
	       socket, or <code>null</code> if it is not connected yet.
@see #getInetAddress()
@see #getPort()
@see #connect(SocketAddress, int)
@see #connect(SocketAddress)
@since 1.4"
      end

      operation 7247643 "getLocalSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the endpoint this socket is bound to, or
<code>null</code> if it is not bound yet.

@return a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.
@see #getLocalAddress()
@see #getLocalPort()
@see #bind(SocketAddress)
@since 1.4"
      end

      operation 7247771 "getChannel"
	public return_type class_ref 238747 // SocketChannel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.nio.channels.SocketChannel SocketChannel}
object associated with this socket, if any.

<p> A socket will have a channel if, and only if, the channel itself was
created via the {@link java.nio.channels.SocketChannel#open
SocketChannel.open} or {@link
java.nio.channels.ServerSocketChannel#accept ServerSocketChannel.accept}
methods.

@return  the socket channel associated with this socket,
         or <tt>null</tt> if this socket was not created
         for a channel

@since 1.4
@spec JSR-51"
      end

      operation 7247899 "getInputStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for this socket.

<p> If this socket has an associated channel then the resulting input
stream delegates all of its operations to the channel.  If the channel
is in non-blocking mode then the input stream's <tt>read</tt> operations
will throw an {@link java.nio.channels.IllegalBlockingModeException}.

<p>Under abnormal conditions the underlying connection may be
broken by the remote host or the network software (for example
a connection reset in the case of TCP connections). When a
broken connection is detected by the network software the
following applies to the returned input stream :-

<ul>

  <li><p>The network software may discard bytes that are buffered
  by the socket. Bytes that aren't discarded by the network 
  software can be read using {@link java.io.InputStream#read read}.

  <li><p>If there are no bytes buffered on the socket, or all
  buffered bytes have been consumed by  
  {@link java.io.InputStream#read read}, then all subsequent
  calls to {@link java.io.InputStream#read read} will throw an 
  {@link java.io.IOException IOException}. 

  <li><p>If there are no bytes buffered on the socket, and the
  socket has not been closed using {@link #close close}, then
  {@link java.io.InputStream#available available} will
  return <code>0</code>.

</ul>

@return     an input stream for reading bytes from this socket.
@exception  IOException  if an I/O error occurs when creating the
            input stream, the socket is closed, the socket is
            not connected, or the socket input has been shutdown
            using {@link #shutdownInput()}

@revised 1.4
@spec JSR-51"
      end

      operation 7248027 "getOutputStream"
	public return_type class_ref 183835 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an output stream for this socket.

<p> If this socket has an associated channel then the resulting output
stream delegates all of its operations to the channel.  If the channel
is in non-blocking mode then the output stream's <tt>write</tt>
operations will throw an {@link
java.nio.channels.IllegalBlockingModeException}.

@return     an output stream for writing bytes to this socket.
@exception  IOException  if an I/O error occurs when creating the
              output stream or if the socket is not connected.
@revised 1.4
@spec JSR-51"
      end

      operation 7248155 "setTcpNoDelay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).

@param on <code>true</code> to enable TCP_NODELAY, 
<code>false</code> to disable.

@exception SocketException if there is an error 
in the underlying protocol, such as a TCP error.

@since   JDK1.1

@see #getTcpNoDelay()"
      end

      operation 7248283 "getTcpNoDelay"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if TCP_NODELAY is enabled.

@return a <code>boolean</code> indicating whether or not TCP_NODELAY is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   JDK1.1
@see #setTcpNoDelay(boolean)"
      end

      operation 7248411 "setSoLinger"
	public explicit_return_type "void"
	nparams 2
	  param inout name "on" explicit_type "boolean"
	  param in name "linger" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable SO_LINGER with the specified linger time in seconds. 
The maximum timeout value is platform specific.

The setting only affects socket close.

@param on     whether or not to linger on.
@param linger how long to linger for, if on is true.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@exception IllegalArgumentException if the linger value is negative.
@since JDK1.1
@see #getSoLinger()"
      end

      operation 7248539 "getSoLinger"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns setting for SO_LINGER. -1 returns implies that the
option is disabled.

The setting only affects socket close.

@return the setting for SO_LINGER.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   JDK1.1
@see #setSoLinger(boolean, int)"
      end

      operation 7248667 "sendUrgentData"
	public explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send one byte of urgent data on the socket. The byte to be sent is the lowest eight
bits of the data parameter. The urgent byte is
sent after any preceding writes to the socket OutputStream
and before any future writes to the OutputStream.
@param data The byte of data to send
@exception IOException if there is an error
 sending the data.
@since 1.4"
      end

      operation 7248795 "setOOBInline"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable OOBINLINE (receipt of TCP urgent data)

By default, this option is disabled and TCP urgent data received on a 
socket is silently discarded. If the user wishes to receive urgent data, then
this option must be enabled. When enabled, urgent data is received
inline with normal data. 
<p>
Note, only limited support is provided for handling incoming urgent 
data. In particular, no notification of incoming urgent data is provided 
and there is no capability to distinguish between normal data and urgent
data unless provided by a higher level protocol.

@param on <code>true</code> to enable OOBINLINE, 
<code>false</code> to disable.

@exception SocketException if there is an error 
in the underlying protocol, such as a TCP error.

@since   1.4

@see #getOOBInline()"
      end

      operation 7248923 "getOOBInline"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if OOBINLINE is enabled.

@return a <code>boolean</code> indicating whether or not OOBINLINE is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   1.4
@see #setOOBInline(boolean)"
      end

      operation 7249051 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enable/disable SO_TIMEOUT with the specified timeout, in
 milliseconds.  With this option set to a non-zero timeout,
 a read() call on the InputStream associated with this Socket
 will block for only this amount of time.  If the timeout expires,
 a <B>java.net.SocketTimeoutException</B> is raised, though the
 Socket is still valid. The option <B>must</B> be enabled
 prior to entering the blocking operation to have effect. The
 timeout must be > 0.
 A timeout of zero is interpreted as an infinite timeout.
@param timeout the specified timeout, in milliseconds.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   JDK 1.1
@see #getSoTimeout()"
      end

      operation 7249179 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns setting for SO_TIMEOUT.  0 returns implies that the
option is disabled (i.e., timeout of infinity).
@return the setting for SO_TIMEOUT
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   JDK1.1
@see #setSoTimeout(int)"
      end

      operation 7249307 "setSendBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SO_SNDBUF option to the specified value for this
<tt>Socket</tt>. The SO_SNDBUF option is used by the platform's
networking code as a hint for the size to set
the underlying network I/O buffers.

<p>Because SO_SNDBUF is a hint, applications that want to
verify what size the buffers were set to should call
{@link #getSendBufferSize()}.

@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 

@param size the size to which to set the send buffer
size. This value must be greater than 0.

@exception IllegalArgumentException if the 
value is 0 or is negative.

@see #getSendBufferSize()
@since 1.2"
      end

      operation 7249435 "getSendBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of the SO_SNDBUF option for this <tt>Socket</tt>, 
that is the buffer size used by the platform 
for output on this <tt>Socket</tt>.
@return the value of the SO_SNDBUF option for this <tt>Socket</tt>.

@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 

@see #setSendBufferSize(int)
@since 1.2"
      end

      operation 7249563 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SO_RCVBUF option to the specified value for this
<tt>Socket</tt>. The SO_RCVBUF option is used by the platform's
networking code as a hint for the size to set
the underlying network I/O buffers.

<p>Increasing the receive buffer size can increase the performance of
network I/O for high-volume connection, while decreasing it can
help reduce the backlog of incoming data. 

<p>Because SO_RCVBUF is a hint, applications that want to
verify what size the buffers were set to should call
{@link #getReceiveBufferSize()}.

<p>The value of SO_RCVBUF is also used to set the TCP receive window
that is advertized to the remote peer. Generally, the window size
can be modified at any time when a socket is connected. However, if
a receive window larger than 64K is required then this must be requested
<B>before</B> the socket is connected to the remote peer. There are two
cases to be aware of:<p>
<ol>
<li>For sockets accepted from a ServerSocket, this must be done by calling
{@link ServerSocket#setReceiveBufferSize(int)} before the ServerSocket 
is bound to a local address.<p></li>
<li>For client sockets, setReceiveBufferSize() must be called before
connecting the socket to its remote peer.<p></li></ol>
@param size the size to which to set the receive buffer
size. This value must be greater than 0.

@exception IllegalArgumentException if the value is 0 or is
negative.

@exception SocketException if there is an error
in the underlying protocol, such as a TCP error.

@see #getReceiveBufferSize()
@see ServerSocket#setReceiveBufferSize(int)
@since 1.2"
      end

      operation 7249691 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the SO_RCVBUF option for this <tt>Socket</tt>, 
that is the buffer size used by the platform for 
input on this <tt>Socket</tt>.

@return the value of the SO_RCVBUF option for this <tt>Socket</tt>.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@see #setReceiveBufferSize(int)
@since 1.2"
      end

      operation 7249819 "setKeepAlive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable SO_KEEPALIVE.

@param on     whether or not to have socket keep alive turned on.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since 1.3 
@see #getKeepAlive()"
      end

      operation 7249947 "getKeepAlive"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if SO_KEEPALIVE is enabled.

@return a <code>boolean</code> indicating whether or not SO_KEEPALIVE is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   1.3
@see #setKeepAlive(boolean)"
      end

      operation 7250075 "setTrafficClass"
	public explicit_return_type "void"
	nparams 1
	  param in name "tc" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets traffic class or type-of-service octet in the IP
header for packets sent from this Socket.
As the underlying network implementation may ignore this
value applications should consider it a hint.

<P> The tc <B>must</B> be in the range <code> 0 <= tc <=
255</code> or an IllegalArgumentException will be thrown.
<p>Notes:
<p> for Internet Protocol v4 the value consists of an octet
with precedence and TOS fields as detailed in RFC 1349. The
TOS field is bitset created by bitwise-or'ing values such
the following :-
<p>
<UL>
<LI><CODE>IPTOS_LOWCOST (0x02)</CODE></LI>
<LI><CODE>IPTOS_RELIABILITY (0x04)</CODE></LI>
<LI><CODE>IPTOS_THROUGHPUT (0x08)</CODE></LI>
<LI><CODE>IPTOS_LOWDELAY (0x10)</CODE></LI>
</UL>
The last low order bit is always ignored as this
corresponds to the MBZ (must be zero) bit.
<p>
Setting bits in the precedence field may result in a
SocketException indicating that the operation is not
permitted.
<p>
for Internet Protocol v6 <code>tc</code> is the value that
would be placed into the sin6_flowinfo field of the IP header.

@param tc        an <code>int</code> value for the bitset.
@throws SocketException if there is an error setting the
traffic class or type-of-service
@since 1.4
@see #getTrafficClass"
      end

      operation 7250203 "getTrafficClass"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets traffic class or type-of-service in the IP header
for packets sent from this Socket
<p>
As the underlying network implementation may ignore the
traffic class or type-of-service set using {@link #setTrafficClass(int)}
this method may return a different value than was previously
set using the {@link #setTrafficClass(int)} method on this Socket.

@return the traffic class or type-of-service already set
@throws SocketException if there is an error obtaining the
traffic class or type-of-service value.
@since 1.4
@see #setTrafficClass(int)"
      end

      operation 7250331 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the SO_REUSEADDR socket option.
<p>
When a TCP connection is closed the connection may remain
in a timeout state for a period of time after the connection
is closed (typically known as the <tt>TIME_WAIT</tt> state
or <tt>2MSL</tt> wait state).
For applications using a well known socket address or port 
it may not be possible to bind a socket to the required
<tt>SocketAddress</tt> if there is a connection in the
timeout state involving the socket address or port.
<p>
Enabling <tt>SO_REUSEADDR</tt> prior to binding the socket
using {@link #bind(SocketAddress)} allows the socket to be
bound even though a previous connection is in a timeout
state.
<p>
When a <tt>Socket</tt> is created the initial setting
of <tt>SO_REUSEADDR</tt> is disabled.
<p>
The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
disabled after a socket is bound (See {@link #isBound()})
is not defined.

@param on  whether to enable or disable the socket option
@exception SocketException if an error occurs enabling or
           disabling the <tt>SO_RESUEADDR</tt> socket option,
		  or the socket is closed.
@since 1.4
@see #getReuseAddress()     
@see #bind(SocketAddress)
@see #isClosed()
@see #isBound()"
      end

      operation 7250459 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if SO_REUSEADDR is enabled.

@return a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as a TCP error. 
@since   1.4
@see #setReuseAddress(boolean)"
      end

      operation 7250587 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this socket.
<p>
Any thread currently blocked in an I/O operation upon this socket
will throw a {@link SocketException}.
<p>
Once a socket has been closed, it is not available for further networking
use (i.e. can't be reconnected or rebound). A new socket needs to be
created.

<p> If this socket has an associated channel then the channel is closed
as well.

@exception  IOException  if an I/O error occurs when closing this socket.
@revised 1.4
@spec JSR-51
@see #isClosed"
      end

      operation 7250715 "shutdownInput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Places the input stream for this socket at \"end of stream\".
Any data sent to the input stream side of the socket is acknowledged
and then silently discarded.
<p>
If you read from a socket input stream after invoking 
shutdownInput() on the socket, the stream will return EOF.

@exception IOException if an I/O error occurs when shutting down this
socket.

@since 1.3
@see java.net.Socket#shutdownOutput()
@see java.net.Socket#close()
@see java.net.Socket#setSoLinger(boolean, int)
@see #isInputShutdown"
      end

      operation 7250843 "shutdownOutput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the output stream for this socket.
For a TCP socket, any previously written data will be sent
followed by TCP's normal connection termination sequence.

If you write to a socket output stream after invoking 
shutdownOutput() on the socket, the stream will throw 
an IOException.

@exception IOException if an I/O error occurs when shutting down this
socket.

@since 1.3
@see java.net.Socket#shutdownInput()
@see java.net.Socket#close()
@see java.net.Socket#setSoLinger(boolean, int)
@see #isOutputShutdown"
      end

      operation 7250971 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this socket to a <code>String</code>.

@return  a string representation of this socket."
      end

      operation 7251099 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the connection state of the socket.

@return true if the socket successfuly connected to a server
@since 1.4"
      end

      operation 7251227 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding state of the socket.

@return true if the socket successfuly bound to an address
@since 1.4
@see #bind"
      end

      operation 7251355 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closed state of the socket.

@return true if the socket has been closed
@since 1.4
@see #close"
      end

      operation 7251483 "isInputShutdown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the read-half of the socket connection is closed.

@return true if the input of the socket has been shutdown
@since 1.4
@see #shutdownInput"
      end

      operation 7251611 "isOutputShutdown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the write-half of the socket connection is closed.

@return true if the output of the socket has been shutdown
@since 1.4
@see #shutdownOutput"
      end

      classrelation 1817883 // factory (<unidirectional association>)
	relation 1817883 --->
	  a role_name "factory" init_value "=  null" class_relation private
	    comment "
The factory for all client sockets.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817883 // factory (<unidirectional association>)
	  b parent class_ref 932251 // SocketImplFactory
      end

      operation 7251739 "setSocketImplFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 932251 // SocketImplFactory
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the client socket implementation factory for the
application. The factory can be specified only once.
<p>
When an application creates a new client socket, the socket
implementation factory's <code>createSocketImpl</code> method is
called to create the actual socket implementation.
<p>
Passing <code>null</code> to the method is a no-op unless the factory
was already set.
<p>If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param      fac   the desired factory.
@exception  IOException  if an I/O error occurs when setting the
              socket factory.
@exception  SocketException  if the factory is already defined.
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't allow the operation.
@see        java.net.SocketImplFactory#createSocketImpl()
@see        SecurityManager#checkSetFactory"
      end

      operation 7251867 "setPerformancePreferences"
	public explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preferences for this socket.

<p> Sockets use the TCP/IP protocol by default.  Some implementations
may offer alternative protocols which have different performance
characteristics than TCP/IP.  This method allows the application to
express its own preferences as to how these tradeoffs should be made
when the implementation chooses from the available protocols.

<p> Performance preferences are described by three integers
whose values indicate the relative importance of short connection time,
low latency, and high bandwidth.  The absolute values of the integers
are irrelevant; in order to choose a protocol the values are simply
compared, with larger values indicating stronger preferences. Negative
values represent a lower priority than positive values. If the
application prefers short connection time over both low latency and high
bandwidth, for example, then it could invoke this method with the values
<tt>(1, 0, 0)</tt>.  If the application prefers high bandwidth above low
latency, and low latency above short connection time, then it could
invoke this method with the values <tt>(0, 1, 2)</tt>.

<p> Invoking this method after this socket has been connected
will have no effect.

@param  connectionTime
        An <tt>int</tt> expressing the relative importance of a short
        connection time

@param  latency
        An <tt>int</tt> expressing the relative importance of low
        latency

@param  bandwidth
        An <tt>int</tt> expressing the relative importance of high
        bandwidth
 
@since 1.5"
      end
    end

    class 269467 "URL"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class <code>URL</code> represents a Uniform Resource
Locator, a pointer to a \"resource\" on the World
Wide Web. A resource can be something as simple as a file or a
directory, or it can be a reference to a more complicated object,
such as a query to a database or to a search engine. More
information on the types of URLs and their formats can be found at:
<blockquote>
    <a href=\"http://archive.ncsa.uiuc.edu/SDG/Software/Mosaic/Demo/url-primer.html\">
   <i>http://archive.ncsa.uiuc.edu/SDG/Software/Mosaic/Demo/url-primer.html</i></a>
</blockquote>
<p>
In general, a URL can be broken into several parts. The previous
example of a URL indicates that the protocol to use is
<code>http</code> (HyperText Transfer Protocol) and that the
information resides on a host machine named
<code>www.ncsa.uiuc.edu</code>. The information on that host
machine is named <code>/SDG/Software/Mosaic/Demo/url-primer.html</code>. The exact
meaning of this name on the host machine is both protocol
dependent and host dependent. The information normally resides in
a file, but it could be generated on the fly. This component of
the URL is called the <i>path</i> component.
<p>
A URL can optionally specify a \"port\", which is the
port number to which the TCP connection is made on the remote host
machine. If the port is not specified, the default port for
the protocol is used instead. For example, the default port for
<code>http</code> is <code>80</code>. An alternative port could be
specified as:
<blockquote><pre>
    http://archive.ncsa.uiuc.edu:80/SDG/Software/Mosaic/Demo/url-primer.html
</pre></blockquote>
<p>
The syntax of <code>URL</code> is defined by  <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\"\"><i>RFC&nbsp;2396: Uniform
Resource Identifiers (URI): Generic Syntax</i></a>, amended by <a
href=\"http://www.ietf.org/rfc/rfc2732.txt\"><i>RFC&nbsp;2732: Format for
Literal IPv6 Addresses in URLs</i></a>. The Literal IPv6 address format
also supports scope_ids. The syntax and usage of scope_ids is described
<a href=\"Inet6Address.html#scoped\">here</a>.
<p>
A URL may have appended to it a \"fragment\", also known
as a \"ref\" or a \"reference\". The fragment is indicated by the sharp
sign character \"#\" followed by more characters. For example,
<blockquote><pre>
    http://java.sun.com/index.html#chapter1
</pre></blockquote>
<p>
This fragment is not technically part of the URL. Rather, it
indicates that after the specified resource is retrieved, the
application is specifically interested in that part of the
document that has the tag <code>chapter1</code> attached to it. The
meaning of a tag is resource specific.
<p>
An application can also specify a \"relative URL\",
which contains only enough information to reach the resource
relative to another URL. Relative URLs are frequently used within
HTML pages. For example, if the contents of the URL:
<blockquote><pre>
    http://java.sun.com/index.html
</pre></blockquote>
contained within it the relative URL:
<blockquote><pre>
    FAQ.html
</pre></blockquote>
it would be a shorthand for:
<blockquote><pre>
    http://java.sun.com/FAQ.html
</pre></blockquote>
<p>
The relative URL need not specify all the components of a URL. If
the protocol, host name, or port number is missing, the value is
inherited from the fully specified URL. The file component must be
specified. The optional fragment is not inherited.
<p>
The URL class does not itself encode or decode any URL components
according to the escaping mechanism defined in RFC2396. It is the
responsibility of the caller to encode any fields, which need to be
escaped prior to calling URL, and also to decode any escaped fields,
that are returned from URL. Furthermore, because URL has no knowledge
of URL escaping, it does not recognise equivalence between the encoded
or decoded form of the same URL. For example, the two URLs:<br>
<pre>    http://foo.com/hello world/ and http://foo.com/hello%20world</pre>
would be considered not equal to each other.
<p>
Note, the {@link java.net.URI} class does perform escaping of its
component fields in certain circumstances. The recommended way
to manage the encoding and decoding of URLs is to use {@link java.net.URI},
and to convert between these two classes using {@link #toURI()} and
{@link URI#toURL()}.
<p>
The {@link URLEncoder} and {@link URLDecoder} classes can also be
used, but only for HTML form encoding, which is not the same
as the encoding scheme defined in RFC2396.

@author  James Gosling
@version 1.130, 08/25/04
@since JDK1.0 "
      classrelation 1821211 // <realization>
	relation 1821211 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1821211 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2801051 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -7627629688361524110L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2801179 "protocolPathProp"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"java.protocol.handler.pkgs\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The property which specifies the package prefix list to be scanned
for protocol handlers.  The value of this property (if any) should
be a vertical bar delimited list of package names to search through
for a protocol handler to load.  The policy of this class is that
all protocol handlers will be in a class called <protocolname>.Handler,
and each package in the list is examined in turn for a matching
handler.  If none are found (or the property is not specified), the
default package prefix, sun.net.www.protocol, is used.  The search
proceeds from the first package in the list to the last and stops
when a match is found.
"
      end

      attribute 2801307 "protocol"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The protocol to use (ftp, http, nntp, ... etc.) .
@serial
"
      end

      attribute 2801435 "host"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The host name to connect to.
@serial
"
      end

      attribute 2801563 "port"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The protocol port to connect to.
@serial
"
      end

      attribute 2801691 "file"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The specified file name on that host. <code>file</code> is
defined as <code>path[?query]</code>
@serial
"
      end

      attribute 2801819 "query"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The query part of this URL.
"
      end

      attribute 2801947 "authority"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The authority part of this URL.
@serial
"
      end

      attribute 2802075 "path"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The path part of this URL.
"
      end

      attribute 2802203 "userInfo"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The userinfo part of this URL.
"
      end

      attribute 2802331 "ref"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "# reference.
@serial
"
      end

      classrelation 1821339 // hostAddress (<unidirectional association>)
	relation 1821339 --->
	  a role_name "hostAddress" package
	    comment "
The host's IP address, used in equals and hashCode.
Computed on demand. An uninitialized or unknown hostAddress is null.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1821339 // hostAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      classrelation 1821467 // handler (<unidirectional association>)
	relation 1821467 --->
	  a role_name "handler" package
	    comment "
The URLStreamHandler for this URL.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1821467 // handler (<unidirectional association>)
	  b parent class_ref 933275 // URLStreamHandler
      end

      attribute 2802459 "hashCode"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Our hash code.
@serial
"
      end

      operation 7275547 "URL"
	public explicit_return_type ""
	nparams 4
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "file" explicit_type "String"
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>URL</code> object from the specified
<code>protocol</code>, <code>host</code>, <code>port</code>
number, and <code>file</code>.<p>

<code>host</code> can be expressed as a host name or a literal
IP address. If IPv6 literal address is used, it should be
enclosed in square brackets (<tt>'['</tt> and <tt>']'</tt>), as
specified by <a
href=\"http://www.ietf.org/rfc/rfc2732.txt\">RFC&nbsp;2732</a>;
However, the literal IPv6 address format defined in <a
href=\"http://www.ietf.org/rfc/rfc2373.txt\"><i>RFC&nbsp;2373: IP
Version 6 Addressing Architecture</i></a> is also accepted.<p>

Specifying a <code>port</code> number of <code>-1</code>
indicates that the URL should use the default port for the
protocol.<p>

If this is the first URL object being created with the specified
protocol, a <i>stream protocol handler</i> object, an instance of
class <code>URLStreamHandler</code>, is created for that protocol:
<ol>
<li>If the application has previously set up an instance of
    <code>URLStreamHandlerFactory</code> as the stream handler factory,
    then the <code>createURLStreamHandler</code> method of that instance
    is called with the protocol string as an argument to create the
    stream protocol handler.
<li>If no <code>URLStreamHandlerFactory</code> has yet been set up,
    or if the factory's <code>createURLStreamHandler</code> method
    returns <code>null</code>, then the constructor finds the
    value of the system property:
    <blockquote><pre>
        java.protocol.handler.pkgs
    </pre></blockquote>
    If the value of that system property is not <code>null</code>,
    it is interpreted as a list of packages separated by a vertical
    slash character '<code>|</code>'. The constructor tries to load
    the class named:
    <blockquote><pre>
        &lt;<i>package</i>&gt;.&lt;<i>protocol</i>&gt;.Handler
    </pre></blockquote>
    where &lt;<i>package</i>&gt; is replaced by the name of the package
    and &lt;<i>protocol</i>&gt; is replaced by the name of the protocol.
    If this class does not exist, or if the class exists but it is not
    a subclass of <code>URLStreamHandler</code>, then the next package
    in the list is tried.
<li>If the previous step fails to find a protocol handler, then the
    constructor tries to load from a system default package.
    <blockquote><pre>
        &lt;<i>system default package</i>&gt;.&lt;<i>protocol</i>&gt;.Handler
    </pre></blockquote>
    If this class does not exist, or if the class exists but it is not a
    subclass of <code>URLStreamHandler</code>, then a
    <code>MalformedURLException</code> is thrown.
</ol>

<p>Protocol handlers for the following protocols are guaranteed
to exist on the search path :-
<blockquote><pre>
    http, https, ftp, file, and jar
</pre></blockquote>
Protocol handlers for additional protocols may also be
available.

<p>No validation of the inputs is performed by this constructor.

@param      protocol   the name of the protocol to use.
@param      host       the name of the host.
@param      port       the port number on the host.
@param      file       the file on the host
@exception  MalformedURLException  if an unknown protocol is specified.
@see        java.lang.System#getProperty(java.lang.String)
@see        java.net.URL#setURLStreamHandlerFactory(
			java.net.URLStreamHandlerFactory)
@see        java.net.URLStreamHandler
@see        java.net.URLStreamHandlerFactory#createURLStreamHandler(
                 java.lang.String)"
      end

      operation 7275675 "URL"
	public explicit_return_type ""
	nparams 3
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "file" explicit_type "String"
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a URL from the specified <code>protocol</code>
name, <code>host</code> name, and <code>file</code> name. The
default port for the specified protocol is used.
<p>
This method is equivalent to calling the four-argument
constructor with the arguments being <code>protocol</code>,
<code>host</code>, <code>-1</code>, and <code>file</code>.

No validation of the inputs is performed by this constructor.

@param      protocol   the name of the protocol to use.
@param      host       the name of the host.
@param      file       the file on the host.
@exception  MalformedURLException  if an unknown protocol is specified.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
			int, java.lang.String)"
      end

      operation 7275803 "URL"
	public explicit_return_type ""
	nparams 5
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "file" explicit_type "String"
	  param inout name "handler" type class_ref 933275 // URLStreamHandler
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>URL</code> object from the specified
<code>protocol</code>, <code>host</code>, <code>port</code>
number, <code>file</code>, and <code>handler</code>. Specifying
a <code>port</code> number of <code>-1</code> indicates that
the URL should use the default port for the protocol. Specifying
a <code>handler</code> of <code>null</code> indicates that the URL
should use a default stream handler for the protocol, as outlined
for:
    java.net.URL#URL(java.lang.String, java.lang.String, int,
                     java.lang.String)

<p>If the handler is not null and there is a security manager,
the security manager's <code>checkPermission</code>
method is called with a
<code>NetPermission(\"specifyStreamHandler\")</code> permission.
This may result in a SecurityException.

No validation of the inputs is performed by this constructor.

@param      protocol   the name of the protocol to use.
@param      host       the name of the host.
@param      port       the port number on the host.
@param      file       the file on the host
@param	   handler    the stream handler for the URL.
@exception  MalformedURLException  if an unknown protocol is specified.
@exception  SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       specifying a stream handler explicitly.
@see        java.lang.System#getProperty(java.lang.String)
@see        java.net.URL#setURLStreamHandlerFactory(
			java.net.URLStreamHandlerFactory)
@see        java.net.URLStreamHandler
@see        java.net.URLStreamHandlerFactory#createURLStreamHandler(
			java.lang.String)
@see        SecurityManager#checkPermission
@see        java.net.NetPermission"
      end

      operation 7275931 "URL"
	public explicit_return_type ""
	nparams 1
	  param in name "spec" explicit_type "String"
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>URL</code> object from the <code>String</code>
representation.
<p>
This constructor is equivalent to a call to the two-argument
constructor with a <code>null</code> first argument.

@param      spec   the <code>String</code> to parse as a URL.
@exception  MalformedURLException  If the string specifies an
              unknown protocol.
@see        java.net.URL#URL(java.net.URL, java.lang.String)"
      end

      operation 7276059 "URL"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 269467 // URL
	  param in name "spec" explicit_type "String"
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a URL by parsing the given spec within a specified context.

The new URL is created from the given context URL and the spec
argument as described in
RFC2396 &quot;Uniform Resource Identifiers : Generic * Syntax&quot; :
<blockquote><pre>
         &lt;scheme&gt;://&lt;authority&gt;&lt;path&gt;?&lt;query&gt;#&lt;fragment&gt;
</pre></blockquote>
The reference is parsed into the scheme, authority, path, query and
fragment parts. If the path component is empty and the scheme,
authority, and query components are undefined, then the new URL is a
reference to the current document. Otherwise, the fragment and query
parts present in the spec are used in the new URL.
<p>
If the scheme component is defined in the given spec and does not match
the scheme of the context, then the new URL is created as an absolute
URL based on the spec alone. Otherwise the scheme component is inherited
from the context URL.
<p>
If the authority component is present in the spec then the spec is
treated as absolute and the spec authority and path will replace the
context authority and path. If the authority component is absent in the
spec then the authority of the new URL will be inherited from the
context.
<p>
If the spec's path component begins with a slash character
&quot;/&quot; then the
path is treated as absolute and the spec path replaces the context path.
<p>
Otherwise, the path is treated as a relative path and is appended to the
context path, as described in RFC2396. Also, in this case, 
the path is canonicalized through the removal of directory 
changes made by occurences of &quot;..&quot; and &quot;.&quot;.
<p>
For a more detailed description of URL parsing, refer to RFC2396.

@param      context   the context in which to parse the specification.
@param      spec      the <code>String</code> to parse as a URL.
@exception  MalformedURLException  if no protocol is specified, or an
              unknown protocol is found.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
			int, java.lang.String)
@see        java.net.URLStreamHandler
@see        java.net.URLStreamHandler#parseURL(java.net.URL,
			java.lang.String, int, int)"
      end

      operation 7276187 "URL"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 269467 // URL
	  param in name "spec" explicit_type "String"
	  param inout name "handler" type class_ref 933275 // URLStreamHandler
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a URL by parsing the given spec with the specified handler
within a specified context. If the handler is null, the parsing
occurs as with the two argument constructor.

@param      context   the context in which to parse the specification.
@param      spec      the <code>String</code> to parse as a URL.
@param	   handler   the stream handler for the URL.
@exception  MalformedURLException  if no protocol is specified, or an
              unknown protocol is found.
@exception  SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       specifying a stream handler.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
			int, java.lang.String)
@see        java.net.URLStreamHandler
@see        java.net.URLStreamHandler#parseURL(java.net.URL,
			java.lang.String, int, int)"
      end

      operation 7276315 "isValidProtocol"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "protocol" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if specified string is a valid protocol name."
      end

      operation 7276443 "checkSpecifyHandler"
	private explicit_return_type "void"
	nparams 1
	  param inout name "sm" type class_ref 904347 // SecurityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks for permission to specify a stream handler."
      end

      operation 7276571 "set"
	protected explicit_return_type "void"
	nparams 5
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "file" explicit_type "String"
	  param in name "ref" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields of the URL. This is not a public method so that
only URLStreamHandlers can modify URL fields. URLs are
otherwise constant.

@param protocol the name of the protocol to use
@param host the name of the host
@param port the port number on the host
@param file the file on the host
@param ref the internal reference in the URL"
      end

      operation 7276699 "set"
	protected explicit_return_type "void"
	nparams 8
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "authority" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	  param in name "ref" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified 8 fields of the URL. This is not a public method so
that only URLStreamHandlers can modify URL fields. URLs are otherwise
constant.

@param protocol the name of the protocol to use
@param host the name of the host
@param port the port number on the host
@param authority the authority part for the url
@param userInfo the username and password
@param path the file on the host
@param ref the internal reference in the URL
@param query the query part of this URL
@since 1.3"
      end

      operation 7276827 "getQuery"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the query part of this <code>URL</code>.

@return  the query part of this <code>URL</code>, 
or <CODE>null</CODE> if one does not exist
@since 1.3"
      end

      operation 7276955 "getPath"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the path part of this <code>URL</code>.

@return  the path part of this <code>URL</code>, or an
empty string if one does not exist
@since 1.3"
      end

      operation 7277083 "getUserInfo"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the userInfo part of this <code>URL</code>.

@return  the userInfo part of this <code>URL</code>, or 
<CODE>null</CODE> if one does not exist"
      end

      operation 7277211 "getAuthority"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the authority part of this <code>URL</code>.

@return  the authority part of this <code>URL</code>
@since 1.3"
      end

      operation 7277339 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the port number of this <code>URL</code>.

@return  the port number, or -1 if the port is not set"
      end

      operation 7277467 "getDefaultPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default port number of the protocol associated
with this <code>URL</code>. If the URL scheme or the URLStreamHandler
for the URL do not define a default port number,
then -1 is returned.

@return  the port number"
      end

      operation 7277595 "getProtocol"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the protocol name of this <code>URL</code>.

@return  the protocol of this <code>URL</code>."
      end

      operation 7277723 "getHost"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the host name of this <code>URL</code>, if applicable.
The format of the host conforms to RFC 2732, i.e. for a
literal IPv6 address, this method will return the IPv6 address
enclosed in square brackets (<tt>'['</tt> and <tt>']'</tt>).

@return  the host name of this <code>URL</code>."
      end

      operation 7277851 "getFile"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the file name of this <code>URL</code>.
The returned file portion will be
the same as <CODE>getPath()</CODE>, plus the concatenation of
the value of <CODE>getQuery()</CODE>, if any. If there is 
no query portion, this method and <CODE>getPath()</CODE> will
return identical results.

@return  the file name of this <code>URL</code>,
or an empty string if one does not exist"
      end

      operation 7277979 "getRef"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the anchor (also known as the \"reference\") of this
<code>URL</code>.

@return  the anchor (also known as the \"reference\") of this
         <code>URL</code>, or <CODE>null</CODE> if one does not exist"
      end

      operation 7278107 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this URL for equality with another object.<p>

If the given object is not a URL then this method immediately returns
<code>false</code>.<p>

Two URL objects are equal if they have the same protocol, reference
equivalent hosts, have the same port number on the host, and the same
file and fragment of the file.<p>

Two hosts are considered equivalent if both host names can be resolved
into the same IP addresses; else if either host name can't be
resolved, the host names must be equal without regard to case; or both
host names equal to null.<p>

Since hosts comparison requires name resolution, this operation is a
blocking operation. <p>

Note: The defined behavior for <code>equals</code> is known to
be inconsistent with virtual hosting in HTTP.

@param   obj   the URL to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise."
      end

      operation 7278235 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an integer suitable for hash table indexing.<p>

The hash code is based upon all the URL components relevant for URL
comparison. As such, this operation is a blocking operation.<p>

@return  a hash code for this <code>URL</code>."
      end

      operation 7278363 "sameFile"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two URLs, excluding the fragment component.<p>

Returns <code>true</code> if this <code>URL</code> and the
<code>other</code> argument are equal without taking the
fragment component into consideration.

@param   other   the <code>URL</code> to compare against.
@return  <code>true</code> if they reference the same remote object;
         <code>false</code> otherwise."
      end

      operation 7278491 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string representation of this <code>URL</code>. The
string is created by calling the <code>toExternalForm</code>
method of the stream protocol handler for this object.

@return  a string representation of this object.
@see     java.net.URL#URL(java.lang.String, java.lang.String, int,
			java.lang.String)
@see     java.net.URLStreamHandler#toExternalForm(java.net.URL)"
      end

      operation 7278619 "toExternalForm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string representation of this <code>URL</code>. The
string is created by calling the <code>toExternalForm</code>
method of the stream protocol handler for this object.

@return  a string representation of this object.
@see     java.net.URL#URL(java.lang.String, java.lang.String,
			int, java.lang.String)
@see     java.net.URLStreamHandler#toExternalForm(java.net.URL)"
      end

      operation 7278747 "toURI"
	public return_type class_ref 904091 // URI
	nparams 0
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link java.net.URI} equivalent to this URL.
This method functions in the same way as <code>new URI (this.toString())</code>.
<p>Note, any URL instance that complies with RFC 2396 can be converted 
to a URI. However, some URLs that are not strictly in compliance 
can not be converted to a URI.

@exception URISyntaxException if this URL is not formatted strictly according to
		  to RFC2396 and cannot be converted to a URI.

@return    a URI instance equivalent to this URL.
@since 1.5"
      end

      operation 7278875 "openConnection"
	public return_type class_ref 730011 // URLConnection
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>URLConnection</code> object that represents a
connection to the remote object referred to by the <code>URL</code>.

<p>A new connection is opened every time by calling the
<code>openConnection</code> method of the protocol handler for
this URL.

<p>If for the URL's protocol (such as HTTP or JAR), there
exists a public, specialized URLConnection subclass belonging
to one of the following packages or one of their subpackages:
java.lang, java.io, java.util, java.net, the connection
returned will be of that subclass. For example, for HTTP an
HttpURLConnection will be returned, and for JAR a
JarURLConnection will be returned.

@return     a <code>URLConnection</code> to the URL.
@exception  IOException  if an I/O exception occurs.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
            int, java.lang.String)
@see        java.net.URLConnection
@see java.net.URLStreamHandler#openConnection(java.net.URL)"
      end

      operation 7279003 "openConnection"
	public return_type class_ref 730011 // URLConnection
	nparams 1
	  param inout name "proxy" type class_ref 931611 // Proxy
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as openConnection(), except that the connection will be
made through the specified proxy; Protocol handlers that do not
support proxing will ignore the proxy parameter and make a
normal connection.

Calling this method preempts the system's default ProxySelector
settings.

@param      proxy the Proxy through which this connection
            will be made. If direct connection is desired,
            Proxy.NO_PROXY should be specified.
@return     a <code>URLConnection</code> to the URL.
@exception  IOException  if an I/O exception occurs.
@exception  SecurityException if a security manager is present
            and the caller doesn't have permission to connect
            to the proxy.
@exception  IllegalArgumentException will be thrown if proxy is null,
            or proxy has the wrong type
@exception  UnsupportedOperationException if the subclass that
            implements the protocol handler doesn't support
            this method.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
            int, java.lang.String)
@see        java.net.URLConnection
@see        java.net.URLStreamHandler#openConnection(java.net.URL,
            java.net.Proxy)
@since      1.5"
      end

      operation 7279131 "openStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a connection to this <code>URL</code> and returns an
<code>InputStream</code> for reading from that connection. This
method is a shorthand for:
<blockquote><pre>
    openConnection().getInputStream()
</pre></blockquote>

@return     an input stream for reading from the URL connection.
@exception  IOException  if an I/O exception occurs.
@see        java.net.URL#openConnection()
@see        java.net.URLConnection#getInputStream()"
      end

      operation 7279259 "getContent"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the contents of this URL. This method is a shorthand for:
<blockquote><pre>
    openConnection().getContent()
</pre></blockquote>

@return     the contents of this URL.
@exception  IOException  if an I/O exception occurs.
@see        java.net.URLConnection#getContent()"
      end

      operation 7279387 "getContent"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "classes" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the contents of this URL. This method is a shorthand for:
<blockquote><pre>
    openConnection().getContent(Class[])
</pre></blockquote>

@param classes an array of Java types
@return     the content object of this URL that is the first match of
              the types specified in the classes array.
              null if none of the requested types are supported.
@exception  IOException  if an I/O exception occurs.
@see        java.net.URLConnection#getContent(Class[])
@since 1.3"
      end

      classrelation 1821595 // factory (<unidirectional association>)
	relation 1821595 --->
	  a role_name "factory" class_relation package
	    comment "
The URLStreamHandler factory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1821595 // factory (<unidirectional association>)
	  b parent class_ref 933403 // URLStreamHandlerFactory
      end

      operation 7279515 "setURLStreamHandlerFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 933403 // URLStreamHandlerFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an application's <code>URLStreamHandlerFactory</code>.
This method can be called at most once in a given Java Virtual
Machine.

<p> The <code>URLStreamHandlerFactory</code> instance is used to
construct a stream protocol handler from a protocol name.

<p> If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method
to ensure the operation is allowed.
This could result in a SecurityException.

@param      fac   the desired factory.
@exception  Error  if the application has already set a factory.
@exception  SecurityException  if a security manager exists and its
            <code>checkSetFactory</code> method doesn't allow
		   the operation.
@see        java.net.URL#URL(java.lang.String, java.lang.String,
            int, java.lang.String)
@see        java.net.URLStreamHandlerFactory
@see        SecurityManager#checkSetFactory"
      end

      classrelation 1821723 // handlers (<unidirectional association>)
	relation 1821723 --->
	  a role_name "handlers" init_value "=  new Hashtable()" class_relation package
	    comment "
A table of protocol handlers.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1821723 // handlers (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 2802587 "streamHandlerLock"
	class_attribute private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7279643 "getURLStreamHandler"
	class_operation package return_type class_ref 933275 // URLStreamHandler
	nparams 1
	  param in name "protocol" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Stream Handler.
@param protocol the protocol to use"
      end

      operation 7279771 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the URL to an
ObjectOutputStream. The handler is not saved since it is
specific to this system.

@serialData the default write object value. When read back in,
the reader must ensure that calling getURLStreamHandler with
the protocol variable returns a valid URLStreamHandler and
throw an IOException if it does not."
      end

      operation 7279899 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the URL from the
stream.  It reads the components of the URL and finds the local
stream handler."
      end
    end

    class 272667 "UnknownHostException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that the IP address of a host could not be determined.

@author  Jonathan Payne 
@version 1.15, 12/19/03
@since   JDK1.0"
      classrelation 1820571 // <generalisation>
	relation 1820571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1820571 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 7261467 "UnknownHostException"
	public explicit_return_type ""
	nparams 1
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>UnknownHostException</code> with the 
specified detail message. 

@param   host   the detail message."
      end

      operation 7261595 "UnknownHostException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>UnknownHostException</code> with no detail 
message. "
      end
    end

    class 273819 "InetSocketAddress"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class implements an IP Socket Address (IP address + port number)
It can also be a pair (hostname + port number), in which case an attempt
will be made to resolve the hostname. If resolution fails then the address
is said to be <I>unresolved</I> but can still be used on some circumstances
like connecting through a proxy.
<p>
It provides an immutable object used by sockets for binding, connecting, or
as returned values.
<p>
The <i>wildcard</i> is a special local IP address. It usually means \"any\"
and can only be used for <code>bind</code> operations.

@see	java.net.Socket
@see	java.net.ServerSocket
@since 1.4"
      classrelation 1813275 // <generalisation>
	relation 1813275 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1813275 // <generalisation>
	  b parent class_ref 927387 // SocketAddress
      end

      attribute 2778395 "hostname"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The hostname of the Socket Address
@serial
"
      end

      classrelation 1813403 // addr (<unidirectional association>)
	relation 1813403 --->
	  a role_name "addr" init_value "=  null" private
	    comment " The IP address of the Socket Address
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813403 // addr (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2778523 "port"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The port number of the Socket Address
@serial
"
      end

      attribute 2778651 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5076001401234631237L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7215515 "InetSocketAddress"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7215643 "InetSocketAddress"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket address where the IP address is the wildcard address
and the port number a specified value.
<p>
A valid port value is between 0 and 65535.
A port number of <code>zero</code> will let the system pick up an
ephemeral port in a <code>bind</code> operation.
<p>
@param	port	The port number
@throws IllegalArgumentException if the port parameter is outside the specified
range of valid port values. "
      end

      operation 7215771 "InetSocketAddress"
	public explicit_return_type ""
	nparams 2
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a socket address from an IP address and a port number.
<p>
A valid port value is between 0 and 65535.
A port number of <code>zero</code> will let the system pick up an
ephemeral port in a <code>bind</code> operation.
<P>
A <code>null</code> address will assign the <i>wildcard</i> address.
<p>
@param	addr	The IP address
@param	port	The port number
@throws IllegalArgumentException if the port parameter is outside the specified
range of valid port values."
      end

      operation 7215899 "InetSocketAddress"
	public explicit_return_type ""
	nparams 2
	  param in name "hostname" explicit_type "String"
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates a socket address from a hostname and a port number.
<p>
An attempt will be made to resolve the hostname into an InetAddress.
If that attempt fails, the address will be flagged as <I>unresolved</I>.
<p>
If there is a security manager, its <code>checkConnect</code> method
is called with the host name as its argument to check the permissiom
to resolve it. This could result in a SecurityException.
<P>
A valid port value is between 0 and 65535.
A port number of <code>zero</code> will let the system pick up an
ephemeral port in a <code>bind</code> operation.
<P>
@param	hostname the Host name
@param	port	The port number
@throws IllegalArgumentException if the port parameter is outside the range
of valid port values, or if the hostname parameter is <TT>null</TT>.
@throws SecurityException if a security manager is present and
				 permission to resolve the host name is
				 denied.
@see	#isUnresolved()"
      end

      operation 7216027 "createUnresolved"
	class_operation public return_type class_ref 273819 // InetSocketAddress
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Creates an unresolved socket address from a hostname and a port number.
<p>
No attempt will be made to resolve the hostname into an InetAddress.
The address will be flagged as <I>unresolved</I>.
<p>
A valid port value is between 0 and 65535.
A port number of <code>zero</code> will let the system pick up an
ephemeral port in a <code>bind</code> operation.
<P>
@param	host    the Host name
@param	port	The port number
@throws IllegalArgumentException if the port parameter is outside
                 the range of valid port values, or if the hostname
                 parameter is <TT>null</TT>.
@see	#isUnresolved()
@return  a <code>InetSocketAddress</code> representing the unresolved
         socket address
@since 1.5"
      end

      operation 7216155 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7216283 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the port number.

@return the port number."
      end

      operation 7216411 "getAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Gets the <code>InetAddress</code>.

@return the InetAdress or <code>null</code> if it is unresolved."
      end

      operation 7216539 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>hostname</code>.

@return	the hostname part of the address."
      end

      operation 7216667 "getHostString"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname, or the String form of the address if it
doesn't have a hostname (it was created using a litteral).
This has the benefit of <b>not</b> attemptimg a reverse lookup.

@return the hostname, or String representation of the address."
      end

      operation 7216795 "isUnresolved"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the address has been resolved or not.

@return <code>true</code> if the hostname couldn't be resolved into
		an <code>InetAddress</code>."
      end

      operation 7216923 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string representation of this InetSocketAddress.
This String is constructed by calling toString() on the InetAddress
and concatenating the port number (with a colon). If the address
is unresolved then the part before the colon will only contain the hostname.

@return  a string representation of this object."
      end

      operation 7217051 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same address as
this object.
<p>
Two instances of <code>InetSocketAddress</code> represent the same
address if both the InetAddresses (or hostnames if it is unresolved) and port
numbers are equal.
If both addresses are unresolved, then the hostname & the port number
are compared.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see java.net.InetAddress#equals(java.lang.Object)"
      end

      operation 7217179 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this socket address.

@return  a hash code value for this socket address."
      end
    end

    class 273947 "SocketException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that there is an error in the underlying 
protocol, such as a TCP error. 

@author  Jonathan Payne
@version 1.17, 12/19/03
@since   JDK1.0"
      classrelation 1808667 // <generalisation>
	relation 1808667 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1808667 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 7176859 "SocketException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SocketException</code> with the 
specified detail message. 

@param msg the detail message."
      end

      operation 7176987 "SocketException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SocketException</code> with no detail message."
      end
    end

    class 280091 "MalformedURLException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that a malformed URL has occurred. Either no 
legal protocol could be found in a specification string or the 
string could not be parsed. 

@author  Arthur van Hoff
@version 1.16, 12/19/03
@since   JDK1.0"
      classrelation 1813915 // <generalisation>
	relation 1813915 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1813915 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 7218587 "MalformedURLException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MalformedURLException</code> with no detail message."
      end

      operation 7218715 "MalformedURLException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MalformedURLException</code> with the 
specified detail message. 

@param   msg   the detail message."
      end
    end

    class 530715 "InetAddress"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents an Internet Protocol (IP) address.

<p> An IP address is either a 32-bit or 128-bit unsigned number
used by IP, a lower-level protocol on which protocols like UDP and
TCP are built. The IP address architecture is defined by <a
href=\"http://www.ietf.org/rfc/rfc790.txt\"><i>RFC&nbsp;790:
Assigned Numbers</i></a>, <a
href=\"http://www.ietf.org/rfc/rfc1918.txt\"> <i>RFC&nbsp;1918:
Address Allocation for Private Internets</i></a>, <a
href=\"http://www.ietf.org/rfc/rfc2365.txt\"><i>RFC&nbsp;2365:
Administratively Scoped IP Multicast</i></a>, and <a
href=\"http://www.ietf.org/rfc/rfc2373.txt\"><i>RFC&nbsp;2373: IP
Version 6 Addressing Architecture</i></a>. An instance of an
InetAddress consists of an IP address and possibly its
corresponding host name (depending on whether it is constructed
with a host name or whether it has already done reverse host name
resolution).

<h4> Address types </h4>

<blockquote><table cellspacing=2 summary=\"Description of unicast and multicast address types\">
  <tr><th valign=top><i>unicast</i></th>
      <td>An identifier for a single interface. A packet sent to
        a unicast address is delivered to the interface identified by
        that address.

        <p> The Unspecified Address -- Also called anylocal or wildcard 
        address. It must never be assigned to any node. It indicates the
        absence of an address. One example of its use is as the target of
        bind, which allows a server to accept a client connection on any
        interface, in case the server host has multiple interfaces.

        <p> The <i>unspecified</i> address must not be used as
        the destination address of an IP packet.
       
        <p> The <i>Loopback</i> Addresses -- This is the address
        assigned to the loopback interface. Anything sent to this
        IP address loops around and becomes IP input on the local
        host. This address is often used when testing a
        client.</td></tr>
  <tr><th valign=top><i>multicast</i></th>
      <td>An identifier for a set of interfaces (typically belonging 
        to different nodes). A packet sent to a multicast address is
        delivered to all interfaces identified by that address.</td></tr>
</table></blockquote>

<h4> IP address scope </h4>

<p> <i>Link-local</i> addresses are designed to be used for addressing
on a single link for purposes such as auto-address configuration,
neighbor discovery, or when no routers are present. 

<p> <i>Site-local</i> addresses are designed to be used for addressing
inside of a site without the need for a global prefix.

<p> <i>Global</i> addresses are unique across the internet.

<h4> Textual representation of IP addresses </h4>

The textual representation of an IP address is address family specific.

<p>

For IPv4 address format, please refer to <A
HREF=\"Inet4Address.html#format\">Inet4Address#format</A>; For IPv6
address format, please refer to <A
HREF=\"Inet6Address.html#format\">Inet6Address#format</A>.

<h4> Host Name Resolution </h4>

Host name-to-IP address <i>resolution</i> is accomplished through
the use of a combination of local machine configuration information
and network naming services such as the Domain Name System (DNS)
and Network Information Service(NIS). The particular naming
services(s) being used is by default the local machine configured
one. For any host name, its corresponding IP address is returned.

<p> <i>Reverse name resolution</i> means that for any IP address,
the host associated with the IP address is returned.

<p> The InetAddress class provides methods to resolve host names to
their IP addresses and vise versa.

<h4> InetAddress Caching </h4>

The InetAddress class has a cache to store successful as well as
unsuccessful host name resolutions. The positive caching is there
to guard against DNS spoofing attacks; while the negative caching
is used to improve performance.

<p> By default, the result of positive host name resolutions are
cached forever, because there is no general rule to decide when it
is safe to remove cache entries. The result of unsuccessful host
name resolution is cached for a very short period of time (10
seconds) to improve performance.

<p> Under certain circumstances where it can be determined that DNS
spoofing attacks are not possible, a Java security property can be
set to a different Time-to-live (TTL) value for positive
caching. Likewise, a system admin can configure a different
negative caching TTL value when needed.

<p> Two Java security properties control the TTL values used for
 positive and negative host name resolution caching:

<blockquote>
<dl>
<dt><b>networkaddress.cache.ttl</b> (default: -1)</dt>
<dd>Indicates the caching policy for successful name lookups from
the name service. The value is specified as as integer to indicate
the number of seconds to cache the successful lookup.
<p>
A value of -1 indicates \"cache forever\".
</dd>
<p>
<dt><b>networkaddress.cache.negative.ttl</b> (default: 10)</dt>
<dd>Indicates the caching policy for un-successful name lookups
from the name service. The value is specified as as integer to
indicate the number of seconds to cache the failure for
un-successful lookups.
<p>
A value of 0 indicates \"never cache\".
A value of -1 indicates \"cache forever\".
</dd>
</dl>
</blockquote>

@author  Chris Warth
@version 1.110, 09/06/07
@see     java.net.InetAddress#getByAddress(byte[])
@see     java.net.InetAddress#getByAddress(java.lang.String, byte[])
@see     java.net.InetAddress#getAllByName(java.lang.String)
@see     java.net.InetAddress#getByName(java.lang.String)
@see     java.net.InetAddress#getLocalHost()
@since JDK1.0"
      classrelation 1811099 // <realization>
	relation 1811099 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1811099 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2775067 "IPv4"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specify the address family: Internet Protocol, Version 4
@since 1.4
"
      end

      attribute 2775195 "IPv6"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specify the address family: Internet Protocol, Version 6
@since 1.4
"
      end

      attribute 2775323 "preferIPv6Address"
	class_attribute package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Specify address family preference "
      end

      attribute 2775451 "hostName"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      attribute 2775579 "address"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Holds a 32-bit IPv4 address.

@serial
"
      end

      attribute 2775707 "family"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies the address family type, for instance, '1' for IPv4
addresses, and '2' for IPv6 addresses.

@serial
"
      end

      attribute 2775835 "nameService"
	class_attribute private explicit_type "NameService"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used to store the name service provider "
      end

      attribute 2775963 "canonicalHostName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used to store the best available hostname "
      end

      attribute 2776091 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  3286316764910316507L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " use serialVersionUID from JDK 1.0.2 for interoperability "
      end

      extra_member 163099 "initialization"
	
	cpp "" ""
	java "  static {
	preferIPv6Address = 
	    ((Boolean)java.security.AccessController.doPrivileged(
		 new GetBooleanAction(\"java.net.preferIPv6Addresses\"))).booleanValue();
	AccessController.doPrivileged(new LoadLibraryAction(\"net\"));
        init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7199899 "InetAddress"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for the Socket.accept() method.
This creates an empty InetAddress, which is filled in by
the accept() method.  This InetAddress, however, is not
put in the address cache, since it is not created by name."
      end

      operation 7200027 "readResolve"
	private explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 289307 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the de-serialized object with an Inet4Address object.

@return the alternate object to the de-serialized object.

@throws ObjectStreamException if a new object replacing this
object could not be created"
      end

      operation 7200155 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an
IP multicast address.
@return a <code>boolean</code> indicating if the InetAddress is 
an IP multicast address
@since   JDK1.1"
      end

      operation 7200283 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress in a wildcard address.
@return a <code>boolean</code> indicating if the Inetaddress is
        a wildcard address.
@since 1.4"
      end

      operation 7200411 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is a loopback address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a loopback address; or false otherwise.
@since 1.4"
      end

      operation 7200539 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an link local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a link local address; or false if address is not a link local unicast address.
@since 1.4"
      end

      operation 7200667 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is a site local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a site local address; or false if address is not a site local unicast address.
@since 1.4"
      end

      operation 7200795 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has global scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of global scope, false if it is not 
        of global scope or it is not a multicast address
@since 1.4"
      end

      operation 7200923 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has node scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of node-local scope, false if it is not 
        of node-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7201051 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has link scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of link-local scope, false if it is not 
        of link-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7201179 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has site scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of site-local scope, false if it is not 
        of site-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7201307 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has organization scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of organization-local scope, 
        false if it is not of organization-local scope 
        or it is not a multicast address
@since 1.4"
      end

      operation 7201435 "isReachable"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether that address is reachable. Best effort is made by the
implementation to try to reach the host, but firewalls and server
configuration may block requests resulting in a unreachable status
while some specific ports may be accessible.
A typical implementation will use ICMP ECHO REQUESTs if the
privilege can be obtained, otherwise it will try to establish
a TCP connection on port 7 (Echo) of the destination host.
<p>
The timeout value, in milliseconds, indicates the maximum amount of time
the try should take. If the operation times out before getting an
answer, the host is deemed unreachable. A negative value will result
in an IllegalArgumentException being thrown.

@param	timeout	the time, in milliseconds, before the call aborts
@return a <code>boolean</code> indicating if the address is reachable.
@throws IOException if a network error occurs
@throws  IllegalArgumentException if <code>timeout</code> is negative.
@since 1.5"
      end

      operation 7201563 "isReachable"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "netif" type class_ref 928027 // NetworkInterface
	  param in name "ttl" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether that address is reachable. Best effort is made by the
implementation to try to reach the host, but firewalls and server
configuration may block requests resulting in a unreachable status
while some specific ports may be accessible.
A typical implementation will use ICMP ECHO REQUESTs if the
privilege can be obtained, otherwise it will try to establish
a TCP connection on port 7 (Echo) of the destination host.
<p>
The <code>network interface</code> and <code>ttl</code> parameters
let the caller specify which network interface the test will go through
and the maximum number of hops the packets should go through.
A negative value for the <code>ttl</code> will result in an
IllegalArgumentException being thrown.
<p>
The timeout value, in milliseconds, indicates the maximum amount of time
the try should take. If the operation times out before getting an
answer, the host is deemed unreachable. A negative value will result
in an IllegalArgumentException being thrown.

@param	netif   the NetworkInterface through which the
			  test will be done, or null for any interface
@param	ttl	the maximum numbers of hops to try or 0 for the
			default
@param	timeout	the time, in milliseconds, before the call aborts
@throws  IllegalArgumentException if either <code>timeout</code>
				or <code>ttl</code> are negative.
@return a <code>boolean</code>indicating if the address is reachable.
@throws IOException if a network error occurs
@since 1.5"
      end

      operation 7201691 "getHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the host name for this IP address.

<p>If this InetAddress was created with a host name,
this host name will be remembered and returned; 
otherwise, a reverse name lookup will be performed
and the result will be returned based on the system 
configured name lookup service. If a lookup of the name service
is required, call 
{@link #getCanonicalHostName() getCanonicalHostName}.

<p>If there is a security manager, its
<code>checkConnect</code> method is first called
with the hostname and <code>-1</code> 
as its arguments to see if the operation is allowed.
If the operation is not allowed, it will return
the textual representation of the IP address.

@return  the host name for this IP address, or if the operation
   is not allowed by the security check, the textual 
   representation of the IP address.

@see InetAddress#getCanonicalHostName
@see SecurityManager#checkConnect"
      end

      operation 7201819 "getHostName"
	package explicit_return_type "String"
	nparams 1
	  param inout name "check" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname for this address.
If the host is equal to null, then this address refers to any
of the local machine's available network addresses.
this is package private so SocketPermission can make calls into
here without a security check.

<p>If there is a security manager, this method first
calls its <code>checkConnect</code> method
with the hostname and <code>-1</code> 
as its arguments to see if the calling code is allowed to know
the hostname for this IP address, i.e., to connect to the host.
If the operation is not allowed, it will return
the textual representation of the IP address.

@return  the host name for this IP address, or if the operation
   is not allowed by the security check, the textual 
   representation of the IP address.

@param check make security check if true

@see SecurityManager#checkConnect"
      end

      operation 7201947 "getCanonicalHostName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the fully qualified domain name for this IP address.
Best effort method, meaning we may not be able to return 
the FQDN depending on the underlying system configuration.

<p>If there is a security manager, this method first
calls its <code>checkConnect</code> method
with the hostname and <code>-1</code> 
as its arguments to see if the calling code is allowed to know
the hostname for this IP address, i.e., to connect to the host.
If the operation is not allowed, it will return
the textual representation of the IP address.

@return  the fully qualified domain name for this IP address, 
   or if the operation is not allowed by the security check,
   the textual representation of the IP address.

@see SecurityManager#checkConnect

@since 1.4"
      end

      operation 7202075 "getHostFromNameService"
	class_operation private explicit_return_type "String"
	nparams 2
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param inout name "check" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname for this address.

<p>If there is a security manager, this method first
calls its <code>checkConnect</code> method
with the hostname and <code>-1</code> 
as its arguments to see if the calling code is allowed to know
the hostname for this IP address, i.e., to connect to the host.
If the operation is not allowed, it will return
the textual representation of the IP address.

@return  the host name for this IP address, or if the operation
   is not allowed by the security check, the textual 
   representation of the IP address.

@param check make security check if true

@see SecurityManager#checkConnect"
      end

      operation 7202203 "getAddress"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw IP address of this <code>InetAddress</code>
object. The result is in network byte order: the highest order
byte of the address is in <code>getAddress()[0]</code>.

@return  the raw IP address of this object."
      end

      operation 7202331 "getHostAddress"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address string in textual presentation.

@return  the raw IP address in a string format.
@since   JDK1.0.2"
      end

      operation 7202459 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this IP address.

@return  a hash code value for this IP address."
      end

      operation 7202587 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same IP address as
this object.
<p>
Two instances of <code>InetAddress</code> represent the same IP
address if the length of the byte arrays returned by
<code>getAddress</code> is the same for both, and each of the
array components is the same for the byte arrays.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see     java.net.InetAddress#getAddress()"
      end

      operation 7202715 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this IP address to a <code>String</code>. The 
string returned is of the form: hostname / literal IP 
address.

If the host name is unresolved, no reverse name service loopup
is performed. The hostname part will be represented by an empty string.

@return  a string representation of this IP address."
      end

      class 929051 "Cache"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2776603 "policy"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1811867 // cache (<unidirectional association>)
	  relation 1811867 --->
	    a role_name "cache" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1811867 // cache (<unidirectional association>)
	    b parent class_ref 152603 // LinkedHashMap
	end

	operation 7202971 "Cache"
	  public explicit_return_type ""
	  nparams 1
	    param in name "policy" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create cache with specific policy "
	end

	operation 7203099 "put"
	  public return_type class_ref 929051 // Cache
	  nparams 2
	    param in name "host" explicit_type "String"
	    param inout name "address" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add an entry to the cache. If there's already an
entry then for this host then the entry will be 
replaced."
	end

	operation 7203227 "get"
	  public return_type class_ref 929307 // CacheEntry
	  nparams 1
	    param in name "host" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Query the cache for the specific host. If found then
return its CacheEntry, or null if not found."
	end
      end

      classrelation 1811227 // addressCache (<unidirectional association>)
	relation 1811227 --->
	  a role_name "addressCache" init_value "= 
        new Cache(InetAddressCachePolicy.get())" class_relation private
	    comment "
Cached addresses - our own litle nis, not!

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811227 // addressCache (<unidirectional association>)
	  b parent class_ref 929051 // Cache
      end

      classrelation 1811355 // negativeCache (<unidirectional association>)
	relation 1811355 --->
	  a role_name "negativeCache" init_value "= 
        new Cache(InetAddressCachePolicy.getNegative())" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811355 // negativeCache (<unidirectional association>)
	  b parent class_ref 929051 // Cache
      end

      attribute 2776219 "addressCacheInit"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1811483 // unknown_array (<unidirectional association>)
	relation 1811483 --->
	  a role_name "unknown_array" multiplicity "[]" class_relation package
	    comment " put THIS in cache"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1811483 // unknown_array (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      classrelation 1811611 // impl (<unidirectional association>)
	relation 1811611 --->
	  a role_name "impl" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811611 // impl (<unidirectional association>)
	  b parent class_ref 929179 // InetAddressImpl
      end

      classrelation 1811739 // lookupTable (<unidirectional association>)
	relation 1811739 --->
	  a role_name "lookupTable" init_value "=  new HashMap()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811739 // lookupTable (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      class 929307 "CacheEntry"
	visibility package 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 7202843 "CacheEntry"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "address" explicit_type "Object"
	    param in name "expiration" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2776347 "address"
	  package explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2776475 "expiration"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 7203355 "cacheInitIfNeeded"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize cache and insert anyLocalAddress into the
unknown array with no expiry."
      end

      operation 7203483 "cacheAddress"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "hostname" explicit_type "String"
	  param inout name "address" explicit_type "Object"
	  param inout name "success" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cache the given hostname and address."
      end

      operation 7203611 "getCachedAddress"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param in name "hostname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lookup hostname in cache (positive & negative cache). If
found return address, null if not found."
      end

      extra_member 163227 "initialization"
	
	cpp "" ""
	java "  static {
  	// create the impl
	impl = (new InetAddressImplFactory()).create();

	// get name service if provided and requested
	String provider = null;;
	String propPrefix = \"sun.net.spi.nameservice.provider.\";
	int n = 1;
	    while (nameService == null) {
		provider 
		    = (String)AccessController.doPrivileged(
			new GetPropertyAction(propPrefix+n, \"default\"));
		n++;
		if (provider.equals(\"default\")) {
		    // initialize the default name service
		    nameService = new NameService() {
			public byte[][] lookupAllHostAddr(String host) 
			    throws UnknownHostException {
			    return impl.lookupAllHostAddr(host);
			}
			public String getHostByAddr(byte[] addr) 
			    throws UnknownHostException {
			    return impl.getHostByAddr(addr);
			}
		    };
		    break;
		}

		final String providerName = provider;

		try {
		    java.security.AccessController.doPrivileged(
			new java.security.PrivilegedExceptionAction() {
			    public Object run() {
				Iterator itr
		    		    = Service.providers(NameServiceDescriptor.class);
				while (itr.hasNext()) {
		    		    NameServiceDescriptor nsd 
					= (NameServiceDescriptor)itr.next();
		    		    if (providerName.
				        equalsIgnoreCase(nsd.getType()+\",\"
			       		    +nsd.getProviderName())) {
					try {
			    	    	    nameService = nsd.createNameService();
			    	    	    break;
					} catch (Exception e) {
					    e.printStackTrace();
			    	    	    System.err.println(
						\"Cannot create name service:\"
					         +providerName+\": \" + e);
					}
		    		    }
				} /* while */
			        return null;
			}
		    });
		} catch (java.security.PrivilegedActionException e) {
		}

	    }
    }"
	php ""
	python ""
	idl ""
      end

      operation 7203739 "getByAddress"
	class_operation public return_type class_ref 530715 // InetAddress
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an InetAddress based on the provided host name and IP address
No name service is checked for the validity of the address. 

<p> The host name can either be a machine name, such as
\"<code>java.sun.com</code>\", or a textual representation of its IP
address.
<p> No validity checking is done on the host name either.

<p> If addr specifies an IPv4 address an instance of Inet4Address 
will be returned; otherwise, an instance of Inet6Address 
will be returned.

<p> IPv4 address byte array must be 4 bytes long and IPv6 byte array 
must be 16 bytes long

@param host the specified host
@param addr the raw IP address in network byte order
@return  an InetAddress object created from the raw IP address.
@exception  UnknownHostException  if IP address is of illegal length
@since 1.4"
      end

      operation 7203867 "getByName"
	class_operation public return_type class_ref 530715 // InetAddress
	nparams 1
	  param in name "host" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the IP address of a host, given the host's name.

<p> The host name can either be a machine name, such as
\"<code>java.sun.com</code>\", or a textual representation of its
IP address. If a literal IP address is supplied, only the
validity of the address format is checked.

<p> For <code>host</code> specified in literal IPv6 address,
either the form defined in RFC 2732 or the literal IPv6 address
format defined in RFC 2373 is accepted. IPv6 scoped addresses are also
supported. See <a href=\"Inet6Address.html#scoped\">here</a> for a description of IPv6
scoped addresses.

<p> If the host is <tt>null</tt> then an <tt>InetAddress</tt>
representing an address of the loopback interface is returned.
See <a href=\"http://www.ietf.org/rfc/rfc3330.txt\">RFC&nbsp;3330</a>
section&nbsp;2 and <a href=\"http://www.ietf.org/rfc/rfc2373.txt\">RFC&nbsp;2373</a>
section&nbsp;2.5.3. </p>

@param      host   the specified host, or <code>null</code>.
@return     an IP address for the given host name.
@exception  UnknownHostException  if no IP address for the
              <code>host</code> could be found, or if a scope_id was specified
		     for a global IPv6 address.
@exception  SecurityException if a security manager exists
            and its checkConnect method doesn't allow the operation"
      end

      operation 7203995 "getByName"
	class_operation private return_type class_ref 530715 // InetAddress
	nparams 2
	  param in name "host" explicit_type "String"
	  param inout name "reqAddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " called from deployment cache manager"
      end

      operation 7204123 "getAllByName"
	class_operation public return_type class_ref 530715 // InetAddress
	nparams 1
	  param in name "host" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given the name of a host, returns an array of its IP addresses,
based on the configured name service on the system.

<p> The host name can either be a machine name, such as
\"<code>java.sun.com</code>\", or a textual representation of its IP
address. If a literal IP address is supplied, only the
validity of the address format is checked.

<p> For <code>host</code> specified in <i>literal IPv6 address</i>,
either the form defined in RFC 2732 or the literal IPv6 address
format defined in RFC 2373 is accepted. A literal IPv6 address may
also be qualified by appending a scoped zone identifier or scope_id.
The syntax and usage of scope_ids is described 
<a href=\"Inet6Address.html#scoped\">here</a>.
<p> If the host is <tt>null</tt> then an <tt>InetAddress</tt>
representing an address of the loopback interface is returned.
See <a href=\"http://www.ietf.org/rfc/rfc3330.txt\">RFC&nbsp;3330</a>
section&nbsp;2 and <a href=\"http://www.ietf.org/rfc/rfc2373.txt\">RFC&nbsp;2373</a>
section&nbsp;2.5.3. </p>

<p> If there is a security manager and <code>host</code> is not 
null and <code>host.length() </code> is not equal to zero, the
security manager's
<code>checkConnect</code> method is called
with the hostname and <code>-1</code> 
as its arguments to see if the operation is allowed.

@param      host   the name of the host, or <code>null</code>.
@return     an array of all the IP addresses for a given host name.

@exception  UnknownHostException  if no IP address for the
              <code>host</code> could be found, or if a scope_id was specified
		     for a global IPv6 address.
@exception  SecurityException  if a security manager exists and its  
              <code>checkConnect</code> method doesn't allow the operation.

@see SecurityManager#checkConnect"
      end

      operation 7204251 "getAllByName"
	class_operation private return_type class_ref 530715 // InetAddress
	nparams 2
	  param in name "host" explicit_type "String"
	  param inout name "reqAddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7204379 "checkNumericZone"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "s" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "check if the literal address string has %nn appended
returns -1 if not, or the numeric value otherwise.

%nn may also be a string that represents the displayName of
a currently available NetworkInterface. "
      end

      operation 7204507 "getAllByName0"
	class_operation private return_type class_ref 530715 // InetAddress
	nparams 1
	  param in name "host" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7204635 "getAllByName0"
	class_operation package return_type class_ref 530715 // InetAddress
	nparams 2
	  param in name "host" explicit_type "String"
	  param inout name "check" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package private so SocketPermission can call it"
      end

      operation 7204763 "getAllByName0"
	class_operation private return_type class_ref 530715 // InetAddress
	nparams 3
	  param in name "host" explicit_type "String"
	  param inout name "reqAddr" type class_ref 530715 // InetAddress
	  param inout name "check" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7204891 "getAddressFromNameService"
	class_operation private explicit_return_type "Object"
	nparams 2
	  param in name "host" explicit_type "String"
	  param inout name "reqAddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7205019 "checkLookupTable"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7205147 "updateLookupTable"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7205275 "getByAddress"
	class_operation public return_type class_ref 530715 // InetAddress
	nparams 1
	  param in name "addr" explicit_type "byte"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>InetAddress</code> object given the raw IP address . 
The argument is in network byte order: the highest order
byte of the address is in <code>getAddress()[0]</code>.

<p> This method doesn't block, i.e. no reverse name service lookup
is performed.

<p> IPv4 address byte array must be 4 bytes long and IPv6 byte array 
must be 16 bytes long

@param addr the raw IP address in network byte order
@return  an InetAddress object created from the raw IP address.
@exception  UnknownHostException  if IP address is of illegal length
@since 1.4"
      end

      operation 7205403 "getLocalHost"
	class_operation public return_type class_ref 530715 // InetAddress
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local host.

<p>If there is a security manager, its
<code>checkConnect</code> method is called
with the local host name and <code>-1</code> 
as its arguments to see if the operation is allowed. 
If the operation is not allowed, an InetAddress representing
the loopback address is returned.

@return     the IP address of the local host.

@exception  UnknownHostException  if no IP address for the
              <code>host</code> could be found.

@see SecurityManager#checkConnect"
      end

      operation 7205531 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end

      operation 7205659 "anyLocalAddress"
	class_operation package return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the InetAddress representing anyLocalAddress
(typically 0.0.0.0 or ::0)"
      end

      operation 7205787 "loadImpl"
	class_operation package explicit_return_type "Object"
	nparams 1
	  param in name "implName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Load and instantiate an underlying impl class"
      end
    end

    class 544411 "DatagramSocket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a socket for sending and receiving datagram packets.

<p>A datagram socket is the sending or receiving point for a packet
delivery service. Each packet sent or received on a datagram socket
is individually addressed and routed. Multiple packets sent from
one machine to another may be routed differently, and may arrive in
any order.

<p>UDP broadcasts sends are always enabled on a DatagramSocket.
In order to receive broadcast packets a DatagramSocket
should be bound to the wildcard address. In some
implementations, broadcast packets may also be received when
a DatagramSocket is bound to a more specific address.
<p>
Example:
<code>
		DatagramSocket s = new DatagramSocket(null);
		s.bind(new InetSocketAddress(8888));
</code>
Which is equivalent to:
<code>
		DatagramSocket s = new DatagramSocket(8888);
</code>
Both cases will create a DatagramSocket able to receive broadcasts on
UDP port 8888.

@author  Pavani Diwanji
@version 1.96, 03/05/04
@see     java.net.DatagramPacket
@see     java.nio.channels.DatagramChannel
@since JDK1.0"
      attribute 2764187 "created"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Various states of this socket.
"
      end

      attribute 2764315 "bound"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2764443 "closed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2764571 "closeLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1809307 // impl (<unidirectional association>)
	relation 1809307 --->
	  a role_name "impl" package
	    comment "
The implementation of this DatagramSocket.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809307 // impl (<unidirectional association>)
	  b parent class_ref 927515 // DatagramSocketImpl
      end

      attribute 2764699 "oldImpl"
	package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Are we using an older DatagramSocketImpl?
"
      end

      attribute 2764827 "ST_NOT_CONNECTED"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Connection state:
ST_NOT_CONNECTED = socket not connected
ST_CONNECTED = socket connected
ST_CONNECTED_NO_IMPL = socket connected but not at impl level
"
      end

      attribute 2764955 "ST_CONNECTED"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2765083 "ST_CONNECTED_NO_IMPL"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2765211 "connectState"
	package explicit_type "int"
	init_value "=  ST_NOT_CONNECTED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1809435 // connectedAddress (<unidirectional association>)
	relation 1809435 --->
	  a role_name "connectedAddress" init_value "=  null" package
	    comment "
Connected address & port

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809435 // connectedAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2765339 "connectedPort"
	package explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7181467 "connectInternal"
	private explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to a remote socket address (IP address + port number).
Binds socket if not already bound.
<p>
@param   addr    The remote address.
@param	port	The remote port
@throws  SocketException if binding the socket fails."
      end

      operation 7181595 "DatagramSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram socket and binds it to any available port
on the local host machine.  The socket will be bound to the wildcard
address, an IP address chosen by the kernel.

<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with 0 as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

@exception  SocketException  if the socket could not be opened,
              or the socket could not bind to the specified local port.
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.

@see SecurityManager#checkListen"
      end

      operation 7181723 "DatagramSocket"
	protected explicit_return_type ""
	nparams 1
	  param inout name "impl" type class_ref 927515 // DatagramSocketImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an unbound datagram socket with the specified
DatagramSocketImpl.

@param impl an instance of a <B>DatagramSocketImpl</B>
       the subclass wishes to use on the DatagramSocket.
@since   1.4"
      end

      operation 7181851 "DatagramSocket"
	public explicit_return_type ""
	nparams 1
	  param inout name "bindaddr" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a datagram socket, bound to the specified local
socket address.
<p>
If, if the address is <code>null</code>, creates an unbound socket.
<p>
<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with the port from the socket address
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

@param bindaddr local socket address to bind, or <code>null</code>
		       for an unbound socket.

@exception  SocketException  if the socket could not be opened,
              or the socket could not bind to the specified local port.
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.

@see SecurityManager#checkListen
@since   1.4"
      end

      operation 7181979 "DatagramSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram socket and binds it to the specified port
on the local host machine.  The socket will be bound to the wildcard
address, an IP address chosen by the kernel.

<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

@param      port port to use.
@exception  SocketException  if the socket could not be opened,
              or the socket could not bind to the specified local port.
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.

@see SecurityManager#checkListen"
      end

      operation 7182107 "DatagramSocket"
	public explicit_return_type ""
	nparams 2
	  param in name "port" explicit_type "int"
	  param inout name "laddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a datagram socket, bound to the specified local
address.  The local port must be between 0 and 65535 inclusive.
If the IP address is 0.0.0.0, the socket will be bound to the
wildcard address, an IP address chosen by the kernel.

<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.

@param port local port to use
@param laddr local address to bind

@exception  SocketException  if the socket could not be opened,
              or the socket could not bind to the specified local port.
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.

@see SecurityManager#checkListen
@since   JDK1.1"
      end

      operation 7182235 "checkOldImpl"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1809563 // implClass (<unidirectional association>)
	relation 1809563 --->
	  a role_name "implClass" init_value "=  null" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809563 // implClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 7182363 "createImpl"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7182491 "getImpl"
	package return_type class_ref 927515 // DatagramSocketImpl
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>DatagramSocketImpl</code> attached to this socket, 
creating it if necessary.

@return	the <code>DatagramSocketImpl</code> attached to that 
		DatagramSocket
@throws SocketException if creation fails.
@since 1.4"
      end

      operation 7182619 "bind"
	public explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this DatagramSocket to a specific address & port.
<p>
If the address is <code>null</code>, then the system will pick up
an ephemeral port and a valid local address to bind the socket.
<p>
@param	addr The address & port to bind to.
@throws	SocketException if any error happens during the bind, or if the
		socket is already bound.
@throws	SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.
@throws IllegalArgumentException if addr is a SocketAddress subclass
        not supported by this socket.
@since 1.4"
      end

      operation 7182747 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects the socket to a remote address for this socket. When a
socket is connected to a remote address, packets may only be
sent to or received from that address. By default a datagram
socket is not connected.

<p>If the remote destination to which the socket is connected does not
exist, or is otherwise unreachable, and if an ICMP destination unreachable
packet has been received for that address, then a subsequent call to 
send or receive may throw a PortUnreachableException. Note, there is no 
guarantee that the exception will be thrown.

<p>A caller's permission to send and receive datagrams to a
given host and port are checked at connect time. When a socket
is connected, receive and send <b>will not
perform any security checks</b> on incoming and outgoing
packets, other than matching the packet's and the socket's
address and port. On a send operation, if the packet's address
is set and the packet's address and the socket's address do not
match, an IllegalArgumentException will be thrown. A socket
connected to a multicast address may only be used to send packets.

@param address the remote address for the socket

@param port the remote port for the socket.

@exception IllegalArgumentException if the address is null,
or the port is out of range.

@exception SecurityException if the caller is not allowed to
send datagrams to and receive datagrams from the address and port.

@see #disconnect
@see #send
@see #receive "
      end

      operation 7182875 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "addr" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to a remote socket address (IP address + port number).
<p>
@param	addr	The remote address.
@throws	SocketException if the connect fails
@throws	IllegalArgumentException if addr is null or addr is a SocketAddress
		subclass not supported by this socket
@since 1.4
@see #connect"
      end

      operation 7183003 "disconnect"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects the socket. This does nothing if the socket is not
connected.

@see #connect"
      end

      operation 7183131 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the binding state of the socket.

@return true if the socket succesfuly bound to an address
@since 1.4"
      end

      operation 7183259 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the connection state of the socket.

@return true if the socket succesfuly connected to a server
@since 1.4"
      end

      operation 7183387 "getInetAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address to which this socket is connected. Returns null
if the socket is not connected.

@return the address to which this socket is connected."
      end

      operation 7183515 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port for this socket. Returns -1 if the socket is not
connected.

@return the port to which this socket is connected."
      end

      operation 7183643 "getRemoteSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the endpoint this socket is connected to, or
<code>null</code> if it is unconnected.
@return a <code>SocketAddress</code> representing the remote
        endpoint of this socket, or <code>null</code> if it is
        not connected yet.
@see #getInetAddress()
@see #getPort()
@see #connect(SocketAddress)
@since 1.4"
      end

      operation 7183771 "getLocalSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address of the endpoint this socket is bound to, or
<code>null</code> if it is not bound yet.

@return a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.
@see #getLocalAddress()
@see #getLocalPort()
@see #bind(SocketAddress)
@since 1.4"
      end

      operation 7183899 "send"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a datagram packet from this socket. The
<code>DatagramPacket</code> includes information indicating the
data to be sent, its length, the IP address of the remote host,
and the port number on the remote host.

<p>If there is a security manager, and the socket is not currently
connected to a remote address, this method first performs some
security checks. First, if <code>p.getAddress().isMulticastAddress()</code>
is true, this method calls the
security manager's <code>checkMulticast</code> method
with <code>p.getAddress()</code> as its argument.
If the evaluation of that expression is false,
this method instead calls the security manager's 
<code>checkConnect</code> method with arguments
<code>p.getAddress().getHostAddress()</code> and
<code>p.getPort()</code>. Each call to a security manager method
could result in a SecurityException if the operation is not allowed.

@param      p   the <code>DatagramPacket</code> to be sent.

@exception  IOException  if an I/O error occurs.
@exception  SecurityException  if a security manager exists and its  
            <code>checkMulticast</code> or <code>checkConnect</code> 
            method doesn't allow the send.
@exception  PortUnreachableException may be thrown if the socket is connected
            to a currently unreachable destination. Note, there is no 
		   guarantee that the exception will be thrown.
@exception  java.nio.channels.IllegalBlockingModeException
            if this socket has an associated channel,
            and the channel is in non-blocking mode.

@see        java.net.DatagramPacket
@see        SecurityManager#checkMulticast(InetAddress)
@see        SecurityManager#checkConnect
@revised 1.4
@spec JSR-51"
      end

      operation 7184027 "receive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receives a datagram packet from this socket. When this method
returns, the <code>DatagramPacket</code>'s buffer is filled with
the data received. The datagram packet also contains the sender's
IP address, and the port number on the sender's machine.
<p>
This method blocks until a datagram is received. The
<code>length</code> field of the datagram packet object contains
the length of the received message. If the message is longer than
the packet's length, the message is truncated.
<p>
If there is a security manager, a packet cannot be received if the
security manager's <code>checkAccept</code> method
does not allow it.

@param      p   the <code>DatagramPacket</code> into which to place
                the incoming data.
@exception  IOException  if an I/O error occurs.
@exception  SocketTimeoutException  if setSoTimeout was previously called
		       and the timeout has expired.
@exception  PortUnreachableException may be thrown if the socket is connected
      	   to a currently unreachable destination. Note, there is no guarantee that the
      	   exception will be thrown.
@exception  java.nio.channels.IllegalBlockingModeException
            if this socket has an associated channel,
            and the channel is in non-blocking mode.
@see        java.net.DatagramPacket
@see        java.net.DatagramSocket
@revised 1.4
@spec JSR-51"
      end

      operation 7184155 "getLocalAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local address to which the socket is bound.

<p>If there is a security manager, its
<code>checkConnect</code> method is first called
with the host address and <code>-1</code>
as its arguments to see if the operation is allowed.

@see SecurityManager#checkConnect
@return  the local address to which the socket is bound, or
		an <code>InetAddress</code> representing any local
		address if either the socket is not bound, or
		the security manager <code>checkConnect</code>
		method does not allow the operation
@since   1.1"
      end

      operation 7184283 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number on the local host to which this socket is bound.

@return  the port number on the local host to which this socket is bound."
      end

      operation 7184411 "setSoTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enable/disable SO_TIMEOUT with the specified timeout, in
 milliseconds. With this option set to a non-zero timeout,
 a call to receive() for this DatagramSocket
 will block for only this amount of time.  If the timeout expires,
 a <B>java.net.SocketTimeoutException</B> is raised, though the
 DatagramSocket is still valid.  The option <B>must</B> be enabled
 prior to entering the blocking operation to have effect.  The
 timeout must be > 0.
 A timeout of zero is interpreted as an infinite timeout.

@param timeout the specified timeout in milliseconds.
@throws SocketException if there is an error in the underlying protocol, such as an UDP error. 
@since   JDK1.1
@see #getSoTimeout()"
      end

      operation 7184539 "getSoTimeout"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrive setting for SO_TIMEOUT.  0 returns implies that the
option is disabled (i.e., timeout of infinity).

@return the setting for SO_TIMEOUT
@throws SocketException if there is an error in the underlying protocol, such as an UDP error.
@since   JDK1.1
@see #setSoTimeout(int)"
      end

      operation 7184667 "setSendBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SO_SNDBUF option to the specified value for this
<tt>DatagramSocket</tt>. The SO_SNDBUF option is used by the 
network implementation as a hint to size the underlying
network I/O buffers. The SO_SNDBUF setting may also be used 
by the network implementation to determine the maximum size
of the packet that can be sent on this socket.
<p>
As SO_SNDBUF is a hint, applications that want to verify
what size the buffer is should call {@link #getSendBufferSize()}.
<p>
Increasing the buffer size may allow multiple outgoing packets 
to be queued by the network implementation when the send rate
is high. 
<p>
Note: If {@link #send(DatagramPacket)} is used to send a 
<code>DatagramPacket</code> that is larger than the setting
of SO_SNDBUF then it is implementation specific if the
packet is sent or discarded.

@param size the size to which to set the send buffer
size. This value must be greater than 0.

@exception SocketException if there is an error 
in the underlying protocol, such as an UDP error.
@exception IllegalArgumentException if the value is 0 or is
negative.
@see #getSendBufferSize()"
      end

      operation 7184795 "getSendBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of the SO_SNDBUF option for this <tt>DatagramSocket</tt>, that is the
buffer size used by the platform for output on this <tt>DatagramSocket</tt>.

@return the value of the SO_SNDBUF option for this <tt>DatagramSocket</tt>
@exception SocketException if there is an error in 
the underlying protocol, such as an UDP error.
@see #setSendBufferSize"
      end

      operation 7184923 "setReceiveBufferSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SO_RCVBUF option to the specified value for this
<tt>DatagramSocket</tt>. The SO_RCVBUF option is used by the
the network implementation as a hint to size the underlying
network I/O buffers. The SO_RCVBUF setting may also be used
by the network implementation to determine the maximum size
of the packet that can be received on this socket.
<p>
Because SO_RCVBUF is a hint, applications that want to
verify what size the buffers were set to should call
{@link #getReceiveBufferSize()}.
<p>
Increasing SO_RCVBUF may allow the network implementation
to buffer multiple packets when packets arrive faster than
are being received using {@link #receive(DatagramPacket)}.
<p>
Note: It is implementation specific if a packet larger
than SO_RCVBUF can be received.

@param size the size to which to set the receive buffer
size. This value must be greater than 0.

@exception SocketException if there is an error in 
the underlying protocol, such as an UDP error.
@exception IllegalArgumentException if the value is 0 or is
negative.
@see #getReceiveBufferSize()"
      end

      operation 7185051 "getReceiveBufferSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of the SO_RCVBUF option for this <tt>DatagramSocket</tt>, that is the
buffer size used by the platform for input on this <tt>DatagramSocket</tt>.

@return the value of the SO_RCVBUF option for this <tt>DatagramSocket</tt>
@exception SocketException if there is an error in the underlying protocol, such as an UDP error.
@see #setReceiveBufferSize(int)"
      end

      operation 7185179 "setReuseAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the SO_REUSEADDR socket option.
<p>
For UDP sockets it may be necessary to bind more than one
socket to the same socket address. This is typically for the
purpose of receiving multicast packets
(See {@link java.net.MulticastSocket}). The
<tt>SO_REUSEADDR</tt> socket option allows multiple
sockets to be bound to the same socket address if the
<tt>SO_REUSEADDR</tt> socket option is enabled prior
to binding the socket using {@link #bind(SocketAddress)}.
<p>
When a <tt>DatagramSocket</tt> is created the initial setting
of <tt>SO_REUSEADDR</tt> is disabled.
<p>
The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
disabled after a socket is bound (See {@link #isBound()})
is not defined.

@param on  whether to enable or disable the 
@exception SocketException if an error occurs enabling or
           disabling the <tt>SO_RESUEADDR</tt> socket option,
	   	  or the socket is closed.
@since 1.4
@see #getReuseAddress()     
@see #bind(SocketAddress)     
@see #isBound()
@see #isClosed()"
      end

      operation 7185307 "getReuseAddress"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if SO_REUSEADDR is enabled.

@return a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as an UDP error. 
@since   1.4
@see #setReuseAddress(boolean)"
      end

      operation 7185435 "setBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable SO_BROADCAST.
@param on     whether or not to have broadcast turned on.
@exception SocketException if there is an error
in the underlying protocol, such as an UDP error.
@since 1.4
@see #getBroadcast()"
      end

      operation 7185563 "getBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if SO_BROADCAST is enabled.
@return a <code>boolean</code> indicating whether or not SO_BROADCAST is enabled.
@exception SocketException if there is an error
in the underlying protocol, such as an UDP error.
@since 1.4
@see #setBroadcast(boolean)"
      end

      operation 7185691 "setTrafficClass"
	public explicit_return_type "void"
	nparams 1
	  param in name "tc" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets traffic class or type-of-service octet in the IP
datagram header for datagrams sent from this DatagramSocket.
As the underlying network implementation may ignore this
value applications should consider it a hint.

<P> The tc <B>must</B> be in the range <code> 0 <= tc <=
255</code> or an IllegalArgumentException will be thrown.
<p>Notes:
<p> for Internet Protocol v4 the value consists of an octet
with precedence and TOS fields as detailed in RFC 1349. The
TOS field is bitset created by bitwise-or'ing values such
the following :-
<p>
<UL>
<LI><CODE>IPTOS_LOWCOST (0x02)</CODE></LI>
<LI><CODE>IPTOS_RELIABILITY (0x04)</CODE></LI>
<LI><CODE>IPTOS_THROUGHPUT (0x08)</CODE></LI>
<LI><CODE>IPTOS_LOWDELAY (0x10)</CODE></LI>
</UL>
The last low order bit is always ignored as this
corresponds to the MBZ (must be zero) bit.
<p>
Setting bits in the precedence field may result in a 
SocketException indicating that the operation is not
permitted.
<p>
for Internet Protocol v6 <code>tc</code> is the value that 
would be placed into the sin6_flowinfo field of the IP header.

@param tc	an <code>int</code> value for the bitset.
@throws SocketException if there is an error setting the
traffic class or type-of-service 
@since 1.4
@see #getTrafficClass"
      end

      operation 7185819 "getTrafficClass"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets traffic class or type-of-service in the IP datagram 
header for packets sent from this DatagramSocket.
<p>
As the underlying network implementation may ignore the
traffic class or type-of-service set using {@link #setTrafficClass(int)}
this method may return a different value than was previously
set using the {@link #setTrafficClass(int)} method on this 
DatagramSocket.

@return the traffic class or type-of-service already set
@throws SocketException if there is an error obtaining the
traffic class or type-of-service value.
@since 1.4
@see #setTrafficClass(int)"
      end

      operation 7185947 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this datagram socket.
<p>
Any thread currently blocked in {#link receive} upon this socket
will throw a {@link SocketException}.

<p> If this socket has an associated channel then the channel is closed
as well.

@revised 1.4
@spec JSR-51"
      end

      operation 7186075 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the socket is closed or not.

@return true if the socket has been closed
@since 1.4"
      end

      operation 7186203 "getChannel"
	public return_type class_ref 927643 // DatagramChannel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.nio.channels.DatagramChannel} object
associated with this datagram socket, if any.

<p> A datagram socket will have a channel if, and only if, the channel
itself was created via the {@link java.nio.channels.DatagramChannel#open
DatagramChannel.open} method.

@return  the datagram channel associated with this datagram socket,
         or <tt>null</tt> if this socket was not created for a channel

@since 1.4
@spec JSR-51"
      end

      classrelation 1809691 // factory (<unidirectional association>)
	relation 1809691 --->
	  a role_name "factory" class_relation package
	    comment "
The factory for all datagram sockets.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809691 // factory (<unidirectional association>)
	  b parent class_ref 927771 // DatagramSocketImplFactory
      end

      operation 7186331 "setDatagramSocketImplFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 927771 // DatagramSocketImplFactory
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the datagram socket implementation factory for the
application. The factory can be specified only once.
<p>
When an application creates a new datagram socket, the socket
implementation factory's <code>createDatagramSocketImpl</code> method is
called to create the actual datagram socket implementation.
<p>
Passing <code>null</code> to the method is a no-op unless the factory
was already set.

<p>If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param      fac   the desired factory.
@exception  IOException  if an I/O error occurs when setting the
             datagram socket factory.
@exception  SocketException  if the factory is already defined.
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't allow the 
operation.
@see        
java.net.DatagramSocketImplFactory#createDatagramSocketImpl()
@see       SecurityManager#checkSetFactory"
      end
    end

    class 544667 "DatagramPacket"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a datagram packet. 
<p>
Datagram packets are used to implement a connectionless packet 
delivery service. Each message is routed from one machine to 
another based solely on information contained within that packet. 
Multiple packets sent from one machine to another might be routed 
differently, and might arrive in any order. Packet delivery is
not guaranteed.

@author  Pavani Diwanji
@author  Benjamin Renaud
@version 1.43, 12/19/03
@since   JDK1.0"
      extra_member 162971 "initialization"
	
	cpp "" ""
	java "  static {
	java.security.AccessController.doPrivileged(
		  new sun.security.action.LoadLibraryAction(\"net\"));
	init();
    }"
	php ""
	python ""
	idl ""
      end

      attribute 2763547 "buf"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The fields of this class are package-private since DatagramSocketImpl 
classes needs to access them.
"
      end

      attribute 2763675 "offset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2763803 "length"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2763931 "bufLength"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1809179 // address (<unidirectional association>)
	relation 1809179 --->
	  a role_name "address" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809179 // address (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2764059 "port"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7179035 "DatagramPacket"
	public explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DatagramPacket</code> for receiving packets of 
length <code>length</code>, specifying an offset into the buffer.
<p>
The <code>length</code> argument must be less than or equal to 
<code>buf.length</code>. 

@param   buf      buffer for holding the incoming datagram.
@param   offset   the offset for the buffer
@param   length   the number of bytes to read.

@since JDK1.2"
      end

      operation 7179163 "DatagramPacket"
	public explicit_return_type ""
	nparams 2
	  param in name "buf" explicit_type "byte"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DatagramPacket</code> for receiving packets of 
length <code>length</code>. 
<p>
The <code>length</code> argument must be less than or equal to 
<code>buf.length</code>. 

@param   buf      buffer for holding the incoming datagram.
@param   length   the number of bytes to read."
      end

      operation 7179291 "DatagramPacket"
	public explicit_return_type ""
	nparams 5
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram packet for sending packets of length
<code>length</code> with offset <code>ioffset</code>to the
specified port number on the specified host. The
<code>length</code> argument must be less than or equal to
<code>buf.length</code>.

@param   buf      the packet data.
@param   offset   the packet data offset.
@param   length   the packet data length.
@param   address  the destination address.
@param   port     the destination port number.
@see java.net.InetAddress

@since JDK1.2"
      end

      operation 7179419 "DatagramPacket"
	public explicit_return_type ""
	nparams 4
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "address" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram packet for sending packets of length
<code>length</code> with offset <code>ioffset</code>to the
specified port number on the specified host. The
<code>length</code> argument must be less than or equal to
<code>buf.length</code>.

@param   buf      the packet data.
@param   offset   the packet data offset.
@param   length   the packet data length.
@param   address  the destination socket address.
@throws  IllegalArgumentException if address type is not supported
@see java.net.InetAddress

@since 1.4"
      end

      operation 7179547 "DatagramPacket"
	public explicit_return_type ""
	nparams 4
	  param in name "buf" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram packet for sending packets of length 
<code>length</code> to the specified port number on the specified 
host. The <code>length</code> argument must be less than or equal 
to <code>buf.length</code>. 

@param   buf      the packet data.
@param   length   the packet length.
@param   address  the destination address.
@param   port     the destination port number.
@see     java.net.InetAddress"
      end

      operation 7179675 "DatagramPacket"
	public explicit_return_type ""
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "address" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a datagram packet for sending packets of length 
<code>length</code> to the specified port number on the specified 
host. The <code>length</code> argument must be less than or equal 
to <code>buf.length</code>. 

@param   buf      the packet data.
@param   length   the packet length.
@param   address  the destination address.
@throws  IllegalArgumentException if address type is not supported
@since 1.4
@see     java.net.InetAddress"
      end

      operation 7179803 "getAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address of the machine to which this datagram is being
sent or from which the datagram was received.

@return  the IP address of the machine to which this datagram is being
         sent or from which the datagram was received.
@see     java.net.InetAddress
@see #setAddress(java.net.InetAddress)"
      end

      operation 7179931 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number on the remote host to which this datagram is
being sent or from which the datagram was received.

@return  the port number on the remote host to which this datagram is
         being sent or from which the datagram was received.
@see #setPort(int)"
      end

      operation 7180059 "getData"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the data buffer. The data received or the data to be sent
starts from the <code>offset</code> in the buffer, 
and runs for <code>length</code> long.

@return  the buffer used to receive or  send data
@see #setData(byte[], int, int)"
      end

      operation 7180187 "getOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the offset of the data to be sent or the offset of the
data received.

@return  the offset of the data to be sent or the offset of the
         data received.

@since JDK1.2"
      end

      operation 7180315 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the data to be sent or the length of the
data received.

@return  the length of the data to be sent or the length of the
         data received.
@see #setLength(int)"
      end

      operation 7180443 "setData"
	public explicit_return_type "void"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the data buffer for this packet. This sets the
data, length and offset of the packet.

@param buf the buffer to set for this packet

@param offset the offset into the data

@param length the length of the data 
      and/or the length of the buffer used to receive data

@exception NullPointerException if the argument is null

@see #getData
@see #getOffset
@see #getLength

@since JDK1.2 "
      end

      operation 7180571 "setAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iaddr" type class_ref 530715 // InetAddress
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the IP address of the machine to which this datagram
is being sent.
@param iaddr the <code>InetAddress</code>
@since   JDK1.1
@see #getAddress()"
      end

      operation 7180699 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "iport" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the port number on the remote host to which this datagram
is being sent.
@param iport the port number
@since   JDK1.1
@see #getPort()"
      end

      operation 7180827 "setSocketAddress"
	public explicit_return_type "void"
	nparams 1
	  param inout name "address" type class_ref 927387 // SocketAddress
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SocketAddress (usually IP address + port number) of the remote
host to which this datagram is being sent.

@param address the <code>SocketAddress</code>
@throws  IllegalArgumentException if address is null or is a
         SocketAddress subclass not supported by this socket

@since 1.4
@see #getSocketAddress"
      end

      operation 7180955 "getSocketAddress"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the SocketAddress (usually IP address + port number) of the remote
host that this packet is being sent to or is coming from.

@return the <code>SocketAddress</code>
@since 1.4
@see #setSocketAddress"
      end

      operation 7181083 "setData"
	public explicit_return_type "void"
	nparams 1
	  param in name "buf" explicit_type "byte"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the data buffer for this packet. With the offset of 
this DatagramPacket set to 0, and the length set to
the length of <code>buf</code>.

@param buf the buffer to set for this packet.

@exception NullPointerException if the argument is null.

@see #getLength
@see #getData

@since JDK1.1 "
      end

      operation 7181211 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the length for this packet. The length of the packet is
the number of bytes from the packet's data buffer that will be
sent, or the number of bytes of the packet's data buffer that
will be used for receiving data. The length must be lesser or
equal to the offset plus the length of the packet's buffer.

@param length the length to set for this packet.

@exception IllegalArgumentException if the length is negative
of if the length is greater than the packet's data buffer
length.

@see #getLength
@see #setData

@since JDK1.1 "
      end

      operation 7181339 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations.  "
      end
    end

    class 730011 "URLConnection"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class <code>URLConnection</code> is the superclass
of all classes that represent a communications link between the
application and a URL. Instances of this class can be used both to
read from and to write to the resource referenced by the URL. In
general, creating a connection to a URL is a multistep process:
<p>
<center><table border=2 summary=\"Describes the process of creating a connection to a URL: openConnection() and connect() over time.\">
<tr><th><code>openConnection()</code></th>
    <th><code>connect()</code></th></tr>
<tr><td>Manipulate parameters that affect the connection to the remote
        resource.</td>
    <td>Interact with the resource; query header fields and
        contents.</td></tr>
</table>
----------------------------&gt;
<br>time</center>

<ol>
<li>The connection object is created by invoking the
    <code>openConnection</code> method on a URL.
<li>The setup parameters and general request properties are manipulated.
<li>The actual connection to the remote object is made, using the
   <code>connect</code> method.
<li>The remote object becomes available. The header fields and the contents
    of the remote object can be accessed.
</ol>
<p>
The setup parameters are modified using the following methods:
<ul>
  <li><code>setAllowUserInteraction</code>
  <li><code>setDoInput</code>
  <li><code>setDoOutput</code>
  <li><code>setIfModifiedSince</code>
  <li><code>setUseCaches</code>
</ul>
<p>
and the general request properties are modified using the method:
<ul>
  <li><code>setRequestProperty</code>
</ul>
<p>
Default values for the <code>AllowUserInteraction</code> and
<code>UseCaches</code> parameters can be set using the methods
<code>setDefaultAllowUserInteraction</code> and
<code>setDefaultUseCaches</code>.
<p>
Each of the above <code>set</code> methods has a corresponding
<code>get</code> method to retrieve the value of the parameter or
general request property. The specific parameters and general
request properties that are applicable are protocol specific. 
<p>
The following methods are used to access the header fields and 
the contents after the connection is made to the remote object:
<ul>
  <li><code>getContent</code>
  <li><code>getHeaderField</code>
  <li><code>getInputStream</code>
  <li><code>getOutputStream</code>
</ul>
<p>
Certain header fields are accessed frequently. The methods:
<ul>
  <li><code>getContentEncoding</code>
  <li><code>getContentLength</code>
  <li><code>getContentType</code>
  <li><code>getDate</code>
  <li><code>getExpiration</code>
  <li><code>getLastModifed</code>
</ul>
<p>
provide convenient access to these fields. The 
<code>getContentType</code> method is used by the 
<code>getContent</code> method to determine the type of the remote 
object; subclasses may find it convenient to override the 
<code>getContentType</code> method. 
<p>
In the common case, all of the pre-connection parameters and 
general request properties can be ignored: the pre-connection 
parameters and request properties default to sensible values. For
most clients of this interface, there are only two interesting
methods: <code>getInputStream</code> and <code>getContent</code>,
which are mirrored in the <code>URL</code> class by convenience methods.
<p>
More information on the request properties and header fields of
an <code>http</code> connection can be found at:
<blockquote><pre>
<a href=\"http://www.ietf.org/rfc/rfc2068.txt\">http://www.ietf.org/rfc/rfc2068.txt</a>
</pre></blockquote>

Note about <code>fileNameMap</code>: In versions prior to JDK 1.1.6, 
field <code>fileNameMap</code> of <code>URLConnection</code> was public.
In JDK 1.1.6 and later, <code>fileNameMap</code> is private; accessor 
and mutator methods {@link #getFileNameMap() getFileNameMap} and 
{@link #setFileNameMap(java.net.FileNameMap) setFileNameMap} are added
to access it.  This change is also described on the <a href=
\"http://java.sun.com/products/jdk/1.2/compatibility.html#incompatibilities1.2\">
Compatibility</a> page.

Invoking the <tt>close()</tt> methods on the <tt>InputStream</tt> or <tt>OutputStream</tt> of an 
<tt>URLConnection</tt> after a request may free network resources associated with this 
instance, unless particular protocol specifications specify different behaviours 
for it.

@author  James Gosling
@version 1.102, 05/18/04
@see     java.net.URL#openConnection()
@see     java.net.URLConnection#connect()
@see     java.net.URLConnection#getContent()
@see     java.net.URLConnection#getContentEncoding()
@see     java.net.URLConnection#getContentLength()
@see     java.net.URLConnection#getContentType()
@see     java.net.URLConnection#getDate()
@see     java.net.URLConnection#getExpiration()
@see     java.net.URLConnection#getHeaderField(int)
@see     java.net.URLConnection#getHeaderField(java.lang.String)
@see     java.net.URLConnection#getInputStream()
@see     java.net.URLConnection#getLastModified()
@see     java.net.URLConnection#getOutputStream()
@see     java.net.URLConnection#setAllowUserInteraction(boolean)
@see     java.net.URLConnection#setDefaultUseCaches(boolean)
@see     java.net.URLConnection#setDoInput(boolean)
@see     java.net.URLConnection#setDoOutput(boolean)
@see     java.net.URLConnection#setIfModifiedSince(long)
@see     java.net.URLConnection#setRequestProperty(java.lang.String, java.lang.String)
@see     java.net.URLConnection#setUseCaches(boolean)
@since   JDK1.0"
      classrelation 1810203 // url (<unidirectional association>)
	relation 1810203 --->
	  a role_name "url" protected
	    comment "
The URL represents the remote object on the World Wide Web to 
which this connection is opened. 
<p>
The value of this field can be accessed by the 
<code>getURL</code> method. 
<p>
The default value of this variable is the value of the URL 
argument in the <code>URLConnection</code> constructor. 

@see     java.net.URLConnection#getURL()
@see     java.net.URLConnection#url

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810203 // url (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      attribute 2767643 "doInput"
	protected explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This variable is set by the <code>setDoInput</code> method. Its 
value is returned by the <code>getDoInput</code> method. 
<p>
A URL connection can be used for input and/or output. Setting the 
<code>doInput</code> flag to <code>true</code> indicates that 
the application intends to read data from the URL connection. 
<p>
The default value of this field is <code>true</code>. 

@see     java.net.URLConnection#getDoInput()
@see     java.net.URLConnection#setDoInput(boolean)
"
      end

      attribute 2767771 "doOutput"
	protected explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This variable is set by the <code>setDoOutput</code> method. Its 
value is returned by the <code>getDoOutput</code> method. 
<p>
A URL connection can be used for input and/or output. Setting the 
<code>doOutput</code> flag to <code>true</code> indicates 
that the application intends to write data to the URL connection. 
<p>
The default value of this field is <code>false</code>. 

@see     java.net.URLConnection#getDoOutput()
@see     java.net.URLConnection#setDoOutput(boolean)
"
      end

      attribute 2767899 "defaultAllowUserInteraction"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2768027 "allowUserInteraction"
	protected explicit_type "boolean"
	init_value "=  defaultAllowUserInteraction"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If <code>true</code>, this <code>URL</code> is being examined in 
a context in which it makes sense to allow user interactions such 
as popping up an authentication dialog. If <code>false</code>, 
then no user interaction is allowed. 
<p>
The value of this field can be set by the 
<code>setAllowUserInteraction</code> method.
Its value is returned by the 
<code>getAllowUserInteraction</code> method.
Its default value is the value of the argument in the last invocation 
of the <code>setDefaultAllowUserInteraction</code> method. 

@see     java.net.URLConnection#getAllowUserInteraction()
@see     java.net.URLConnection#setAllowUserInteraction(boolean)
@see     java.net.URLConnection#setDefaultAllowUserInteraction(boolean)
"
      end

      attribute 2768155 "defaultUseCaches"
	class_attribute private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2768283 "useCaches"
	protected explicit_type "boolean"
	init_value "=  defaultUseCaches"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If <code>true</code>, the protocol is allowed to use caching 
whenever it can. If <code>false</code>, the protocol must always 
try to get a fresh copy of the object. 
<p>
This field is set by the <code>setUseCaches</code> method. Its 
value is returned by the <code>getUseCaches</code> method.
<p>
Its default value is the value given in the last invocation of the 
<code>setDefaultUseCaches</code> method. 

@see     java.net.URLConnection#setUseCaches(boolean)
@see     java.net.URLConnection#getUseCaches()
@see     java.net.URLConnection#setDefaultUseCaches(boolean)
"
      end

      attribute 2768411 "ifModifiedSince"
	protected explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Some protocols support skipping the fetching of the object unless 
the object has been modified more recently than a certain time. 
<p>
A nonzero value gives a time as the number of milliseconds since 
January 1, 1970, GMT. The object is fetched only if it has been 
modified more recently than that time. 
<p>
This variable is set by the <code>setIfModifiedSince</code> 
method. Its value is returned by the 
<code>getIfModifiedSince</code> method.
<p>
The default value of this field is <code>0</code>, indicating 
that the fetching must always occur. 

@see     java.net.URLConnection#getIfModifiedSince()
@see     java.net.URLConnection#setIfModifiedSince(long)
"
      end

      attribute 2768539 "connected"
	protected explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If <code>false</code>, this connection object has not created a 
communications link to the specified URL. If <code>true</code>, 
the communications link has been established. 
"
      end

      attribute 2768667 "connectTimeout"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@since 1.5
"
      end

      attribute 2768795 "readTimeout"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1810331 // fileNameMap (<unidirectional association>)
	relation 1810331 --->
	  a role_name "fileNameMap" class_relation private
	    comment "
@since   JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810331 // fileNameMap (<unidirectional association>)
	  b parent class_ref 928155 // FileNameMap
      end

      attribute 2768923 "fileNameMapLoaded"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@since 1.2.2
"
      end

      operation 7190043 "getFileNameMap"
	class_operation public return_type class_ref 928155 // FileNameMap
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads filename map (a mimetable) from a data file. It will
first try to load the user-specific table, defined
by &quot;content.types.user.table&quot; property. If that fails,
it tries to load the default built-in table at 
lib/content-types.properties under java home.

@return the FileNameMap
@since 1.2
@see #setFileNameMap(java.net.FileNameMap)"
      end

      operation 7190171 "setFileNameMap"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 928155 // FileNameMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the FileNameMap.
<p>
If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param map the FileNameMap to be set
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't allow the operation.
@see        SecurityManager#checkSetFactory
@see #getFileNameMap()
@since 1.2"
      end

      operation 7190299 "connect"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a communications link to the resource referenced by this 
URL, if such a connection has not already been established. 
<p>
If the <code>connect</code> method is called when the connection 
has already been opened (indicated by the <code>connected</code> 
field having the value <code>true</code>), the call is ignored. 
<p>
URLConnection objects go through two phases: first they are
created, then they are connected.  After being created, and
before being connected, various options can be specified
(e.g., doInput and UseCaches).  After connecting, it is an
error to try to set them.  Operations that depend on being
connected, like getContentLength, will implicitly perform the
connection, if necessary.

@throws SocketTimeoutException if the timeout expires before
              the connection can be established
@exception  IOException  if an I/O error occurs while opening the
              connection.
@see java.net.URLConnection#connected
@see #getConnectTimeout()
@see #setConnectTimeout(int)"
      end

      operation 7190427 "setConnectTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a specified timeout value, in milliseconds, to be used
when opening a communications link to the resource referenced
by this URLConnection.  If the timeout expires before the
connection can be established, a
java.net.SocketTimeoutException is raised. A timeout of zero is
interpreted as an infinite timeout.

<p> Some non-standard implmentation of this method may ignore
the specified timeout. To see the connect timeout set, please
call getConnectTimeout().

@param timeout an <code>int</code> that specifies the connect
              timeout value in milliseconds
@throws IllegalArgumentException if the timeout parameter is negative

@see #getConnectTimeout()
@see #connect()
@since 1.5"
      end

      operation 7190555 "getConnectTimeout"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns setting for connect timeout.
<p>
0 return implies that the option is disabled
(i.e., timeout of infinity).

@return an <code>int</code> that indicates the connect timeout
        value in milliseconds
@see #setConnectTimeout(int)
@see #connect()
@since 1.5"
      end

      operation 7190683 "setReadTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the read timeout to a specified timeout, in
milliseconds. A non-zero value specifies the timeout when
reading from Input stream when a connection is established to a
resource. If the timeout expires before there is data available
for read, a java.net.SocketTimeoutException is raised. A
timeout of zero is interpreted as an infinite timeout.

<p> Some non-standard implementation of this method ignores the
specified timeout. To see the read timeout set, please call
getReadTimeout().

@param timeout an <code>int</code> that specifies the timeout
value to be used in milliseconds
@throws IllegalArgumentException if the timeout parameter is negative

@see #getReadTimeout()
@see InputStream#read()
@since 1.5"
      end

      operation 7190811 "getReadTimeout"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns setting for read timeout. 0 return implies that the
option is disabled (i.e., timeout of infinity).

@return an <code>int</code> that indicates the read timeout
        value in milliseconds

@see #setReadTimeout(int)
@see InputStream#read()
@since 1.5"
      end

      operation 7190939 "URLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a URL connection to the specified URL. A connection to 
the object referenced by the URL is not created. 

@param   url   the specified URL."
      end

      operation 7191067 "getURL"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this <code>URLConnection</code>'s <code>URL</code>
field.

@return  the value of this <code>URLConnection</code>'s <code>URL</code>
         field.
@see     java.net.URLConnection#url"
      end

      operation 7191195 "getContentLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>content-length</code> header field.

@return  the content length of the resource that this connection's URL
         references, or <code>-1</code> if the content length is
         not known."
      end

      operation 7191323 "getContentType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>content-type</code> header field.

@return  the content type of the resource that the URL references,
         or <code>null</code> if not known.
@see     java.net.URLConnection#getHeaderField(java.lang.String)"
      end

      operation 7191451 "getContentEncoding"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>content-encoding</code> header field.

@return  the content encoding of the resource that the URL references,
         or <code>null</code> if not known.
@see     java.net.URLConnection#getHeaderField(java.lang.String)"
      end

      operation 7191579 "getExpiration"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>expires</code> header field. 

@return  the expiration date of the resource that this URL references,
         or 0 if not known. The value is the number of milliseconds since
         January 1, 1970 GMT.
@see     java.net.URLConnection#getHeaderField(java.lang.String)"
      end

      operation 7191707 "getDate"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>date</code> header field. 

@return  the sending date of the resource that the URL references,
         or <code>0</code> if not known. The value returned is the
         number of milliseconds since January 1, 1970 GMT.
@see     java.net.URLConnection#getHeaderField(java.lang.String)"
      end

      operation 7191835 "getLastModified"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>last-modified</code> header field. 
The result is the number of milliseconds since January 1, 1970 GMT.

@return  the date the resource referenced by this
         <code>URLConnection</code> was last modified, or 0 if not known.
@see     java.net.URLConnection#getHeaderField(java.lang.String)"
      end

      operation 7191963 "getHeaderField"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named header field.
<p>
If called on a connection that sets the same header multiple times
with possibly different values, only the last value is returned.


@param   name   the name of a header field.
@return  the value of the named header field, or <code>null</code>
         if there is no such field in the header."
      end

      operation 7192091 "getHeaderFields"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Map of the header fields.
The Map keys are Strings that represent the
response-header field names. Each Map value is an
unmodifiable List of Strings that represents 
the corresponding field values.

@return a Map of header fields
@since 1.4"
      end

      operation 7192219 "getHeaderFieldInt"
	public explicit_return_type "int"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "Default" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named field parsed as a number.
<p>
This form of <code>getHeaderField</code> exists because some 
connection types (e.g., <code>http-ng</code>) have pre-parsed 
headers. Classes for that connection type can override this method 
and short-circuit the parsing. 

@param   name      the name of the header field.
@param   Default   the default value.
@return  the value of the named field, parsed as an integer. The
         <code>Default</code> value is returned if the field is
         missing or malformed."
      end

      operation 7192347 "getHeaderFieldDate"
	public explicit_return_type "long"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "Default" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named field parsed as date.
The result is the number of milliseconds since January 1, 1970 GMT
represented by the named field. 
<p>
This form of <code>getHeaderField</code> exists because some 
connection types (e.g., <code>http-ng</code>) have pre-parsed 
headers. Classes for that connection type can override this method 
and short-circuit the parsing. 

@param   name     the name of the header field.
@param   Default   a default value.
@return  the value of the field, parsed as a date. The value of the
         <code>Default</code> argument is returned if the field is
         missing or malformed."
      end

      operation 7192475 "getHeaderFieldKey"
	public explicit_return_type "String"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key for the <code>n</code><sup>th</sup> header field.
It returns <code>null</code> if there are fewer than <code>n+1</code> fields. 

@param   n   an index, where n>=0
@return  the key for the <code>n</code><sup>th</sup> header field,
         or <code>null</code> if there are fewer than <code>n+1</code>
		fields."
      end

      operation 7192603 "getHeaderField"
	public explicit_return_type "String"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for the <code>n</code><sup>th</sup> header field. 
It returns <code>null</code> if there are fewer than
<code>n+1</code>fields. 
<p>
This method can be used in conjunction with the 
{@link #getHeaderFieldKey(int) getHeaderFieldKey} method to iterate through all 
the headers in the message. 

@param   n   an index, where n>=0
@return  the value of the <code>n</code><sup>th</sup> header field
		or <code>null</code> if there are fewer than <code>n+1</code> fields
@see     java.net.URLConnection#getHeaderFieldKey(int)"
      end

      operation 7192731 "getContent"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the contents of this URL connection. 
<p>
This method first determines the content type of the object by 
calling the <code>getContentType</code> method. If this is 
the first time that the application has seen that specific content 
type, a content handler for that content type is created: 
<ol>
<li>If the application has set up a content handler factory instance
    using the <code>setContentHandlerFactory</code> method, the
    <code>createContentHandler</code> method of that instance is called
    with the content type as an argument; the result is a content
    handler for that content type.
<li>If no content handler factory has yet been set up, or if the
    factory's <code>createContentHandler</code> method returns
    <code>null</code>, then the application loads the class named:
    <blockquote><pre>
        sun.net.www.content.&lt;<i>contentType</i>&gt;
    </pre></blockquote>
    where &lt;<i>contentType</i>&gt; is formed by taking the
    content-type string, replacing all slash characters with a
    <code>period</code> ('.'), and all other non-alphanumeric characters
    with the underscore character '<code>_</code>'. The alphanumeric
    characters are specifically the 26 uppercase ASCII letters
    '<code>A</code>' through '<code>Z</code>', the 26 lowercase ASCII
    letters '<code>a</code>' through '<code>z</code>', and the 10 ASCII
    digits '<code>0</code>' through '<code>9</code>'. If the specified
    class does not exist, or is not a subclass of
    <code>ContentHandler</code>, then an
    <code>UnknownServiceException</code> is thrown.
</ol>

@return     the object fetched. The <code>instanceof</code> operator
              should be used to determine the specific kind of object
              returned.
@exception  IOException              if an I/O error occurs while
              getting the content.
@exception  UnknownServiceException  if the protocol does not support
              the content type.
@see        java.net.ContentHandlerFactory#createContentHandler(java.lang.String)
@see        java.net.URLConnection#getContentType()
@see        java.net.URLConnection#setContentHandlerFactory(java.net.ContentHandlerFactory)"
      end

      operation 7192859 "getContent"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "classes" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the contents of this URL connection. 

@param classes the <code>Class</code> array 
indicating the requested types
@return     the object fetched that is the first match of the type
              specified in the classes array. null if none of 
              the requested types are supported.
              The <code>instanceof</code> operator should be used to 
              determine the specific kind of object returned.
@exception  IOException              if an I/O error occurs while
              getting the content.
@exception  UnknownServiceException  if the protocol does not support
              the content type.
@see        java.net.URLConnection#getContent()
@see        java.net.ContentHandlerFactory#createContentHandler(java.lang.String)
@see        java.net.URLConnection#getContent(java.lang.Class[])
@see        java.net.URLConnection#setContentHandlerFactory(java.net.ContentHandlerFactory)"
      end

      operation 7192987 "getPermission"
	public return_type class_ref 285211 // Permission
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a permission object representing the permission
necessary to make the connection represented by this
object. This method returns null if no permission is
required to make the connection. By default, this method
returns <code>java.security.AllPermission</code>. Subclasses
should override this method and return the permission
that best represents the permission required to make a 
a connection to the URL. For example, a <code>URLConnection</code>
representing a <code>file:</code> URL would return a 
<code>java.io.FilePermission</code> object.

<p>The permission returned may dependent upon the state of the
connection. For example, the permission before connecting may be
different from that after connecting. For example, an HTTP
sever, say foo.com, may redirect the connection to a different
host, say bar.com. Before connecting the permission returned by
the connection will represent the permission needed to connect
to foo.com, while the permission returned after connecting will
be to bar.com.

<p>Permissions are generally used for two purposes: to protect
caches of objects obtained through URLConnections, and to check
the right of a recipient to learn about a particular URL. In
the first case, the permission should be obtained
<em>after</em> the object has been obtained. For example, in an
HTTP connection, this will represent the permission to connect
to the host from which the data was ultimately fetched. In the
second case, the permission should be obtained and tested
<em>before</em> connecting.

@return the permission object representing the permission
necessary to make the connection represented by this
URLConnection. 

@exception IOException if the computation of the permission
requires network or file I/O and an exception occurs while
computing it.  "
      end

      operation 7193115 "getInputStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream that reads from this open connection.

A SocketTimeoutException can be thrown when reading from the
returned input stream if the read timeout expires before data
is available for read.

@return     an input stream that reads from this open connection.
@exception  IOException              if an I/O error occurs while
              creating the input stream.
@exception  UnknownServiceException  if the protocol does not support
              input.
@see #setReadTimeout(int)
@see #getReadTimeout()"
      end

      operation 7193243 "getOutputStream"
	public return_type class_ref 183835 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an output stream that writes to this connection.

@return     an output stream that writes to this connection.
@exception  IOException              if an I/O error occurs while
              creating the output stream.
@exception  UnknownServiceException  if the protocol does not support
              output."
      end

      operation 7193371 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> representation of this URL connection.

@return  a string representation of this <code>URLConnection</code>."
      end

      operation 7193499 "setDoInput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doinput" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>doInput</code> field for this 
<code>URLConnection</code> to the specified value. 
<p>
A URL connection can be used for input and/or output.  Set the DoInput
flag to true if you intend to use the URL connection for input,
false if not.  The default is true.

@param   doinput   the new value.
@throws IllegalStateException if already connected
@see     java.net.URLConnection#doInput
@see #getDoInput()"
      end

      operation 7193627 "getDoInput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this <code>URLConnection</code>'s
<code>doInput</code> flag.

@return  the value of this <code>URLConnection</code>'s
         <code>doInput</code> flag.
@see     #setDoInput(boolean)"
      end

      operation 7193755 "setDoOutput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dooutput" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>doOutput</code> field for this 
<code>URLConnection</code> to the specified value. 
<p>
A URL connection can be used for input and/or output.  Set the DoOutput
flag to true if you intend to use the URL connection for output,
false if not.  The default is false.

@param   dooutput   the new value.
@throws IllegalStateException if already connected
@see #getDoOutput()"
      end

      operation 7193883 "getDoOutput"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this <code>URLConnection</code>'s
<code>doOutput</code> flag.

@return  the value of this <code>URLConnection</code>'s
         <code>doOutput</code> flag.
@see     #setDoOutput(boolean)"
      end

      operation 7194011 "setAllowUserInteraction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowuserinteraction" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of the <code>allowUserInteraction</code> field of 
this <code>URLConnection</code>. 

@param   allowuserinteraction   the new value.
@throws IllegalStateException if already connected
@see     #getAllowUserInteraction()"
      end

      operation 7194139 "getAllowUserInteraction"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the <code>allowUserInteraction</code> field for
this object.

@return  the value of the <code>allowUserInteraction</code> field for
         this object.
@see     #setAllowUserInteraction(boolean)"
      end

      operation 7194267 "setDefaultAllowUserInteraction"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "defaultallowuserinteraction" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default value of the 
<code>allowUserInteraction</code> field for all future 
<code>URLConnection</code> objects to the specified value. 

@param   defaultallowuserinteraction   the new value.
@see     #getDefaultAllowUserInteraction()"
      end

      operation 7194395 "getDefaultAllowUserInteraction"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of the <code>allowUserInteraction</code>
field.
<p>
Ths default is \"sticky\", being a part of the static state of all
URLConnections.  This flag applies to the next, and all following
URLConnections that are created.

@return  the default value of the <code>allowUserInteraction</code>
         field.
@see     #setDefaultAllowUserInteraction(boolean)"
      end

      operation 7194523 "setUseCaches"
	public explicit_return_type "void"
	nparams 1
	  param inout name "usecaches" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>useCaches</code> field of this 
<code>URLConnection</code> to the specified value. 
<p>
Some protocols do caching of documents.  Occasionally, it is important
to be able to \"tunnel through\" and ignore the caches (e.g., the
\"reload\" button in a browser).  If the UseCaches flag on a connection
is true, the connection is allowed to use whatever caches it can.
 If false, caches are to be ignored.
 The default value comes from DefaultUseCaches, which defaults to
true.

@param usecaches a <code>boolean</code> indicating whether 
or not to allow caching
@throws IllegalStateException if already connected
@see #getUseCaches()"
      end

      operation 7194651 "getUseCaches"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this <code>URLConnection</code>'s
<code>useCaches</code> field.

@return  the value of this <code>URLConnection</code>'s
         <code>useCaches</code> field.
@see #setUseCaches(boolean)"
      end

      operation 7194779 "setIfModifiedSince"
	public explicit_return_type "void"
	nparams 1
	  param in name "ifmodifiedsince" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the <code>ifModifiedSince</code> field of 
this <code>URLConnection</code> to the specified value.

@param   ifmodifiedsince   the new value.
@throws IllegalStateException if already connected
@see     #getIfModifiedSince()"
      end

      operation 7194907 "getIfModifiedSince"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this object's <code>ifModifiedSince</code> field.

@return  the value of this object's <code>ifModifiedSince</code> field.
@see #setIfModifiedSince(long)"
      end

      operation 7195035 "getDefaultUseCaches"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of a <code>URLConnection</code>'s
<code>useCaches</code> flag.
<p>
Ths default is \"sticky\", being a part of the static state of all
URLConnections.  This flag applies to the next, and all following
URLConnections that are created.

@return  the default value of a <code>URLConnection</code>'s
         <code>useCaches</code> flag.
@see     #setDefaultUseCaches(boolean)"
      end

      operation 7195163 "setDefaultUseCaches"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultusecaches" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default value of the <code>useCaches</code> field to the 
specified value. 

@param   defaultusecaches   the new value.
@see     #getDefaultUseCaches()"
      end

      operation 7195291 "setRequestProperty"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the general request property. If a property with the key already
exists, overwrite its value with the new value.

<p> NOTE: HTTP requires all request properties which can
legally have multiple instances with the same key
to use a comma-seperated list syntax which enables multiple
properties to be appended into a single property.

@param   key     the keyword by which the request is known
                 (e.g., \"<code>accept</code>\").
@param   value   the value associated with it.
@throws IllegalStateException if already connected
@throws NullPointerException if key is <CODE>null</CODE>
@see #getRequestProperty(java.lang.String)"
      end

      operation 7195419 "addRequestProperty"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a general request property specified by a
key-value pair.  This method will not overwrite
existing values associated with the same key.

@param   key     the keyword by which the request is known
                 (e.g., \"<code>accept</code>\").
@param   value  the value associated with it.
@throws IllegalStateException if already connected
@throws NullPointerException if key is null
@see #getRequestProperties()
@since 1.4"
      end

      operation 7195547 "getRequestProperty"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named general request property for this
connection.

@param key the keyword by which the request is known (e.g., \"accept\").
@return  the value of the named general request property for this
          connection. If key is null, then null is returned.
@throws IllegalStateException if already connected
@see #setRequestProperty(java.lang.String, java.lang.String)"
      end

      operation 7195675 "getRequestProperties"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Map of general request
properties for this connection. The Map keys
are Strings that represent the request-header
field names. Each Map value is a unmodifiable List 
of Strings that represents the corresponding 
field values.

@return  a Map of the general request properties for this connection.
@throws IllegalStateException if already connected
@since 1.4"
      end

      operation 7195803 "setDefaultRequestProperty"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the default value of a general request property. When a 
<code>URLConnection</code> is created, it is initialized with 
these properties. 

@param   key     the keyword by which the request is known
                 (e.g., \"<code>accept</code>\").
@param   value   the value associated with the key.

@see java.net.URLConnection#setRequestProperty(java.lang.String,java.lang.String) 

@deprecated The instance specific setRequestProperty method
should be used after an appropriate instance of URLConnection
is obtained. Invoking this method will have no effect.

@see #getDefaultRequestProperty(java.lang.String)"
      end

      operation 7195931 "getDefaultRequestProperty"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the value of the default request property. Default request 
properties are set for every connection. 

@param key the keyword by which the request is known (e.g., \"accept\").
@return  the value of the default request property 
for the specified key.

@see java.net.URLConnection#getRequestProperty(java.lang.String)

@deprecated The instance specific getRequestProperty method
should be used after an appropriate instance of URLConnection
is obtained.

@see #setDefaultRequestProperty(java.lang.String, java.lang.String)"
      end

      classrelation 1810459 // factory (<unidirectional association>)
	relation 1810459 --->
	  a role_name "factory" class_relation package
	    comment "
The ContentHandler factory.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810459 // factory (<unidirectional association>)
	  b parent class_ref 927131 // ContentHandlerFactory
      end

      operation 7196059 "setContentHandlerFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fac" type class_ref 927131 // ContentHandlerFactory
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ContentHandlerFactory</code> of an 
application. It can be called at most once by an application. 
<p>
The <code>ContentHandlerFactory</code> instance is used to 
construct a content handler from a content type 
<p>
If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param      fac   the desired factory.
@exception  Error  if the factory has already been defined.
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't allow the operation.
@see        java.net.ContentHandlerFactory
@see        java.net.URLConnection#getContent()
@see        SecurityManager#checkSetFactory"
      end

      classrelation 1810587 // handlers (<unidirectional association>)
	relation 1810587 --->
	  a role_name "handlers" init_value "=  new Hashtable()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810587 // handlers (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1810715 // UnknownContentHandlerP (<unidirectional association>)
	relation 1810715 --->
	  a role_name "UnknownContentHandlerP" init_value "=  new UnknownContentHandler()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810715 // UnknownContentHandlerP (<unidirectional association>)
	  b parent class_ref 927003 // ContentHandler
      end

      operation 7196187 "getContentHandler"
	package return_type class_ref 927003 // ContentHandler
	nparams 0
	nexceptions 1
	  exception class_ref 928539 // UnknownServiceException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Content Handler appropriate for this connection.
@param connection the connection to use."
      end

      operation 7196315 "stripOffParameters"
	private explicit_return_type "String"
	nparams 1
	  param in name "contentType" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Media types are in the format: type/subtype*(; parameter).
For looking up the content handler, we should ignore those
parameters."
      end

      attribute 2769051 "contentClassPrefix"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"sun.net.www.content\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2769179 "contentPathProp"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"java.content.handler.pkgs\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7196443 "lookupContentHandlerClassFor"
	private return_type class_ref 927003 // ContentHandler
	nparams 1
	  param in name "contentType" explicit_type "String"
	nexceptions 3
	  exception class_ref 220059 // InstantiationException
	  exception class_ref 306331 // IllegalAccessException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks for a content handler in a user-defineable set of places.
By default it looks in sun.net.www.content, but users can define a 
vertical-bar delimited set of class prefixes to search through in 
addition by defining the java.content.handler.pkgs property.
The class name must be of the form:
<pre>
    {package-prefix}.{major}.{minor}
e.g.
    YoyoDyne.experimental.text.plain
</pre>"
      end

      operation 7196571 "typeToPackageName"
	private explicit_return_type "String"
	nparams 1
	  param in name "contentType" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility function to map a MIME content type into an equivalent
pair of class name components.  For example: \"text/html\" would
be returned as \"text.html\""
      end

      operation 7196699 "getContentHandlerPkgPrefixes"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a vertical bar separated list of package prefixes for potential
content handlers.  Tries to get the java.content.handler.pkgs property
to use as a set of package prefixes to search.  Whether or not
that property has been defined, the sun.net.www.content is always
the last one on the returned package list."
      end

      operation 7196827 "guessContentTypeFromName"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "fname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to determine the content type of an object, based 
on the specified \"file\" component of a URL.
This is a convenience method that can be used by 
subclasses that override the <code>getContentType</code> method. 

@param   fname   a filename.
@return  a guess as to what the content type of the object is,
         based upon its file name.
@see     java.net.URLConnection#getContentType()"
      end

      operation 7196955 "guessContentTypeFromStream"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to determine the type of an input stream based on the 
characters at the beginning of the input stream. This method can 
be used by subclasses that override the 
<code>getContentType</code> method. 
<p>
Ideally, this routine would not be needed. But many 
<code>http</code> servers return the incorrect content type; in 
addition, there are many nonstandard extensions. Direct inspection 
of the bytes to determine the content type is often more accurate 
than believing the content type claimed by the <code>http</code> server.

@param      is   an input stream that supports marks.
@return     a guess at the content type, or <code>null</code> if none
            can be determined.
@exception  IOException  if an I/O error occurs while reading the
              input stream.
@see        java.io.InputStream#mark(int)
@see        java.io.InputStream#markSupported()
@see        java.net.URLConnection#getContentType()"
      end

      operation 7197083 "checkfpx"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check for FlashPix image data in InputStream is.  Return true if
the stream has FlashPix data, false otherwise.  Before calling this
method, the stream should have already been checked to be sure it
contains Microsoft Structured Storage data."
      end

      operation 7197211 "readBytes"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "c" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "is" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to read the specified number of bytes from the stream
Returns -1, If EOF is reached before len bytes are read, returns 0
otherwise "
      end

      operation 7197339 "skipForward"
	class_operation private explicit_return_type "long"
	nparams 2
	  param inout name "is" type class_ref 179099 // InputStream
	  param in name "toSkip" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips through the specified number of bytes from the stream
until either EOF is reached, or the specified
number of bytes have been skipped "
      end
    end

    class 843035 "SocketPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents access to a network via sockets.
A SocketPermission consists of a 
host specification and a set of \"actions\" specifying ways to
connect to that host. The host is specified as
<pre>
   host = (hostname | IPv4address | iPv6reference) [:portrange]
   portrange = portnumber | -portnumber | portnumber-[portnumber]
</pre>
The host is expressed as a DNS name, as a numerical IP address,
or as \"localhost\" (for the local machine).
The wildcard \"*\" may be included once in a DNS name host
specification. If it is included, it must be in the leftmost 
position, as in \"*.sun.com\".
<p>
The format of the IPv6reference should follow that specified in <a
href=\"http://www.ietf.org/rfc/rfc2732.txt\"><i>RFC&nbsp;2732: Format
for Literal IPv6 Addresses in URLs</i></a>:
<pre>
   ipv6reference = \"[\" IPv6address \"]\"
</pre>
For example, you can construct a SocketPermission instance
as the following:
<pre>
   String hostAddress = inetaddress.getHostAddress();
   if (inetaddress instanceof Inet6Address) {
       sp = new SocketPermission(\"[\" + hostAddress + \"]:\" + port, action);
   } else {
       sp = new SocketPermission(hostAddress + \":\" + port, action);
   }
</pre>
or
<pre>
   String host = url.getHost();
   sp = new SocketPermission(host + \":\" + port, action);
</pre>
<p>
The <A HREF=\"Inet6Address.html#lform\">full uncompressed form</A> of
an IPv6 literal address is also valid.
<p>
The port or portrange is optional. A port specification of the 
form \"N-\", where <i>N</i> is a port number, signifies all ports
numbered <i>N</i> and above, while a specification of the
form \"-N\" indicates all ports numbered <i>N</i> and below.
<p>
The possible ways to connect to the host are 
<pre>
accept
connect
listen
resolve
</pre>
The \"listen\" action is only meaningful when used with \"localhost\". 
The \"resolve\" action is implied when any of the other actions are present.
The action \"resolve\" refers to host/ip name service lookups.

<p>As an example of the creation and meaning of SocketPermissions,  
note that if the following permission:

<pre>
  p1 = new SocketPermission(\"puffin.eng.sun.com:7777\", \"connect,accept\");
</pre>

is granted to some code, it allows that code to connect to port 7777 on
<code>puffin.eng.sun.com</code>, and to accept connections on that port.

<p>Similarly, if the following permission:

<pre>
  p1 = new SocketPermission(\"puffin.eng.sun.com:7777\", \"connect,accept\");
  p2 = new SocketPermission(\"localhost:1024-\", \"accept,connect,listen\");
</pre>

is granted to some code, it allows that code to 
accept connections on, connect to, or listen on any port between
1024 and 65535 on the local host.

<p>Note: Granting code permission to accept or make connections to remote
hosts may be dangerous because malevolent code can then more easily
transfer and share confidential data among parties who may not
otherwise have access to the data.

@see java.security.Permissions
@see SocketPermission

@version 1.63 07/09/25

@author Marianne Mueller
@author Roland Schemers 

@serial exclude"
      classrelation 1818779 // <generalisation>
	relation 1818779 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1818779 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      classrelation 1818907 // <realization>
	relation 1818907 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1818907 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2785947 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7204263841984476862L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2786075 "CONNECT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Connect to host:port
"
      end

      attribute 2786203 "LISTEN"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Listen on host:port
"
      end

      attribute 2786331 "ACCEPT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Accept a connection from host:port
"
      end

      attribute 2786459 "RESOLVE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Resolve DNS queries
"
      end

      attribute 2786587 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "No actions
"
      end

      attribute 2786715 "ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  CONNECT|LISTEN|ACCEPT|RESOLVE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "All actions
"
      end

      attribute 2786843 "PORT_MIN"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " various port constants"
      end

      attribute 2786971 "PORT_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  65535"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2787099 "PRIV_PORT_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1023"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2787227 "mask"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the actions mask"
      end

      attribute 2787355 "actions"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the actions string. 

@serial

 Left null as long as possible, then"
      end

      attribute 2787483 "hostname"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " created and re-used in the getAction function.
 hostname part as it is passed"
      end

      attribute 2787611 "cname"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the canonical name of the host
 in the case of \"*.foo.com\", cname is \".foo.com\"."
      end

      classrelation 1819035 // addresses (<unidirectional association>)
	relation 1819035 --->
	  a role_name "addresses" multiplicity "[]" private
	    comment " all the IP addresses of the host 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1819035 // addresses (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2787739 "wildcard"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if the hostname is a wildcard (e.g. \"*.sun.com\")"
      end

      attribute 2787867 "init_with_ip"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if we were initialized with a single numeric IP address"
      end

      attribute 2787995 "invalid"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if this SocketPermission represents an invalid/unknown host
 used for implies when the delayed lookup has already failed"
      end

      attribute 2788123 "portrange"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " port range on host"
      end

      attribute 2788251 "defaultDeny"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788379 "untrusted"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if this SocketPermission represents a hostname
 that failed our reverse mapping heuristic test"
      end

      attribute 2788507 "trustProxy"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if the trustProxy system property is set"
      end

      attribute 2788635 "trustNameService"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if the sun.net.trustNameService system property is set"
      end

      attribute 2788763 "debug"
	class_attribute private explicit_type "Debug"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788891 "debugInit"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 164379 "initialization"
	
	cpp "" ""
	java "  static {
	Boolean tmp = (Boolean) java.security.AccessController.doPrivileged(
                new sun.security.action.GetBooleanAction(\"trustProxy\"));
	trustProxy = tmp.booleanValue();
        tmp = (Boolean) java.security.AccessController.doPrivileged(
                new sun.security.action.GetBooleanAction(\"sun.net.trustNameService\"));
        trustNameService = tmp.booleanValue();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7254939 "getDebug"
	class_operation private explicit_return_type "Debug"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7255067 "SocketPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SocketPermission object with the specified actions.
The host is expressed as a DNS name, or as a numerical IP address.
Optionally, a port or a portrange may be supplied (separated
from the DNS name or IP address by a colon).
<p>
To specify the local machine, use \"localhost\" as the <i>host</i>.
Also note: An empty <i>host</i> String (\"\") is equivalent to \"localhost\".
<p>
The <i>actions</i> parameter contains a comma-separated list of the
actions granted for the specified host (and port(s)). Possible actions are
\"connect\", \"listen\", \"accept\", \"resolve\", or 
any combination of those. \"resolve\" is automatically added
when any of the other three are specified.
<p>
Examples of SocketPermission instantiation are the following: 
<pre>
   nr = new SocketPermission(\"www.catalog.com\", \"connect\");
   nr = new SocketPermission(\"www.sun.com:80\", \"connect\");
   nr = new SocketPermission(\"*.sun.com\", \"connect\");
   nr = new SocketPermission(\"*.edu\", \"resolve\");
   nr = new SocketPermission(\"204.160.241.0\", \"connect\");
   nr = new SocketPermission(\"localhost:1024-65535\", \"listen\");
   nr = new SocketPermission(\"204.160.241.0:1024-65535\", \"connect\");
</pre>

@param host the hostname or IPaddress of the computer, optionally
including a colon followed by a port or port range. 
@param action the action string."
      end

      operation 7255195 "SocketPermission"
	package explicit_return_type ""
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7255323 "setDeny"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7255451 "getHost"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7255579 "parsePort"
	private explicit_return_type "int"
	nparams 1
	  param in name "port" explicit_type "String"
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7255707 "init"
	private explicit_return_type "void"
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the SocketPermission object. We don't do any DNS lookups
as this point, instead we hold off until the implies method is
called."
      end

      operation 7255835 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert an action string to an integer actions mask. 

@param action the action string
@return the action mask"
      end

      operation 7255963 "getCanonName"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "attempt to get the fully qualified domain name
"
      end

      operation 7256091 "match"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "cname" explicit_type "String"
	  param in name "hname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7256219 "fragment"
	private explicit_return_type "String"
	nparams 1
	  param in name "cname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " www.sun.com. -> sun.com
 www.sun.co.uk -> sun.co.uk
 www.sun.com.au -> sun.com.au"
      end

      operation 7256347 "authorized"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "cname" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7256475 "authorizedIPv4"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "cname" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7256603 "authorizedIPv6"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "cname" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7256731 "getIP"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get IP addresses. Sets invalid to true if we can't get them.
"
      end

      operation 7256859 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this socket permission object \"implies\" the 
specified permission.
<P>
More specifically, this method first ensures that all of the following
are true (and returns false if any of them are not):<p>
<ul>
<li> <i>p</i> is an instanceof SocketPermission,<p>
<li> <i>p</i>'s actions are a proper subset of this
object's actions, and<p>
<li> <i>p</i>'s port range is included in this port range. Note:
port range is ignored when p only contains the action, 'resolve'.<p>
</ul>

Then <code>implies</code> checks each of the following, in order,
and for each returns true if the stated condition is true:<p>
<ul>
<li> If this object was initialized with a single IP address and one of <i>p</i>'s 
IP addresses is equal to this object's IP address.<p>
<li>If this object is a wildcard domain (such as *.sun.com), and
<i>p</i>'s canonical name (the name without any preceding *)
ends with this object's canonical host name. For example, *.sun.com
implies *.eng.sun.com..<p>
<li>If this object was not initialized with a single IP address, and one of this
object's IP addresses equals one of <i>p</i>'s IP addresses.<p>
<li>If this canonical name equals <i>p</i>'s canonical name.<p>
</ul>

If none of the above are true, <code>implies</code> returns false.
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.  "
      end

      operation 7256987 "impliesIgnoreMask"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 843035 // SocketPermission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the incoming Permission's action are a proper subset of
the this object's actions.
<P>
Check, in the following order:
<ul>
<li> Checks that \"p\" is an instanceof a SocketPermission
<li> Checks that \"p\"'s actions are a proper subset of the
current object's actions.
<li> Checks that \"p\"'s port range is included in this port range
<li> If this object was initialized with an IP address, checks that 
     one of \"p\"'s IP addresses is equal to this object's IP address.
<li> If either object is a wildcard domain (i.e., \"*.sun.com\"),
     attempt to match based on the wildcard.
<li> If this object was not initialized with an IP address, attempt
     to find a match based on the IP addresses in both objects.
<li> Attempt to match on the canonical hostnames of both objects.
</ul>
@param p the incoming permission request

@return true if \"permission\" is a proper subset of the current object,
false if not.  "
      end

      operation 7257115 "inProxyWeTrust"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 843035 // SocketPermission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7257243 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two SocketPermission objects for equality. 
<P>
@param obj the object to test for equality with this object.

@return true if <i>obj</i> is a SocketPermission, and has the
 same hostname, port range, and actions as this
 SocketPermission object. However, port range will be ignored
 in the comparison if <i>obj</i> only contains the action, 'resolve'."
      end

      operation 7257371 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 7257499 "getMask"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current action mask.

@return the actions mask."
      end

      operation 7257627 "getActions"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions in the
specified mask.
Always returns present actions in the following order: 
connect, listen, accept, resolve.  

@param mask a specific integer action mask to translate into a string
@return the canonical string representation of the actions"
      end

      operation 7257755 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions.
Always returns present actions in the following order: 
connect, listen, accept, resolve.  

@return the canonical string representation of the actions."
      end

      operation 7257883 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new PermissionCollection object for storing SocketPermission 
objects.
<p>
SocketPermission objects must be stored in a manner that allows them 
to be inserted into the collection in any order, but that also enables the 
PermissionCollection <code>implies</code>
method to be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for storing SocketPermissions."
      end

      operation 7258011 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the SocketPermission 
to a stream. The actions are serialized, and the superclass
takes care of the name."
      end

      operation 7258139 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the SocketPermission from
a stream."
      end
    end

    class 904091 "URI"
      visibility public 
      nactuals 3
      actual class class_ref 221467 // Comparable
        rank 0 value class_ref 904091 // URI
      actual class class_ref 221467 // Comparable
        rank 1 explicit_value ""
      actual class class_ref 221467 // Comparable
        rank 2 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a Uniform Resource Identifier (URI) reference.

<p> Aside from some minor deviations noted below, an instance of this 
class represents a URI reference as defined by
<a href=\"http://www.ietf.org/rfc/rfc2396.txt\"\"><i>RFC&nbsp;2396: Uniform
Resource Identifiers (URI): Generic Syntax</i></a>, amended by <a
href=\"http://www.ietf.org/rfc/rfc2732.txt\"><i>RFC&nbsp;2732: Format for
Literal IPv6 Addresses in URLs</i></a>. The Literal IPv6 address format
also supports scope_ids. The syntax and usage of scope_ids is described
<a href=\"Inet6Address.html#scoped\">here</a>.
This class provides constructors for creating URI instances from
their components or by parsing their string forms, methods for accessing the
various components of an instance, and methods for normalizing, resolving,
and relativizing URI instances.  Instances of this class are immutable.


<h4> URI syntax and components </h4>

At the highest level a URI reference (hereinafter simply \"URI\") in string
form has the syntax

<blockquote>
[<i>scheme</i><tt><b>:</b></tt><i></i>]<i>scheme-specific-part</i>[<tt><b>#</b></tt><i>fragment</i>]
</blockquote>

where square brackets [...] delineate optional components and the characters
<tt><b>:</b></tt> and <tt><b>#</b></tt> stand for themselves.

<p> An <i>absolute</i> URI specifies a scheme; a URI that is not absolute is
said to be <i>relative</i>.  URIs are also classified according to whether
they are <i>opaque</i> or <i>hierarchical</i>.

<p> An <i>opaque</i> URI is an absolute URI whose scheme-specific part does
not begin with a slash character (<tt>'/'</tt>).  Opaque URIs are not
subject to further parsing.  Some examples of opaque URIs are:

<blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
<tr><td><tt>mailto:java-net@java.sun.com</tt><td></tr>
<tr><td><tt>news:comp.lang.java</tt><td></tr>
<tr><td><tt>urn:isbn:096139210x</tt></td></tr>
</table></blockquote>

<p> A <i>hierarchical</i> URI is either an absolute URI whose
scheme-specific part begins with a slash character, or a relative URI, that
is, a URI that does not specify a scheme.  Some examples of hierarchical
URIs are:

<blockquote>
<tt>http://java.sun.com/j2se/1.3/</tt><br>
<tt>docs/guide/collections/designfaq.html#28</tt><br>
<tt>../../../demo/jfc/SwingSet2/src/SwingSet2.java</tt><br>
<tt>file:///~/calendar</tt>
</blockquote>

<p> A hierarchical URI is subject to further parsing according to the syntax

<blockquote>
[<i>scheme</i><tt><b>:</b></tt>][<tt><b>//</b></tt><i>authority</i>][<i>path</i>][<tt><b>?</b></tt><i>query</i>][<tt><b>#</b></tt><i>fragment</i>]
</blockquote>

where the characters <tt><b>:</b></tt>, <tt><b>/</b></tt>,
<tt><b>?</b></tt>, and <tt><b>#</b></tt> stand for themselves.  The
scheme-specific part of a hierarchical URI consists of the characters
between the scheme and fragment components.

<p> The authority component of a hierarchical URI is, if specified, either
<i>server-based</i> or <i>registry-based</i>.  A server-based authority
parses according to the familiar syntax

<blockquote>
[<i>user-info</i><tt><b>@</b></tt>]<i>host</i>[<tt><b>:</b></tt><i>port</i>]
</blockquote>

where the characters <tt><b>@</b></tt> and <tt><b>:</b></tt> stand for
themselves.  Nearly all URI schemes currently in use are server-based.  An
authority component that does not parse in this way is considered to be
registry-based.

<p> The path component of a hierarchical URI is itself said to be absolute
if it begins with a slash character (<tt>'/'</tt>); otherwise it is
relative.  The path of a hierarchical URI that is either absolute or
specifies an authority is always absolute.

<p> All told, then, a URI instance has the following nine components:

<blockquote><table summary=\"Describes the components of a URI:scheme,scheme-specific-part,authority,user-info,host,port,path,query,fragment\">
<tr><th><i>Component</i></th><th><i>Type</i></th></tr>
<tr><td>scheme</td><td><tt>String</tt></td></tr>
<tr><td>scheme-specific-part&nbsp;&nbsp;&nbsp;&nbsp;</td><td><tt>String</tt></td></tr>
<tr><td>authority</td><td><tt>String</tt></td></tr>
<tr><td>user-info</td><td><tt>String</tt></td></tr>
<tr><td>host</td><td><tt>String</tt></td></tr>
<tr><td>port</td><td><tt>int</tt></td></tr>
<tr><td>path</td><td><tt>String</tt></td></tr>
<tr><td>query</td><td><tt>String</tt></td></tr>
<tr><td>fragment</td><td><tt>String</tt></td></tr>
</table></blockquote>

In a given instance any particular component is either <i>undefined</i> or
<i>defined</i> with a distinct value.  Undefined string components are
represented by <tt>null</tt>, while undefined integer components are
represented by <tt>-1</tt>.  A string component may be defined to have the
empty string as its value; this is not equivalent to that component being
undefined.

<p> Whether a particular component is or is not defined in an instance
depends upon the type of the URI being represented.  An absolute URI has a
scheme component.  An opaque URI has a scheme, a scheme-specific part, and
possibly a fragment, but has no other components.  A hierarchical URI always
has a path (though it may be empty) and a scheme-specific-part (which at
least contains the path), and may have any of the other components.  If the
authority component is present and is server-based then the host component
will be defined and the user-information and port components may be defined.


<h4> Operations on URI instances </h4>

The key operations supported by this class are those of
<i>normalization</i>, <i>resolution</i>, and <i>relativization</i>.

<p> <i>Normalization</i> is the process of removing unnecessary <tt>\".\"</tt>
and <tt>\"..\"</tt> segments from the path component of a hierarchical URI.
Each <tt>\".\"</tt> segment is simply removed.  A <tt>\"..\"</tt> segment is
removed only if it is preceded by a non-<tt>\"..\"</tt> segment.
Normalization has no effect upon opaque URIs.

<p> <i>Resolution</i> is the process of resolving one URI against another,
<i>base</i> URI.  The resulting URI is constructed from components of both
URIs in the manner specified by RFC&nbsp;2396, taking components from the
base URI for those not specified in the original.  For hierarchical URIs,
the path of the original is resolved against the path of the base and then
normalized.  The result, for example, of resolving

<blockquote>
<tt>docs/guide/collections/designfaq.html#28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt>(1)
</blockquote>

against the base URI <tt>http://java.sun.com/j2se/1.3/</tt> is the result
URI

<blockquote>
<tt>http://java.sun.com/j2se/1.3/docs/guide/collections/designfaq.html#28</tt>
</blockquote>

Resolving the relative URI

<blockquote>
<tt>../../../demo/jfc/SwingSet2/src/SwingSet2.java&nbsp;&nbsp;&nbsp;&nbsp;</tt>(2)
</blockquote>

against this result yields, in turn,

<blockquote>
<tt>http://java.sun.com/j2se/1.3/demo/jfc/SwingSet2/src/SwingSet2.java</tt>
</blockquote>

Resolution of both absolute and relative URIs, and of both absolute and
relative paths in the case of hierarchical URIs, is supported.  Resolving
the URI <tt>file:///~calendar</tt> against any other URI simply yields the
original URI, since it is absolute.  Resolving the relative URI (2) above
against the relative base URI (1) yields the normalized, but still relative,
URI

<blockquote>
<tt>demo/jfc/SwingSet2/src/SwingSet2.java</tt>
</blockquote>

<p> <i>Relativization</i>, finally, is the inverse of resolution: For any
two normalized URIs <i>u</i> and&nbsp;<i>v</i>,

<blockquote>
  <i>u</i><tt>.relativize(</tt><i>u</i><tt>.resolve(</tt><i>v</i><tt>)).equals(</tt><i>v</i><tt>)</tt>&nbsp;&nbsp;and<br>
  <i>u</i><tt>.resolve(</tt><i>u</i><tt>.relativize(</tt><i>v</i><tt>)).equals(</tt><i>v</i><tt>)</tt>&nbsp;&nbsp;.<br>
</blockquote>

This operation is often useful when constructing a document containing URIs
that must be made relative to the base URI of the document wherever
possible.  For example, relativizing the URI

<blockquote>
<tt>http://java.sun.com/j2se/1.3/docs/guide/index.html</tt>
</blockquote>

against the base URI

<blockquote>
<tt>http://java.sun.com/j2se/1.3</tt>
</blockquote>

yields the relative URI <tt>docs/guide/index.html</tt>.


<h4> Character categories </h4>

RFC&nbsp;2396 specifies precisely which characters are permitted in the
various components of a URI reference.  The following categories, most of
which are taken from that specification, are used below to describe these
constraints:

<blockquote><table cellspacing=2 summary=\"Describes categories alpha,digit,alphanum,unreserved,punct,reserved,escaped,and other\">
  <tr><th valign=top><i>alpha</i></th>
      <td>The US-ASCII alphabetic characters,
	  <tt>'A'</tt>&nbsp;through&nbsp;<tt>'Z'</tt>
	  and <tt>'a'</tt>&nbsp;through&nbsp;<tt>'z'</tt></td></tr>
  <tr><th valign=top><i>digit</i></th>
      <td>The US-ASCII decimal digit characters,
      <tt>'0'</tt>&nbsp;through&nbsp;<tt>'9'</tt></td></tr>
  <tr><th valign=top><i>alphanum</i></th>
      <td>All <i>alpha</i> and <i>digit</i> characters</td></tr>
  <tr><th valign=top><i>unreserved</i>&nbsp;&nbsp;&nbsp;&nbsp;</th>
      <td>All <i>alphanum</i> characters together with those in the string
	  <tt>\"_-!.~'()*\"</tt></td></tr>
  <tr><th valign=top><i>punct</i></th>
      <td>The characters in the string <tt>\",;:$&+=\"</tt></td></tr>
  <tr><th valign=top><i>reserved</i></th>
      <td>All <i>punct</i> characters together with those in the string
	  <tt>\"?/[]@\"</tt></td></tr>
  <tr><th valign=top><i>escaped</i></th>
      <td>Escaped octets, that is, triplets consisting of the percent
          character (<tt>'%'</tt>) followed by two hexadecimal digits
          (<tt>'0'</tt>-<tt>'9'</tt>, <tt>'A'</tt>-<tt>'F'</tt>, and
          <tt>'a'</tt>-<tt>'f'</tt>)</td></tr>
  <tr><th valign=top><i>other</i></th>
      <td>The Unicode characters that are not in the US-ASCII character set,
          are not control characters (according to the {@link
          java.lang.Character#isISOControl(char) Character.isISOControl}
	     method), and are not space characters (according to the {@link
	     java.lang.Character#isSpaceChar(char) Character.isSpaceChar}
	     method)&nbsp;&nbsp;<i>(<b>Deviation from RFC 2396</b>, which is
	     limited to US-ASCII)</i></td></tr>
</table></blockquote>

<p><a name=\"legal-chars\"></a> The set of all legal URI characters consists of
the <i>unreserved</i>, <i>reserved</i>, <i>escaped</i>, and <i>other</i>
characters.


<h4> Escaped octets, quotation, encoding, and decoding </h4>

RFC 2396 allows escaped octets to appear in the user-info, path, query, and
fragment components.  Escaping serves two purposes in URIs:

<ul>

  <li><p> To <i>encode</i> non-US-ASCII characters when a URI is required to
  conform strictly to RFC&nbsp;2396 by not containing any <i>other</i>
  characters.  </p></li>

  <li><p> To <i>quote</i> characters that are otherwise illegal in a
  component.  The user-info, path, query, and fragment components differ
  slightly in terms of which characters are considered legal and illegal.
  </p></li>

</ul>

These purposes are served in this class by three related operations:

<ul>

  <li><p><a name=\"encode\"></a> A character is <i>encoded</i> by replacing it
  with the sequence of escaped octets that represent that character in the
  UTF-8 character set.  The Euro currency symbol (<tt>'&#92;u20AC'</tt>),
  for example, is encoded as <tt>\"%E2%82%AC\"</tt>.  <i>(<b>Deviation from
  RFC&nbsp;2396</b>, which does not specify any particular character
  set.)</i> </p></li>

  <li><p><a name=\"quote\"></a> An illegal character is <i>quoted</i> simply by
  encoding it.  The space character, for example, is quoted by replacing it
  with <tt>\"%20\"</tt>.  UTF-8 contains US-ASCII, hence for US-ASCII
  characters this transformation has exactly the effect required by
  RFC&nbsp;2396. </p></li>

  <li><p><a name=\"decode\"></a>
  A sequence of escaped octets is <i>decoded</i> by
  replacing it with the sequence of characters that it represents in the
  UTF-8 character set.  UTF-8 contains US-ASCII, hence decoding has the
  effect of de-quoting any quoted US-ASCII characters as well as that of
  decoding any encoded non-US-ASCII characters.  If a <a
  href=\"../nio/charset/CharsetDecoder.html#ce\">decoding error</a> occurs
  when decoding the escaped octets then the erroneous octets are replaced by
  <tt>'&#92;uFFFD'</tt>, the Unicode replacement character.  </p></li>

</ul>

These operations are exposed in the constructors and methods of this class
as follows:

<ul>

  <li><p> The {@link #URI(java.lang.String) <code>single-argument
  constructor</code>} requires any illegal characters in its argument to be
  quoted and preserves any escaped octets and <i>other</i> characters that
  are present.  </p></li>

  <li><p> The {@link
  #URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
  <code>multi-argument constructors</code>} quote illegal characters as
  required by the components in which they appear.  The percent character
  (<tt>'%'</tt>) is always quoted by these constructors.  Any <i>other</i>
  characters are preserved.  </p></li>

  <li><p> The {@link #getRawUserInfo() getRawUserInfo}, {@link #getRawPath()
  getRawPath}, {@link #getRawQuery() getRawQuery}, {@link #getRawFragment()
  getRawFragment}, {@link #getRawAuthority() getRawAuthority}, and {@link
  #getRawSchemeSpecificPart() getRawSchemeSpecificPart} methods return the
  values of their corresponding components in raw form, without interpreting
  any escaped octets.  The strings returned by these methods may contain
  both escaped octets and <i>other</i> characters, and will not contain any
  illegal characters.  </p></li>

  <li><p> The {@link #getUserInfo() getUserInfo}, {@link #getPath()
  getPath}, {@link #getQuery() getQuery}, {@link #getFragment()
  getFragment}, {@link #getAuthority() getAuthority}, and {@link
  #getSchemeSpecificPart() getSchemeSpecificPart} methods decode any escaped
  octets in their corresponding components.  The strings returned by these
  methods may contain both <i>other</i> characters and illegal characters,
  and will not contain any escaped octets.  </p></li>

  <li><p> The {@link #toString() toString} method returns a URI string with
  all necessary quotation but which may contain <i>other</i> characters.
  </p></li>

  <li><p> The {@link #toASCIIString() toASCIIString} method returns a fully
  quoted and encoded URI string that does not contain any <i>other</i>
  characters.  </p></li>

</ul>


<h4> Identities </h4>

For any URI <i>u</i>, it is always the case that

<blockquote>
<tt>new URI(</tt><i>u</i><tt>.toString()).equals(</tt><i>u</i><tt>)</tt>&nbsp;.
</blockquote>

For any URI <i>u</i> that does not contain redundant syntax such as two
slashes before an empty authority (as in <tt>file:///tmp/</tt>&nbsp;) or a
colon following a host name but no port (as in
<tt>http://java.sun.com:</tt>&nbsp;), and that does not encode characters
except those that must be quoted, the following identities also hold:

<blockquote>
<tt>new URI(</tt><i>u</i><tt>.getScheme(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getSchemeSpecificPart(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getFragment())<br>
.equals(</tt><i>u</i><tt>)</tt>
</blockquote>

in all cases,

<blockquote>
<tt>new URI(</tt><i>u</i><tt>.getScheme(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getUserInfo(),&nbsp;</tt><i>u</i><tt>.getAuthority(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getPath(),&nbsp;</tt><i>u</i><tt>.getQuery(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getFragment())<br>
.equals(</tt><i>u</i><tt>)</tt>
</blockquote>

if <i>u</i> is hierarchical, and

<blockquote>
<tt>new URI(</tt><i>u</i><tt>.getScheme(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getUserInfo(),&nbsp;</tt><i>u</i><tt>.getHost(),&nbsp;</tt><i>u</i><tt>.getPort(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getPath(),&nbsp;</tt><i>u</i><tt>.getQuery(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>u</i><tt>.getFragment())<br>
.equals(</tt><i>u</i><tt>)</tt>
</blockquote>

if <i>u</i> is hierarchical and has either no authority or a server-based
authority.


<h4> URIs, URLs, and URNs </h4>

A URI is a uniform resource <i>identifier</i> while a URL is a uniform
resource <i>locator</i>.  Hence every URL is a URI, abstractly speaking, but
not every URI is a URL.  This is because there is another subcategory of
URIs, uniform resource <i>names</i> (URNs), which name resources but do not
specify how to locate them.  The <tt>mailto</tt>, <tt>news</tt>, and
<tt>isbn</tt> URIs shown above are examples of URNs.

<p> The conceptual distinction between URIs and URLs is reflected in the
differences between this class and the {@link URL} class.

<p> An instance of this class represents a URI reference in the syntactic
sense defined by RFC&nbsp;2396.  A URI may be either absolute or relative.
A URI string is parsed according to the generic syntax without regard to the
scheme, if any, that it specifies.  No lookup of the host, if any, is
performed, and no scheme-dependent stream handler is constructed.  Equality,
hashing, and comparison are defined strictly in terms of the character
content of the instance.  In other words, a URI instance is little more than
a structured string that supports the syntactic, scheme-independent
operations of comparison, normalization, resolution, and relativization.

<p> An instance of the {@link URL} class, by contrast, represents the
syntactic components of a URL together with some of the information required
to access the resource that it describes.  A URL must be absolute, that is,
it must always specify a scheme.  A URL string is parsed according to its
scheme.  A stream handler is always established for a URL, and in fact it is
impossible to create a URL instance for a scheme for which no handler is
available.  Equality and hashing depend upon both the scheme and the
Internet address of the host, if any; comparison is not defined.  In other
words, a URL is a structured string that supports the syntactic operation of
resolution as well as the network I/O operations of looking up the host and
opening a connection to the specified resource.


@version 1.40, 05/11/28
@author Mark Reinhold
@since 1.4

@see <a href=\"http://ietf.org/rfc/rfc2279.txt\"><i>RFC&nbsp;2279: UTF-8, a
transformation format of ISO 10646</i></a>, <br><a
href=\"http://www.ietf.org/rfc/rfc2373.txt\"><i>RFC&nbsp;2373: IPv6 Addressing
Architecture</i></a>, <br><a
href=\"http://www.ietf.org/rfc/rfc2396.txt\"\"><i>RFC&nbsp;2396: Uniform
Resource Identifiers (URI): Generic Syntax</i></a>, <br><a
href=\"http://www.ietf.org/rfc/rfc2732.txt\"><i>RFC&nbsp;2732: Format for
Literal IPv6 Addresses in URLs</i></a>, <br><a
href=\"URISyntaxException.html\">URISyntaxException</a>"
      classrelation 1820827 // <realization>
	relation 1820827 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1820827 // <realization>
	  b parent class_ref 221467 // Comparable
      end

      classrelation 1820955 // <realization>
	relation 1820955 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1820955 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2792347 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -6052424284110960213L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Comments containing the word \"ASSERT\" indicate places where a
 throw of an InternalError should be replaced by an appropriate assertion
 statement once asserts are enabled in the build."
      end

      attribute 2792475 "scheme"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Properties and components of this instance --
 Components of all URIs: [<scheme>:]<scheme-specific-part>[#<fragment>]
 null ==> relative URI"
      end

      attribute 2792603 "fragment"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2792731 "authority"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Hierarchical URI components: [//<authority>]<path>[?<query>]
 Registry or server"
      end

      attribute 2792859 "userInfo"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Server-based authority: [<userInfo>@]<host>[:<port>]"
      end

      attribute 2792987 "host"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " null ==> registry-based"
      end

      attribute 2793115 "port"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -1 ==> undefined"
      end

      attribute 2793243 "path"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Remaining components of hierarchical URIs
 null ==> opaque"
      end

      attribute 2793371 "query"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2793499 "schemeSpecificPart"
	volatile private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The remaining fields may be computed on demand"
      end

      attribute 2793627 "hash"
	volatile private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Zero ==> undefined"
      end

      attribute 2793755 "decodedUserInfo"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2793883 "decodedAuthority"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794011 "decodedPath"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794139 "decodedQuery"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794267 "decodedFragment"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794395 "decodedSchemeSpecificPart"
	volatile private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794523 "string"
	volatile private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The string form of this URI.

@serial

 The only serializable field"
      end

      operation 7261979 "URI"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Constructors and factories --"
      end

      operation 7262107 "URI"
	public explicit_return_type ""
	nparams 1
	  param in name "str" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used internally

Constructs a URI by parsing the given string.

<p> This constructor parses the given string exactly as specified by the
grammar in <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
Appendix&nbsp;A, <b><i>except for the following deviations:</i></b> </p>

<ul type=disc>

  <li><p> An empty authority component is permitted as long as it is
  followed by a non-empty path, a query component, or a fragment
  component.  This allows the parsing of URIs such as
  <tt>\"file:///foo/bar\"</tt>, which seems to be the intent of
  RFC&nbsp;2396 although the grammar does not permit it.  If the
  authority component is empty then the user-information, host, and port
  components are undefined. </p></li>

  <li><p> Empty relative paths are permitted; this seems to be the
  intent of RFC&nbsp;2396 although the grammar does not permit it.  The
  primary consequence of this deviation is that a standalone fragment
  such as <tt>\"#foo\"</tt> parses as a relative URI with an empty path
  and the given fragment, and can be usefully <a
  href=\"#resolve-frag\">resolved</a> against a base URI.

  <li><p> IPv4 addresses in host components are parsed rigorously, as
  specified by <a
  href=\"http://www.ietf.org/rfc/rfc2732.txt\">RFC&nbsp;2732</a>: Each
  element of a dotted-quad address must contain no more than three
  decimal digits.  Each element is further constrained to have a value
  no greater than 255. </p></li>

  <li> <p> Hostnames in host components that comprise only a single
  domain label are permitted to start with an <i>alphanum</i> 
  character. This seems to be the intent of <a
  href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>
  section&nbsp;3.2.2 although the grammar does not permit it. The
  consequence of this deviation is that the authority component of a
  hierarchical URI such as <tt>s://123</tt>, will parse as a server-based 
  authority. </p></li>

  <li><p> IPv6 addresses are permitted for the host component.  An IPv6
  address must be enclosed in square brackets (<tt>'['</tt> and
  <tt>']'</tt>) as specified by <a
  href=\"http://www.ietf.org/rfc/rfc2732.txt\">RFC&nbsp;2732</a>.  The
  IPv6 address itself must parse according to <a
  href=\"http://www.ietf.org/rfc/rfc2373.txt\">RFC&nbsp;2373</a>.  IPv6
  addresses are further constrained to describe no more than sixteen
  bytes of address information, a constraint implicit in RFC&nbsp;2373
  but not expressible in the grammar. </p></li>

  <li><p> Characters in the <i>other</i> category are permitted wherever
  RFC&nbsp;2396 permits <i>escaped</i> octets, that is, in the
  user-information, path, query, and fragment components, as well as in
  the authority component if the authority is registry-based.  This
  allows URIs to contain Unicode characters beyond those in the US-ASCII
  character set. </p></li>

</ul>

@param  str   The string to be parsed into a URI

@throws  NullPointerException
         If <tt>str</tt> is <tt>null</tt>

@throws  URISyntaxException
         If the given string violates RFC&nbsp;2396, as augmented
         by the above deviations"
      end

      operation 7262235 "URI"
	public explicit_return_type ""
	nparams 7
	  param in name "scheme" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	  param in name "fragment" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a hierarchical URI from the given components.

<p> If a scheme is given then the path, if also given, must either be
empty or begin with a slash character (<tt>'/'</tt>).  Otherwise a
component of the new URI may be left undefined by passing <tt>null</tt>
for the corresponding parameter or, in the case of the <tt>port</tt>
parameter, by passing <tt>-1</tt>.

<p> This constructor first builds a URI string from the given components
according to the rules specified in <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
section&nbsp;5.2, step&nbsp;7: </p>

<ol>

  <li><p> Initially, the result string is empty. </p></li>

  <li><p> If a scheme is given then it is appended to the result,
  followed by a colon character (<tt>':'</tt>).  </p></li>

  <li><p> If user information, a host, or a port are given then the
  string <tt>\"//\"</tt> is appended.  </p></li>

  <li><p> If user information is given then it is appended, followed by
  a commercial-at character (<tt>'@'</tt>).  Any character not in the
  <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, or <i>other</i>
  categories is <a href=\"#quote\">quoted</a>.  </p></li>

  <li><p> If a host is given then it is appended.  If the host is a
  literal IPv6 address but is not enclosed in square brackets
  (<tt>'['</tt> and <tt>']'</tt>) then the square brackets are added.
  </p></li>

  <li><p> If a port number is given then a colon character
  (<tt>':'</tt>) is appended, followed by the port number in decimal.
  </p></li>

  <li><p> If a path is given then it is appended.  Any character not in
  the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, or <i>other</i>
  categories, and not equal to the slash character (<tt>'/'</tt>) or the
  commercial-at character (<tt>'@'</tt>), is quoted.  </p></li>

  <li><p> If a query is given then a question-mark character
  (<tt>'?'</tt>) is appended, followed by the query.  Any character that
  is not a <a href=\"#legal-chars\">legal URI character</a> is quoted.
  </p></li>

  <li><p> Finally, if a fragment is given then a hash character
  (<tt>'#'</tt>) is appended, followed by the fragment.  Any character
  that is not a legal URI character is quoted.  </p></li>

</ol>

<p> The resulting URI string is then parsed as if by invoking the {@link
#URI(String)} constructor and then invoking the {@link
#parseServerAuthority()} method upon the result; this may cause a {@link
URISyntaxException} to be thrown.  </p>

@param   scheme    Scheme name
@param   userInfo  User name and authorization information
@param   host      Host name
@param   port      Port number
@param   path      Path
@param   query     Query
@param   fragment  Fragment

@throws URISyntaxException
        If both a scheme and a path are given but the path is relative,
        if the URI string constructed from the given components violates
        RFC&nbsp;2396, or if the authority component of the string is
        present but cannot be parsed as a server-based authority"
      end

      operation 7262363 "URI"
	public explicit_return_type ""
	nparams 5
	  param in name "scheme" explicit_type "String"
	  param in name "authority" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	  param in name "fragment" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a hierarchical URI from the given components.

<p> If a scheme is given then the path, if also given, must either be
empty or begin with a slash character (<tt>'/'</tt>).  Otherwise a
component of the new URI may be left undefined by passing <tt>null</tt>
for the corresponding parameter.

<p> This constructor first builds a URI string from the given components
according to the rules specified in <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
section&nbsp;5.2, step&nbsp;7: </p>

<ol>

  <li><p> Initially, the result string is empty.  </p></li>

  <li><p> If a scheme is given then it is appended to the result,
  followed by a colon character (<tt>':'</tt>).  </p></li>

  <li><p> If an authority is given then the string <tt>\"//\"</tt> is
  appended, followed by the authority.  If the authority contains a
  literal IPv6 address then the address must be enclosed in square
  brackets (<tt>'['</tt> and <tt>']'</tt>).  Any character not in the
  <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, or <i>other</i>
  categories, and not equal to the commercial-at character
  (<tt>'@'</tt>), is <a href=\"#quote\">quoted</a>.  </p></li>

  <li><p> If a path is given then it is appended.  Any character not in
  the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, or <i>other</i>
  categories, and not equal to the slash character (<tt>'/'</tt>) or the
  commercial-at character (<tt>'@'</tt>), is quoted.  </p></li>

  <li><p> If a query is given then a question-mark character
  (<tt>'?'</tt>) is appended, followed by the query.  Any character that
  is not a <a href=\"#legal-chars\">legal URI character</a> is quoted.
  </p></li>

  <li><p> Finally, if a fragment is given then a hash character
  (<tt>'#'</tt>) is appended, followed by the fragment.  Any character
  that is not a legal URI character is quoted.  </p></li>

</ol>

<p> The resulting URI string is then parsed as if by invoking the {@link
#URI(String)} constructor and then invoking the {@link
#parseServerAuthority()} method upon the result; this may cause a {@link
URISyntaxException} to be thrown.  </p>

@param   scheme     Scheme name
@param   authority  Authority
@param   path       Path
@param   query      Query
@param   fragment   Fragment

@throws URISyntaxException
        If both a scheme and a path are given but the path is relative,
        if the URI string constructed from the given components violates
        RFC&nbsp;2396, or if the authority component of the string is
        present but cannot be parsed as a server-based authority"
      end

      operation 7262491 "URI"
	public explicit_return_type ""
	nparams 4
	  param in name "scheme" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "fragment" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a hierarchical URI from the given components.

<p> A component may be left undefined by passing <tt>null</tt>.

<p> This convenience constructor works as if by invoking the
seven-argument constructor as follows:

<blockquote><tt>
new&nbsp;{@link #URI(String, String, String, int, String, String, String)
URI}(scheme,&nbsp;null,&nbsp;host,&nbsp;-1,&nbsp;path,&nbsp;null,&nbsp;fragment);
</tt></blockquote>

@param   scheme    Scheme name
@param   host      Host name
@param   path      Path
@param   fragment  Fragment

@throws  URISyntaxException
         If the URI string constructed from the given components
         violates RFC&nbsp;2396"
      end

      operation 7262619 "URI"
	public explicit_return_type ""
	nparams 3
	  param in name "scheme" explicit_type "String"
	  param in name "ssp" explicit_type "String"
	  param in name "fragment" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a URI from the given components.

<p> A component may be left undefined by passing <tt>null</tt>.

<p> This constructor first builds a URI in string form using the given
components as follows:  </p>

<ol>

  <li><p> Initially, the result string is empty.  </p></li>

  <li><p> If a scheme is given then it is appended to the result,
  followed by a colon character (<tt>':'</tt>).  </p></li>

  <li><p> If a scheme-specific part is given then it is appended.  Any
  character that is not a <a href=\"#legal-chars\">legal URI character</a>
  is <a href=\"#quote\">quoted</a>.  </p></li>

  <li><p> Finally, if a fragment is given then a hash character
  (<tt>'#'</tt>) is appended to the string, followed by the fragment.
  Any character that is not a legal URI character is quoted.  </p></li>

</ol>

<p> The resulting URI string is then parsed in order to create the new
URI instance as if by invoking the {@link #URI(String)} constructor;
this may cause a {@link URISyntaxException} to be thrown.  </p>

@param   scheme    Scheme name
@param   ssp       Scheme-specific part
@param   fragment  Fragment

@throws  URISyntaxException
         If the URI string constructed from the given components
         violates RFC&nbsp;2396"
      end

      operation 7262747 "create"
	class_operation public return_type class_ref 904091 // URI
	nparams 1
	  param in name "str" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a URI by parsing the given string.

<p> This convenience factory method works as if by invoking the {@link
#URI(String)} constructor; any {@link URISyntaxException} thrown by the
constructor is caught and wrapped in a new {@link
IllegalArgumentException} object, which is then thrown.

<p> This method is provided for use in situations where it is known that
the given string is a legal URI, for example for URI constants declared
within in a program, and so it would be considered a programming error
for the string not to parse as such.  The constructors, which throw
{@link URISyntaxException} directly, should be used situations where a
URI is being constructed from user input or from some other source that
may be prone to errors.  </p>

@param  str   The string to be parsed into a URI
@return The new URI

@throws  NullPointerException
         If <tt>str</tt> is <tt>null</tt>

@throws  IllegalArgumentException
         If the given string violates RFC&nbsp;2396"
      end

      operation 7262875 "parseServerAuthority"
	public return_type class_ref 904091 // URI
	nparams 0
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Operations --

Attempts to parse this URI's authority component, if defined, into
user-information, host, and port components.

<p> If this URI's authority component has already been recognized as
being server-based then it will already have been parsed into
user-information, host, and port components.  In this case, or if this
URI has no authority component, this method simply returns this URI.

<p> Otherwise this method attempts once more to parse the authority
component into user-information, host, and port components, and throws
an exception describing why the authority component could not be parsed
in that way.

<p> This method is provided because the generic URI syntax specified in
<a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>
cannot always distinguish a malformed server-based authority from a
legitimate registry-based authority.  It must therefore treat some
instances of the former as instances of the latter.  The authority
component in the URI string <tt>\"//foo:bar\"</tt>, for example, is not a
legal server-based authority but it is legal as a registry-based
authority.

<p> In many common situations, for example when working URIs that are
known to be either URNs or URLs, the hierarchical URIs being used will
always be server-based.  They therefore must either be parsed as such or
treated as an error.  In these cases a statement such as

<blockquote>
<tt>URI </tt><i>u</i><tt> = new URI(str).parseServerAuthority();</tt>
</blockquote>

<p> can be used to ensure that <i>u</i> always refers to a URI that, if
it has an authority component, has a server-based authority with proper
user-information, host, and port components.  Invoking this method also
ensures that if the authority could not be parsed in that way then an
appropriate diagnostic message can be issued based upon the exception
that is thrown. </p>

@return  A URI whose authority field has been parsed
         as a server-based authority

@throws  URISyntaxException
         If the authority component of this URI is defined
         but cannot be parsed as a server-based authority
         according to RFC&nbsp;2396"
      end

      operation 7263003 "normalize"
	public return_type class_ref 904091 // URI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalizes this URI's path.

<p> If this URI is opaque, or if its path is already in normal form,
then this URI is returned.  Otherwise a new URI is constructed that is
identical to this URI except that its path is computed by normalizing
this URI's path in a manner consistent with <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
section&nbsp;5.2, step&nbsp;6, sub-steps&nbsp;c through&nbsp;f; that is:
</p>

<ol>

  <li><p> All <tt>\".\"</tt> segments are removed. </p></li>

  <li><p> If a <tt>\"..\"</tt> segment is preceded by a non-<tt>\"..\"</tt>
  segment then both of these segments are removed.  This step is
  repeated until it is no longer applicable. </p></li>

  <li><p> If the path is relative, and if its first segment contains a
  colon character (<tt>':'</tt>), then a <tt>\".\"</tt> segment is
  prepended.  This prevents a relative URI with a path such as
  <tt>\"a:b/c/d\"</tt> from later being re-parsed as an opaque URI with a
  scheme of <tt>\"a\"</tt> and a scheme-specific part of <tt>\"b/c/d\"</tt>.
  <b><i>(Deviation from RFC&nbsp;2396)</i></b> </p></li>

</ol>

<p> A normalized path will begin with one or more <tt>\"..\"</tt> segments
if there were insufficient non-<tt>\"..\"</tt> segments preceding them to
allow their removal.  A normalized path will begin with a <tt>\".\"</tt>
segment if one was inserted by step 3 above.  Otherwise, a normalized
path will not contain any <tt>\".\"</tt> or <tt>\"..\"</tt> segments. </p>

@return  A URI equivalent to this URI,
         but whose path is in normal form"
      end

      operation 7263131 "resolve"
	public return_type class_ref 904091 // URI
	nparams 1
	  param inout name "uri" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves the given URI against this URI.

<p> If the given URI is already absolute, or if this URI is opaque, then
the given URI is returned.

<p><a name=\"resolve-frag\"></a> If the given URI's fragment component is
defined, its path component is empty, and its scheme, authority, and
query components are undefined, then a URI with the given fragment but
with all other components equal to those of this URI is returned.  This
allows a URI representing a standalone fragment reference, such as
<tt>\"#foo\"</tt>, to be usefully resolved against a base URI.

<p> Otherwise this method constructs a new hierarchical URI in a manner
consistent with <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
section&nbsp;5.2; that is: </p>

<ol>

  <li><p> A new URI is constructed with this URI's scheme and the given
  URI's query and fragment components. </p></li>

  <li><p> If the given URI has an authority component then the new URI's
  authority and path are taken from the given URI. </p></li>

  <li><p> Otherwise the new URI's authority component is copied from
  this URI, and its path is computed as follows: </p></li>

  <ol type=a>

    <li><p> If the given URI's path is absolute then the new URI's path
    is taken from the given URI. </p></li>

    <li><p> Otherwise the given URI's path is relative, and so the new
    URI's path is computed by resolving the path of the given URI
    against the path of this URI.  This is done by concatenating all but
    the last segment of this URI's path, if any, with the given URI's
    path and then normalizing the result as if by invoking the {@link
    #normalize() normalize} method. </p></li>

  </ol>

</ol>

<p> The result of this method is absolute if, and only if, either this
URI is absolute or the given URI is absolute.  </p>

@param  uri  The URI to be resolved against this URI
@return The resulting URI

@throws  NullPointerException
         If <tt>uri</tt> is <tt>null</tt>"
      end

      operation 7263259 "resolve"
	public return_type class_ref 904091 // URI
	nparams 1
	  param in name "str" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new URI by parsing the given string and then resolving it
against this URI.

<p> This convenience method works as if invoking it were equivalent to
evaluating the expression <tt>{@link #resolve(java.net.URI)
resolve}(URI.{@link #create(String) create}(str))</tt>. </p>

@param  str   The string to be parsed into a URI
@return The resulting URI

@throws  NullPointerException
         If <tt>str</tt> is <tt>null</tt>

@throws  IllegalArgumentException
         If the given string violates RFC&nbsp;2396"
      end

      operation 7263387 "relativize"
	public return_type class_ref 904091 // URI
	nparams 1
	  param inout name "uri" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relativizes the given URI against this URI.

<p> The relativization of the given URI against this URI is computed as
follows: </p>

<ol>

  <li><p> If either this URI or the given URI are opaque, or if the
  scheme and authority components of the two URIs are not identical, or
  if the path of this URI is not a prefix of the path of the given URI,
  then the given URI is returned. </p></li>

  <li><p> Otherwise a new relative hierarchical URI is constructed with
  query and fragment components taken from the given URI and with a path
  component computed by removing this URI's path from the beginning of
  the given URI's path. </p></li>

</ol>

@param  uri  The URI to be relativized against this URI
@return The resulting URI

@throws  NullPointerException
         If <tt>uri</tt> is <tt>null</tt>"
      end

      operation 7263515 "toURL"
	public return_type class_ref 269467 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a URL from this URI.

<p> This convenience method works as if invoking it were equivalent to
evaluating the expression <tt>new&nbsp;URL(this.toString())</tt> after
first checking that this URI is absolute. </p>

@return  A URL constructed from this URI

@throws  IllegalArgumentException
         If this URL is not absolute

@throws  MalformedURLException
         If a protocol handler for the URL could not be found,
         or if some other error occurred while constructing the URL"
      end

      operation 7263643 "getScheme"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Component access methods --

Returns the scheme component of this URI.

<p> The scheme component of a URI, if defined, only contains characters
in the <i>alphanum</i> category and in the string <tt>\"-.+\"</tt>.  A
scheme always starts with an <i>alpha</i> character. <p>

The scheme component of a URI cannot contain escaped octets, hence this
method does not perform any decoding.

@return  The scheme component of this URI,
         or <tt>null</tt> if the scheme is undefined"
      end

      operation 7263771 "isAbsolute"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this URI is absolute.

<p> A URI is absolute if, and only if, it has a scheme component. </p>

@return  <tt>true</tt> if, and only if, this URI is absolute"
      end

      operation 7263899 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this URI is opaque.

<p> A URI is opaque if, and only if, it is absolute and its
scheme-specific part does not begin with a slash character ('/').
An opaque URI has a scheme, a scheme-specific part, and possibly
a fragment; all other components are undefined. </p>

@return  <tt>true</tt> if, and only if, this URI is opaque"
      end

      operation 7264027 "getRawSchemeSpecificPart"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw scheme-specific part of this URI.  The scheme-specific
part is never undefined, though it may be empty.

<p> The scheme-specific part of a URI only contains legal URI
characters. </p>

@return  The raw scheme-specific part of this URI
         (never <tt>null</tt>)"
      end

      operation 7264155 "getSchemeSpecificPart"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded scheme-specific part of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawSchemeSpecificPart() getRawSchemeSpecificPart} method
except that all sequences of escaped octets are <a
href=\"#decode\">decoded</a>.  </p>

@return  The decoded scheme-specific part of this URI
         (never <tt>null</tt>)"
      end

      operation 7264283 "getRawAuthority"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw authority component of this URI.

<p> The authority component of a URI, if defined, only contains the
commercial-at character (<tt>'@'</tt>) and characters in the
<i>unreserved</i>, <i>punct</i>, <i>escaped</i>, and <i>other</i>
categories.  If the authority is server-based then it is further
constrained to have valid user-information, host, and port
components. </p>

@return  The raw authority component of this URI,
         or <tt>null</tt> if the authority is undefined"
      end

      operation 7264411 "getAuthority"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded authority component of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawAuthority() getRawAuthority} method except that all
sequences of escaped octets are <a href=\"#decode\">decoded</a>.  </p>

@return  The decoded authority component of this URI,
         or <tt>null</tt> if the authority is undefined"
      end

      operation 7264539 "getRawUserInfo"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw user-information component of this URI.

<p> The user-information component of a URI, if defined, only contains
characters in the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, and
<i>other</i> categories. </p>

@return  The raw user-information component of this URI,
         or <tt>null</tt> if the user information is undefined"
      end

      operation 7264667 "getUserInfo"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded user-information component of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawUserInfo() getRawUserInfo} method except that all
sequences of escaped octets are <a href=\"#decode\">decoded</a>.  </p>

@return  The decoded user-information component of this URI,
         or <tt>null</tt> if the user information is undefined"
      end

      operation 7264795 "getHost"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host component of this URI.

<p> The host component of a URI, if defined, will have one of the
following forms: </p>

<ul type=disc>

  <li><p> A domain name consisting of one or more <i>labels</i>
  separated by period characters (<tt>'.'</tt>), optionally followed by
  a period character.  Each label consists of <i>alphanum</i> characters
  as well as hyphen characters (<tt>'-'</tt>), though hyphens never
  occur as the first or last characters in a label. The rightmost
  label of a domain name consisting of two or more labels, begins
  with an <i>alpha</i> character. </li>

  <li><p> A dotted-quad IPv4 address of the form
  <i>digit</i><tt>+.</tt><i>digit</i><tt>+.</tt><i>digit</i><tt>+.</tt><i>digit</i><tt>+</tt>,
  where no <i>digit</i> sequence is longer than three characters and no
  sequence has a value larger than 255. </p></li>

  <li><p> An IPv6 address enclosed in square brackets (<tt>'['</tt> and
  <tt>']'</tt>) and consisting of hexadecimal digits, colon characters
  (<tt>':'</tt>), and possibly an embedded IPv4 address.  The full
  syntax of IPv6 addresses is specified in <a
  href=\"http://www.ietf.org/rfc/rfc2373.txt\"><i>RFC&nbsp;2373: IPv6
  Addressing Architecture</i></a>.  </p></li>

</ul>

The host component of a URI cannot contain escaped octets, hence this
method does not perform any decoding.

@return  The host component of this URI,
         or <tt>null</tt> if the host is undefined"
      end

      operation 7264923 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of this URI.

<p> The port component of a URI, if defined, is a non-negative
integer. </p>

@return  The port component of this URI,
         or <tt>-1</tt> if the port is undefined"
      end

      operation 7265051 "getRawPath"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw path component of this URI.

<p> The path component of a URI, if defined, only contains the slash
character (<tt>'/'</tt>), the commercial-at character (<tt>'@'</tt>),
and characters in the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>,
and <i>other</i> categories. </p>

@return  The path component of this URI,
         or <tt>null</tt> if the path is undefined"
      end

      operation 7265179 "getPath"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded path component of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawPath() getRawPath} method except that all sequences of
escaped octets are <a href=\"#decode\">decoded</a>.  </p>

@return  The decoded path component of this URI,
         or <tt>null</tt> if the path is undefined"
      end

      operation 7265307 "getRawQuery"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw query component of this URI.

<p> The query component of a URI, if defined, only contains legal URI
characters. </p>

@return  The raw query component of this URI,
         or <tt>null</tt> if the query is undefined"
      end

      operation 7265435 "getQuery"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded query component of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawQuery() getRawQuery} method except that all sequences of
escaped octets are <a href=\"#decode\">decoded</a>.  </p>

@return  The decoded query component of this URI,
         or <tt>null</tt> if the query is undefined"
      end

      operation 7265563 "getRawFragment"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw fragment component of this URI.

<p> The fragment component of a URI, if defined, only contains legal URI
characters. </p>

@return  The raw fragment component of this URI,
         or <tt>null</tt> if the fragment is undefined"
      end

      operation 7265691 "getFragment"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the decoded fragment component of this URI.

<p> The string returned by this method is equal to that returned by the
{@link #getRawFragment() getRawFragment} method except that all
sequences of escaped octets are <a href=\"#decode\">decoded</a>.  </p>

@return  The decoded fragment component of this URI,
         or <tt>null</tt> if the fragment is undefined"
      end

      operation 7265819 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ob" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Equality, comparison, hash code, toString, and serialization --

Tests this URI for equality with another object.

<p> If the given object is not a URI then this method immediately
returns <tt>false</tt>.

<p> For two URIs to be considered equal requires that either both are
opaque or both are hierarchical.  Their schemes must either both be
undefined or else be equal without regard to case. Their fragments
must either both be undefined or else be equal.

<p> For two opaque URIs to be considered equal, their scheme-specific
parts must be equal.

<p> For two hierarchical URIs to be considered equal, their paths must
be equal and their queries must either both be undefined or else be
equal.  Their authorities must either both be undefined, or both be
registry-based, or both be server-based.  If their authorities are
defined and are registry-based, then they must be equal.  If their
authorities are defined and are server-based, then their hosts must be
equal without regard to case, their port numbers must be equal, and
their user-information components must be equal.

<p> When testing the user-information, path, query, fragment, authority,
or scheme-specific parts of two URIs for equality, the raw forms rather
than the encoded forms of these components are compared and the
hexadecimal digits of escaped octets are compared without regard to
case.

<p> This method satisfies the general contract of the {@link
java.lang.Object#equals(Object) Object.equals} method. </p>

@param   ob   The object to which this object is to be compared

@return  <tt>true</tt> if, and only if, the given object is a URI that
         is identical to this URI"
      end

      operation 7265947 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash-code value for this URI.  The hash code is based upon all
of the URI's components, and satisfies the general contract of the
{@link java.lang.Object#hashCode() Object.hashCode} method.

@return  A hash-code value for this URI"
      end

      operation 7266075 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this URI to another object, which must be a URI.

<p> When comparing corresponding components of two URIs, if one
component is undefined but the other is defined then the first is
considered to be less than the second.  Unless otherwise noted, string
components are ordered according to their natural, case-sensitive
ordering as defined by the {@link java.lang.String#compareTo(Object)
String.compareTo} method.  String components that are subject to
encoding are compared by comparing their raw forms rather than their
encoded forms.

<p> The ordering of URIs is defined as follows: </p>

<ul type=disc>

  <li><p> Two URIs with different schemes are ordered according the
  ordering of their schemes, without regard to case. </p></li>

  <li><p> A hierarchical URI is considered to be less than an opaque URI
  with an identical scheme. </p></li>

  <li><p> Two opaque URIs with identical schemes are ordered according
  to the ordering of their scheme-specific parts. </p></li>

  <li><p> Two opaque URIs with identical schemes and scheme-specific
  parts are ordered according to the ordering of their
  fragments. </p></li>

  <li><p> Two hierarchical URIs with identical schemes are ordered
  according to the ordering of their authority components: </p></li>

  <ul type=disc>

    <li><p> If both authority components are server-based then the URIs
    are ordered according to their user-information components; if these
    components are identical then the URIs are ordered according to the
    ordering of their hosts, without regard to case; if the hosts are
    identical then the URIs are ordered according to the ordering of
    their ports. </p></li>

    <li><p> If one or both authority components are registry-based then
    the URIs are ordered according to the ordering of their authority
    components. </p></li>

  </ul>

  <li><p> Finally, two hierarchical URIs with identical schemes and
  authority components are ordered according to the ordering of their
  paths; if their paths are identical then they are ordered according to
  the ordering of their queries; if the queries are identical then they
  are ordered according to the order of their fragments. </p></li>

</ul>

<p> This method satisfies the general contract of the {@link
java.lang.Comparable#compareTo(Object) Comparable.compareTo}
method. </p>

@param   ob
         The object to which this URI is to be compared

@return  A negative integer, zero, or a positive integer as this URI is
         less than, equal to, or greater than the given URI

@throws  ClassCastException
         If the given object is not a URI"
      end

      operation 7266203 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content of this URI as a string.

<p> If this URI was created by invoking one of the constructors in this
class then a string equivalent to the original input string, or to the
string computed from the originally-given components, as appropriate, is
returned.  Otherwise this URI was created by normalization, resolution,
or relativization, and so a string is constructed from this URI's
components according to the rules specified in <a
href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,
section&nbsp;5.2, step&nbsp;7. </p>

@return  The string form of this URI"
      end

      operation 7266331 "toASCIIString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content of this URI as a US-ASCII string.

<p> If this URI does not contain any characters in the <i>other</i>
category then an invocation of this method will return the same value as
an invocation of the {@link #toString() toString} method.  Otherwise
this method works as if by invoking that method and then <a
href=\"#encode\">encoding</a> the result.  </p>

@return  The string form of this URI, encoded as needed
         so that it only contains characters in the US-ASCII
         charset"
      end

      operation 7266459 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "os" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Serialization support --

Saves the content of this URI to the given serial stream.

<p> The only serializable field of a URI instance is its <tt>string</tt>
field.  That field is given a value, if it does not have one already,
and then the {@link java.io.ObjectOutputStream#defaultWriteObject()}
method of the given object-output stream is invoked. </p>

@param  os  The object-output stream to which this object
            is to be written"
      end

      operation 7266587 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "is" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 201883 // ClassNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes a URI from the given serial stream.

<p> The {@link java.io.ObjectInputStream#defaultReadObject()} method is
invoked to read the value of the <tt>string</tt> field.  The result is
then parsed in the usual way.

@param  is  The object-input stream from which this object
            is being read"
      end

      operation 7266715 "toLower"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- End of public methods --
 -- Utility methods for string-field comparison and hashing --
 These methods return appropriate values for null string arguments,
 thereby simplifying the equals, hashCode, and compareTo methods.

 The case-ignoring methods should only be applied to strings whose
 characters are all known to be US-ASCII.  Because of this restriction,
 these methods are faster than the similar methods in the String class.
 US-ASCII only"
      end

      operation 7266843 "equal"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "t" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7266971 "equalIgnoringCase"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "t" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " US-ASCII only"
      end

      operation 7267099 "hash"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "hash" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7267227 "hashIgnoringCase"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "hash" explicit_type "int"
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " US-ASCII only"
      end

      operation 7267355 "compare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "t" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7267483 "compareIgnoringCase"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "t" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " US-ASCII only"
      end

      operation 7267611 "checkPath"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "s" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	  param in name "path" explicit_type "String"
	nexceptions 1
	  exception class_ref 933019 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- String construction --
 If a scheme is given then the path, if given, must be absolute"
      end

      operation 7267739 "appendAuthority"
	private explicit_return_type "void"
	nparams 5
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "authority" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7267867 "appendSchemeSpecificPart"
	private explicit_return_type "void"
	nparams 8
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "opaquePart" explicit_type "String"
	  param in name "authority" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7267995 "appendFragment"
	private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "fragment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7268123 "toString"
	private explicit_return_type "String"
	nparams 9
	  param in name "scheme" explicit_type "String"
	  param in name "opaquePart" explicit_type "String"
	  param in name "authority" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	  param in name "fragment" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note for maintainer: sun.net.www.ParseUtil.createURI(...) clones
 this method and all necessary auxiliary code to fix 6274990-2127017.
 Any change made here should be propagated to sun.net.www.ParseUtil.
 The requirement only applies to 5.0 update release."
      end

      operation 7268251 "defineSchemeSpecificPart"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7268379 "defineString"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7268507 "resolvePath"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "base" explicit_type "String"
	  param in name "child" explicit_type "String"
	  param inout name "absolute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Normalization, resolution, and relativization --
 RFC2396 5.2 (6)"
      end

      operation 7268635 "resolve"
	class_operation private return_type class_ref 904091 // URI
	nparams 2
	  param inout name "base" type class_ref 904091 // URI
	  param inout name "child" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " RFC2396 5.2"
      end

      operation 7268763 "normalize"
	class_operation private return_type class_ref 904091 // URI
	nparams 1
	  param inout name "u" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If the given URI's path is normal then return the URI;
 o.w., return a new URI containing the normalized path."
      end

      operation 7268891 "relativize"
	class_operation private return_type class_ref 904091 // URI
	nparams 2
	  param inout name "base" type class_ref 904091 // URI
	  param inout name "child" type class_ref 904091 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If both URIs are hierarchical, their scheme and authority components are
 identical, and the base path is a prefix of the child's path, then
 return a relative URI that, when resolved against the base, yields the
 child; otherwise, return the child."
      end

      operation 7269019 "needsNormalization"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "path" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Path normalization --
 The following algorithm for path normalization avoids the creation of a
 string object for each segment, as well as the use of a string buffer to
 compute the final result, by using a single char array and editing it in
 place.  The array is first split into segments, replacing each slash
 with '\\0' and creating a segment-index array, each element of which is
 the index of the first char in the corresponding segment.  We then walk
 through both arrays, removing \".\", \"..\", and other segments as necessary
 by setting their entries in the index array to -1.  Finally, the two
 arrays are used to rejoin the segments and compute the final result.

 This code is based upon src/solaris/native/java/io/canonicalize_md.c
 Check the given path to see if it might need normalization.  A path
 might need normalization if it contains duplicate slashes, a \".\"
 segment, or a \"..\" segment.  Return -1 if no further normalization is
 possible, otherwise return the number of segments found.

 This method takes a string argument rather than a char array so that
 this test can be performed without invoking path.toCharArray()."
      end

      operation 7269147 "split"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "char"
	  param in name "segs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Split the given path into segments, replacing slashes with nulls and
 filling in the given segment-index array.

 Preconditions:
   segs.length == Number of segments in path

 Postconditions:
   All slashes in path replaced by '\\0'
   segs[i] == Index of first char in segment i (0 <= i < segs.length)"
      end

      operation 7269275 "join"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "path" explicit_type "char"
	  param in name "segs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Join the segments in the given path according to the given segment-index
 array, ignoring those segments whose index entries have been set to -1,
 and inserting slashes as needed.  Return the length of the resulting
 path.

 Preconditions:
   segs[i] == -1 implies segment i is to be ignored
   path computed by split, as above, with '\\0' having replaced '/'

 Postconditions:
   path[0] .. path[return value] == Resulting path"
      end

      operation 7269403 "removeDots"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "char"
	  param in name "segs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove \".\" segments from the given path, and remove segment pairs
 consisting of a non-\"..\" segment followed by a \"..\" segment."
      end

      operation 7269531 "maybeAddLeadingDot"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "char"
	  param in name "segs" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DEVIATION: If the normalized path is relative, and if the first
 segment could be parsed as a scheme name, then prepend a \".\" segment"
      end

      operation 7269659 "normalize"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "ps" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Normalize the given path string.  A normal path string has no empty
 segments (i.e., occurrences of \"//\"), no segments equal to \".\", and no
 segments equal to \"..\" that are preceded by a segment not equal to \"..\".
 In contrast to Unix-style pathname normalization, for URI paths we
 always retain trailing slashes."
      end

      operation 7269787 "lowMask"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "chars" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Character classes for parsing --
 RFC2396 precisely specifies which characters in the US-ASCII charset are
 permissible in the various components of a URI reference.  We here
 define a set of mask pairs to aid in enforcing these restrictions.  Each
 mask pair consists of two longs, a low mask and a high mask.  Taken
 together they represent a 128-bit mask, where bit i is set iff the
 character with value i is permitted.

 This approach is more efficient than sequentially searching arrays of
 permitted characters.  It could be made still more efficient by
 precompiling the mask information so that a character's presence in a
 given mask could be determined by a single table lookup.
 Compute the low-order mask for the characters in the given string"
      end

      operation 7269915 "highMask"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "chars" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Compute the high-order mask for the characters in the given string"
      end

      operation 7270043 "lowMask"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "first" explicit_type "char"
	  param in name "last" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Compute a low-order mask for the characters
 between first and last, inclusive"
      end

      operation 7270171 "highMask"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "first" explicit_type "char"
	  param in name "last" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Compute a high-order mask for the characters
 between first and last, inclusive"
      end

      operation 7270299 "match"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param in name "c" explicit_type "char"
	  param in name "lowMask" explicit_type "long"
	  param in name "highMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tell whether the given character is permitted by the given mask pair"
      end

      attribute 2794651 "L_DIGIT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask('0', '9')"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Character-class masks, in reverse order from RFC2396 because
 initializers for static fields cannot make forward references.
 digit    = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" |
            \"8\" | \"9\""
      end

      attribute 2794779 "H_DIGIT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  0L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2794907 "L_UPALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  0L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " upalpha  = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\" | \"I\" |
            \"J\" | \"K\" | \"L\" | \"M\" | \"N\" | \"O\" | \"P\" | \"Q\" | \"R\" |
            \"S\" | \"T\" | \"U\" | \"V\" | \"W\" | \"X\" | \"Y\" | \"Z\""
      end

      attribute 2795035 "H_UPALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask('A', 'Z')"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2795163 "L_LOWALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  0L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " lowalpha = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\" | \"i\" |
            \"j\" | \"k\" | \"l\" | \"m\" | \"n\" | \"o\" | \"p\" | \"q\" | \"r\" |
            \"s\" | \"t\" | \"u\" | \"v\" | \"w\" | \"x\" | \"y\" | \"z\""
      end

      attribute 2795291 "H_LOWALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask('a', 'z')"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2795419 "L_ALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_LOWALPHA | L_UPALPHA"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " alpha         = lowalpha | upalpha"
      end

      attribute 2795547 "H_ALPHA"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_LOWALPHA | H_UPALPHA"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2795675 "L_ALPHANUM"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_DIGIT | L_ALPHA"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " alphanum      = alpha | digit"
      end

      attribute 2795803 "H_ALPHANUM"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_DIGIT | H_ALPHA"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2795931 "L_HEX"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_DIGIT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " hex           = digit | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" |
                         \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\""
      end

      attribute 2796059 "H_HEX"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask('A', 'F') | highMask('a', 'f')"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2796187 "L_MARK"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask(\"-_.!~*'()\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mark          = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" |
                 \"(\" | \")\""
      end

      attribute 2796315 "H_MARK"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask(\"-_.!~*'()\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2796443 "L_UNRESERVED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_ALPHANUM | L_MARK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " unreserved    = alphanum | mark"
      end

      attribute 2796571 "H_UNRESERVED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_ALPHANUM | H_MARK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2796699 "L_RESERVED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask(\";/?:@&=+$,[]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " reserved      = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" |
                 \"$\" | \",\" | \"[\" | \"]\"
 Added per RFC2732: \"[\", \"]\""
      end

      attribute 2796827 "H_RESERVED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask(\";/?:@&=+$,[]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2796955 "L_ESCAPED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The zero'th bit is used to indicate that escape pairs and non-US-ASCII
 characters are allowed; this is handled by the scanEscape method below."
      end

      attribute 2797083 "H_ESCAPED"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  0L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2797211 "L_URIC"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_RESERVED | L_UNRESERVED | L_ESCAPED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uric          = reserved | unreserved | escaped"
      end

      attribute 2797339 "H_URIC"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_RESERVED | H_UNRESERVED | H_ESCAPED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2797467 "L_PCHAR"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_UNRESERVED | L_ESCAPED | lowMask(\":@&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " pchar         = unreserved | escaped |
                 \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\""
      end

      attribute 2797595 "H_PCHAR"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_UNRESERVED | H_ESCAPED | highMask(\":@&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2797723 "L_PATH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_PCHAR | lowMask(\";/\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " All valid path characters"
      end

      attribute 2797851 "H_PATH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_PCHAR | highMask(\";/\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2797979 "L_DASH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask(\"-\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Dash, for use in domainlabel and toplabel"
      end

      attribute 2798107 "H_DASH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask(\"-\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2798235 "L_DOT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask(\".\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Dot, for use in hostnames"
      end

      attribute 2798363 "H_DOT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask(\".\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2798491 "L_USERINFO"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_UNRESERVED | L_ESCAPED | lowMask(\";:&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " userinfo      = *( unreserved | escaped |
                    \";\" | \":\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\" )"
      end

      attribute 2798619 "H_USERINFO"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_UNRESERVED | H_ESCAPED | highMask(\";:&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2798747 "L_REG_NAME"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_UNRESERVED | L_ESCAPED | lowMask(\"$,;:@&=+\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " reg_name      = 1*( unreserved | escaped | \"$\" | \",\" |
                     \";\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" )"
      end

      attribute 2798875 "H_REG_NAME"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_UNRESERVED | H_ESCAPED | highMask(\"$,;:@&=+\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2799003 "L_SERVER"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_USERINFO | L_ALPHANUM | L_DASH | lowMask(\".:@[]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " All valid characters for server-based authorities"
      end

      attribute 2799131 "H_SERVER"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_USERINFO | H_ALPHANUM | H_DASH | highMask(\".:@[]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2799259 "L_SERVER_PERCENT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_SERVER | lowMask(\"%\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Special case of server authority that represents an IPv6 address
 In this case, a % does not signify an escape sequence"
      end

      attribute 2799387 "H_SERVER_PERCENT"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_SERVER | highMask(\"%\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2799515 "L_LEFT_BRACKET"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  lowMask(\"[\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2799643 "H_LEFT_BRACKET"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  highMask(\"[\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2799771 "L_SCHEME"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_ALPHA | L_DIGIT | lowMask(\"+-.\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " scheme        = alpha *( alpha | digit | \"+\" | \"-\" | \".\" )"
      end

      attribute 2799899 "H_SCHEME"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_ALPHA | H_DIGIT | highMask(\"+-.\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2800027 "L_URIC_NO_SLASH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  L_UNRESERVED | L_ESCAPED | lowMask(\";?:@&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " uric_no_slash = unreserved | escaped | \";\" | \"?\" | \":\" | \"@\" |
                 \"&\" | \"=\" | \"+\" | \"$\" | \",\""
      end

      attribute 2800155 "H_URIC_NO_SLASH"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  H_UNRESERVED | H_ESCAPED | highMask(\";?:@&=+$,\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2800283 "hexDigits"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value "=  {
	'0', '1', '2', '3', '4', '5', '6', '7',
	'8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -- Escaping and encoding --"
      end

      operation 7270427 "appendEscape"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7270555 "appendEncoded"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 198171 // StringBuffer
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7270683 "quote"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "s" explicit_type "String"
	  param in name "lowMask" explicit_type "long"
	  param in name "highMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Quote any characters in s that are not permitted
 by the given mask pair"
      end

      operation 7270811 "encode"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encodes all characters >= \\u0080 into escaped, normalized UTF-8 octets,
 assuming that s is otherwise legal"
      end

      operation 7270939 "decode"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7271067 "decode"
	class_operation private explicit_return_type "byte"
	nparams 2
	  param in name "c1" explicit_type "char"
	  param in name "c2" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7271195 "decode"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Evaluates all escapes in s, applying UTF-8 decoding if needed.  Assumes
 that escapes are well-formed syntactically, i.e., of the form %XX.  If a
 sequence of escaped octets is not valid UTF-8 then the erroneous octets
 are replaced with '\\uFFFD'.
 Exception: any \"%\" found between \"[]\" is left alone. It is an IPv6 literal
            with a scope_id"
      end

      class 933147 "Parser"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2800411 "input"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " URI input string"
	end

	attribute 2800539 "requireServerAuthority"
	  private explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7271323 "Parser"
	  package explicit_return_type ""
	  nparams 1
	    param in name "s" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7271451 "fail"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "reason" explicit_type "String"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " -- Methods for throwing URISyntaxException in various ways --"
	end

	operation 7271579 "fail"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "reason" explicit_type "String"
	    param in name "p" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7271707 "failExpecting"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "expected" explicit_type "String"
	    param in name "p" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7271835 "failExpecting"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "expected" explicit_type "String"
	    param in name "prior" explicit_type "String"
	    param in name "p" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7271963 "substring"
	  private explicit_return_type "String"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " -- Simple access to the input string --
 Return a substring of the input string"
	end

	operation 7272091 "charAt"
	  private explicit_return_type "char"
	  nparams 1
	    param in name "p" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Return the char at position p,
 assuming that p < input.length()"
	end

	operation 7272219 "at"
	  private explicit_return_type "boolean"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Tells whether start < end and, if so, whether charAt(start) == c"
	end

	operation 7272347 "at"
	  private explicit_return_type "boolean"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param in name "s" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Tells whether start + s.length() < end and, if so,
 whether the chars at the start position match s exactly"
	end

	operation 7272475 "scan"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " -- Scanning --
 The various scan and parse methods that follow use a uniform
 convention of taking the current start position and end index as
 their first two arguments.  The start is inclusive while the end is
 exclusive, just as in the String class, i.e., a start/end pair
 denotes the left-open interval [start, end) of the input string.

 These methods never proceed past the end position.  They may return
 -1 to indicate outright failure, but more often they simply return
 the position of the first char after the last char scanned.  Thus
 a typical idiom is

     int p = start;
     int q = scan(p, end, ...);
     if (q > p)
         // We scanned something
         ...;
     else if (q == p)
         // We scanned nothing
         ...;
     else if (q == -1)
         // Something went wrong
         ...;
 Scan a specific char: If the char at the given start position is
 equal to c, return the index of the next char; otherwise, return the
 start position."
	end

	operation 7272603 "scan"
	  private explicit_return_type "int"
	  nparams 4
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param in name "err" explicit_type "String"
	    param in name "stop" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan forward from the given start position.  Stop at the first char
 in the err string (in which case -1 is returned), or the first char
 in the stop string (in which case the index of the preceding char is
 returned), or the end of the input string (in which case the length
 of the input string is returned).  May return the start position if
 nothing matches."
	end

	operation 7272731 "scanEscape"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	    param in name "first" explicit_type "char"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan a potential escape sequence, starting at the given position,
 with the given first char (i.e., charAt(start) == c).

 This method assumes that if escapes are allowed then visible
 non-US-ASCII chars are also allowed."
	end

	operation 7272859 "scan"
	  private explicit_return_type "int"
	  nparams 4
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	    param in name "lowMask" explicit_type "long"
	    param in name "highMask" explicit_type "long"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan chars that match the given mask pair"
	end

	operation 7272987 "checkChars"
	  private explicit_return_type "void"
	  nparams 5
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	    param in name "lowMask" explicit_type "long"
	    param in name "highMask" explicit_type "long"
	    param in name "what" explicit_type "String"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Check that each of the chars in [start, end) matches the given mask"
	end

	operation 7273115 "checkChar"
	  private explicit_return_type "void"
	  nparams 4
	    param in name "p" explicit_type "int"
	    param in name "lowMask" explicit_type "long"
	    param in name "highMask" explicit_type "long"
	    param in name "what" explicit_type "String"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Check that the char at position p matches the given mask"
	end

	operation 7273243 "parse"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "rsa" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " -- Parsing --
 [<scheme>:]<scheme-specific-part>[#<fragment>]"
	end

	operation 7273371 "parseHierarchical"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " [//authority]<path>[?<query>]

 DEVIATION from RFC2396: We allow an empty authority component as
 long as it's followed by a non-empty path, query component, or
 fragment component.  This is so that URIs such as \"file:///foo/bar\"
 will parse.  This seems to be the intent of RFC2396, though the
 grammar does not permit it.  If the authority is empty then the
 userInfo, host, and port components are undefined.

 DEVIATION from RFC2396: We allow empty relative paths.  This seems
 to be the intent of RFC2396, but the grammar does not permit it.
 The primary consequence of this deviation is that \"#f\" parses as a
 relative URI with an empty path."
	end

	operation 7273499 "parseAuthority"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " authority     = server | reg_name

 Ambiguity: An authority that is a registry name rather than a server
 might have a prefix that parses as a server.  We use the fact that
 the authority component is always followed by '/' or the end of the
 input string to resolve this: If the complete authority did not
 parse as a server then we try to parse it as a registry name."
	end

	operation 7273627 "parseServer"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " [<userinfo>@]<host>[:<port>]"
	end

	operation 7273755 "scanByte"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan a string of decimal digits whose value fits in a byte"
	end

	operation 7273883 "scanIPv4Address"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	    param inout name "strict" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan an IPv4 address.

 If the strict argument is true then we require that the given
 interval contain nothing besides an IPv4 address; if it is false
 then we only require that it start with an IPv4 address.

 If the interval does not contain or start with (depending upon the
 strict argument) a legal IPv4 address characters then we return -1
 immediately; otherwise we insist that these characters parse as a
 legal IPv4 address and throw an exception on failure.

 We assume that any string of decimal digits and dots must be an IPv4
 address.  It won't parse as a hostname anyway, so making that
 assumption here allows more meaningful exceptions to be thrown."
	end

	operation 7274011 "takeIPv4Address"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	    param in name "expected" explicit_type "String"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Take an IPv4 address: Throw an exception if the given interval
 contains anything except an IPv4 address"
	end

	operation 7274139 "parseIPv4Address"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Attempt to parse an IPv4 address, returning -1 on failure but
 allowing the given interval to contain [:<characters>] after
 the IPv4 address."
	end

	operation 7274267 "parseHostname"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " hostname      = domainlabel [ \".\" ] | 1*( domainlabel \".\" ) toplabel [ \".\" ] 
 domainlabel   = alphanum | alphanum *( alphanum | \"-\" ) alphanum
 toplabel      = alpha | alpha *( alphanum | \"-\" ) alphanum"
	end

	attribute 2800667 "ipv6byteCount"
	  private explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " IPv6 address parsing, from RFC2373: IPv6 Addressing Architecture

 Bug: The grammar in RFC2373 Appendix B does not allow addresses of
 the form ::12.34.56.78, which are clearly shown in the examples
 earlier in the document.  Here is the original grammar:

   IPv6address = hexpart [ \":\" IPv4address ]
   hexpart     = hexseq | hexseq \"::\" [ hexseq ] | \"::\" [ hexseq ]
   hexseq      = hex4 *( \":\" hex4)
   hex4        = 1*4HEXDIG

 We therefore use the following revised grammar:

   IPv6address = hexseq [ \":\" IPv4address ]
                 | hexseq [ \"::\" [ hexpost ] ]
                 | \"::\" [ hexpost ]
   hexpost     = hexseq | hexseq \":\" IPv4address | IPv4address
   hexseq      = hex4 *( \":\" hex4)
   hex4        = 1*4HEXDIG

 This covers all and only the following cases:

   hexseq
   hexseq : IPv4address
   hexseq ::
   hexseq :: hexseq
   hexseq :: hexseq : IPv4address
   hexseq :: IPv4address
   :: hexseq
   :: hexseq : IPv4address
   :: IPv4address
   ::

 Additionally we constrain the IPv6 address as follows :-

  i.  IPv6 addresses without compressed zeros should contain
      exactly 16 bytes.

  ii. IPv6 addresses with compressed zeros should contain
      less than 16 bytes."
	end

	operation 7274395 "parseIPv6Reference"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7274523 "scanHexPost"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7274651 "scanHexSeq"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "start" explicit_type "int"
	    param in name "n" explicit_type "int"
	  nexceptions 1
	    exception class_ref 933019 // URISyntaxException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Scan a hex sequence; return -1 if one could not be scanned"
	end
      end
    end

    class 926107 "Authenticator"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class Authenticator represents an object that knows how to obtain
authentication for a network connection.  Usually, it will do this
by prompting the user for information.
<p>
Applications use this class by overriding {@link 
#getPasswordAuthentication()} in a sub-class. This method will
typically use the various getXXX() accessor methods to get information
about the entity requesting authentication. It must then acquire a 
username and password either by interacting with the user or through
some other non-interactive means. The credentials are then returned
as a {@link PasswordAuthentication} return value.
<p>
An instance of this concrete sub-class is then registered
with the system by calling {@link #setDefault(Authenticator)}.
When authentication is required, the system will invoke one of the
requestPasswordAuthentication() methods which in turn will call the
getPasswordAuthentication() method of the registered object. 
<p>
All methods that request authentication have a default implementation
that fails.

@see java.net.Authenticator#setDefault(java.net.Authenticator)
@see java.net.Authenticator#getPasswordAuthentication()

@author  Bill Foote
@version 1.32, 06/28/04
@since   1.2

 There are no abstract methods, but to be useful the user must
 subclass."
      classrelation 1808155 // theAuthenticator (<unidirectional association>)
	relation 1808155 --->
	  a role_name "theAuthenticator" class_relation private
	    comment " The system-wide authenticator object.  See setDefault().
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808155 // theAuthenticator (<unidirectional association>)
	  b parent class_ref 926107 // Authenticator
      end

      attribute 2762651 "requestingHost"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1808283 // requestingSite (<unidirectional association>)
	relation 1808283 --->
	  a role_name "requestingSite" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808283 // requestingSite (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2762779 "requestingPort"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2762907 "requestingProtocol"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2763035 "requestingPrompt"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2763163 "requestingScheme"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1808411 // requestingURL (<unidirectional association>)
	relation 1808411 --->
	  a role_name "requestingURL" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808411 // requestingURL (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      class 926235 "RequestorType"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2763291 "PROXY"
	  public type class_ref 926235 // RequestorType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Entity requesting authentication is a HTTP proxy server.
"
	end

	attribute 2763419 "SERVER"
	  public type class_ref 926235 // RequestorType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Entity requesting authentication is a HTTP origin server."
	end
      end

      classrelation 1808539 // requestingAuthType (<unidirectional association>)
	relation 1808539 --->
	  a role_name "requestingAuthType" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808539 // requestingAuthType (<unidirectional association>)
	  b parent class_ref 926235 // RequestorType
      end

      operation 7175067 "reset"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7175195 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "a" type class_ref 926107 // Authenticator
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the authenticator that will be used by the networking code
when a proxy or an HTTP server asks for authentication.
<p>
First, if there is a security manager, its <code>checkPermission</code> 
method is called with a 
<code>NetPermission(\"setDefaultAuthenticator\")</code> permission.
This may result in a java.lang.SecurityException. 

@param	a	The authenticator to be set. If a is <code>null</code> then
			any previously set authenticator is removed.

@throws SecurityException
       if a security manager exists and its 
       <code>checkPermission</code> method doesn't allow 
       setting the default authenticator.

@see SecurityManager#checkPermission
@see java.net.NetPermission"
      end

      operation 7175323 "requestPasswordAuthentication"
	class_operation public return_type class_ref 926363 // PasswordAuthentication
	nparams 5
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "protocol" explicit_type "String"
	  param in name "prompt" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the authenticator that has been registered with the system
for a password.
<p>
First, if there is a security manager, its <code>checkPermission</code> 
method is called with a 
<code>NetPermission(\"requestPasswordAuthentication\")</code> permission.
This may result in a java.lang.SecurityException. 

@param addr The InetAddress of the site requesting authorization,
            or null if not known.
@param port the port for the requested connection
@param protocol The protocol that's requesting the connection
         ({@link java.net.Authenticator#getRequestingProtocol()})
@param prompt A prompt string for the user
@param scheme The authentication scheme

@return The username/password, or null if one can't be gotten.

@throws SecurityException
       if a security manager exists and its 
       <code>checkPermission</code> method doesn't allow 
       the password authentication request.

@see SecurityManager#checkPermission
@see java.net.NetPermission"
      end

      operation 7175451 "requestPasswordAuthentication"
	class_operation public return_type class_ref 926363 // PasswordAuthentication
	nparams 6
	  param in name "host" explicit_type "String"
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "protocol" explicit_type "String"
	  param in name "prompt" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the authenticator that has been registered with the system
for a password. This is the preferred method for requesting a password
because the hostname can be provided in cases where the InetAddress
is not available.
<p>
First, if there is a security manager, its <code>checkPermission</code> 
method is called with a 
<code>NetPermission(\"requestPasswordAuthentication\")</code> permission.
This may result in a java.lang.SecurityException. 

@param host The hostname of the site requesting authentication.
@param addr The InetAddress of the site requesting authentication,
            or null if not known. 
@param port the port for the requested connection.
@param protocol The protocol that's requesting the connection
         ({@link java.net.Authenticator#getRequestingProtocol()})
@param prompt A prompt string for the user which identifies the authentication realm.
@param scheme The authentication scheme

@return The username/password, or null if one can't be gotten.

@throws SecurityException
       if a security manager exists and its 
       <code>checkPermission</code> method doesn't allow 
       the password authentication request.

@see SecurityManager#checkPermission
@see java.net.NetPermission
@since 1.4"
      end

      operation 7175579 "requestPasswordAuthentication"
	class_operation public return_type class_ref 926363 // PasswordAuthentication
	nparams 8
	  param in name "host" explicit_type "String"
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "protocol" explicit_type "String"
	  param in name "prompt" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	  param inout name "url" type class_ref 269467 // URL
	  param inout name "reqType" type class_ref 926235 // RequestorType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the authenticator that has been registered with the system
for a password.
<p>
First, if there is a security manager, its <code>checkPermission</code> 
method is called with a 
<code>NetPermission(\"requestPasswordAuthentication\")</code> permission.
This may result in a java.lang.SecurityException. 

@param host The hostname of the site requesting authentication.
@param addr The InetAddress of the site requesting authorization,
            or null if not known.
@param port the port for the requested connection
@param protocol The protocol that's requesting the connection
         ({@link java.net.Authenticator#getRequestingProtocol()})
@param prompt A prompt string for the user
@param scheme The authentication scheme
@param url The requesting URL that caused the authentication
@param reqType The type (server or proxy) of the entity requesting
		    authentication.

@return The username/password, or null if one can't be gotten.

@throws SecurityException
       if a security manager exists and its 
       <code>checkPermission</code> method doesn't allow 
       the password authentication request.

@see SecurityManager#checkPermission
@see java.net.NetPermission

@since 1.5"
      end

      operation 7175707 "getRequestingHost"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>hostname</code> of the
site or proxy requesting authentication, or <code>null</code>
if not available.

@return the hostname of the connection requiring authentication, or null
		if it's not available.
@since 1.4"
      end

      operation 7175835 "getRequestingSite"
	protected return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>InetAddress</code> of the
site requesting authorization, or <code>null</code>
if not available.

@return the InetAddress of the site requesting authorization, or null
		if it's not available."
      end

      operation 7175963 "getRequestingPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the port number for the requested connection.
@return an <code>int</code> indicating the 
port for the requested connection."
      end

      operation 7176091 "getRequestingProtocol"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Give the protocol that's requesting the connection.  Often this
will be based on a URL, but in a future JDK it could be, for
example, \"SOCKS\" for a password-protected SOCKS5 firewall.

@return the protcol, optionally followed by \"/version\", where
		version is a version number.

@see java.net.URL#getProtocol()"
      end

      operation 7176219 "getRequestingPrompt"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the prompt string given by the requestor.

@return the prompt string given by the requestor (realm for
		http requests)"
      end

      operation 7176347 "getRequestingScheme"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the scheme of the requestor (the HTTP scheme
for an HTTP firewall, for example).

@return the scheme of the requestor
	      "
      end

      operation 7176475 "getPasswordAuthentication"
	protected return_type class_ref 926363 // PasswordAuthentication
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when password authorization is needed.  Subclasses should
override the default implementation, which returns null.
@return The PasswordAuthentication collected from the
		user, or null if none is provided."
      end

      operation 7176603 "getRequestingURL"
	protected return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL that resulted in this
request for authentication.

@since 1.5

@return the requesting URL
	      "
      end

      operation 7176731 "getRequestorType"
	protected return_type class_ref 926235 // RequestorType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the requestor is a Proxy or a Server.

@since 1.5

@return the authentication type of the requestor
	      "
      end
    end

    class 926363 "PasswordAuthentication"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class PasswordAuthentication is a data holder that is used by
Authenticator.  It is simply a repository for a user name and a password.

@see java.net.Authenticator
@see java.net.Authenticator#getPasswordAuthentication()

@author  Bill Foote
@version 1.15, 12/19/03
@since   1.2"
      attribute 2779675 "userName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2779803 "password"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7223835 "PasswordAuthentication"
	public explicit_return_type ""
	nparams 2
	  param in name "userName" explicit_type "String"
	  param in name "password" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PasswordAuthentication</code> object from the given
user name and password.

<p> Note that the given user password is cloned before it is stored in
the new <code>PasswordAuthentication</code> object.

@param userName the user name
@param password the user's password"
      end

      operation 7223963 "getUserName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user name.

@return the user name"
      end

      operation 7224091 "getPassword"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user password.

<p> Note that this method returns a reference to the password. It is
the caller's responsibility to zero out the password information after
it is no longer needed.

@return the password"
      end
    end

    class 926491 "BindException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an error occurred while attempting to bind a
socket to a local address and port.  Typically, the port is
in use, or the requested local address could not be assigned.

@since   JDK1.1"
      classrelation 1808795 // <generalisation>
	relation 1808795 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1808795 // <generalisation>
	  b parent class_ref 273947 // SocketException
      end

      operation 7177115 "BindException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new BindException with the specified detail 
message as to why the bind error occurred.
A detail message is a String that gives a specific 
description of this error.
@param msg the detail message"
      end

      operation 7177243 "BindException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new BindException with no detailed message."
      end
    end

    class 926619 "CacheRequest"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents channels for storing resources in the
ResponseCache. Instances of such a class provide an
OutputStream object which is called by protocol handlers to
store the resource data into the cache, and also an abort() method
which allows a cache store operation to be interrupted and
abandoned. If an IOException is encountered while reading the
response or writing to the cache, the current cache store operation
will be aborted.

@version 1.1, 03/09/22
@author Yingxian Wang
@since 1.5"
      operation 7177371 "getBody"
	abstract public return_type class_ref 183835 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an OutputStream to which the response body can be
written.

@return an OutputStream to which the response body can
        be written
@throws IOException if an I/O error occurs while
        writing the response body"
      end

      operation 7177499 "abort"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Aborts the attempt to cache the response. If an IOException is
encountered while reading the response or writing to the cache,
the current cache store operation will be abandoned."
      end
    end

    class 926747 "CacheResponse"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represent channels for retrieving resources from the
ResponseCache. Instances of such a class provide an
InputStream that returns the entity body, and also a
getHeaders() method which returns the associated response headers.

@version 1.1, 03/09/22
@author Yingxian Wang
@since 1.5"
      operation 7177627 "getHeaders"
	abstract public return_type class_ref 136603 // Map
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response headers as a Map.

@return An immutable Map from response header field names to
        lists of field values. The status line has null as its
        field name.
@throws IOException if an I/O error occurs
           while getting the response headers"
      end

      operation 7177755 "getBody"
	abstract public return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response body as an InputStream.

@return an InputStream from which the response body can
        be accessed
@throws IOException if an I/O error occurs while
        getting the response body"
      end
    end

    class 926875 "ConnectException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an error occurred while attempting to connect a
socket to a remote address and port.  Typically, the connection
was refused remotely (e.g., no process is listening on the 
remote address/port).

@since   JDK1.1"
      classrelation 1808923 // <generalisation>
	relation 1808923 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1808923 // <generalisation>
	  b parent class_ref 273947 // SocketException
      end

      operation 7177883 "ConnectException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new ConnectException with the specified detail 
message as to why the connect error occurred.
A detail message is a String that gives a specific 
description of this error.
@param msg the detail message"
      end

      operation 7178011 "ConnectException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new ConnectException with no detailed message."
      end
    end

    class 927003 "ContentHandler"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class <code>ContentHandler</code> is the superclass 
of all classes that read an <code>Object</code> from a 
<code>URLConnection</code>. 
<p>
An application does not generally call the 
<code>getContent</code> method in this class directly. Instead, an 
application calls the <code>getContent</code> method in class 
<code>URL</code> or in <code>URLConnection</code>.
The application's content handler factory (an instance of a class that 
implements the interface <code>ContentHandlerFactory</code> set 
up by a call to <code>setContentHandler</code>) is 
called with a <code>String</code> giving the MIME type of the 
object being received on the socket. The factory returns an 
instance of a subclass of <code>ContentHandler</code>, and its 
<code>getContent</code> method is called to create the object. 
<p>
If no content handler could be found, URLConnection will 
look for a content handler in a user-defineable set of places.
By default it looks in sun.net.www.content, but users can define a 
vertical-bar delimited set of class prefixes to search through in 
addition by defining the java.content.handler.pkgs property.
The class name must be of the form:
<pre>
    {package-prefix}.{major}.{minor}
e.g.
    YoyoDyne.experimental.text.plain
</pre>
If the loading of the content handler class would be performed by 
a classloader that is outside of the the delegation chain of the caller,
the JVM will need the RuntimePermission \"getClassLoader\".

@author  James Gosling
@version 1.17, 12/19/03
@see     java.net.ContentHandler#getContent(java.net.URLConnection)
@see     java.net.ContentHandlerFactory
@see     java.net.URL#getContent()
@see     java.net.URLConnection
@see     java.net.URLConnection#getContent()
@see     java.net.URLConnection#setContentHandlerFactory(java.net.ContentHandlerFactory)
@since   JDK1.0"
      operation 7178139 "getContent"
	abstract public explicit_return_type "Object"
	nparams 1
	  param inout name "urlc" type class_ref 730011 // URLConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a URL connect stream positioned at the beginning of the 
representation of an object, this method reads that stream and 
creates an object from it. 

@param      urlc   a URL connection.
@return     the object read by the <code>ContentHandler</code>.
@exception  IOException  if an I/O error occurs while reading the object."
      end

      operation 7178267 "getContent"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "urlc" type class_ref 730011 // URLConnection
	  param inout name "classes" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a URL connect stream positioned at the beginning of the 
representation of an object, this method reads that stream and 
creates an object that matches one of the types specified. 

The default implementation of this method should call getContent()
and screen the return type for a match of the suggested types.

@param      urlc   a URL connection.
@param      classes	an array of types requested  
@return     the object read by the <code>ContentHandler</code> that is 
                the first match of the suggested types. 
                null if none of the requested  are supported.
@exception  IOException  if an I/O error occurs while reading the object."
      end
    end

    class 927131 "ContentHandlerFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for content handlers. An
implementation of this interface should map a MIME type into an
instance of <code>ContentHandler</code>.
<p>
This interface is used by the <code>URLStreamHandler</code> class
to create a <code>ContentHandler</code> for a MIME type.

@author  James Gosling
@version 1.12, 12/19/03
@see     java.net.ContentHandler
@see     java.net.URLStreamHandler
@since   JDK1.0"
      operation 7178395 "createContentHandler"
	public return_type class_ref 927003 // ContentHandler
	nparams 1
	  param in name "mimetype" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>ContentHandler</code> to read an object from
a <code>URLStreamHandler</code>.

@param   mimetype   the MIME type for which a content handler is desired.

@return  a new <code>ContentHandler</code> to read an object from a
         <code>URLStreamHandler</code>.
@see     java.net.ContentHandler
@see     java.net.URLStreamHandler"
      end
    end

    class 927259 "CookieHandler"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A CookieHandler object provides a callback mechanism to hook up a
HTTP state management policy implementation into the HTTP protocol
handler. The HTTP state management mechanism specifies a way to
create a stateful session with HTTP requests and responses.

<p>A system-wide CookieHandler that to used by the HTTP protocol
handler can be registered by doing a
CookieHandler.setDefault(CookieHandler). The currently registered
CookieHandler can be retrieved by calling
CookieHandler.getDefault().

For more information on HTTP state management, see <a
href=\"http://www.ietf.org/rfc/rfc2965.txt\"\"><i>RFC&nbsp;2965: HTTP
State Management Mechanism</i></a>

@version 1.4, 03/08/09
@author Yingxian Wang
@since 1.5"
      classrelation 1809051 // cookieHandler (<unidirectional association>)
	relation 1809051 --->
	  a role_name "cookieHandler" class_relation private
	    comment "
The system-wide cookie handler that will apply cookies to the
request headers and manage cookies from the response headers.

@see setDefault(CookieHandler)
@see getDefault()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809051 // cookieHandler (<unidirectional association>)
	  b parent class_ref 927259 // CookieHandler
      end

      operation 7178523 "getDefault"
	class_operation public return_type class_ref 927259 // CookieHandler
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system-wide cookie handler.

@return the system-wide cookie handler; A null return means
       there is no system-wide cookie handler currently set.
@throws SecurityException
      If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"getCookieHandler\")</tt>
@see #setDefault(CookieHandler)"
      end

      operation 7178651 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "cHandler" type class_ref 927259 // CookieHandler
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets (or unsets) the system-wide cookie handler.

Note: non-standard http protocol handlers may ignore this setting.

@param cHandler The HTTP cookie handler, or
      <code>null</code> to unset.
@throws SecurityException
      If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"setCookieHandler\")</tt>
@see #getDefault()"
      end

      operation 7178779 "get"
	abstract public return_type class_ref 136603 // Map
	nparams 2
	  param inout name "uri" type class_ref 904091 // URI
	  param inout name "requestHeaders" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, List<String>> ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the applicable cookies from a cookie cache for the
specified uri in the request header.

HTTP protocol implementers should make sure that this method is
called after all request headers related to choosing cookies
are added, and before the request is sent.

@param uri a <code>URI</code> to send cookies to in a request
@param requestHeaders - a Map from request header
           field names to lists of field values representing
           the current request headers
@return an immutable map from state management headers, with
           field names \"Cookie\" or \"Cookie2\" to a list of
           cookies containing state information

@throws IOException if an I/O * error occurs
@throws IllegalArgumentException if either argument is null
@see #put(URI, Map)"
      end

      operation 7178907 "put"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 904091 // URI
	  param inout name "responseHeaders" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, List<String>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all the applicable cookies, examples are response header
fields that are named Set-Cookie2, present in the response
headers into a cookie cache.

@param uri a <code>URI</code> where the cookies come from
@param responseHeaders an immutable map from field names to
           lists of field values representing the response
           header fields returned
@throws	IOException if an I/O error occurs 
@throws  IllegalArgumentException if either argument is null
@see #get(URI, Map)"
      end
    end

    class 927387 "SocketAddress"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class represents a Socket Address with no protocol attachment.
As an abstract class, it is meant to be subclassed with a specific, 
protocol dependent, implementation.
<p>
It provides an immutable object used by sockets for binding, connecting, or
as returned values.

@see	java.net.Socket
@see	java.net.ServerSocket
@since 1.4"
      classrelation 1813147 // <realization>
	relation 1813147 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1813147 // <realization>
	  b parent class_ref 137883 // Serializable
      end
    end

    class 927515 "DatagramSocketImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract datagram and multicast socket implementation base class.
@author Pavani Diwanji
@since  JDK1.1"
      classrelation 1809819 // <realization>
	relation 1809819 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1809819 // <realization>
	  b parent class_ref 927899 // SocketOptions
      end

      attribute 2767259 "localPort"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The local port number.
"
      end

      classrelation 1809947 // fd (<unidirectional association>)
	relation 1809947 --->
	  a role_name "fd" protected
	    comment "
The file descriptor object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809947 // fd (<unidirectional association>)
	  b parent class_ref 904475 // FileDescriptor
      end

      operation 7186715 "create"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a datagram socket.
@exception SocketException if there is an error in the 
underlying protocol, such as a TCP error. "
      end

      operation 7186843 "bind"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "lport" explicit_type "int"
	  param inout name "laddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds a datagram socket to a local port and address.
@param lport the local port
@param laddr the local address
@exception SocketException if there is an error in the
underlying protocol, such as a TCP error."
      end

      operation 7186971 "send"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a datagram packet. The packet contains the data and the
destination address to send the packet to.
@param p the packet to be sent.
@exception IOException if an I/O exception occurs while sending the 
datagram packet.
@exception  PortUnreachableException may be thrown if the socket is connected
to a currently unreachable destination. Note, there is no guarantee that 
the exception will be thrown."
      end

      operation 7187099 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects a datagram socket to a remote destination. This associates the remote
address with the local socket so that datagrams may only be sent to this destination
and received from this destination. This may be overridden to call a native
system connect. 

<p>If the remote destination to which the socket is connected does not
exist, or is otherwise unreachable, and if an ICMP destination unreachable
packet has been received for that address, then a subsequent call to 
send or receive may throw a PortUnreachableException. 
Note, there is no guarantee that the exception will be thrown.
@param address the remote InetAddress to connect to
@param port the remote port number
@exception   SocketException may be thrown if the socket cannot be
connected to the remote destination
@since 1.4"
      end

      operation 7187227 "disconnect"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects a datagram socket from its remote destination. 
@since 1.4"
      end

      operation 7187355 "peek"
	abstract protected explicit_return_type "int"
	nparams 1
	  param inout name "i" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peek at the packet to see who it is from.
@param i an InetAddress object 
@return the address which the packet came from.
@exception IOException if an I/O exception occurs
@exception  PortUnreachableException may be thrown if the socket is connected
      to a currently unreachable destination. Note, there is no guarantee that the
      exception will be thrown."
      end

      operation 7187483 "peekData"
	abstract protected explicit_return_type "int"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peek at the packet to see who it is from. The data is returned,
but not consumed, so that a subsequent peekData/receive operation 
will see the same data.
@param p the Packet Received.
@return the address which the packet came from.
@exception IOException if an I/O exception occurs
@exception  PortUnreachableException may be thrown if the socket is connected
      to a currently unreachable destination. Note, there is no guarantee that the
      exception will be thrown.
@since 1.4"
      end

      operation 7187611 "receive"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive the datagram packet.
@param p the Packet Received.
@exception IOException if an I/O exception occurs
while receiving the datagram packet.
@exception  PortUnreachableException may be thrown if the socket is connected
      to a currently unreachable destination. Note, there is no guarantee that the
      exception will be thrown."
      end

      operation 7187739 "setTTL"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Set the TTL (time-to-live) option.
@param ttl a byte specifying the TTL value

@deprecated use setTimeToLive instead.
@exception IOException if an I/O exception occurs while setting
the time-to-live option.
@see #getTTL()"
      end

      operation 7187867 "getTTL"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve the TTL (time-to-live) option.

@exception IOException if an I/O exception occurs
while retrieving the time-to-live option
@deprecated use getTimeToLive instead.
@return a byte representing the TTL value
@see #setTTL(byte)"
      end

      operation 7187995 "setTimeToLive"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the TTL (time-to-live) option.
@param ttl an <tt>int</tt> specifying the time-to-live value
@exception IOException if an I/O exception occurs
while setting the time-to-live option.
@see #getTimeToLive()"
      end

      operation 7188123 "getTimeToLive"
	abstract protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the TTL (time-to-live) option.
@exception IOException if an I/O exception occurs
while retrieving the time-to-live option
@return an <tt>int</tt> representing the time-to-live value
@see #setTimeToLive(int)"
      end

      operation 7188251 "join"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Join the multicast group.
@param inetaddr multicast address to join.
@exception IOException if an I/O exception occurs
while joining the multicast group."
      end

      operation 7188379 "leave"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave the multicast group.
@param inetaddr multicast address to leave.
@exception IOException if an I/O exception occurs
while leaving the multicast group."
      end

      operation 7188507 "joinGroup"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Join the multicast group.
@param mcastaddr address to join.
@param netIf specifies the local interface to receive multicast
       datagram packets
@throws IOException if an I/O exception occurs while joining
the multicast group
@since 1.4"
      end

      operation 7188635 "leaveGroup"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave the multicast group.
@param mcastaddr address to leave.
@param netIf specified the local interface to leave the group at
@throws IOException if an I/O exception occurs while leaving
the multicast group
@since 1.4"
      end

      operation 7188763 "close"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the socket."
      end

      operation 7188891 "getLocalPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local port.
@return an <tt>int</tt> representing the local port value"
      end

      operation 7189019 "getFileDescriptor"
	protected return_type class_ref 904475 // FileDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the datagram socket file descriptor.
@return a <tt>FileDescriptor</tt> object representing the datagram socket
file descriptor"
      end
    end

    class 927771 "DatagramSocketImplFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for datagram socket implementations. It
is used by the classes <code>DatagramSocket</code> to create actual socket
implementations.

@author  Yingxian Wang
@version %I %E
@see     java.net.DatagramSocket
@since   1.3"
      operation 7189147 "createDatagramSocketImpl"
	public return_type class_ref 927515 // DatagramSocketImpl
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>DatagramSocketImpl</code> instance.

@return  a new instance of <code>DatagramSocketImpl</code>.
@see     java.net.DatagramSocketImpl"
      end
    end

    class 927899 "SocketOptions"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface of methods to get/set socket options.  This interface is
implemented by: <B>SocketImpl</B> and  <B>DatagramSocketImpl</B>.
Subclasses of these should override the methods
of this interface in order to support their own options.
<P>
The methods and constants which specify options in this interface are
for implementation only.  If you're not subclassing SocketImpl or
DatagramSocketImpl, <B>you won't use these directly.</B> There are
type-safe methods to get/set each of these options in Socket, ServerSocket,
DatagramSocket and MulticastSocket.
<P>
@version 1.32, 01/28/04
@author David Brown"
      operation 7186459 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "optID" explicit_type "int"
	  param inout name "value" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the option specified by <I>optID</I>.  If the option
is to be enabled, and it takes an option-specific \"value\",  this is
passed in <I>value</I>.  The actual type of value is option-specific,
and it is an error to pass something that isn't of the expected type:
<BR><PRE>
SocketImpl s;
...
s.setOption(SO_LINGER, new Integer(10));
   // OK - set SO_LINGER w/ timeout of 10 sec.
s.setOption(SO_LINGER, new Double(10));
   // ERROR - expects java.lang.Integer
</PRE>
If the requested option is binary, it can be set using this method by
a java.lang.Boolean:
<BR><PRE>
s.setOption(TCP_NODELAY, new Boolean(true));
   // OK - enables TCP_NODELAY, a binary option
</PRE>
<BR>
Any option can be disabled using this method with a Boolean(false):
<BR><PRE>
s.setOption(TCP_NODELAY, new Boolean(false));
   // OK - disables TCP_NODELAY
s.setOption(SO_LINGER, new Boolean(false));
   // OK - disables SO_LINGER
</PRE>
<BR>
For an option that has a notion of on and off, and requires 
a non-boolean parameter, setting its value to anything other than
<I>Boolean(false)</I> implicitly enables it.
<BR>
Throws SocketException if the option is unrecognized,
the socket is closed, or some low-level error occurred
<BR>
@param optID identifies the option
@param value the parameter of the socket option
@throws SocketException if the option is unrecognized,
the socket is closed, or some low-level error occurred
@see #getOption(int)"
      end

      operation 7186587 "getOption"
	public explicit_return_type "Object"
	nparams 1
	  param in name "optID" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetch the value of an option.
Binary options will return java.lang.Boolean(true)
if enabled, java.lang.Boolean(false) if disabled, e.g.:
<BR><PRE>
SocketImpl s;
...
Boolean noDelay = (Boolean)(s.getOption(TCP_NODELAY));
if (noDelay.booleanValue()) {
    // true if TCP_NODELAY is enabled...
...
}
</PRE>
<P>
For options that take a particular type as a parameter,
getOption(int) will return the paramter's value, else
it will return java.lang.Boolean(false):
<PRE>
Object o = s.getOption(SO_LINGER);
if (o instanceof Integer) {
    System.out.print(\"Linger time is \" + ((Integer)o).intValue());
} else {
  // the true type of o is java.lang.Boolean(false);
}
</PRE>

@param optID an <code>int</code> identifying the option to fetch
@return the value of the option
@throws SocketException if the socket is closed
@throws SocketException if <I>optID</I> is unknown along the
        protocol stack (including the SocketImpl)
@see #setOption(int, java.lang.Object)"
      end

      attribute 2765467 "TCP_NODELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x0001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The java-supported BSD-style options.


Disable Nagle's algorithm for this connection.  Written data
to the network is not buffered pending acknowledgement of
previously written data.
<P>
Valid for TCP only: SocketImpl.
<P>
@see Socket#setTcpNoDelay
@see Socket#getTcpNoDelay
"
      end

      attribute 2765595 "SO_BINDADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x000F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Fetch the local address binding of a socket (this option cannot
be \"set\" only \"gotten\", since sockets are bound at creation time,
and so the locally bound address cannot be changed).  The default local
address of a socket is INADDR_ANY, meaning any local address on a
multi-homed host.  A multi-homed host can use this option to accept
connections to only one of its addresses (in the case of a
ServerSocket or DatagramSocket), or to specify its return address
to the peer (for a Socket or DatagramSocket).  The parameter of
this option is an InetAddress.
<P>
This option <B>must</B> be specified in the constructor.
<P>
Valid for: SocketImpl, DatagramSocketImpl
<P>
@see Socket#getLocalAddress
@see DatagramSocket#getLocalAddress
"
      end

      attribute 2765723 "SO_REUSEADDR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Sets SO_REUSEADDR for a socket.  This is used only for MulticastSockets
in java, and it is set by default for MulticastSockets.
<P>
Valid for: DatagramSocketImpl
"
      end

      attribute 2765851 "SO_BROADCAST"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x0020"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sets SO_BROADCAST for a socket. This option enables and disables 
the ability of the process to send broadcast messages. It is supported
for only datagram sockets and only on networks that support
the concept of a broadcast message (e.g. Ethernet, token ring, etc.),
and it is set by default for DatagramSockets.
@since 1.4
"
      end

      attribute 2765979 "IP_MULTICAST_IF"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set which outgoing interface on which to send multicast packets.
Useful on hosts with multiple network interfaces, where applications
want to use other than the system default.  Takes/returns an InetAddress.
<P>
Valid for Multicast: DatagramSocketImpl
<P>
@see MulticastSocket#setInterface(InetAddress)
@see MulticastSocket#getInterface()
"
      end

      attribute 2766107 "IP_MULTICAST_IF2"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Same as above. This option is introduced so that the behaviour 
 with IP_MULTICAST_IF will be kept the same as before, while
 this new option can support setting outgoing interfaces with either 
 IPv4 and IPv6 addresses.

 NOTE: make sure there is no conflict with this
@see MulticastSocket#setNetworkInterface(NetworkInterface)
@see MulticastSocket#getNetworkInterface()
@since 1.4
"
      end

      attribute 2766235 "IP_MULTICAST_LOOP"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This option enables or disables local loopback of multicast datagrams.
This option is enabled by default for Multicast Sockets.
@since 1.4
"
      end

      attribute 2766363 "IP_TOS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This option sets the type-of-service or traffic class field 
in the IP header for a TCP or UDP socket.
@since 1.4
"
      end

      attribute 2766491 "SO_LINGER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x0080"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specify a linger-on-close timeout.  This option disables/enables
immediate return from a <B>close()</B> of a TCP Socket.  Enabling
this option with a non-zero Integer <I>timeout</I> means that a
<B>close()</B> will block pending the transmission and acknowledgement
of all data written to the peer, at which point the socket is closed
<I>gracefully</I>.  Upon reaching the linger timeout, the socket is
closed <I>forcefully</I>, with a TCP RST. Enabling the option with a
timeout of zero does a forceful close immediately. If the specified
timeout value exceeds 65,535 it will be reduced to 65,535.
<P>
Valid only for TCP: SocketImpl

@see Socket#setSoLinger
@see Socket#getSoLinger
"
      end

      attribute 2766619 "SO_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1006"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set a timeout on blocking Socket operations:
<PRE>
ServerSocket.accept();
SocketInputStream.read();
DatagramSocket.receive();
</PRE>

<P> The option must be set prior to entering a blocking
operation to take effect.  If the timeout expires and the
operation would continue to block,
<B>java.io.InterruptedIOException</B> is raised.  The Socket is
not closed in this case.

<P> Valid for all sockets: SocketImpl, DatagramSocketImpl

@see Socket#setSoTimeout
@see ServerSocket#setSoTimeout
@see DatagramSocket#setSoTimeout
"
      end

      attribute 2766747 "SO_SNDBUF"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set a hint the size of the underlying buffers used by the
platform for outgoing network I/O. When used in set, this is a
suggestion to the kernel from the application about the size of
buffers to use for the data to be sent over the socket. When
used in get, this must return the size of the buffer actually
used by the platform when sending out data on this socket.

Valid for all sockets: SocketImpl, DatagramSocketImpl

@see Socket#setSendBufferSize
@see Socket#getSendBufferSize
@see DatagramSocket#setSendBufferSize
@see DatagramSocket#getSendBufferSize
"
      end

      attribute 2766875 "SO_RCVBUF"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1002"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set a hint the size of the underlying buffers used by the
platform for incoming network I/O. When used in set, this is a
suggestion to the kernel from the application about the size of
buffers to use for the data to be received over the
socket. When used in get, this must return the size of the
buffer actually used by the platform when receiving in data on
this socket.

Valid for all sockets: SocketImpl, DatagramSocketImpl

@see Socket#setReceiveBufferSize
@see Socket#getReceiveBufferSize
@see DatagramSocket#setReceiveBufferSize
@see DatagramSocket#getReceiveBufferSize
"
      end

      attribute 2767003 "SO_KEEPALIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x0008"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When the keepalive option is set for a TCP socket and no data
has been exchanged across the socket in either direction for 
2 hours (NOTE: the actual value is implementation dependent),
TCP automatically sends a keepalive probe to the peer. This probe is a 
TCP segment to which the peer must respond. 
One of three responses is expected:
1. The peer responds with the expected ACK. The application is not 
   notified (since everything is OK). TCP will send another probe 
   following another 2 hours of inactivity.
2. The peer responds with an RST, which tells the local TCP that
   the peer host has crashed and rebooted. The socket is closed.
3. There is no response from the peer. The socket is closed. 

The purpose of this option is to detect if the peer host crashes. 

Valid only for TCP socket: SocketImpl

@see Socket#setKeepAlive
@see Socket#getKeepAlive
"
      end

      attribute 2767131 "SO_OOBINLINE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0x1003"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When the OOBINLINE option is set, any TCP urgent data received on
the socket will be received through the socket input stream.
When the option is disabled (which is the default) urgent data
is silently discarded.

@see Socket#setOOBInline
@see Socket#getOOBInline
"
      end
    end

    class 928027 "NetworkInterface"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a Network Interface made up of a name, 
and a list of IP addresses assigned to this interface.
It is used to identify the local interface on which a multicast group
is joined. 

Interfaces are normally known by names such as \"le0\".

@since 1.4"
      attribute 2779291 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2779419 "displayName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2779547 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1814427 // addrs (<unidirectional association>)
	relation 1814427 --->
	  a role_name "addrs" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1814427 // addrs (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      extra_member 163611 "initialization"
	
	cpp "" ""
	java "  static {
	AccessController.doPrivileged(new LoadLibraryAction(\"net\"));
	init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7221403 "NetworkInterface"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an NetworkInterface object with index set to 0 and name to null.
Setting such an interface on a MulticastSocket will cause the 
kernel to choose one interface for sending multicast packets.
 "
      end

      operation 7221531 "NetworkInterface"
	package explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "index" explicit_type "int"
	  param inout name "addrs" type class_ref 530715 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7221659 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the name of this network interface.

@return the name of this network interface"
      end

      operation 7221787 "getInetAddresses"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InetAddress> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to return an Enumeration with all or a
subset of the InetAddresses bound to this network interface.
<p>
If there is a security manager, its <code>checkConnect</code> 
method is called for each InetAddress. Only InetAddresses where
the <code>checkConnect</code> doesn't throw a SecurityException
will be returned in the Enumeration.
@return an Enumeration object with all or a subset of the InetAddresses
bound to this network interface"
      end

      operation 7221915 "getIndex"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the index of this network interface.

@return the index of this network interface"
      end

      operation 7222043 "getDisplayName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the display name of this network interface.
A display name is a human readable String describing the network
device.

@return the display name of this network interface, 
        or null if no display name is available."
      end

      operation 7222171 "getByName"
	class_operation public return_type class_ref 928027 // NetworkInterface
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the network interface with the specified name.

@param   name 
		The name of the network interface.

@return  A <tt>NetworkInterface</tt> with the specified name,
         or <tt>null</tt> if there is no network interface
		with the specified name.

@throws	SocketException  
	        If an I/O error occurs.

@throws  NullPointerException
		If the specified name is <tt>null</tt>."
      end

      operation 7222299 "getByIndex"
	class_operation package return_type class_ref 928027 // NetworkInterface
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a network interface given its index.

@param index an integer, the index of the interface
@return the NetworkInterface obtained from its index
@exception  SocketException  if an I/O error occurs."
      end

      operation 7222427 "getByInetAddress"
	class_operation public return_type class_ref 928027 // NetworkInterface
	nparams 1
	  param inout name "addr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to search for a network interface that
has the specified Internet Protocol (IP) address bound to
it.
<p>
If the specified IP address is bound to multiple network 
interfaces it is not defined which network interface is
returned.

@param   addr
		The <tt>InetAddress</tt> to search with.

@return  A <tt>NetworkInterface</tt> 
         or <tt>null</tt> if there is no network interface
         with the specified IP address.

@throws  SocketException  
         If an I/O error occurs. 

@throws  NullPointerException
         If the specified address is <tt>null</tt>."
      end

      operation 7222555 "getNetworkInterfaces"
	class_operation public return_type class_ref 144411 // Enumeration
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<NetworkInterface> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the interfaces on this machine. Returns null if no
network interfaces could be found on this machine.

NOTE: can use getNetworkInterfaces()+getInetAddresses() 
      to obtain all IP addresses for this node

@return an Enumeration of NetworkInterfaces found on this machine
@exception  SocketException  if an I/O error occurs."
      end

      operation 7222683 "getAll"
	class_operation private return_type class_ref 928027 // NetworkInterface
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7222811 "getByName0"
	class_operation private return_type class_ref 928027 // NetworkInterface
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7222939 "getByInetAddress0"
	class_operation private return_type class_ref 928027 // NetworkInterface
	nparams 1
	  param inout name "addr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7223067 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same NetworkInterface
as this object.
<p>
Two instances of <code>NetworkInterface</code> represent the same 
NetworkInterface if both name and addrs are the same for both.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see     java.net.InetAddress#getAddress()"
      end

      operation 7223195 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7223323 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7223451 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 928155 "FileNameMap"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A simple interface which provides a mechanism to map
between a file name and a MIME type string.

@version 	1.14, 12/19/03
@author  Steven B. Byrne
@since   JDK1.1"
      operation 7189275 "getContentTypeFor"
	public explicit_return_type "String"
	nparams 1
	  param in name "fileName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the MIME type for the specified file name.
@param fileName the specified file name
@return a <code>String</code> indicating the MIME
type for the specified file name."
      end
    end

    class 928283 "HttpRetryException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that a HTTP request needs to be retried
but cannot be retried automatically, due to streaming mode
being enabled.

@author  Michael McMahon
@version 1.1, 04/20/04
@since   1.5"
      classrelation 1810075 // <generalisation>
	relation 1810075 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1810075 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      attribute 2767387 "responseCode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2767515 "location"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7189403 "HttpRetryException"
	public explicit_return_type ""
	nparams 2
	  param in name "detail" explicit_type "String"
	  param in name "code" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>HttpRetryException</code> from the 
specified response code and exception detail message

@param   detail   the detail message.
@param   code   the HTTP response code from server."
      end

      operation 7189531 "HttpRetryException"
	public explicit_return_type ""
	nparams 3
	  param in name "detail" explicit_type "String"
	  param in name "code" explicit_type "int"
	  param in name "location" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>HttpRetryException</code> with detail message
responseCode and the contents of the Location response header field.

@param   detail   the detail message.
@param   code   the HTTP response code from server.
@param   location   the URL to be redirected to"
      end

      operation 7189659 "responseCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the http response code

@return  The http response code."
      end

      operation 7189787 "getReason"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string explaining why the http request could
not be retried.

@return  The reason string"
      end

      operation 7189915 "getLocation"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the Location header field if the
error resulted from redirection.

@return The location string"
      end
    end

    class 928411 "HttpURLConnection"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A URLConnection with support for HTTP-specific features. See
<A HREF=\"http://www.w3.org/pub/WWW/Protocols/\"> the spec </A> for
details.
<p>

Each HttpURLConnection instance is used to make a single request  
but the underlying network connection to the HTTP server may be
transparently shared by other instances. Calling the close() methods
on the InputStream or OutputStream of an HttpURLConnection
after a request may free network resources associated with this
instance but has no effect on any shared persistent connection.
Calling the disconnect() method may close the underlying socket
if a persistent connection is otherwise idle at that time.

@see     java.net.HttpURLConnection#disconnect()
@since JDK1.1"
      classrelation 1810971 // <generalisation>
	relation 1810971 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1810971 // <generalisation>
	  b parent class_ref 730011 // URLConnection
      end

      attribute 2769307 "method"
	protected explicit_type "String"
	init_value "=  \"GET\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " instance variables 

The HTTP method (GET,POST,PUT,etc.). 
"
      end

      attribute 2769435 "chunkLength"
	protected explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The chunk-length when using chunked encoding streaming mode for output.
A value of <code>-1</code> means chunked encoding is disabled for output.
"
      end

      attribute 2769563 "fixedContentLength"
	protected explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The fixed content-length when using fixed-length streaming mode.
A value of <code>-1</code> means fixed-length streaming mode is disabled
for output.
"
      end

      operation 7197595 "getHeaderFieldKey"
	public explicit_return_type "String"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key for the <code>n</code><sup>th</sup> header field.
Some implementations may treat the <code>0</code><sup>th</sup> 
header field as special, i.e. as the status line returned by the HTTP
server. In this case, {@link #getHeaderField(int) getHeaderField(0)} returns the status 
line, but <code>getHeaderFieldKey(0)</code> returns null.

@param   n   an index, where n >=0.
@return  the key for the <code>n</code><sup>th</sup> header field,
         or <code>null</code> if the key does not exist."
      end

      operation 7197723 "setFixedLengthStreamingMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "contentLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to enable streaming of a HTTP request body
without internal buffering, when the content length is known in
advance. 
<p>
An exception will be thrown if the application
attempts to write more data than the indicated
content-length, or if the application closes the OutputStream
before writing the indicated amount.
<p>
When output streaming is enabled, authentication
and redirection cannot be handled automatically.
A HttpRetryException will be thrown when reading
the response if authentication or redirection are required.
This exception can be queried for the details of the error.
<p>
This method must be called before the URLConnection is connected.

@param   contentLength The number of bytes which will be written
		to the OutputStream.

@throws  IllegalStateException if URLConnection is already connected 
		or if a different streaming mode is already enabled.

@throws  IllegalArgumentException if a content length less than 
		zero is specified.

@see     #setChunkedStreamingMode(int)"
      end

      attribute 2769691 "DEFAULT_CHUNK_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4096"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default chunk size (including chunk header) if not specified;
we want to keep this in sync with the one defined in
sun.net.www.http.ChunkedOutputStream
"
      end

      operation 7197851 "setChunkedStreamingMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "chunklen" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used to enable streaming of a HTTP request body
without internal buffering, when the content length is <b>not</b>
known in advance. In this mode, chunked transfer encoding 
is used to send the request body. Note, not all HTTP servers
support this mode.
<p>
When output streaming is enabled, authentication
and redirection cannot be handled automatically.
A HttpRetryException will be thrown when reading
the response if authentication or redirection are required.
This exception can be queried for the details of the error.
<p>
This method must be called before the URLConnection is connected.

@param   chunklen The number of bytes to write in each chunk.
		If chunklen is less than or equal to zero, a default 
		value will be used.

@throws  IllegalStateException if URLConnection is already connected 
		or if a different streaming mode is already enabled.

@see     #setFixedLengthStreamingMode(int)"
      end

      operation 7197979 "getHeaderField"
	public explicit_return_type "String"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for the <code>n</code><sup>th</sup> header field. 
Some implementations may treat the <code>0</code><sup>th</sup> 
header field as special, i.e. as the status line returned by the HTTP
server. 
<p>
This method can be used in conjunction with the 
{@link #getHeaderFieldKey getHeaderFieldKey} method to iterate through all 
the headers in the message. 

@param   n   an index, where n>=0.
@return  the value of the <code>n</code><sup>th</sup> header field,
		or <code>null</code> if the value does not exist.
@see     java.net.HttpURLConnection#getHeaderFieldKey(int)"
      end

      attribute 2769819 "responseCode"
	protected explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An <code>int</code> representing the three digit HTTP Status-Code.
<ul>
<li> 1xx: Informational
<li> 2xx: Success
<li> 3xx: Redirection
<li> 4xx: Client Error
<li> 5xx: Server Error
</ul>
"
      end

      attribute 2769947 "responseMessage"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The HTTP response message.
"
      end

      attribute 2770075 "followRedirects"
	class_attribute private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " static variables 
 do we automatically follow redirects? The default is true. "
      end

      attribute 2770203 "instanceFollowRedirects"
	protected explicit_type "boolean"
	init_value "=  followRedirects"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If <code>true</code>, the protocol will automatically follow redirects.
If <code>false</code>, the protocol will not automatically follow 
redirects.
<p>
This field is set by the <code>setInstanceFollowRedirects</code> 
method. Its value is returned by the <code>getInstanceFollowRedirects</code> 
method.
<p>
Its default value is based on the value of the static followRedirects 
at HttpURLConnection construction time.

@see     java.net.HttpURLConnection#setInstanceFollowRedirects(boolean)
@see     java.net.HttpURLConnection#getInstanceFollowRedirects()
@see     java.net.HttpURLConnection#setFollowRedirects(boolean)
"
      end

      attribute 2770331 "methods"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  {
	\"GET\", \"POST\", \"HEAD\", \"OPTIONS\", \"PUT\", \"DELETE\", \"TRACE\"
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " valid HTTP methods "
      end

      operation 7198107 "HttpURLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "u" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for the HttpURLConnection.
@param u the URL"
      end

      operation 7198235 "setFollowRedirects"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "set" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether HTTP redirects  (requests with response code 3xx) should 
be automatically followed by this class.  True by default.  Applets
cannot change this variable.
<p>
If there is a security manager, this method first calls
the security manager's <code>checkSetFactory</code> method 
to ensure the operation is allowed. 
This could result in a SecurityException.

@param set a <code>boolean</code> indicating whether or not
to follow HTTP redirects.
@exception  SecurityException  if a security manager exists and its  
            <code>checkSetFactory</code> method doesn't 
            allow the operation.
@see        SecurityManager#checkSetFactory
@see #getFollowRedirects()"
      end

      operation 7198363 "getFollowRedirects"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>boolean</code> indicating
whether or not HTTP redirects (3xx) should
be automatically followed.

@return <code>true</code> if HTTP redirects should
be automatically followed, <tt>false</tt> if not.
@see #setFollowRedirects(boolean)"
      end

      operation 7198491 "setInstanceFollowRedirects"
	public explicit_return_type "void"
	nparams 1
	  param inout name "followRedirects" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether HTTP redirects (requests with response code 3xx) should
be automatically followed by this <code>HttpURLConnection</code> 
instance.
<p>
The default value comes from followRedirects, which defaults to
true.

@param followRedirects a <code>boolean</code> indicating 
whether or not to follow HTTP redirects.

@see    java.net.HttpURLConnection#instanceFollowRedirects
@see #getInstanceFollowRedirects"
      end

      operation 7198619 "getInstanceFollowRedirects"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this <code>HttpURLConnection</code>'s
<code>instanceFollowRedirects</code> field.

@return  the value of this <code>HttpURLConnection</code>'s
         <code>instanceFollowRedirects</code> field.
@see     java.net.HttpURLConnection#instanceFollowRedirects
@see #setInstanceFollowRedirects(boolean)"
      end

      operation 7198747 "setRequestMethod"
	public explicit_return_type "void"
	nparams 1
	  param in name "method" explicit_type "String"
	nexceptions 1
	  exception class_ref 928795 // ProtocolException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the method for the URL request, one of:
<UL>
 <LI>GET
 <LI>POST
 <LI>HEAD
 <LI>OPTIONS
 <LI>PUT
 <LI>DELETE
 <LI>TRACE
</UL> are legal, subject to protocol restrictions.  The default
method is GET.

@param method the HTTP method
@exception ProtocolException if the method cannot be reset or if
             the requested method isn't valid for HTTP.
@see #getRequestMethod()"
      end

      operation 7198875 "getRequestMethod"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the request method.
@return the HTTP request method
@see #setRequestMethod(java.lang.String)"
      end

      operation 7199003 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the status code from an HTTP response message.
For example, in the case of the following status lines:
<PRE>
HTTP/1.0 200 OK
HTTP/1.0 401 Unauthorized
</PRE>
It will return 200 and 401 respectively.
Returns -1 if no code can be discerned
from the response (i.e., the response is not valid HTTP).
@throws IOException if an error occurred connecting to the server.
@return the HTTP Status-Code, or -1"
      end

      operation 7199131 "getResponseMessage"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the HTTP response message, if any, returned along with the
response code from a server.  From responses like:
<PRE>
HTTP/1.0 200 OK
HTTP/1.0 404 Not Found
</PRE>
Extracts the Strings \"OK\" and \"Not Found\" respectively.
Returns null if none could be discerned from the responses 
(the result was not valid HTTP).
@throws IOException if an error occurred connecting to the server.
@return the HTTP response message, or <code>null</code>"
      end

      operation 7199259 "getHeaderFieldDate"
	public explicit_return_type "long"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "Default" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7199387 "disconnect"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that other requests to the server
are unlikely in the near future. Calling disconnect() 
should not imply that this HttpURLConnection 
instance can be reused for other requests."
      end

      operation 7199515 "usingProxy"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the connection is going through a proxy.
@return a boolean indicating if the connection is
using a proxy."
      end

      operation 7199643 "getPermission"
	public return_type class_ref 285211 // Permission
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7199771 "getErrorStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the error stream if the connection failed
but the server sent useful data nonetheless. The
typical example is when an HTTP server responds
with a 404, which will cause a FileNotFoundException 
to be thrown in connect, but the server sent an HTML
help page with suggestions as to what to do.

<p>This method will not cause a connection to be initiated.  If
the connection was not connected, or if the server did not have
an error while connecting or if the server had an error but
no error data was sent, this method will return null. This is
the default.

@return an error stream if any, null if there have been no
errors, the connection is not connected or the server sent no
useful data."
      end

      attribute 2770459 "HTTP_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The response codes for HTTP, as of version 1.1.

 REMIND: do we want all these??
 Others not here that we do want??
 2XX: generally \"OK\" 

HTTP Status-Code 200: OK.
"
      end

      attribute 2770587 "HTTP_CREATED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  201"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 201: Created.
"
      end

      attribute 2770715 "HTTP_ACCEPTED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  202"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 202: Accepted.
"
      end

      attribute 2770843 "HTTP_NOT_AUTHORITATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  203"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 203: Non-Authoritative Information.
"
      end

      attribute 2770971 "HTTP_NO_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  204"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 204: No Content.
"
      end

      attribute 2771099 "HTTP_RESET"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  205"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 205: Reset Content.
"
      end

      attribute 2771227 "HTTP_PARTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  206"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 206: Partial Content.
"
      end

      attribute 2771355 "HTTP_MULT_CHOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  300"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 3XX: relocation/redirect 

HTTP Status-Code 300: Multiple Choices.
"
      end

      attribute 2771483 "HTTP_MOVED_PERM"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  301"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 301: Moved Permanently.
"
      end

      attribute 2771611 "HTTP_MOVED_TEMP"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  302"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 302: Temporary Redirect.
"
      end

      attribute 2771739 "HTTP_SEE_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  303"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 303: See Other.
"
      end

      attribute 2771867 "HTTP_NOT_MODIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  304"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 304: Not Modified.
"
      end

      attribute 2771995 "HTTP_USE_PROXY"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  305"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 305: Use Proxy.
"
      end

      attribute 2772123 "HTTP_BAD_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4XX: client error 

HTTP Status-Code 400: Bad Request.
"
      end

      attribute 2772251 "HTTP_UNAUTHORIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  401"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 401: Unauthorized.
"
      end

      attribute 2772379 "HTTP_PAYMENT_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  402"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 402: Payment Required.
"
      end

      attribute 2772507 "HTTP_FORBIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  403"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 403: Forbidden.
"
      end

      attribute 2772635 "HTTP_NOT_FOUND"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  404"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 404: Not Found.
"
      end

      attribute 2772763 "HTTP_BAD_METHOD"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  405"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 405: Method Not Allowed.
"
      end

      attribute 2772891 "HTTP_NOT_ACCEPTABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  406"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 406: Not Acceptable.
"
      end

      attribute 2773019 "HTTP_PROXY_AUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  407"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 407: Proxy Authentication Required.
"
      end

      attribute 2773147 "HTTP_CLIENT_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  408"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 408: Request Time-Out.
"
      end

      attribute 2773275 "HTTP_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  409"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 409: Conflict.
"
      end

      attribute 2773403 "HTTP_GONE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  410"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 410: Gone.
"
      end

      attribute 2773531 "HTTP_LENGTH_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  411"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 411: Length Required.
"
      end

      attribute 2773659 "HTTP_PRECON_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  412"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 412: Precondition Failed.
"
      end

      attribute 2773787 "HTTP_ENTITY_TOO_LARGE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  413"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 413: Request Entity Too Large.
"
      end

      attribute 2773915 "HTTP_REQ_TOO_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  414"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 414: Request-URI Too Large.
"
      end

      attribute 2774043 "HTTP_UNSUPPORTED_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  415"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 415: Unsupported Media Type.
"
      end

      attribute 2774171 "HTTP_SERVER_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 5XX: server error 

HTTP Status-Code 500: Internal Server Error. 
@deprecated   it is misplaced and shouldn't have existed.
"
      end

      attribute 2774299 "HTTP_INTERNAL_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 500: Internal Server Error. 
"
      end

      attribute 2774427 "HTTP_NOT_IMPLEMENTED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  501"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 501: Not Implemented.
"
      end

      attribute 2774555 "HTTP_BAD_GATEWAY"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  502"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 502: Bad Gateway.
"
      end

      attribute 2774683 "HTTP_UNAVAILABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  503"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 503: Service Unavailable.
"
      end

      attribute 2774811 "HTTP_GATEWAY_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  504"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 504: Gateway Timeout.
"
      end

      attribute 2774939 "HTTP_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  505"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "HTTP Status-Code 505: HTTP Version Not Supported.
"
      end
    end

    class 928539 "UnknownServiceException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that an unknown service exception has 
occurred. Either the MIME type returned by a URL connection does 
not make sense, or the application is attempting to write to a 
read-only URL connection. 

@author  unascribed
@version 1.14, 12/19/03
@since   JDK1.0"
      classrelation 1820699 // <generalisation>
	relation 1820699 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1820699 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 7261723 "UnknownServiceException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>UnknownServiceException</code> with no 
detail message. "
      end

      operation 7261851 "UnknownServiceException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>UnknownServiceException</code> with the 
specified detail message. 

@param   msg   the detail message."
      end
    end

    class 928667 "UnknownContentHandler"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1810843 // <generalisation>
	relation 1810843 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1810843 // <generalisation>
	  b parent class_ref 927003 // ContentHandler
      end

      operation 7197467 "getContent"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "uc" type class_ref 730011 // URLConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 928795 "ProtocolException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown to indicate that there is an error in the underlying 
protocol, such as a TCP error. 

@author  Chris Warth
@version 1.16, 12/19/03
@since   JDK1.0"
      classrelation 1816603 // <generalisation>
	relation 1816603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1816603 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      operation 7237659 "ProtocolException"
	public explicit_return_type ""
	nparams 1
	  param in name "host" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>ProtocolException</code> with the 
specified detail message. 

@param   host   the detail message."
      end

      operation 7237787 "ProtocolException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>ProtocolException</code> with no detail message."
      end
    end

    class 928923 "Inet4Address"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents an Internet Protocol version 4 (IPv4) address.
Defined by <a href=\"http://www.ietf.org/rfc/rfc790.txt\">
<i>RFC&nbsp;790: Assigned Numbers</i></a>,
<a href=\"http://www.ietf.org/rfc/rfc1918.txt\">
<i>RFC&nbsp;1918: Address Allocation for Private Internets</i></a>,
and <a href=\"http://www.ietf.org/rfc/rfc2365.txt\"><i>RFC&nbsp;2365:
Administratively Scoped IP Multicast</i></a>

<h4> <A NAME=\"format\">Textual representation of IP addresses</a> </h4>

Textual representation of IPv4 address used as input to methods
takes one of the following forms:

<blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
<tr><td><tt>d.d.d.d</tt></td></tr>
<tr><td><tt>d.d.d</tt></td></tr>
<tr><td><tt>d.d</tt></td></tr>
<tr><td><tt>d</tt></td></tr>
</table></blockquote>

<p> When four parts are specified, each is interpreted as a byte of
data and assigned, from left to right, to the four bytes of an IPv4
address.

<p> When a three part address is specified, the last part is
interpreted as a 16-bit quantity and placed in the right most two
bytes of the network address. This makes the three part address
format convenient for specifying Class B net- work addresses as
128.net.host.

<p> When a two part address is supplied, the last part is
interpreted as a 24-bit quantity and placed in the right most three
bytes of the network address. This makes the two part address
format convenient for specifying Class A network addresses as
net.host.

<p> When only one part is given, the value is stored directly in
the network address without any byte rearrangement.

<p> For methods that return a textual representation as output
value, the first form, i.e. a dotted-quad string, is used.

<h4> The Scope of a Multicast Address </h4>

Historically the IPv4 TTL field in the IP header has doubled as a
multicast scope field: a TTL of 0 means node-local, 1 means
link-local, up through 32 means site-local, up through 64 means
region-local, up through 128 means continent-local, and up through
255 are global. However, the administrative scoping is preferred.
Please refer to <a href=\"http://www.ietf.org/rfc/rfc2365.txt\">
<i>RFC&nbsp;2365: Administratively Scoped IP Multicast</i></a>"
      classrelation 1811995 // <generalisation>
	relation 1811995 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1811995 // <generalisation>
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2776731 "INADDRSZ"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2776859 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  3286316764910316507L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " use serialVersionUID from InetAddress, but Inet4Address instance
 is always replaced by an InetAddress instance before being
 serialized "
      end

      extra_member 163355 "initialization"
	
	cpp "" ""
	java "  static {
        init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7206171 "Inet4Address"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7206299 "Inet4Address"
	package explicit_return_type ""
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7206427 "Inet4Address"
	package explicit_return_type ""
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param in name "address" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7206555 "writeReplace"
	private explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 289307 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the object to be serialized with an InetAddress object.

@return the alternate object to be serialized.

@throws ObjectStreamException if a new object replacing this
object could not be created"
      end

      operation 7206683 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an
IP multicast address. IP multicast address is a Class D
address i.e first four bits of the address are 1110.
@return a <code>boolean</code> indicating if the InetAddress is 
an IP multicast address
@since   JDK1.1"
      end

      operation 7206811 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress in a wildcard address.
@return a <code>boolean</code> indicating if the Inetaddress is
        a wildcard address.
@since 1.4"
      end

      attribute 2776987 "loopback"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2130706433"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Utility routine to check if the InetAddress is a loopback address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a loopback address; or false otherwise.
@since 1.4

 127.0.0.1 "
      end

      operation 7206939 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7207067 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an link local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a link local address; or false if address is not a link local unicast address.
@since 1.4"
      end

      operation 7207195 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is a site local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a site local address; or false if address is not a site local unicast address.
@since 1.4"
      end

      operation 7207323 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has global scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of global scope, false if it is not 
        of global scope or it is not a multicast address
@since 1.4"
      end

      operation 7207451 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has node scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of node-local scope, false if it is not 
        of node-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7207579 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has link scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of link-local scope, false if it is not 
        of link-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7207707 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has site scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of site-local scope, false if it is not 
        of site-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7207835 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has organization scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of organization-local scope, 
        false if it is not of organization-local scope 
        or it is not a multicast address
@since 1.4"
      end

      operation 7207963 "getAddress"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw IP address of this <code>InetAddress</code>
object. The result is in network byte order: the highest order
byte of the address is in <code>getAddress()[0]</code>.

@return  the raw IP address of this object."
      end

      operation 7208091 "getHostAddress"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address string in textual presentation form.

@return  the raw IP address in a string format.
@since   JDK1.0.2"
      end

      operation 7208219 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this IP address.

@return  a hash code value for this IP address."
      end

      operation 7208347 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same IP address as
this object.
<p>
Two instances of <code>InetAddress</code> represent the same IP
address if the length of the byte arrays returned by
<code>getAddress</code> is the same for both, and each of the
array components is the same for the byte arrays.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see     java.net.InetAddress#getAddress()"
      end

      operation 7208475 "numericToTextFormat"
	class_operation package explicit_return_type "String"
	nparams 1
	  param in name "src" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utilities
 
Converts IPv4 binary address into a string suitable for presentation.

@param src a byte array representing an IPv4 numeric address
@return a String representing the IPv4 address in 
        textual representation format
@since 1.4"
      end

      operation 7208603 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end
    end

    class 929179 "InetAddressImpl"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Package private interface to \"implementation\" used by 
{@link InetAddress}.
<p> 
See {@link java.net.Inet4AddressImp} and 
{@link java.net.Inet6AddressImp}.

@since 1.4"
      operation 7208731 "getLocalHostName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7208859 "lookupAllHostAddr"
	public explicit_return_type "byte"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7208987 "getHostByAddr"
	public explicit_return_type "String"
	nparams 1
	  param in name "addr" explicit_type "byte"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209115 "anyLocalAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209243 "loopbackAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209371 "isReachable"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "timeout" explicit_type "int"
	  param inout name "netif" type class_ref 928027 // NetworkInterface
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 929435 "InetAddressImplFactory"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple factory to create the impl"
      operation 7205915 "create"
	class_operation package return_type class_ref 929179 // InetAddressImpl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7206043 "isIPv6Supported"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 929563 "Inet4AddressImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Package private implementation of InetAddressImpl for IPv4.

@since 1.4"
      classrelation 1812123 // <realization>
	relation 1812123 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1812123 // <realization>
	  b parent class_ref 929179 // InetAddressImpl
      end

      operation 7209499 "getLocalHostName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209627 "lookupAllHostAddr"
	public explicit_return_type "byte"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[][] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209755 "getHostByAddr"
	public explicit_return_type "String"
	nparams 1
	  param in name "addr" explicit_type "byte"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7209883 "isReachable0"
	private explicit_return_type "boolean"
	nparams 4
	  param in name "addr" explicit_type "byte"
	  param in name "timeout" explicit_type "int"
	  param in name "ifaddr" explicit_type "byte"
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210011 "anyLocalAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210139 "loopbackAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210267 "isReachable"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "timeout" explicit_type "int"
	  param inout name "netif" type class_ref 928027 // NetworkInterface
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1812251 // anyLocalAddress (<unidirectional association>)
	relation 1812251 --->
	  a role_name "anyLocalAddress" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812251 // anyLocalAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      classrelation 1812379 // loopbackAddress (<unidirectional association>)
	relation 1812379 --->
	  a role_name "loopbackAddress" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812379 // loopbackAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end
    end

    class 929691 "Inet6Address"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents an Internet Protocol version 6 (IPv6) address.
Defined by <a href=\"http://www.ietf.org/rfc/rfc2373.txt\">
<i>RFC&nbsp;2373: IP Version 6 Addressing Architecture</i></a>.

<h4> <A NAME=\"format\">Textual representation of IP addresses</a> </h4>

Textual representation of IPv6 address used as input to methods
takes one of the following forms:

<ol>
  <li><p> <A NAME=\"lform\">The preferred form</a> is x:x:x:x:x:x:x:x,
  where the 'x's are
  the hexadecimal values of the eight 16-bit pieces of the
  address. This is the full form.  For example,

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>1080:0:0:0:8:800:200C:417A</tt><td></tr>
  </table></blockquote>

  <p> Note that it is not necessary to write the leading zeros in
  an individual field. However, there must be at least one numeral
  in every field, except as described below.</li>

  <li><p> Due to some methods of allocating certain styles of IPv6
  addresses, it will be common for addresses to contain long
  strings of zero bits. In order to make writing addresses
  containing zero bits easier, a special syntax is available to
  compress the zeros. The use of \"::\" indicates multiple groups
  of 16-bits of zeros. The \"::\" can only appear once in an address.
  The \"::\" can also be used to compress the leading and/or trailing
  zeros in an address. For example,

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>1080::8:800:200C:417A</tt><td></tr>
  </table></blockquote>

  <li><p> An alternative form that is sometimes more convenient
  when dealing with a mixed environment of IPv4 and IPv6 nodes is
  x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values
  of the six high-order 16-bit pieces of the address, and the 'd's
  are the decimal values of the four low-order 8-bit pieces of the
  standard IPv4 representation address, for example,

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>::FFFF:129.144.52.38</tt><td></tr>
  <tr><td><tt>::129.144.52.38</tt><td></tr>
  </table></blockquote>

  <p> where \"::FFFF:d.d.d.d\" and \"::d.d.d.d\" are, respectively, the
  general forms of an IPv4-mapped IPv6 address and an
  IPv4-compatible IPv6 address. Note that the IPv4 portion must be
  in the \"d.d.d.d\" form. The following forms are invalid:

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>::FFFF:d.d.d</tt><td></tr>
  <tr><td><tt>::FFFF:d.d</tt><td></tr>
  <tr><td><tt>::d.d.d</tt><td></tr>
  <tr><td><tt>::d.d</tt><td></tr>
  </table></blockquote>

  <p> The following form:

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>::FFFF:d</tt><td></tr>
  </table></blockquote>

  <p> is valid, however it is an unconventional representation of
  the IPv4-compatible IPv6 address,

  <blockquote><table cellpadding=0 cellspacing=0 summary=\"layout\">
  <tr><td><tt>::255.255.0.d</tt><td></tr>
  </table></blockquote>

  <p> while \"::d\" corresponds to the general IPv6 address
  \"0:0:0:0:0:0:0:d\".</li>
</ol>

<p> For methods that return a textual representation as output
value, the full form is used. Inet6Address will return the full
form because it is unambiguous when used in combination with other
textual data.

<h4> Special IPv6 address </h4>

<blockquote>
<table cellspacing=2 summary=\"Description of IPv4-mapped address\"> <tr><th valign=top><i>IPv4-mapped address</i></th>
        <td>Of the form::ffff:w.x.y.z, this IPv6 address is used to
        represent an IPv4 address. It allows the native program to
        use the same address data structure and also the same
        socket when communicating with both IPv4 and IPv6 nodes.

        <p>In InetAddress and Inet6Address, it is used for internal
        representation; it has no functional role. Java will never
        return an IPv4-mapped address.  These classes can take an
        IPv4-mapped address as input, both in byte array and text
        representation. However, it will be converted into an IPv4
        address.</td></tr>
</table></blockquote>
<p>
<h4> <A NAME=\"scoped\">Textual representation of IPv6 scoped addresses</a> </h4>
<p>
The textual representation of IPv6 addresses as described above can be extended
to specify IPv6 scoped addresses. This extension to the basic addressing architecture
is described in [draft-ietf-ipngwg-scoping-arch-04.txt].
<p>
Because link-local and site-local addresses are non-global, it is possible that different hosts
may have the same destination address and may be reachable through different interfaces on the
same originating system. In this case, the originating system is said to be connected
to multiple zones of the same scope. In order to disambiguate which is the intended destination
zone, it is possible to append a zone identifier (or <i>scope_id</i>) to an IPv6 address.
<p>
The general format for specifying the <i>scope_id</i> is the following:
<p><blockquote><i>IPv6-address</i>%<i>scope_id</i></blockquote>
<p> The IPv6-address is a literal IPv6 address as described above.
The <i>scope_id</i> refers to an interface on the local system, and it can be specified
in two ways.
<p><ol><li><i>As a numeric identifier.</i> This must be a positive integer that identifies the
particular interface and scope as understood by the system. Usually, the numeric
values can be determined through administration tools on the system. Each interface may
have multiple values, one for each scope. If the scope is unspecified, then the default value
used is zero.</li><p>
<li><i>As a string.</i> This must be the exact string that is returned by 
{@link java.net.NetworkInterface#getName()} for the particular interface in question. 
When an Inet6Address is created in this way, the numeric scope-id is determined at the time
the object is created by querying the relevant NetworkInterface.</li>
</ol><p>
Note also, that the numeric <i>scope_id</i> can be retrieved from Inet6Address instances returned from the
NetworkInterface class. This can be used to find out the current scope ids configured on the system."
      classrelation 1812507 // <generalisation>
	relation 1812507 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1812507 // <generalisation>
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2777115 "INADDRSZ"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2777243 "local_cached_scope_id"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "cached scope_id - for link-local address use only.
"
      end

      attribute 2777371 "remote_cached_scope_id"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2777499 "ipaddress"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Holds a 128-bit (16 bytes) IPv6 address.

@serial
"
      end

      attribute 2777627 "scope_id"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "scope_id. The scope specified when the object is created. If the object is created
with an interface name, then the scope_id is not determined until the time it is needed.
"
      end

      attribute 2777755 "scope_id_set"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This will be set to true when the scope_id field contains a valid
integer scope_id.
"
      end

      classrelation 1812635 // scope_ifname (<unidirectional association>)
	relation 1812635 --->
	  a role_name "scope_ifname" init_value "=  null" private
	    comment "
scoped interface. scope_id is derived from this as the scope_id of the first 
address whose scope is the same as this address for the named interface. 

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812635 // scope_ifname (<unidirectional association>)
	  b parent class_ref 928027 // NetworkInterface
      end

      attribute 2777883 "scope_ifname_set"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "set if the object is constructed with a scoped interface instead of a
numeric scope id.
"
      end

      attribute 2778011 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6880410070516793377L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 163483 "initialization"
	
	cpp "" ""
	java "  static {
        init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7210395 "Inet6Address"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210523 "Inet6Address"
	package explicit_return_type ""
	nparams 3
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param in name "scope_id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checking of value for scope_id should be done by caller 
scope_id must be >= 0, or -1 to indicate not being set "
      end

      operation 7210651 "Inet6Address"
	package explicit_return_type ""
	nparams 2
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210779 "Inet6Address"
	package explicit_return_type ""
	nparams 3
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param inout name "nif" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7210907 "Inet6Address"
	package explicit_return_type ""
	nparams 3
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param in name "ifname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7211035 "getByAddress"
	class_operation public return_type class_ref 929691 // Inet6Address
	nparams 3
	  param in name "host" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param inout name "nif" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an Inet6Address in the exact manner of {@link InetAddress#getByAddress(String,byte[])}
except that the IPv6 scope_id is set to the value corresponding to the given interface 
for the address type specified in <code>addr</code>. 
The call will fail with an UnknownHostException if the given interface does not have a numeric
scope_id assigned for the given address type (eg. link-local or site-local).
See <a href=\"Inet6Address.html#scoped\">here</a> for a description of IPv6
scoped addresses.

@param host the specified host
@param addr the raw IP address in network byte order
@param nif an interface this address must be associated with.
@return  an Inet6Address object created from the raw IP address.
@exception  UnknownHostException  if IP address is of illegal length, or if the interface
		does not have a numeric scope_id assigned for the given address type.

@since 1.5"
      end

      operation 7211163 "getByAddress"
	class_operation public return_type class_ref 929691 // Inet6Address
	nparams 3
	  param in name "host" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param in name "scope_id" explicit_type "int"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an Inet6Address in the exact manner of {@link InetAddress#getByAddress(String,byte[])}
except that the IPv6 scope_id is set to the given numeric value.
The scope_id is not checked to determine if it corresponds to any interface on the system.
See <a href=\"Inet6Address.html#scoped\">here</a> for a description of IPv6
scoped addresses.

@param host the specified host
@param addr the raw IP address in network byte order
@param scope_id the numeric scope_id for the address.
@return  an Inet6Address object created from the raw IP address.
@exception  UnknownHostException  if IP address is of illegal length.

@since 1.5"
      end

      operation 7211291 "initstr"
	private explicit_return_type "void"
	nparams 3
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param in name "ifname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7211419 "initif"
	private explicit_return_type "void"
	nparams 3
	  param in name "hostName" explicit_type "String"
	  param in name "addr" explicit_type "byte"
	  param inout name "nif" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7211547 "differentLocalAddressTypes"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 929691 // Inet6Address
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " check the two Ipv6 addresses and return false if they are both
non global address types, but not the same.
(ie. one is sitelocal and the other linklocal) 
return true otherwise."
      end

      operation 7211675 "deriveNumericScope"
	private explicit_return_type "int"
	nparams 1
	  param inout name "ifc" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7211803 "deriveNumericScope"
	private explicit_return_type "int"
	nparams 1
	  param in name "ifname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7211931 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "restore the state of this object from stream
including the scope information, only if the
scoped interface name is valid on this system"
      end

      operation 7212059 "isMulticastAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an IP multicast
address. 11111111 at the start of the address identifies the
address as being a multicast address.

@return a <code>boolean</code> indicating if the InetAddress is
an IP multicast address
@since JDK1.1"
      end

      operation 7212187 "isAnyLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress in a wildcard address.
@return a <code>boolean</code> indicating if the Inetaddress is
        a wildcard address.
@since 1.4"
      end

      operation 7212315 "isLoopbackAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is a loopback address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a loopback address; or false otherwise.
@since 1.4"
      end

      operation 7212443 "isLinkLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an link local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a link local address; or false if address is not a link local unicast address.
@since 1.4"
      end

      operation 7212571 "isSiteLocalAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is a site local address. 

@return a <code>boolean</code> indicating if the InetAddress is 
a site local address; or false if address is not a site local unicast address.
@since 1.4"
      end

      operation 7212699 "isMCGlobal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has global scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of global scope, false if it is not 
        of global scope or it is not a multicast address
@since 1.4"
      end

      operation 7212827 "isMCNodeLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has node scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of node-local scope, false if it is not 
        of node-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7212955 "isMCLinkLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has link scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of link-local scope, false if it is not 
        of link-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7213083 "isMCSiteLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has site scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of site-local scope, false if it is not 
        of site-local scope or it is not a multicast address
@since 1.4"
      end

      operation 7213211 "isMCOrgLocal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the multicast address has organization scope.

@return a <code>boolean</code> indicating if the address has 
        is a multicast address of organization-local scope, 
        false if it is not of organization-local scope 
        or it is not a multicast address
@since 1.4"
      end

      operation 7213339 "getAddress"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw IP address of this <code>InetAddress</code>
object. The result is in network byte order: the highest order
byte of the address is in <code>getAddress()[0]</code>.

@return  the raw IP address of this object."
      end

      operation 7213467 "getScopeId"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric scopeId, if this instance is associated with
an interface. If no scoped_id is set, the returned value is zero.

@return the scopeId, or zero if not set.
@since 1.5"
      end

      operation 7213595 "getScopedInterface"
	public return_type class_ref 928027 // NetworkInterface
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the scoped interface, if this instance was created with
with a scoped interface.

@return the scoped interface, or null if not set.
@since 1.5"
      end

      operation 7213723 "getHostAddress"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IP address string in textual presentation. If the instance was created 
specifying a scope identifier then the scope id is appended to the IP address preceded by 
a \"%\" (per-cent) character. This can be either a numeric value or a string, depending on which
was used to createthe instance.

@return  the raw IP address in a string format."
      end

      operation 7213851 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this IP address.

@return  a hash code value for this IP address."
      end

      operation 7213979 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same IP address as
this object.
<p>
Two instances of <code>InetAddress</code> represent the same IP
address if the length of the byte arrays returned by
<code>getAddress</code> is the same for both, and each of the
array components is the same for the byte arrays.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see     java.net.InetAddress#getAddress()"
      end

      operation 7214107 "isIPv4CompatibleAddress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility routine to check if the InetAddress is an
IPv4 compatible IPv6 address. 

@return a <code>boolean</code> indicating if the InetAddress is 
an IPv4 compatible IPv6 address; or false if address is IPv4 address.
@since 1.4"
      end

      attribute 2778139 "INT16SZ"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Utilities"
      end

      operation 7214235 "numericToTextFormat"
	class_operation package explicit_return_type "String"
	nparams 1
	  param in name "src" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert IPv6 binary address into presentation (printable) format.

@param src a byte array representing the IPv6 numeric address
@return a String representing an IPv6 address in 
        textual representation format
@since 1.4"
      end

      operation 7214363 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end

      attribute 2778267 "ifname"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Following field is only used during (de)/serialization
"
      end

      operation 7214491 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "default behavior is overridden in order to write the
scope_ifname field as a String, rather than a NetworkInterface
which is not serializable"
      end
    end

    class 929819 "Inet6AddressImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Package private implementation of InetAddressImpl for dual
IPv4/IPv6 stack.
<p>
If InetAddress.preferIPv6Address is true then anyLocalAddress(),
loopbackAddress(), and localHost() will return IPv6 addresses, 
otherwise IPv4 addresses.

@since 1.4"
      classrelation 1812763 // <realization>
	relation 1812763 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1812763 // <realization>
	  b parent class_ref 929179 // InetAddressImpl
      end

      operation 7214619 "getLocalHostName"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7214747 "lookupAllHostAddr"
	public explicit_return_type "byte"
	nparams 1
	  param in name "hostname" explicit_type "String"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[][] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7214875 "getHostByAddr"
	public explicit_return_type "String"
	nparams 1
	  param in name "addr" explicit_type "byte"
	nexceptions 1
	  exception class_ref 272667 // UnknownHostException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7215003 "isReachable0"
	private explicit_return_type "boolean"
	nparams 6
	  param in name "addr" explicit_type "byte"
	  param in name "scope" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	  param in name "inf" explicit_type "byte"
	  param in name "ttl" explicit_type "int"
	  param in name "if_scope" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7215131 "isReachable"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "addr" type class_ref 530715 // InetAddress
	  param in name "timeout" explicit_type "int"
	  param inout name "netif" type class_ref 928027 // NetworkInterface
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7215259 "anyLocalAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7215387 "loopbackAddress"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1812891 // anyLocalAddress (<unidirectional association>)
	relation 1812891 --->
	  a role_name "anyLocalAddress" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812891 // anyLocalAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      classrelation 1813019 // loopbackAddress (<unidirectional association>)
	relation 1813019 --->
	  a role_name "loopbackAddress" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813019 // loopbackAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end
    end

    class 929947 "JarURLConnection"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A URL Connection to a Java ARchive (JAR) file or an entry in a JAR
file.

<p>The syntax of a JAR URL is:

<pre>
jar:&lt;url&gt;!/{entry}
</pre>

<p>for example:

<p><code>
jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class<br>
</code>

<p>Jar URLs should be used to refer to a JAR file or entries in 
a JAR file. The example above is a JAR URL which refers to a JAR
entry. If the entry name is omitted, the URL refers to the whole
JAR file:

<code>
jar:http://www.foo.com/bar/baz.jar!/
</code>

<p>Users should cast the generic URLConnection to a
JarURLConnection when they know that the URL they created is a JAR
URL, and they need JAR-specific functionality. For example:

<pre>
URL url = new URL(\"jar:file:/home/duke/duke.jar!/\");
JarURLConnection jarConnection = (JarURLConnection)url.openConnection();
Manifest manifest = jarConnection.getManifest();
</pre>

<p>JarURLConnection instances can only be used to read from JAR files.
It is not possible to get a {@link java.io.OutputStream} to modify or write 
to the underlying JAR file using this class.
<p>Examples:

<dl>

<dt>A Jar entry
<dd><code>jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class</code>

<dt>A Jar file
<dd><code>jar:http://www.foo.com/bar/baz.jar!/</code>

<dt>A Jar directory
<dd><code>jar:http://www.foo.com/bar/baz.jar!/COM/foo/</code>

</dl>

<p><code>!/</code> is refered to as the <em>separator</em>.

<p>When constructing a JAR url via <code>new URL(context, spec)</code>,
the following rules apply:

<ul>

<li>if there is no context URL and the specification passed to the
URL constructor doesn't contain a separator, the URL is considered
to refer to a JarFile.

<li>if there is a context URL, the context URL is assumed to refer
to a JAR file or a Jar directory.

<li>if the specification begins with a '/', the Jar directory is
ignored, and the spec is considered to be at the root of the Jar
file.

<p>Examples:

<dl>

<dt>context: <b>jar:http://www.foo.com/bar/jar.jar!/</b>, 
spec:<b>baz/entry.txt</b>

<dd>url:<b>jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt</b>

<dt>context: <b>jar:http://www.foo.com/bar/jar.jar!/baz</b>, 
spec:<b>entry.txt</b>

<dd>url:<b>jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt</b>

<dt>context: <b>jar:http://www.foo.com/bar/jar.jar!/baz</b>, 
spec:<b>/entry.txt</b>

<dd>url:<b>jar:http://www.foo.com/bar/jar.jar!/entry.txt</b>

</dl>

</ul>

@see java.net.URL
@see java.net.URLConnection

@see java.util.jar.JarFile
@see java.util.jar.JarInputStream
@see java.util.jar.Manifest
@see java.util.zip.ZipEntry

@author Benjamin Renaud
@since 1.2 "
      classrelation 1813531 // <generalisation>
	relation 1813531 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1813531 // <generalisation>
	  b parent class_ref 730011 // URLConnection
      end

      classrelation 1813659 // jarFileURL (<unidirectional association>)
	relation 1813659 --->
	  a role_name "jarFileURL" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813659 // jarFileURL (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      attribute 2778779 "entryName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1813787 // jarFileURLConnection (<unidirectional association>)
	relation 1813787 --->
	  a role_name "jarFileURLConnection" protected
	    comment "
The connection to the JAR file URL, if the connection has been
initiated. This should be set by connect.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813787 // jarFileURLConnection (<unidirectional association>)
	  b parent class_ref 730011 // URLConnection
      end

      operation 7217307 "JarURLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the new JarURLConnection to the specified URL.
@param url the URL 
@throws MalformedURLException if no legal protocol 
could be found in a specification string or the 
string could not be parsed. "
      end

      operation 7217435 "parseSpecs"
	private explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 280091 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get the specs for a given url out of the cache, and compute and
cache them if they're not there. "
      end

      operation 7217563 "getJarFileURL"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL for the Jar file for this connection.

@return the URL for the Jar file for this connection."
      end

      operation 7217691 "getEntryName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the entry name for this connection. This method
returns null if the JAR file URL corresponding to this
connection points to a JAR file and not a JAR file entry.

@return the entry name for this connection, if any.  "
      end

      operation 7217819 "getJarFile"
	abstract public return_type class_ref 930075 // JarFile
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the JAR file for this connection. 

@return the JAR file for this connection. If the connection is
a connection to an entry of a JAR file, the JAR file object is
returned

@exception IOException if an IOException occurs while trying to
connect to the JAR file for this connection.

@see #connect"
      end

      operation 7217947 "getManifest"
	public return_type class_ref 914587 // Manifest
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Manifest for this connection, or null if none.

@return the manifest object corresponding to the JAR file object
for this connection.

@exception IOException if getting the JAR file for this
connection causes an IOException to be trown.

@see #getJarFile"
      end

      operation 7218075 "getJarEntry"
	public return_type class_ref 930203 // JarEntry
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the JAR entry object for this connection, if any. This
method returns null if the JAR file URL corresponding to this
connection points to a JAR file and not a JAR file entry.

@return the JAR entry object for this connection, or null if
the JAR URL for this connection points to a JAR file.

@exception IOException if getting the JAR file for this
connection causes an IOException to be trown.

@see #getJarFile
@see #getJarEntry"
      end

      operation 7218203 "getAttributes"
	public return_type class_ref 930331 // Attributes
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Attributes object for this connection if the URL
for it points to a JAR file entry, null otherwise.

@return the Attributes object for this connection if the URL
for it points to a JAR file entry, null otherwise.  

@exception IOException if getting the JAR entry causes an
IOException to be thrown.

@see #getJarEntry"
      end

      operation 7218331 "getMainAttributes"
	public return_type class_ref 930331 // Attributes
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the main Attributes for the JAR file for this
connection.

@return the main Attributes for the JAR file for this
connection.

@exception IOException if getting the manifest causes an
IOException to be thrown.

@see #getJarFile
@see #getManifest "
      end

      operation 7218459 "getCertificates"
	public return_type class_ref 528283 // Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Certificate object for this connection if the URL
for it points to a JAR file entry, null otherwise. This method 
can only be called once
the connection has been completely verified by reading
from the input stream until the end of the stream has been
reached. Otherwise, this method will return <code>null</code>

@return the Certificate object for this connection if the URL
for it points to a JAR file entry, null otherwise.  

@exception IOException if getting the JAR entry causes an
IOException to be thrown.

@see #getJarEntry"
      end
    end

    class 930459 "MulticastSocket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The multicast datagram socket class is useful for sending
and receiving IP multicast packets.  A MulticastSocket is
a (UDP) DatagramSocket, with additional capabilities for
joining \"groups\" of other multicast hosts on the internet.
<P>
A multicast group is specified by a class D IP address
and by a standard UDP port number. Class D IP addresses
are in the range <CODE>224.0.0.0</CODE> to <CODE>239.255.255.255</CODE>,
inclusive. The address 224.0.0.0 is reserved and should not be used.
<P>
One would join a multicast group by first creating a MulticastSocket
with the desired port, then invoking the
<CODE>joinGroup(InetAddress groupAddr)</CODE>
method:
<PRE>
// join a Multicast group and send the group salutations
...
String msg = \"Hello\";
InetAddress group = InetAddress.getByName(\"228.5.6.7\");
MulticastSocket s = new MulticastSocket(6789);
s.joinGroup(group);
DatagramPacket hi = new DatagramPacket(msg.getBytes(), msg.length(),
                            group, 6789);
s.send(hi);
// get their responses!
byte[] buf = new byte[1000];
DatagramPacket recv = new DatagramPacket(buf, buf.length);
s.receive(recv);
...
// OK, I'm done talking - leave the group...
s.leaveGroup(group);
</PRE>

When one sends a message to a multicast group, <B>all</B> subscribing
recipients to that host and port receive the message (within the
time-to-live range of the packet, see below).  The socket needn't
be a member of the multicast group to send messages to it.
<P>
When a socket subscribes to a multicast group/port, it receives
datagrams sent by other hosts to the group/port, as do all other
members of the group and port.  A socket relinquishes membership
in a group by the leaveGroup(InetAddress addr) method.  <B>
Multiple MulticastSocket's</B> may subscribe to a multicast group
and port concurrently, and they will all receive group datagrams.
<P>
Currently applets are not allowed to use multicast sockets.

@author Pavani Diwanji
@since  JDK1.1"
      classrelation 1814043 // <generalisation>
	relation 1814043 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1814043 // <generalisation>
	  b parent class_ref 544411 // DatagramSocket
      end

      operation 7218843 "MulticastSocket"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a multicast socket.

<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with 0 as its argument to ensure the operation is allowed. 
This could result in a SecurityException.
<p>
When the socket is created the 
{@link DatagramSocket#setReuseAddress(boolean)} method is 
called to enable the SO_REUSEADDR socket option. 

@exception IOException if an I/O exception occurs
while creating the MulticastSocket
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.
@see SecurityManager#checkListen
@see java.net.DatagramSocket#setReuseAddress(boolean) "
      end

      operation 7218971 "MulticastSocket"
	public explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a multicast socket and bind it to a specific port.

<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with the <code>port</code> argument
as its argument to ensure the operation is allowed. 
This could result in a SecurityException.
<p>
When the socket is created the
{@link DatagramSocket#setReuseAddress(boolean)} method is
called to enable the SO_REUSEADDR socket option. 

@param port port to use
@exception IOException if an I/O exception occurs
while creating the MulticastSocket
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.
@see SecurityManager#checkListen
@see java.net.DatagramSocket#setReuseAddress(boolean) "
      end

      operation 7219099 "MulticastSocket"
	public explicit_return_type ""
	nparams 1
	  param inout name "bindaddr" type class_ref 927387 // SocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a MulticastSocket bound to the specified socket address.
<p>
Or, if the address is <code>null</code>, create an unbound socket.
<p>
<p>If there is a security manager, 
its <code>checkListen</code> method is first called
with the SocketAddress port as its argument to ensure the operation is allowed. 
This could result in a SecurityException.
<p>
When the socket is created the
{@link DatagramSocket#setReuseAddress(boolean)} method is
called to enable the SO_REUSEADDR socket option. 

@param bindaddr Socket address to bind to, or <code>null</code> for
                an unbound socket.
@exception IOException if an I/O exception occurs
while creating the MulticastSocket
@exception  SecurityException  if a security manager exists and its  
            <code>checkListen</code> method doesn't allow the operation.
@see SecurityManager#checkListen
@see java.net.DatagramSocket#setReuseAddress(boolean) 

@since 1.4"
      end

      attribute 2778907 "ttlLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The lock on the socket's TTL. This is for set/getTTL and
send(packet,ttl).
"
      end

      attribute 2779035 "infLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The lock on the socket's interface - used by setInterface
and getInterface
"
      end

      classrelation 1814171 // infAddress (<unidirectional association>)
	relation 1814171 --->
	  a role_name "infAddress" init_value "=  null" private
	    comment "
The \"last\" interface set by setInterface on this MulticastSocket

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814171 // infAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      operation 7219227 "setTTL"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Set the default time-to-live for multicast packets sent out
on this <code>MulticastSocket</code> in order to control the 
scope of the multicasts.

<p>The ttl is an <b>unsigned</b> 8-bit quantity, and so <B>must</B> be
in the range <code> 0 <= ttl <= 0xFF </code>.

@param ttl the time-to-live
@exception IOException if an I/O exception occurs
while setting the default time-to-live value
@deprecated use the setTimeToLive method instead, which uses
<b>int</b> instead of <b>byte</b> as the type for ttl.
@see #getTTL()"
      end

      operation 7219355 "setTimeToLive"
	public explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the default time-to-live for multicast packets sent out
on this <code>MulticastSocket</code> in order to control the 
scope of the multicasts.

<P> The ttl <B>must</B> be in the range <code> 0 <= ttl <=
255</code> or an IllegalArgumentException will be thrown.
@exception IOException if an I/O exception occurs
while setting the default time-to-live value
@param ttl the time-to-live
@see #getTimeToLive()"
      end

      operation 7219483 "getTTL"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Get the default time-to-live for multicast packets sent out on
the socket.

@exception IOException if an I/O exception occurs
while getting the default time-to-live value
@return the default time-to-live value
@deprecated use the getTimeToLive method instead, which returns
an <b>int</b> instead of a <b>byte</b>.
@see #setTTL(byte)"
      end

      operation 7219611 "getTimeToLive"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the default time-to-live for multicast packets sent out on
the socket.
@exception IOException if an I/O exception occurs while
getting the default time-to-live value
@return the default time-to-live value
@see #setTimeToLive(int)"
      end

      operation 7219739 "joinGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mcastaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Joins a multicast group. Its behavior may be affected by
<code>setInterface</code> or <code>setNetworkInterface</code>.

<p>If there is a security manager, this method first
calls its <code>checkMulticast</code> method
with the <code>mcastaddr</code> argument
as its argument.

@param mcastaddr is the multicast address to join

@exception IOException if there is an error joining
or when the address is not a multicast address.
@exception  SecurityException  if a security manager exists and its  
<code>checkMulticast</code> method doesn't allow the join.

@see SecurityManager#checkMulticast(InetAddress)"
      end

      operation 7219867 "leaveGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mcastaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave a multicast group. Its behavior may be affected by
<code>setInterface</code> or <code>setNetworkInterface</code>.

<p>If there is a security manager, this method first
calls its <code>checkMulticast</code> method
with the <code>mcastaddr</code> argument
as its argument.

@param mcastaddr is the multicast address to leave
@exception IOException if there is an error leaving
or when the address is not a multicast address.
@exception  SecurityException  if a security manager exists and its  
<code>checkMulticast</code> method doesn't allow the operation.

@see SecurityManager#checkMulticast(InetAddress)"
      end

      operation 7219995 "joinGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Joins the specified multicast group at the specified interface.

<p>If there is a security manager, this method first
calls its <code>checkMulticast</code> method
with the <code>mcastaddr</code> argument
as its argument.

@param mcastaddr is the multicast address to join
@param netIf specifies the local interface to receive multicast
       datagram packets, or <i>null</i> to defer to the interface set by
	     {@link MulticastSocket#setInterface(InetAddress)} or 
	     {@link MulticastSocket#setNetworkInterface(NetworkInterface)}

@exception IOException if there is an error joining
or when the address is not a multicast address.
@exception  SecurityException  if a security manager exists and its  
<code>checkMulticast</code> method doesn't allow the join.
@throws  IllegalArgumentException if mcastaddr is null or is a
         SocketAddress subclass not supported by this socket

@see SecurityManager#checkMulticast(InetAddress)
@since 1.4"
      end

      operation 7220123 "leaveGroup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave a multicast group on a specified local interface.

<p>If there is a security manager, this method first
calls its <code>checkMulticast</code> method
with the <code>mcastaddr</code> argument
as its argument.

@param mcastaddr is the multicast address to leave
@param netIf specifies the local interface or <i>null</i> to defer
		   to the interface set by
		   {@link MulticastSocket#setInterface(InetAddress)} or 
		   {@link MulticastSocket#setNetworkInterface(NetworkInterface)}
@exception IOException if there is an error leaving
or when the address is not a multicast address.
@exception  SecurityException  if a security manager exists and its  
<code>checkMulticast</code> method doesn't allow the operation.
@throws  IllegalArgumentException if mcastaddr is null or is a
         SocketAddress subclass not supported by this socket

@see SecurityManager#checkMulticast(InetAddress)
@since 1.4"
      end

      operation 7220251 "setInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inf" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the multicast network interface used by methods
whose behavior would be affected by the value of the
network interface. Useful for multihomed hosts.
@param inf the InetAddress
@exception SocketException if there is an error in 
the underlying protocol, such as a TCP error. 
@see #getInterface()"
      end

      operation 7220379 "getInterface"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the address of the network interface used for
multicast packets.

@return An <code>InetAddress</code> representing
 the address of the network interface used for 
 multicast packets.

@exception SocketException if there is an error in 
the underlying protocol, such as a TCP error.

@see #setInterface(java.net.InetAddress)"
      end

      operation 7220507 "setNetworkInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the network interface for outgoing multicast datagrams 
sent on this socket.

@param netIf the interface
@exception SocketException if there is an error in 
the underlying protocol, such as a TCP error. 
@see #getNetworkInterface()
@since 1.4"
      end

      operation 7220635 "getNetworkInterface"
	public return_type class_ref 928027 // NetworkInterface
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the multicast network interface set.

@exception SocketException if there is an error in 
the underlying protocol, such as a TCP error. 
@return the multicast <code>NetworkInterface</code> currently set
@see #setNetworkInterface(NetworkInterface)
@since 1.4"
      end

      operation 7220763 "setLoopbackMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "disable" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disable/Enable local loopback of multicast datagrams
The option is used by the platform's networking code as a hint 
for setting whether multicast data will be looped back to 
the local socket.

<p>Because this option is a hint, applications that want to
verify what loopback mode is set to should call 
{@link #getLoopbackMode()}
@param disable <code>true</code> to disable the LoopbackMode
@throws SocketException if an error occurs while setting the value
@since 1.4
@see #getLoopbackMode"
      end

      operation 7220891 "getLoopbackMode"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the setting for local loopback of multicast datagrams.

@throws SocketException  if an error occurs while getting the value
@return true if the LoopbackMode has been disabled
@since 1.4
@see #setLoopbackMode"
      end

      operation 7221019 "send"
	public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 544667 // DatagramPacket
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sends a datagram packet to the destination, with a TTL (time-
to-live) other than the default for the socket.  This method
need only be used in instances where a particular TTL is desired;
otherwise it is preferable to set a TTL once on the socket, and
use that default TTL for all packets.  This method does <B>not
</B> alter the default TTL for the socket. Its behavior may be
affected by <code>setInterface</code>.

<p>If there is a security manager, this method first performs some
security checks. First, if <code>p.getAddress().isMulticastAddress()</code>
is true, this method calls the
security manager's <code>checkMulticast</code> method
with <code>p.getAddress()</code> and <code>ttl</code> as its arguments.
If the evaluation of that expression is false,
this method instead calls the security manager's 
<code>checkConnect</code> method with arguments
<code>p.getAddress().getHostAddress()</code> and
<code>p.getPort()</code>. Each call to a security manager method
could result in a SecurityException if the operation is not allowed.

@param p	is the packet to be sent. The packet should contain
the destination multicast ip address and the data to be sent.
One does not need to be the member of the group to send
packets to a destination multicast address.
@param ttl optional time to live for multicast packet.
default ttl is 1.

@exception IOException is raised if an error occurs i.e
error while setting ttl.
@exception  SecurityException  if a security manager exists and its  
            <code>checkMulticast</code> or <code>checkConnect</code> 
            method doesn't allow the send.

@deprecated Use the following code or its equivalent instead:
	......
	int ttl = mcastSocket.getTimeToLive();
 mcastSocket.setTimeToLive(newttl);
	mcastSocket.send(p);
	mcastSocket.setTimeToLive(ttl);
	......

@see DatagramSocket#send
@see DatagramSocket#receive
@see SecurityManager#checkMulticast(java.net.InetAddress, byte)
@see SecurityManager#checkConnect"
      end
    end

    class 930587 "NetPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is for various network permissions.
A NetPermission contains a name (also referred to as a \"target name\") but
no actions list; you either have the named permission
or you don't.
<P>
The target name is the name of the network permission (see below). The naming
convention follows the  hierarchical property naming convention.
Also, an asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match. For example: \"foo.*\" or \"*\" is valid,
\"*foo\" or \"a*b\" is not valid.
<P>
The following table lists all the possible NetPermission target names,
and for each provides a description of what the permission allows
and a discussion of the risks of granting code the permission.
<P>

<table border=1 cellpadding=5 summary=\"Permission target name, what the permission allows, and associated risks\">
<tr>
<th>Permission Target Name</th>
<th>What the Permission Allows</th>
<th>Risks of Allowing this Permission</th>
</tr>

<tr>
  <td>setDefaultAuthenticator</td>
  <td>The ability to set the
way authentication information is retrieved when
a proxy or HTTP server asks for authentication</td>
  <td>Malicious
code can set an authenticator that monitors and steals user
authentication input as it retrieves the input from the user.</td>
</tr>

<tr>
  <td>requestPasswordAuthentication</td>
  <td>The ability
to ask the authenticator registered with the system for
a password</td>
  <td>Malicious code may steal this password.</td>
</tr>

<tr>
  <td>specifyStreamHandler</td>
  <td>The ability
to specify a stream handler when constructing a URL</td>
  <td>Malicious code may create a URL with resources that it would
normally not have access to (like file:/foo/fum/), specifying a
stream handler that gets the actual bytes from someplace it does 
have access to. Thus it might be able to trick the system into
creating a ProtectionDomain/CodeSource for a class even though
that class really didn't come from that location.</td>
</tr>

<tr> 
  <td>setProxySelector</td>
  <td>The ability to set the proxy selector used to make decisions
  on which proxies to use when making network connections.</td>
  <td>Malicious code can set a ProxySelector that directs network
  traffic to an arbitrary network host.</td>
</tr>

<tr> 
  <td>getProxySelector</td>
  <td>The ability to get the proxy selector used to make decisions
  on which proxies to use when making network connections.</td>
  <td>Malicious code can get a ProxySelector to discover proxy
  hosts and ports on internal networks, which could then become
  targets for attack.</td>
</tr>

<tr> 
  <td>setCookieHandler</td>
  <td>The ability to set the cookie handler that processes highly
  security sensitive cookie information for an Http session.</td>
  <td>Malicious code can set a cookie handler to obtain access to
  highly security sensitive cookie information. Some web servers
  use cookies to save user private information such as access
  control information, or to track user browsing habit.</td>
  </tr>

<tr> 
  <td>getCookieHandler</td>
  <td>The ability to get the cookie handler that processes highly
  security sensitive cookie information for an Http session.</td>
  <td>Malicious code can get a cookie handler to obtain access to
  highly security sensitive cookie information. Some web servers
  use cookies to save user private information such as access
  control information, or to track user browsing habit.</td>
  </tr>

<tr> 
  <td>setResponseCache</td>
  <td>The ability to set the response cache that provides access to
  a local response cache.</td>
  <td>Malicious code getting access to the local response cache
  could access security sensitive information, or create false
  entries in the response cache.</td>
  </tr>

<tr> 
  <td>getResponseCache</td>
  <td>The ability to get the response cache that provides
  access to a local response cache.</td>
  <td>Malicious code getting access to the local response cache
  could access security sensitive information.</td>
  </tr>

</table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@version 1.49 04/02/03

@author Marianne Mueller
@author Roland Schemers"
      classrelation 1814299 // <generalisation>
	relation 1814299 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1814299 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      attribute 2779163 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8343910153355041693L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7221147 "NetPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new NetPermission with the specified name.
The name is the symbolic name of the NetPermission, such as
\"setDefaultAuthenticator\", etc. An asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match.

@param name the name of the NetPermission."
      end

      operation 7221275 "NetPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new NetPermission object with the specified name.
The name is the symbolic name of the NetPermission, and the
actions String is currently unused and should be null.

@param name the name of the NetPermission.
@param actions should be null."
      end
    end

    class 930715 "NoRouteToHostException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an error occurred while attempting to connect a
socket to a remote address and port.  Typically, the remote
host cannot be reached because of an intervening firewall, or
if an intermediate router is down.

@since   JDK1.1"
      classrelation 1814555 // <generalisation>
	relation 1814555 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1814555 // <generalisation>
	  b parent class_ref 273947 // SocketException
      end

      operation 7223579 "NoRouteToHostException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new NoRouteToHostException with the specified detail 
message as to why the remote host cannot be reached.
A detail message is a String that gives a specific 
description of this error.
@param msg the detail message"
      end

      operation 7223707 "NoRouteToHostException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new NoRouteToHostException with no detailed message."
      end
    end

    class 930843 "PlainDatagramSocketImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Concrete datagram and multicast socket implementation base class.
Note: This is not a public class, so that applets cannot call
into the implementation directly and hence cannot bypass the
security checks present in the DatagramSocket and MulticastSocket
classes.

@author Pavani Diwanji"
      classrelation 1814683 // <generalisation>
	relation 1814683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1814683 // <generalisation>
	  b parent class_ref 927515 // DatagramSocketImpl
      end

      attribute 2779931 "timeout"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " timeout value for receive() "
      end

      attribute 2780059 "trafficClass"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2780187 "connected"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1814811 // connectedAddress (<unidirectional association>)
	relation 1814811 --->
	  a role_name "connectedAddress" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814811 // connectedAddress (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2780315 "connectedPort"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2780443 "multicastInterface"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " cached socket options "
      end

      attribute 2780571 "loopbackMode"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2780699 "ttl"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1814939 // fd1 (<unidirectional association>)
	relation 1814939 --->
	  a role_name "fd1" private
	    comment " Used for IPv6 on Windows only 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814939 // fd1 (<unidirectional association>)
	  b parent class_ref 904475 // FileDescriptor
      end

      attribute 2780827 "fduse"
	private explicit_type "int"
	init_value "= -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " saved between peek() and receive() calls "
      end

      attribute 2780955 "lastfd"
	private explicit_type "int"
	init_value "= -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " saved between successive calls to receive, if data is detected
on both sockets at same time. To ensure that one socket is not
starved, they rotate using this field
"
      end

      classrelation 1815067 // anyLocalBoundAddr (<unidirectional association>)
	relation 1815067 --->
	  a role_name "anyLocalBoundAddr" init_value "= null" private
	    comment "
Needed for ipv6 on windows because we need to know
if the socket was bound to ::0 or 0.0.0.0, when a caller
asks for it. In this case, both sockets are used, but we
don't know whether the caller requested ::0 or 0.0.0.0
and need to remember it here.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815067 // anyLocalBoundAddr (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      extra_member 163739 "initialization"
	
	cpp "" ""
	java "  static {
	java.security.AccessController.doPrivileged(
		  new sun.security.action.LoadLibraryAction(\"net\"));
	init();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7224219 "create"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a datagram socket"
      end

      operation 7224347 "bind"
	protected explicit_return_type "void"
	nparams 2
	  param in name "lport" explicit_type "int"
	  param inout name "laddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds a datagram socket to a local port."
      end

      operation 7224475 "bind0"
	protected explicit_return_type "void"
	nparams 2
	  param in name "lport" explicit_type "int"
	  param inout name "laddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7224603 "send"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a datagram packet. The packet contains the data and the
destination address to send the packet to.
@param packet to be sent."
      end

      operation 7224731 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects a datagram socket to a remote destination. This associates the remote
address with the local socket so that datagrams may only be sent to this destination
and received from this destination.
@param address the remote InetAddress to connect to
@param port the remote port number"
      end

      operation 7224859 "disconnect"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects a previously connected socket. Does nothing if the socket was
not connected already."
      end

      operation 7224987 "peek"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "i" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peek at the packet to see who it is from.
@param return the address which the packet came from."
      end

      operation 7225115 "peekData"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7225243 "receive"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive the datagram packet.
@param Packet Received."
      end

      operation 7225371 "receive0"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 544667 // DatagramPacket
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7225499 "setTimeToLive"
	protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the TTL (time-to-live) option.
@param TTL to be set."
      end

      operation 7225627 "getTimeToLive"
	protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the TTL (time-to-live) option."
      end

      operation 7225755 "setTTL"
	protected explicit_return_type "void"
	nparams 1
	  param in name "ttl" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the TTL (time-to-live) option.
@param TTL to be set."
      end

      operation 7225883 "getTTL"
	protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the TTL (time-to-live) option."
      end

      operation 7226011 "join"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Join the multicast group.
@param multicast address to join."
      end

      operation 7226139 "leave"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave the multicast group.
@param multicast address to leave."
      end

      operation 7226267 "joinGroup"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Join the multicast group.
@param multicast address to join.
@param netIf specifies the local interface to receive multicast
       datagram packets
@throws  IllegalArgumentException if mcastaddr is null or is a
         SocketAddress subclass not supported by this socket
@since 1.4"
      end

      operation 7226395 "join"
	private explicit_return_type "void"
	nparams 2
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7226523 "leaveGroup"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "mcastaddr" type class_ref 927387 // SocketAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Leave the multicast group.
@param multicast address to leave.
@param netIf specified the local interface to leave the group at
@throws  IllegalArgumentException if mcastaddr is null or is a
         SocketAddress subclass not supported by this socket
@since 1.4"
      end

      operation 7226651 "leave"
	private explicit_return_type "void"
	nparams 2
	  param inout name "inetaddr" type class_ref 530715 // InetAddress
	  param inout name "netIf" type class_ref 928027 // NetworkInterface
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7226779 "close"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the socket."
      end

      operation 7226907 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227035 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "optID" explicit_type "int"
	  param inout name "o" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "set a value - since we only support (setting) binary options
here, o must be a Boolean"
      end

      operation 7227163 "getOption"
	public explicit_return_type "Object"
	nparams 1
	  param in name "optID" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get option's state - set or not"
      end

      operation 7227291 "datagramSocketCreate"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227419 "datagramSocketClose"
	private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227547 "socketSetOption"
	private explicit_return_type "void"
	nparams 2
	  param in name "opt" explicit_type "int"
	  param inout name "val" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227675 "socketGetOption"
	private explicit_return_type "Object"
	nparams 1
	  param in name "opt" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227803 "connect0"
	private explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7227931 "disconnect0"
	private explicit_return_type "void"
	nparams 1
	  param in name "family" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7228059 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end
    end

    class 930971 "PlainSocketImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default Socket Implementation. This implementation does
not implement any security checks.
Note this class should <b>NOT</b> be public.

@author  Steven B. Byrne
@version 1.65, 12/19/03"
      classrelation 1815835 // <generalisation>
	relation 1815835 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1815835 // <generalisation>
	  b parent class_ref 931099 // SocketImpl
      end

      attribute 2781339 "timeout"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " instance variable for SO_TIMEOUT 
 timeout in millisec"
      end

      attribute 2781467 "trafficClass"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " traffic class"
      end

      attribute 2781595 "shut_rd"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2781723 "shut_wr"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1815963 // socketInputStream (<unidirectional association>)
	relation 1815963 --->
	  a role_name "socketInputStream" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815963 // socketInputStream (<unidirectional association>)
	  b parent class_ref 931227 // SocketInputStream
      end

      attribute 2781851 "fdUseCount"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of threads using the FileDescriptor "
      end

      attribute 2781979 "fdLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " lock when increment/decrementing fdUseCount "
      end

      attribute 2782107 "closePending"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a close is pending on the file descriptor "
      end

      attribute 2782235 "CONNECTION_NOT_RESET"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates connection reset state "
      end

      attribute 2782363 "CONNECTION_RESET_PENDING"
	private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2782491 "CONNECTION_RESET"
	private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2782619 "resetState"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2782747 "resetLock"
	private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1816091 // fd1 (<unidirectional association>)
	relation 1816091 --->
	  a role_name "fd1" private
	    comment " second fd, used for ipv6 on windows only.
fd1 is used for listeners and for client sockets at initialization
until the socket is connected. Up to this point fd always refers
to the ipv4 socket and fd1 to the ipv6 socket. After the socket
becomes connected, fd always refers to the connected socket 
(either v4 or v6) and fd1 is closed.

For ServerSockets, fd always refers to the v4 listener and 
fd1 the v6 listener.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816091 // fd1 (<unidirectional association>)
	  b parent class_ref 904475 // FileDescriptor
      end

      classrelation 1816219 // anyLocalBoundAddr (<unidirectional association>)
	relation 1816219 --->
	  a role_name "anyLocalBoundAddr" init_value "= null" private
	    comment "
Needed for ipv6 on windows because we need to know
if the socket is bound to ::0 or 0.0.0.0, when a caller
asks for it. Otherwise we don't know which socket to ask.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816219 // anyLocalBoundAddr (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2782875 "lastfd"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to prevent starvation when listening on two sockets, this is
is used to hold the id of the last socket we accepted on.
"
      end

      extra_member 163867 "initialization"
	
	cpp "" ""
	java "  static {
	java.security.AccessController.doPrivileged(
		  new sun.security.action.LoadLibraryAction(\"net\"));
	initProto();
    }"
	php ""
	python ""
	idl ""
      end

      operation 7231515 "PlainSocketImpl"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty instance."
      end

      operation 7231643 "PlainSocketImpl"
	package explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 904475 // FileDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance with the given file descriptor.
Note, this will not work with IPv6, since two fds are used."
      end

      operation 7231771 "create"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket with a boolean that specifies whether this
is a stream socket (true) or an unconnected UDP socket (false)."
      end

      operation 7231899 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 272667 // UnknownHostException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket and connects it to the specified port on
the specified host.
@param host the specified host
@param port the specified port"
      end

      operation 7232027 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket and connects it to the specified address on
the specified port.
@param address the address
@param port the specified port"
      end

      operation 7232155 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 927387 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a socket and connects it to the specified address on
the specified port.
@param address the address
@param timeout the timeout value in milliseconds, or zero for no timeout.
@throws IOException if connection fails
@throws  IllegalArgumentException if address is null or is a
         SocketAddress subclass not supported by this socket
@since 1.4"
      end

      operation 7232283 "connectToAddress"
	private explicit_return_type "void"
	nparams 3
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7232411 "setOption"
	public explicit_return_type "void"
	nparams 2
	  param in name "opt" explicit_type "int"
	  param inout name "val" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7232539 "getOption"
	public explicit_return_type "Object"
	nparams 1
	  param in name "opt" explicit_type "int"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7232667 "doConnect"
	private explicit_return_type "void"
	nparams 3
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The workhorse of the connection operation.  Tries several times to
establish a connection to the given <host, port>.  If unsuccessful,
throws an IOException indicating what went wrong."
      end

      operation 7232795 "bind"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "lport" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds the socket to the specified address of the specified local port.
@param address the address
@param port the port"
      end

      operation 7232923 "listen"
	protected explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Listens, for a specified amount of time, for connections.
@param count the amount of time to listen for connections"
      end

      operation 7233051 "accept"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 931099 // SocketImpl
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts connections.
@param s the connection"
      end

      operation 7233179 "getInputStream"
	protected return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an InputStream for this socket."
      end

      operation 7233307 "setInputStream"
	package explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 931227 // SocketInputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7233435 "getOutputStream"
	protected return_type class_ref 183835 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an OutputStream for this socket."
      end

      operation 7233563 "available"
	protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bytes that can be read without blocking."
      end

      operation 7233691 "close"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the socket."
      end

      operation 7233819 "shutdownInput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shutdown read-half of the socket connection;"
      end

      operation 7233947 "shutdownOutput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shutdown write-half of the socket connection;"
      end

      operation 7234075 "supportsUrgentData"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7234203 "sendUrgentData"
	protected explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7234331 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cleans up if the user forgets to close it."
      end

      operation 7234459 "acquireFD"
	public return_type class_ref 904475 // FileDescriptor
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "\"Acquires\" and returns the FileDescriptor for this impl

A corresponding releaseFD is required to \"release\" the
FileDescriptor."
      end

      operation 7234587 "releaseFD"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "\"Release\" the FileDescriptor for this impl. 

If the use count goes to -1 then the socket is closed."
      end

      operation 7234715 "isConnectionReset"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7234843 "isConnectionResetPending"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7234971 "setConnectionReset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7235099 "setConnectionResetPending"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7235227 "isClosedOrPending"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if already closed or close is pending"
      end

      operation 7235355 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current value of SO_TIMEOUT"
      end

      operation 7235483 "socketPreClose"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "\"Pre-close\" a socket by dup'ing the file descriptor - this enables
the socket to be closed without releasing the file descriptor."
      end

      operation 7235611 "socketClose"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the socket (and release the file descriptor)."
      end

      operation 7235739 "socketCreate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "isServer" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7235867 "socketConnect"
	private explicit_return_type "void"
	nparams 3
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7235995 "socketBind"
	private explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236123 "socketListen"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236251 "socketAccept"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 931099 // SocketImpl
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236379 "socketAvailable"
	private explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236507 "socketClose0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "useDeferredClose" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236635 "socketShutdown"
	private explicit_return_type "void"
	nparams 1
	  param in name "howto" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236763 "initProto"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7236891 "socketSetOption"
	private explicit_return_type "void"
	nparams 3
	  param in name "cmd" explicit_type "int"
	  param inout name "on" explicit_type "boolean"
	  param inout name "value" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7237019 "socketGetOption"
	private explicit_return_type "int"
	nparams 2
	  param in name "opt" explicit_type "int"
	  param inout name "iaContainerObj" explicit_type "Object"
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7237147 "socketGetOption1"
	private explicit_return_type "int"
	nparams 3
	  param in name "opt" explicit_type "int"
	  param inout name "iaContainerObj" explicit_type "Object"
	  param inout name "fd" type class_ref 904475 // FileDescriptor
	nexceptions 1
	  exception class_ref 273947 // SocketException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7237275 "socketSendUrgentData"
	private explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2783003 "SHUT_RD"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2783131 "SHUT_WR"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 931099 "SocketImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class <code>SocketImpl</code> is a common superclass 
of all classes that actually implement sockets. It is used to 
create both client and server sockets. 
<p>
A \"plain\" socket implements these methods exactly as 
described, without attempting to go through a firewall or proxy. 

@author  unascribed
@version 1.42, 03/25/04
@since   JDK1.0"
      classrelation 1815195 // <realization>
	relation 1815195 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1815195 // <realization>
	  b parent class_ref 927899 // SocketOptions
      end

      classrelation 1815323 // socket (<unidirectional association>)
	relation 1815323 --->
	  a role_name "socket" init_value "=  null" package
	    comment "
The actual Socket object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815323 // socket (<unidirectional association>)
	  b parent class_ref 235419 // Socket
      end

      classrelation 1815451 // serverSocket (<unidirectional association>)
	relation 1815451 --->
	  a role_name "serverSocket" init_value "=  null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815451 // serverSocket (<unidirectional association>)
	  b parent class_ref 235163 // ServerSocket
      end

      classrelation 1815579 // fd (<unidirectional association>)
	relation 1815579 --->
	  a role_name "fd" protected
	    comment "
The file descriptor object for this socket. 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815579 // fd (<unidirectional association>)
	  b parent class_ref 904475 // FileDescriptor
      end

      classrelation 1815707 // address (<unidirectional association>)
	relation 1815707 --->
	  a role_name "address" protected
	    comment "
The IP address of the remote end of this socket. 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815707 // address (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 2781083 "port"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The port number on the remote host to which this socket is connected. 
"
      end

      attribute 2781211 "localport"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The local port number to which this socket is connected. 
"
      end

      operation 7228187 "create"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "stream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates either a stream or a datagram socket. 

@param      stream   if <code>true</code>, create a stream socket;
                     otherwise, create a datagram socket.
@exception  IOException  if an I/O error occurs while creating the
              socket."
      end

      operation 7228315 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified port on the named host. 

@param      host   the name of the remote host.
@param      port   the port number.
@exception  IOException  if an I/O error occurs when connecting to the
              remote host."
      end

      operation 7228443 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified port number on the specified host.

@param      address   the IP address of the remote host.
@param      port      the port number.
@exception  IOException  if an I/O error occurs when attempting a
              connection."
      end

      operation 7228571 "connect"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "address" type class_ref 927387 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this socket to the specified port number on the specified host.
A timeout of zero is interpreted as an infinite timeout. The connection
will then block until established or an error occurs.

@param      address   the Socket address of the remote host.
@param	  timeout  the timeout value, in milliseconds, or zero for no timeout.
@exception  IOException  if an I/O error occurs when attempting a
              connection.
@since 1.4"
      end

      operation 7228699 "bind"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 530715 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds this socket to the specified local IP address and port number.

@param      host   an IP address that belongs to a local interface.
@param      port   the port number.
@exception  IOException  if an I/O error occurs when binding this socket."
      end

      operation 7228827 "listen"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum queue length for incoming connection indications 
(a request to connect) to the <code>count</code> argument. If a 
connection indication arrives when the queue is full, the 
connection is refused. 

@param      backlog   the maximum length of the queue.
@exception  IOException  if an I/O error occurs when creating the queue."
      end

      operation 7228955 "accept"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 931099 // SocketImpl
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a connection. 

@param      s   the accepted connection.
@exception  IOException  if an I/O error occurs when accepting the
              connection."
      end

      operation 7229083 "getInputStream"
	abstract protected return_type class_ref 179099 // InputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for this socket.

@return     a stream for reading from this socket.
@exception  IOException  if an I/O error occurs when creating the
              input stream."
      end

      operation 7229211 "getOutputStream"
	abstract protected return_type class_ref 183835 // OutputStream
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an output stream for this socket.

@return     an output stream for writing to this socket.
@exception  IOException  if an I/O error occurs when creating the
              output stream."
      end

      operation 7229339 "available"
	abstract protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bytes that can be read from this socket
without blocking.

@return     the number of bytes that can be read from this socket
            without blocking.
@exception  IOException  if an I/O error occurs when determining the
              number of bytes available."
      end

      operation 7229467 "close"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this socket. 

@exception  IOException  if an I/O error occurs when closing this socket."
      end

      operation 7229595 "shutdownInput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Places the input stream for this socket at \"end of stream\".
Any data sent to this socket is acknowledged and then
silently discarded.

If you read from a socket input stream after invoking 
shutdownInput() on the socket, the stream will return EOF.

@exception IOException if an I/O error occurs when shutting down this
socket.
@see java.net.Socket#shutdownOutput()
@see java.net.Socket#close()
@see java.net.Socket#setSoLinger(boolean, int)"
      end

      operation 7229723 "shutdownOutput"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the output stream for this socket.
For a TCP socket, any previously written data will be sent
followed by TCP's normal connection termination sequence.

If you write to a socket output stream after invoking 
shutdownOutput() on the socket, the stream will throw 
an IOException.

@exception IOException if an I/O error occurs when shutting down this
socket.
@see java.net.Socket#shutdownInput()
@see java.net.Socket#close()
@see java.net.Socket#setSoLinger(boolean, int)"
      end

      operation 7229851 "getFileDescriptor"
	protected return_type class_ref 904475 // FileDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>fd</code> field.

@return  the value of this socket's <code>fd</code> field.
@see     java.net.SocketImpl#fd"
      end

      operation 7229979 "getInetAddress"
	protected return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>address</code> field.

@return  the value of this socket's <code>address</code> field.
@see     java.net.SocketImpl#address"
      end

      operation 7230107 "getPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>port</code> field.

@return  the value of this socket's <code>port</code> field.
@see     java.net.SocketImpl#port"
      end

      operation 7230235 "supportsUrgentData"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not this SocketImpl supports sending 
urgent data. By default, false is returned
unless the method is overridden in a sub-class

@return  true if urgent data supported
@see     java.net.SocketImpl#address
@since 1.4"
      end

      operation 7230363 "sendUrgentData"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send one byte of urgent data on the socket.
The byte to be sent is the low eight bits of the parameter
@param data The byte of data to send
@exception IOException if there is an error
 sending the data.
@since 1.4"
      end

      operation 7230491 "getLocalPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>localport</code> field.

@return  the value of this socket's <code>localport</code> field.
@see     java.net.SocketImpl#localport"
      end

      operation 7230619 "setSocket"
	package explicit_return_type "void"
	nparams 1
	  param inout name "soc" type class_ref 235419 // Socket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7230747 "getSocket"
	package return_type class_ref 235419 // Socket
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7230875 "setServerSocket"
	package explicit_return_type "void"
	nparams 1
	  param inout name "soc" type class_ref 235163 // ServerSocket
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7231003 "getServerSocket"
	package return_type class_ref 235163 // ServerSocket
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7231131 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the address and port of this socket as a <code>String</code>.

@return  a string representation of this socket."
      end

      operation 7231259 "reset"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7231387 "setPerformancePreferences"
	protected explicit_return_type "void"
	nparams 3
	  param in name "connectionTime" explicit_type "int"
	  param in name "latency" explicit_type "int"
	  param in name "bandwidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets performance preferences for this socket.

<p> Sockets use the TCP/IP protocol by default.  Some implementations
may offer alternative protocols which have different performance
characteristics than TCP/IP.  This method allows the application to
express its own preferences as to how these tradeoffs should be made
when the implementation chooses from the available protocols.

<p> Performance preferences are described by three integers
whose values indicate the relative importance of short connection time,
low latency, and high bandwidth.  The absolute values of the integers
are irrelevant; in order to choose a protocol the values are simply
compared, with larger values indicating stronger preferences. Negative
values represent a lower priority than positive values. If the
application prefers short connection time over both low latency and high
bandwidth, for example, then it could invoke this method with the values
<tt>(1, 0, 0)</tt>.  If the application prefers high bandwidth above low
latency, and low latency above short connection time, then it could
invoke this method with the values <tt>(0, 1, 2)</tt>.

By default, this method does nothing, unless it is overridden in a
a sub-class.

@param  connectionTime
        An <tt>int</tt> expressing the relative importance of a short
        connection time

@param  latency
        An <tt>int</tt> expressing the relative importance of low
        latency

@param  bandwidth
        An <tt>int</tt> expressing the relative importance of high
        bandwidth
 
@since 1.5"
      end
    end

    class 931227 "SocketInputStream"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This stream extends FileInputStream to implement a
SocketInputStream. Note that this class should <b>NOT</b> be
public.

@version     1.34, 12/19/03
@author	Jonathan Payne
@author	Arthur van Hoff"
      classrelation 1818011 // <generalisation>
	relation 1818011 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1818011 // <generalisation>
	  b parent class_ref 635547 // FileInputStream
      end

      extra_member 164123 "initialization"
	
	cpp "" ""
	java "  static {
        init();
    }"
	php ""
	python ""
	idl ""
      end

      attribute 2785307 "eof"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1818139 // impl (<unidirectional association>)
	relation 1818139 --->
	  a role_name "impl" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1818139 // impl (<unidirectional association>)
	  b parent class_ref 930971 // PlainSocketImpl
      end

      attribute 2785435 "temp"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1818267 // socket (<unidirectional association>)
	relation 1818267 --->
	  a role_name "socket" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1818267 // socket (<unidirectional association>)
	  b parent class_ref 235419 // Socket
      end

      operation 7252123 "SocketInputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "impl" type class_ref 930971 // PlainSocketImpl
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SocketInputStream. Can only be called
by a Socket. This method needs to hang on to the owner Socket so
that the fd will not be closed.
@param impl the implemented socket input stream"
      end

      operation 7252251 "getChannel"
	public return_type class_ref 904731 // FileChannel
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.nio.channels.FileChannel FileChannel}
object associated with this file input stream.</p>

The <code>getChannel</code> method of <code>SocketInputStream</code>
returns <code>null</code> since it is a socket based stream.</p>

@return  the file channel associated with this file input stream

@since 1.4
@spec JSR-51"
      end

      operation 7252379 "socketRead0"
	private explicit_return_type "int"
	nparams 5
	  param inout name "fd" type class_ref 904475 // FileDescriptor
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into an array of bytes at the specified offset using
the received socket primitive. 
@param fd the FileDescriptor
@param b the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@param timeout the read timeout in ms
@return the actual number of bytes read, -1 is
         returned when the end of the stream is reached. 
@exception IOException If an I/O error has occurred."
      end

      operation 7252507 "read"
	public explicit_return_type "int"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into a byte array data from the socket. 
@param b the buffer into which the data is read
@return the actual number of bytes read, -1 is
         returned when the end of the stream is reached. 
@exception IOException If an I/O error has occurred. "
      end

      operation 7252635 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into a byte array <i>b</i> at offset <i>off</i>, 
<i>length</i> bytes of data.
@param b the buffer into which the data is read
@param off the start offset of the data
@param len the maximum number of bytes read
@return the actual number of bytes read, -1 is
         returned when the end of the stream is reached. 
@exception IOException If an I/O error has occurred."
      end

      operation 7252763 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a single byte from the socket. "
      end

      operation 7252891 "skip"
	public explicit_return_type "long"
	nparams 1
	  param in name "numbytes" explicit_type "long"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Skips n bytes of input.
@param n the number of bytes to skip
@return	the actual number of bytes skipped.
@exception IOException If an I/O error has occurred."
      end

      operation 7253019 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bytes that can be read without blocking.
@return the number of immediately available bytes"
      end

      attribute 2785563 "closing"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Closes the stream.
"
      end

      operation 7253147 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7253275 "setEOF"
	package explicit_return_type "void"
	nparams 1
	  param inout name "eof" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7253403 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides finalize, the fd is closed by the Socket."
      end

      operation 7253531 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end
    end

    class 931355 "InetAddressContainer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1816347 // addr (<unidirectional association>)
	relation 1816347 --->
	  a role_name "addr" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816347 // addr (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end
    end

    class 931483 "PortUnreachableException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that an ICMP Port Unreachable message has been
received on a connected datagram.

@since   1.4"
      classrelation 1816475 // <generalisation>
	relation 1816475 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1816475 // <generalisation>
	  b parent class_ref 273947 // SocketException
      end

      operation 7237403 "PortUnreachableException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PortUnreachableException</code> with a 
detail message.
@param msg the detail message"
      end

      operation 7237531 "PortUnreachableException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>PortUnreachableException</code> with no 
detailed message."
      end
    end

    class 931611 "Proxy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a proxy setting, typically a type (http, socks) and
a socket address. 
A <code>Proxy</code> is an immutable object.

@version 1.3, 08/09/03
@see     java.net.ProxySelector
@author Yingxian Wang
@author Jean-Christophe Collet
@since   1.5"
      class 931739 "Type"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2783259 "DIRECT"
	  public type class_ref 931739 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Represents a direct connection, or the absence of a proxy.
"
	end

	attribute 2783387 "HTTP"
	  public type class_ref 931739 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Represents proxy for high level protocols such as HTTP or FTP.
"
	end

	attribute 2783515 "SOCKS"
	  public type class_ref 931739 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Represents a SOCKS (V4 or V5) proxy."
	end
      end

      classrelation 1816731 // type (<unidirectional association>)
	relation 1816731 --->
	  a role_name "type" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816731 // type (<unidirectional association>)
	  b parent class_ref 931739 // Type
      end

      classrelation 1816859 // sa (<unidirectional association>)
	relation 1816859 --->
	  a role_name "sa" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816859 // sa (<unidirectional association>)
	  b parent class_ref 927387 // SocketAddress
      end

      classrelation 1816987 // NO_PROXY (<unidirectional association>)
	relation 1816987 --->
	  a role_name "NO_PROXY" init_value "=  new Proxy()" class_relation const_relation public
	    comment "
A proxy setting that represents a <code>DIRECT</code> connection,
basically telling the protocol handler not to use any proxying.
Used, for instance, to create sockets bypassing any other global
proxy settings (like SOCKS):
<P>
<code>Socket s = new Socket(Proxy.NO_PROXY);</code><br>
<P>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816987 // NO_PROXY (<unidirectional association>)
	  b parent class_ref 931611 // Proxy
      end

      operation 7237915 "Proxy"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates the proxy that represents a <code>DIRECT</code> connection."
      end

      operation 7238043 "Proxy"
	public explicit_return_type ""
	nparams 2
	  param inout name "type" type class_ref 931739 // Type
	  param inout name "sa" type class_ref 927387 // SocketAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an entry representing a PROXY connection.
Certain combinations are illegal. For instance, for types Http, and
Socks, a SocketAddress <b>must</b> be provided. 
<P>
Use the <code>Proxy.NO_PROXY</code> constant
for representing a direct connection.

@param type the <code>Type</code> of the proxy
@param sa the <code>SocketAddress</code> for that proxy
@throws IllegalArgumentException when the type and the address are
incompatible"
      end

      operation 7238171 "type"
	public return_type class_ref 931739 // Type
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the proxy type.

@return a Type representing the proxy type "
      end

      operation 7238299 "address"
	public return_type class_ref 927387 // SocketAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the socket address of the proxy, or 
<code>null</code> if its a direct connection.

@return a <code>SocketAddress</code> representing the socket end
        point of the proxy"
      end

      operation 7238427 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string representation of this Proxy.
This String is constructed by calling toString() on its type
and concatenating the toString() result from its address if any.

@return  a string representation of this object."
      end

      operation 7238555 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is <code>true</code> if and only if the argument is
not <code>null</code> and it represents the same proxy as
this object.
<p>
Two instances of <code>Proxy</code> represent the same
address if both the SocketAddresses and type are equal.

@param   obj   the object to compare against.
@return  <code>true</code> if the objects are the same;
         <code>false</code> otherwise.
@see java.net.InetSocketAddress#equals(java.lang.Object)"
      end

      operation 7238683 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this Proxy.

@return  a hash code value for this Proxy."
      end
    end

    class 931867 "ProxySelector"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Selects the proxy server to use, if any, when connecting to the
network resource referenced by a URL. A proxy selector is a
concrete sub-class of this class and is registered by invoking the
{@link java.net.ProxySelector#setDefault setDefault} method. The
currently registered proxy selector can be retrieved by calling
{@link java.net.ProxySelector#getDefault getDefault} method.

<p> When a proxy selector is registered, for instance, a subclass
of URLConnection class should call the {@link #select select}
method for each URL request so that the proxy selector can decide
if a direct, or proxied connection should be used. The {@link
#select select} method returns an iterator over a collection with
the preferred connection approach.

<p> If a connection cannot be established to a proxy (PROXY or
SOCKS) servers then the caller should call the proxy selector's
{@link #connectFailed connectFailed} method to notify the proxy
selector that the proxy server is unavailable. </p>

@version 1.3, 03/08/09
@author Yingxian Wang
@author Jean-Christophe Collet
@since 1.5"
      classrelation 1817115 // theProxySelector (<unidirectional association>)
	relation 1817115 --->
	  a role_name "theProxySelector" class_relation private
	    comment "
The system wide proxy selector that selects the proxy server to
use, if any, when connecting to a remote object referenced by
an URL.

@see #setDefault(ProxySelector)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817115 // theProxySelector (<unidirectional association>)
	  b parent class_ref 931867 // ProxySelector
      end

      extra_member 163995 "initialization"
	
	cpp "" ""
	java "  static { 
	try {
	    Class c = Class.forName(\"sun.net.spi.DefaultProxySelector\");
	    if (c != null && ProxySelector.class.isAssignableFrom(c)) {
		theProxySelector = (ProxySelector) c.newInstance();
	    }
	} catch (Exception e) {
	    theProxySelector = null;
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 7238811 "getDefault"
	class_operation public return_type class_ref 931867 // ProxySelector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system-wide proxy selector.

@throws  SecurityException
         If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"getProxySelector\")</tt>
@see #setDefault(ProxySelector)
@return the system-wide <code>ProxySelector</code> 
@since 1.5"
      end

      operation 7238939 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "ps" type class_ref 931867 // ProxySelector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets (or unsets) the system-wide proxy selector.

Note: non-standard procotol handlers may ignore this setting.

@param ps The HTTP proxy selector, or
		<code>null</code> to unset the proxy selector.

@throws  SecurityException
         If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"setProxySelector\")</tt>

@see #getDefault()
@since 1.5"
      end

      operation 7239067 "select"
	abstract public return_type class_ref 135579 // List
	nparams 1
	  param inout name "uri" type class_ref 904091 // URI
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Proxy> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects all the applicable proxies based on the protocol to
access the resource with and a destination address to access
the resource at.
The format of the URI is defined as follow:
<UL>
<LI>http URI for http connections</LI>
<LI>https URI for https connections
<LI>ftp URI for ftp connections</LI>
<LI><code>socket://host:port</code><br>
    for tcp client sockets connections</LI>
</UL>

@param	uri
		The URI that a connection is required to

@return	a List of Proxies. Each element in the
		the List is of type 
         {@link java.net.Proxy Proxy};
         when no proxy is available, the list will
         contain one element of type
         {@link java.net.Proxy Proxy}
         that represents a direct connection.
@throws IllegalArgumentException if either argument is null"
      end

      operation 7239195 "connectFailed"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 904091 // URI
	  param inout name "sa" type class_ref 927387 // SocketAddress
	  param inout name "ioe" type class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to indicate that a connection could not be established
to a proxy/socks server. An implementation of this method can
temporarily remove the proxies or reorder the sequence of
proxies returned by select(String, String), using the address
and they kind of IOException given.

@param   uri
         The URI that the proxy at sa failed to serve.
@param	sa
		The socket address of the proxy/SOCKS server

@param	ioe
		The I/O exception thrown when the connect failed.
@throws IllegalArgumentException if either argument is null"
      end
    end

    class 931995 "ResponseCache"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents implementations of URLConnection caches. An instance of
such a class can be registered with the system by doing
ResponseCache.setDefault(ResponseCache), and the system will call
this object in order to:

   <ul><li>store resource data which has been retrieved from an
           external source into the cache</li>
        <li>try to fetch a requested resource that may have been
           stored in the cache</li>
   </ul>

The ResponseCache implementation decides which resources
should be cached, and for how long they should be cached. If a
request resource cannot be retrieved from the cache, then the
protocol handlers will fetch the resource from its original
location.

The settings for URLConnection#useCaches controls whether the
protocol is allowed to use a cached response.

For more information on HTTP caching, see <a
href=\"http://www.ietf.org/rfc/rfc2616.txt\"\"><i>RFC&nbsp;2616: Hypertext
Transfer Protocol -- HTTP/1.1</i></a>

@version 1.1, 03/09/22
@author Yingxian Wang
@since 1.5"
      classrelation 1817243 // theResponseCache (<unidirectional association>)
	relation 1817243 --->
	  a role_name "theResponseCache" class_relation private
	    comment "
The system wide cache that provides access to a url
caching mechanism.

@see #setDefault(ResponseCache)
@see #getDefault()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817243 // theResponseCache (<unidirectional association>)
	  b parent class_ref 931995 // ResponseCache
      end

      operation 7239323 "getDefault"
	class_operation public return_type class_ref 931995 // ResponseCache
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system-wide response cache.

@throws  SecurityException
         If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"getResponseCache\")</tt>

@see #setDefault(ResponseCache)
@return the system-wide <code>ResponseCache</code>
@since 1.5"
      end

      operation 7239451 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "responseCache" type class_ref 931995 // ResponseCache
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets (or unsets) the system-wide cache.

Note: non-standard procotol handlers may ignore this setting.

@param responseCache The response cache, or
		<code>null</code> to unset the cache.

@throws  SecurityException
         If a security manager has been installed and it denies
{@link NetPermission}<tt>(\"setResponseCache\")</tt>

@see #getDefault()
@since 1.5"
      end

      operation 7239579 "get"
	abstract public return_type class_ref 926747 // CacheResponse
	nparams 3
	  param inout name "uri" type class_ref 904091 // URI
	  param in name "rqstMethod" explicit_type "String"
	  param inout name "rqstHeaders" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String, List<String>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the cached response based on the requesting uri,
request method and request headers. Typically this method is
called by the protocol handler before it sends out the request
to get the network resource. If a cached response is returned,
that resource is used instead.

@param uri a <code>URI</code> used to reference the requested
           network resource
@param rqstMethod a <code>String</code> representing the request
           method
@param rqstHeaders - a Map from request header
           field names to lists of field values representing
           the current request headers
@return a <code>CacheResponse</code> instance if available
         from cache, or null otherwise
@throws	IOException if an I/O error occurs 
@throws  IllegalArgumentException if any one of the arguments is null

@see     java.net.URLConnection#setUseCaches(boolean)
@see     java.net.URLConnection#getUseCaches()
@see     java.net.URLConnection#setDefaultUseCaches(boolean)
@see     java.net.URLConnection#getDefaultUseCaches()"
      end

      operation 7239707 "put"
	abstract public return_type class_ref 926619 // CacheRequest
	nparams 2
	  param inout name "uri" type class_ref 904091 // URI
	  param inout name "conn" type class_ref 730011 // URLConnection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The protocol handler calls this method after a resource has
been retrieved, and the ResponseCache must decide whether or
not to store the resource in its cache. If the resource is to
be cached, then put() must return a CacheRequest object which
contains a WriteableByteChannel that the protocol handler will
use to write the resource into the cache. If the resource is
not to be cached, then put must return null.

@param uri a <code>URI</code> used to reference the requested
           network resource
@param conn - a URLConnection instance that is used to fetch
           the response to be cached
@return a <code>CacheRequest</code> for recording the
           response to be cached. Null return indicates that
           the caller does not intend to cache the response.
@throws IOException if an I/O error occurs
@throws IllegalArgumentException if any one of the arguments is
           null"
      end
    end

    class 932123 "SecureCacheResponse"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a cache response originally retrieved through secure
means, such as TLS.

@since 1.5"
      classrelation 1817371 // <generalisation>
	relation 1817371 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1817371 // <generalisation>
	  b parent class_ref 926747 // CacheResponse
      end

      operation 7239835 "getCipherSuite"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cipher suite in use on the original connection that
retrieved the network resource.

@return a string representing the cipher suite"
      end

      operation 7239963 "getLocalCertificateChain"
	abstract public return_type class_ref 135579 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Certificate> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain that were sent to the server during
handshaking of the original connection that retrieved the
network resource.  Note: This method is useful only
when using certificate-based cipher suites.

@return an immutable List of Certificate representing the
          certificate chain that was sent to the server. If no
          certificate chain was sent, null will be returned.
@see #getLocalPrincipal()"
      end

      operation 7240091 "getServerCertificateChain"
	abstract public return_type class_ref 135579 // List
	nparams 0
	nexceptions 1
	  explicit_exception "SSLPeerUnverifiedException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Certificate> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the server's certificate chain, which was established as
part of defining the session in the original connection that
retrieved the network resource, from cache.  Note: This method
can be used only when using certificate-based cipher suites;
using it with non-certificate-based cipher suites, such as
Kerberos, will throw an SSLPeerUnverifiedException.

@return an immutable List of Certificate representing the server's
        certificate chain.
@throws SSLPeerUnverifiedException if the peer is not verified.
@see #getPeerPrincipal()"
      end

      operation 7240219 "getPeerPrincipal"
	abstract public return_type class_ref 527131 // Principal
	nparams 0
	nexceptions 1
	  explicit_exception "SSLPeerUnverifiedException"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the server's principal which was established as part of
defining the session during the original connection that
retrieved the network resource.

@return the server's principal. Returns an X500Principal of the
end-entity certiticate for X509-based cipher suites, and
KerberosPrincipal for Kerberos cipher suites.

@throws SSLPeerUnverifiedException if the peer was not verified.

@see #getServerCertificateChain()
@see #getLocalPrincipal()"
      end

      operation 7240347 "getLocalPrincipal"
	abstract public return_type class_ref 527131 // Principal
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal that was sent to the server during
handshaking in the original connection that retrieved the
network resource.

@return the principal sent to the server. Returns an X500Principal
of the end-entity certificate for X509-based cipher suites, and
KerberosPrincipal for Kerberos cipher suites. If no principal was
sent, then null is returned.

@see #getLocalCertificateChain()
@see #getPeerPrincipal()"
      end
    end

    class 932251 "SocketImplFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for socket implementations. It
is used by the classes <code>Socket</code> and
<code>ServerSocket</code> to create actual socket
implementations.

@author  Arthur van Hoff
@version 1.18, 12/19/03
@see     java.net.Socket
@see     java.net.ServerSocket
@since   JDK1.0"
      operation 7251995 "createSocketImpl"
	public return_type class_ref 931099 // SocketImpl
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>SocketImpl</code> instance.

@return  a new instance of <code>SocketImpl</code>.
@see     java.net.SocketImpl"
      end
    end

    class 932379 "SocketOutputStream"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This stream extends FileOutputStream to implement a
SocketOutputStream. Note that this class should <b>NOT</b> be
public.

@version     1.30, 12/19/03
@author 	Jonathan Payne
@author	Arthur van Hoff"
      classrelation 1818395 // <generalisation>
	relation 1818395 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1818395 // <generalisation>
	  b parent class_ref 904859 // FileOutputStream
      end

      extra_member 164251 "initialization"
	
	cpp "" ""
	java "  static {
        init();
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 1818523 // impl (<unidirectional association>)
	relation 1818523 --->
	  a role_name "impl" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1818523 // impl (<unidirectional association>)
	  b parent class_ref 930971 // PlainSocketImpl
      end

      attribute 2785691 "temp"
	private explicit_type "byte"
	multiplicity "[]"
	init_value "=  new byte[1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1818651 // socket (<unidirectional association>)
	relation 1818651 --->
	  a role_name "socket" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1818651 // socket (<unidirectional association>)
	  b parent class_ref 235419 // Socket
      end

      operation 7253659 "SocketOutputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "impl" type class_ref 930971 // PlainSocketImpl
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SocketOutputStream. Can only be called
by a Socket. This method needs to hang on to the owner Socket so
that the fd will not be closed.
@param impl the socket output stream inplemented"
      end

      operation 7253787 "getChannel"
	public return_type class_ref 904731 // FileChannel
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.nio.channels.FileChannel FileChannel}
object associated with this file output stream. </p>

The <code>getChannel</code> method of <code>SocketOutputStream</code>
returns <code>null</code> since it is a socket based stream.</p>

@return  the file channel associated with this file output stream

@since 1.4
@spec JSR-51"
      end

      operation 7253915 "socketWrite0"
	private explicit_return_type "void"
	nparams 4
	  param inout name "fd" type class_ref 904475 // FileDescriptor
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes to the socket.
@param fd the FileDescriptor
@param b the data to be written
@param off the start offset in the data
@param len the number of bytes that are written
@exception IOException If an I/O error has occurred."
      end

      operation 7254043 "socketWrite"
	private explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes to the socket with appropriate locking of the 
FileDescriptor.
@param b the data to be written
@param off the start offset in the data
@param len the number of bytes that are written
@exception IOException If an I/O error has occurred."
      end

      operation 7254171 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a byte to the socket. 
@param b the data to be written
@exception IOException If an I/O error has occurred. "
      end

      operation 7254299 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the contents of the buffer <i>b</i> to the socket.
@param b the data to be written
@exception SocketException If an I/O error has occurred. "
      end

      operation 7254427 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes <i>length</i> bytes from buffer <i>b</i> starting at 
offset <i>len</i>.
@param b the data to be written
@param off the start offset in the data
@param len the number of bytes that are written
@exception SocketException If an I/O error has occurred."
      end

      attribute 2785819 "closing"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Closes the stream.
"
      end

      operation 7254555 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7254683 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides finalize, the fd is closed by the Socket."
      end

      operation 7254811 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform class load-time initializations."
      end
    end

    class 932507 "SocketPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "public String toString() 
{
StringBuffer s = new StringBuffer(super.toString() + \"\\n\" +
\"cname = \" + cname + \"\\n\" +
\"wildcard = \" + wildcard + \"\\n\" +
\"invalid = \" + invalid + \"\\n\" +
\"portrange = \" + portrange[0] + \",\" + portrange[1] + \"\\n\");
if (addresses != null) for (int i=0; i<addresses.length; i++) {
s.append( addresses[i].getHostAddress());
s.append(\"\\n\");
} else {
s.append(\"(no addresses)\\n\");
}

return s.toString();
}

public static void main(String args[]) throws Exception {
SocketPermission this_ = new SocketPermission(args[0], \"connect\");
SocketPermission that_ = new SocketPermission(args[1], \"connect\");
System.out.println(\"-----\\n\");
System.out.println(\"this.implies(that) = \" + this_.implies(that_));
System.out.println(\"-----\\n\");
System.out.println(\"this = \"+this_);
System.out.println(\"-----\\n\");
System.out.println(\"that = \"+that_);
System.out.println(\"-----\\n\");

SocketPermissionCollection nps = new SocketPermissionCollection();
nps.add(this_);
nps.add(new SocketPermission(\"www-leland.stanford.edu\",\"connect\"));
nps.add(new SocketPermission(\"www-sun.com\",\"connect\"));
System.out.println(\"nps.implies(that) = \" + nps.implies(that_));
System.out.println(\"-----\\n\");
}



if (init'd with IP, key is IP as string)
if wildcard, its the wild card
else its the cname?


@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection

@version 1.63 09/25/07

@author Roland Schemers

@serial include"
      classrelation 1819163 // <generalisation>
	relation 1819163 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1819163 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 1819291 // <realization>
	relation 1819291 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1819291 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 1819419 // perms (<unidirectional association>)
	relation 1819419 --->
	  a role_name "perms" private
	    comment " Not serialized; see serialization section at end of class
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1819419 // perms (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 7258267 "SocketPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty SocketPermissions object.
"
      end

      operation 7258395 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the SocketPermissions. The key for the hash is
the name in the case of wildcards, or all the IP addresses.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      SocketPermission

@exception SecurityException - if this SocketPermissionCollection object
                               has been marked readonly"
      end

      operation 7258523 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this collection of permissions implies the permissions 
expressed in \"permission\".

@param p the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in 
the collection, false if not."
      end

      operation 7258651 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the SocketPermission objects in the 
container.

@return an enumeration of all the SocketPermission objects."
      end

      attribute 2789019 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2787186408602843674L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1819547 // serialPersistentFields (<unidirectional association>)
	relation 1819547 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"permissions\", Vector.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 
 The SocketPermissions for this set.
 @serial
 
 private Vector permissions;

@serialField permissions java.util.Vector
    A list of the SocketPermissions for this set.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1819547 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 7258779 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData \"permissions\" field (a Vector containing the SocketPermissions).


Writes the contents of the perms field out as a Vector for
serialization compatibility with earlier releases."
      end

      operation 7258907 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Vector of SocketPermissions and saves them in the perms field."
      end
    end

    class 932635 "SocketTimeoutException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Signals that a timeout has occurred on a socket read or accept.

@since   1.4"
      classrelation 1819675 // <generalisation>
	relation 1819675 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1819675 // <generalisation>
	  b parent class_ref 905755 // InterruptedIOException
      end

      operation 7259035 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new SocketTimeoutException with a detail 
message.
@param msg the detail message"
      end

      operation 7259163 "SocketTimeoutException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new SocketTimeoutException with no detailed message."
      end
    end

    class 932763 "SocksConsts"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Constants used by the SOCKS protocol implementation."
      attribute 2789147 "PROTO_VERS4"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789275 "PROTO_VERS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789403 "DEFAULT_PORT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1080"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789531 "NO_AUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789659 "GSSAPI"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789787 "USER_PASSW"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2789915 "NO_METHODS"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790043 "CONNECT"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790171 "BIND"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790299 "UDP_ASSOC"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790427 "IPV4"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790555 "DOMAIN_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790683 "IPV6"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790811 "REQUEST_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2790939 "GENERAL_FAILURE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791067 "NOT_ALLOWED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791195 "NET_UNREACHABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791323 "HOST_UNREACHABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791451 "CONN_REFUSED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791579 "TTL_EXPIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791707 "CMD_NOT_SUPPORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791835 "ADDR_TYPE_NOT_SUP"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 932891 "SocksSocketImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " import org.ietf.jgss.*; 

SOCKS (V4 & V5) TCP socket implementation (RFC 1928).
This is a subclass of PlainSocketImpl.
Note this class should <b>NOT</b> be public."
      classrelation 1819803 // <generalisation>
	relation 1819803 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1819803 // <generalisation>
	  b parent class_ref 930971 // PlainSocketImpl
      end

      classrelation 1819931 // <realization>
	relation 1819931 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1819931 // <realization>
	  b parent class_ref 932763 // SocksConsts
      end

      attribute 2791963 "server"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2792091 "port"
	private explicit_type "int"
	init_value "=  DEFAULT_PORT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1820059 // external_address (<unidirectional association>)
	relation 1820059 --->
	  a role_name "external_address" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1820059 // external_address (<unidirectional association>)
	  b parent class_ref 273819 // InetSocketAddress
      end

      attribute 2792219 "useV4"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1820187 // cmdsock (<unidirectional association>)
	relation 1820187 --->
	  a role_name "cmdsock" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1820187 // cmdsock (<unidirectional association>)
	  b parent class_ref 235419 // Socket
      end

      classrelation 1820315 // cmdIn (<unidirectional association>)
	relation 1820315 --->
	  a role_name "cmdIn" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1820315 // cmdIn (<unidirectional association>)
	  b parent class_ref 179099 // InputStream
      end

      classrelation 1820443 // cmdOut (<unidirectional association>)
	relation 1820443 --->
	  a role_name "cmdOut" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1820443 // cmdOut (<unidirectional association>)
	  b parent class_ref 183835 // OutputStream
      end

      operation 7259291 "SocksSocketImpl"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7259419 "SocksSocketImpl"
	package explicit_return_type ""
	nparams 2
	  param in name "server" explicit_type "String"
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7259547 "SocksSocketImpl"
	package explicit_return_type ""
	nparams 1
	  param inout name "proxy" type class_ref 931611 // Proxy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7259675 "setV4"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7259803 "privilegedConnect"
	private explicit_return_type "void"
	nparams 3
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7259931 "superConnectServer"
	private explicit_return_type "void"
	nparams 3
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7260059 "readSocksReply"
	private explicit_return_type "int"
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param in name "data" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7260187 "authenticate"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "method" explicit_type "byte"
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "out" type class_ref 903067 // BufferedOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides the authentication machanism required by the proxy."
      end

      operation 7260315 "connectV4"
	private explicit_return_type "void"
	nparams 3
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "endpoint" type class_ref 273819 // InetSocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7260443 "connect"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "endpoint" type class_ref 927387 // SocketAddress
	  param in name "timeout" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects the Socks Socket to the specified endpoint. It will first
connect to the SOCKS proxy and negotiate the access. If the proxy
grants the connections, then the connect is successful and all
further traffic will go to the \"real\" endpoint.

@param	endpoint	the <code>SocketAddress</code> to connect to.
@param	timeout		the timeout value in milliseconds
@throws	IOException	if the connection can't be established.
@throws	SecurityException if there is a security manager and it
				doesn't allow the connection
@throws  IllegalArgumentException if endpoint is null or a
         SocketAddress subclass not supported by this socket"
      end

      operation 7260571 "bindV4"
	private explicit_return_type "void"
	nparams 4
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "out" type class_ref 183835 // OutputStream
	  param inout name "baddr" type class_ref 530715 // InetAddress
	  param in name "lport" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7260699 "socksBind"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "saddr" type class_ref 273819 // InetSocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the Bind request to the SOCKS proxy. In the SOCKS protocol, bind
means \"accept incoming connection from\", so the SocketAddress is the
the one of the host we do accept connection from.

@param      addr   the Socket address of the remote host.
@exception  IOException  if an I/O error occurs when binding this socket."
      end

      operation 7260827 "acceptFrom"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "s" type class_ref 931099 // SocketImpl
	  param inout name "saddr" type class_ref 273819 // InetSocketAddress
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts a connection from a specific host. 

@param      s   the accepted connection.
@param	   saddr the socket address of the host we do accept
		     connection from
@exception  IOException  if an I/O error occurs when accepting the
              connection."
      end

      operation 7260955 "getInetAddress"
	protected return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>address</code> field.

@return  the value of this socket's <code>address</code> field.
@see     java.net.SocketImpl#address"
      end

      operation 7261083 "getPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this socket's <code>port</code> field.

@return  the value of this socket's <code>port</code> field.
@see     java.net.SocketImpl#port"
      end

      operation 7261211 "getLocalPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7261339 "close"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 933019 "URISyntaxException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Checked exception thrown to indicate that a string could not be parsed as a
URI reference.

@author Mark Reinhold
@version 1.5, 03/12/19
@see URI"
      classrelation 1821083 // <generalisation>
	relation 1821083 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1821083 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 2800795 "input"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2800923 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7274779 "URISyntaxException"
	public explicit_return_type ""
	nparams 3
	  param in name "input" explicit_type "String"
	  param in name "reason" explicit_type "String"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance from the given input string, reason, and error
index.

@param  input   The input string
@param  reason  A string explaining why the input could not be parsed
@param  index   The index at which the parse error occurred,
                or <tt>-1</tt> if the index is not known

@throws  NullPointerException
         If either the input or reason strings are <tt>null</tt>

@throws  IllegalArgumentException
         If the error index is less than <tt>-1</tt>"
      end

      operation 7274907 "URISyntaxException"
	public explicit_return_type ""
	nparams 2
	  param in name "input" explicit_type "String"
	  param in name "reason" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance from the given input string and reason.  The
resulting object will have an error index of <tt>-1</tt>.

@param  input   The input string
@param  reason  A string explaining why the input could not be parsed

@throws  NullPointerException
         If either the input or reason strings are <tt>null</tt>"
      end

      operation 7275035 "getInput"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input string.

@return  The input string"
      end

      operation 7275163 "getReason"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string explaining why the input string could not be parsed.

@return  The reason string"
      end

      operation 7275291 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an index into the input string of the position at which the
parse error occurred, or <tt>-1</tt> if this position is not known.

@return  The error index"
      end

      operation 7275419 "getMessage"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the parse error.  The resulting string
consists of the reason string followed by a colon character
(<tt>':'</tt>), a space, and the input string.  If the error index is
defined then the string <tt>\" at index \"</tt> followed by the index, in
decimal, is inserted after the reason string and before the colon
character.

@return  A string describing the parse error"
      end
    end

    class 933275 "URLStreamHandler"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class <code>URLStreamHandler</code> is the common
superclass for all stream protocol handlers. A stream protocol
handler knows how to make a connection for a particular protocol
type, such as <code>http</code>, <code>ftp</code>, or
<code>gopher</code>.
<p>
In most cases, an instance of a <code>URLStreamHandler</code>
subclass is not created directly by an application. Rather, the
first time a protocol name is encountered when constructing a
<code>URL</code>, the appropriate stream protocol handler is
automatically loaded.

@author  James Gosling
@version 1.68, 05/18/04
@see     java.net.URL#URL(java.lang.String, java.lang.String, int, java.lang.String)
@since   JDK1.0"
      operation 7284251 "openConnection"
	abstract protected return_type class_ref 730011 // URLConnection
	nparams 1
	  param inout name "u" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a connection to the object referenced by the
<code>URL</code> argument.
This method should be overridden by a subclass.

<p>If for the handler's protocol (such as HTTP or JAR), there
exists a public, specialized URLConnection subclass belonging
to one of the following packages or one of their subpackages:
java.lang, java.io, java.util, java.net, the connection
returned will be of that subclass. For example, for HTTP an
HttpURLConnection will be returned, and for JAR a
JarURLConnection will be returned.

@param      u   the URL that this connects to.
@return     a <code>URLConnection</code> object for the <code>URL</code>.
@exception  IOException  if an I/O error occurs while opening the
              connection."
      end

      operation 7284379 "openConnection"
	protected return_type class_ref 730011 // URLConnection
	nparams 2
	  param inout name "u" type class_ref 269467 // URL
	  param inout name "p" type class_ref 931611 // Proxy
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as openConnection(URL), except that the connection will be
made through the specified proxy; Protocol handlers that do not
support proxing will ignore the proxy parameter and make a
normal connection.

Calling this method preempts the system's default ProxySelector
settings.

@param      u   the URL that this connects to.
@param      p   the proxy through which the connection will be made.
                If direct connection is desired, Proxy.NO_PROXY
                should be specified.
@return     a <code>URLConnection</code> object for the <code>URL</code>.
@exception  IOException  if an I/O error occurs while opening the
              connection.
@exception  IllegalArgumentException if either u or p is null,
              or p has the wrong type.
@exception  UnsupportedOperationException if the subclass that
              implements the protocol doesn't support this method.
@since      1.5"
      end

      operation 7284507 "parseURL"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "u" type class_ref 269467 // URL
	  param in name "spec" explicit_type "String"
	  param in name "start" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string representation of a <code>URL</code> into a
<code>URL</code> object.
<p>
If there is any inherited context, then it has already been
copied into the <code>URL</code> argument.
<p>
The <code>parseURL</code> method of <code>URLStreamHandler</code>
parses the string representation as if it were an
<code>http</code> specification. Most URL protocol families have a
similar parsing. A stream protocol handler for a protocol that has
a different syntax must override this routine.

@param   u       the <code>URL</code> to receive the result of parsing
                 the spec.
@param   spec    the <code>String</code> representing the URL that
                 must be parsed.
@param   start   the character index at which to begin parsing. This is
                 just past the '<code>:</code>' (if there is one) that
                 specifies the determination of the protocol name.
@param   limit   the character position to stop parsing at. This is the
                 end of the string or the position of the
                 \"<code>#</code>\" character, if present. All information
                 after the sharp sign indicates an anchor."
      end

      operation 7284635 "getDefaultPort"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default port for a URL parsed by this handler. This method
is meant to be overidden by handlers with default port numbers.
@return the default port for a <code>URL</code> parsed by this handler."
      end

      operation 7284763 "equals"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "u1" type class_ref 269467 // URL
	  param inout name "u2" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides the default equals calculation. May be overidden by handlers
for other protocols that have different requirements for equals().
This method requires that none of its arguments is null. This is 
guaranteed by the fact that it is only called by java.net.URL class.
@param u1 a URL object
@param u2 a URL object
@return <tt>true</tt> if the two urls are 
considered equal, ie. they refer to the same 
fragment in the same file."
      end

      operation 7284891 "hashCode"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "u" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides the default hash calculation. May be overidden by handlers for
other protocols that have different requirements for hashCode
calculation.
@param u a URL object
@return an <tt>int</tt> suitable for hash table indexing"
      end

      operation 7285019 "sameFile"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "u1" type class_ref 269467 // URL
	  param inout name "u2" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two urls to see whether they refer to the same file,
i.e., having the same protocol, host, port, and path.
This method requires that none of its arguments is null. This is 
guaranteed by the fact that it is only called indirectly
by java.net.URL class.
@param u1 a URL object
@param u2 a URL object
@return true if u1 and u2 refer to the same file"
      end

      operation 7285147 "getHostAddress"
	protected return_type class_ref 530715 // InetAddress
	nparams 1
	  param inout name "u" type class_ref 269467 // URL
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the IP address of our host. An empty host field or a DNS failure
will result in a null return.

@param u a URL object
@return an <code>InetAddress</code> representing the host
IP address."
      end

      operation 7285275 "hostsEqual"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "u1" type class_ref 269467 // URL
	  param inout name "u2" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the host components of two URLs.
@param u1 the URL of the first host to compare 
@param u2 the URL of the second host to compare 
@return	<tt>true</tt> if and only if they 
are equal, <tt>false</tt> otherwise."
      end

      operation 7285403 "toExternalForm"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "u" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a <code>URL</code> of a specific protocol to a
<code>String</code>.

@param   u   the URL.
@return  a string representation of the <code>URL</code> argument."
      end

      operation 7285531 "setURL"
	protected explicit_return_type "void"
	nparams 9
	  param inout name "u" type class_ref 269467 // URL
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "authority" explicit_type "String"
	  param in name "userInfo" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "query" explicit_type "String"
	  param in name "ref" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields of the <code>URL</code> argument to the indicated values.
Only classes derived from URLStreamHandler are supposed to be able
to call the set method on a URL.

@param   u         the URL to modify.
@param   protocol  the protocol name.
@param   host      the remote host value for the URL.
@param   port      the port on the remote machine.
@param   authority the authority part for the URL.
@param   userInfo the userInfo part of the URL.
@param   path      the path component of the URL. 
@param   query     the query part for the URL.
@param   ref       the reference.
@exception	SecurityException	if the protocol handler of the URL is 
					different from this one
@see     java.net.URL#set(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)"
      end

      operation 7285659 "setURL"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "u" type class_ref 269467 // URL
	  param in name "protocol" explicit_type "String"
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "int"
	  param in name "file" explicit_type "String"
	  param in name "ref" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the fields of the <code>URL</code> argument to the indicated values.
Only classes derived from URLStreamHandler are supposed to be able
to call the set method on a URL.

@param   u         the URL to modify.
@param   protocol  the protocol name. This value is ignored since 1.2.
@param   host      the remote host value for the URL.
@param   port      the port on the remote machine.
@param   file      the file.
@param   ref       the reference.
@exception	SecurityException	if the protocol handler of the URL is 
					different from this one
@deprecated Use setURL(URL, String, String, int, String, String, String,
            String);"
      end
    end

    class 933403 "URLStreamHandlerFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines a factory for <code>URL</code> stream
protocol handlers.
<p>
It is used by the <code>URL</code> class to create a
<code>URLStreamHandler</code> for a specific protocol.

@author  Arthur van Hoff
@version 1.18, 12/19/03
@see     java.net.URL
@see     java.net.URLStreamHandler
@since   JDK1.0"
      operation 7285787 "createURLStreamHandler"
	public return_type class_ref 933275 // URLStreamHandler
	nparams 1
	  param in name "protocol" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>URLStreamHandler</code> instance with the specified
protocol.

@param   protocol   the protocol (\"<code>ftp</code>\",
                    \"<code>http</code>\", \"<code>nntp</code>\", etc.).
@return  a <code>URLStreamHandler</code> for the specific protocol.
@see     java.net.URLStreamHandler"
      end
    end

    class 933531 "Parts"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 2802715 "path"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2802843 "query"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2802971 "ref"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7280027 "Parts"
	package explicit_return_type ""
	nparams 1
	  param in name "file" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7280155 "getPath"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7280283 "getQuery"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7280411 "getRef"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 933659 "URLClassLoader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class loader is used to load classes and resources from a search
path of URLs referring to both JAR files and directories. Any URL that
ends with a '/' is assumed to refer to a directory. Otherwise, the URL
is assumed to refer to a JAR file which will be opened as needed.
<p>
The AccessControlContext of the thread that created the instance of
URLClassLoader will be used when subsequently loading classes and
resources.
<p>
The classes that are loaded are by default granted permission only to
access the URLs specified when the URLClassLoader was created.

@author  David Connelly
@version 1.87, 04/10/07
@since   1.2"
      classrelation 1822107 // <generalisation>
	relation 1822107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1822107 // <generalisation>
	  b parent class_ref 933787 // SecureClassLoader
      end

      attribute 2803355 "ucp"
	private explicit_type "URLClassPath"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The search path for classes and resources "
      end

      classrelation 1822235 // acc (<unidirectional association>)
	relation 1822235 --->
	  a role_name "acc" private
	    comment " The context to be used when loading classes and resources 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1822235 // acc (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end

      operation 7281435 "URLClassLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new URLClassLoader for the given URLs. The URLs will be
searched in the order specified for classes and resources after first
searching in the specified parent class loader. Any URL that ends with
a '/' is assumed to refer to a directory. Otherwise, the URL is assumed
to refer to a JAR file which will be downloaded and opened as needed.

<p>If there is a security manager, this method first
calls the security manager's <code>checkCreateClassLoader</code> method
to ensure creation of a class loader is allowed.

@param urls the URLs from which to load classes and resources
@param parent the parent class loader for delegation
@exception  SecurityException  if a security manager exists and its  
            <code>checkCreateClassLoader</code> method doesn't allow 
            creation of a class loader.
@see SecurityManager#checkCreateClassLoader"
      end

      operation 7281563 "URLClassLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "urls" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new URLClassLoader for the specified URLs using the
default delegation parent <code>ClassLoader</code>. The URLs will
be searched in the order specified for classes and resources after
first searching in the parent class loader. Any URL that ends with
a '/' is assumed to refer to a directory. Otherwise, the URL is
assumed to refer to a JAR file which will be downloaded and opened
as needed.

<p>If there is a security manager, this method first
calls the security manager's <code>checkCreateClassLoader</code> method
to ensure creation of a class loader is allowed.

@param urls the URLs from which to load classes and resources

@exception  SecurityException  if a security manager exists and its  
            <code>checkCreateClassLoader</code> method doesn't allow 
            creation of a class loader.
@see SecurityManager#checkCreateClassLoader"
      end

      operation 7281691 "URLClassLoader"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "factory" type class_ref 933403 // URLStreamHandlerFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new URLClassLoader for the specified URLs, parent
class loader, and URLStreamHandlerFactory. The parent argument
will be used as the parent class loader for delegation. The
factory argument will be used as the stream handler factory to
obtain protocol handlers when creating new URLs.

<p>If there is a security manager, this method first
calls the security manager's <code>checkCreateClassLoader</code> method
to ensure creation of a class loader is allowed.

@param urls the URLs from which to load classes and resources
@param parent the parent class loader for delegation
@param factory the URLStreamHandlerFactory to use when creating URLs

@exception  SecurityException  if a security manager exists and its  
            <code>checkCreateClassLoader</code> method doesn't allow 
            creation of a class loader.
@see SecurityManager#checkCreateClassLoader"
      end

      operation 7281819 "addURL"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for
classes and resources.

@param url the URL to be added to the search path of URLs"
      end

      operation 7281947 "getURLs"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the search path of URLs for loading classes and resources.
This includes the original list of URLs specified to the constructor,
along with any URLs subsequently appended by the addURL() method.
@return the search path of URLs for loading classes and resources."
      end

      operation 7282075 "findClass"
	protected return_type class_ref 164635 // Class
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds and loads the class with the specified name from the URL search
path. Any URLs referring to JAR files are loaded and opened as needed
until the class is found.

@param name the name of the class
@return the resulting class
@exception ClassNotFoundException if the class could not be found"
      end

      operation 7282203 "defineClass"
	private return_type class_ref 164635 // Class
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "res" explicit_type "Resource"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a Class using the class bytes obtained from the specified
Resource. The resulting Class must be resolved before it can be
used."
      end

      operation 7282331 "definePackage"
	protected return_type class_ref 528539 // Package
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "man" type class_ref 914587 // Manifest
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a new package by name in this ClassLoader. The attributes
contained in the specified Manifest will be used to obtain package
version and sealing information. For sealed packages, the additional
URL specifies the code source URL from which the package was loaded.

@param name  the package name
@param man   the Manifest containing package version and sealing
             information
@param url   the code source url for the package, or null if none
@exception   IllegalArgumentException if the package name duplicates
             an existing package either in this class loader or one
             of its ancestors
@return the newly defined Package object"
      end

      operation 7282459 "isSealed"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "man" type class_ref 914587 // Manifest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified package name is sealed according to the
given manifest."
      end

      operation 7282587 "findResource"
	public return_type class_ref 269467 // URL
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the resource with the specified name on the URL search path.

@param name the name of the resource
@return a <code>URL</code> for the resource, or <code>null</code> 
if the resource could not be found."
      end

      operation 7282715 "findResources"
	public return_type class_ref 144411 // Enumeration
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Enumeration of URLs representing all of the resources
on the URL search path having the specified name.

@param name the resource name
@exception IOException if an I/O exception occurs
@return an <code>Enumeration</code> of <code>URL</code>s"
      end

      operation 7282843 "getPermissions"
	protected return_type class_ref 285467 // PermissionCollection
	nparams 1
	  param inout name "codesource" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the permissions for the given codesource object.
The implementation of this method first calls super.getPermissions
and then adds permissions based on the URL of the codesource.
<p>
If the protocol is \"file\"
and the path specifies a file, then permission to read that
file is granted. If protocol is \"file\" and the path is
a directory, permission is granted to read all files
and (recursively) all files and subdirectories contained in
that directory.
<p>
If the protocol is not \"file\", then
to connect to and accept connections from the URL's host is granted.
@param codesource the codesource
@return the permissions granted to the codesource"
      end

      operation 7282971 "newInstance"
	class_operation public return_type class_ref 933659 // URLClassLoader
	nparams 2
	  param in name "urls" type class_ref 269467 // URL
	  param in name "parent" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of URLClassLoader for the specified
URLs and parent class loader. If a security manager is
installed, the <code>loadClass</code> method of the URLClassLoader
returned by this method will invoke the
<code>SecurityManager.checkPackageAccess</code> method before
loading the class.

@param urls the URLs to search for classes and resources
@param parent the parent class loader for delegation
@return the resulting class loader"
      end

      operation 7283099 "newInstance"
	class_operation public return_type class_ref 933659 // URLClassLoader
	nparams 1
	  param in name "urls" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of URLClassLoader for the specified
URLs and default parent class loader. If a security manager is
installed, the <code>loadClass</code> method of the URLClassLoader
returned by this method will invoke the
<code>SecurityManager.checkPackageAccess</code> before
loading the class.

@param urls the URLs to search for classes and resources
@return the resulting class loader"
      end
    end

    class 933915 "FactoryURLClassLoader"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1822363 // <generalisation>
	relation 1822363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1822363 // <generalisation>
	  b parent class_ref 933659 // URLClassLoader
      end

      operation 7283227 "FactoryURLClassLoader"
	package explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7283355 "FactoryURLClassLoader"
	package explicit_return_type ""
	nparams 1
	  param inout name "urls" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7283483 "loadClass"
	public return_type class_ref 164635 // Class
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "resolve" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 934043 "URLDecoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class for HTML form decoding. This class contains static methods
for decoding a String from the <CODE>application/x-www-form-urlencoded</CODE>
MIME format.
<p>
To conversion process is the reverse of that used by the URLEncoder class. It is assumed
that all characters in the encoded string are one of the following: 
&quot;<code>a</code>&quot; through &quot;<code>z</code>&quot;,
&quot;<code>A</code>&quot; through &quot;<code>Z</code>&quot;,
&quot;<code>0</code>&quot; through &quot;<code>9</code>&quot;, and
&quot;<code>-</code>&quot;, &quot;<code>_</code>&quot;,
&quot;<code>.</code>&quot;, and &quot;<code>*</code>&quot;. The
character &quot;<code>%</code>&quot; is allowed but is interpreted
as the start of a special escaped sequence.
<p>
The following rules are applied in the conversion:
<p>
<ul>
<li>The alphanumeric characters &quot;<code>a</code>&quot; through
    &quot;<code>z</code>&quot;, &quot;<code>A</code>&quot; through
    &quot;<code>Z</code>&quot; and &quot;<code>0</code>&quot; 
    through &quot;<code>9</code>&quot; remain the same.
<li>The special characters &quot;<code>.</code>&quot;,
    &quot;<code>-</code>&quot;, &quot;<code>*</code>&quot;, and
    &quot;<code>_</code>&quot; remain the same. 
<li>The plus sign &quot;<code>+</code>&quot; is converted into a
    space character &quot;<code>&nbsp;</code>&quot; .
<li>A sequence of the form \"<code>%<i>xy</i></code>\" will be
    treated as representing a byte where <i>xy</i> is the two-digit
    hexadecimal representation of the 8 bits. Then, all substrings
    that contain one or more of these byte sequences consecutively
    will be replaced by the character(s) whose encoding would result
    in those consecutive bytes. 
    The encoding scheme used to decode these characters may be specified, 
    or if unspecified, the default encoding of the platform will be used.
</ul>
<p>
There are two possible ways in which this decoder could deal with
illegal strings.  It could either leave illegal characters alone or
it could throw an <tt>{@link java.lang.IllegalArgumentException}</tt>.
Which approach the decoder takes is left to the
implementation.

@author  Mark Chamness
@author  Michael McCloskey
@version 1.27, 05/18/04
@since   1.2"
      attribute 2803483 "dfltEncName"
	class_attribute package explicit_type "String"
	init_value "=  URLEncoder.dfltEncName"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The platform default encoding"
      end

      operation 7283611 "decode"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Decodes a <code>x-www-form-urlencoded</code> string.
The platform's default encoding is used to determine what characters 
are represented by any consecutive sequences of the form 
\"<code>%<i>xy</i></code>\".
@param s the <code>String</code> to decode
@deprecated The resulting string may vary depending on the platform's
         default encoding. Instead, use the decode(String,String) method
         to specify the encoding.
@return the newly decoded <code>String</code>"
      end

      operation 7283739 "decode"
	class_operation public explicit_return_type "String"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "enc" explicit_type "String"
	nexceptions 1
	  exception class_ref 205723 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a <code>application/x-www-form-urlencoded</code> string using a specific 
encoding scheme.
The supplied encoding is used to determine
what characters are represented by any consecutive sequences of the
form \"<code>%<i>xy</i></code>\".
<p>
<em><strong>Note:</strong> The <a href=
\"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">
World Wide Web Consortium Recommendation</a> states that
UTF-8 should be used. Not doing so may introduce
incompatibilites.</em>

@param s the <code>String</code> to decode
@param enc   The name of a supported 
   <a href=\"../lang/package-summary.html#charenc\">character
   encoding</a>. 
@return the newly decoded <code>String</code>
@exception  UnsupportedEncodingException
            If character encoding needs to be consulted, but
            named character encoding is not supported
@see URLEncoder#encode(java.lang.String, java.lang.String)
@since 1.4"
      end
    end

    class 934171 "URLEncoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class for HTML form encoding. This class contains static methods
for converting a String to the <CODE>application/x-www-form-urlencoded</CODE> MIME
format. For more information about HTML form encoding, consult the HTML 
<A HREF=\"http://www.w3.org/TR/html4/\">specification</A>. 

<p>
When encoding a String, the following rules apply:

<p>
<ul>
<li>The alphanumeric characters &quot;<code>a</code>&quot; through
    &quot;<code>z</code>&quot;, &quot;<code>A</code>&quot; through
    &quot;<code>Z</code>&quot; and &quot;<code>0</code>&quot; 
    through &quot;<code>9</code>&quot; remain the same.
<li>The special characters &quot;<code>.</code>&quot;,
    &quot;<code>-</code>&quot;, &quot;<code>*</code>&quot;, and
    &quot;<code>_</code>&quot; remain the same. 
<li>The space character &quot;<code>&nbsp;</code>&quot; is
    converted into a plus sign &quot;<code>+</code>&quot;.
<li>All other characters are unsafe and are first converted into
    one or more bytes using some encoding scheme. Then each byte is
    represented by the 3-character string
    &quot;<code>%<i>xy</i></code>&quot;, where <i>xy</i> is the
    two-digit hexadecimal representation of the byte. 
    The recommended encoding scheme to use is UTF-8. However, 
    for compatibility reasons, if an encoding is not specified, 
    then the default encoding of the platform is used.
</ul>

<p>
For example using UTF-8 as the encoding scheme the string &quot;The
string &#252;@foo-bar&quot; would get converted to
&quot;The+string+%C3%BC%40foo-bar&quot; because in UTF-8 the character
&#252; is encoded as two bytes C3 (hex) and BC (hex), and the
character @ is encoded as one byte 40 (hex).

@author  Herb Jellinek
@version 1.31, 12/19/06
@since   JDK1.0"
      classrelation 1822491 // dontNeedEncoding (<unidirectional association>)
	relation 1822491 --->
	  a role_name "dontNeedEncoding" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1822491 // dontNeedEncoding (<unidirectional association>)
	  b parent class_ref 138395 // BitSet
      end

      attribute 2803611 "caseDiff"
	class_attribute const_attribute package explicit_type "int"
	init_value "=  ('a' - 'A')"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2803739 "dfltEncName"
	class_attribute package explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 164507 "initialization"
	
	cpp "" ""
	java "  static {

	/* The list of characters that are not encoded has been
	 * determined as follows:
	 *
	 * RFC 2396 states:
	 * -----
	 * Data characters that are allowed in a URI but do not have a
	 * reserved purpose are called unreserved.  These include upper
	 * and lower case letters, decimal digits, and a limited set of
	 * punctuation marks and symbols. 
	 *
	 * unreserved  = alphanum | mark
	 *
	 * mark        = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" | \"(\" | \")\"
	 *
	 * Unreserved characters can be escaped without changing the
	 * semantics of the URI, but this should not be done unless the
	 * URI is being used in a context that does not allow the
	 * unescaped character to appear.
	 * -----
	 *
	 * It appears that both Netscape and Internet Explorer escape
	 * all special characters from this list with the exception
	 * of \"-\", \"_\", \".\", \"*\". While it is not clear why they are
	 * escaping the other characters, perhaps it is safest to
	 * assume that there might be contexts in which the others
	 * are unsafe if not escaped. Therefore, we will use the same
	 * list. It is also noteworthy that this is consistent with
	 * O'Reilly's \"HTML: The Definitive Guide\" (page 164).
	 *
	 * As a last note, Intenet Explorer does not encode the \"@\"
	 * character which is clearly not unreserved according to the
	 * RFC. We are being consistent with the RFC in this matter,
	 * as is Netscape.
	 *
	 */

	dontNeedEncoding = new BitSet(256);
	int i;
	for (i = 'a'; i <= 'z'; i++) {
	    dontNeedEncoding.set(i);
	}
	for (i = 'A'; i <= 'Z'; i++) {
	    dontNeedEncoding.set(i);
	}
	for (i = '0'; i <= '9'; i++) {
	    dontNeedEncoding.set(i);
	}
	dontNeedEncoding.set(' '); /* encoding a space to a + is done
				    * in the encode() method */
	dontNeedEncoding.set('-');
	dontNeedEncoding.set('_');
	dontNeedEncoding.set('.');
	dontNeedEncoding.set('*');

    	dfltEncName = (String)AccessController.doPrivileged (
	    new GetPropertyAction(\"file.encoding\")
    	);
    }"
	php ""
	python ""
	idl ""
      end

      operation 7283867 "URLEncoder"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "You can't call the constructor."
      end

      operation 7283995 "encode"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Translates a string into <code>x-www-form-urlencoded</code>
format. This method uses the platform's default encoding
as the encoding scheme to obtain the bytes for unsafe characters.

@param   s   <code>String</code> to be translated.
@deprecated The resulting string may vary depending on the platform's
            default encoding. Instead, use the encode(String,String)
            method to specify the encoding.
@return  the translated <code>String</code>."
      end

      operation 7284123 "encode"
	class_operation public explicit_return_type "String"
	nparams 2
	  param in name "s" explicit_type "String"
	  param in name "enc" explicit_type "String"
	nexceptions 1
	  exception class_ref 205723 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates a string into <code>application/x-www-form-urlencoded</code>
format using a specific encoding scheme. This method uses the
supplied encoding scheme to obtain the bytes for unsafe
characters.
<p>
<em><strong>Note:</strong> The <a href=
\"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">
World Wide Web Consortium Recommendation</a> states that
UTF-8 should be used. Not doing so may introduce
incompatibilites.</em>

@param   s   <code>String</code> to be translated.
@param   enc   The name of a supported 
   <a href=\"../lang/package-summary.html#charenc\">character
   encoding</a>.
@return  the translated <code>String</code>.
@exception  UnsupportedEncodingException
            If the named encoding is not supported
@see URLDecoder#decode(java.lang.String, java.lang.String)
@since 1.4"
      end
    end
  end

  deploymentview 167067 "net"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 697499 "Authenticator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 926107 // Authenticator
      end
      comment "@(#)Authenticator.java	1.32 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 697627 "SocketException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 273947 // SocketException
      end
      comment "@(#)SocketException.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 697755 "BindException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 926491 // BindException
      end
      comment "@(#)BindException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 697883 "CacheRequest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 926619 // CacheRequest
      end
      comment "@(#)CacheRequest.java	1.1 03/09/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698011 "CacheResponse"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.util.Map;
import java.util.List;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 926747 // CacheResponse
      end
      comment "@(#)CacheResponse.java	1.1 03/09/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698139 "ConnectException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 926875 // ConnectException
      end
      comment "@(#)ConnectException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698267 "ContentHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 927003 // ContentHandler
      end
      comment "@(#)ContentHandler.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698395 "ContentHandlerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 927131 // ContentHandlerFactory
      end
      comment "@(#)ContentHandlerFactory.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698523 "CookieHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.List;
import java.io.IOException;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 927259 // CookieHandler
      end
      comment "@(#)CookieHandler.java	1.4 03/08/09

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698651 "DatagramPacket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 544667 // DatagramPacket
      end
      comment "@(#)DatagramPacket.java	1.43 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698779 "DatagramSocket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.nio.channels.DatagramChannel;
import java.security.AccessController;
import java.security.PrivilegedExceptionAction;
${definition}"
      associated_classes
	class_ref 544411 // DatagramSocket
      end
      comment "@(#)DatagramSocket.java	1.96 04/03/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 698907 "SocketOptions"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 927899 // SocketOptions
      end
      comment "@(#)SocketOptions.java	1.32 04/01/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699035 "DatagramSocketImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InterruptedIOException;
${definition}"
      associated_classes
	class_ref 927515 // DatagramSocketImpl
      end
      comment "@(#)DatagramSocketImpl.java	1.32 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699163 "DatagramSocketImplFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 927771 // DatagramSocketImplFactory
      end
      comment "@(#)DatagramSocketImplFactory.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699291 "FileNameMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 928155 // FileNameMap
      end
      comment "@(#)FileNameMap.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699419 "HttpRetryException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 928283 // HttpRetryException
      end
      comment "@(#)HttpRetryException.java	1.1 04/04/20

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699547 "URLConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Hashtable;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Collections;
import java.util.Map;
import java.util.List;
import java.security.Permission;
import java.security.AccessController;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 730011 // URLConnection
	class_ref 928667 // UnknownContentHandler
      end
      comment "@(#)URLConnection.java	1.102 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699675 "HttpURLConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.security.Permission;
import java.util.Date;
${definition}"
      associated_classes
	class_ref 928411 // HttpURLConnection
      end
      comment "@(#)HttpURLConnection.java	1.42 04/06/07

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699803 "InetAddress"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Random;
import java.util.Iterator;
import java.util.LinkedList;
import java.security.AccessController;
import java.io.ObjectStreamException;
import java.io.IOException;
import sun.security.action.*;
import sun.net.InetAddressCachePolicy;
import sun.net.util.IPAddressUtil;
import sun.misc.Service;
import sun.net.spi.nameservice.*;
${definition}"
      associated_classes
	class_ref 530715 // InetAddress
	class_ref 929435 // InetAddressImplFactory
      end
      comment "@(#)InetAddress.java	1.110 07/09/06 

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 699931 "Inet4Address"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.io.ObjectStreamException;
import sun.security.action.*;
${definition}"
      associated_classes
	class_ref 928923 // Inet4Address
      end
      comment "@(#)Inet4Address.java	1.28 04/02/12

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700059 "InetAddressImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 929179 // InetAddressImpl
      end
      comment "@(#)InetAddressImpl.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700187 "Inet4AddressImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 929563 // Inet4AddressImpl
      end
      comment "@(#)Inet4AddressImpl.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700315 "Inet6Address"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.ObjectStreamException;
import java.io.InvalidObjectException;
import sun.security.action.*;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 929691 // Inet6Address
      end
      comment "@(#)Inet6Address.java	1.36 07/06/08

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700443 "Inet6AddressImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 929819 // Inet6AddressImpl
      end
      comment "@(#)Inet6AddressImpl.java	1.7 04/01/13 

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700571 "SocketAddress"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 927387 // SocketAddress
      end
      comment "@(#)SocketAddress.java	1.5 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700699 "InetSocketAddress"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectInputStream;
import java.io.IOException;
import java.io.InvalidObjectException;
${definition}"
      associated_classes
	class_ref 273819 // InetSocketAddress
      end
      comment "@(#)InetSocketAddress.java	1.21 05/08/04

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700827 "JarURLConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.jar.JarFile;
import java.util.jar.JarEntry;
import java.util.jar.Attributes;
import java.util.jar.Manifest;
import java.security.Permission;
import sun.net.www.ParseUtil;
${definition}"
      associated_classes
	class_ref 929947 // JarURLConnection
      end
      comment "@(#)JarURLConnection.java	1.33 05/01/04

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 700955 "MalformedURLException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 280091 // MalformedURLException
      end
      comment "@(#)MalformedURLException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701083 "MulticastSocket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InterruptedIOException;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 930459 // MulticastSocket
      end
      comment "@(#)MulticastSocket.java	1.71 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701211 "NetPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.StringTokenizer;
${definition}"
      associated_classes
	class_ref 930587 // NetPermission
      end
      comment "@(#)NetPermission.java	1.49 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701339 "NetworkInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.SocketException;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import sun.security.action.*;
import java.security.AccessController;
${definition}"
      associated_classes
	class_ref 928027 // NetworkInterface
      end
      comment "@(#)NetworkInterface.java	1.17 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701467 "NoRouteToHostException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 930715 // NoRouteToHostException
      end
      comment "@(#)NoRouteToHostException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701595 "PasswordAuthentication"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 926363 // PasswordAuthentication
      end
      comment "@(#)PasswordAuthentication.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701723 "PlainDatagramSocketImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 930843 // PlainDatagramSocketImpl
      end
      comment "@(#)PlainDatagramSocketImpl.java	1.39 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701851 "SocketImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 931099 // SocketImpl
      end
      comment "@(#)SocketImpl.java	1.42 04/03/25

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 701979 "PlainSocketImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.InterruptedIOException;
import java.io.FileDescriptor;
import java.io.ByteArrayOutputStream;
import sun.net.ConnectionResetException;
${definition}"
      associated_classes
	class_ref 930971 // PlainSocketImpl
	class_ref 931355 // InetAddressContainer
      end
      comment "@(#)PlainSocketImpl.java	1.65 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702107 "PortUnreachableException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 931483 // PortUnreachableException
      end
      comment "@(#)PortUnreachableException.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702235 "ProtocolException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 928795 // ProtocolException
      end
      comment "@(#)ProtocolException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702363 "Proxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 931611 // Proxy
      end
      comment "@(#)Proxy.java	1.3 03/08/09

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702491 "ProxySelector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.List;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 931867 // ProxySelector
      end
      comment "@(#)ProxySelector.java	1.3 03/08/09

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702619 "ResponseCache"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Map;
import java.util.List;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 931995 // ResponseCache
      end
      comment "@(#)ResponseCache.java	1.1 03/09/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702747 "SecureCacheResponse"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.cert.Certificate;
import javax.net.ssl.SSLPeerUnverifiedException;
import java.security.Principal;
import java.util.List;
${definition}"
      associated_classes
	class_ref 932123 // SecureCacheResponse
      end
      comment "@(#)SecureCacheResponse.java	1.1 03/09/22

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 702875 "ServerSocket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.channels.ServerSocketChannel;
import java.security.AccessController;
import java.security.PrivilegedExceptionAction;
${definition}"
      associated_classes
	class_ref 235163 // ServerSocket
      end
      comment "@(#)ServerSocket.java	1.86 04/05/24

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703003 "Socket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.nio.channels.SocketChannel;
import java.security.AccessController;
import java.security.PrivilegedExceptionAction;
import java.security.PrivilegedAction;
${definition}"
      associated_classes
	class_ref 235419 // Socket
      end
      comment "@(#)Socket.java	1.112 07/09/11

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703131 "SocketImplFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 932251 // SocketImplFactory
      end
      comment "@(#)SocketImplFactory.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703259 "SocketInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import sun.net.ConnectionResetException;
${definition}"
      associated_classes
	class_ref 931227 // SocketInputStream
      end
      comment "@(#)SocketInputStream.java	1.34 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703387 "SocketOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
${definition}"
      associated_classes
	class_ref 932379 // SocketOutputStream
      end
      comment "@(#)SocketOutputStream.java	1.30 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703515 "SocketPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Vector;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringTokenizer;
import java.net.InetAddress;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.Policy;
import java.io.Serializable;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import sun.net.util.IPAddressUtil;
import sun.security.util.SecurityConstants;
import sun.security.util.Debug;
${definition}"
      associated_classes
	class_ref 843035 // SocketPermission
	class_ref 932507 // SocketPermissionCollection
      end
      comment "@(#)SocketPermission.java	1.63 07/09/25

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703643 "SocketTimeoutException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 932635 // SocketTimeoutException
      end
      comment "@(#)SocketTimeoutException.java	1.5 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703771 "SocksConsts"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 932763 // SocksConsts
      end
      comment "@(#)SocksConsts.java	1.5 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 703899 "SocksSocketImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.BufferedOutputStream;
import java.security.AccessController;
import java.security.PrivilegedExceptionAction;
import java.util.prefs.Preferences;
import sun.net.www.ParseUtil;
${definition}"
      associated_classes
	class_ref 932891 // SocksSocketImpl
      end
      comment "@(#)SocksSocketImpl.java	1.18 05/08/04

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704027 "UnknownHostException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 272667 // UnknownHostException
      end
      comment "@(#)UnknownHostException.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704155 "UnknownServiceException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 928539 // UnknownServiceException
      end
      comment "@(#)UnknownServiceException.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704283 "URI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CoderResult;
import java.nio.charset.CodingErrorAction;
import java.nio.charset.CharacterCodingException;
import sun.nio.cs.ThreadLocalCoders;
import sun.text.Normalizer;
import java.lang.Character;
import java.lang.NullPointerException;
${definition}"
      associated_classes
	class_ref 904091 // URI
      end
      comment "@(#)URI.java	1.40 05/11/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704411 "URISyntaxException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 933019 // URISyntaxException
      end
      comment "@(#)URISyntaxException.java	1.5 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704539 "URL"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Hashtable;
import java.util.StringTokenizer;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 269467 // URL
	class_ref 933531 // Parts
      end
      comment "@(#)URL.java	1.130 04/08/25

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704795 "URLClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.io.File;
import java.io.FilePermission;
import java.io.InputStream;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLStreamHandlerFactory;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import java.util.jar.Manifest;
import java.util.jar.Attributes;
import java.util.jar.Attributes.Name;
import java.security.CodeSigner;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.SecureClassLoader;
import java.security.CodeSource;
import java.security.Permission;
import java.security.PermissionCollection;
import sun.misc.Resource;
import sun.misc.URLClassPath;
import sun.net.www.ParseUtil;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 933659 // URLClassLoader
	class_ref 933915 // FactoryURLClassLoader
      end
      comment "@(#)URLClassLoader.java	1.87 07/04/10

Copyright 2007 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704923 "URLDecoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
${definition}"
      associated_classes
	class_ref 934043 // URLDecoder
      end
      comment "@(#)URLDecoder.java	1.27 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 705051 "URLEncoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.io.CharArrayWriter;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.BitSet;
import java.security.AccessController;
import java.security.PrivilegedAction;
import sun.security.action.GetBooleanAction;
import sun.security.action.GetPropertyAction;
${definition}"
      associated_classes
	class_ref 934171 // URLEncoder
      end
      comment "@(#)URLEncoder.java	1.31 06/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 705179 "URLStreamHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.File;
import java.io.OutputStream;
import java.util.Hashtable;
import sun.net.util.IPAddressUtil;
import sun.net.www.ParseUtil;
${definition}"
      associated_classes
	class_ref 933275 // URLStreamHandler
      end
      comment "@(#)URLStreamHandler.java	1.68 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 705307 "URLStreamHandlerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 933403 // URLStreamHandlerFactory
      end
      comment "@(#)URLStreamHandlerFactory.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
