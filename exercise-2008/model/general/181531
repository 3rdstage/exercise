format 66
"interfaces" // src::java::security::interfaces
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/security/interfaces"
  java_package "java.security.interfaces"
  classview 176283 "interfaces"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 975259 "DSAKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to a DSA public or private key. DSA (Digital Signature
Algorithm) is defined in NIST's FIPS-186.

@see DSAParams
@see java.security.Key
@see java.security.Signature

@version 1.17 03/12/19
@author Benjamin Renaud 
@author Josh Bloch "
      operation 7678235 "getParams"
	public return_type class_ref 975387 // DSAParams
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the DSA-specific key parameters. These parameters are
never secret.

@return the DSA-specific key parameters.

@see DSAParams"
      end
    end

    class 975387 "DSAParams"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface to a DSA-specific set of key parameters, which defines a 
DSA <em>key family</em>. DSA (Digital Signature Algorithm) is defined 
in NIST's FIPS-186.

@see DSAKey
@see java.security.Key
@see java.security.Signature

@version 1.20 03/12/19
@author Benjamin Renaud 
@author Josh Bloch "
      operation 7678619 "getP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime, <code>p</code>.

@return the prime, <code>p</code>. "
      end

      operation 7678747 "getQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subprime, <code>q</code>.

@return the subprime, <code>q</code>. "
      end

      operation 7678875 "getG"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base, <code>g</code>.

@return the base, <code>g</code>. "
      end
    end

    class 975515 "DSAKeyPairGenerator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface to an object capable of generating DSA key pairs. 

<p>The <code>initialize</code> methods may each be called any number 
of times. If no <code>initialize</code> method is called on a 
DSAKeyPairGenerator, the default is to generate 1024-bit keys, using 
precomputed p, q and g parameters and an instance of SecureRandom as 
the random bit source.

<p>Users wishing to indicate DSA-specific parameters, and to generate a key 
pair suitable for use with the DSA algorithm typically

<ol>

<li>Get a key pair generator for the DSA algorithm by calling the 
KeyPairGenerator <code>getInstance</code> method with \"DSA\" 
as its argument.<p> 

<li>Initialize the generator by casting the result to a DSAKeyPairGenerator
and calling one of the 
<code>initialize</code> methods from this DSAKeyPairGenerator interface.<p>

<li>Generate a key pair by calling the <code>generateKeyPair</code> 
method from the KeyPairGenerator class.

</ol> 

<p>Note: it is not always necessary to do do algorithm-specific
initialization for a DSA key pair generator. That is, it is not always
necessary to call an <code>initialize</code> method in this interface.
Algorithm-independent initialization using the <code>initialize</code> method
in the KeyPairGenerator
interface is all that is needed when you accept defaults for algorithm-specific
parameters.

@see java.security.KeyPairGenerator"
      operation 7678363 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 975387 // DSAParams
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator using p, q and g, the DSA
family parameters.

@param params the parameters to use to generate the keys.

@param random the random bit source to use to generate 
key bits.

@exception InvalidParameterException if the parameters passed are
invalid or null."
      end

      operation 7678491 "initialize"
	public explicit_return_type "void"
	nparams 3
	  param in name "modlen" explicit_type "int"
	  param inout name "genParams" explicit_type "boolean"
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator for a given modulus length,
without parameters. 

<p>If <code>genParams</code> is true, this method will generate new 
p, q and g parameters. If it is false, the method will use precomputed
parameters for the modulus length requested. If there are no
precomputed parameters for that modulus length, an exception will be 
thrown. It is guaranteed that there will always be
default parameters for modulus lengths of 512 and 1024 bits.

@param modlen the modulus length, in bits. Valid values are any
multiple of 8 between 512 and 1024, inclusive.

@param random the random bit source to use to generate 
key bits.

@param genParams whether or not to generate new parameters for
the modulus length requested.

@exception InvalidParameterException if the modulus length is not
between 512 and 1024, or if genParams is false and there are
not precomputed parameters for the modulus length requested.  "
      end
    end

    class 975643 "DSAPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The standard interface to a DSA private key. DSA (Digital Signature
Algorithm) is defined in NIST's FIPS-186.

@see java.security.Key
@see java.security.Signature
@see DSAKey
@see DSAPublicKey

@version 1.19 03/12/19
@author Benjamin Renaud"
      classrelation 1895707 // <generalisation>
	relation 1895707 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1895707 // <generalisation>
	  b parent class_ref 975259 // DSAKey
      end

      classrelation 1895835 // <generalisation>
	relation 1895835 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1895835 // <generalisation>
	  b parent class_ref 964123 // PrivateKey
      end

      attribute 2863003 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  7776497482533790279L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1

The class fingerprint that is set to indicate 
serialization compatibility with a previous 
version of the class.
"
      end

      operation 7679003 "getX"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the private key, <code>x</code>.

@return the value of the private key, <code>x</code>."
      end
    end

    class 975771 "DSAPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to a DSA public key. DSA (Digital Signature Algorithm)
is defined in NIST's FIPS-186.

@see java.security.Key
@see java.security.Signature
@see DSAKey
@see DSAPrivateKey

@version 1.21 03/12/19
@author Benjamin Renaud"
      classrelation 1895963 // <generalisation>
	relation 1895963 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1895963 // <generalisation>
	  b parent class_ref 975259 // DSAKey
      end

      classrelation 1896091 // <generalisation>
	relation 1896091 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896091 // <generalisation>
	  b parent class_ref 962075 // PublicKey
      end

      attribute 2863131 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  1234526332779022332L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1

The class fingerprint that is set to indicate 
serialization compatibility with a previous 
version of the class.
"
      end

      operation 7679131 "getY"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the public key, <code>y</code>.

@return the value of the public key, <code>y</code>."
      end
    end

    class 975899 "ECKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an elliptic curve (EC) key.

@author Valerie Peng

@version 1.2, 12/19/03
@since 1.5"
      operation 7679259 "getParams"
	public return_type class_ref 976027 // ECParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the domain parameters associated
with this key. The domain parameters are 
either explicitly specified or implicitly 
created during key generation.
@return the associated domain parameters."
      end
    end

    class 976155 "ECPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an elliptic curve (EC) private key.

@author Valerie Peng

@version 1.3, 12/19/03

@see PrivateKey
@see ECKey

@since 1.5"
      classrelation 1896219 // <generalisation>
	relation 1896219 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896219 // <generalisation>
	  b parent class_ref 964123 // PrivateKey
      end

      classrelation 1896347 // <generalisation>
	relation 1896347 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896347 // <generalisation>
	  b parent class_ref 975899 // ECKey
      end

      attribute 2863259 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  -7896394956925609184L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The class fingerprint that is set to indicate
serialization compatibility.
"
      end

      operation 7679387 "getS"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private value S.
@return the private value S."
      end
    end

    class 976283 "ECPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an elliptic curve (EC) public key.

@author Valerie Peng

@version 1.3, 12/19/03

@see PublicKey
@see ECKey
@see java.security.spec.ECPoint

@since 1.5"
      classrelation 1896475 // <generalisation>
	relation 1896475 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896475 // <generalisation>
	  b parent class_ref 962075 // PublicKey
      end

      classrelation 1896603 // <generalisation>
	relation 1896603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896603 // <generalisation>
	  b parent class_ref 975899 // ECKey
      end

      attribute 2863387 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  -3314988629879632826L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The class fingerprint that is set to indicate
serialization compatibility.
"
      end

      operation 7679515 "getW"
	public return_type class_ref 976411 // ECPoint
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public point W.
@return the public point W."
      end
    end

    class 976539 "RSAKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an RSA public or private key.

@author Jan Luehe
@version 1.6 12/19/03

@see RSAPublicKey
@see RSAPrivateKey

@since 1.3"
      operation 7679643 "getModulus"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus.
		
@return the modulus"
      end
    end

    class 976667 "RSAMultiPrimePrivateCrtKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an RSA multi-prime private key, as defined in the 
PKCS#1 v2.1, using the <i>Chinese Remainder Theorem</i> 
(CRT) information values.

@author Valerie Peng

@version 1.6 03/12/19

@see java.security.spec.RSAPrivateKeySpec
@see java.security.spec.RSAMultiPrimePrivateCrtKeySpec
@see RSAPrivateKey
@see RSAPrivateCrtKey

@since 1.4"
      classrelation 1896987 // <generalisation>
	relation 1896987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896987 // <generalisation>
	  b parent class_ref 976795 // RSAPrivateKey
      end

      attribute 2863643 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  618058533534628008L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7679899 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent."
      end

      operation 7680027 "getPrimeP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP."
      end

      operation 7680155 "getPrimeQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ."
      end

      operation 7680283 "getPrimeExponentP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP."
      end

      operation 7680411 "getPrimeExponentQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ."
      end

      operation 7680539 "getCrtCoefficient"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient."
      end

      operation 7680667 "getOtherPrimeInfo"
	public return_type class_ref 976923 // RSAOtherPrimeInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the otherPrimeInfo or null if there are only 
two prime factors (p and q).

@return the otherPrimeInfo."
      end
    end

    class 976795 "RSAPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an RSA private key.

@author Jan Luehe

@version 1.11 03/12/19

@see RSAPrivateCrtKey"
      classrelation 1896731 // <generalisation>
	relation 1896731 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896731 // <generalisation>
	  b parent class_ref 964123 // PrivateKey
      end

      classrelation 1896859 // <generalisation>
	relation 1896859 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1896859 // <generalisation>
	  b parent class_ref 976539 // RSAKey
      end

      attribute 2863515 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  5187144804936595022L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7679771 "getPrivateExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private exponent.

@return the private exponent"
      end
    end

    class 977051 "RSAPrivateCrtKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an RSA private key, as defined in the PKCS#1 standard,
using the <i>Chinese Remainder Theorem</i> (CRT) information values.

@author Jan Luehe

@version 1.12 03/12/19

@see RSAPrivateKey"
      classrelation 1897115 // <generalisation>
	relation 1897115 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1897115 // <generalisation>
	  b parent class_ref 976795 // RSAPrivateKey
      end

      attribute 2863771 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  -5682214253527700368L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7680795 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent"
      end

      operation 7680923 "getPrimeP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP"
      end

      operation 7681051 "getPrimeQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ"
      end

      operation 7681179 "getPrimeExponentP"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP"
      end

      operation 7681307 "getPrimeExponentQ"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ"
      end

      operation 7681435 "getCrtCoefficient"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient"
      end
    end

    class 977179 "RSAPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to an RSA public key.

@author Jan Luehe

@version 1.10 03/12/19"
      classrelation 1897243 // <generalisation>
	relation 1897243 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1897243 // <generalisation>
	  b parent class_ref 962075 // PublicKey
      end

      classrelation 1897371 // <generalisation>
	relation 1897371 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1897371 // <generalisation>
	  b parent class_ref 976539 // RSAKey
      end

      attribute 2863899 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  -8727434096241101194L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7681563 "getPublicExponent"
	public return_type class_ref 775835 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent"
      end
    end
  end

  deploymentview 168475 "interfaces"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 744219 "DSAKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 975259 // DSAKey
      end
      comment "@(#)DSAKey.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744347 "DSAKeyPairGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
${definition}"
      associated_classes
	class_ref 975515 // DSAKeyPairGenerator
      end
      comment "@(#)DSAKeyPairGenerator.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744475 "DSAParams"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 975387 // DSAParams
      end
      comment "@(#)DSAParams.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744603 "DSAPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 975643 // DSAPrivateKey
      end
      comment "@(#)DSAPrivateKey.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744731 "DSAPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 975771 // DSAPublicKey
      end
      comment "@(#)DSAPublicKey.java	1.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744859 "ECKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.ECParameterSpec;
${definition}"
      associated_classes
	class_ref 975899 // ECKey
      end
      comment "@(#)ECKey.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 744987 "ECPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.PrivateKey;
${definition}"
      associated_classes
	class_ref 976155 // ECPrivateKey
      end
      comment "@(#)ECPrivateKey.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745115 "ECPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.PublicKey;
import java.security.spec.ECPoint;
${definition}"
      associated_classes
	class_ref 976283 // ECPublicKey
      end
      comment "@(#)ECPublicKey.java	1.3 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745243 "RSAKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 976539 // RSAKey
      end
      comment "@(#)RSAKey.java	1.6 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745371 "RSAPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 976795 // RSAPrivateKey
      end
      comment "@(#)RSAPrivateKey.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745499 "RSAMultiPrimePrivateCrtKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.spec.RSAOtherPrimeInfo;
${definition}"
      associated_classes
	class_ref 976667 // RSAMultiPrimePrivateCrtKey
      end
      comment "@(#)RSAMultiPrimePrivateCrtKey.java	1.6 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745627 "RSAPrivateCrtKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 977051 // RSAPrivateCrtKey
      end
      comment "@(#)RSAPrivateCrtKey.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 745755 "RSAPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 977179 // RSAPublicKey
      end
      comment "@(#)RSAPublicKey.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
