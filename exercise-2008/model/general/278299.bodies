class MethodSignature
!!!1462299.java!!!	removePrivateAndSort(inout m : Member) : MethodSignature
	    int numNonPrivate = 0;
	    for (int i = 0; i < m.length; i++) {
		if (! Modifier.isPrivate(m[i].getModifiers())) {
		    numNonPrivate++;
		}
	    }
	    MethodSignature[] cm = new MethodSignature[numNonPrivate];
	    int cmi = 0;
	    for (int i = 0; i < m.length; i++) {
		if (! Modifier.isPrivate(m[i].getModifiers())) {
		    cm[cmi] = new MethodSignature(m[i]);
		    cmi++;
		}
	    }
	    if (cmi > 0)
		Arrays.sort(cm, cm[0]);
	    return cm;
!!!1462427.java!!!	compare(inout o1 : Object, inout o2 : Object) : int
	    /* Arrays.sort calls compare when o1 and o2 are equal.*/
	    if (o1 == o2)
		return 0;

	    MethodSignature c1 = (MethodSignature)o1;
	    MethodSignature c2 = (MethodSignature)o2;

	    int result;
	    if (isConstructor()) {
		result = c1.signature.compareTo(c2.signature);
	    } else { // is a Method.
		result = c1.member.getName().compareTo(c2.member.getName());
		if (result == 0)
		    result = c1.signature.compareTo(c2.signature);
	    }
	    return result;
!!!1462555.java!!!	isConstructor() : boolean
	    return member instanceof Constructor;
!!!1462683.java!!!	MethodSignature(inout m : Member)
	    member = m;
	    if (isConstructor()) {
		signature = ObjectStreamClassUtil_1_3.getSignature((Constructor)m);
	    } else {
		signature = ObjectStreamClassUtil_1_3.getSignature((Method)m);
	    }
