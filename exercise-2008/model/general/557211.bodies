class TraceManager
!!!3550235.java!!!	getLevel(in level : int) : Level
    switch(level)
    {
    case TraceTags.LEVEL_DEBUG:
      return Level.FINEST;
    case TraceTags.LEVEL_TRACE:
      return Level.FINER;
    case TraceTags.LEVEL_ERROR:
      return Level.SEVERE;
    default:
      return null;
    }
!!!3550363.java!!!	getLogger(in type : int) : Logger
    switch(type)
    {
    case TraceTags.INFO_MBEANSERVER:
      return Logger.getLogger("javax.management.mbeanserver");
    case TraceTags.INFO_ADAPTOR_SNMP:
      return Logger.getLogger("com.sun.jmx.snmp.daemon");
    case TraceTags.INFO_SNMP:
      return Logger.getLogger("com.sun.jmx.snmp");
    case TraceTags.INFO_MLET:
      return Logger.getLogger("javax.management.mlet");
    case TraceTags.INFO_MONITOR:
      return Logger.getLogger("javax.management.monitor");
    case TraceTags.INFO_TIMER:
      return Logger.getLogger("javax.management.timer");
    case TraceTags.INFO_MISC:
      return Logger.getLogger("javax.management.misc");
    case TraceTags.INFO_NOTIFICATION:
      return Logger.getLogger("javax.management.notification");
    case TraceTags.INFO_RELATION:
      return Logger.getLogger("javax.management.relation");
    case TraceTags.INFO_MODELMBEAN:
      return Logger.getLogger("javax.management.modelmbean");
    default:
      return null;
    }
!!!3550491.java!!!	isSelected(in level : int, in type : int) : boolean
    Logger logger;
    Level  lvl;
    if (((logger = getLogger(type)) != null) &&
        ((lvl = getLevel(level)) != null))
    {
      return logger.isLoggable(lvl);
    }
    return false;
!!!3550619.java!!!	send(in level : int, in type : int, in className : String, in methodName : String, in info : String) : boolean
    if (isSelected(level, type))
    {
      getLogger(type).logp(getLevel(level), className, methodName, info);
      return true;
    }
    return false;
!!!3550747.java!!!	send(in level : int, in type : int, in className : String, in methodName : String, inout exception : Throwable) : boolean
      if (isSelected(level, type)) {
	  getLogger(type).log(getLevel(level), 
		  className + ": Exception occured in " + methodName , 
		  exception);
	  return true;
  }
      return false;
!!!3550875.java!!!	reset() : void
    
!!!3551003.java!!!	warning(in loggerName : String, in msg : String) : void
	Logger.getLogger(loggerName).warning(msg);
!!!3551131.java!!!	fine(in loggerName : String, in msg : String) : void
	Logger.getLogger(loggerName).fine(msg);	
