class ByteBufferAsDoubleBufferRL
!!!7332379.java!!!	ByteBufferAsDoubleBufferRL(inout bb : ByteBuffer)
	// package-private












	super(bb);

!!!7332507.java!!!	ByteBufferAsDoubleBufferRL(inout bb : ByteBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)






	super(bb, mark, pos, lim, cap, off);

!!!7332635.java!!!	slice() : DoubleBuffer

	int pos = this.position();
	int lim = this.limit();
	assert (pos <= lim);
	int rem = (pos <= lim ? lim - pos : 0);
	int off = (pos << 3) + offset;
        assert (off >= 0);
	return new ByteBufferAsDoubleBufferRL(bb, -1, 0, rem, rem, off);
!!!7332763.java!!!	duplicate() : DoubleBuffer

	return new ByteBufferAsDoubleBufferRL(bb,
						    this.markValue(),
						    this.position(),
						    this.limit(),
						    this.capacity(),
						    offset);
!!!7332891.java!!!	asReadOnlyBuffer() : DoubleBuffer









	return duplicate();

!!!7333019.java!!!	put(in x : double) : DoubleBuffer





	throw new ReadOnlyBufferException();

!!!7333147.java!!!	put(in i : int, in x : double) : DoubleBuffer





	throw new ReadOnlyBufferException();

!!!7333275.java!!!	compact() : DoubleBuffer

















	throw new ReadOnlyBufferException();

!!!7333403.java!!!	isDirect() : boolean

	return bb.isDirect();
!!!7333531.java!!!	isReadOnly() : boolean

	return true;
!!!7333659.java!!!	order() : ByteOrder





	return ByteOrder.LITTLE_ENDIAN;

