class SAX2XNI
!!!5501595.java!!!	SAX2XNI(inout core : XMLDocumentHandler)
        this.fCore = core;
!!!5501723.java!!!	setDocumentHandler(inout handler : XMLDocumentHandler) : void
        fCore = handler;
!!!5501851.java!!!	getDocumentHandler() : XMLDocumentHandler
        return fCore;
!!!5501979.java!!!	startDocument() : void
        try {
            nsContext.reset();
            
            XMLLocator xmlLocator;
            if(locator==null)
                // some SAX source doesn't provide a locator,
                // in which case we assume no line information is available
                // and use a dummy locator. With this, downstream components
                // can always assume that they will get a non-null Locator.
                xmlLocator=new SimpleLocator(null,null,-1,-1);
            else
                xmlLocator=new LocatorWrapper(locator);
            
            fCore.startDocument(
                    xmlLocator,
                    null,
                    nsContext,
                    null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502107.java!!!	endDocument() : void
        try {
            fCore.endDocument(null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502235.java!!!	startElement(in uri : String, in local : String, in qname : String, inout att : Attributes) : void
        try {
            fCore.startElement(createQName(uri,local,qname),createAttributes(att),null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502363.java!!!	endElement(in uri : String, in local : String, in qname : String) : void
        try {
            fCore.endElement(createQName(uri,local,qname),null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502491.java!!!	characters(in buf : char, in offset : int, in len : int) : void
        try {
            fCore.characters(new XMLString(buf,offset,len),null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502619.java!!!	ignorableWhitespace(in buf : char, in offset : int, in len : int) : void
        try {
            fCore.ignorableWhitespace(new XMLString(buf,offset,len),null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5502747.java!!!	startPrefixMapping(in prefix : String, in uri : String) : void
        nsContext.pushContext();
        nsContext.declarePrefix(prefix,uri);
!!!5502875.java!!!	endPrefixMapping(in prefix : String) : void
        nsContext.popContext();
!!!5503003.java!!!	processingInstruction(in target : String, in data : String) : void
        try {
            fCore.processingInstruction(
                    symbolize(target),createXMLString(data),null);
        } catch( WrappedSAXException e ) {
            throw e.exception;
        }
!!!5503259.java!!!	setDocumentLocator(inout _loc : Locator) : void
        this.locator = _loc;
!!!5503387.java!!!	createQName(in uri : String, in local : String, in raw : String) : QName

        int idx = raw.indexOf(':');
        
        if( local.length()==0 ) {
            // if naemspace processing is turned off, local could be "".
            // in that case, treat everything to be in the no namespace.
            uri = "";
            if(idx<0)
                local = raw;
            else
                local = raw.substring(idx+1);
        }
        
        String prefix;
        if (idx < 0)
            prefix = null;
        else
            prefix = raw.substring(0, idx);
        
        if (uri != null && uri.length() == 0)
            uri = null; // XNI uses null whereas SAX uses the empty string
        
        return new QName(symbolize(prefix), symbolize(local), symbolize(raw), symbolize(uri));
!!!5503515.java!!!	symbolize(in s : String) : String
        if (s == null)
            return null;
        else
            return symbolTable.addSymbol(s);
!!!5503643.java!!!	createXMLString(in str : String) : XMLString
        // with my patch
        // return new XMLString(str);
        
        // for now
        return new XMLString(str.toCharArray(), 0, str.length());
!!!5503771.java!!!	createAttributes(inout att : Attributes) : XMLAttributes
        xa.removeAllAttributes();
        int len = att.getLength();
        for (int i = 0; i < len; i++)
            xa.addAttribute(
                    createQName(att.getURI(i), att.getLocalName(i), att.getQName(i)),
                    att.getType(i),
                    att.getValue(i));
        return xa;
