class DirectLongBufferRS
!!!7423515.java!!!	DirectLongBufferRS(inout db : DirectBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)









	super(db, mark, pos, lim, cap, off);

!!!7423643.java!!!	slice() : LongBuffer

	int pos = this.position();
	int lim = this.limit();
	assert (pos <= lim);
	int rem = (pos <= lim ? lim - pos : 0);
	int off = (pos << 3);
        assert (off >= 0);
	return new DirectLongBufferRS(this, -1, 0, rem, rem, off);
!!!7423771.java!!!	duplicate() : LongBuffer

	return new DirectLongBufferRS(this,
					      this.markValue(),
					      this.position(),
					      this.limit(),
					      this.capacity(),
					      0);
!!!7423899.java!!!	asReadOnlyBuffer() : LongBuffer









	return duplicate();

!!!7424027.java!!!	put(in x : long) : LongBuffer





	throw new ReadOnlyBufferException();

!!!7424155.java!!!	put(in i : int, in x : long) : LongBuffer





	throw new ReadOnlyBufferException();

!!!7424283.java!!!	put(inout src : LongBuffer) : LongBuffer





































	throw new ReadOnlyBufferException();

!!!7424411.java!!!	put(in src : long, in offset : int, in length : int) : LongBuffer























	throw new ReadOnlyBufferException();

!!!7424539.java!!!	compact() : LongBuffer












	throw new ReadOnlyBufferException();

!!!7424667.java!!!	isDirect() : boolean

	return true;
!!!7424795.java!!!	isReadOnly() : boolean

	return true;
!!!7424923.java!!!	order() : ByteOrder


	return ((ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN)
		? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);





