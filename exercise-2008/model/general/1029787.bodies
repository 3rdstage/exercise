class BinaryRelQueryExp
!!!8226715.java!!!	BinaryRelQueryExp()
 
!!!8226843.java!!!	BinaryRelQueryExp(in op : int, inout v1 : ValueExp, inout v2 : ValueExp)
 
	relOp = op;
	exp1  = v1;
	exp2  = v2;
!!!8226971.java!!!	getOperator() : int
 
	return relOp;
!!!8227099.java!!!	getLeftValue() : ValueExp
 
	return exp1;
!!!8227227.java!!!	getRightValue() : ValueExp
 
	return exp2;
!!!8227355.java!!!	apply(inout name : ObjectName) : boolean
 
	Object val1 = exp1.apply(name);
	Object val2 = exp2.apply(name);
	String sval1;
	String sval2;
	double dval1;
	double dval2;
	long   lval1;
	long   lval2;
	boolean bval1;
	boolean bval2;
	boolean numeric = val1 instanceof NumericValueExp;
	boolean bool = val1 instanceof BooleanValueExp;
	if (numeric) {
	    if (((NumericValueExp)val1).isLong()) {
		lval1 = ((NumericValueExp)val1).longValue();
		lval2 = ((NumericValueExp)val2).longValue();

		switch (relOp) {
		case Query.GT:
		    return lval1 > lval2;
		case Query.LT:
		    return lval1 < lval2;
		case Query.GE:
		    return lval1 >= lval2;
		case Query.LE:
		    return lval1 <= lval2;
		case Query.EQ:
		    return lval1 == lval2;
		}
	    } else {
		dval1 = ((NumericValueExp)val1).doubleValue();
		dval2 = ((NumericValueExp)val2).doubleValue();

		switch (relOp) {
		case Query.GT:
		    return dval1 > dval2;
		case Query.LT:
		    return dval1 < dval2;
		case Query.GE:
		    return dval1 >= dval2;
		case Query.LE:
		    return dval1 <= dval2;
		case Query.EQ:
		    return dval1 == dval2;
		}
	    }
	    
	} else if (bool) {

	    bval1 = ((BooleanValueExp)val1).getValue().booleanValue();
	    bval2 = ((BooleanValueExp)val2).getValue().booleanValue();

	    switch (relOp) {
	    case Query.GT:
	        return bval1 && !bval2;
	    case Query.LT:
	        return !bval1 && bval2;
	    case Query.GE:
	        return bval1 || !bval2;
	    case Query.LE:
	        return !bval1 || bval2;
	    case Query.EQ:
	        return bval1 == bval2;
	    }

	} else {
	    sval1 = ((StringValueExp)val1).getValue();
	    sval2 = ((StringValueExp)val2).getValue();

	    switch (relOp) {
	    case Query.GT:
		return sval1.compareTo(sval2) > 0;
	    case Query.LT:
		return sval1.compareTo(sval2) < 0;
	    case Query.GE:
		return sval1.compareTo(sval2) >= 0;
	    case Query.LE:
		return sval1.compareTo(sval2) <= 0;
	    case Query.EQ:
		return sval1.compareTo(sval2) == 0;
	    }
	}

	return false;
!!!8227483.java!!!	toString() : String
 
	return "(" + exp1 + ") " + relOpString() + " (" + exp2 + ")";
!!!8227611.java!!!	relOpString() : String
	switch (relOp) {
	case Query.GT:
	    return ">";
	case Query.LT:
	    return "<";
	case Query.GE:
	    return ">=";
	case Query.LE:
	    return "<=";
	case Query.EQ:
	    return "=";
	}
	
	return "=";
