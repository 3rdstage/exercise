class XPathLexer
!!!4469915.java!!!	XPathLexer(inout reader : Reader)
		this ();
		if (null == reader) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(reader);
!!!4470043.java!!!	XPathLexer(inout instream : InputStream)
		this ();
		if (null == instream) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(new java.io.InputStreamReader(instream));
!!!4470171.java!!!	XPathLexer()
		yy_buffer = new char[YY_BUFFER_SIZE];
		yy_buffer_read = 0;
		yy_buffer_index = 0;
		yy_buffer_start = 0;
		yy_buffer_end = 0;
		yy_at_bol = true;
		yy_lexical_state = YYINITIAL;
!!!4470299.java!!!	yybegin(in state : int) : void
		yy_lexical_state = state;
!!!4470427.java!!!	yy_advance() : int
		int next_read;
		int i;
		int j;

		if (yy_buffer_index < yy_buffer_read) {
			return yy_buffer[yy_buffer_index++];
		}

		if (0 != yy_buffer_start) {
			i = yy_buffer_start;
			j = 0;
			while (i < yy_buffer_read) {
				yy_buffer[j] = yy_buffer[i];
				++i;
				++j;
			}
			yy_buffer_end = yy_buffer_end - yy_buffer_start;
			yy_buffer_start = 0;
			yy_buffer_read = j;
			yy_buffer_index = j;
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}

		while (yy_buffer_index >= yy_buffer_read) {
			if (yy_buffer_index >= yy_buffer.length) {
				yy_buffer = yy_double(yy_buffer);
			}
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}
		return yy_buffer[yy_buffer_index++];
!!!4470555.java!!!	yy_move_end() : void
		if (yy_buffer_end > yy_buffer_start &&
		    '\n' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
		if (yy_buffer_end > yy_buffer_start &&
		    '\r' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
!!!4470683.java!!!	yy_mark_start() : void
		yy_buffer_start = yy_buffer_index;
!!!4470811.java!!!	yy_mark_end() : void
		yy_buffer_end = yy_buffer_index;
!!!4470939.java!!!	yy_to_mark() : void
		yy_buffer_index = yy_buffer_end;
		yy_at_bol = (yy_buffer_end > yy_buffer_start) &&
		            ('\r' == yy_buffer[yy_buffer_end-1] ||
		             '\n' == yy_buffer[yy_buffer_end-1] ||
		             2028/*LS*/ == yy_buffer[yy_buffer_end-1] ||
		             2029/*PS*/ == yy_buffer[yy_buffer_end-1]);
!!!4471067.java!!!	yytext() : String
		return (new java.lang.String(yy_buffer,
			yy_buffer_start,
			yy_buffer_end - yy_buffer_start));
!!!4471195.java!!!	yylength() : int
		return yy_buffer_end - yy_buffer_start;
!!!4471323.java!!!	yy_double(in buf : char) : char
		int i;
		char newbuf[];
		newbuf = new char[2*buf.length];
		for (i = 0; i < buf.length; ++i) {
			newbuf[i] = buf[i];
		}
		return newbuf;
!!!4471451.java!!!	yy_error(in code : int, inout fatal : boolean) : void
		java.lang.System.out.print(yy_error_string[code]);
		java.lang.System.out.flush();
		if (fatal) {
			throw new Error("Fatal Error.\n");
		}
!!!4471579.java!!!	unpackFromString(in size1 : int, in size2 : int, in st : String) : int
		int colonIndex = -1;
		String lengthString;
		int sequenceLength = 0;
		int sequenceInteger = 0;

		int commaIndex;
		String workString;

		int res[][] = new int[size1][size2];
		for (int i= 0; i < size1; i++) {
			for (int j= 0; j < size2; j++) {
				if (sequenceLength != 0) {
					res[i][j] = sequenceInteger;
					sequenceLength--;
					continue;
				}
				commaIndex = st.indexOf(',');
				workString = (commaIndex==-1) ? st :
					st.substring(0, commaIndex);
				st = st.substring(commaIndex+1);
				colonIndex = workString.indexOf(':');
				if (colonIndex == -1) {
					res[i][j]=Integer.parseInt(workString);
					continue;
				}
				lengthString =
					workString.substring(colonIndex+1);
				sequenceLength=Integer.parseInt(lengthString);
				workString=workString.substring(0,colonIndex);
				sequenceInteger=Integer.parseInt(workString);
				res[i][j] = sequenceInteger;
				sequenceLength--;
			}
		}
		return res;
!!!4471707.java!!!	next_token() : Symbol
		int yy_lookahead;
		int yy_anchor = YY_NO_ANCHOR;
		int yy_state = yy_state_dtrans[yy_lexical_state];
		int yy_next_state = YY_NO_STATE;
		int yy_last_accept_state = YY_NO_STATE;
		boolean yy_initial = true;
		int yy_this_accept;

		yy_mark_start();
		yy_this_accept = yy_acpt[yy_state];
		if (YY_NOT_ACCEPT != yy_this_accept) {
			yy_last_accept_state = yy_state;
			yy_mark_end();
		}
		while (true) {
			if (yy_initial && yy_at_bol) yy_lookahead = YY_BOL;
			else yy_lookahead = yy_advance();
			yy_next_state = YY_F;
			yy_next_state = yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
			if (YY_EOF == yy_lookahead && true == yy_initial) {

return new Symbol(sym.EOF);
			}
			if (YY_F != yy_next_state) {
				yy_state = yy_next_state;
				yy_initial = false;
				yy_this_accept = yy_acpt[yy_state];
				if (YY_NOT_ACCEPT != yy_this_accept) {
					yy_last_accept_state = yy_state;
					yy_mark_end();
				}
			}
			else {
				if (YY_NO_STATE == yy_last_accept_state) {
					throw (new Error("Lexical Error: Unmatched Input."));
				}
				else {
					yy_anchor = yy_acpt[yy_last_accept_state];
					if (0 != (YY_END & yy_anchor)) {
						yy_move_end();
					}
					yy_to_mark();
					switch (yy_last_accept_state) {
					case 1:
						
					case -2:
						break;
					case 2:
						{ return new Symbol(sym.STAR); }
					case -3:
						break;
					case 3:
						{ return new Symbol(sym.SLASH); }
					case -4:
						break;
					case 4:
						{ return new Symbol(sym.PLUS); }
					case -5:
						break;
					case 5:
						{ return new Symbol(sym.MINUS); }
					case -6:
						break;
					case 6:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -7:
						break;
					case 7:
						{ throw new Exception(yytext()); }
					case -8:
						break;
					case 8:
						{ return new Symbol(sym.COMMA); }
					case -9:
						break;
					case 9:
						{ return new Symbol(sym.ATSIGN); }
					case -10:
						break;
					case 10:
						{ return new Symbol(sym.DOT); }
					case -11:
						break;
					case 11:
						{ return new Symbol(sym.VBAR); }
					case -12:
						break;
					case 12:
						{ return new Symbol(sym.DOLLAR); }
					case -13:
						break;
					case 13:
						{ return new Symbol(sym.EQ); }
					case -14:
						break;
					case 14:
						{ return new Symbol(sym.LT); }
					case -15:
						break;
					case 15:
						{ return new Symbol(sym.GT); }
					case -16:
						break;
					case 16:
						{ return new Symbol(sym.LPAREN); }
					case -17:
						break;
					case 17:
						{ return new Symbol(sym.RPAREN); }
					case -18:
						break;
					case 18:
						{ /* ignore white space. */ }
					case -19:
						break;
					case 19:
						{ return new Symbol(sym.LBRACK); }
					case -20:
						break;
					case 20:
						{ return new Symbol(sym.RBRACK); }
					case -21:
						break;
					case 21:
						{ return new Symbol(sym.INT, new Long(yytext())); }
					case -22:
						break;
					case 22:
						{ return new Symbol(sym.DSLASH); }
					case -23:
						break;
					case 23:
						{ return new Symbol(sym.ID); }
					case -24:
						break;
					case 24:
						{ return new Symbol(sym.OR); }
					case -25:
						break;
					case 25:
						{ return new Symbol(sym.DCOLON); }
					case -26:
						break;
					case 26:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -27:
						break;
					case 27:
						{ return new Symbol(sym.DDOT); }
					case -28:
						break;
					case 28:
						{ return new Symbol(sym.REAL, new Double(yytext())); }
					case -29:
						break;
					case 29:
						{ return new Symbol(sym.NE); }
					case -30:
						break;
					case 30:
						{ return new Symbol(sym.LE); }
					case -31:
						break;
					case 31:
						{ return new Symbol(sym.GE); }
					case -32:
						break;
					case 32:
						{ return new Symbol(sym.Literal,
			      yytext().substring(1, yytext().length() - 1)); }
					case -33:
						break;
					case 33:
						{ return new Symbol(sym.Literal,
			      yytext().substring(1, yytext().length() - 1)); }
					case -34:
						break;
					case 34:
						{ return new Symbol(sym.REAL, new Double(yytext())); }
					case -35:
						break;
					case 35:
						{ return new Symbol(sym.DIV); }
					case -36:
						break;
					case 36:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -37:
						break;
					case 37:
						{ return new Symbol(sym.MOD); }
					case -38:
						break;
					case 38:
						{ return new Symbol(sym.KEY); }
					case -39:
						break;
					case 39:
						{ return new Symbol(sym.AND); }
					case -40:
						break;
					case 40:
						{ return new Symbol(sym.SELF); }
					case -41:
						break;
					case 41:
						{ return new Symbol(sym.CHILD); }
					case -42:
						break;
					case 42:
						{ return new Symbol(sym.TEXT); }
					case -43:
						break;
					case 43:
						{ return new Symbol(sym.NODE); }
					case -44:
						break;
					case 44:
						{ return new Symbol(sym.PARENT); }
					case -45:
						break;
					case 45:
						{ return new Symbol(sym.TEXT); }
					case -46:
						break;
					case 46:
						{ return new Symbol(sym.NODE); }
					case -47:
						break;
					case 47:
						{ return new Symbol(sym.ANCESTOR); }
					case -48:
						break;
					case 48:
						{ return new Symbol(sym.PATTERN); }
					case -49:
						break;
					case 49:
						{ return new Symbol(sym.NAMESPACE); }
					case -50:
						break;
					case 50:
						{ return new Symbol(sym.COMMENT); }
					case -51:
						break;
					case 51:
						{ return new Symbol(sym.PRECEDING); }
					case -52:
						break;
					case 52:
						{ return new Symbol(sym.ATTRIBUTE); }
					case -53:
						break;
					case 53:
						{ return new Symbol(sym.FOLLOWING); }
					case -54:
						break;
					case 54:
						{ return new Symbol(sym.DESCENDANT); }
					case -55:
						break;
					case 55:
						{ return new Symbol(sym.COMMENT); }
					case -56:
						break;
					case 56:
						{ return new Symbol(sym.EXPRESSION); }
					case -57:
						break;
					case 57:
						{ return new Symbol(sym.ANCESTORORSELF); }
					case -58:
						break;
					case 58:
						{ return new Symbol(sym.PRECEDINGSIBLING); }
					case -59:
						break;
					case 59:
						{ return new Symbol(sym.FOLLOWINGSIBLING); }
					case -60:
						break;
					case 60:
						{ return new Symbol(sym.DESCENDANTORSELF); }
					case -61:
						break;
					case 61:
						{ return new Symbol(sym.PIPARAM); }
					case -62:
						break;
					case 62:
						{ return new Symbol(sym.PI); }
					case -63:
						break;
					case 63:
						{ return new Symbol(sym.PI); }
					case -64:
						break;
					case 65:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -65:
						break;
					case 66:
						{ throw new Exception(yytext()); }
					case -66:
						break;
					case 68:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -67:
						break;
					case 69:
						{ throw new Exception(yytext()); }
					case -68:
						break;
					case 71:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -69:
						break;
					case 72:
						{ throw new Exception(yytext()); }
					case -70:
						break;
					case 74:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -71:
						break;
					case 75:
						{ throw new Exception(yytext()); }
					case -72:
						break;
					case 77:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -73:
						break;
					case 79:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -74:
						break;
					case 81:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -75:
						break;
					case 83:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -76:
						break;
					case 85:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -77:
						break;
					case 87:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -78:
						break;
					case 89:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -79:
						break;
					case 91:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -80:
						break;
					case 93:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -81:
						break;
					case 95:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -82:
						break;
					case 97:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -83:
						break;
					case 99:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -84:
						break;
					case 101:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -85:
						break;
					case 103:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -86:
						break;
					case 105:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -87:
						break;
					case 107:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -88:
						break;
					case 109:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -89:
						break;
					case 111:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -90:
						break;
					case 113:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -91:
						break;
					case 115:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -92:
						break;
					case 117:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -93:
						break;
					case 119:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -94:
						break;
					case 121:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -95:
						break;
					case 123:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -96:
						break;
					case 125:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -97:
						break;
					case 126:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -98:
						break;
					case 127:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -99:
						break;
					case 128:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -100:
						break;
					case 129:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -101:
						break;
					case 130:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -102:
						break;
					case 131:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -103:
						break;
					case 132:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -104:
						break;
					case 133:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -105:
						break;
					case 134:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -106:
						break;
					case 135:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -107:
						break;
					case 136:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -108:
						break;
					case 137:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -109:
						break;
					case 138:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -110:
						break;
					case 139:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -111:
						break;
					case 140:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -112:
						break;
					case 141:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -113:
						break;
					case 142:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -114:
						break;
					case 143:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -115:
						break;
					case 144:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -116:
						break;
					case 145:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -117:
						break;
					case 146:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -118:
						break;
					case 147:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -119:
						break;
					case 148:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -120:
						break;
					case 149:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -121:
						break;
					case 150:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -122:
						break;
					case 151:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -123:
						break;
					case 152:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -124:
						break;
					case 153:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -125:
						break;
					case 154:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -126:
						break;
					case 155:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -127:
						break;
					case 156:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -128:
						break;
					case 157:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -129:
						break;
					case 158:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -130:
						break;
					case 159:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -131:
						break;
					case 160:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -132:
						break;
					case 161:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -133:
						break;
					case 162:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -134:
						break;
					case 163:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -135:
						break;
					case 164:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -136:
						break;
					case 165:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -137:
						break;
					case 166:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -138:
						break;
					case 167:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -139:
						break;
					case 168:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -140:
						break;
					case 169:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -141:
						break;
					case 170:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -142:
						break;
					case 171:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -143:
						break;
					case 172:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -144:
						break;
					case 173:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -145:
						break;
					case 174:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -146:
						break;
					case 175:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -147:
						break;
					case 176:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -148:
						break;
					case 177:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -149:
						break;
					case 178:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -150:
						break;
					case 179:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -151:
						break;
					case 180:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -152:
						break;
					case 181:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -153:
						break;
					case 182:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -154:
						break;
					case 185:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -155:
						break;
					case 187:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -156:
						break;
					case 189:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -157:
						break;
					case 190:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -158:
						break;
					case 191:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -159:
						break;
					case 192:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -160:
						break;
					case 193:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -161:
						break;
					case 194:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -162:
						break;
					case 195:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -163:
						break;
					case 196:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -164:
						break;
					case 197:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -165:
						break;
					case 198:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -166:
						break;
					case 199:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -167:
						break;
					case 200:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -168:
						break;
					case 201:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -169:
						break;
					case 202:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -170:
						break;
					case 203:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -171:
						break;
					case 204:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -172:
						break;
					case 205:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -173:
						break;
					case 206:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -174:
						break;
					case 207:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -175:
						break;
					case 208:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -176:
						break;
					case 209:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -177:
						break;
					case 210:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -178:
						break;
					case 211:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -179:
						break;
					case 212:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -180:
						break;
					case 213:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -181:
						break;
					case 214:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -182:
						break;
					case 215:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -183:
						break;
					case 216:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -184:
						break;
					case 217:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -185:
						break;
					case 218:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -186:
						break;
					case 219:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -187:
						break;
					case 220:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -188:
						break;
					case 221:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -189:
						break;
					case 222:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -190:
						break;
					case 223:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -191:
						break;
					case 224:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -192:
						break;
					case 225:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -193:
						break;
					case 226:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -194:
						break;
					case 227:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -195:
						break;
					case 228:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -196:
						break;
					case 229:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -197:
						break;
					case 230:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -198:
						break;
					case 231:
						{ return new Symbol(sym.QNAME, yytext()); }
					case -199:
						break;
					default:
						yy_error(YY_E_INTERNAL,false);
					case -1:
					}
					yy_initial = true;
					yy_state = yy_state_dtrans[yy_lexical_state];
					yy_next_state = YY_NO_STATE;
					yy_last_accept_state = YY_NO_STATE;
					yy_mark_start();
					yy_this_accept = yy_acpt[yy_state];
					if (YY_NOT_ACCEPT != yy_this_accept) {
						yy_last_accept_state = yy_state;
						yy_mark_end();
					}
				}
			}
		}
