format 66
"openmbean" // src::javax::management::openmbean
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management/openmbean"
  java_package "javax.management.openmbean"
  classview 175259 "openmbean"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 922779 "CompositeData"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <tt>CompositeData</tt> interface specifies the behavior of a specific type of complex <i>open data</i> objects
which represent <i>composite data</i> structures.

@version     3.19  04/02/10
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8338075 "getCompositeType"
	public return_type class_ref 1038363 // CompositeType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>composite type </i> of this <i>composite data</i> instance.

@return the type of this CompositeData."
      end

      operation 8338203 "get"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the item whose name is <tt>key</tt>.

@param key the name of the item.

@return the value associated with this key.

@throws IllegalArgumentException  if <tt>key</tt> is a null or empty String.

@throws InvalidKeyException  if <tt>key</tt> is not an existing item name for this <tt>CompositeData</tt> instance."
      end

      operation 8338331 "getAll"
	public explicit_return_type "Object"
	nparams 1
	  param in name "keys" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the values of the items whose names are specified by <tt>keys</tt>, in the same order as <tt>keys</tt>.

@param keys the names of the items.

@return the values corresponding to the keys.

@throws IllegalArgumentException  if an element in <tt>keys</tt> is a null or empty String.

@throws InvalidKeyException  if an element in <tt>keys</tt> is not an existing item name for this <tt>CompositeData</tt> instance."
      end

      operation 8338459 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>CompositeData</tt> instance contains 
an item whose name is <tt>key</tt>. 
If <tt>key</tt> is a null or empty String, this method simply returns false.

@param key the key to be tested.

@return true if this <tt>CompositeData</tt> contains the key."
      end

      operation 8338587 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>CompositeData</tt> instance contains an item 
whose value is <tt>value</tt>.

@param value the value to be tested.

@return true if this <tt>CompositeData</tt> contains the value."
      end

      operation 8338715 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Collection view of the item values contained in this <tt>CompositeData</tt> instance.
The returned collection's iterator will return the values in the ascending lexicographic order of the corresponding 
item names. 

@return the values."
      end

      operation 8338843 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <var>obj</var> parameter with this <code>CompositeData</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>CompositeData</code> interface,</li>
<li>their composite types are equal</li>
<li>their contents (ie item values) are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>CompositeData</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>CompositeData</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>CompositeData</code> instance."
      end

      operation 8338971 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>CompositeData</code> instance. 
<p>
The hash code of a <code>CompositeData</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its <i>composite type</i> and all the item values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>CompositeData</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>CompositeData</code> instance"
      end

      operation 8339099 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>CompositeData</code> instance. 
<p>
The string representation consists of the name of the implementing class, 
the string representation of the composite type of this instance, and the string representation of the contents
(ie list the itemName=itemValue mappings).

@return  a string representation of this <code>CompositeData</code> instance"
      end
    end

    class 1037979 "ArrayType"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <code>ArrayType</code> class is the <i>open type</i> class whose instances describe 
all <i>open data</i> values which are n-dimensional arrays of <i>open data</i> values.

@version     3.24  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2056987 // <generalisation>
	relation 2056987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2056987 // <generalisation>
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2057115 // <realization>
	relation 2057115 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2057115 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3048731 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  720504429830309770L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      attribute 3048859 "dimension"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The dimension of arrays described by this {@link ArrayType} instance
"
      end

      classrelation 2057243 // elementType (<unidirectional association>)
	relation 2057243 --->
	  a role_name "elementType" private
	    comment "
@serial The <i>open type</i> of element values contained in the arrays described by
	       this {@link ArrayType} instance

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057243 // elementType (<unidirectional association>)
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2057371 // myHashCode (<unidirectional association>)
	relation 2057371 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057371 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3048987 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8336923 "ArrayType"
	public explicit_return_type ""
	nparams 2
	  param in name "dimension" explicit_type "int"
	  param inout name "elementType" type class_ref 1038107 // OpenType
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructor *** 

Constructs an <tt>ArrayType</tt> instance describing <i>open data</i> values which are 
arrays with dimension <var>dimension</var> of elements whose <i>open type</i> is <var>elementType</var>.
<p>
When invoked on an <tt>ArrayType</tt> instance, the {@link OpenType#getClassName() getClassName} method
returns the class name of the array instances it describes (following the rules defined by the 
{@link Class#getName() getName} method of <code>java.lang.Class</code>), not the class name of the array elements
(which is returned by a call to <tt>getElementOpenType().getClassName()</tt>).
<p>
The internal field corresponding to the type name of this <code>ArrayType</code> instance is also set to
the class name of the array instances it describes. 
In other words, the methods <code>getClassName</code> and <code>getTypeName</code> return the same string value.
The internal field corresponding to the description of this <code>ArrayType</code> instance is set to a string value
which follows the following template:<br>
<tt><i>&lt;dimension&gt;</i>-dimension array of <i>&lt;element_class_name&gt;</i></tt>
<p>
As an example, the following piece of code:
<pre>
ArrayType t = new ArrayType(3, SimpleType.STRING);
System.out.println(\"array class name       = \"+ t.getClassName());
System.out.println(\"element class name     = \"+ t.getElementOpenType().getClassName());
System.out.println(\"array type name        = \"+ t.getTypeName());
System.out.println(\"array type description = \"+ t.getDescription());
</pre>
would produce the following output:
<pre>
array class name       = [[[java.lang.String;
element class name     = java.lang.String
array type name        = [[[java.lang.String;
array type description = 3-dimension array of java.lang.String
</pre>

@param  dimension  the dimension of arrays described by this <tt>ArrayType</tt> instance;
			  must be greater than or equal to 1.

@param  elementType  the <i>open type</i> of element values contained in the arrays described by
			    this <tt>ArrayType</tt> instance; must be an instance of either
			    <tt>SimpleType</tt>, <tt>CompositeType</tt> or <tt>TabularType</tt>.

@throws IllegalArgumentException  if <var>dimension</var> is not a positive integer

@throws OpenDataException  if <var>elementType</var> is an instance of <tt>ArrayType</tt>"
      end

      operation 8337051 "buildArrayClassName"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "dimension" explicit_type "int"
	  param in name "elementClassName" explicit_type "String"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8337179 "getDimension"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** ArrayType specific information methods *** 

Returns the dimension of arrays described by this <tt>ArrayType</tt> instance.

@return the dimension."
      end

      operation 8337307 "getElementOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>open type</i> of element values contained in the arrays described by this <tt>ArrayType</tt> instance.

@return the element type."
      end

      operation 8337435 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a value for this <code>ArrayType</code> instance.
<p>
This method returns <code>true</code> if and only if <var>obj</var> is not null, <var>obj</var> is an array
and any one of the following is <tt>true</tt>:
<p><ul>
<li>if this <code>ArrayType</code> instance describes an array of <tt>SimpleType</tt> elements,
<var>obj</var>'s class name is the same as the className field defined for this <code>ArrayType</code> instance
(ie the class name returned by the {@link OpenType#getClassName() getClassName} method, 
 which includes the dimension information),<br>&nbsp;
</li>
<li>if this <code>ArrayType</code> instance describes an array 
of classes implementing the TabularData interface or the CompositeData interface, 
<var>obj</var> is assignable to such a declared array,
and each element contained in <var>obj</var> is either null or a valid value for the element's open type
specified by this <code>ArrayType</code> instance.
</li></ul>
<p>

@param obj the object to be tested.

@return <code>true</code> if <var>obj</var> is a value for this <code>ArrayType</code> instance."
      end

      operation 8337563 "checkElementsType"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "x_dim_Array" explicit_type "Object"
	  param in name "dim" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if and only if all elements contained in the array argument x_dim_Array of dimension dim
are valid values (ie either null or of the right openType) 
for the element open type specified by this ArrayType instance.

This method's implementation uses recursion to go down the dimensions of the array argument."
      end

      operation 8337691 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Methods overriden from class Object *** 

Compares the specified <code>obj</code> parameter with this <code>ArrayType</code> instance for equality.
<p> 
Two <code>ArrayType</code> instances are equal if and only if they describes array instances
which have the same dimension and elements' open type. 

@param  obj  the object to be compared for equality with this <code>ArrayType</code> instance;
		    if <var>obj</var> is <code>null</code> or is not an instance of the class <code>ArrayType</code>, 
             <code>equals</code> returns <code>false</code>.

@return  <code>true</code> if the specified object is equal to this <code>ArrayType</code> instance."
      end

      operation 8337819 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>ArrayType</code> instance.
<p>
The hash code of a <code>ArrayType</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: dimension and elements' type). 
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>ArrayType</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
As <code>ArrayType</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>ArrayType</code> instance"
      end

      operation 8337947 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>ArrayType</code> instance.
<p>
The string representation consists of 
the name of this class (ie <code>javax.management.openmbean.ArrayType</code>), the type name,
the dimension and elements' type defined for this instance, 
<p>
As <code>ArrayType</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>ArrayType</code> instance"
      end
    end

    class 1038107 "OpenType"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <code>OpenType</code> class is the parent abstract class of all classes which describe the actual <i>open type</i> 
of open data values. 
<p>
An <i>open type</i> is defined by:
<ul>
 <li>the fully qualified Java class name of the open data values this type describes; 
     note that only a limited set of Java classes is allowed for open data values 
     (see {@link #ALLOWED_CLASSNAMES ALLOWED_CLASSNAMES}),</li>
 <li>its name,</li>
 <li>its description.</li>
</ul>

@version     3.28  06/07/27
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2056731 // <realization>
	relation 2056731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2056731 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3047963 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -9195195325186646468L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2056859 // ALLOWED_CLASSNAMES_LIST (<unidirectional association>)
	relation 2056859 --->
	  a role_name "ALLOWED_CLASSNAMES_LIST" init_value "=  
      Collections.unmodifiableList(
        Arrays.asList(
	  \"java.lang.Void\",
	  \"java.lang.Boolean\",
	  \"java.lang.Character\",
	  \"java.lang.Byte\",
	  \"java.lang.Short\",
	  \"java.lang.Integer\",
	  \"java.lang.Long\",
	  \"java.lang.Float\",
	  \"java.lang.Double\",
	  \"java.lang.String\",
	  \"java.math.BigDecimal\",
	  \"java.math.BigInteger\",
	  \"java.util.Date\",
	  \"javax.management.ObjectName\",
	  CompositeData.class.getName(),	// better refer to these two class names like this, rather than hardcoding a string,
	  TabularData.class.getName()) )" class_relation const_relation package
	    comment "
The ALLOWED_CLASSNAMES array is kept for compatibility reasons, but:
our implementation should use only ALLOWED_CLASSNAMES_LIST which is
unmodifiable, and not use the ALLOWED_CLASSNAMES array which is
modifiable by external code.

 in case the package of these classes should change (who knows...)"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 2056859 // ALLOWED_CLASSNAMES_LIST (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      attribute 3048091 "ALLOWED_CLASSNAMES"
	class_attribute const_attribute public explicit_type "String"
	multiplicity "[]"
	init_value "=  
	ALLOWED_CLASSNAMES_LIST.toArray(new String[0])"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "List of the fully qualified names of the Java classes allowed for open data values.
A multidimensional array of any one of these classes is also an allowed for open data values.

<pre>ALLOWED_CLASSNAMES = { 
\"java.lang.Void\",
\"java.lang.Boolean\",
\"java.lang.Character\",
\"java.lang.Byte\",
\"java.lang.Short\",
\"java.lang.Integer\",
\"java.lang.Long\",
\"java.lang.Float\",
\"java.lang.Double\",
\"java.lang.String\",
\"java.math.BigDecimal\",
\"java.math.BigInteger\",
\"java.util.Date\",
\"javax.management.ObjectName\",
CompositeData.class.getName(),
TabularData.class.getName() } ;
</pre>

"
      end

      attribute 3048219 "className"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The fully qualified Java class name of open data values this type describes.
"
      end

      attribute 3048347 "description"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The type description (should not be null or empty).
"
      end

      attribute 3048475 "typeName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The name given to this type (should not be null or empty).
"
      end

      attribute 3048603 "isArray"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Tells if this type describes an array (checked in constructor).
"
      end

      operation 8335643 "OpenType"
	protected explicit_return_type ""
	nparams 3
	  param in name "className" explicit_type "String"
	  param in name "typeName" explicit_type "String"
	  param in name "description" explicit_type "String"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructor *** 

Constructs an <code>OpenType</code> instance (actually a subclass instance as <code>OpenType</code> is abstract),
checking for the validity of the given parameters.
The validity constraints are described below for each parameter.
<br>&nbsp;
@param  className  The fully qualified Java class name of the open data values this open type describes.
			  The valid Java class names allowed for open data values are listed in
			  {@link #ALLOWED_CLASSNAMES ALLOWED_CLASSNAMES}. 
			  A multidimensional array of any one of these classes is also an allowed class,
			  in which case the class name follows the rules defined by the method
			  {@link Class#getName() getName()} of <code>java.lang.Class</code>.
			  For example, a 3-dimensional array of Strings has for class name
			  &quot;<code>[[[Ljava.lang.String;</code>&quot; (without the quotes).
<br>&nbsp;
@param  typeName  The name given to the open type this instance represents; cannot be a null or empty string.
<br>&nbsp;
@param  description  The human readable description of the open type this instance represents; 
			    cannot be a null or empty string.
<br>&nbsp;
@throws IllegalArgumentException  if <var>className</var>, <var>typeName</var> or <var>description</var>
					 is a null or empty string
<br>&nbsp;
@throws OpenDataException  if <var>className</var> is not one of the allowed Java class names for open data"
      end

      operation 8335771 "getClassName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Open type information methods *** 

Returns the fully qualified Java class name of the open data values this open type describes.
The only possible Java class names for open data values are listed in 
{@link #ALLOWED_CLASSNAMES ALLOWED_CLASSNAMES}. 
A multidimensional array of any one of these classes is also an allowed class,
in which case the class name follows the rules defined by the method
{@link Class#getName() getName()} of <code>java.lang.Class</code>.
For example, a 3-dimensional array of Strings has for class name
&quot;<code>[[[Ljava.lang.String;</code>&quot; (without the quotes).

@return the class name."
      end

      operation 8335899 "getTypeName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this <code>OpenType</code> instance.

@return the type name."
      end

      operation 8336027 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text description of this <code>OpenType</code> instance.

@return the description."
      end

      operation 8336155 "isArray"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the open data values this open
type describes are arrays, <code>false</code> otherwise.

@return true if this is an array type."
      end

      operation 8336283 "isValue"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a value for this open type.

@param obj the object to be tested for validity.

@return <code>true</code> if <var>obj</var> is a value for this
open type, <code>false</code> otherwise."
      end

      operation 8336411 "equals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Methods overriden from class Object *** 

Compares the specified <code>obj</code> parameter with this
open type instance for equality.

@param obj the object to compare to.

@return true if this object and <code>obj</code> are equal."
      end

      operation 8336539 "hashCode"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8336667 "toString"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this open type instance.

@return the string representation."
      end

      operation 8336795 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes an {@link OpenType} from an {@link ObjectInputStream}."
      end
    end

    class 1038235 "OpenDataException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This checked exception is thrown when an <i>open type</i>, an <i>open data</i>  or an <i>open MBean metadata info</i> instance 
could not be constructed because one or more validity constraints were not met.

@version     3.17  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2059547 // <generalisation>
	relation 2059547 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2059547 // <generalisation>
	  b parent class_ref 1029147 // JMException
      end

      classrelation 2059675 // <realization>
	relation 2059675 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2059675 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049883 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  8346311255433349870L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8343067 "OpenDataException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An OpenDataException with no detail message."
      end

      operation 8343195 "OpenDataException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An OpenDataException with a detail message.

@param msg the detail message."
      end
    end

    class 1038363 "CompositeType"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <code>CompositeType</code> class is the <i>open type</i> class 
whose instances describe the types of {@link CompositeData <code>CompositeData</code>} values.

@version     3.25  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2058011 // <generalisation>
	relation 2058011 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2058011 // <generalisation>
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2058139 // <realization>
	relation 2058139 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2058139 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049243 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -5366242454346948798L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2058267 // nameToDescription (<unidirectional association>)
	relation 2058267 --->
	  a role_name "nameToDescription" private
	    comment "
@serial Sorted mapping of the item names to their descriptions

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058267 // nameToDescription (<unidirectional association>)
	  b parent class_ref 157851 // TreeMap
      end

      classrelation 2058395 // nameToType (<unidirectional association>)
	relation 2058395 --->
	  a role_name "nameToType" private
	    comment "
@serial Sorted mapping of the item names to their open types

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058395 // nameToType (<unidirectional association>)
	  b parent class_ref 157851 // TreeMap
      end

      classrelation 2058523 // myHashCode (<unidirectional association>)
	relation 2058523 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, "
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058523 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3049371 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " these three values"
      end

      classrelation 2058651 // myNamesSet (<unidirectional association>)
	relation 2058651 --->
	  a role_name "myNamesSet" init_value "=  null" private
	    comment " need only be calculated once."
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2058651 // myNamesSet (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      operation 8340891 "CompositeType"
	public explicit_return_type ""
	nparams 5
	  param in name "typeName" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param in name "itemNames" explicit_type "String"
	  param in name "itemDescriptions" explicit_type "String"
	  param inout name "itemTypes" type class_ref 1038107 // OpenType
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructor *** 

Constructs a <code>CompositeType</code> instance, checking for the validity of the given parameters.
The validity constraints are described below for each parameter. 
<p>
Note that the contents of the three array parameters 
<var>itemNames</var>, <var>itemDescriptions</var> and <var>itemTypes</var>
are internally copied so that any subsequent modification of these arrays by the caller of this constructor
has no impact on the constructed <code>CompositeType</code> instance.
<p>
The Java class name of composite data values this composite type represents 
(ie the class name returned by the {@link OpenType#getClassName() getClassName} method) 
is set to the string value returned by <code>CompositeData.class.getName()</code>.
<p>
@param  typeName  The name given to the composite type this instance represents; cannot be a null or empty string.
<br>&nbsp;
@param  description  The human readable description of the composite type this instance represents; 
			    cannot be a null or empty string.
<br>&nbsp;
@param  itemNames  The names of the items contained in the 
			  composite data values described by this <code>CompositeType</code> instance; 
			  cannot be null and should contain at least one element; no element can be a null or empty string.
                   Note that the order in which the item names are given is not important to differentiate a
			  <code>CompositeType</code> instance from another;
			  the item names are internally stored sorted in ascending alphanumeric order.
<br>&nbsp;
@param  itemDescriptions  The descriptions, in the same order as <var>itemNames</var>, of the items contained in the 
			         composite data values described by this <code>CompositeType</code> instance; 
				 should be of the same size as <var>itemNames</var>;
				 no element can be a null or empty string.
<br>&nbsp;
@param  itemTypes  The open type instances, in the same order as <var>itemNames</var>, describing the items contained  
			  in the composite data values described by this <code>CompositeType</code> instance; 
			  should be of the same size as <var>itemNames</var>;
			  no element can be null.
<br>&nbsp;
@throws IllegalArgumentException  If <var>typeName</var> or <var>description</var> is a null or empty string,
					 or <var>itemNames</var> or <var>itemDescriptions</var> or <var>itemTypes</var> is null,
					 or any element of <var>itemNames</var> or <var>itemDescriptions</var> 
					 is a null or empty string,
					 or any element of <var>itemTypes</var> is null,
					 or <var>itemNames</var> or <var>itemDescriptions</var> or <var>itemTypes</var> 
					 are not of the same size.
<br>&nbsp;
@throws OpenDataException  If <var>itemNames</var> contains duplicate item names
				  (case sensitive, but leading and trailing whitespaces removed)."
      end

      operation 8341019 "checkForNullElement"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "arg" explicit_type "Object"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8341147 "checkForEmptyString"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "arg" explicit_type "String"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8341275 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "itemName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Composite type specific information methods *** 

Returns <code>true</code> if this <code>CompositeType</code> instance defines an item
whose name is <var>itemName</var>.

@param itemName the name of the item.

@return true if an item of this name is present."
      end

      operation 8341403 "getDescription"
	public explicit_return_type "String"
	nparams 1
	  param in name "itemName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the description of the item whose name is <var>itemName</var>, 
or <code>null</code> if this <code>CompositeType</code> instance does not define any item
whose name is <var>itemName</var>.

@param itemName the name of the item.

@return the description."
      end

      operation 8341531 "getType"
	public return_type class_ref 1038107 // OpenType
	nparams 1
	  param in name "itemName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>open type</i> of the item whose name is <var>itemName</var>, 
or <code>null</code> if this <code>CompositeType</code> instance does not define any item
whose name is <var>itemName</var>.

@param itemName the name of the time.

@return the type."
      end

      operation 8341659 "keySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Set view of all the item names defined by this <code>CompositeType</code> instance.
The set's iterator will return the item names in ascending order. 

@return a {@link Set} of {@link String}."
      end

      operation 8341787 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a value which could be described by this <code>CompositeType</code> instance.
<p>
If <var>obj</var> is null or is not an instance of <code>javax.management.openmbean.CompositeData</code>,
<code>isValue</code> returns <code>false</code>. 
If <var>obj</var> is an instance of <code>javax.management.openmbean.CompositeData</code>,
its composite type is tested for equality with this <code>CompositeType</code> instance, and <code>isValue</code>
returns <code>true</code> if and only if {@link #equals(java.lang.Object) <code>equals</code>} 
returns <code>true</code>.
<br>&nbsp;
@param  obj  the value whose open type is to be tested for equality with this <code>CompositeType</code> instance.

@return <code>true</code> if <var>obj</var> is a value for this composite type, <code>false</code> otherwise."
      end

      operation 8341915 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Methods overriden from class Object *** 

Compares the specified <code>obj</code> parameter with this <code>CompositeType</code> instance for equality. 
<p>
Two <code>CompositeType</code> instances are equal if and only if all of the following statements are true:
<ul>
<li>their type names are equal</li>
<li>their items' names and types are equal</li>
</ul>
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>CompositeType</code> instance;
		    if <var>obj</var> is <code>null</code>, <code>equals</code> returns <code>false</code>.

@return  <code>true</code> if the specified object is equal to this <code>CompositeType</code> instance."
      end

      operation 8342043 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>CompositeType</code> instance. 
<p>
The hash code of a <code>CompositeType</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: name, items names, items types). 
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>CompositeType</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
As <code>CompositeType</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>CompositeType</code> instance"
      end

      operation 8342171 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>CompositeType</code> instance. 
<p>
The string representation consists of 
the name of this class (ie <code>javax.management.openmbean.CompositeType</code>), the type name for this instance, 
and the list of the items names and types string representation of this instance.
<p>
As <code>CompositeType</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>CompositeType</code> instance"
      end
    end

    class 1038491 "CompositeDataSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <tt>CompositeDataSupport</tt> class is the <i>open data</i> class which implements the <tt>CompositeData</tt> interface.

@version     3.27  04/03/24
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2057499 // <realization>
	relation 2057499 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2057499 // <realization>
	  b parent class_ref 922779 // CompositeData
      end

      classrelation 2057627 // <realization>
	relation 2057627 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2057627 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049115 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  8003518976613702244L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2057755 // contents (<unidirectional association>)
	relation 2057755 --->
	  a role_name "contents" init_value "=  new TreeMap()" private
	    comment "
@serial Internal representation of the mapping of item names to their respective values.
        A {@link SortedMap} is used for faster retrieval of elements.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057755 // contents (<unidirectional association>)
	  b parent class_ref 140827 // SortedMap
      end

      classrelation 2057883 // compositeType (<unidirectional association>)
	relation 2057883 --->
	  a role_name "compositeType" private
	    comment "
@serial The <i>composite type </i> of this <i>composite data</i> instance.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2057883 // compositeType (<unidirectional association>)
	  b parent class_ref 1038363 // CompositeType
      end

      operation 8339227 "CompositeDataSupport"
	public explicit_return_type ""
	nparams 3
	  param inout name "compositeType" type class_ref 1038363 // CompositeType
	  param in name "itemNames" explicit_type "String"
	  param inout name "itemValues" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Constructs a <tt>CompositeDataSupport</tt> instance with the specified <tt>compositeType</tt>, whose item values
are specified by <tt>itemValues[]</tt>, in the same order as in <tt>itemNames[]</tt>. 
As a <tt>CompositeType</tt> does not specify any order on its items, the <tt>itemNames[]</tt> parameter is used
to specify the order in which the values are given in <tt>itemValues[]</tt>. 
The items contained in this <tt>CompositeDataSupport</tt> instance are internally stored in a <tt>TreeMap</tt>,
thus sorted in ascending lexicographic order of their names, for faster retrieval of individual item values.
<p>
The constructor checks that all the constraints listed below for each parameter are satisfied,
and throws the appropriate exception if they are not.
<p>
@param  compositeType  the <i>composite type </i> of this <i>composite data</i> instance;
			      must not be null.
<p>
@param  itemNames  <tt>itemNames</tt> must list, in any order, all the item names defined in <tt>compositeType</tt>;
			  the order in which the names are listed, is used to match values in <tt>itemValues[]</tt>;
			  must not be null or empty. 
<p>
@param  itemValues  the values of the items, listed in the same order as their respective names in <tt>itemNames</tt>;
			   each item value can be null, but if it is non-null it must be 
			   a valid value for the open type defined in <tt>compositeType</tt> for the corresponding item;
			   must be of the same size as <tt>itemNames</tt>; must not be null or empty.
<p>
@throws  IllegalArgumentException  <tt>compositeType</tt> is null, or <tt>itemNames[]</tt> or <tt>itemValues[]</tt> is null or empty,
					  or one of the elements in <tt>itemNames[]</tt>  is a null or empty string,
					  or <tt>itemNames[]</tt> and <tt>itemValues[]</tt> are not of the same size.
<p>
@throws  OpenDataException  <tt>itemNames[]</tt> or <tt>itemValues[]</tt>'s size differs from 
				   the number of items defined in <tt>compositeType</tt>,
				   or one of the elements in <tt>itemNames[]</tt> does not exist as an item name defined in <tt>compositeType</tt>,
				   or one of the elements in <tt>itemValues[]</tt> is not a valid value for the corresponding item 
				   as defined in <tt>compositeType</tt>.
<p>"
      end

      operation 8339355 "CompositeDataSupport"
	public explicit_return_type ""
	nparams 2
	  param inout name "compositeType" type class_ref 1038363 // CompositeType
	  param inout name "items" type class_ref 136603 // Map
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Constructs a <tt>CompositeDataSupport</tt> instance with the specified <tt>compositeType</tt>, whose item names and corresponding values
are given by the mappings in the map <tt>items</tt>.
This constructor converts the keys to a string array and the values to an object array and calls
<tt>CompositeDataSupport(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[])</tt>.
<p>
@param  compositeType  the <i>composite type </i> of this <i>composite data</i> instance;
			      must not be null.
<p>
@param  items  the mappings of all the item names to their values;
		      <tt>items</tt> must contain all the item names defined in <tt>compositeType</tt>;
		      must not be null or empty. 
<p>
@throws  IllegalArgumentException  <tt>compositeType</tt> is null, or <tt>items</tt> is null or empty,
					  or one of the keys in <tt>items</tt>  is a null or empty string,
					  or one of the values in <tt>items</tt>  is null.
<p>
@throws  OpenDataException  <tt>items</tt>' size differs from the number of items defined in <tt>compositeType</tt>,
				   or one of the keys in <tt>items</tt> does not exist as an item name defined in <tt>compositeType</tt>,
				   or one of the values in <tt>items</tt> is not a valid value for the corresponding item 
				   as defined in <tt>compositeType</tt>.
<p>
@throws ArrayStoreException  one or more keys in <tt>items</tt> is not of the class <tt>java.lang.String</tt>.
<p>"
      end

      operation 8339483 "checkForNullElement"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "arg" explicit_type "Object"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8339611 "checkForEmptyString"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "arg" explicit_type "String"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8339739 "getCompositeType"
	public return_type class_ref 1038363 // CompositeType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>composite type </i> of this <i>composite data</i> instance."
      end

      operation 8339867 "get"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the item whose name is <tt>key</tt>.

@throws IllegalArgumentException  if <tt>key</tt> is a null or empty String.

@throws InvalidKeyException  if <tt>key</tt> is not an existing item name for this <tt>CompositeData</tt> instance."
      end

      operation 8339995 "getAll"
	public explicit_return_type "Object"
	nparams 1
	  param in name "keys" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the values of the items whose names are specified by <tt>keys</tt>, in the same order as <tt>keys</tt>.

@throws IllegalArgumentException  if an element in <tt>keys</tt> is a null or empty String.

@throws InvalidKeyException  if an element in <tt>keys</tt> is not an existing item name for this <tt>CompositeData</tt> instance."
      end

      operation 8340123 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>CompositeData</tt> instance contains 
an item whose name is <tt>key</tt>. 
If <tt>key</tt> is a null or empty String, this method simply returns false."
      end

      operation 8340251 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>CompositeData</tt> instance contains an item 
whose value is <tt>value</tt>."
      end

      operation 8340379 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Collection view of the item values contained in this <tt>CompositeData</tt> instance.
The returned collection's iterator will return the values in the ascending lexicographic order of the corresponding 
item names. "
      end

      operation 8340507 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <var>obj</var> parameter with this <code>CompositeDataSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>CompositeData</code> interface,</li>
<li>their composite types are equal</li>
<li>their contents, i.e. (name, value) pairs are equal. </li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>CompositeData</code> interface, with the restrictions mentioned in the
{@link java.util.Collection#equals(Object) equals}
method of the <tt>java.util.Collection</tt> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>CompositeDataSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>CompositeDataSupport</code> instance."
      end

      operation 8340635 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>CompositeDataSupport</code> instance. 
<p>
The hash code of a <code>CompositeDataSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its <i>composite type</i> and all the item values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>CompositeDataSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>CompositeData</code> interface
may be equal to this <code>CompositeDataSupport</code> instance as defined by {@link #equals}, 
but may have a different hash code if it is calculated differently.

@return  the hash code value for this <code>CompositeDataSupport</code> instance"
      end

      operation 8340763 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>CompositeDataSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.CompositeDataSupport</code>), 
the string representation of the composite type of this instance, and the string representation of the contents
(ie list the itemName=itemValue mappings).

@return  a string representation of this <code>CompositeDataSupport</code> instance"
      end
    end

    class 1038619 "InvalidKeyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


This runtime exception is thrown to indicate that a method parameter which was expected to be 
an item name of a <i>composite data</i> or a row index of a <i>tabular data</i> is not valid.

@version     3.17  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2058779 // <generalisation>
	relation 2058779 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2058779 // <generalisation>
	  b parent class_ref 216859 // IllegalArgumentException
      end

      classrelation 2058907 // <realization>
	relation 2058907 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2058907 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049499 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4224269443946322062L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8342299 "InvalidKeyException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An InvalidKeyException with no detail message."
      end

      operation 8342427 "InvalidKeyException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An InvalidKeyException with a detail message.

@param msg the detail message."
      end
    end

    class 1038747 "InvalidOpenTypeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


This runtime exception is thrown to indicate that the <i>open type</i> of an <i>open data</i> value
is not the one expected.

@version     3.17  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2059035 // <generalisation>
	relation 2059035 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2059035 // <generalisation>
	  b parent class_ref 216859 // IllegalArgumentException
      end

      classrelation 2059163 // <realization>
	relation 2059163 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2059163 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049627 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2837312755412327534L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8342555 "InvalidOpenTypeException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " An InvalidOpenTypeException with no detail message.  "
      end

      operation 8342683 "InvalidOpenTypeException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An InvalidOpenTypeException with a detail message.

@param msg the detail message."
      end
    end

    class 1038875 "KeyAlreadyExistsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


This runtime exception is thrown to indicate that the index of a row to be added to a <i>tabular data</i> instance
is already used to refer to another row in this <i>tabular data</i> instance.

@version     3.17  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2059291 // <generalisation>
	relation 2059291 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2059291 // <generalisation>
	  b parent class_ref 216859 // IllegalArgumentException
      end

      classrelation 2059419 // <realization>
	relation 2059419 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2059419 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3049755 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1845183636745282866L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8342811 "KeyAlreadyExistsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A KeyAlreadyExistsException with no detail message."
      end

      operation 8342939 "KeyAlreadyExistsException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A KeyAlreadyExistsException with a detail message.

@param msg the detail message."
      end
    end

    class 1039003 "OpenMBeanAttributeInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " java import

 jmx import


<p>Describes an attribute of an open MBean.</p>

<p>This interface declares the same methods as the class {@link
javax.management.MBeanAttributeInfo}.  A class implementing this
interface (typically {@link OpenMBeanAttributeInfoSupport}) should
extend {@link javax.management.MBeanAttributeInfo}.</p>

@version     3.20  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2059803 // <generalisation>
	relation 2059803 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2059803 // <generalisation>
	  b parent class_ref 1039131 // OpenMBeanParameterInfo
      end

      operation 8345243 "isReadable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-declares the methods that are in class MBeanAttributeInfo of JMX 1.0
 (these will be removed when MBeanAttributeInfo is made a parent interface of this interface)

Returns <tt>true</tt> if the attribute described by this <tt>OpenMBeanAttributeInfo</tt> instance is readable,
<tt>false</tt> otherwise.

@return true if the attribute is readable."
      end

      operation 8345371 "isWritable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the attribute described by this <tt>OpenMBeanAttributeInfo</tt> instance is writable,
<tt>false</tt> otherwise.

@return true if the attribute is writable."
      end

      operation 8345499 "isIs"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the attribute described by this <tt>OpenMBeanAttributeInfo</tt> instance
is accessed through a <tt>is<i>XXX</i></tt> getter (applies only to <tt>boolean</tt> and <tt>Boolean</tt> values),
<tt>false</tt> otherwise.

@return true if the attribute is accessed through <tt>is<i>XXX</i></tt>."
      end

      operation 8345627 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " commodity methods


Compares the specified <var>obj</var> parameter with this <code>OpenMBeanAttributeInfo</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanAttributeInfo</code> interface,</li>
<li>their names are equal</li>
<li>their open types are equal</li>
<li>their access properties (isReadable, isWritable and isIs) are equal</li>
<li>their default, min, max and legal values are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanAttributeInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanAttributeInfo</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanAttributeInfo</code> instance."
      end

      operation 8345755 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanAttributeInfo</code> instance. 
<p>
The hash code of an <code>OpenMBeanAttributeInfo</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, its <i>open type</i>, and its default, min, max and legal values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanAttributeInfo</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>OpenMBeanAttributeInfo</code> instance"
      end

      operation 8345883 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanAttributeInfo</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanAttributeInfo</code>), 
the string representation of the name and open type of the described attribute, 
and the string representation of its default, min, max and legal values.

@return  a string representation of this <code>OpenMBeanAttributeInfo</code> instance"
      end
    end

    class 1039131 "OpenMBeanParameterInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


<p>Describes a parameter used in one or more operations or
constructors of an open MBean.</p>

<p>This interface declares the same methods as the class {@link
javax.management.MBeanParameterInfo}.  A class implementing this
interface (typically {@link OpenMBeanParameterInfoSupport}) should
extend {@link javax.management.MBeanParameterInfo}.</p>

@version     3.21  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8343323 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-declares methods that are in class MBeanParameterInfo of JMX 1.0
 (these will be removed when MBeanParameterInfo is made a parent interface of this interface)

Returns a human readable description of the parameter 
described by this <tt>OpenMBeanParameterInfo</tt> instance.

@return the description."
      end

      operation 8343451 "getName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the parameter
described by this <tt>OpenMBeanParameterInfo</tt> instance.

@return the name."
      end

      operation 8343579 "getOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Now declares methods that are specific to open MBeans


Returns the <i>open type</i> of the values of the parameter
described by this <tt>OpenMBeanParameterInfo</tt> instance.

@return the open type."
      end

      operation 8343707 "getDefaultValue"
	public explicit_return_type "Object"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value for this parameter, if it has one, or
<tt>null</tt> otherwise.

@return the default value."
      end

      operation 8343835 "getLegalValues"
	public return_type class_ref 136731 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of legal values for this parameter, if it has
one, or <tt>null</tt> otherwise.

@return the set of legal values."
      end

      operation 8343963 "getMinValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimal value for this parameter, if it has one, or
<tt>null</tt> otherwise.

@return the minimum value."
      end

      operation 8344091 "getMaxValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximal value for this parameter, if it has one, or
<tt>null</tt> otherwise.

@return the maximum value."
      end

      operation 8344219 "hasDefaultValue"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this parameter has a specified default
value, or <tt>false</tt> otherwise.

@return true if there is a default value."
      end

      operation 8344347 "hasLegalValues"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this parameter has a specified set of
legal values, or <tt>false</tt> otherwise.

@return true if there is a set of legal values."
      end

      operation 8344475 "hasMinValue"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this parameter has a specified minimal
value, or <tt>false</tt> otherwise.

@return true if there is a minimum value."
      end

      operation 8344603 "hasMaxValue"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this parameter has a specified maximal
value, or <tt>false</tt> otherwise.

@return true if there is a maximum value."
      end

      operation 8344731 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a valid value for the parameter
described by this <code>OpenMBeanParameterInfo</code> instance.

@param obj the object to be tested.

@return <code>true</code> if <var>obj</var> is a valid value
for for the parameter described by this
<code>OpenMBeanParameterInfo</code> instance,
<code>false</code> otherwise."
      end

      operation 8344859 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <var>obj</var> parameter with this <code>OpenMBeanParameterInfo</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanParameterInfo</code> interface,</li>
<li>their names are equal</li>
<li>their open types are equal</li>
<li>their default, min, max and legal values are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanParameterInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanParameterInfo</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanParameterInfo</code> instance."
      end

      operation 8344987 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanParameterInfo</code> instance. 
<p>
The hash code of an <code>OpenMBeanParameterInfo</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, its <i>open type</i>, and its default, min, max and legal values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanParameterInfo</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>OpenMBeanParameterInfo</code> instance"
      end

      operation 8345115 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanParameterInfo</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanParameterInfo</code>), 
the string representation of the name and open type of the described parameter, 
and the string representation of its default, min, max and legal values.

@return  a string representation of this <code>OpenMBeanParameterInfo</code> instance"
      end
    end

    class 1039259 "OpenMBeanAttributeInfoSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes an attribute of an open MBean.

@version     3.28  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2059931 // <generalisation>
	relation 2059931 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2059931 // <generalisation>
	  b parent class_ref 514971 // MBeanAttributeInfo
      end

      classrelation 2060059 // <realization>
	relation 2060059 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2060059 // <realization>
	  b parent class_ref 1039003 // OpenMBeanAttributeInfo
      end

      classrelation 2060187 // <realization>
	relation 2060187 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2060187 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3050011 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -4867215622149721849L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2060315 // openType (<unidirectional association>)
	relation 2060315 --->
	  a role_name "openType" private
	    comment "
@serial The open mbean attribute's <i>open type</i>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060315 // openType (<unidirectional association>)
	  b parent class_ref 1038107 // OpenType
      end

      attribute 3050139 "defaultValue"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The open mbean attribute's default value
"
      end

      classrelation 2060443 // legalValues (<unidirectional association>)
	relation 2060443 --->
	  a role_name "legalValues" init_value "=  null" private
	    comment "
@serial The open mbean attribute's legal values. This {@link Set} is unmodifiable

 to be constructed unmodifiable"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060443 // legalValues (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 2060571 // minValue (<unidirectional association>)
	relation 2060571 --->
	  a role_name "minValue" init_value "=  null" private
	    comment "
@serial The open mbean attribute's min value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060571 // minValue (<unidirectional association>)
	  b parent class_ref 221467 // Comparable
      end

      classrelation 2060699 // maxValue (<unidirectional association>)
	relation 2060699 --->
	  a role_name "maxValue" init_value "=  null" private
	    comment "
@serial The open mbean attribute's max value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060699 // maxValue (<unidirectional association>)
	  b parent class_ref 221467 // Comparable
      end

      classrelation 2060827 // myHashCode (<unidirectional association>)
	relation 2060827 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2060827 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3050267 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8346011 "OpenMBeanAttributeInfoSupport"
	public explicit_return_type ""
	nparams 6
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "isReadable" explicit_type "boolean"
	  param inout name "isWritable" explicit_type "boolean"
	  param inout name "isIs" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanAttributeInfoSupport</tt> instance, which describes the attribute of an open MBean
with the specified <var>name</var>, <var>openType</var> and <var>description</var>,
and the specified read/write access properties.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param isReadable  <tt>true</tt> if the attribute has a getter exposed for management. 

@param isWritable  <tt>true</tt> if the attribute has a setter exposed for management.

@param isIs  <tt>true</tt> if the attribute's getter is of the form <tt>is<i>XXX</i></tt>.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null."
      end

      operation 8346139 "OpenMBeanAttributeInfoSupport"
	public explicit_return_type ""
	nparams 7
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "isReadable" explicit_type "boolean"
	  param inout name "isWritable" explicit_type "boolean"
	  param inout name "isIs" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanAttributeInfoSupport</tt> instance, which describes the attribute of an open MBean
with the specified <var>name</var>, <var>openType</var>, <var>description</var> and <var>defaultValue</var>,
and the specified read/write access properties.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param isReadable  <tt>true</tt> if the attribute has a getter exposed for management. 

@param isWritable  <tt>true</tt> if the attribute has a setter exposed for management.

@param isIs  <tt>true</tt> if the attribute's getter is of the form <tt>is<i>XXX</i></tt>.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this attribute;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var> is not a valid value for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>."
      end

      operation 8346267 "OpenMBeanAttributeInfoSupport"
	public explicit_return_type ""
	nparams 8
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "isReadable" explicit_type "boolean"
	  param inout name "isWritable" explicit_type "boolean"
	  param inout name "isIs" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "Object"
	  param inout name "legalValues" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7}[] ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanAttributeInfoSupport</tt> instance, which describes the attribute of an open MBean
with the specified <var>name</var>, <var>openType</var>, <var>description</var>, 
<var>defaultValue</var> and <var>legalValues</var>,
and the specified read/write access properties.

The contents of <var>legalValues</var> are internally dumped into an unmodifiable <tt>Set</tt>,
so subsequent modifications of the array referenced by <var>legalValues</var> have no impact on 
this <tt>OpenMBeanAttributeInfoSupport</tt> instance.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param isReadable  <tt>true</tt> if the attribute has a getter exposed for management. 

@param isWritable  <tt>true</tt> if the attribute has a setter exposed for management.

@param isIs  <tt>true</tt> if the attribute's getter is of the form <tt>is<i>XXX</i></tt>.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this attribute;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@param legalValues   each contained value must be valid for the <var>openType</var> specified for this attribute;
			    legal values not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null or empty.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var> is not a valid value for the specified <var>openType</var>,
				  or one value in <var>legalValues</var> is not valid for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or <var>legalValues</var> is non null and non empty and
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or <var>legalValues</var> is non null and non empty and
				  <var>defaultValue</var> is not contained in <var>legalValues</var>."
      end

      operation 8346395 "OpenMBeanAttributeInfoSupport"
	public explicit_return_type ""
	nparams 9
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "isReadable" explicit_type "boolean"
	  param inout name "isWritable" explicit_type "boolean"
	  param inout name "isIs" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "Object"
	  param inout name "minValue" type class_ref 221467 // Comparable
	  param inout name "maxValue" type class_ref 221467 // Comparable
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanAttributeInfoSupport</tt> instance, which describes the attribute 
used in one or more operations or constructors of a class of open MBeans,
with the specified <var>name</var>, <var>openType</var>, <var>description</var>, 
<var>defaultValue</var>, <var>minValue</var> and <var>maxValue</var>.

It is possible to specify minimal and maximal values only for an open type 
whose values are <tt>Comparable</tt>.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param isReadable  <tt>true</tt> if the attribute has a getter exposed for management. 

@param isWritable  <tt>true</tt> if the attribute has a setter exposed for management.

@param isIs  <tt>true</tt> if the attribute's getter is of the form <tt>is<i>XXX</i></tt>.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this attribute;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@param minValue   must be valid for the <var>openType</var> specified for this attribute;
			 can be null, in which case it means that no minimal value is set.

@param maxValue   must be valid for the <var>openType</var> specified for this attribute;
			 can be null, in which case it means that no maximal value is set.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var>, <var>minValue</var> or <var>maxValue</var>
				  is not a valid value for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or both <var>minValue</var> and <var>maxValue</var> are non-null and
				  <tt>minValue.compareTo(maxValue) > 0</tt> is <tt>true</tt>,
				  or both <var>defaultValue</var> and <var>minValue</var> are non-null and
				  <tt>minValue.compareTo(defaultValue) > 0</tt> is <tt>true</tt>,
				  or both <var>defaultValue</var> and <var>maxValue</var> are non-null and
				  <tt>defaultValue.compareTo(maxValue) > 0</tt> is <tt>true</tt>."
      end

      operation 8346523 "getOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the open type for the values of the attribute described by this <tt>OpenMBeanAttributeInfoSupport</tt> instance."
      end

      operation 8346651 "getDefaultValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value for the attribute described by this <tt>OpenMBeanAttributeInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8346779 "getLegalValues"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Set of legal values for the attribute described by this <tt>OpenMBeanAttributeInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8346907 "getMinValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimal value for the attribute described by this <tt>OpenMBeanAttributeInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8347035 "getMaxValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximal value for the attribute described by this <tt>OpenMBeanAttributeInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8347163 "hasDefaultValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanAttributeInfoSupport</tt> instance specifies a non-null default value 
for the described attribute, <tt>false</tt> otherwise."
      end

      operation 8347291 "hasLegalValues"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanAttributeInfoSupport</tt> instance specifies a non-null set of legal values
for the described attribute, <tt>false</tt> otherwise."
      end

      operation 8347419 "hasMinValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanAttributeInfoSupport</tt> instance specifies a non-null minimal value 
for the described attribute, <tt>false</tt> otherwise."
      end

      operation 8347547 "hasMaxValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanAttributeInfoSupport</tt> instance specifies a non-null maximal value 
for the described attribute, <tt>false</tt> otherwise."
      end

      operation 8347675 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a valid value for the attribute
described by this <code>OpenMBeanAttributeInfoSupport</code>
instance.

@param obj the object to be tested.

@return <code>true</code> if <var>obj</var> is a valid value for for the parameter described by 
        this <code>OpenMBeanAttributeInfoSupport</code> instance, <code>false</code> otherwise."
      end

      operation 8347803 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>OpenMBeanAttributeInfoSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanAttributeInfo</code> interface,</li>
<li>their names are equal</li>
<li>their open types are equal</li>
<li>their access properties (isReadable, isWritable and isIs) are equal</li>
<li>their default, min, max and legal values are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanAttributeInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanAttributeInfoSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanAttributeInfoSupport</code> instance."
      end

      operation 8347931 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanAttributeInfoSupport</code> instance. 
<p>
The hash code of an <code>OpenMBeanAttributeInfoSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, its <i>open type</i>, and its default, min, max and legal values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanAttributeInfoSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>OpenMBeanAttributeInfo</code> interface
may be equal to this <code>OpenMBeanAttributeInfoSupport</code> instance as defined by {@link #equals(java.lang.Object)}, 
but may have a different hash code if it is calculated differently.
<p>
As <code>OpenMBeanAttributeInfoSupport</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>OpenMBeanAttributeInfoSupport</code> instance"
      end

      operation 8348059 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanAttributeInfoSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanAttributeInfoSupport</code>), 
the string representation of the name and open type of the described parameter, 
and the string representation of its default, min, max and legal values.
<p>
As <code>OpenMBeanAttributeInfoSupport</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>OpenMBeanAttributeInfoSupport</code> instance"
      end
    end

    class 1039387 "OpenMBeanConstructorInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Describes a constructor of an Open MBean.</p>

<p>This interface declares the same methods as the class {@link
javax.management.MBeanConstructorInfo}.  A class implementing this
interface (typically {@link OpenMBeanConstructorInfoSupport})
should extend {@link javax.management.MBeanConstructorInfo}.</p>

<p>The {@link #getSignature()} method should return at runtime an
array of instances of a subclass of {@link MBeanParameterInfo}
which implements the {@link OpenMBeanParameterInfo} interface
(typically {@link OpenMBeanParameterInfoSupport}).</p>


@version     3.19  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8348187 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-declares the methods that are in class MBeanConstructorInfo of JMX 1.0
 (methods will be removed when MBeanConstructorInfo is made a parent interface of this interface)

Returns a human readable description of the constructor 
described by this <tt>OpenMBeanConstructorInfo</tt> instance.

@return the description."
      end

      operation 8348315 "getName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the constructor
described by this <tt>OpenMBeanConstructorInfo</tt> instance.

@return the name."
      end

      operation 8348443 "getSignature"
	public return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>OpenMBeanParameterInfo</tt> instances
describing each parameter in the signature of the constructor
described by this <tt>OpenMBeanConstructorInfo</tt> instance.

@return the signature."
      end

      operation 8348571 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " commodity methods


Compares the specified <var>obj</var> parameter with this <code>OpenMBeanConstructorInfo</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanConstructorInfo</code> interface,</li>
<li>their names are equal</li>
<li>their signatures are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanConstructorInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanConstructorInfo</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanConstructorInfo</code> instance."
      end

      operation 8348699 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanConstructorInfo</code> instance. 
<p>
The hash code of an <code>OpenMBeanConstructorInfo</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name and signature, where the signature hashCode is calculated by a call to 
 <tt>java.util.Arrays.asList(this.getSignature).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanConstructorInfo</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>OpenMBeanConstructorInfo</code> instance"
      end

      operation 8348827 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanConstructorInfo</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanConstructorInfo</code>), 
and the name and signature of the described constructor.

@return  a string representation of this <code>OpenMBeanConstructorInfo</code> instance"
      end
    end

    class 1039515 "OpenMBeanConstructorInfoSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes a constructor of an Open MBean.

@version     3.22  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2060955 // <generalisation>
	relation 2060955 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2060955 // <generalisation>
	  b parent class_ref 515099 // MBeanConstructorInfo
      end

      classrelation 2061083 // <realization>
	relation 2061083 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2061083 // <realization>
	  b parent class_ref 1039387 // OpenMBeanConstructorInfo
      end

      classrelation 2061211 // <realization>
	relation 2061211 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2061211 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3050395 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -4400441579007477003L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2061339 // myHashCode (<unidirectional association>)
	relation 2061339 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061339 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3050523 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8348955 "OpenMBeanConstructorInfoSupport"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "signature" type class_ref 1039131 // OpenMBeanParameterInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanConstructorInfoSupport</tt> instance, which describes the constructor 
of a class of open MBeans with the specified <var>name</var>, <var>description</var> and <var>signature</var>.
<p>
The <var>signature</var> array parameter is internally copied, so that subsequent changes 
to the array referenced by <var>signature</var> have no effect on this instance.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param signature  can be null or empty if there are no parameters to describe.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string.

@throws ArrayStoreException  If <var>signature</var> is not an array of instances of a subclass of <tt>MBeanParameterInfo</tt>."
      end

      operation 8349083 "arrayCopyCast"
	class_operation private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 1
	  param inout name "src" type class_ref 1039131 // OpenMBeanParameterInfo
	nexceptions 1
	  exception class_ref 909467 // ArrayStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8349211 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>OpenMBeanConstructorInfoSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanConstructorInfo</code> interface,</li>
<li>their names are equal</li>
<li>their signatures are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanConstructorInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanConstructorInfoSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanConstructorInfoSupport</code> instance."
      end

      operation 8349339 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanConstructorInfoSupport</code> instance. 
<p>
The hash code of an <code>OpenMBeanConstructorInfoSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name and signature, where the signature hashCode is calculated by a call to 
 <tt>java.util.Arrays.asList(this.getSignature).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanConstructorInfoSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>OpenMBeanConstructorInfo</code> interface
may be equal to this <code>OpenMBeanConstructorInfoSupport</code> instance as defined by {@link #equals(java.lang.Object)}, 
but may have a different hash code if it is calculated differently.
<p>
As <code>OpenMBeanConstructorInfoSupport</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>OpenMBeanConstructorInfoSupport</code> instance"
      end

      operation 8349467 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanConstructorInfoSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanConstructorInfoSupport</code>), 
and of the name and signature of the described constructor.
<p>
As <code>OpenMBeanConstructorInfoSupport</code> instances are immutable, 
the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>OpenMBeanConstructorInfoSupport</code> instance"
      end
    end

    class 1039643 "OpenMBeanInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Describes an Open MBean: an Open MBean is recognized as such if
its {@link javax.management.DynamicMBean#getMBeanInfo()
getMBeanInfo()} method returns an instance of a class which
implements the {@link OpenMBeanInfo} interface, typically {@link
OpenMBeanInfoSupport}.</p>

<p>This interface declares the same methods as the class {@link
javax.management.MBeanInfo}.  A class implementing this interface
(typically {@link OpenMBeanInfoSupport}) should extend {@link
javax.management.MBeanInfo}.</p>

<p>The {@link #getAttributes()}, {@link #getOperations()} and
{@link #getConstructors()} methods of the implementing class should
return at runtime an array of instances of a subclass of {@link
MBeanAttributeInfo}, {@link MBeanOperationInfo} or {@link
MBeanConstructorInfo} respectively which implement the {@link
OpenMBeanAttributeInfo}, {@link OpenMBeanOperationInfo} or {@link
OpenMBeanConstructorInfo} interface respectively.

@version     3.22  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8349595 "getClassName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-declares the methods that are in class MBeanInfo of JMX 1.0
 (methods will be removed when MBeanInfo is made a parent interface of this interface)

Returns the fully qualified Java class name of the open MBean
instances this <tt>OpenMBeanInfo</tt> describes.

@return the class name."
      end

      operation 8349723 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human readable description of the type of open MBean
instances this <tt>OpenMBeanInfo</tt> describes.

@return the description."
      end

      operation 8349851 "getAttributes"
	public return_type class_ref 514971 // MBeanAttributeInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>OpenMBeanAttributeInfo</tt> instances
describing each attribute in the open MBean described by this
<tt>OpenMBeanInfo</tt> instance.  Each instance in the returned
array should actually be a subclass of
<tt>MBeanAttributeInfo</tt> which implements the
<tt>OpenMBeanAttributeInfo</tt> interface (typically {@link
OpenMBeanAttributeInfoSupport}).

@return the attribute array."
      end

      operation 8349979 "getOperations"
	public return_type class_ref 1031323 // MBeanOperationInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>OpenMBeanOperationInfo</tt> instances
describing each operation in the open MBean described by this
<tt>OpenMBeanInfo</tt> instance.  Each instance in the returned
array should actually be a subclass of
<tt>MBeanOperationInfo</tt> which implements the
<tt>OpenMBeanOperationInfo</tt> interface (typically {@link
OpenMBeanOperationInfoSupport}).

@return the operation array."
      end

      operation 8350107 "getConstructors"
	public return_type class_ref 515099 // MBeanConstructorInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>OpenMBeanConstructorInfo</tt> instances
describing each constructor in the open MBean described by this
<tt>OpenMBeanInfo</tt> instance.  Each instance in the returned
array should actually be a subclass of
<tt>MBeanConstructorInfo</tt> which implements the
<tt>OpenMBeanConstructorInfo</tt> interface (typically {@link
OpenMBeanConstructorInfoSupport}).

@return the constructor array."
      end

      operation 8350235 "getNotifications"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>MBeanNotificationInfo</tt> instances 
describing each notification emitted by the open MBean 
described by this <tt>OpenMBeanInfo</tt> instance.

@return the notification array."
      end

      operation 8350363 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " commodity methods


Compares the specified <var>obj</var> parameter with this <code>OpenMBeanInfo</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanInfo</code> interface,</li>
<li>their class names are equal</li>
<li>their infos on attributes, constructors, operations and notifications are equal</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanInfo</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanInfo</code> instance."
      end

      operation 8350491 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanInfo</code> instance. 
<p>
The hash code of an <code>OpenMBeanInfo</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its class name, and its infos on attributes, constructors, operations and notifications, 
where the hashCode of each of these arrays is calculated by a call to 
 <tt>new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanInfo</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>OpenMBeanInfo</code> instance"
      end

      operation 8350619 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanInfo</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanInfo</code>), 
the MBean class name, 
and the string representation of infos on attributes, constructors, operations and notifications of the described MBean.

@return  a string representation of this <code>OpenMBeanInfo</code> instance"
      end
    end

    class 1039771 "OpenMBeanInfoSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <tt>OpenMBeanInfoSupport</tt> class describes the management information of an <i>open MBean</i>:
it is a subclass of {@link javax.management.MBeanInfo}, and it implements the {@link OpenMBeanInfo} interface.
Note that an <i>open MBean</i> is recognized as such if its <tt>getMBeanInfo()</tt> method returns an instance of a class
which implements the OpenMBeanInfo interface, typically <tt>OpenMBeanInfoSupport</tt>.

@version     3.22  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2061467 // <generalisation>
	relation 2061467 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2061467 // <generalisation>
	  b parent class_ref 512795 // MBeanInfo
      end

      classrelation 2061595 // <realization>
	relation 2061595 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2061595 // <realization>
	  b parent class_ref 1039643 // OpenMBeanInfo
      end

      classrelation 2061723 // <realization>
	relation 2061723 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2061723 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3050651 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  4349395935420511492L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2061851 // myHashCode (<unidirectional association>)
	relation 2061851 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2061851 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3050779 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8350747 "OpenMBeanInfoSupport"
	public explicit_return_type ""
	nparams 6
	  param in name "className" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openAttributes" type class_ref 1039003 // OpenMBeanAttributeInfo
	  param inout name "openConstructors" type class_ref 1039387 // OpenMBeanConstructorInfo
	  param inout name "openOperations" type class_ref 1039899 // OpenMBeanOperationInfo
	  param inout name "notifications" type class_ref 516635 // MBeanNotificationInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanInfoSupport</tt> instance, 
which describes a class of open MBeans with the specified 
<var>className</var>, <var>description</var>, <var>openAttributes</var>, 
<var>openConstructors</var> , <var>openOperations</var> and <var>notifications</var>.
<p>
The <var>openAttributes</var>, <var>openConstructors</var>,  
<var>openOperations</var> and <var>notifications</var>
array parameters are internally copied, so that subsequent changes 
to the arrays referenced by these parameters have no effect on this instance.
<p>


@param className		The fully qualified Java class name of 
				the open MBean described by this <CODE>OpenMBeanInfoSupport</CODE> instance.

@param description	A human readable description of 
				the open MBean described by this <CODE>OpenMBeanInfoSupport</CODE> instance.

@param openAttributes	The list of exposed attributes of the described open MBean;
				Must be an array of instances of a subclass of <tt>MBeanAttributeInfo</tt>, 
				typically <tt>OpenMBeanAttributeInfoSupport</tt>.

@param openConstructors	The list of exposed public constructors of the described open MBean;
				Must be an array of instances of a subclass of <tt>MBeanConstructorInfo</tt>, 
				typically <tt>OpenMBeanConstructorInfoSupport</tt>.

@param openOperations	The list of exposed operations of the described open MBean.
				Must be an array of instances of a subclass of <tt>MBeanOperationInfo</tt>, 
				typically <tt>OpenMBeanOperationInfoSupport</tt>.

@param notifications	The list of notifications emitted by the described open MBean.

@throws ArrayStoreException  If <var>openAttributes</var>, <var>openConstructors</var> or <var>openOperations</var>
				   is not an array of instances of a subclass of <tt>MBeanAttributeInfo</tt>,
				   <tt>MBeanConstructorInfo</tt> or <tt>MBeanOperationInfo</tt> respectively."
      end

      operation 8350875 "attributesArrayCopyCast"
	class_operation private return_type class_ref 514971 // MBeanAttributeInfo
	nparams 1
	  param inout name "src" type class_ref 1039003 // OpenMBeanAttributeInfo
	nexceptions 1
	  exception class_ref 909467 // ArrayStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8351003 "constructorsArrayCopyCast"
	class_operation private return_type class_ref 515099 // MBeanConstructorInfo
	nparams 1
	  param inout name "src" type class_ref 1039387 // OpenMBeanConstructorInfo
	nexceptions 1
	  exception class_ref 909467 // ArrayStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8351131 "operationsArrayCopyCast"
	class_operation private return_type class_ref 1031323 // MBeanOperationInfo
	nparams 1
	  param inout name "src" type class_ref 1039899 // OpenMBeanOperationInfo
	nexceptions 1
	  exception class_ref 909467 // ArrayStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8351259 "notificationsArrayCopy"
	class_operation private return_type class_ref 516635 // MBeanNotificationInfo
	nparams 1
	  param inout name "src" type class_ref 516635 // MBeanNotificationInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8351387 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>OpenMBeanInfoSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanInfo</code> interface,</li>
<li>their class names are equal</li>
<li>their infos on attributes, constructors, operations and notifications are equal</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanInfoSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanInfoSupport</code> instance."
      end

      operation 8351515 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanInfoSupport</code> instance. 
<p>
The hash code of an <code>OpenMBeanInfoSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its class name, and its infos on attributes, constructors, operations and notifications, 
where the hashCode of each of these arrays is calculated by a call to 
 <tt>new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanInfoSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>OpenMBeanInfo</code> interface
may be equal to this <code>OpenMBeanInfoSupport</code> instance as defined by {@link #equals(java.lang.Object)}, 
but may have a different hash code if it is calculated differently.
<p>
As <code>OpenMBeanInfoSupport</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>OpenMBeanInfoSupport</code> instance"
      end

      operation 8351643 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanInfoSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanInfoSupport</code>), 
the MBean class name, 
and the string representation of infos on attributes, constructors, operations and notifications of the described MBean.
<p>
As <code>OpenMBeanInfoSupport</code> instances are immutable, 
the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>OpenMBeanInfoSupport</code> instance"
      end
    end

    class 1039899 "OpenMBeanOperationInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Describes an operation of an Open MBean.</p>

<p>This interface declares the same methods as the class {@link
javax.management.MBeanOperationInfo}.  A class implementing this
interface (typically {@link OpenMBeanOperationInfoSupport}) should
extend {@link javax.management.MBeanOperationInfo}.</p>

<p>The {@link #getSignature()} method should return at runtime an
array of instances of a subclass of {@link MBeanParameterInfo}
which implements the {@link OpenMBeanParameterInfo} interface
(typically {@link OpenMBeanParameterInfoSupport}).</p>

@version     3.20  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8351771 "getDescription"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Re-declares fields and methods that are in class MBeanOperationInfo of JMX 1.0
 (fields and methods will be removed when MBeanOperationInfo is made a parent interface of this interface)

Returns a human readable description of the operation 
described by this <tt>OpenMBeanOperationInfo</tt> instance.

@return the description."
      end

      operation 8351899 "getName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the operation
described by this <tt>OpenMBeanOperationInfo</tt> instance.

@return the name."
      end

      operation 8352027 "getSignature"
	public return_type class_ref 1031195 // MBeanParameterInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <tt>OpenMBeanParameterInfo</tt> instances
describing each parameter in the signature of the operation
described by this <tt>OpenMBeanOperationInfo</tt> instance.
Each instance in the returned array should actually be a
subclass of <tt>MBeanParameterInfo</tt> which implements the
<tt>OpenMBeanParameterInfo</tt> interface (typically {@link
OpenMBeanParameterInfoSupport}).

@return the signature."
      end

      operation 8352155 "getImpact"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <tt>int</tt> constant qualifying the impact of the
operation described by this <tt>OpenMBeanOperationInfo</tt>
instance.

The returned constant is one of {@link
javax.management.MBeanOperationInfo#INFO}, {@link
javax.management.MBeanOperationInfo#ACTION} or {@link
javax.management.MBeanOperationInfo#ACTION_INFO}.

@return the impact code."
      end

      operation 8352283 "getReturnType"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified Java class name of the values
returned by the operation described by this
<tt>OpenMBeanOperationInfo</tt> instance.  This method should
return the same value as a call to
<tt>getReturnOpenType().getClassName()</tt>.

@return the return type."
      end

      operation 8352411 "getReturnOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Now declares methods that are specific to open MBeans


Returns the <i>open type</i> of the values returned by the
operation described by this <tt>OpenMBeanOperationInfo</tt>
instance.

@return the return type."
      end

      operation 8352539 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " open MBean specific method
 commodity methods


Compares the specified <var>obj</var> parameter with this <code>OpenMBeanOperationInfo</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanOperationInfo</code> interface,</li>
<li>their names are equal</li>
<li>their signatures are equal</li>
<li>their return open types are equal</li>
<li>their impacts are equal</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanOperationInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanOperationInfo</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanOperationInfo</code> instance."
      end

      operation 8352667 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanOperationInfo</code> instance. 
<p>
The hash code of an <code>OpenMBeanOperationInfo</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to 
 <tt>java.util.Arrays.asList(this.getSignature).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanOperationInfo</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>

@return  the hash code value for this <code>OpenMBeanOperationInfo</code> instance"
      end

      operation 8352795 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanOperationInfo</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanOperationInfo</code>), 
and the name, signature, return open type and impact of the described operation.

@return  a string representation of this <code>OpenMBeanOperationInfo</code> instance"
      end
    end

    class 1040027 "OpenMBeanOperationInfoSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes an operation of an Open MBean.

@version     3.25  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2061979 // <generalisation>
	relation 2061979 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2061979 // <generalisation>
	  b parent class_ref 1031323 // MBeanOperationInfo
      end

      classrelation 2062107 // <realization>
	relation 2062107 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2062107 // <realization>
	  b parent class_ref 1039899 // OpenMBeanOperationInfo
      end

      classrelation 2062235 // <realization>
	relation 2062235 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2062235 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3050907 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  4996859732565369366L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2062363 // returnOpenType (<unidirectional association>)
	relation 2062363 --->
	  a role_name "returnOpenType" private
	    comment "
@serial The <i>open type</i> of the values returned by the operation 
        described by this {@link OpenMBeanOperationInfo} instance


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062363 // returnOpenType (<unidirectional association>)
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2062491 // myHashCode (<unidirectional association>)
	relation 2062491 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2062491 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3051035 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8352923 "OpenMBeanOperationInfoSupport"
	public explicit_return_type ""
	nparams 5
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "signature" type class_ref 1039131 // OpenMBeanParameterInfo
	  param inout name "returnOpenType" type class_ref 1038107 // OpenType
	  param in name "impact" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanOperationInfoSupport</tt> instance, which describes the operation 
of a class of open MBeans, with the specified 
<var>name</var>, <var>description</var>, <var>signature</var>, <var>returnOpenType</var> and <var>impact</var>.
<p>
The <var>signature</var> array parameter is internally copied, so that subsequent changes 
to the array referenced by <var>signature</var> have no effect on this instance.
<p>

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param signature  can be null or empty if there are no parameters to describe.

@param returnOpenType  cannot be null: use <tt>SimpleType.VOID</tt> for operations that return nothing.

@param impact can be only one of <tt>ACTION</tt>, <tt>ACTION_INFO</tt> or <tt>INFO</tt>.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>returnOpenType</var> is null,
					 or <var>impact</var> is not one of <tt>ACTION</tt>, <tt>ACTION_INFO</tt> or <tt>INFO</tt>.

@throws ArrayStoreException  If <var>signature</var> is not an array of instances of a subclass of <tt>MBeanParameterInfo</tt>."
      end

      operation 8353051 "arrayCopyCast"
	class_operation private return_type class_ref 1031195 // MBeanParameterInfo
	nparams 1
	  param inout name "src" type class_ref 1039131 // OpenMBeanParameterInfo
	nexceptions 1
	  exception class_ref 909467 // ArrayStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8353179 "getReturnOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " [JF]: should we add constructor with java.lang.reflect.Method method parameter ?
 would need to add consistency check between OpenType returnOpenType and mehtod.getReturnType().

Returns the <i>open type</i> of the values returned by the operation described by this <tt>OpenMBeanOperationInfo</tt> instance."
      end

      operation 8353307 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>OpenMBeanOperationInfoSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanOperationInfo</code> interface,</li>
<li>their names are equal</li>
<li>their signatures are equal</li>
<li>their return open types are equal</li>
<li>their impacts are equal</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanOperationInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanOperationInfoSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanOperationInfoSupport</code> instance."
      end

      operation 8353435 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanOperationInfoSupport</code> instance. 
<p>
The hash code of an <code>OpenMBeanOperationInfoSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to 
 <tt>java.util.Arrays.asList(this.getSignature).hashCode()</tt>). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanOperationInfoSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>OpenMBeanOperationInfo</code> interface
may be equal to this <code>OpenMBeanOperationInfoSupport</code> instance as defined by {@link #equals(java.lang.Object)}, 
but may have a different hash code if it is calculated differently.
<p>
As <code>OpenMBeanOperationInfoSupport</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>OpenMBeanOperationInfoSupport</code> instance"
      end

      operation 8353563 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanOperationInfoSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanOperationInfoSupport</code>), 
and the name, signature, return open type and impact of the described operation.
<p>
As <code>OpenMBeanOperationInfoSupport</code> instances are immutable, 
the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>OpenMBeanOperationInfoSupport</code> instance"
      end
    end

    class 1040155 "OpenMBeanParameterInfoSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes a parameter used in one or more operations or constructors of an open MBean.

@version     3.28  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2062619 // <generalisation>
	relation 2062619 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2062619 // <generalisation>
	  b parent class_ref 1031195 // MBeanParameterInfo
      end

      classrelation 2062747 // <realization>
	relation 2062747 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2062747 // <realization>
	  b parent class_ref 1039131 // OpenMBeanParameterInfo
      end

      classrelation 2062875 // <realization>
	relation 2062875 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2062875 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3051163 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -7235016873758443122L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2063003 // openType (<unidirectional association>)
	relation 2063003 --->
	  a role_name "openType" private
	    comment "
@serial The open mbean parameter's <i>open type</i>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063003 // openType (<unidirectional association>)
	  b parent class_ref 1038107 // OpenType
      end

      attribute 3051291 "defaultValue"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The open mbean parameter's default value
"
      end

      classrelation 2063131 // legalValues (<unidirectional association>)
	relation 2063131 --->
	  a role_name "legalValues" init_value "=  null" private
	    comment "
@serial The open mbean parameter's legal values. This {@link Set} is unmodifiable

 to be constructed unmodifiable"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063131 // legalValues (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      classrelation 2063259 // minValue (<unidirectional association>)
	relation 2063259 --->
	  a role_name "minValue" init_value "=  null" private
	    comment "
@serial The open mbean parameter's min value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063259 // minValue (<unidirectional association>)
	  b parent class_ref 221467 // Comparable
      end

      classrelation 2063387 // maxValue (<unidirectional association>)
	relation 2063387 --->
	  a role_name "maxValue" init_value "=  null" private
	    comment "
@serial The open mbean parameter's max value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063387 // maxValue (<unidirectional association>)
	  b parent class_ref 221467 // Comparable
      end

      classrelation 2063515 // myHashCode (<unidirectional association>)
	relation 2063515 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063515 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3051419 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8353691 "OpenMBeanParameterInfoSupport"
	public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanParameterInfoSupport</tt> instance, which describes the parameter 
used in one or more operations or constructors of a class of open MBeans,
with the specified <var>name</var>, <var>openType</var> and <var>description</var>. 

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null."
      end

      operation 8353819 "OpenMBeanParameterInfoSupport"
	public explicit_return_type ""
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "defaultValue" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanParameterInfoSupport</tt> instance, which describes the parameter 
used in one or more operations or constructors of a class of open MBeans,
with the specified <var>name</var>, <var>openType</var>, <var>description</var> and <var>defaultValue</var>. 

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this parameter;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var> is not a valid value for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>."
      end

      operation 8353947 "OpenMBeanParameterInfoSupport"
	public explicit_return_type ""
	nparams 5
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "defaultValue" explicit_type "Object"
	  param inout name "legalValues" explicit_type "Object"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanParameterInfoSupport</tt> instance, which describes the parameter 
used in one or more operations or constructors of a class of open MBeans,
with the specified <var>name</var>, <var>openType</var>, <var>description</var>, 
<var>defaultValue</var> and <var>legalValues</var>.

The contents of <var>legalValues</var> are internally dumped into an unmodifiable <tt>Set</tt>,
so subsequent modifications of the array referenced by <var>legalValues</var> have no impact on 
this <tt>OpenMBeanParameterInfoSupport</tt> instance.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this parameter;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@param legalValues   each contained value must be valid for the <var>openType</var> specified for this parameter;
			    legal values not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null or empty.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var> is not a valid value for the specified <var>openType</var>,
				  or one value in <var>legalValues</var> is not valid for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or <var>legalValues</var> is non null and non empty and
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or <var>legalValues</var> is non null and non empty and
				  <var>defaultValue</var> is not contained in <var>legalValues</var>."
      end

      operation 8354075 "OpenMBeanParameterInfoSupport"
	public explicit_return_type ""
	nparams 6
	  param in name "name" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "openType" type class_ref 1038107 // OpenType
	  param inout name "defaultValue" explicit_type "Object"
	  param inout name "minValue" type class_ref 221467 // Comparable
	  param inout name "maxValue" type class_ref 221467 // Comparable
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>OpenMBeanParameterInfoSupport</tt> instance, which describes the parameter 
used in one or more operations or constructors of a class of open MBeans,
with the specified <var>name</var>, <var>openType</var>, <var>description</var>, 
<var>defaultValue</var>, <var>minValue</var> and <var>maxValue</var>.

It is possible to specify minimal and maximal values only for an open type 
whose values are <tt>Comparable</tt>.

@param name  cannot be a null or empty string.

@param description  cannot be a null or empty string.

@param openType  cannot be null.

@param defaultValue  must be a valid value for the <var>openType</var> specified for this parameter;
			    default value not supported for <tt>ArrayType</tt> and <tt>TabularType</tt>;
			    can be null, in which case it means that no default value is set.

@param minValue   must be valid for the <var>openType</var> specified for this parameter;
			 can be null, in which case it means that no minimal value is set.

@param maxValue   must be valid for the <var>openType</var> specified for this parameter;
			 can be null, in which case it means that no maximal value is set.

@throws IllegalArgumentException  if <var>name</var> or <var>description</var> are null or empty string,
					 or <var>openType</var> is null.

@throws OpenDataException  if <var>defaultValue</var>, <var>minValue</var> or <var>maxValue</var>
				  is not a valid value for the specified <var>openType</var>,
				  or <var>defaultValue</var> is non null and 
				  <var>openType</var> is an <tt>ArrayType</tt> or a <tt>TabularType</tt>,
				  or both <var>minValue</var> and <var>maxValue</var> are non-null and
				  <tt>minValue.compareTo(maxValue) > 0</tt> is <tt>true</tt>,
				  or both <var>defaultValue</var> and <var>minValue</var> are non-null and
				  <tt>minValue.compareTo(defaultValue) > 0</tt> is <tt>true</tt>,
				  or both <var>defaultValue</var> and <var>maxValue</var> are non-null and
				  <tt>defaultValue.compareTo(maxValue) > 0</tt> is <tt>true</tt>."
      end

      operation 8354203 "getOpenType"
	public return_type class_ref 1038107 // OpenType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the open type for the values of the parameter described by this <tt>OpenMBeanParameterInfoSupport</tt> instance."
      end

      operation 8354331 "getDefaultValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value for the parameter described by this <tt>OpenMBeanParameterInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8354459 "getLegalValues"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Set of legal values for the parameter described by this <tt>OpenMBeanParameterInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8354587 "getMinValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimal value for the parameter described by this <tt>OpenMBeanParameterInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8354715 "getMaxValue"
	public return_type class_ref 221467 // Comparable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximal value for the parameter described by this <tt>OpenMBeanParameterInfoSupport</tt> instance,
if specified, or <tt>null</tt> otherwise."
      end

      operation 8354843 "hasDefaultValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanParameterInfoSupport</tt> instance specifies a non-null default value 
for the described parameter, <tt>false</tt> otherwise."
      end

      operation 8354971 "hasLegalValues"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanParameterInfoSupport</tt> instance specifies a non-null set of legal values
for the described parameter, <tt>false</tt> otherwise."
      end

      operation 8355099 "hasMinValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanParameterInfoSupport</tt> instance specifies a non-null minimal value 
for the described parameter, <tt>false</tt> otherwise."
      end

      operation 8355227 "hasMaxValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <tt>OpenMBeanParameterInfoSupport</tt> instance specifies a non-null maximal value 
for the described parameter, <tt>false</tt> otherwise."
      end

      operation 8355355 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a valid value for the parameter
described by this <code>OpenMBeanParameterInfo</code> instance.

@param obj the object to be tested.

@return <code>true</code> if <var>obj</var> is a valid value
for the parameter described by this
<code>OpenMBeanParameterInfo</code> instance,
<code>false</code> otherwise."
      end

      operation 8355483 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>OpenMBeanParameterInfoSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>OpenMBeanParameterInfo</code> interface,</li>
<li>their names are equal</li>
<li>their open types are equal</li>
<li>their default, min, max and legal values are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>OpenMBeanParameterInfo</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>OpenMBeanParameterInfoSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>OpenMBeanParameterInfoSupport</code> instance."
      end

      operation 8355611 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>OpenMBeanParameterInfoSupport</code> instance. 
<p>
The hash code of an <code>OpenMBeanParameterInfoSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its name, its <i>open type</i>, and its default, min, max and legal values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>OpenMBeanParameterInfoSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>OpenMBeanParameterInfo</code> interface
may be equal to this <code>OpenMBeanParameterInfoSupport</code> instance as defined by {@link #equals(java.lang.Object)}, 
but may have a different hash code if it is calculated differently.
<p>
As <code>OpenMBeanParameterInfoSupport</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>OpenMBeanParameterInfoSupport</code> instance"
      end

      operation 8355739 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>OpenMBeanParameterInfoSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanParameterInfoSupport</code>), 
the string representation of the name and open type of the described parameter, 
and the string representation of its default, min, max and legal values.
<p>
As <code>OpenMBeanParameterInfoSupport</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>OpenMBeanParameterInfoSupport</code> instance"
      end
    end

    class 1040283 "SimpleType"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <code>SimpleType</code> class is the <i>open type</i> class whose instances describe 
all <i>open data</i> values which are neither arrays, 
nor {@link CompositeData <code>CompositeData</code>} values, 
nor {@link TabularData <code>TabularData</code>} values.
It predefines all its possible instances as static fields, and has no public constructor. 
<p>
Given a <code>SimpleType</code> instance describing values whose Java class name is <i>className</i>,
the internal fields corresponding to the name and description of this <code>SimpleType</code> instance
are also set to <i>className</i>. 
In other words, its methods <code>getClassName</code>, <code>getTypeName</code> and <code>getDescription</code>
all return the same string value <i>className</i>.

@version     3.23  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2063643 // <generalisation>
	relation 2063643 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2063643 // <generalisation>
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2063771 // <realization>
	relation 2063771 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2063771 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3051547 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  2215577471957694503L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2063899 // VOID (<unidirectional association>)
	relation 2063899 --->
	  a role_name "VOID" class_relation const_relation public
	    comment " SimpleType instances.
 IF YOU ADD A SimpleType, YOU MUST UPDATE OpenType and typeArray

The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Void</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2063899 // VOID (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064027 // BOOLEAN (<unidirectional association>)
	relation 2064027 --->
	  a role_name "BOOLEAN" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Boolean</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064027 // BOOLEAN (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064155 // CHARACTER (<unidirectional association>)
	relation 2064155 --->
	  a role_name "CHARACTER" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Character</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064155 // CHARACTER (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064283 // BYTE (<unidirectional association>)
	relation 2064283 --->
	  a role_name "BYTE" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Byte</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064283 // BYTE (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064411 // SHORT (<unidirectional association>)
	relation 2064411 --->
	  a role_name "SHORT" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Short</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064411 // SHORT (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064539 // INTEGER (<unidirectional association>)
	relation 2064539 --->
	  a role_name "INTEGER" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Integer</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064539 // INTEGER (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064667 // LONG (<unidirectional association>)
	relation 2064667 --->
	  a role_name "LONG" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Long</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064667 // LONG (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064795 // FLOAT (<unidirectional association>)
	relation 2064795 --->
	  a role_name "FLOAT" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Float</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064795 // FLOAT (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2064923 // DOUBLE (<unidirectional association>)
	relation 2064923 --->
	  a role_name "DOUBLE" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.Double</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2064923 // DOUBLE (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065051 // STRING (<unidirectional association>)
	relation 2065051 --->
	  a role_name "STRING" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.lang.String</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065051 // STRING (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065179 // BIGDECIMAL (<unidirectional association>)
	relation 2065179 --->
	  a role_name "BIGDECIMAL" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.math.BigDecimal</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065179 // BIGDECIMAL (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065307 // BIGINTEGER (<unidirectional association>)
	relation 2065307 --->
	  a role_name "BIGINTEGER" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.math.BigInteger</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065307 // BIGINTEGER (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065435 // DATE (<unidirectional association>)
	relation 2065435 --->
	  a role_name "DATE" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>java.util.Date</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065435 // DATE (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065563 // OBJECTNAME (<unidirectional association>)
	relation 2065563 --->
	  a role_name "OBJECTNAME" class_relation const_relation public
	    comment "
The <code>SimpleType</code> instance describing values whose
Java class name is <code>javax.management.ObjectName</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065563 // OBJECTNAME (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      extra_member 171035 "initialization"
	
	cpp "" ""
	java "  static {
	SimpleType t;
	try {
	    t = new SimpleType(\"java.lang.Void\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	VOID = t;
	try {
	    t = new SimpleType(\"java.lang.Boolean\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	BOOLEAN = t;
	try {
	    t = new SimpleType(\"java.lang.Character\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	CHARACTER = t;
	try {
	    t = new SimpleType(\"java.lang.Byte\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	BYTE = t;
	try {
	    t = new SimpleType(\"java.lang.Short\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	SHORT = t;
	try {
	    t = new SimpleType(\"java.lang.Integer\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	INTEGER = t;
	try {
	    t = new SimpleType(\"java.lang.Long\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	LONG = t;
	try {
	    t = new SimpleType(\"java.lang.Float\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	FLOAT = t;
	try {
	    t = new SimpleType(\"java.lang.Double\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	DOUBLE = t;
	try {
	    t = new SimpleType(\"java.lang.String\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	STRING = t;
	try {
	    t = new SimpleType(\"java.math.BigDecimal\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	BIGDECIMAL = t;
	try {
	    t = new SimpleType(\"java.math.BigInteger\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	BIGINTEGER = t;
	try {
	    t = new SimpleType(\"java.util.Date\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	DATE = t;
	try {
	    t = new SimpleType(\"javax.management.ObjectName\");
	} catch (OpenDataException e) {
	    t = null; // should not happen
	}
	OBJECTNAME = t;
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 2065691 // typeArray (<unidirectional association>)
	relation 2065691 --->
	  a role_name "typeArray" multiplicity "[]" init_value "=  {
	VOID, BOOLEAN, CHARACTER, BYTE, SHORT, INTEGER, LONG, FLOAT,
	DOUBLE, STRING, BIGDECIMAL, BIGINTEGER, DATE, OBJECTNAME,
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2065691 // typeArray (<unidirectional association>)
	  b parent class_ref 1040283 // SimpleType
      end

      classrelation 2065819 // myHashCode (<unidirectional association>)
	relation 2065819 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065819 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3051675 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8355867 "SimpleType"
	private explicit_return_type ""
	nparams 1
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructor *** 

Constructs a SimpleType instance simply by calling <code>super(className, className, className)</code>.

@throws  OpenDataException  if <var>className</var> is not one of the allowed Java class names for open data"
      end

      operation 8355995 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** SimpleType specific information methods *** 

Tests whether <var>obj</var> is a value for this
<code>SimpleType</code> instance.  <p> This method returns
<code>true</code> if and only if <var>obj</var> is not null and
<var>obj</var>'s class name is the same as the className field
defined for this <code>SimpleType</code> instance (ie the class
name returned by the {@link OpenType#getClassName()
getClassName} method).

@param obj the object to be tested.

@return <code>true</code> if <var>obj</var> is a value for this
<code>SimpleType</code> instance."
      end

      operation 8356123 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Methods overriden from class Object *** 

Compares the specified <code>obj</code> parameter with this <code>SimpleType</code> instance for equality. 
<p>
Two <code>SimpleType</code> instances are equal if and only if their 
{@link OpenType#getClassName() getClassName} methods return the same value.

@param  obj  the object to be compared for equality with this <code>SimpleType</code> instance;
		    if <var>obj</var> is <code>null</code> or is not an instance of the class <code>SimpleType</code>, 
             <code>equals</code> returns <code>false</code>.

@return  <code>true</code> if the specified object is equal to this <code>SimpleType</code> instance."
      end

      operation 8356251 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>SimpleType</code> instance.
The hash code of a <code>SimpleType</code> instance is the the hash code of 
the string value returned by the {@link OpenType#getClassName() getClassName} method.
<p>
As <code>SimpleType</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>SimpleType</code> instance"
      end

      operation 8356379 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>SimpleType</code> instance.
<p>
The string representation consists of 
the name of this class (ie <code>javax.management.openmbean.SimpleType</code>) and the type name 
for this instance (which is the java class name of the values this <code>SimpleType</code> instance represents).
<p>
As <code>SimpleType</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>SimpleType</code> instance"
      end

      classrelation 2065947 // canonicalTypes (<unidirectional association>)
	relation 2065947 --->
	  a role_name "canonicalTypes" init_value "=  new HashMap()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2065947 // canonicalTypes (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      extra_member 171163 "initialization"
	
	cpp "" ""
	java "  static {
	for (int i = 0; i < typeArray.length; i++) {
	    final SimpleType type = typeArray[i];
	    canonicalTypes.put(type, type);
	}
    }"
	php ""
	python ""
	idl ""
      end

      operation 8356507 "readResolve"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 289307 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace an object read from an {@link
java.io.ObjectInputStream} with the unique instance for that
value.

@return the replacement object.

@exception ObjectStreamException if the read object cannot be
resolved."
      end
    end

    class 1040411 "TabularData"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <tt>TabularData</tt> interface specifies the behavior of a specific type of complex <i>open data</i> objects
which represent <i>tabular data</i> structures.

@version     3.19  04/02/10
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      operation 8356635 "getTabularType"
	public return_type class_ref 1040539 // TabularType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "extends Map
 *** TabularData specific information methods *** 

Returns the <i>tabular type</i> describing this
<tt>TabularData</tt> instance.

@return the tabular type."
      end

      operation 8356763 "calculateIndex"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the index that would be used in this <tt>TabularData</tt> instance to refer to the specified
composite data <var>value</var> parameter if it were added to this instance.
This method checks for the type validity of the specified <var>value</var>, 
but does not check if the calculated index is already used to refer to a value in this <tt>TabularData</tt> instance.

@param  value			  the composite data value whose index in this 
					  <tt>TabularData</tt> instance is to be calculated;
					  must be of the same composite type as this instance's row type;
					  must not be null.

@return the index that the specified <var>value</var> would have in this <tt>TabularData</tt> instance.

@throws NullPointerException       if <var>value</var> is <tt>null</tt> 

@throws InvalidOpenTypeException   if <var>value</var> does not conform to this <tt>TabularData</tt> instance's 
				          row type definition."
      end

      operation 8356891 "size"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Content information query methods *** 

Returns the number of <tt>CompositeData</tt> values (ie the
number of rows) contained in this <tt>TabularData</tt>
instance.

@return the number of values contained."
      end

      operation 8357019 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the number of <tt>CompositeData</tt>
values (ie the number of rows) contained in this
<tt>TabularData</tt> instance is zero.

@return true if this <tt>TabularData</tt> is empty."
      end

      operation 8357147 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains a <tt>CompositeData</tt> value 
(ie a row) whose index is the specified <var>key</var>. If <var>key</var> is <tt>null</tt> or does not conform to
this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition, this method simply returns <tt>false</tt>.

@param  key  the index value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> indexes a row value with the specified key."
      end

      operation 8357275 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains the specified
<tt>CompositeData</tt> value. If <var>value</var> is <tt>null</tt> or does not conform to
this <tt>TabularData</tt> instance's row type definition, this method simply returns <tt>false</tt>.

@param  value  the row value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> instance contains the specified row value."
      end

      operation 8357403 "get"
	public return_type class_ref 922779 // CompositeData
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <tt>CompositeData</tt> value whose index is
<var>key</var>, or <tt>null</tt> if there is no value mapping
to <var>key</var>, in this <tt>TabularData</tt> instance.

@param key the key of the row to return.

@return the value corresponding to <var>key</var>.

@throws NullPointerException if the <var>key</var> is
<tt>null</tt>
@throws InvalidKeyException if the <var>key</var> does not
conform to this <tt>TabularData</tt> instance's *
<tt>TabularType</tt> definition"
      end

      operation 8357531 "put"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Content modification operations (one element at a time) *** 

Adds <var>value</var> to this <tt>TabularData</tt> instance.
The composite type of <var>value</var> must be the same as this
instance's row type (ie the composite type returned by
<tt>this.getTabularType().{@link TabularType#getRowType
getRowType()}</tt>), and there must not already be an existing
value in this <tt>TabularData</tt> instance whose index is the
same as the one calculated for the <var>value</var> to be
added. The index for <var>value</var> is calculated according
to this <tt>TabularData</tt> instance's <tt>TabularType</tt>
definition (see <tt>TabularType.{@link
TabularType#getIndexNames getIndexNames()}</tt>).

@param  value			  the composite data value to be added as a new row to this <tt>TabularData</tt> instance;
					  must be of the same composite type as this instance's row type;
					  must not be null.

@throws NullPointerException       if <var>value</var> is <tt>null</tt> 
@throws InvalidOpenTypeException   if <var>value</var> does not conform to this <tt>TabularData</tt> instance's 
				          row type definition.
@throws KeyAlreadyExistsException  if the index for <var>value</var>, calculated according to 
					  this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition 
					  already maps to an existing value in the underlying HashMap."
      end

      operation 8357659 "remove"
	public return_type class_ref 922779 // CompositeData
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <tt>CompositeData</tt> value whose index is <var>key</var> from this <tt>TabularData</tt> instance,
and returns the removed value, or returns <tt>null</tt> if there is no value whose index is <var>key</var>.

@param  key  the index of the value to get in this <tt>TabularData</tt> instance;
		    must be valid with this <tt>TabularData</tt> instance's row type definition;
		    must not be null.

@return previous value associated with specified key, or <tt>null</tt>
	       if there was no mapping for key.  

@throws NullPointerException  if the <var>key</var> is <tt>null</tt> 
@throws InvalidKeyException   if the <var>key</var> does not conform to this <tt>TabularData</tt> instance's 
				     <tt>TabularType</tt> definition "
      end

      operation 8357787 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 922779 // CompositeData
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***   Content modification bulk operations   *** 

Add all the elements in <var>values</var> to this <tt>TabularData</tt> instance. 
If any  element in <var>values</var> does not satisfy the constraints defined in {@link #put(CompositeData) <tt>put</tt>},
or if any two elements in <var>values</var> have the same index calculated according to this <tt>TabularData</tt> 
instance's <tt>TabularType</tt> definition, then an exception describing the failure is thrown 
and no element of <var>values</var> is added,  thus leaving this <tt>TabularData</tt> instance unchanged.

@param  values  the array of composite data values to be added as new rows to this <tt>TabularData</tt> instance;
		       if <var>values</var> is <tt>null</tt> or empty, this method returns without doing anything.

@throws NullPointerException       if an element of <var>values</var> is <tt>null</tt> 
@throws InvalidOpenTypeException   if an element of <var>values</var> does not conform to 
					  this <tt>TabularData</tt> instance's row type definition 
@throws KeyAlreadyExistsException  if the index for an element of <var>values</var>, calculated according to 
					  this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition 
					  already maps to an existing value in this instance,
					  or two elements of <var>values</var> have the same index."
      end

      operation 8357915 "clear"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all <tt>CompositeData</tt> values (ie rows) from this <tt>TabularData</tt> instance."
      end

      operation 8358043 "keySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***   Collection views of the keys and values   *** 

Returns a set view of the keys (ie the index values) of the <tt>CompositeData</tt> values (ie the rows) 
contained in this <tt>TabularData</tt> instance. The returned Set can then be used to iterate over the keys.

@return a set view of the index values used in this <tt>TabularData</tt> instance."
      end

      operation 8358171 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a collection view of the <tt>CompositeData</tt> values (ie the rows) 
contained in this <tt>TabularData</tt> instance. 
The returned collection can then be used to iterate over the values.

@return a collection view of the rows contained in this <tt>TabularData</tt> instance."
      end

      operation 8358299 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Compares the specified <var>obj</var> parameter with this <code>TabularData</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>TabularData</code> interface,</li>
<li>their row types are equal</li>
<li>their contents (ie index to value mappings) are equal</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>TabularData</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>TabularData</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>TabularData</code> instance."
      end

      operation 8358427 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>TabularData</code> instance. 
<p>
The hash code of a <code>TabularData</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its <i>tabular type</i> and its content, where the content is defined as all the index to value mappings). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>TabularDataSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.

@return  the hash code value for this <code>TabularDataSupport</code> instance"
      end

      operation 8358555 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>TabularData</code> instance. 
<p>
The string representation consists of the name of the implementing class, 
and the tabular type of this instance.

@return  a string representation of this <code>TabularData</code> instance"
      end
    end

    class 1040539 "TabularType"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <code>TabularType</code> class is the <i> open type</i> class 
whose instances describe the types of {@link TabularData <code>TabularData</code>} values.

@version     3.22  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2066843 // <generalisation>
	relation 2066843 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2066843 // <generalisation>
	  b parent class_ref 1038107 // OpenType
      end

      classrelation 2066971 // <realization>
	relation 2066971 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2066971 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3052059 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  6554071860220659261L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2067099 // rowType (<unidirectional association>)
	relation 2067099 --->
	  a role_name "rowType" private
	    comment "
@serial The composite type of rows

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067099 // rowType (<unidirectional association>)
	  b parent class_ref 1038363 // CompositeType
      end

      classrelation 2067227 // indexNames (<unidirectional association>)
	relation 2067227 --->
	  a role_name "indexNames" private
	    comment "
@serial The items used to index each row element, kept in the order the user gave
        This is an unmodifiable {@link ArrayList}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067227 // indexNames (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      classrelation 2067355 // myHashCode (<unidirectional association>)
	relation 2067355 --->
	  a role_name "myHashCode" init_value "=  null" private
	    comment " As this instance is immutable, these two values"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2067355 // myHashCode (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      attribute 3052187 "myToString"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " need only be calculated once."
      end

      operation 8362651 "TabularType"
	public explicit_return_type ""
	nparams 4
	  param in name "typeName" explicit_type "String"
	  param in name "description" explicit_type "String"
	  param inout name "rowType" type class_ref 1038363 // CompositeType
	  param in name "indexNames" explicit_type "String"
	nexceptions 1
	  exception class_ref 1038235 // OpenDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructor *** 

Constructs a <code>TabularType</code> instance, checking for the validity of the given parameters.
The validity constraints are described below for each parameter. 
<p>
The Java class name of tabular data values this tabular type represents 
(ie the class name returned by the {@link OpenType#getClassName() getClassName} method) 
is set to the string value returned by <code>TabularData.class.getName()</code>.
<p>
@param  typeName  The name given to the tabular type this instance represents; cannot be a null or empty string.
<br>&nbsp;
@param  description  The human readable description of the tabular type this instance represents; 
			    cannot be a null or empty string.
<br>&nbsp;
@param  rowType  The type of the row elements of tabular data values described by this tabular type instance;
			cannot be null.
<br>&nbsp;
@param  indexNames  The names of the items the values of which are used to uniquely index each row element in the 
			   tabular data values described by this tabular type instance; 
			   cannot be null or empty. Each element should be an item name defined in <var>rowType</var>
			   (no null or empty string allowed).
			   It is important to note that the <b>order</b> of the item names in <var>indexNames</var>
                    is used by the methods {@link TabularData#get(java.lang.Object[]) <code>get</code>} and 
			   {@link TabularData#remove(java.lang.Object[]) <code>remove</code>} of class  
			   <code>TabularData</code> to match their array of values parameter to items.
<br>&nbsp;
@throws IllegalArgumentException  if <var>rowType</var> is null, 
					 or <var>indexNames</var> is a null or empty array,
					 or an element in <var>indexNames</var> is a null or empty string,
					 or <var>typeName</var> or <var>description</var> is a null or empty string.
<br>&nbsp;
@throws OpenDataException  if an element's value of <var>indexNames</var> 
				  is not an item name defined in <var>rowType</var>."
      end

      operation 8362779 "checkForNullElement"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "arg" explicit_type "Object"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that Object[] arg is neither null nor empty (ie length==0) 
and that it does not contain any null element."
      end

      operation 8362907 "checkForEmptyString"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "arg" explicit_type "String"
	  param in name "argName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that String[] does not contain any empty (or blank characters only) string."
      end

      operation 8363035 "getRowType"
	public return_type class_ref 1038363 // CompositeType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Tabular type specific information methods *** 

Returns the type of the row elements of tabular data values
described by this <code>TabularType</code> instance.

@return the type of each row."
      end

      operation 8363163 "getIndexNames"
	public return_type class_ref 135579 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns, in the same order as was given to this instance's
constructor, an unmodifiable List of the names of the items the
values of which are used to uniquely index each row element of
tabular data values described by this <code>TabularType</code>
instance.</p>

@return a List of String representing the names of the index
items.
"
      end

      operation 8363291 "isValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether <var>obj</var> is a value which could be described by this <code>TabularType</code> instance.
<p>
If <var>obj</var> is null or is not an instance of <code>javax.management.openmbean.TabularData</code>,
<code>isValue</code> returns <code>false</code>. 
If <var>obj</var> is an instance of <code>javax.management.openmbean.TabularData</code>,
its tabular type is tested for equality with this tabular type instance, and <code>isValue</code>
returns <code>true</code> if and only if {@link #equals(java.lang.Object) <code>equals</code>} 
returns <code>true</code>.
<br>&nbsp;
@param  obj  the value whose open type is to be tested for equality with this <code>TabularType</code> instance.

@return <code>true</code> if <var>obj</var> is a value for this tabular type, <code>false</code> otherwise."
      end

      operation 8363419 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Methods overriden from class Object *** 

Compares the specified <code>obj</code> parameter with this <code>TabularType</code> instance for equality. 
<p>
Two <code>TabularType</code> instances are equal if and only if all of the following statements are true:
<ul>
<li>their type names are equal</li>
<li>their row types are equal</li>
<li>they use the same index names, in the same order</li>
</ul>
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>TabularType</code> instance;
		    if <var>obj</var> is <code>null</code>, <code>equals</code> returns <code>false</code>.

@return  <code>true</code> if the specified object is equal to this <code>TabularType</code> instance."
      end

      operation 8363547 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>TabularType</code> instance. 
<p>
The hash code of a <code>TabularType</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: name, row type, index names). 
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>TabularType</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
As <code>TabularType</code> instances are immutable, the hash code for this instance is calculated once,
on the first call to <code>hashCode</code>, and then the same value is returned for subsequent calls.

@return  the hash code value for this <code>TabularType</code> instance"
      end

      operation 8363675 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>TabularType</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.TabularType</code>), 
the type name for this instance, the row type string representation of this instance,
and the index names of this instance.
<p>
As <code>TabularType</code> instances are immutable, the string representation for this instance is calculated once,
on the first call to <code>toString</code>, and then the same value is returned for subsequent calls.

@return  a string representation of this <code>TabularType</code> instance"
      end
    end

    class 1040667 "TabularDataSupport"
      visibility public 
      nactuals 8
      actual class class_ref 136603 // Map
        rank 0 explicit_value ""
      actual class class_ref 136603 // Map
        rank 1 explicit_value ""
      actual class class_ref 136603 // Map
        rank 2 explicit_value ""
      actual class class_ref 136603 // Map
        rank 3 explicit_value ""
      actual class class_ref 136603 // Map
        rank 4 explicit_value ""
      actual class class_ref 136603 // Map
        rank 5 explicit_value ""
      actual class class_ref 136603 // Map
        rank 6 explicit_value ""
      actual class class_ref 136603 // Map
        rank 7 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " jmx import


The <tt>TabularDataSupport</tt> class is the <i>open data</i> class which implements the <tt>TabularData</tt> 
and the <tt>Map</tt> interfaces, and which is internally based on a hash map data structure.

@version     3.30  03/12/19
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2066075 // <realization>
	relation 2066075 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2066075 // <realization>
	  b parent class_ref 1040411 // TabularData
      end

      classrelation 2066203 // <realization>
	relation 2066203 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2066203 // <realization>
	  b parent class_ref 136603 // Map
      end

      classrelation 2066331 // <realization>
	relation 2066331 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2066331 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 2066459 // <realization>
	relation 2066459 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2066459 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3051803 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  5720150593236309827L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2066587 // dataMap (<unidirectional association>)
	relation 2066587 --->
	  a role_name "dataMap" private
	    comment "
@serial This tabular data instance's contents: a {@link HashMap}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2066587 // dataMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2066715 // tabularType (<unidirectional association>)
	relation 2066715 --->
	  a role_name "tabularType" private
	    comment "
@serial This tabular data instance's tabular type

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2066715 // tabularType (<unidirectional association>)
	  b parent class_ref 1040539 // TabularType
      end

      attribute 3051931 "indexNamesArray"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial The array of item names that define the index used for rows (convenience field)
"
      end

      operation 8358683 "TabularDataSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "tabularType" type class_ref 1040539 // TabularType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Constructors *** 

Creates an empty <tt>TabularDataSupport</tt> instance whose open-type is <var>tabularType</var>, 
and whose underlying <tt>HashMap</tt> has a default initial capacity (101) and default load factor (0.75).
<p>
This constructor simply calls <tt>this(tabularType, 101, 0.75f);</tt>

@param  tabularType 		 the <i>tabular type</i> describing this <tt>TabularData</tt> instance;
					 cannot be null.

@throws IllegalArgumentException  if the tabular type is null. "
      end

      operation 8358811 "TabularDataSupport"
	public explicit_return_type ""
	nparams 3
	  param inout name "tabularType" type class_ref 1040539 // TabularType
	  param in name "initialCapacity" explicit_type "int"
	  param in name "loadFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <tt>TabularDataSupport</tt> instance whose open-type is <var>tabularType</var>, 
and whose underlying <tt>HashMap</tt> has the specified initial capacity and load factor.

@param  tabularType		 the <i>tabular type</i> describing this <tt>TabularData</tt> instance;
				 cannot be null.

@param  initialCapacity   the initial capacity of the HashMap.

@param  loadFactor        the load factor of the HashMap

@throws IllegalArgumentException  if the initial capacity is less than zero, 
					 or the load factor is nonpositive,
					 or the tabular type is null."
      end

      operation 8358939 "getTabularType"
	public return_type class_ref 1040539 // TabularType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** TabularData specific information methods *** 

Returns the <i>tabular type</i> describing this <tt>TabularData</tt> instance."
      end

      operation 8359067 "calculateIndex"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the index that would be used in this <tt>TabularData</tt> instance to refer to the specified
composite data <var>value</var> parameter if it were added to this instance.
This method checks for the type validity of the specified <var>value</var>, 
but does not check if the calculated index is already used to refer to a value in this <tt>TabularData</tt> instance.

@param  value			  the composite data value whose index in this 
					  <tt>TabularData</tt> instance is to be calculated;
					  must be of the same composite type as this instance's row type;
					  must not be null.

@return the index that the specified <var>value</var> would have in this <tt>TabularData</tt> instance.

@throws NullPointerException       if <var>value</var> is <tt>null</tt>. 

@throws InvalidOpenTypeException   if <var>value</var> does not conform to this <tt>TabularData</tt> instance's 
				          row type definition."
      end

      operation 8359195 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Content information query methods *** 

Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains a <tt>CompositeData</tt> value 
(ie a row) whose index is the specified <var>key</var>. If <var>key</var> cannot be cast to a one dimension array
of Object instances, this method simply returns <tt>false</tt>; otherwise it returns the the result of the call to
<tt>this.containsKey((Object[]) key)</tt>.

@param  key  the index value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> indexes a row value with the specified key."
      end

      operation 8359323 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains a <tt>CompositeData</tt> value 
(ie a row) whose index is the specified <var>key</var>. If <var>key</var> is <tt>null</tt> or does not conform to
this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition, this method simply returns <tt>false</tt>.

@param  key  the index value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> indexes a row value with the specified key."
      end

      operation 8359451 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains the specified
<tt>CompositeData</tt> value. If <var>value</var> is <tt>null</tt> or does not conform to
this <tt>TabularData</tt> instance's row type definition, this method simply returns <tt>false</tt>.

@param  value  the row value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> instance contains the specified row value."
      end

      operation 8359579 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if and only if this <tt>TabularData</tt> instance contains the specified
value.

@param  value  the row value whose presence in this <tt>TabularData</tt> instance is to be tested.

@return  <tt>true</tt> if this <tt>TabularData</tt> instance contains the specified row value."
      end

      operation 8359707 "get"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method simply calls <tt>get((Object[]) key)</tt>.

@throws NullPointerException  if the <var>key</var> is <tt>null</tt> 
@throws ClassCastException    if the <var>key</var> is not of the type <tt>Object[]</tt>
@throws InvalidKeyException   if the <var>key</var> does not conform to this <tt>TabularData</tt> instance's 
				     <tt>TabularType</tt> definition "
      end

      operation 8359835 "get"
	public return_type class_ref 922779 // CompositeData
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <tt>CompositeData</tt> value whose index is
<var>key</var>, or <tt>null</tt> if there is no value mapping
to <var>key</var>, in this <tt>TabularData</tt> instance.

@param key the index of the value to get in this
<tt>TabularData</tt> instance; * must be valid with this
<tt>TabularData</tt> instance's row type definition; * must not
be null.

@return the value corresponding to <var>key</var>.

@throws NullPointerException  if the <var>key</var> is <tt>null</tt> 
@throws InvalidKeyException   if the <var>key</var> does not conform to this <tt>TabularData</tt> instance's 
				     <tt>TabularType</tt> type definition."
      end

      operation 8359963 "put"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "key" explicit_type "Object"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** Content modification operations (one element at a time) *** 

This method simply calls <tt>put((CompositeData) value)</tt> and  
therefore ignores its <var>key</var> parameter which can be <tt>null</tt>.

@param key an ignored parameter.
@param value the {@link CompositeData} to put.

@return the value which is put

@throws NullPointerException  if the <var>value</var> is <tt>null</tt> 
@throws ClassCastException    if the <var>value</var> is not of the type <tt>CompositeData</tt>
@throws InvalidOpenTypeException   if the <var>value</var> does not conform to this <tt>TabularData</tt> instance's 
				          <tt>TabularType</tt> definition 
@throws KeyAlreadyExistsException   if the key for the <var>value</var> parameter, calculated according to 
					   this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition 
					   already maps to an existing value  "
      end

      operation 8360091 "put"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8360219 "remove"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method simply calls <tt>remove((Object[]) key)</tt>.

@param key an <tt>Object[]</tt> representing the key to remove.

@return previous value associated with specified key, or <tt>null</tt>
	       if there was no mapping for key.  

@throws NullPointerException  if the <var>key</var> is <tt>null</tt> 
@throws ClassCastException    if the <var>key</var> is not of the type <tt>Object[]</tt>
@throws InvalidKeyException   if the <var>key</var> does not conform to this <tt>TabularData</tt> instance's 
				     <tt>TabularType</tt> definition "
      end

      operation 8360347 "remove"
	public return_type class_ref 922779 // CompositeData
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <tt>CompositeData</tt> value whose index is <var>key</var> from this <tt>TabularData</tt> instance,
and returns the removed value, or returns <tt>null</tt> if there is no value whose index is <var>key</var>.

@param  key  the index of the value to get in this <tt>TabularData</tt> instance;
		    must be valid with this <tt>TabularData</tt> instance's row type definition;
		    must not be null.

@return previous value associated with specified key, or <tt>null</tt>
	       if there was no mapping for key.  

@throws NullPointerException  if the <var>key</var> is <tt>null</tt> 
@throws InvalidKeyException   if the <var>key</var> does not conform to this <tt>TabularData</tt> instance's 
				     <tt>TabularType</tt> definition "
      end

      operation 8360475 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***   Content modification bulk operations   *** 

Add all the values contained in the specified map <var>t</var> to this <tt>TabularData</tt> instance. 
This method converts the collection of values contained in this map into an array of <tt>CompositeData</tt> values,
if possible, and then call the method <tt>putAll(CompositeData[])</tt>. Note that the keys used in the specified
map <var>t</var> are ignored. This method allows, for example to add the content of another <tt>TabularData</tt> 
instance with the same row type (but possibly different index names) into this instance.

@param  t  the map whose values are to be added as new rows to this <tt>TabularData</tt> instance;
		  if <var>t</var> is <tt>null</tt> or empty, this method returns without doing anything.

@throws NullPointerException  if a value in <var>t</var> is <tt>null</tt>.
@throws ClassCastException    if a value in <var>t</var> is not an instance of <tt>CompositeData</tt>.
@throws InvalidOpenTypeException   if a value in <var>t</var> does not conform to 
					  this <tt>TabularData</tt> instance's row type definition.
@throws KeyAlreadyExistsException  if the index for a value in <var>t</var>, calculated according to 
					  this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition 
					  already maps to an existing value in this instance,
					  or two values in <var>t</var> have the same index."
      end

      operation 8360603 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add all the elements in <var>values</var> to this <tt>TabularData</tt> instance. 
If any  element in <var>values</var> does not satisfy the constraints defined in {@link #put(CompositeData) <tt>put</tt>},
or if any two elements in <var>values</var> have the same index calculated according to this <tt>TabularData</tt> 
instance's <tt>TabularType</tt> definition, then an exception describing the failure is thrown 
and no element of <var>values</var> is added,  thus leaving this <tt>TabularData</tt> instance unchanged.

@param  values  the array of composite data values to be added as new rows to this <tt>TabularData</tt> instance;
		       if <var>values</var> is <tt>null</tt> or empty, this method returns without doing anything.

@throws NullPointerException       if an element of <var>values</var> is <tt>null</tt> 
@throws InvalidOpenTypeException   if an element of <var>values</var> does not conform to 
					  this <tt>TabularData</tt> instance's row type definition 
					  (ie its <tt>TabularType</tt> definition)
@throws KeyAlreadyExistsException  if the index for an element of <var>values</var>, calculated according to 
					  this <tt>TabularData</tt> instance's <tt>TabularType</tt> definition 
					  already maps to an existing value in this instance,
					  or two elements of <var>values</var> have the same index"
      end

      operation 8360731 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all rows from this <code>TabularDataSupport</code> instance."
      end

      operation 8360859 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Informational methods from java.util.Map  *** 

Returns the number of rows in this <code>TabularDataSupport</code> instance.

@return the number of rows in this <code>TabularDataSupport</code> instance."
      end

      operation 8360987 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this <code>TabularDataSupport</code> instance contains no rows.

@return <tt>true</tt> if this <code>TabularDataSupport</code> instance contains no rows."
      end

      operation 8361115 "keySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Collection views from java.util.Map  *** 

Returns a set view of the keys contained in the underlying map of this <code>TabularDataSupport</code> instance,
and used to index the rows. Each key contained in this set is an unmodifiable List.  
The set is backed by the underlying map of this <code>TabularDataSupport</code> instance, 
so changes to the <code>TabularDataSupport</code> instance are reflected in the set, and vice-versa.

The set supports element removal, which removes the
corresponding row from this <code>TabularDataSupport</code> instance, via the <tt>Iterator.remove</tt>,
<tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt>, and
<tt>clear</tt> operations.  
It does not support the <tt>add</tt> or <tt>addAll</tt> operations

@return a set view of the keys used to index the rows of this <code>TabularDataSupport</code> instance."
      end

      operation 8361243 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a collection view of the rows contained in this <code>TabularDataSupport</code> instance.  
The collection is backed by the underlying map, so changes to the <code>TabularDataSupport</code> instance 
are reflected in the collection, and vice-versa.

The collection supports element removal, 
which removes the corresponding index to row mapping from this <code>TabularDataSupport</code> instance, 
via the <tt>Iterator.remove</tt>, <tt>Collection.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt> operations.
It does not support the <tt>add</tt> or <tt>addAll</tt> operations.

@return a collection view of the values contained in this <code>TabularDataSupport</code> instance."
      end

      operation 8361371 "entrySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a collection view of the index to row mappings contained in this <code>TabularDataSupport</code> instance.  
Each element in the returned collection is a <tt>Map.Entry</tt>.  
The collection is backed by the underlying map of this <code>TabularDataSupport</code> instance,  in
so changes to the <code>TabularDataSupport</code> instance are reflected the collection, and vice-versa.  
The collection supports element removal, which removes the corresponding mapping from the map, via the
<tt>Iterator.remove</tt>, <tt>Collection.remove</tt>,
<tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt> operations.
It does not support the <tt>add</tt> or <tt>addAll</tt> operations.
<p>
<b>IMPORTANT NOTICE</b>: Do not use the <tt>SetValue</tt> method of <tt>Map.Entry</tt> elements contained in the returned
collection view. Doing so would corrupt the index to row mappings contained in this <code>TabularDataSupport</code> instance.
<p>

@return a collection view of the mappings contained in this map.
@see java.util.Map.Entry"
      end

      operation 8361499 "clone"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***  Commodity methods from java.lang.Object  *** 

Returns a clone of this <code>TabularDataSupport</code> instance: 
the clone is obtained by calling <tt>super.clone()</tt>, and then cloning the underlying map.
Only a shallow clone of the underlying map is made, i.e. no cloning of the indexes and row values is made as they are immutable."
      end

      operation 8361627 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <var>obj</var> parameter with this <code>TabularDataSupport</code> instance for equality. 
<p>
Returns <tt>true</tt> if and only if all of the following statements are true:
<ul>
<li><var>obj</var> is non null,</li>
<li><var>obj</var> also implements the <code>TabularData</code> interface,</li>
<li>their tabular types are equal</li>
<li>their contents (ie all CompositeData values) are equal.</li>
</ul>
This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
different implementations of the <code>TabularData</code> interface.
<br>&nbsp;
@param  obj  the object to be compared for equality with this <code>TabularDataSupport</code> instance;

@return  <code>true</code> if the specified object is equal to this <code>TabularDataSupport</code> instance."
      end

      operation 8361755 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>TabularDataSupport</code> instance. 
<p>
The hash code of a <code>TabularDataSupport</code> instance is the sum of the hash codes
of all elements of information used in <code>equals</code> comparisons 
(ie: its <i>tabular type</i> and its content, where the content is defined as all the CompositeData values). 
<p>
This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
for any two <code>TabularDataSupport</code> instances <code>t1</code> and <code>t2</code>, 
as required by the general contract of the method
{@link Object#hashCode() Object.hashCode()}.
<p>
However, note that another instance of a class implementing the <code>TabularData</code> interface
may be equal to this <code>TabularDataSupport</code> instance as defined by {@link #equals}, 
but may have a different hash code if it is calculated differently.

@return  the hash code value for this <code>TabularDataSupport</code> instance"
      end

      operation 8361883 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>TabularDataSupport</code> instance. 
<p>
The string representation consists of the name of this class (ie <code>javax.management.openmbean.TabularDataSupport</code>), 
the string representation of the tabular type of this instance, and the string representation of the contents
(ie list the key=value mappings as returned by a call to
<tt>dataMap.</tt>{@link java.util.HashMap#toString() toString()}).

@return  a string representation of this <code>TabularDataSupport</code> instance"
      end

      operation 8362011 "internalCalculateIndex"
	private return_type class_ref 135579 // List
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " *** TabularDataSupport internal utility methods *** 

Returns the index for value, assuming value is valid for this <tt>TabularData</tt> instance 
(ie value is not null, and its composite type is equal to row type).

The index is a List, and not an array, so that an index.equals(otherIndex) call will actually compare contents,
not just the objects references as is done for an array object.

The returned List is unmodifiable so that once a row has been put into the dataMap, its index cannot be modified,
for example by a user that would attempt to modify an index contained in the Set returned by keySet(). "
      end

      operation 8362139 "checkKeyType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the specified key is valid for this <tt>TabularData</tt> instance.

@throws  NullPointerException
@throws  InvalidOpenTypeException"
      end

      operation 8362267 "checkValueType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the specified value's type is valid for this <tt>TabularData</tt> instance 
(ie value is not null, and its composite type is equal to row type).

@throws  NullPointerException
@throws  InvalidOpenTypeException"
      end

      operation 8362395 "checkValueAndIndex"
	private return_type class_ref 135579 // List
	nparams 1
	  param inout name "value" type class_ref 922779 // CompositeData
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the specified value can be put (ie added) in this <tt>TabularData</tt> instance
(ie value is not null, its composite type is equal to row type, and its index is not already used),
and returns the index calculated for this value. 

The index is a List, and not an array, so that an index.equals(otherIndex) call will actually compare contents,
not just the objects references as is done for an array object.

@throws  NullPointerException
@throws  InvalidOpenTypeException
@throws  KeyAlreadyExistsException"
      end

      operation 8362523 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes a {@link TabularDataSupport} from an {@link ObjectInputStream}."
      end
    end
  end

  deploymentview 170267 "openmbean"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 790043 "OpenType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1038107 // OpenType
      end
      comment "@(#)OpenType.java	3.28 06/07/27

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790171 "ArrayType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 1037979 // ArrayType
      end
      comment "@(#)ArrayType.java	3.24 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790299 "CompositeData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Collection;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 922779 // CompositeData
      end
      comment "@(#)CompositeData.java	3.19 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790427 "CompositeDataSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Set;
import java.util.Map;
import java.util.SortedMap;
import java.util.TreeMap;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 1038491 // CompositeDataSupport
      end
      comment "@(#)CompositeDataSupport.java	3.27 04/03/24

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790555 "CompositeType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Set;
import java.util.TreeMap;
import java.util.Collections;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 1038363 // CompositeType
      end
      comment "@(#)CompositeType.java	3.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790683 "InvalidKeyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 1038619 // InvalidKeyException
      end
      comment "@(#)InvalidKeyException.java	3.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790811 "InvalidOpenTypeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 1038747 // InvalidOpenTypeException
      end
      comment "@(#)InvalidOpenTypeException.java	3.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 790939 "KeyAlreadyExistsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 1038875 // KeyAlreadyExistsException
      end
      comment "@(#)KeyAlreadyExistsException.java	3.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791067 "OpenDataException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.management.JMException;
${definition}"
      associated_classes
	class_ref 1038235 // OpenDataException
      end
      comment "@(#)OpenDataException.java	3.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791195 "OpenMBeanParameterInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Set;
import java.lang.Comparable;
${definition}"
      associated_classes
	class_ref 1039131 // OpenMBeanParameterInfo
      end
      comment "@(#)OpenMBeanParameterInfo.java	3.21 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791323 "OpenMBeanAttributeInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1039003 // OpenMBeanAttributeInfo
      end
      comment "@(#)OpenMBeanAttributeInfo.java	3.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791451 "OpenMBeanAttributeInfoSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.lang.Comparable;
import javax.management.MBeanAttributeInfo;
${definition}"
      associated_classes
	class_ref 1039259 // OpenMBeanAttributeInfoSupport
      end
      comment "@(#)OpenMBeanAttributeInfoSupport.java	3.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791579 "OpenMBeanConstructorInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanParameterInfo;
${definition}"
      associated_classes
	class_ref 1039387 // OpenMBeanConstructorInfo
      end
      comment "@(#)OpenMBeanConstructorInfo.java	3.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791707 "OpenMBeanConstructorInfoSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Arrays;
import javax.management.MBeanConstructorInfo;
import javax.management.MBeanParameterInfo;
${definition}"
      associated_classes
	class_ref 1039515 // OpenMBeanConstructorInfoSupport
      end
      comment "@(#)OpenMBeanConstructorInfoSupport.java	3.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791835 "OpenMBeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanAttributeInfo;
import javax.management.MBeanOperationInfo;
import javax.management.MBeanConstructorInfo;
import javax.management.MBeanNotificationInfo;
${definition}"
      associated_classes
	class_ref 1039643 // OpenMBeanInfo
      end
      comment "@(#)OpenMBeanInfo.java	3.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 791963 "OpenMBeanInfoSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Arrays;
import java.util.HashSet;
import javax.management.MBeanInfo;
import javax.management.MBeanAttributeInfo;
import javax.management.MBeanOperationInfo;
import javax.management.MBeanConstructorInfo;
import javax.management.MBeanNotificationInfo;
${definition}"
      associated_classes
	class_ref 1039771 // OpenMBeanInfoSupport
      end
      comment "@(#)OpenMBeanInfoSupport.java	3.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792091 "OpenMBeanOperationInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanParameterInfo;
import javax.management.MBeanOperationInfo;
${definition}"
      associated_classes
	class_ref 1039899 // OpenMBeanOperationInfo
      end
      comment "@(#)OpenMBeanOperationInfo.java	3.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792219 "OpenMBeanOperationInfoSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Arrays;
import javax.management.MBeanOperationInfo;
import javax.management.MBeanParameterInfo;
${definition}"
      associated_classes
	class_ref 1040027 // OpenMBeanOperationInfoSupport
      end
      comment "@(#)OpenMBeanOperationInfoSupport.java	3.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792347 "OpenMBeanParameterInfoSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.lang.Comparable;
import javax.management.MBeanParameterInfo;
${definition}"
      associated_classes
	class_ref 1040155 // OpenMBeanParameterInfoSupport
      end
      comment "@(#)OpenMBeanParameterInfoSupport.java	3.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792475 "SimpleType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InvalidObjectException;
import java.io.ObjectStreamException;
import java.io.Serializable;
import java.util.Map;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 1040283 // SimpleType
      end
      comment "@(#)SimpleType.java	3.23 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792603 "TabularData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Map;
import java.util.Set;
import java.util.Collection;
${definition}"
      associated_classes
	class_ref 1040411 // TabularData
      end
      comment "@(#)TabularData.java	3.19 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792731 "TabularDataSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Serializable;
import java.io.ObjectInputStream;
import java.util.Iterator;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.Collection;
import java.util.Collections;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1040667 // TabularDataSupport
      end
      comment "@(#)TabularDataSupport.java	3.30 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 792859 "TabularType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.List;
import java.util.Iterator;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
${definition}"
      associated_classes
	class_ref 1040539 // TabularType
      end
      comment "@(#)TabularType.java	3.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
