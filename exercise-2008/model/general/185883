format 66
"css" // src::org::w3c::dom::css
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "org/w3c/dom/css"
  java_package "org.w3c.dom.css"
  classview 180635 "css"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1256091 "Counter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>Counter</code> interface is used to represent any counter or 
counters function value. This interface reflects the values in the 
underlying style property. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10394139 "getIdentifier"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the identifier of the counter. "
      end

      operation 10394267 "getListStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the style of the list. "
      end

      operation 10394395 "getSeparator"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the separator of the nested counters. "
      end
    end

    class 1256219 "CSS2Properties"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSS2Properties</code> interface represents a convenience 
mechanism for retrieving and setting properties within a 
<code>CSSStyleDeclaration</code>. The attributes of this interface 
correspond to all the properties specified in CSS2. Getting an attribute 
of this interface is equivalent to calling the 
<code>getPropertyValue</code> method of the 
<code>CSSStyleDeclaration</code> interface. Setting an attribute of this 
interface is equivalent to calling the <code>setProperty</code> method of 
the <code>CSSStyleDeclaration</code> interface. 
<p> A conformant implementation of the CSS module is not required to 
implement the <code>CSS2Properties</code> interface. If an implementation 
does implement this interface, the expectation is that language-specific 
methods can be used to cast from an instance of the 
<code>CSSStyleDeclaration</code> interface to the 
<code>CSS2Properties</code> interface. 
<p> If an implementation does implement this interface, it is expected to 
understand the specific syntax of the shorthand properties, and apply 
their semantics; when the <code>margin</code> property is set, for 
example, the <code>marginTop</code>, <code>marginRight</code>, 
<code>marginBottom</code> and <code>marginLeft</code> properties are 
actually being set by the underlying implementation. 
<p> When dealing with CSS \"shorthand\" properties, the shorthand properties 
should be decomposed into their component longhand properties as 
appropriate, and when querying for their value, the form returned should 
be the shortest form exactly equivalent to the declarations made in the 
ruleset. However, if there is no shorthand declaration that could be 
added to the ruleset without changing in any way the rules already 
declared in the ruleset (i.e., by adding longhand rules that were 
previously not declared in the ruleset), then the empty string should be 
returned for the shorthand property. 
<p> For example, querying for the <code>font</code> property should not 
return \"normal normal normal 14pt/normal Arial, sans-serif\", when \"14pt 
Arial, sans-serif\" suffices. (The normals are initial values, and are 
implied by use of the longhand property.) 
<p> If the values for all the longhand properties that compose a particular 
string are the initial values, then a string consisting of all the 
initial values should be returned (e.g. a <code>border-width</code> value 
of \"medium\" should be returned as such, not as \"\"). 
<p> For some shorthand properties that take missing values from other 
sides, such as the <code>margin</code>, <code>padding</code>, and 
<code>border-[width|style|color]</code> properties, the minimum number of 
sides possible should be used; i.e., \"0px 10px\" will be returned instead 
of \"0px 10px 0px 10px\". 
<p> If the value of a shorthand property can not be decomposed into its 
component longhand properties, as is the case for the <code>font</code> 
property with a value of \"menu\", querying for the values of the component 
longhand properties should return the empty string. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10394523 "getAzimuth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the azimuth property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10394651 "setAzimuth"
	public explicit_return_type "void"
	nparams 1
	  param in name "azimuth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10394779 "getBackground"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10394907 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param in name "background" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10395035 "getBackgroundAttachment"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background-attachment property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10395163 "setBackgroundAttachment"
	public explicit_return_type "void"
	nparams 1
	  param in name "backgroundAttachment" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10395291 "getBackgroundColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10395419 "setBackgroundColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "backgroundColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10395547 "getBackgroundImage"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background-image property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10395675 "setBackgroundImage"
	public explicit_return_type "void"
	nparams 1
	  param in name "backgroundImage" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10395803 "getBackgroundPosition"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background-position property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10395931 "setBackgroundPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "backgroundPosition" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10396059 "getBackgroundRepeat"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the background-repeat property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10396187 "setBackgroundRepeat"
	public explicit_return_type "void"
	nparams 1
	  param in name "backgroundRepeat" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10396315 "getBorder"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10396443 "setBorder"
	public explicit_return_type "void"
	nparams 1
	  param in name "border" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10396571 "getBorderCollapse"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-collapse property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10396699 "setBorderCollapse"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderCollapse" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10396827 "getBorderColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10396955 "setBorderColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10397083 "getBorderSpacing"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-spacing property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10397211 "setBorderSpacing"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderSpacing" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10397339 "getBorderStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10397467 "setBorderStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10397595 "getBorderTop"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-top property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10397723 "setBorderTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderTop" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10397851 "getBorderRight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-right property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10397979 "setBorderRight"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderRight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10398107 "getBorderBottom"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-bottom property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10398235 "setBorderBottom"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderBottom" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10398363 "getBorderLeft"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-left property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10398491 "setBorderLeft"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderLeft" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10398619 "getBorderTopColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-top-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10398747 "setBorderTopColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderTopColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10398875 "getBorderRightColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-right-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10399003 "setBorderRightColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderRightColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10399131 "getBorderBottomColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-bottom-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10399259 "setBorderBottomColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderBottomColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10399387 "getBorderLeftColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-left-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10399515 "setBorderLeftColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderLeftColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10399643 "getBorderTopStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-top-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10399771 "setBorderTopStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderTopStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10399899 "getBorderRightStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-right-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10400027 "setBorderRightStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderRightStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10400155 "getBorderBottomStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-bottom-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10400283 "setBorderBottomStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderBottomStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10400411 "getBorderLeftStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-left-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10400539 "setBorderLeftStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderLeftStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10400667 "getBorderTopWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-top-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10400795 "setBorderTopWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderTopWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10400923 "getBorderRightWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-right-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10401051 "setBorderRightWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderRightWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10401179 "getBorderBottomWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-bottom-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10401307 "setBorderBottomWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderBottomWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10401435 "getBorderLeftWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-left-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10401563 "setBorderLeftWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderLeftWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10401691 "getBorderWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the border-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10401819 "setBorderWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "borderWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10401947 "getBottom"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the bottom property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10402075 "setBottom"
	public explicit_return_type "void"
	nparams 1
	  param in name "bottom" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10402203 "getCaptionSide"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the caption-side property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10402331 "setCaptionSide"
	public explicit_return_type "void"
	nparams 1
	  param in name "captionSide" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10402459 "getClear"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the clear property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10402587 "setClear"
	public explicit_return_type "void"
	nparams 1
	  param in name "clear" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10402715 "getClip"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the clip property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10402843 "setClip"
	public explicit_return_type "void"
	nparams 1
	  param in name "clip" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10402971 "getColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10403099 "setColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "color" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10403227 "getContent"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the content property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10403355 "setContent"
	public explicit_return_type "void"
	nparams 1
	  param in name "content" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10403483 "getCounterIncrement"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the counter-increment property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10403611 "setCounterIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "counterIncrement" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10403739 "getCounterReset"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the counter-reset property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10403867 "setCounterReset"
	public explicit_return_type "void"
	nparams 1
	  param in name "counterReset" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10403995 "getCue"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the cue property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10404123 "setCue"
	public explicit_return_type "void"
	nparams 1
	  param in name "cue" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10404251 "getCueAfter"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the cue-after property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10404379 "setCueAfter"
	public explicit_return_type "void"
	nparams 1
	  param in name "cueAfter" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10404507 "getCueBefore"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the cue-before property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10404635 "setCueBefore"
	public explicit_return_type "void"
	nparams 1
	  param in name "cueBefore" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10404763 "getCursor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the cursor property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10404891 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param in name "cursor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10405019 "getDirection"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the direction property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10405147 "setDirection"
	public explicit_return_type "void"
	nparams 1
	  param in name "direction" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10405275 "getDisplay"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the display property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10405403 "setDisplay"
	public explicit_return_type "void"
	nparams 1
	  param in name "display" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10405531 "getElevation"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the elevation property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10405659 "setElevation"
	public explicit_return_type "void"
	nparams 1
	  param in name "elevation" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10405787 "getEmptyCells"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the empty-cells property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10405915 "setEmptyCells"
	public explicit_return_type "void"
	nparams 1
	  param in name "emptyCells" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10406043 "getCssFloat"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the float property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10406171 "setCssFloat"
	public explicit_return_type "void"
	nparams 1
	  param in name "cssFloat" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10406299 "getFont"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10406427 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param in name "font" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10406555 "getFontFamily"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-family property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10406683 "setFontFamily"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontFamily" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10406811 "getFontSize"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-size property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10406939 "setFontSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontSize" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10407067 "getFontSizeAdjust"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-size-adjust property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10407195 "setFontSizeAdjust"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontSizeAdjust" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10407323 "getFontStretch"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-stretch property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10407451 "setFontStretch"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontStretch" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10407579 "getFontStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10407707 "setFontStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10407835 "getFontVariant"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-variant property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10407963 "setFontVariant"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontVariant" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10408091 "getFontWeight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the font-weight property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10408219 "setFontWeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "fontWeight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10408347 "getHeight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the height property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10408475 "setHeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "height" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10408603 "getLeft"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the left property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10408731 "setLeft"
	public explicit_return_type "void"
	nparams 1
	  param in name "left" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10408859 "getLetterSpacing"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the letter-spacing property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10408987 "setLetterSpacing"
	public explicit_return_type "void"
	nparams 1
	  param in name "letterSpacing" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10409115 "getLineHeight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the line-height property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10409243 "setLineHeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "lineHeight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10409371 "getListStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the list-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10409499 "setListStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "listStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10409627 "getListStyleImage"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the list-style-image property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10409755 "setListStyleImage"
	public explicit_return_type "void"
	nparams 1
	  param in name "listStyleImage" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10409883 "getListStylePosition"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the list-style-position property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10410011 "setListStylePosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "listStylePosition" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10410139 "getListStyleType"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the list-style-type property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10410267 "setListStyleType"
	public explicit_return_type "void"
	nparams 1
	  param in name "listStyleType" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10410395 "getMargin"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the margin property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10410523 "setMargin"
	public explicit_return_type "void"
	nparams 1
	  param in name "margin" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10410651 "getMarginTop"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the margin-top property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10410779 "setMarginTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "marginTop" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10410907 "getMarginRight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the margin-right property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10411035 "setMarginRight"
	public explicit_return_type "void"
	nparams 1
	  param in name "marginRight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411163 "getMarginBottom"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the margin-bottom property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10411291 "setMarginBottom"
	public explicit_return_type "void"
	nparams 1
	  param in name "marginBottom" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411419 "getMarginLeft"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the margin-left property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10411547 "setMarginLeft"
	public explicit_return_type "void"
	nparams 1
	  param in name "marginLeft" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411675 "getMarkerOffset"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the marker-offset property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10411803 "setMarkerOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "markerOffset" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10411931 "getMarks"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the marks property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10412059 "setMarks"
	public explicit_return_type "void"
	nparams 1
	  param in name "marks" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412187 "getMaxHeight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the max-height property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10412315 "setMaxHeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxHeight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412443 "getMaxWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the max-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10412571 "setMaxWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412699 "getMinHeight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the min-height property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10412827 "setMinHeight"
	public explicit_return_type "void"
	nparams 1
	  param in name "minHeight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10412955 "getMinWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the min-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10413083 "setMinWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "minWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10413211 "getOrphans"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the orphans property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10413339 "setOrphans"
	public explicit_return_type "void"
	nparams 1
	  param in name "orphans" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10413467 "getOutline"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the outline property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10413595 "setOutline"
	public explicit_return_type "void"
	nparams 1
	  param in name "outline" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10413723 "getOutlineColor"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the outline-color property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10413851 "setOutlineColor"
	public explicit_return_type "void"
	nparams 1
	  param in name "outlineColor" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10413979 "getOutlineStyle"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the outline-style property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10414107 "setOutlineStyle"
	public explicit_return_type "void"
	nparams 1
	  param in name "outlineStyle" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10414235 "getOutlineWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the outline-width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10414363 "setOutlineWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "outlineWidth" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10414491 "getOverflow"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the overflow property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10414619 "setOverflow"
	public explicit_return_type "void"
	nparams 1
	  param in name "overflow" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10414747 "getPadding"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the padding property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10414875 "setPadding"
	public explicit_return_type "void"
	nparams 1
	  param in name "padding" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10415003 "getPaddingTop"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the padding-top property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10415131 "setPaddingTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "paddingTop" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10415259 "getPaddingRight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the padding-right property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10415387 "setPaddingRight"
	public explicit_return_type "void"
	nparams 1
	  param in name "paddingRight" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10415515 "getPaddingBottom"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the padding-bottom property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10415643 "setPaddingBottom"
	public explicit_return_type "void"
	nparams 1
	  param in name "paddingBottom" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10415771 "getPaddingLeft"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the padding-left property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10415899 "setPaddingLeft"
	public explicit_return_type "void"
	nparams 1
	  param in name "paddingLeft" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10416027 "getPage"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the page property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10416155 "setPage"
	public explicit_return_type "void"
	nparams 1
	  param in name "page" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10416283 "getPageBreakAfter"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the page-break-after property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10416411 "setPageBreakAfter"
	public explicit_return_type "void"
	nparams 1
	  param in name "pageBreakAfter" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10416539 "getPageBreakBefore"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the page-break-before property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10416667 "setPageBreakBefore"
	public explicit_return_type "void"
	nparams 1
	  param in name "pageBreakBefore" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10416795 "getPageBreakInside"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the page-break-inside property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10416923 "setPageBreakInside"
	public explicit_return_type "void"
	nparams 1
	  param in name "pageBreakInside" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10417051 "getPause"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the pause property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10417179 "setPause"
	public explicit_return_type "void"
	nparams 1
	  param in name "pause" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10417307 "getPauseAfter"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the pause-after property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10417435 "setPauseAfter"
	public explicit_return_type "void"
	nparams 1
	  param in name "pauseAfter" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10417563 "getPauseBefore"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the pause-before property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10417691 "setPauseBefore"
	public explicit_return_type "void"
	nparams 1
	  param in name "pauseBefore" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10417819 "getPitch"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the pitch property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10417947 "setPitch"
	public explicit_return_type "void"
	nparams 1
	  param in name "pitch" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10418075 "getPitchRange"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the pitch-range property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10418203 "setPitchRange"
	public explicit_return_type "void"
	nparams 1
	  param in name "pitchRange" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10418331 "getPlayDuring"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the play-during property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10418459 "setPlayDuring"
	public explicit_return_type "void"
	nparams 1
	  param in name "playDuring" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10418587 "getPosition"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the position property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10418715 "setPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10418843 "getQuotes"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the quotes property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10418971 "setQuotes"
	public explicit_return_type "void"
	nparams 1
	  param in name "quotes" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10419099 "getRichness"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the richness property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10419227 "setRichness"
	public explicit_return_type "void"
	nparams 1
	  param in name "richness" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10419355 "getRight"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the right property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10419483 "setRight"
	public explicit_return_type "void"
	nparams 1
	  param in name "right" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10419611 "getSize"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the size property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10419739 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10419867 "getSpeak"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the speak property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10419995 "setSpeak"
	public explicit_return_type "void"
	nparams 1
	  param in name "speak" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10420123 "getSpeakHeader"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the speak-header property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10420251 "setSpeakHeader"
	public explicit_return_type "void"
	nparams 1
	  param in name "speakHeader" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10420379 "getSpeakNumeral"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the speak-numeral property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10420507 "setSpeakNumeral"
	public explicit_return_type "void"
	nparams 1
	  param in name "speakNumeral" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10420635 "getSpeakPunctuation"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the speak-punctuation property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10420763 "setSpeakPunctuation"
	public explicit_return_type "void"
	nparams 1
	  param in name "speakPunctuation" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10420891 "getSpeechRate"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the speech-rate property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10421019 "setSpeechRate"
	public explicit_return_type "void"
	nparams 1
	  param in name "speechRate" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10421147 "getStress"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the stress property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10421275 "setStress"
	public explicit_return_type "void"
	nparams 1
	  param in name "stress" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10421403 "getTableLayout"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the table-layout property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10421531 "setTableLayout"
	public explicit_return_type "void"
	nparams 1
	  param in name "tableLayout" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10421659 "getTextAlign"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the text-align property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10421787 "setTextAlign"
	public explicit_return_type "void"
	nparams 1
	  param in name "textAlign" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10421915 "getTextDecoration"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the text-decoration property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10422043 "setTextDecoration"
	public explicit_return_type "void"
	nparams 1
	  param in name "textDecoration" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10422171 "getTextIndent"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the text-indent property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10422299 "setTextIndent"
	public explicit_return_type "void"
	nparams 1
	  param in name "textIndent" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10422427 "getTextShadow"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the text-shadow property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10422555 "setTextShadow"
	public explicit_return_type "void"
	nparams 1
	  param in name "textShadow" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10422683 "getTextTransform"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the text-transform property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10422811 "setTextTransform"
	public explicit_return_type "void"
	nparams 1
	  param in name "textTransform" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10422939 "getTop"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the top property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10423067 "setTop"
	public explicit_return_type "void"
	nparams 1
	  param in name "top" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10423195 "getUnicodeBidi"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the unicode-bidi property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10423323 "setUnicodeBidi"
	public explicit_return_type "void"
	nparams 1
	  param in name "unicodeBidi" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10423451 "getVerticalAlign"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the vertical-align property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10423579 "setVerticalAlign"
	public explicit_return_type "void"
	nparams 1
	  param in name "verticalAlign" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10423707 "getVisibility"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the visibility property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10423835 "setVisibility"
	public explicit_return_type "void"
	nparams 1
	  param in name "visibility" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10423963 "getVoiceFamily"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the voice-family property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10424091 "setVoiceFamily"
	public explicit_return_type "void"
	nparams 1
	  param in name "voiceFamily" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10424219 "getVolume"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the volume property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10424347 "setVolume"
	public explicit_return_type "void"
	nparams 1
	  param in name "volume" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10424475 "getWhiteSpace"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the white-space property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10424603 "setWhiteSpace"
	public explicit_return_type "void"
	nparams 1
	  param in name "whiteSpace" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10424731 "getWidows"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the widows property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10424859 "setWidows"
	public explicit_return_type "void"
	nparams 1
	  param in name "widows" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10424987 "getWidth"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the width property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10425115 "setWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "width" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10425243 "getWordSpacing"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the word-spacing property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10425371 "setWordSpacing"
	public explicit_return_type "void"
	nparams 1
	  param in name "wordSpacing" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10425499 "getZIndex"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See the z-index property definition in CSS2. 
@exception DOMException
  SYNTAX_ERR: Raised if the new value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10425627 "setZIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "zIndex" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1256347 "CSSCharsetRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSCharsetRule</code> interface represents a @charset rule in a 
CSS style sheet. The value of the <code>encoding</code> attribute does 
not affect the encoding of text data in the DOM objects; this encoding is 
always UTF-16. After a stylesheet is loaded, the value of the 
<code>encoding</code> attribute is the value found in the 
<code>@charset</code> rule. If there was no <code>@charset</code> in the 
original document, then no <code>CSSCharsetRule</code> is created. The 
value of the <code>encoding</code> attribute may also be used as a hint 
for the encoding used on serialization of the style sheet. 
<p> The value of the @charset rule (and therefore of the 
<code>CSSCharsetRule</code>) may not correspond to the encoding the 
document actually came in; character encoding information e.g. in an HTTP 
header, has priority (see CSS document representation) but this is not 
reflected in the <code>CSSCharsetRule</code>. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701339 // <generalisation>
	relation 2701339 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701339 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10426395 "getEncoding"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The encoding information used in this <code>@charset</code> rule. 
@exception DOMException
  SYNTAX_ERR: Raised if the specified encoding value has a syntax error 
  and is unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this encoding rule is 
  readonly."
      end

      operation 10426523 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param in name "encoding" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1256475 "CSSRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSRule</code> interface is the abstract base interface for any 
type of CSS statement. This includes both rule sets and at-rules. An 
implementation is expected to preserve all rules specified in a CSS style 
sheet, even if the rule is not recognized by the parser. Unrecognized 
rules are represented using the <code>CSSUnknownRule</code> interface. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      attribute 3453467 "UNKNOWN_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " RuleType

The rule is a <code>CSSUnknownRule</code>.
"
      end

      attribute 3453595 "STYLE_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSStyleRule</code>.
"
      end

      attribute 3453723 "CHARSET_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSCharsetRule</code>.
"
      end

      attribute 3453851 "IMPORT_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSImportRule</code>.
"
      end

      attribute 3453979 "MEDIA_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSMediaRule</code>.
"
      end

      attribute 3454107 "FONT_FACE_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSFontFaceRule</code>.
"
      end

      attribute 3454235 "PAGE_RULE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The rule is a <code>CSSPageRule</code>.
"
      end

      operation 10425755 "getType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The type of the rule, as defined above. The expectation is that 
binding-specific casting methods can be used to cast down from an 
instance of the <code>CSSRule</code> interface to the specific 
derived interface implied by the <code>type</code>. "
      end

      operation 10425883 "getCssText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The parsable textual representation of the rule. This reflects the 
current state of the rule and not its initial value. 
@exception DOMException
  SYNTAX_ERR: Raised if the specified CSS string value has a syntax 
  error and is unparsable.
  <br>INVALID_MODIFICATION_ERR: Raised if the specified CSS string 
  value represents a different type of rule than the current one.
  <br>HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at 
  this point in the style sheet.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly."
      end

      operation 10426011 "setCssText"
	public explicit_return_type "void"
	nparams 1
	  param in name "cssText" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10426139 "getParentStyleSheet"
	public return_type class_ref 1256603 // CSSStyleSheet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The style sheet that contains this rule. "
      end

      operation 10426267 "getParentRule"
	public return_type class_ref 1256475 // CSSRule
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If this rule is contained inside another rule (e.g. a style rule 
inside an @media block), this is the containing rule. If this rule is 
not nested inside any other rules, this returns <code>null</code>. "
      end
    end

    class 1256603 "CSSStyleSheet"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSStyleSheet</code> interface is a concrete interface used to 
represent a CSS style sheet i.e., a style sheet whose content type is 
\"text/css\". 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702235 // <generalisation>
	relation 2702235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702235 // <generalisation>
	  b parent class_ref 1258267 // StyleSheet
      end

      operation 10432411 "getOwnerRule"
	public return_type class_ref 1256475 // CSSRule
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If this style sheet comes from an <code>@import</code> rule, the 
<code>ownerRule</code> attribute will contain the 
<code>CSSImportRule</code>. In that case, the <code>ownerNode</code> 
attribute in the <code>StyleSheet</code> interface will be 
<code>null</code>. If the style sheet comes from an element or a 
processing instruction, the <code>ownerRule</code> attribute will be 
<code>null</code> and the <code>ownerNode</code> attribute will 
contain the <code>Node</code>. "
      end

      operation 10432539 "getCssRules"
	public return_type class_ref 1257371 // CSSRuleList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The list of all CSS rules contained within the style sheet. This 
includes both rule sets and at-rules. "
      end

      operation 10432667 "insertRule"
	public explicit_return_type "int"
	nparams 2
	  param in name "rule" explicit_type "String"
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to insert a new rule into the style sheet. The new rule now 
becomes part of the cascade. 
@param rule The parsable text representing the rule. For rule sets 
  this contains both the selector and the style declaration. For 
  at-rules, this specifies both the at-identifier and the rule 
  content. 
@param index The index within the style sheet's rule list of the rule 
  before which to insert the specified rule. If the specified index 
  is equal to the length of the style sheet's rule collection, the 
  rule will be added to the end of the style sheet. 
@return  The index within the style sheet's rule collection of the 
  newly inserted rule. 
@exception DOMException
  HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the 
  specified index e.g. if an <code>@import</code> rule is inserted 
  after a standard rule set or other at-rule.
  <br>INDEX_SIZE_ERR: Raised if the specified index is not a valid 
  insertion point.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is 
  readonly.
  <br>SYNTAX_ERR: Raised if the specified rule has a syntax error and 
  is unparsable."
      end

      operation 10432795 "deleteRule"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to delete a rule from the style sheet. 
@param index The index within the style sheet's rule list of the rule 
  to remove. 
@exception DOMException
  INDEX_SIZE_ERR: Raised if the specified index does not correspond to 
  a rule in the style sheet's rule list.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is 
  readonly."
      end
    end

    class 1256731 "CSSFontFaceRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSFontFaceRule</code> interface represents a @font-face rule in 
a CSS style sheet. The <code>@font-face</code> rule is used to hold a set 
of font descriptions. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701467 // <generalisation>
	relation 2701467 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701467 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10426651 "getStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The declaration-block of this rule. "
      end
    end

    class 1256859 "CSSStyleDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSStyleDeclaration</code> interface represents a single CSS 
declaration block. This interface may be used to determine the style 
properties currently set in a block or to set style properties explicitly 
within the block. 
<p> While an implementation may not recognize all CSS properties within a 
CSS declaration block, it is expected to provide access to all specified 
properties in the style sheet through the <code>CSSStyleDeclaration</code>
 interface. Furthermore, implementations that support a specific level of 
CSS should correctly handle CSS shorthand properties for that level. For 
a further discussion of shorthand properties, see the 
<code>CSS2Properties</code> interface. 
<p> This interface is also used to provide a read-only access to the 
computed values of an element. See also the <code>ViewCSS</code> 
interface.  The CSS Object Model doesn't provide an access to the 
specified or actual values of the CSS cascade. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10429723 "getCssText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The parsable textual representation of the declaration block 
(excluding the surrounding curly braces). Setting this attribute will 
result in the parsing of the new value and resetting of all the 
properties in the declaration block including the removal or addition 
of properties. 
@exception DOMException
  SYNTAX_ERR: Raised if the specified CSS string value has a syntax 
  error and is unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is 
  readonly or a property is readonly."
      end

      operation 10429851 "setCssText"
	public explicit_return_type "void"
	nparams 1
	  param in name "cssText" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10429979 "getPropertyValue"
	public explicit_return_type "String"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to retrieve the value of a CSS property if it has been explicitly 
set within this declaration block. 
@param propertyName The name of the CSS property. See the CSS property 
  index. 
@return  Returns the value of the property if it has been explicitly 
  set for this declaration block. Returns the empty string if the 
  property has not been set. "
      end

      operation 10430107 "getPropertyCSSValue"
	public return_type class_ref 1257755 // CSSValue
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to retrieve the object representation of the value of a CSS 
property if it has been explicitly set within this declaration block. 
This method returns <code>null</code> if the property is a shorthand 
property. Shorthand property values can only be accessed and modified 
as strings, using the <code>getPropertyValue</code> and 
<code>setProperty</code> methods. 
@param propertyName The name of the CSS property. See the CSS property 
  index. 
@return  Returns the value of the property if it has been explicitly 
  set for this declaration block. Returns <code>null</code> if the 
  property has not been set. "
      end

      operation 10430235 "removeProperty"
	public explicit_return_type "String"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to remove a CSS property if it has been explicitly set within 
this declaration block. 
@param propertyName The name of the CSS property. See the CSS property 
  index. 
@return  Returns the value of the property if it has been explicitly 
  set for this declaration block. Returns the empty string if the 
  property has not been set or the property name does not correspond 
  to a known CSS property. 
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly 
  or the property is readonly."
      end

      operation 10430363 "getPropertyPriority"
	public explicit_return_type "String"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to retrieve the priority of a CSS property (e.g. the 
<code>\"important\"</code> qualifier) if the property has been 
explicitly set in this declaration block. 
@param propertyName The name of the CSS property. See the CSS property 
  index. 
@return  A string representing the priority (e.g. 
  <code>\"important\"</code>) if one exists. The empty string if none 
  exists. "
      end

      operation 10430491 "setProperty"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param in name "value" explicit_type "String"
	  param in name "priority" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to set a property value and priority within this declaration 
block. 
@param propertyName The name of the CSS property. See the CSS property 
  index. 
@param value The new value of the property. 
@param priority The new priority of the property (e.g. 
  <code>\"important\"</code>).  
@exception DOMException
  SYNTAX_ERR: Raised if the specified value has a syntax error and is 
  unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is 
  readonly or the property is readonly."
      end

      operation 10430619 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of properties that have been explicitly set in this 
declaration block. The range of valid indices is 0 to length-1 
inclusive. "
      end

      operation 10430747 "item"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to retrieve the properties that have been explicitly set in this 
declaration block. The order of the properties retrieved using this 
method does not have to be the order in which they were set. This 
method can be used to iterate over all properties in this declaration 
block. 
@param index Index of the property name to retrieve. 
@return  The name of the property at this ordinal position. The empty 
  string if no property exists at this position. "
      end

      operation 10430875 "getParentRule"
	public return_type class_ref 1256475 // CSSRule
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The CSS rule that contains this declaration block or <code>null</code> 
if this <code>CSSStyleDeclaration</code> is not attached to a 
<code>CSSRule</code>. "
      end
    end

    class 1256987 "CSSImportRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSImportRule</code> interface represents a @import rule within 
a CSS style sheet. The <code>@import</code> rule is used to import style 
rules from other style sheets. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701595 // <generalisation>
	relation 2701595 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701595 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10426779 "getHref"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The location of the style sheet to be imported. The attribute will not 
contain the <code>\"url(...)\"</code> specifier around the URI. "
      end

      operation 10426907 "getMedia"
	public return_type class_ref 1257115 // MediaList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of media types for which this style sheet may be used. "
      end

      operation 10427035 "getStyleSheet"
	public return_type class_ref 1256603 // CSSStyleSheet
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The style sheet referred to by this rule, if it has been loaded. The 
value of this attribute is <code>null</code> if the style sheet has 
not yet been loaded or if it will not be loaded (e.g. if the style 
sheet is for a media type not supported by the user agent). "
      end
    end

    class 1257243 "CSSMediaRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSMediaRule</code> interface represents a @media rule in a CSS 
style sheet. A <code>@media</code> rule can be used to delimit style 
rules for specific media types. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701723 // <generalisation>
	relation 2701723 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701723 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10427163 "getMedia"
	public return_type class_ref 1257115 // MediaList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of media types for this rule. "
      end

      operation 10427291 "getCssRules"
	public return_type class_ref 1257371 // CSSRuleList
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A list of all CSS rules contained within the media block. "
      end

      operation 10427419 "insertRule"
	public explicit_return_type "int"
	nparams 2
	  param in name "rule" explicit_type "String"
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to insert a new rule into the media block. 
@param rule The parsable text representing the rule. For rule sets 
  this contains both the selector and the style declaration. For 
  at-rules, this specifies both the at-identifier and the rule 
  content. 
@param index The index within the media block's rule collection of the 
  rule before which to insert the specified rule. If the specified 
  index is equal to the length of the media blocks's rule collection, 
  the rule will be added to the end of the media block. 
@return  The index within the media block's rule collection of the 
  newly inserted rule. 
@exception DOMException
  HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the 
  specified index, e.g., if an <code>@import</code> rule is inserted 
  after a standard rule set or other at-rule.
  <br>INDEX_SIZE_ERR: Raised if the specified index is not a valid 
  insertion point.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is 
  readonly.
  <br>SYNTAX_ERR: Raised if the specified rule has a syntax error and 
  is unparsable."
      end

      operation 10427547 "deleteRule"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to delete a rule from the media block. 
@param index The index within the media block's rule collection of the 
  rule to remove. 
@exception DOMException
  INDEX_SIZE_ERR: Raised if the specified index does not correspond to 
  a rule in the media rule list.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is 
  readonly."
      end
    end

    class 1257371 "CSSRuleList"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSRuleList</code> interface provides the abstraction of an 
ordered collection of CSS rules. 
<p> The items in the <code>CSSRuleList</code> are accessible via an 
integral index, starting from 0. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10429467 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The number of <code>CSSRules</code> in the list. The range of valid 
child rule indices is <code>0</code> to <code>length-1</code> 
inclusive. "
      end

      operation 10429595 "item"
	public return_type class_ref 1256475 // CSSRule
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Used to retrieve a CSS rule by ordinal index. The order in this 
collection represents the order of the rules in the CSS style sheet. 
If index is greater than or equal to the number of rules in the list, 
this returns <code>null</code>. 
@param indexIndex into the collection
@return The style rule at the <code>index</code> position in the 
  <code>CSSRuleList</code>, or <code>null</code> if that is not a 
  valid index. "
      end
    end

    class 1257499 "CSSPageRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSPageRule</code> interface represents a @page rule within a 
CSS style sheet. The <code>@page</code> rule is used to specify the 
dimensions, orientation, margins, etc. of a page box for paged media. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701851 // <generalisation>
	relation 2701851 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701851 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10427675 "getSelectorText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The parsable textual representation of the page selector for the rule. 
@exception DOMException
  SYNTAX_ERR: Raised if the specified CSS string value has a syntax 
  error and is unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly."
      end

      operation 10427803 "setSelectorText"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectorText" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10427931 "getStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The declaration-block of this rule. "
      end
    end

    class 1257627 "CSSPrimitiveValue"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSPrimitiveValue</code> interface represents a single CSS value
. This interface may be used to determine the value of a specific style 
property currently set in a block or to set a specific style property 
explicitly within the block. An instance of this interface might be 
obtained from the <code>getPropertyCSSValue</code> method of the 
<code>CSSStyleDeclaration</code> interface. A 
<code>CSSPrimitiveValue</code> object only occurs in a context of a CSS 
property. 
<p> Conversions are allowed between absolute values (from millimeters to 
centimeters, from degrees to radians, and so on) but not between relative 
values. (For example, a pixel value cannot be converted to a centimeter 
value.) Percentage values can't be converted since they are relative to 
the parent value (or another property value). There is one exception for 
color percentage values: since a color percentage value is relative to 
the range 0-255, a color percentage value can be converted to a number; 
(see also the <code>RGBColor</code> interface). 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2701979 // <generalisation>
	relation 2701979 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2701979 // <generalisation>
	  b parent class_ref 1257755 // CSSValue
      end

      attribute 3454875 "CSS_UNKNOWN"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " UnitTypes

The value is not a recognized CSS2 value. The value can only be 
obtained by using the <code>cssText</code> attribute.
"
      end

      attribute 3455003 "CSS_NUMBER"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a simple number. The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455131 "CSS_PERCENTAGE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a percentage. The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455259 "CSS_EMS"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (ems). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455387 "CSS_EXS"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (exs). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455515 "CSS_PX"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (px). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455643 "CSS_CM"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (cm). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455771 "CSS_MM"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (mm). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3455899 "CSS_IN"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (in). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456027 "CSS_PT"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (pt). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456155 "CSS_PC"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a length (pc). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456283 "CSS_DEG"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is an angle (deg). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456411 "CSS_RAD"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is an angle (rad). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456539 "CSS_GRAD"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is an angle (grad). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456667 "CSS_MS"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a time (ms). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456795 "CSS_S"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a time (s). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3456923 "CSS_HZ"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a frequency (Hz). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3457051 "CSS_KHZ"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a frequency (kHz). The value can be obtained by using the 
<code>getFloatValue</code> method.
"
      end

      attribute 3457179 "CSS_DIMENSION"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a number with an unknown dimension. The value can be 
obtained by using the <code>getFloatValue</code> method.
"
      end

      attribute 3457307 "CSS_STRING"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a STRING. The value can be obtained by using the 
<code>getStringValue</code> method.
"
      end

      attribute 3457435 "CSS_URI"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a URI. The value can be obtained by using the 
<code>getStringValue</code> method.
"
      end

      attribute 3457563 "CSS_IDENT"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is an identifier. The value can be obtained by using the 
<code>getStringValue</code> method.
"
      end

      attribute 3457691 "CSS_ATTR"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a attribute function. The value can be obtained by using 
the <code>getStringValue</code> method.
"
      end

      attribute 3457819 "CSS_COUNTER"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a counter or counters function. The value can be obtained 
by using the <code>getCounterValue</code> method.
"
      end

      attribute 3457947 "CSS_RECT"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a rect function. The value can be obtained by using the 
<code>getRectValue</code> method.
"
      end

      attribute 3458075 "CSS_RGBCOLOR"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a RGB color. The value can be obtained by using the 
<code>getRGBColorValue</code> method.
"
      end

      operation 10428443 "getPrimitiveType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The type of the value as defined by the constants specified above."
      end

      operation 10428571 "setFloatValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "unitType" explicit_type "short"
	  param in name "floatValue" explicit_type "float"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A method to set the float value with a specified unit. If the property 
attached with this value can not accept the specified unit or the 
float value, the value will be unchanged and a 
<code>DOMException</code> will be raised. 
@param unitType A unit code as defined above. The unit code can only 
  be a float unit type (i.e. <code>CSS_NUMBER</code>, 
  <code>CSS_PERCENTAGE</code>, <code>CSS_EMS</code>, 
  <code>CSS_EXS</code>, <code>CSS_PX</code>, <code>CSS_CM</code>, 
  <code>CSS_MM</code>, <code>CSS_IN</code>, <code>CSS_PT</code>, 
  <code>CSS_PC</code>, <code>CSS_DEG</code>, <code>CSS_RAD</code>, 
  <code>CSS_GRAD</code>, <code>CSS_MS</code>, <code>CSS_S</code>, 
  <code>CSS_HZ</code>, <code>CSS_KHZ</code>, 
  <code>CSS_DIMENSION</code>). 
@param floatValue The new float value. 
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the attached property doesn't support 
  the float value or the unit type.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10428699 "getFloatValue"
	public explicit_return_type "float"
	nparams 1
	  param in name "unitType" explicit_type "short"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get a float value in a specified unit. If this 
CSS value doesn't contain a float value or can't be converted into 
the specified unit, a <code>DOMException</code> is raised. 
@param unitType A unit code to get the float value. The unit code can 
  only be a float unit type (i.e. <code>CSS_NUMBER</code>, 
  <code>CSS_PERCENTAGE</code>, <code>CSS_EMS</code>, 
  <code>CSS_EXS</code>, <code>CSS_PX</code>, <code>CSS_CM</code>, 
  <code>CSS_MM</code>, <code>CSS_IN</code>, <code>CSS_PT</code>, 
  <code>CSS_PC</code>, <code>CSS_DEG</code>, <code>CSS_RAD</code>, 
  <code>CSS_GRAD</code>, <code>CSS_MS</code>, <code>CSS_S</code>, 
  <code>CSS_HZ</code>, <code>CSS_KHZ</code>, 
  <code>CSS_DIMENSION</code>). 
@return  The float value in the specified unit. 
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float 
  value or if the float value can't be converted into the specified 
  unit. "
      end

      operation 10428827 "setStringValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "stringType" explicit_type "short"
	  param in name "stringValue" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A method to set the string value with the specified unit. If the 
property attached to this value can't accept the specified unit or 
the string value, the value will be unchanged and a 
<code>DOMException</code> will be raised. 
@param stringType A string code as defined above. The string code can 
  only be a string unit type (i.e. <code>CSS_STRING</code>, 
  <code>CSS_URI</code>, <code>CSS_IDENT</code>, and 
  <code>CSS_ATTR</code>). 
@param stringValue The new string value. 
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string 
  value or if the string value can't be converted into the specified 
  unit.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly."
      end

      operation 10428955 "getStringValue"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get the string value. If the CSS value doesn't 
contain a string value, a <code>DOMException</code> is raised.  Some 
properties (like 'font-family' or 'voice-family') convert a 
whitespace separated list of idents to a string. 
@return  The string value in the current unit. The current 
  <code>primitiveType</code> can only be a string unit type (i.e. 
  <code>CSS_STRING</code>, <code>CSS_URI</code>, 
  <code>CSS_IDENT</code> and <code>CSS_ATTR</code>). 
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string 
  value. "
      end

      operation 10429083 "getCounterValue"
	public return_type class_ref 1256091 // Counter
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get the Counter value. If this CSS value 
doesn't contain a counter value, a <code>DOMException</code> is 
raised. Modification to the corresponding style property can be 
achieved using the <code>Counter</code> interface. 
@return The Counter value.
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a 
  Counter value (e.g. this is not <code>CSS_COUNTER</code>). "
      end

      operation 10429211 "getRectValue"
	public return_type class_ref 1257883 // Rect
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get the Rect value. If this CSS value doesn't 
contain a rect value, a <code>DOMException</code> is raised. 
Modification to the corresponding style property can be achieved 
using the <code>Rect</code> interface. 
@return The Rect value.
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect 
  value. (e.g. this is not <code>CSS_RECT</code>). "
      end

      operation 10429339 "getRGBColorValue"
	public return_type class_ref 1258011 // RGBColor
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get the RGB color. If this CSS value doesn't 
contain a RGB color value, a <code>DOMException</code> is raised. 
Modification to the corresponding style property can be achieved 
using the <code>RGBColor</code> interface. 
@return the RGB color value.
@exception DOMException
   INVALID_ACCESS_ERR: Raised if the attached property can't return a 
  RGB color value (e.g. this is not <code>CSS_RGBCOLOR</code>). "
      end
    end

    class 1257755 "CSSValue"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSValue</code> interface represents a simple or a complex 
value. A <code>CSSValue</code> object only occurs in a context of a CSS 
property. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      attribute 3454363 "CSS_INHERIT"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " UnitTypes

The value is inherited and the <code>cssText</code> contains \"inherit\".
"
      end

      attribute 3454491 "CSS_PRIMITIVE_VALUE"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a primitive value and an instance of the 
<code>CSSPrimitiveValue</code> interface can be obtained by using 
binding-specific casting methods on this instance of the 
<code>CSSValue</code> interface.
"
      end

      attribute 3454619 "CSS_VALUE_LIST"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a <code>CSSValue</code> list and an instance of the 
<code>CSSValueList</code> interface can be obtained by using 
binding-specific casting methods on this instance of the 
<code>CSSValue</code> interface.
"
      end

      attribute 3454747 "CSS_CUSTOM"
	class_attribute const_attribute public explicit_type "short"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value is a custom value.
"
      end

      operation 10428059 "getCssText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A string representation of the current value. 
@exception DOMException
   SYNTAX_ERR: Raised if the specified CSS string value has a syntax 
  error (according to the attached property) or is unparsable. 
  <br>INVALID_MODIFICATION_ERR: Raised if the specified CSS string 
  value represents a different type of values than the values allowed 
  by the CSS property.
  <br> NO_MODIFICATION_ALLOWED_ERR: Raised if this value is readonly. "
      end

      operation 10428187 "setCssText"
	public explicit_return_type "void"
	nparams 1
	  param in name "cssText" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10428315 "getCssValueType"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A code defining the type of the value as defined above. "
      end
    end

    class 1257883 "Rect"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>Rect</code> interface is used to represent any rect value. This 
interface reflects the values in the underlying style property. Hence, 
modifications made to the <code>CSSPrimitiveValue</code> objects modify 
the style property. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10433691 "getTop"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the top of the rect. "
      end

      operation 10433819 "getRight"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the right of the rect. "
      end

      operation 10433947 "getBottom"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the bottom of the rect. "
      end

      operation 10434075 "getLeft"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the left of the rect. "
      end
    end

    class 1258011 "RGBColor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>RGBColor</code> interface is used to represent any RGB color 
value. This interface reflects the values in the underlying style 
property. Hence, modifications made to the <code>CSSPrimitiveValue</code> 
objects modify the style property. 
<p> A specified RGB color is not clipped (even if the number is outside the 
range 0-255 or 0%-100%). A computed RGB color is clipped depending on the 
device. 
<p> Even if a style sheet can only contain an integer for a color value, 
the internal storage of this integer is a float, and this can be used as 
a float in the specified or the computed style. 
<p> A color percentage value can always be converted to a number and vice 
versa. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10434203 "getRed"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the red value of the RGB color. "
      end

      operation 10434331 "getGreen"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the green value of the RGB color. "
      end

      operation 10434459 "getBlue"
	public return_type class_ref 1257627 // CSSPrimitiveValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute is used for the blue value of the RGB color. "
      end
    end

    class 1258139 "CSSStyleRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSStyleRule</code> interface represents a single rule set in a 
CSS style sheet. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702107 // <generalisation>
	relation 2702107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702107 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end

      operation 10431003 "getSelectorText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The textual representation of the selector for the rule set. The 
implementation may have stripped out insignificant whitespace while 
parsing the selector. 
@exception DOMException
  SYNTAX_ERR: Raised if the specified CSS string value has a syntax 
  error and is unparsable.
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly."
      end

      operation 10431131 "setSelectorText"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectorText" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10431259 "getStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The declaration-block of this rule set. "
      end
    end

    class 1258395 "CSSUnknownRule"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The <code>CSSUnknownRule</code> interface represents an at-rule not 
supported by this user agent. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702363 // <generalisation>
	relation 2702363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702363 // <generalisation>
	  b parent class_ref 1256475 // CSSRule
      end
    end

    class 1258523 "CSSValueList"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>CSSValueList</code> interface provides the abstraction of an 
ordered collection of CSS values.
<p> Some properties allow an empty list into their syntax. In that case, 
these properties take the <code>none</code> identifier. So, an empty list 
means that the property has the value <code>none</code>. 
<p> The items in the <code>CSSValueList</code> are accessible via an 
integral index, starting from 0. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702491 // <generalisation>
	relation 2702491 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702491 // <generalisation>
	  b parent class_ref 1257755 // CSSValue
      end

      operation 10432923 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of <code>CSSValues</code> in the list. The range of valid 
values of the indices is <code>0</code> to <code>length-1</code> 
inclusive."
      end

      operation 10433051 "item"
	public return_type class_ref 1257755 // CSSValue
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to retrieve a <code>CSSValue</code> by ordinal index. The order in 
this collection represents the order of the values in the CSS style 
property. If index is greater than or equal to the number of values 
in the list, this returns <code>null</code>.
@param indexIndex into the collection.
@return The <code>CSSValue</code> at the <code>index</code> position 
  in the <code>CSSValueList</code>, or <code>null</code> if that is 
  not a valid index."
      end
    end

    class 1258651 "DocumentCSS"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents a document with a CSS view.
<p> The <code>getOverrideStyle</code> method provides a mechanism through 
which a DOM author could effect immediate change to the style of an 
element without modifying the explicitly linked style sheets of a 
document or the inline style of elements in the style sheets. This style 
sheet comes after the author style sheet in the cascade algorithm and is 
called override style sheet. The override style sheet takes precedence 
over author style sheets. An \"!important\" declaration still takes 
precedence over a normal declaration. Override, author, and user style 
sheets all may contain \"!important\" declarations. User \"!important\" rules 
take precedence over both override and author \"!important\" rules, and 
override \"!important\" rules take precedence over author \"!important\" 
rules. 
<p> The expectation is that an instance of the <code>DocumentCSS</code> 
interface can be obtained by using binding-specific casting methods on an 
instance of the <code>Document</code> interface. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702619 // <generalisation>
	relation 2702619 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702619 // <generalisation>
	  b parent class_ref 1258779 // DocumentStyle
      end

      operation 10433307 "getOverrideStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 2
	  param inout name "elt" type class_ref 615067 // Element
	  param in name "pseudoElt" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to retrieve the override style declaration for a 
specified element and a specified pseudo-element. 
@param elt The element whose style is to be modified. This parameter 
  cannot be null. 
@param pseudoElt The pseudo-element or <code>null</code> if none. 
@return  The override style declaration. "
      end
    end

    class 1259035 "DOMImplementationCSS"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " This interface allows the DOM user to create a <code>CSSStyleSheet</code> 
outside the context of a document. There is no way to associate the new 
<code>CSSStyleSheet</code> with a document in DOM Level 2. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM   Level 2"
      classrelation 2702747 // <generalisation>
	relation 2702747 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702747 // <generalisation>
	  b parent class_ref 620187 // DOMImplementation
      end

      operation 10433435 "createCSSStyleSheet"
	public return_type class_ref 1256603 // CSSStyleSheet
	nparams 2
	  param in name "title" explicit_type "String"
	  param in name "media" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>CSSStyleSheet</code>.
@param title The advisory title. See also the  section. 
@param media The comma-separated list of media associated with the new 
  style sheet. See also the  section. 
@return A new CSS style sheet.
@exception DOMException
   SYNTAX_ERR: Raised if the specified media string value has a syntax 
  error and is unparsable. "
      end
    end

    class 1259163 "ElementCSSInlineStyle"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Inline style information attached to elements is exposed through the 
<code>style</code> attribute. This represents the contents of the STYLE 
attribute for HTML elements (or elements in other schemas or DTDs which 
use the STYLE attribute in the same way). The expectation is that an 
instance of the ElementCSSInlineStyle interface can be obtained by using 
binding-specific casting methods on an instance of the Element interface 
when the element supports inline CSS style informations. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      operation 10433563 "getStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The style attribute. "
      end
    end

    class 1259291 "ViewCSS"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " This interface represents a CSS view. The <code>getComputedStyle</code> 
method provides a read only access to the computed values of an element. 
<p> The expectation is that an instance of the <code>ViewCSS</code> 
interface can be obtained by using binding-specific casting methods on an 
instance of the <code>AbstractView</code> interface. 
<p> Since a computed style is related to an <code>Element</code> node, if 
this element is removed from the document, the associated 
<code>CSSStyleDeclaration</code> and <code>CSSValue</code> related to 
this declaration are no longer valid. 
<p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
@since DOM Level 2"
      classrelation 2702875 // <generalisation>
	relation 2702875 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2702875 // <generalisation>
	  b parent class_ref 1259419 // AbstractView
      end

      operation 10434715 "getComputedStyle"
	public return_type class_ref 1256859 // CSSStyleDeclaration
	nparams 2
	  param inout name "elt" type class_ref 615067 // Element
	  param in name "pseudoElt" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is used to get the computed style as it is defined in . 
@param elt The element whose style is to be computed. This parameter 
  cannot be null. 
@param pseudoElt The pseudo-element or <code>null</code> if none. 
@return  The computed style. The <code>CSSStyleDeclaration</code> is 
  read-only and contains only absolute values. "
      end
    end
  end

  deploymentview 176795 "css"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 960283 "Counter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1256091 // Counter
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 960411 "CSS2Properties"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1256219 // CSS2Properties
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 960539 "CSSRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1256475 // CSSRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 960667 "CSSCharsetRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1256347 // CSSCharsetRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 960795 "CSSFontFaceRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1256731 // CSSFontFaceRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 960923 "CSSImportRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.stylesheets.MediaList;
${definition}"
      associated_classes
	class_ref 1256987 // CSSImportRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961051 "CSSMediaRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.stylesheets.MediaList;
${definition}"
      associated_classes
	class_ref 1257243 // CSSMediaRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961179 "CSSPageRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1257499 // CSSPageRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961307 "CSSValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1257755 // CSSValue
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961435 "CSSPrimitiveValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1257627 // CSSPrimitiveValue
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961563 "CSSRuleList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1257371 // CSSRuleList
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961691 "CSSStyleDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1256859 // CSSStyleDeclaration
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 961819 "CSSStyleRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1258139 // CSSStyleRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962075 "CSSStyleSheet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.stylesheets.StyleSheet;
${definition}"
      associated_classes
	class_ref 1256603 // CSSStyleSheet
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962203 "CSSUnknownRule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1258395 // CSSUnknownRule
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962331 "CSSValueList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1258523 // CSSValueList
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962587 "DocumentCSS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.stylesheets.DocumentStyle;
import org.w3c.dom.Element;
${definition}"
      associated_classes
	class_ref 1258651 // DocumentCSS
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962715 "DOMImplementationCSS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.DOMException;
${definition}"
      associated_classes
	class_ref 1259035 // DOMImplementationCSS
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962843 "ElementCSSInlineStyle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1259163 // ElementCSSInlineStyle
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 962971 "Rect"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1257883 // Rect
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 963099 "RGBColor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1258011 // RGBColor
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end

    artifact 963355 "ViewCSS"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.views.AbstractView;
import org.w3c.dom.Element;
${definition}"
      associated_classes
	class_ref 1259291 // ViewCSS
      end
      comment "Copyright (c) 2000 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details."
    end
  end
end
