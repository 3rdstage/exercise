class DOMNodePool
!!!5244315.java!!!	getElementNode() : ElementNSImpl
        int     chunk       = fElementIndex >> CHUNK_SHIFT;
        int     index       = fElementIndex &  CHUNK_MASK;
        ensureElementsCapacity(chunk);
        if (fElements[chunk][index] == null) {
            fElements[chunk][index] = new ElementNSImpl();
        } 
        fElementIndex++;
        return fElements[chunk][index];
!!!5244443.java!!!	ensureElementsCapacity(in chunk : int) : void
        if (fElements.length <= chunk) {
            fElements = resize(fElements, fElements.length * 2);
        }
        else if (fElements[chunk] != null) {
            return;
        }

        fElements[chunk] = new ElementNSImpl[CHUNK_SIZE];
        return;
!!!5244571.java!!!	resize(inout array : ElementNSImpl, in newsize : int) : ElementNSImpl
        ElementNSImpl newarray[][] = new ElementNSImpl[newsize][];
        System.arraycopy(array, 0, newarray, 0, array.length);
        return newarray;
!!!5244699.java!!!	getTextNode() : TextImpl
        int     chunk       = fTextNodeIndex >> CHUNK_SHIFT;
        int     index       = fTextNodeIndex &  CHUNK_MASK;
        ensureTextCapacity(chunk);
        if (fTextNode[chunk][index] == null) {
            fTextNode[chunk][index] = new TextImpl();
        } 
        fTextNodeIndex++;
        return fTextNode[chunk][index];
!!!5244827.java!!!	ensureTextCapacity(in chunk : int) : void
        if (fTextNode.length <= chunk) {
            fTextNode = resize(fTextNode, fTextNode.length * 2);
        }
        else if (fTextNode[chunk] != null) {
            return;
        }

        fTextNode[chunk] = new TextImpl[CHUNK_SIZE];
        return;
!!!5244955.java!!!	resize(inout array : TextImpl, in newsize : int) : TextImpl
        TextImpl newarray[][] = new TextImpl[newsize][];
        System.arraycopy(array, 0, newarray, 0, array.length);
        return newarray;
!!!5245083.java!!!	getAttrNode() : AttrNSImpl
        int     chunk       = fAttrNodeIndex >> CHUNK_SHIFT;
        int     index       = fAttrNodeIndex &  CHUNK_MASK;
        ensureAttrsCapacity(chunk);
        if (fAttrNode[chunk][index] == null) {
            fAttrNode[chunk][index] = new AttrNSImpl();
        } 
        fAttrNodeIndex++;
        return fAttrNode[chunk][index];
!!!5245211.java!!!	ensureAttrsCapacity(in chunk : int) : void
        if (fAttrNode.length <= chunk) {
            fAttrNode = resize(fAttrNode, fAttrNode.length * 2);
        }
        else if (fAttrNode[chunk] != null) {
            return;
        }

        fAttrNode[chunk] = new AttrNSImpl[CHUNK_SIZE];
        return;
!!!5245339.java!!!	resize(inout array : AttrNSImpl, in newsize : int) : AttrNSImpl
        AttrNSImpl newarray[][] = new AttrNSImpl[newsize][];
        System.arraycopy(array, 0, newarray, 0, array.length);
        return newarray;
!!!5245467.java!!!	reset() : void
        fElementIndex = 0;
        fTextNodeIndex = 0;
        fAttrNodeIndex = 0;
