class TABLESWITCH
!!!3859995.java!!!	TABLESWITCH(in match : int, inout targets : InstructionHandle, inout target : InstructionHandle)
    super(com.sun.org.apache.bcel.internal.Constants.TABLESWITCH, match, targets, target);
    
    length = (short)(13 + match_length * 4); /* Alignment remainder assumed
					      * 0 here, until dump time */
    fixed_length = length;
!!!3860123.java!!!	dump(inout out : DataOutputStream) : void
    super.dump(out);

    int low = (match_length > 0)? match[0] : 0;
    out.writeInt(low);

    int high = (match_length > 0)? match[match_length - 1] : 0;
    out.writeInt(high);

    for(int i=0; i < match_length; i++)     // jump offsets
      out.writeInt(indices[i] = getTargetOffset(targets[i]));
!!!3860251.java!!!	initFromFile(inout bytes : ByteSequence, inout wide : boolean) : void
    super.initFromFile(bytes, wide);

    int low    = bytes.readInt();
    int high   = bytes.readInt();

    match_length = high - low + 1;
    fixed_length = (short)(13 + match_length * 4);
    length       = (short)(fixed_length + padding);

    match   = new int[match_length];
    indices = new int[match_length];
    targets = new InstructionHandle[match_length];

    for(int i=low; i <= high; i++)
      match[i - low] = i;

    for(int i=0; i < match_length; i++) {
      indices[i] = bytes.readInt();
    }
!!!3860379.java!!!	accept(inout v : Visitor) : void
    v.visitVariableLengthInstruction(this);
    v.visitStackProducer(this);
    v.visitBranchInstruction(this);
    v.visitSelect(this);
    v.visitTABLESWITCH(this);
