format 76
"beans" // src::java::beans
  revision 4
  modified_by 37 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/beans"
  java_package "java.beans"
  classview 152475 "beans"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 367771 "PropertyChangeListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A \"PropertyChange\" event gets fired whenever a bean changes a \"bound\"
property.  You can register a PropertyChangeListener with a source
bean so as to be notified of any bound property updates."
      classrelation 576795 // <generalisation>
	relation 576795 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 576795 // <generalisation>
	  b parent class_ref 147099 // EventListener
      end

      operation 2236187 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets called when a bound property is changed.
@param evt A PropertyChangeEvent object describing the event source 
  	and the property that has changed."
      end
    end

    class 372379 "PropertyChangeSupport"
      visibility public stereotype "stateful"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is a utility class that can be used by beans that support bound
properties.  You can use an instance of this class as a member field
of your bean and delegate various work to it.

This class is serializable.  When it is serialized it will save
(and restore) any listeners that are themselves serializable.  Any
non-serializable listeners will be skipped during serialization.
"
      classrelation 1744539 // <realization>
	relation 1744539 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1744539 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2690331 "listeners"
	private explicit_type "EventListenerAggregate"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Manages the listener list."
      end

      operation 6782363 "PropertyChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyChangeSupport</code> object.

@param sourceBean  The bean to be given as the source for any events."
      end

      operation 6782491 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a PropertyChangeListener to the listener list.
The listener is registered for all properties.
The same listener object may be added more than once, and will be called
as many times as it is added.
If <code>listener</code> is null, no exception is thrown and no action
is taken.

@param listener  The PropertyChangeListener to be added"
      end

      operation 6782619 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.
If <code>listener</code> was added more than once to the same event
source, it will be notified one less time after being removed.
If <code>listener</code> is null, or was never added, no exception is
thrown and no action is taken.

@param listener  The PropertyChangeListener to be removed"
      end

      operation 6782747 "getPropertyChangeListeners"
	public return_type class_ref 367771 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners that were added to the
PropertyChangeSupport object with addPropertyChangeListener().
<p>
If some listeners have been added with a named property, then
the returned array will be a mixture of PropertyChangeListeners
and <code>PropertyChangeListenerProxy</code>s. If the calling
method is interested in distinguishing the listeners then it must
test each element to see if it's a
<code>PropertyChangeListenerProxy</code>, perform the cast, and examine
the parameter.

<pre>
PropertyChangeListener[] listeners = bean.getPropertyChangeListeners();
for (int i = 0; i < listeners.length; i++) {
	 if (listeners[i] instanceof PropertyChangeListenerProxy) {
    PropertyChangeListenerProxy proxy = 
                   (PropertyChangeListenerProxy)listeners[i];
    if (proxy.getPropertyName().equals(\"foo\")) {
      // proxy is a PropertyChangeListener which was associated
      // with the property named \"foo\"
    }
  }
}
</pre>

@see PropertyChangeListenerProxy
@return all of the <code>PropertyChangeListeners</code> added or an 
        empty array if no listeners have been added
@since 1.4"
      end

      operation 6782875 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a PropertyChangeListener for a specific property.  The listener
will be invoked only when a call on firePropertyChange names that
specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>propertyName</code> or <code>listener</code> is null, no
exception is thrown and no action is taken.

@param propertyName  The name of the property to listen on.
@param listener  The PropertyChangeListener to be added"
      end

      operation 6783003 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a PropertyChangeListener for a specific property.
If <code>listener</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>propertyName</code> is null,  no exception is thrown and no
action is taken.
If <code>listener</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param propertyName  The name of the property that was listened on.
@param listener  The PropertyChangeListener to be removed"
      end

      operation 6783131 "getPropertyChangeListeners"
	public return_type class_ref 367771 // PropertyChangeListener
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated 
with the named property.

@param propertyName  The name of the property being listened to
@return all of the <code>PropertyChangeListeners</code> associated with
        the named property.  If no such listeners have been added,
        or if <code>propertyName</code> is null, an empty array is
        returned."
      end

      operation 6783259 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a bound property update to any registered listeners.
No event is fired if old and new are equal and non-null.

@param propertyName  The programmatic name of the property
		that was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6783387 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an int bound property update to any registered listeners.
No event is fired if old and new are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
firePropertyChange method that takes Object values.

@param propertyName  The programmatic name of the property
		that was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6783515 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a boolean bound property update to any registered listeners.
No event is fired if old and new are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
firePropertyChange method that takes Object values.

@param propertyName  The programmatic name of the property
		that was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6783643 "firePropertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire an existing PropertyChangeEvent to any registered listeners.
No event is fired if the given event's old and new values are
equal and non-null.
@param evt  The PropertyChangeEvent object."
      end

      operation 6783771 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param in name "propertyName" explicit_type "String"
	  param in name "index" explicit_type "int"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a bound indexed property update to any registered
listeners. 
<p>
No event is fired if old and new values are equal
and non-null.

@param propertyName The programmatic name of the property that
                    was changed.
@param index        index of the property element that was changed.
@param oldValue     The old value of the property.
@param newValue     The new value of the property.
@since 1.5"
      end

      operation 6783899 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param in name "propertyName" explicit_type "String"
	  param in name "index" explicit_type "int"
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report an <code>int</code> bound indexed property update to any registered 
listeners. 
<p>
No event is fired if old and new values are equal
and non-null.
<p>
This is merely a convenience wrapper around the more general
fireIndexedPropertyChange method which takes Object values.

@param propertyName The programmatic name of the property that
                    was changed.
@param index        index of the property element that was changed.
@param oldValue     The old value of the property.
@param newValue     The new value of the property.
@since 1.5"
      end

      operation 6784027 "fireIndexedPropertyChange"
	public explicit_return_type "void"
	nparams 4
	  param in name "propertyName" explicit_type "String"
	  param in name "index" explicit_type "int"
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a <code>boolean</code> bound indexed property update to any 
registered listeners. 
<p>
No event is fired if old and new values are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
fireIndexedPropertyChange method which takes Object values.

@param propertyName The programmatic name of the property that
                    was changed.
@param index        index of the property element that was changed.
@param oldValue     The old value of the property.
@param newValue     The new value of the property.
@since 1.5"
      end

      operation 6784155 "hasListeners"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any listeners for a specific property, including
those registered on all properties.  If <code>propertyName</code>
is null, only check for listeners registered on all properties.

@param propertyName  the property name.
@return true if there are one or more listeners for the given property"
      end

      operation 6784283 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Null terminated list of <code>PropertyChangeListeners</code>.
<p>
At serialization time we skip non-serializable listeners and
only serialize the serializable listeners.
"
      end

      operation 6784411 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 201883 // ClassNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1744667 // children (<unidirectional association>)
	relation 1744667 --->
	  a role_name "children" private
	    comment " 
Hashtable for managing listeners for specific properties.
Maps property names to PropertyChangeSupport objects.
@serial 
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744667 // children (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 2690459 "source"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The object to be provided as the \"source\" for any generated events.
@serial
"
      end

      attribute 2690587 "propertyChangeSupportSerializedDataVersion"
	private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal version number
@serial
@since
"
      end

      attribute 2690715 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  6401253773779951803L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Serialization version ID, so we're compatible with JDK 1.1
"
      end

      classrelation 136229 // <unidirectional association>
	relation 136229 --->
	  a role_name "" multiplicity "0..1" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 136229 // <unidirectional association>
	  b parent class_ref 135973 // Person
      end

      classrelation 136485 // <dependency>
	relation 136485 -_->
	  a default
	    classrelation_ref 136485 // <dependency>
	  b parent class_ref 386075 // PropertyChangeEvent
      end

      classrelation 136741 // <unidirectional association>
	relation 136741 --->
	  a role_name "" multiplicity "*" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 136741 // <unidirectional association>
	  b parent class_ref 367771 // PropertyChangeListener
      end
    end

    class 379675 "VetoableChangeSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is a utility class that can be used by beans that support constrained
properties.  You can use an instance of this class as a member field
of your bean and delegate various work to it.

This class is serializable.  When it is serialized it will save
(and restore) any listeners that are themselves serializable.  Any
non-serializable listeners will be skipped during serialization."
      classrelation 1746203 // <realization>
	relation 1746203 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1746203 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      operation 6791963 "VetoableChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>VetoableChangeSupport</code> object.

@param sourceBean  The bean to be given as the source for any events."
      end

      operation 6792091 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a VetoableListener to the listener list.
The listener is registered for all properties.
The same listener object may be added more than once, and will be called
as many times as it is added.
If <code>listener</code> is null, no exception is thrown and no action
is taken.

@param listener  The VetoableChangeListener to be added"
      end

      operation 6792219 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a VetoableChangeListener from the listener list.
This removes a VetoableChangeListener that was registered
for all properties.
If <code>listener</code> was added more than once to the same event
source, it will be notified one less time after being removed.
If <code>listener</code> is null, or was never added, no exception is
thrown and no action is taken.

@param listener  The VetoableChangeListener to be removed"
      end

      operation 6792347 "getVetoableChangeListeners"
	public return_type class_ref 855067 // VetoableChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of VetoableChangeListeners. If named vetoable change listeners
were added, then VetoableChangeListenerProxy wrappers will returned
<p>
@return List of VetoableChangeListeners and VetoableChangeListenerProxys
        if named property change listeners were added.
@since 1.4"
      end

      operation 6792475 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a VetoableChangeListener for a specific property.  The listener
will be invoked only when a call on fireVetoableChange names that
specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>propertyName</code> or <code>listener</code> is null, no
exception is thrown and no action is taken.

@param propertyName  The name of the property to listen on.
@param listener  The VetoableChangeListener to be added"
      end

      operation 6792603 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a VetoableChangeListener for a specific property.
If <code>listener</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>propertyName</code> is null, no exception is thrown and no
action is taken.
If <code>listener</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param propertyName  The name of the property that was listened on.
@param listener  The VetoableChangeListener to be removed"
      end

      operation 6792731 "getVetoableChangeListeners"
	public return_type class_ref 855067 // VetoableChangeListener
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated 
with the named property.

@param propertyName  The name of the property being listened to
@return all the <code>VetoableChangeListeners</code> associated with
        the named property.  If no such listeners have been added,
        or if <code>propertyName</code> is null, an empty array is
        returned."
      end

      operation 6792859 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a vetoable property update to any registered listeners.  If
anyone vetos the change, then fire a new event reverting everyone to 
the old value and then rethrow the PropertyVetoException.
<p>
No event is fired if old and new are equal and non-null.

@param propertyName  The programmatic name of the property
		that is about to change..
@param oldValue  The old value of the property.
@param newValue  The new value of the property.
@exception PropertyVetoException if the recipient wishes the property
             change to be rolled back."
      end

      operation 6792987 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a int vetoable property update to any registered listeners.
No event is fired if old and new are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
fireVetoableChange method that takes Object values.

@param propertyName  The programmatic name of the property
		that is about to change.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6793115 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a boolean vetoable property update to any registered listeners.
No event is fired if old and new are equal and non-null.
<p>
This is merely a convenience wrapper around the more general
fireVetoableChange method that takes Object values.

@param propertyName  The programmatic name of the property
		that is about to change.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6793243 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire a vetoable property update to any registered listeners.  If
anyone vetos the change, then fire a new event reverting everyone to 
the old value and then rethrow the PropertyVetoException.
<p>
No event is fired if old and new are equal and non-null.

@param evt  The PropertyChangeEvent to be fired.
@exception PropertyVetoException if the recipient wishes the property
             change to be rolled back."
      end

      operation 6793371 "hasListeners"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any listeners for a specific property, including
those registered on all properties.  If <code>propertyName</code>
is null, only check for listeners registered on all properties.

@param propertyName  the property name.
@return true if there are one or more listeners for the given property"
      end

      operation 6793499 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Null terminated list of <code>VetoableChangeListeners</code>.
<p>
At serialization time we skip non-serializable listeners and
only serialize the serializable listeners.
"
      end

      operation 6793627 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 201883 // ClassNotFoundException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1746331 // listeners (<unidirectional association>)
	relation 1746331 --->
	  a role_name "listeners" private
	    comment "
\"listeners\" lists all the generic listeners.

 This is transient - its state is written in the writeObject method.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1746331 // listeners (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      classrelation 1746459 // children (<unidirectional association>)
	relation 1746459 --->
	  a role_name "children" private
	    comment " 
Hashtable for managing listeners for specific properties.
Maps property names to VetoableChangeSupport objects.
@serial 
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1746459 // children (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 2691611 "source"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The object to be provided as the \"source\" for any generated events.
@serial
"
      end

      attribute 2691739 "vetoableChangeSupportSerializedDataVersion"
	private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal version number
@serial
"
      end

      attribute 2691867 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -5090210921595982017L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Serialization version ID, so we're compatible with JDK 1.1
"
      end
    end

    class 386075 "PropertyChangeEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A \"PropertyChange\" event gets delivered whenever a bean changes a \"bound\"
or \"constrained\" property.  A PropertyChangeEvent object is sent as an
argument to the PropertyChangeListener and VetoableChangeListener methods.
<P>
Normally PropertyChangeEvents are accompanied by the name and the old
and new value of the changed property.  If the new value is a primitive
type (such as int or boolean) it must be wrapped as the 
corresponding java.lang.* Object type (such as Integer or Boolean).
<P>
Null values may be provided for the old and the new values if their
true values are not known.
<P>
An event source may send a null object as the name to indicate that an
arbitrary set of if its properties have changed.  In this case the
old and new values should also be null."
      classrelation 1733787 // <generalisation>
	relation 1733787 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1733787 // <generalisation>
	  b parent class_ref 147355 // EventObject
      end

      operation 6759835 "PropertyChangeEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "source" explicit_type "Object"
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>PropertyChangeEvent</code>.

@param source  The bean that fired the event.
@param propertyName  The programmatic name of the property
		that was changed.
@param oldValue  The old value of the property.
@param newValue  The new value of the property."
      end

      operation 6759963 "getPropertyName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the programmatic name of the property that was changed.

@return  The programmatic name of the property that was changed.
		May be null if multiple properties have changed."
      end

      operation 6760091 "getNewValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the new value for the property, expressed as an Object.

@return  The new value for the property, expressed as an Object.
		May be null if multiple properties have changed."
      end

      operation 6760219 "getOldValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the old value for the property, expressed as an Object.

@return  The old value for the property, expressed as an Object.
		May be null if multiple properties have changed."
      end

      operation 6760347 "setPropagationId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propagationId" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the propagationId object for the event.

@param propagationId  The propagationId object for the event."
      end

      operation 6760475 "getPropagationId"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"propagationId\" field is reserved for future use.  In Beans 1.0
the sole requirement is that if a listener catches a PropertyChangeEvent
and then fires a PropertyChangeEvent of its own, then it should
make sure that it propagates the propagationId field from its
incoming event to its outgoing event.

@return the propagationId object associated with a bound/constrained
		property update."
      end

      attribute 2686235 "propertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "name of the property that changed.  May be null, if not known.
@serial
"
      end

      attribute 2686363 "newValue"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "New value for property.  May be null if not known.
@serial
"
      end

      attribute 2686491 "oldValue"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Previous value for property.  May be null if not known.
@serial
"
      end

      attribute 2686619 "propagationId"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Propagation ID.  May be null.
@serial
@see #getPropagationId.
"
      end
    end

    class 423579 "PropertyDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A PropertyDescriptor describes one property that a Java Bean
exports via a pair of accessor methods."
      classrelation 1734043 // <generalisation>
	relation 1734043 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1734043 // <generalisation>
	  b parent class_ref 890267 // FeatureDescriptor
      end

      classrelation 1734171 // propertyTypeRef (<unidirectional association>)
	relation 1734171 --->
	  a role_name "propertyTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734171 // propertyTypeRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1734299 // readMethodRef (<unidirectional association>)
	relation 1734299 --->
	  a role_name "readMethodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734299 // readMethodRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1734427 // writeMethodRef (<unidirectional association>)
	relation 1734427 --->
	  a role_name "writeMethodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734427 // writeMethodRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1734555 // propertyEditorClassRef (<unidirectional association>)
	relation 1734555 --->
	  a role_name "propertyEditorClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734555 // propertyEditorClassRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      attribute 2686875 "bound"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2687003 "constrained"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2687131 "baseName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The base name of the method name which will be prefixed with the
 read and write method. If name == \"foo\" then the baseName is \"Foo\""
      end

      attribute 2687259 "writeMethodName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2687387 "readMethodName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6760859 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "beanClass" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PropertyDescriptor for a property that follows
the standard Java convention by having getFoo and setFoo
accessor methods.  Thus if the argument name is \"fred\", it will
assume that the writer method is \"setFred\" and the reader method
is \"getFred\" (or \"isFred\" for a boolean property).  Note that the
property name should start with a lower case character, which will
be capitalized in the method names.

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.  For
		example sun.beans.OurButton.class.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6760987 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 4
	  param in name "propertyName" explicit_type "String"
	  param inout name "beanClass" type class_ref 164635 // Class
	  param in name "readMethodName" explicit_type "String"
	  param in name "writeMethodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and method
names for reading and writing the property.

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.  For
		example sun.beans.OurButton.class.
@param readMethodName The name of the method used for reading the property
		 value.  May be null if the property is write-only.
@param writeMethodName The name of the method used for writing the property
		 value.  May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6761115 "PropertyDescriptor"
	public explicit_return_type ""
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "readMethod" type class_ref 170651 // Method
	  param inout name "writeMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and Method
objects for reading and writing the property.

@param propertyName The programmatic name of the property.
@param readMethod The method used for reading the property value.
		May be null if the property is write-only.
@param writeMethod The method used for writing the property value.
		May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6761243 "getPropertyType"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Class object for the property.

@return The Java type info for the property.  Note that
the \"Class\" object may describe a built-in Java type such as \"int\".
The result may be \"null\" if this is an indexed property that
does not support non-indexed access.
<p>
This is the type that will be returned by the ReadMethod."
      end

      operation 6761371 "setPropertyType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6761499 "getPropertyType0"
	private return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6761627 "getReadMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to read the property value.

@return The method that should be used to read the property value.
May return null if the property can't be read."
      end

      operation 6761755 "setReadMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to read the property value.

@param readMethod The new read method."
      end

      operation 6761883 "getWriteMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to write the property value.

@return The method that should be used to write the property value.
May return null if the property can't be written."
      end

      operation 6762011 "setWriteMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to write the property value.

@param writeMethod The new write method."
      end

      operation 6762139 "getReadMethod0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6762267 "getWriteMethod0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6762395 "setClass0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "clz" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden to ensure that a super class doesn't take precedent"
      end

      operation 6762523 "isBound"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates to \"bound\" properties will cause a \"PropertyChange\" event to
get fired when the property is changed.

@return True if this is a bound property."
      end

      operation 6762651 "setBound"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bound" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates to \"bound\" properties will cause a \"PropertyChange\" event to
get fired when the property is changed.

@param bound True if this is a bound property."
      end

      operation 6762779 "isConstrained"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempted updates to \"Constrained\" properties will cause a \"VetoableChange\"
event to get fired when the property is changed.

@return True if this is a constrained property."
      end

      operation 6762907 "setConstrained"
	public explicit_return_type "void"
	nparams 1
	  param inout name "constrained" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempted updates to \"Constrained\" properties will cause a \"VetoableChange\"
event to get fired when the property is changed.

@param constrained True if this is a constrained property."
      end

      operation 6763035 "setPropertyEditorClass"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propertyEditorClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normally PropertyEditors will be found using the PropertyEditorManager.
However if for some reason you want to associate a particular
PropertyEditor with a given property, then you can do it with
this method.

@param propertyEditorClass  The Class for the desired PropertyEditor."
      end

      operation 6763163 "getPropertyEditorClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets any explicit PropertyEditor Class that has been registered
for this property.

@return Any explicit PropertyEditor Class that has been registered
		for this property.  Normally this will return \"null\",
		indicating that no special editor has been registered,
		so the PropertyEditorManager should be used to locate
		a suitable PropertyEditor."
      end

      operation 6763291 "createPropertyEditor"
	public return_type class_ref 892827 // PropertyEditor
	nparams 1
	  param inout name "bean" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of a property editor using the current
property editor class.
<p>
If the property editor class has a public constructor that takes an
Object argument then it will be invoked using the bean parameter
as the argument. Otherwise, the default constructor will be invoked.

@param bean the source object
@return a property editor instance or null if a property editor has
        not been defined or cannot be created
@since 1.5"
      end

      operation 6763419 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>PropertyDescriptor</code> against the specified object.
Returns true if the objects are the same. Two <code>PropertyDescriptor</code>s
are the same if the read, write, property types, property editor and
flags  are equivalent.

@since 1.4"
      end

      operation 6763547 "compareMethods"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 170651 // Method
	  param inout name "b" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private helper method for Descriptor .equals methods.

@param a first method to compare
@param b second method to compare
@return boolean to indicate that the methods are equivalent"
      end

      operation 6763675 "PropertyDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 423579 // PropertyDescriptor
	  param inout name "y" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor.
Merge two property descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).

@param x  The first (lower priority) PropertyDescriptor
@param y  The second (higher priority) PropertyDescriptor"
      end

      operation 6763803 "PropertyDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor.
This must isolate the new object from any changes to the old object."
      end

      operation 6763931 "findPropertyType"
	private return_type class_ref 164635 // Class
	nparams 2
	  param inout name "readMethod" type class_ref 170651 // Method
	  param inout name "writeMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property type that corresponds to the read and write method.
The type precedence is given to the readMethod.

@return the type of the property descriptor or null if both
        read and write methods are null.
@throws IntrospectionException if the read or write method is invalid"
      end

      operation 6764059 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for the object. 
See {@link java.lang.Object#hashCode} for a complete description.

@return a hash code value for this object.
@since 1.5"
      end

      operation 6764187 "getBaseName"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calculate once since capitalize() is expensive."
      end
    end

    class 855067 "VetoableChangeListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A VetoableChange event gets fired whenever a bean changes a \"constrained\"
property.  You can register a VetoableChangeListener with a source bean
so as to be notified of any constrained property updates."
      classrelation 1745819 // <generalisation>
	relation 1745819 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1745819 // <generalisation>
	  b parent class_ref 147099 // EventListener
      end

      operation 6791451 "vetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method gets called when a constrained property is changed.

@param     evt a <code>PropertyChangeEvent</code> object describing the
  	      event source and the property that has changed.
@exception PropertyVetoException if the recipient wishes the property
             change to be rolled back."
      end
    end

    class 855195 "PropertyVetoException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A PropertyVetoException is thrown when a proposed change to a
property represents an unacceptable value."
      classrelation 1745179 // <generalisation>
	relation 1745179 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1745179 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      operation 6789019 "PropertyVetoException"
	public explicit_return_type ""
	nparams 2
	  param in name "mess" explicit_type "String"
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyVetoException</code> with a 
detailed message.

@param mess Descriptive message
@param evt A PropertyChangeEvent describing the vetoed change."
      end

      operation 6789147 "getPropertyChangeEvent"
	public return_type class_ref 386075 // PropertyChangeEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the vetoed <code>PropertyChangeEvent</code>.

@return A PropertyChangeEvent describing the vetoed change."
      end

      classrelation 1745307 // evt (<unidirectional association>)
	relation 1745307 --->
	  a role_name "evt" private
	    comment "
A PropertyChangeEvent describing the vetoed change.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1745307 // evt (<unidirectional association>)
	  b parent class_ref 386075 // PropertyChangeEvent
      end
    end

    class 889883 "AppletInitializer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This interface is designed to work in collusion with java.beans.Beans.instantiate.
The interafce is intended to provide mechanism to allow the proper 
initialization of JavaBeans that are also Applets, during their
instantiation by java.beans.Beans.instantiate().
</p>

@see java.beans.Beans#instantiate

@version 1.12, 12/19/03
@since 1.2
"
      operation 6739611 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "newAppletBean" type class_ref 266267 // Applet
	  param inout name "bCtxt" type class_ref 890011 // BeanContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
If passed to the appropriate variant of java.beans.Beans.instantiate
this method will be called in order to associate the newly instantiated
Applet (JavaBean) with its AppletContext, AppletStub, and Container.
</p>
<p>
Conformant implementations shall:
<ol>
<li> Associate the newly instantiated Applet with the appropriate
AppletContext.

<li> Instantiate an AppletStub() and associate that AppletStub with
the Applet via an invocation of setStub().

<li> If BeanContext parameter is null, then it shall associate the
Applet with its appropriate Container by adding that Applet to its
Container via an invocation of add(). If the BeanContext parameter is
non-null, then it is the responsibility of the BeanContext to associate
the Applet with its Container during the subsequent invocation of its
addChildren() method.
</ol>
</p>

@param newAppletBean  The newly instantiated JavaBean
@param bCtxt          The BeanContext intended for this Applet, or 
                      null."
      end

      operation 6739739 "activate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newApplet" type class_ref 266267 // Applet
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Activate, and/or mark Applet active. Implementors of this interface
shall mark this Applet as active, and optionally invoke its start()
method.
</p>

@param newApplet  The newly instantiated JavaBean"
      end
    end

    class 890139 "BeanDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A BeanDescriptor provides global information about a \"bean\",
including its Java class, its displayName, etc.
<p>
This is one of the kinds of descriptor returned by a BeanInfo object,
which also returns descriptors for properties, method, and events."
      classrelation 1729947 // <generalisation>
	relation 1729947 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1729947 // <generalisation>
	  b parent class_ref 890267 // FeatureDescriptor
      end

      classrelation 1730075 // beanClassRef (<unidirectional association>)
	relation 1730075 --->
	  a role_name "beanClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1730075 // beanClassRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1730203 // customizerClassRef (<unidirectional association>)
	relation 1730203 --->
	  a role_name "customizerClassRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1730203 // customizerClassRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      operation 6743067 "BeanDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "beanClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a BeanDescriptor for a bean that doesn't have a customizer.

@param beanClass  The Class object of the Java class that implements
		the bean.  For example sun.beans.OurButton.class."
      end

      operation 6743195 "BeanDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "beanClass" type class_ref 164635 // Class
	  param inout name "customizerClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a BeanDescriptor for a bean that has a customizer.

@param beanClass  The Class object of the Java class that implements
		the bean.  For example sun.beans.OurButton.class.
@param customizerClass  The Class object of the Java class that implements
		the bean's Customizer.  For example sun.beans.OurButtonCustomizer.class."
      end

      operation 6743323 "getBeanClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bean's Class object.

@return The Class object for the bean."
      end

      operation 6743451 "getCustomizerClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Class object for the bean's customizer.

@return The Class object for the bean's customizer.  This may
be null if the bean doesn't have a customizer."
      end

      operation 6743579 "BeanDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 890139 // BeanDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end
    end

    class 890267 "FeatureDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The FeatureDescriptor class is the common baseclass for PropertyDescriptor,
EventSetDescriptor, and MethodDescriptor, etc.
<p>
It supports some common information that can be set and retrieved for
any of the introspection descriptors.
<p>
In addition it provides an extension mechanism so that arbitrary
attribute/value pairs can be associated with a design feature."
      classrelation 1729691 // classRef (<unidirectional association>)
	relation 1729691 --->
	  a role_name "classRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1729691 // classRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      operation 6739867 "FeatureDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>FeatureDescriptor</code>."
      end

      operation 6739995 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the programmatic name of this feature.

@return The programmatic name of the property/method/event"
      end

      operation 6740123 "setName"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the programmatic name of this feature.

@param name  The programmatic name of the property/method/event"
      end

      operation 6740251 "getDisplayName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the localized display name of this feature.

@return The localized display name for the property/method/event.
	This defaults to the same as its programmatic name from getName."
      end

      operation 6740379 "setDisplayName"
	public explicit_return_type "void"
	nparams 1
	  param in name "displayName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the localized display name of this feature.

@param displayName  The localized display name for the
		property/method/event."
      end

      operation 6740507 "isExpert"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"expert\" flag is used to distinguish between those features that are
intended for expert users from those that are intended for normal users.

@return True if this feature is intended for use by experts only."
      end

      operation 6740635 "setExpert"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expert" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"expert\" flag is used to distinguish between features that are
intended for expert users from those that are intended for normal users.

@param expert True if this feature is intended for use by experts only."
      end

      operation 6740763 "isHidden"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"hidden\" flag is used to identify features that are intended only
for tool use, and which should not be exposed to humans.

@return True if this feature should be hidden from human users."
      end

      operation 6740891 "setHidden"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hidden" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"hidden\" flag is used to identify features that are intended only
for tool use, and which should not be exposed to humans.

@param hidden  True if this feature should be hidden from human users."
      end

      operation 6741019 "isPreferred"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"preferred\" flag is used to identify features that are particularly
important for presenting to humans.

@return True if this feature should be preferentially shown to human users."
      end

      operation 6741147 "setPreferred"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferred" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The \"preferred\" flag is used to identify features that are particularly
important for presenting to humans.

@param preferred  True if this feature should be preferentially shown
		    	 to human users."
      end

      operation 6741275 "getShortDescription"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the short description of this feature.

@return  A localized short description associated with this 
  property/method/event.  This defaults to be the display name."
      end

      operation 6741403 "setShortDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "text" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "You can associate a short descriptive string with a feature.  Normally
these descriptive strings should be less than about 40 characters.
@param text  A (localized) short description to be associated with
this property/method/event."
      end

      operation 6741531 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "attributeName" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate a named attribute with this feature.

@param attributeName  The locale-independent name of the attribute
@param value  The value."
      end

      operation 6741659 "getValue"
	public explicit_return_type "Object"
	nparams 1
	  param in name "attributeName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a named attribute with this feature.

@param attributeName  The locale-independent name of the attribute
@return  The value of the attribute.  May be null if
	   the attribute is unknown."
      end

      operation 6741787 "attributeNames"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of the locale-independent names of this
feature.

@return  An enumeration of the locale-independent names of any 
   attributes that have been registered with setValue."
      end

      operation 6741915 "FeatureDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 890267 // FeatureDescriptor
	  param inout name "y" type class_ref 890267 // FeatureDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor,
Merge information from two FeatureDescriptors.
The merged hidden and expert flags are formed by or-ing the values.
In the event of other conflicts, the second argument (y) is
given priority over the first argument (x).

@param x  The first (lower priority) MethodDescriptor
@param y  The second (higher priority) MethodDescriptor"
      end

      operation 6742043 "FeatureDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 890267 // FeatureDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end

      operation 6742171 "addTable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 139035 // Hashtable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6742299 "setClass0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "cls" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private methods for recreating the weak/soft referent"
      end

      operation 6742427 "getClass0"
	package return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6742555 "createReference"
	class_operation package return_type class_ref 392475 // Reference
	nparams 2
	  param inout name "obj" explicit_type "Object"
	  param inout name "soft" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a Reference wrapper for the object.

@param obj object that will be wrapped
@param soft true if a SoftReference should be created; otherwise Soft
@return a Reference or null if obj is null."
      end

      operation 6742683 "createReference"
	class_operation package return_type class_ref 392475 // Reference
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience method which creates a WeakReference."
      end

      operation 6742811 "getObject"
	class_operation package explicit_return_type "Object"
	nparams 1
	  param inout name "ref" type class_ref 392475 // Reference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object from a Reference wrapper.

@return the Object in a wrapper or null."
      end

      operation 6742939 "capitalize"
	class_operation package explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2682523 "expert"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2682651 "hidden"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2682779 "preferred"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2682907 "shortDescription"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2683035 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2683163 "displayName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1729819 // table (<unidirectional association>)
	relation 1729819 --->
	  a role_name "table" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1729819 // table (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end
    end

    class 890395 "BeanInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A bean implementor who wishes to provide explicit information about
their bean may provide a BeanInfo class that implements this BeanInfo
interface and provides explicit information about the methods,
properties, events, etc, of their  bean.
<p>
A bean implementor doesn't need to provide a complete set of
explicit information.  You can pick and choose which information
you want to provide and the rest will be obtained by automatic
analysis using low-level reflection of the bean classes' methods
and applying standard design patterns.
<p>
You get the opportunity to provide lots and lots of different
information as part of the various XyZDescriptor classes.  But
don't panic, you only really need to provide the minimal core
information required by the various constructors.
<P>
See also the SimpleBeanInfo class which provides a convenient
\"noop\" base class for BeanInfo classes, which you can override
for those specific places where you want to return explicit info.
<P>
To learn about all the behaviour of a bean see the Introspector class."
      operation 6743707 "getBeanDescriptor"
	public return_type class_ref 890139 // BeanDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the beans <code>BeanDescriptor</code>.

@return  A BeanDescriptor providing overall information about
the bean, such as its displayName, its customizer, etc.  May
return null if the information should be obtained by automatic
analysis."
      end

      operation 6743835 "getEventSetDescriptors"
	public return_type class_ref 890523 // EventSetDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the beans <code>EventSetDescriptor</code>s.

@return  An array of EventSetDescriptors describing the kinds of 
events fired by this bean.  May return null if the information
should be obtained by automatic analysis."
      end

      operation 6743963 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A bean may have a \"default\" event that is the event that will
mostly commonly be used by humans when using the bean. 
@return Index of default event in the EventSetDescriptor array
		returned by getEventSetDescriptors.
<P>	Returns -1 if there is no default event."
      end

      operation 6744091 "getPropertyDescriptors"
	public return_type class_ref 423579 // PropertyDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the beans <code>PropertyDescriptor</code>s.

@return An array of PropertyDescriptors describing the editable
properties supported by this bean.  May return null if the
information should be obtained by automatic analysis.
<p>
If a property is indexed, then its entry in the result array will
belong to the IndexedPropertyDescriptor subclass of PropertyDescriptor.
A client of getPropertyDescriptors can use \"instanceof\" to check
if a given PropertyDescriptor is an IndexedPropertyDescriptor."
      end

      operation 6744219 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A bean may have a \"default\" property that is the property that will
mostly commonly be initially chosen for update by human's who are 
customizing the bean.
@return  Index of default property in the PropertyDescriptor array
		returned by getPropertyDescriptors.
<P>	Returns -1 if there is no default property."
      end

      operation 6744347 "getMethodDescriptors"
	public return_type class_ref 890651 // MethodDescriptor
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the beans <code>MethodDescriptor</code>s.

@return An array of MethodDescriptors describing the externally
visible methods supported by this bean.  May return null if
the information should be obtained by automatic analysis."
      end

      operation 6744475 "getAdditionalBeanInfo"
	public return_type class_ref 890395 // BeanInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method allows a BeanInfo object to return an arbitrary collection
of other BeanInfo objects that provide additional information on the
current bean.
<P>
If there are conflicts or overlaps between the information provided
by different BeanInfo objects, then the current BeanInfo takes precedence
over the getAdditionalBeanInfo objects, and later elements in the array
take precedence over earlier ones.

@return an array of BeanInfo objects.  May return null."
      end

      operation 6744603 "getIcon"
	public return_type class_ref 366235 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an image object that can be used to
represent the bean in toolboxes, toolbars, etc.   Icon images
will typically be GIFs, but may in future include other formats.
<p>
Beans aren't required to provide icons and may return null from
this method.
<p>
There are four possible flavors of icons (16x16 color,
32x32 color, 16x16 mono, 32x32 mono).  If a bean choses to only
support a single icon we recommend supporting 16x16 color.
<p>
We recommend that icons have a \"transparent\" background
so they can be rendered onto an existing background.

@param  iconKind  The kind of icon requested.  This should be
   one of the constant values ICON_COLOR_16x16, ICON_COLOR_32x32, 
   ICON_MONO_16x16, or ICON_MONO_32x32.
@return  An image object representing the requested icon.  May
   return null if no suitable icon is available."
      end

      attribute 2683291 "ICON_COLOR_16x16"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant to indicate a 16 x 16 color icon.
"
      end

      attribute 2683419 "ICON_COLOR_32x32"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant to indicate a 32 x 32 color icon.
"
      end

      attribute 2683547 "ICON_MONO_16x16"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant to indicate a 16 x 16 monochrome icon.
"
      end

      attribute 2683675 "ICON_MONO_32x32"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant to indicate a 32 x 32 monochrome icon.
"
      end
    end

    class 890523 "EventSetDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An EventSetDescriptor describes a group of events that a given Java
bean fires.
<P>
The given group of events are all delivered as method calls on a single
event listener interface, and an event listener object can be registered
via a call on a registration method supplied by the event source."
      classrelation 1732635 // <generalisation>
	relation 1732635 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1732635 // <generalisation>
	  b parent class_ref 890267 // FeatureDescriptor
      end

      classrelation 1732763 // listenerMethodDescriptors (<unidirectional association>)
	relation 1732763 --->
	  a role_name "listenerMethodDescriptors" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1732763 // listenerMethodDescriptors (<unidirectional association>)
	  b parent class_ref 890651 // MethodDescriptor
      end

      classrelation 1732891 // addMethodDescriptor (<unidirectional association>)
	relation 1732891 --->
	  a role_name "addMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1732891 // addMethodDescriptor (<unidirectional association>)
	  b parent class_ref 890651 // MethodDescriptor
      end

      classrelation 1733019 // removeMethodDescriptor (<unidirectional association>)
	relation 1733019 --->
	  a role_name "removeMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733019 // removeMethodDescriptor (<unidirectional association>)
	  b parent class_ref 890651 // MethodDescriptor
      end

      classrelation 1733147 // getMethodDescriptor (<unidirectional association>)
	relation 1733147 --->
	  a role_name "getMethodDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733147 // getMethodDescriptor (<unidirectional association>)
	  b parent class_ref 890651 // MethodDescriptor
      end

      classrelation 1733275 // listenerMethodsRef (<unidirectional association>)
	relation 1733275 --->
	  a role_name "listenerMethodsRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733275 // listenerMethodsRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1733403 // listenerTypeRef (<unidirectional association>)
	relation 1733403 --->
	  a role_name "listenerTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733403 // listenerTypeRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      attribute 2685211 "unicast"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2685339 "inDefaultEventSet"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6754587 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 4
	  param inout name "sourceClass" type class_ref 164635 // Class
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param in name "listenerMethodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> assuming that you are
following the most simple standard design pattern where a named
event &quot;fred&quot; is (1) delivered as a call on the single method of
interface FredListener, (2) has a single argument of type FredEvent,
and (3) where the FredListener may be registered with a call on an
addFredListener method of the source component and removed with a
call on a removeFredListener method.

@param sourceClass  The class firing the event.
@param eventSetName  The programmatic name of the event.  E.g. &quot;fred&quot;.
		Note that this should normally start with a lower-case character.
@param listenerType  The target interface that events
		will get delivered to.
@param listenerMethodName  The method that will get called when the event gets
		delivered to its target listener interface.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6754715 "getListenerClassName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param inout name "cls" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754843 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 6
	  param inout name "sourceClass" type class_ref 164635 // Class
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param in name "listenerMethodNames" explicit_type "String"
	  param in name "addListenerMethodName" explicit_type "String"
	  param in name "removeListenerMethodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
string names.

@param sourceClass  The class firing the event.
@param eventSetName The programmatic name of the event set.
		Note that this should normally start with a lower-case character.
@param listenerType  The Class of the target interface that events
		will get delivered to.
@param listenerMethodNames The names of the methods that will get called 
		when the event gets delivered to its target listener interface.
@param addListenerMethodName  The name of the method on the event source
		that can be used to register an event listener object.
@param removeListenerMethodName  The name of the method on the event source
		that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6754971 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 7
	  param inout name "sourceClass" type class_ref 164635 // Class
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param in name "listenerMethodNames" explicit_type "String"
	  param in name "addListenerMethodName" explicit_type "String"
	  param in name "removeListenerMethodName" explicit_type "String"
	  param in name "getListenerMethodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor creates an EventSetDescriptor from scratch using
string names.

@param sourceClass  The class firing the event.
@param eventSetName The programmatic name of the event set.
		Note that this should normally start with a lower-case character.
@param listenerType  The Class of the target interface that events
		will get delivered to.
@param listenerMethodNames The names of the methods that will get called 
		when the event gets delivered to its target listener interface.
@param addListenerMethodName  The name of the method on the event source
		that can be used to register an event listener object.
@param removeListenerMethodName  The name of the method on the event source
		that can be used to de-register an event listener object.
@param getListenerMethodName The method on the event source that
         can be used to access the array of event listener objects.
@exception IntrospectionException if an exception occurs during
             introspection.
@since 1.4"
      end

      operation 6755099 "getMethod"
	class_operation private return_type class_ref 170651 // Method
	nparams 3
	  param inout name "cls" type class_ref 164635 // Class
	  param in name "name" explicit_type "String"
	  param in name "args" explicit_type "int"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6755227 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 5
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param inout name "listenerMethods" type class_ref 170651 // Method
	  param inout name "addListenerMethod" type class_ref 170651 // Method
	  param inout name "removeListenerMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
<TT>java.lang.reflect.Method</TT> and <TT>java.lang.Class</TT> objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethods  An array of Method objects describing each
		of the event handling methods in the target listener.
@param addListenerMethod  The method on the event source
		that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
		that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6755355 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 6
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param inout name "listenerMethods" type class_ref 170651 // Method
	  param inout name "addListenerMethod" type class_ref 170651 // Method
	  param inout name "removeListenerMethod" type class_ref 170651 // Method
	  param inout name "getListenerMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor creates an EventSetDescriptor from scratch using
java.lang.reflect.Method and java.lang.Class objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethods  An array of Method objects describing each
		of the event handling methods in the target listener.
@param addListenerMethod  The method on the event source
		that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
		that can be used to de-register an event listener object.
@param getListenerMethod The method on the event source
         that can be used to access the array of event listener objects.
@exception IntrospectionException if an exception occurs during
             introspection.
@since 1.4"
      end

      operation 6755483 "EventSetDescriptor"
	public explicit_return_type ""
	nparams 5
	  param in name "eventSetName" explicit_type "String"
	  param inout name "listenerType" type class_ref 164635 // Class
	  param inout name "listenerMethodDescriptors" type class_ref 890651 // MethodDescriptor
	  param inout name "addListenerMethod" type class_ref 170651 // Method
	  param inout name "removeListenerMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <TT>EventSetDescriptor</TT> from scratch using
<TT>java.lang.reflect.MethodDescriptor</TT> and <TT>java.lang.Class</TT>
 objects.

@param eventSetName The programmatic name of the event set.
@param listenerType The Class for the listener interface.
@param listenerMethodDescriptors  An array of MethodDescriptor objects
		 describing each of the event handling methods in the
          target listener.
@param addListenerMethod  The method on the event source
		that can be used to register an event listener object.
@param removeListenerMethod  The method on the event source
		that can be used to de-register an event listener object.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6755611 "getListenerType"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <TT>Class</TT> object for the target interface.

@return The Class object for the target interface that will
get invoked when the event is fired."
      end

      operation 6755739 "setListenerType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cls" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6755867 "getListenerMethods"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the methods of the target listener interface.

@return An array of <TT>Method</TT> objects for the target methods
within the target listener interface that will get called when
events are fired."
      end

      operation 6755995 "setListenerMethods"
	private explicit_return_type "void"
	nparams 1
	  param inout name "methods" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756123 "getListenerMethods0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756251 "getListenerMethodDescriptors"
	public return_type class_ref 890651 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>MethodDescriptor</code>s of the target listener interface.

@return An array of <code>MethodDescriptor</code> objects for the target methods
within the target listener interface that will get called when
events are fired."
      end

      operation 6756379 "getAddListenerMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to add event listeners.

@return The method used to register a listener at the event source."
      end

      operation 6756507 "setAddListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756635 "getRemoveListenerMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to remove event listeners.

@return The method used to remove a listener at the event source."
      end

      operation 6756763 "setRemoveListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6756891 "getGetListenerMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method used to access the registered event listeners.

@return The method used to access the array of listeners at the event
        source or null if it doesn't exist.
@since 1.4"
      end

      operation 6757019 "setGetListenerMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6757147 "setUnicast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "unicast" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark an event set as unicast (or not).

@param unicast  True if the event set is unicast."
      end

      operation 6757275 "isUnicast"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normally event sources are multicast.  However there are some 
exceptions that are strictly unicast.

@return  <TT>true</TT> if the event set is unicast.  
         Defaults to <TT>false</TT>."
      end

      operation 6757403 "setInDefaultEventSet"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inDefaultEventSet" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks an event set as being in the &quot;default&quot; set (or not).
By default this is <TT>true</TT>.

@param inDefaultEventSet <code>true</code> if the event set is in
                         the &quot;default&quot; set, 
                         <code>false</code> if not "
      end

      operation 6757531 "isInDefaultEventSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports if an event set is in the &quot;default&quot; set.

@return  <TT>true</TT> if the event set is in 
         the &quot;default&quot; set.  Defaults to <TT>true</TT>."
      end

      operation 6757659 "EventSetDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 890523 // EventSetDescriptor
	  param inout name "y" type class_ref 890523 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor
Merge two event set descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).

@param x  The first (lower priority) EventSetDescriptor
@param y  The second (higher priority) EventSetDescriptor"
      end

      operation 6757787 "EventSetDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 890523 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end
    end

    class 890651 "MethodDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A MethodDescriptor describes a particular method that a Java Bean
supports for external access from other components."
      classrelation 1743387 // <generalisation>
	relation 1743387 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1743387 // <generalisation>
	  b parent class_ref 890267 // FeatureDescriptor
      end

      classrelation 1743515 // methodRef (<unidirectional association>)
	relation 1743515 --->
	  a role_name "methodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743515 // methodRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      attribute 2690075 "paramNames"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1743643 // params (<unidirectional association>)
	relation 1743643 --->
	  a role_name "params" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743643 // params (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      classrelation 1743771 // parameterDescriptors (<unidirectional association>)
	relation 1743771 --->
	  a role_name "parameterDescriptors" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1743771 // parameterDescriptors (<unidirectional association>)
	  b parent class_ref 898203 // ParameterDescriptor
      end

      operation 6779675 "MethodDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MethodDescriptor</code> from a
<code>Method</code>.

@param method    The low-level method information."
      end

      operation 6779803 "MethodDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "method" type class_ref 170651 // Method
	  param inout name "parameterDescriptors" type class_ref 898203 // ParameterDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MethodDescriptor</code> from a
<code>Method</code> providing descriptive information for each
of the method's parameters.

@param method    The low-level method information.
@param parameterDescriptors  Descriptive information for each of the
		 		method's parameters."
      end

      operation 6779931 "getMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that this MethodDescriptor encapsualtes. 

@return The low-level description of the method"
      end

      operation 6780059 "setMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "method" type class_ref 170651 // Method
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6780187 "getMethod0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6780315 "setParams"
	private explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6780443 "getParamNames"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " pp getParamNames used as an optimization to avoid method.getParameterTypes."
      end

      operation 6780571 "getParams"
	private return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6780699 "getParameterDescriptors"
	public return_type class_ref 898203 // ParameterDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ParameterDescriptor for each of this MethodDescriptor's
method's parameters.

@return The locale-independent names of the parameters.  May return
		a null array if the parameter names aren't known."
      end

      operation 6780827 "MethodDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 890651 // MethodDescriptor
	  param inout name "y" type class_ref 890651 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "public String toString() {
String message = \"name=\" + getName();
Class cls = getClass0();
if (cls != null) {
message += \", class=\";
message += cls.getName();
}
String[] names = getParamNames();
if (names != null) {
for (int i = 0; i < names.length; i++) {
message += \", param=\" + names[i];
}
}
return message;
} 

Package-private constructor
Merge two method descriptors.  Where they conflict, give the
second argument (y) priority over the first argument (x).
@param x  The first (lower priority) MethodDescriptor
@param y  The second (higher priority) MethodDescriptor"
      end

      operation 6780955 "MethodDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 890651 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end
    end

    class 890779 "Beans"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides some general purpose beans control methods."
      operation 6744731 "instantiate"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param inout name "cls" type class_ref 163611 // ClassLoader
	  param in name "beanName" explicit_type "String"
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Instantiate a JavaBean.
</p>

@param     cls         the class-loader from which we should create
		              the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
  	              For example \"sun.beanbox.foobah\"

@exception java.lang.ClassNotFoundException if the class of a serialized
             object could not be found.
@exception java.io.IOException if an I/O error occurs."
      end

      operation 6744859 "instantiate"
	class_operation public explicit_return_type "Object"
	nparams 3
	  param inout name "cls" type class_ref 163611 // ClassLoader
	  param in name "beanName" explicit_type "String"
	  param inout name "beanContext" type class_ref 890011 // BeanContext
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Instantiate a JavaBean.
</p>

@param     cls         the class-loader from which we should create
		              the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
  	              For example \"sun.beanbox.foobah\"
@param     beanContext The BeanContext in which to nest the new bean

@exception java.lang.ClassNotFoundException if the class of a serialized
             object could not be found.
@exception java.io.IOException if an I/O error occurs."
      end

      operation 6744987 "instantiate"
	class_operation public explicit_return_type "Object"
	nparams 4
	  param inout name "cls" type class_ref 163611 // ClassLoader
	  param in name "beanName" explicit_type "String"
	  param inout name "beanContext" type class_ref 890011 // BeanContext
	  param inout name "initializer" type class_ref 889883 // AppletInitializer
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a bean.
<p>
The bean is created based on a name relative to a class-loader.
This name should be a dot-separated name such as \"a.b.c\".
<p>
In Beans 1.0 the given name can indicate either a serialized object
or a class.  Other mechanisms may be added in the future.  In
beans 1.0 we first try to treat the beanName as a serialized object
name then as a class name.
<p>
When using the beanName as a serialized object name we convert the
given beanName to a resource pathname and add a trailing \".ser\" suffix.
We then try to load a serialized object from that resource.
<p>
For example, given a beanName of \"x.y\", Beans.instantiate would first
try to read a serialized object from the resource \"x/y.ser\" and if
that failed it would try to load the class \"x.y\" and create an
instance of that class.
<p>
If the bean is a subtype of java.applet.Applet, then it is given
some special initialization.  First, it is supplied with a default
AppletStub and AppletContext.  Second, if it was instantiated from
a classname the applet's \"init\" method is called.  (If the bean was
deserialized this step is skipped.)
<p>
Note that for beans which are applets, it is the caller's responsiblity
to call \"start\" on the applet.  For correct behaviour, this should be done
after the applet has been added into a visible AWT container.
<p>
Note that applets created via beans.instantiate run in a slightly
different environment than applets running inside browsers.  In
particular, bean applets have no access to \"parameters\", so they may
wish to provide property get/set methods to set parameter values.  We
advise bean-applet developers to test their bean-applets against both
the JDK appletviewer (for a reference browser environment) and the
BDK BeanBox (for a reference bean container).

@param     cls         the class-loader from which we should create
		              the bean.  If this is null, then the system
                       class-loader is used.
@param     beanName    the name of the bean within the class-loader.
  	              For example \"sun.beanbox.foobah\"
@param     beanContext The BeanContext in which to nest the new bean
@param     initializer The AppletInitializer for the new bean

@exception java.lang.ClassNotFoundException if the class of a serialized
             object could not be found.
@exception java.io.IOException if an I/O error occurs."
      end

      operation 6745115 "getInstanceOf"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param inout name "bean" explicit_type "Object"
	  param inout name "targetType" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "From a given bean, obtain an object representing a specified
type view of that source object.
<p>
The result may be the same object or a different object.  If
the requested target view isn't available then the given
bean is returned.
<p>
This method is provided in Beans 1.0 as a hook to allow the
addition of more flexible bean behaviour in the future.

@param bean        Object from which we want to obtain a view.
@param targetType  The type of view we'd like to get.
"
      end

      operation 6745243 "isInstanceOf"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "bean" explicit_type "Object"
	  param inout name "targetType" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if a bean can be viewed as a given target type.
The result will be true if the Beans.getInstanceof method
can be used on the given bean to obtain an object that
represents the specified targetType type view.

@param bean  Bean from which we want to obtain a view.
@param targetType  The type of view we'd like to get.
@return \"true\" if the given bean supports the given targetType.
"
      end

      operation 6745371 "isDesignTime"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if we are in design-mode.

@return  True if we are running in an application construction
		environment.

@see java.beans.DesignMode"
      end

      operation 6745499 "isGuiAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether beans can assume a GUI is available.

@return  True if we are running in an environment where beans
	   can assume that an interactive GUI is available, so they
	   can pop up dialog boxes, etc.  This will normally return
	   true in a windowing environment, and will normally return
	   false in a server environment or if an application is
	   running as part of a batch job.

@see java.beans.Visibility
"
      end

      operation 6745627 "setDesignTime"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "isDesignTime" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to indicate whether of not we are running in an application
builder environment.  

<p>Note that this method is security checked
and is not available to (for example) untrusted applets.
More specifically, if there is a security manager, 
its <code>checkPropertiesAccess</code> 
method is called. This could result in a SecurityException.

@param isDesignTime  True if we're in an application builder tool.
@exception  SecurityException  if a security manager exists and its  
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess"
      end

      operation 6745755 "setGuiAvailable"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "isGuiAvailable" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to indicate whether of not we are running in an environment
where GUI interaction is available.  

<p>Note that this method is security checked
and is not available to (for example) untrusted applets.
More specifically, if there is a security manager, 
its <code>checkPropertiesAccess</code> 
method is called. This could result in a SecurityException.

@param isGuiAvailable  True if GUI interaction is available.
@exception  SecurityException  if a security manager exists and its  
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess"
      end

      attribute 2683803 "designTime"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2683931 "guiAvailable"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 159387 "initialization"
	
	cpp "" ""
	java "  static {
        guiAvailable = !GraphicsEnvironment.isHeadless();
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 890907 "ObjectInputStreamWithLoader"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This subclass of ObjectInputStream delegates loading of classes to
an existing ClassLoader."
      classrelation 1730331 // <generalisation>
	relation 1730331 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1730331 // <generalisation>
	  b parent class_ref 201115 // ObjectInputStream
      end

      classrelation 1730459 // loader (<unidirectional association>)
	relation 1730459 --->
	  a role_name "loader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1730459 // loader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      operation 6745883 "ObjectInputStreamWithLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "loader" type class_ref 163611 // ClassLoader
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 204059 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loader must be non-null;"
      end

      operation 6746011 "primitiveType"
	private return_type class_ref 164635 // Class
	nparams 1
	  param in name "type" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a primitive array class"
      end

      operation 6746139 "resolveClass"
	protected return_type class_ref 164635 // Class
	nparams 1
	  param inout name "classDesc" type class_ref 202395 // ObjectStreamClass
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the given ClassLoader rather than using the system class"
      end
    end

    class 891035 "BeansAppletContext"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Package private support class.  This provides a default AppletContext
for beans which are applets."
      classrelation 1730587 // <realization>
	relation 1730587 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1730587 // <realization>
	  b parent class_ref 847899 // AppletContext
      end

      classrelation 1730715 // target (<unidirectional association>)
	relation 1730715 --->
	  a role_name "target" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1730715 // target (<unidirectional association>)
	  b parent class_ref 266267 // Applet
      end

      classrelation 1730843 // imageCache (<unidirectional association>)
	relation 1730843 --->
	  a role_name "imageCache" init_value "=  new java.util.Hashtable()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1730843 // imageCache (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      operation 6746267 "BeansAppletContext"
	package explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 266267 // Applet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6746395 "getAudioClip"
	public return_type class_ref 848027 // AudioClip
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6746523 "getImage"
	public return_type class_ref 366235 // Image
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6746651 "getApplet"
	public return_type class_ref 266267 // Applet
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6746779 "getApplets"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6746907 "showDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747035 "showDocument"
	public explicit_return_type "void"
	nparams 2
	  param inout name "url" type class_ref 269467 // URL
	  param in name "target" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747163 "showStatus"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747291 "setStream"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "stream" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747419 "getStream"
	public return_type class_ref 179099 // InputStream
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747547 "getStreamKeys"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 891163 "BeansAppletStub"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Package private support class.  This provides an AppletStub
for beans which are applets."
      classrelation 1730971 // <realization>
	relation 1730971 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1730971 // <realization>
	  b parent class_ref 847771 // AppletStub
      end

      attribute 2684059 "active"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1731099 // target (<unidirectional association>)
	relation 1731099 --->
	  a role_name "target" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731099 // target (<unidirectional association>)
	  b parent class_ref 266267 // Applet
      end

      classrelation 1731227 // context (<unidirectional association>)
	relation 1731227 --->
	  a role_name "context" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731227 // context (<unidirectional association>)
	  b parent class_ref 847899 // AppletContext
      end

      classrelation 1731355 // codeBase (<unidirectional association>)
	relation 1731355 --->
	  a role_name "codeBase" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731355 // codeBase (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      classrelation 1731483 // docBase (<unidirectional association>)
	relation 1731483 --->
	  a role_name "docBase" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731483 // docBase (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      operation 6747675 "BeansAppletStub"
	package explicit_return_type ""
	nparams 4
	  param inout name "target" type class_ref 266267 // Applet
	  param inout name "context" type class_ref 847899 // AppletContext
	  param inout name "codeBase" type class_ref 269467 // URL
	  param inout name "docBase" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747803 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6747931 "getDocumentBase"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6748059 "getCodeBase"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6748187 "getParameter"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6748315 "getAppletContext"
	public return_type class_ref 847899 // AppletContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6748443 "appletResize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 891291 "Customizer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A customizer class provides a complete custom GUI for customizing
a target Java Bean.
<P>
Each customizer should inherit from the java.awt.Component class so
it can be instantiated inside an AWT dialog or panel.
<P>
Each customizer should have a null constructor."
      operation 6748571 "setObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bean" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the object to be customized.  This method should be called only
once, before the Customizer has been added to any parent AWT container.
@param bean  The object to be customized."
      end

      operation 6748699 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a listener for the PropertyChange event.  The customizer
should fire a PropertyChange event whenever it changes the target
bean in a way that might require the displayed properties to be
refreshed.

@param listener  An object to be invoked when a PropertyChange
		event is fired."
      end

      operation 6748827 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener for the PropertyChange event.

@param listener  The PropertyChange listener to be removed."
      end
    end

    class 891419 "DefaultPersistenceDelegate"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>DefaultPersistenceDelegate</code> is a concrete implementation of
the abstract <code>PersistenceDelegate</code> class and
is the delegate used by default for classes about
which no information is available. The <code>DefaultPersistenceDelegate</code>
provides, version resilient, public API-based persistence for
classes that follow the JavaBeans conventions without any class specific
configuration.
<p>
The key assumptions are that the class has a nullary constructor
and that its state is accurately represented by matching pairs
of \"setter\" and \"getter\" methods in the order they are returned
by the Introspector.
In addition to providing code-free persistence for JavaBeans,
the <code>DefaultPersistenceDelegate</code> provides a convenient means
to effect persistent storage for classes that have a constructor
that, while not nullary, simply requires some property values
as arguments.

@see #DefaultPersistenceDelegate(String[])
@see java.beans.Introspector

@since 1.4

@version 1.18 08/26/05
@author Philip Milne"
      classrelation 1731611 // <generalisation>
	relation 1731611 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1731611 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      attribute 2684187 "constructor"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1731739 // definesEquals (<unidirectional association>)
	relation 1731739 --->
	  a role_name "definesEquals" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731739 // definesEquals (<unidirectional association>)
	  b parent class_ref 392091 // Boolean
      end

      operation 6749467 "DefaultPersistenceDelegate"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a persistence delegate for a class with a nullary constructor.

@see #DefaultPersistenceDelegate(java.lang.String[])"
      end

      operation 6749595 "DefaultPersistenceDelegate"
	public explicit_return_type ""
	nparams 1
	  param in name "constructorPropertyNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a default persistence delegate for a class with a
constructor whose arguments are the values of the property
names as specified by <code>constructorPropertyNames</code>.
The constructor arguments are created by
evaluating the property names in the order they are supplied.
To use this class to specify a single preferred constructor for use
in the serialization of a particular type, we state the
names of the properties that make up the constructor's
arguments. For example, the <code>Font</code> class which
does not define a nullary constructor can be handled
with the following persistence delegate:

<pre>
    new DefaultPersistenceDelegate(new String[]{\"name\", \"style\", \"size\"});
</pre>

@param  constructorPropertyNames The property names for the arguments of this constructor.

@see #instantiate"
      end

      operation 6749723 "definesEquals"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6749851 "definesEquals"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "instance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6749979 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the number of arguments in the specified constructor is non-zero and
the class of <code>oldInstance</code> explicitly declares an \"equals\" method
this method returns the value of <code>oldInstance.equals(newInstance)</code>.
Otherwise, this method uses the superclass's definition which returns true if the
classes of the two instances are equal.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@return True if an equivalent copy of <code>newInstance</code> may be
        created by applying a series of mutations to <code>oldInstance</code>.

@see #DefaultPersistenceDelegate(String[])"
      end

      operation 6750107 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation of the <code>instantiate</code> method returns
an expression containing the predefined method name \"new\" which denotes a
call to a constructor with the arguments as specified in
the <code>DefaultPersistenceDelegate</code>'s constructor.

@param  oldInstance The instance to be instantiated.
@param  out The code output stream.
@return An expression whose value is <code>oldInstance</code>.

@see #DefaultPersistenceDelegate(String[])"
      end

      operation 6750235 "isTransient"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "pd" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is a workaround for a bug in the introspector.
 PropertyDescriptors are not shared amongst subclasses."
      end

      operation 6750363 "equals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "o1" explicit_type "Object"
	  param inout name "o2" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6750491 "doProperty"
	private explicit_return_type "void"
	nparams 5
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "pd" type class_ref 423579 // PropertyDescriptor
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6750619 "invokeStatement"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "instance" explicit_type "Object"
	  param in name "methodName" explicit_type "String"
	  param inout name "args" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6750747 "initBean"
	private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Write out the properties of this instance."
      end

      operation 6750875 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation of the <code>initialize</code> method assumes
all state held in objects of this type is exposed via the
matching pairs of \"setter\" and \"getter\" methods in the order
they are returned by the Introspector. If a property descriptor
defines a \"transient\" attribute with a value equal to
<code>Boolean.TRUE</code> the property is ignored by this
default implementation. Note that this use of the word
\"transient\" is quite independent of the field modifier
that is used by the <code>ObjectOutputStream</code>.
<p>
For each non-transient property, an expression is created
in which the nullary \"getter\" method is applied
to the <code>oldInstance</code>. The value of this
expression is the value of the property in the instance that is
being serialized. If the value of this expression
in the cloned environment <code>mutatesTo</code> the
target value, the new value is initialized to make it
equivalent to the old value. In this case, because
the property value has not changed there is no need to
call the corresponding \"setter\" method and no statement
is emitted. If not however, the expression for this value
is replaced with another expression (normally a constructor)
and the corresponding \"setter\" method is called to install
the new property value in the object. This scheme removes
default information from the output produced by streams
using this delegate.
<p>
In passing these statements to the output stream, where they
will be executed, side effects are made to the <code>newInstance</code>.
In most cases this allows the problem of properties
whose values depend on each other to actually help the
serialization process by making the number of statements
that need to be written to the output smaller. In general,
the problem of handling interdependent properties is reduced to
that of finding an order for the properties in
a class such that no property value depends on the value of
a subsequent property.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@param out The stream to which any initialization statements should be written.

@see java.beans.Introspector#getBeanInfo
@see java.beans.PropertyDescriptor"
      end
    end

    class 891547 "PersistenceDelegate"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The PersistenceDelegate class takes the responsibility
for expressing the state of an instance of a given class
in terms of the methods in the class's public API. Instead
of associating the responsibility of persistence with
the class itself as is done, for example, by the
<code>readObject</code> and <code>writeObject</code>
methods used by the <code>ObjectOutputStream</code>, streams like
the <code>XMLEncoder</code> which
use this delegation model can have their behavior controlled
independently of the classes themselves. Normally, the class
is the best place to put such information and conventions
can easily be expressed in this delegation scheme to do just that.
Sometimes however, it is the case that a minor problem
in a single class prevents an entire object graph from
being written and this can leave the application
developer with no recourse but to attempt to shadow
the problematic classes locally or use alternative
persistence techniques. In situations like these, the
delegation model gives a relatively clean mechanism for
the application developer to intervene in all parts of the
serialization process without requiring that modifications
be made to the implementation of classes which are not part
of the application itself.
<p>
In addition to using a delegation model, this persistence
scheme differs from traditional serialization schemes
in requiring an analog of the <code>writeObject</code>
method without a corresponding <code>readObject</code>
method. The <code>writeObject</code> analog encodes each
instance in terms of its public API and there is no need to
define a <code>readObject</code> analog
since the procedure for reading the serialized form
is defined by the semantics of method invocation as laid
out in the Java Language Specification.
Breaking the dependency between <code>writeObject</code>
and <code>readObject</code> implementations, which may
change from version to version, is the key factor
in making the archives produced by this technique immune
to changes in the private implementations of the classes
to which they refer.
<p>
A persistence delegate, may take control of all
aspects of the persistence of an object including:
<ul>
<li>
Deciding whether or not an instance can be mutated
into another instance of the same class.
<li>
Instantiating the object, either by calling a
public constructor or a public factory method.
<li>
Performing the initialization of the object.
</ul>
@see XMLEncoder

@since 1.4

@version 1.11 05/05/04
@author Philip Milne"
      operation 6748955 "writeObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <code>writeObject</code> is a single entry point to the persistence
and is used by a <code>Encoder</code> in the traditional
mode of delegation. Although this method is not final,
it should not need to be subclassed under normal circumstances.
<p>
This implementation first checks to see if the stream
has already encountered this object. Next the
<code>mutatesTo</code> method is called to see if
that candidate returned from the stream can
be mutated into an accurate copy of <code>oldInstance</code>.
If it can, the <code>initialize</code> method is called to
perform the initialization. If not, the candidate is removed
from the stream, and the <code>instantiate</code> method
is called to create a new candidate for this object.

@param oldInstance The instance that will be created by this expression.
@param out The stream to which this expression will be written.
@return An expression whose value is <code>oldInstance</code>."
      end

      operation 6749083 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if an <em>equivalent</em> copy of <code>oldInstance</code> may be
created by applying a series of statements to <code>newInstance</code>.
In the specification of this method, we mean by equivalent that the modified instance
is indistinguishable from <code>oldInstance</code> in the behavior
of the relevant methods in its public API. [Note: we use the
phrase <em>relevant</em> methods rather than <em>all</em> methods
here only because, to be strictly correct, methods like <code>hashCode</code>
and <code>toString</code> prevent most classes from producing truly
indistinguishable copies of their instances].
<p>
The default behavior returns <code>true</code>
if the classes of the two instances are the same.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@return True if an equivalent copy of <code>newInstance</code> may be
        created by applying a series of mutations to <code>oldInstance</code>."
      end

      operation 6749211 "instantiate"
	abstract protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an expression whose value is <code>oldInstance</code>.
This method is used to characterize the constructor
or factory method that should be used to create the given object.
For example, the <code>instantiate</code> method of the persistence
delegate for the <code>Field</code> class could be defined as follows:
<pre>
Field f = (Field)oldInstance;
return new Expression(f, f.getDeclaringClass(), \"getField\", new Object[]{f.getName()});
</pre>
Note that we declare the value of the returned expression so that
the value of the expression (as returned by <code>getValue</code>)
will be identical to <code>oldInstance</code>.

@param oldInstance The instance that will be created by this expression.
@param out The stream to which this expression will be written.
@return An expression whose value is <code>oldInstance</code>."
      end

      operation 6749339 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Produce a series of statements with side effects on <code>newInstance</code>
so that the new instance becomes <em>equivalent</em> to <code>oldInstance</code>.
In the specification of this method, we mean by equivalent that, after the method
returns, the modified instance is indistinguishable from
<code>newInstance</code> in the behavior of all methods in its
public API.
<p>
The implementation typically achieves this goal by producing a series of
\"what happened\" statements involving the <code>oldInstance</code>
and its publicly available state. These statements are sent
to the output stream using its <code>writeExpression</code>
method which returns an expression involving elements in
a cloned environment simulating the state of an input stream during
reading. Each statement returned will have had all instances
the old environment replaced with objects which exist in the new
one. In particular, references to the target of these statements,
which start out as references to <code>oldInstance</code> are returned
as references to the <code>newInstance</code> instead.
Executing these statements effects an incremental
alignment of the state of the two objects as a series of
modifications to the objects in the new environment.
By the time the initialize method returns it should be impossible
to tell the two instances apart by using their public APIs.
Most importantly, the sequence of steps that were used to make
these objects appear equivalent will have been recorded
by the output stream and will form the actual output when
the stream is flushed.
<p>
The default implementation, calls the <code>initialize</code>
method of the type's superclass.

@param oldInstance The instance to be copied.
@param newInstance The instance that is to be modified.
@param out The stream to which any initialization statements should be written."
      end
    end

    class 891675 "Encoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An <code>Encoder</code> is a class which can be used to create 
files or streams that encode the state of a collection of 
JavaBeans in terms of their public APIs. The <code>Encoder</code>, 
in conjunction with its persistence delegates, is responsible for 
breaking the object graph down into a series of <code>Statements</code>s 
and <code>Expression</code>s which can be used to create it. 
A subclass typically provides a syntax for these expressions 
using some human readable form - like Java source code or XML. 

@since 1.4

@version 1.3 11/15/00
@author Philip Milne"
      classrelation 1731867 // bindings (<unidirectional association>)
	relation 1731867 --->
	  a role_name "bindings" init_value "=  new IdentityHashMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731867 // bindings (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1731995 // exceptionListener (<unidirectional association>)
	relation 1731995 --->
	  a role_name "exceptionListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1731995 // exceptionListener (<unidirectional association>)
	  b parent class_ref 892059 // ExceptionListener
      end

      attribute 2684443 "executeStatements"
	package explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1732123 // attributes (<unidirectional association>)
	relation 1732123 --->
	  a role_name "attributes" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1732123 // attributes (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 6751259 "writeObject"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the specified object to the output stream. 
The serialized form will denote a series of 
expressions, the combined effect of which will create 
an equivalent object when the input stream is read. 
By default, the object is assumed to be a <em>JavaBean</em> 
with a nullary constructor, whose state is defined by 
the matching pairs of \"setter\" and \"getter\" methods 
returned by the Introspector. 

@param o The object to be written to the stream. 

@see XMLDecoder#readObject"
      end

      operation 6751387 "setExceptionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exceptionListener" type class_ref 892059 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the exception handler for this stream to <code>exceptionListener</code>. 
The exception handler is notified when this stream catches recoverable 
exceptions.

@param exceptionListener The exception handler for this stream;
      if <code>null</code> the default exception listener will be used.

@see #getExceptionListener"
      end

      operation 6751515 "getExceptionListener"
	public return_type class_ref 892059 // ExceptionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exception handler for this stream. 

@return The exception handler for this stream;
   Will return the default exception listener if this has not explicitly been set.

@see #setExceptionListener"
      end

      operation 6751643 "getValue"
	package explicit_return_type "Object"
	nparams 1
	  param inout name "exp" type class_ref 891803 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6751771 "getPersistenceDelegate"
	public return_type class_ref 891547 // PersistenceDelegate
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the persistence delegate for the given type. 
The persistence delegate is calculated 
by applying the following of rules in order:   
<ul>
<li>
If the type is an array, an internal persistence 
delegate is returned which will instantiate an 
array of the appropriate type and length, initializing  
each of its elements as if they are properties. 
<li>
If the type is a proxy, an internal persistence 
delegate is returned which will instantiate a 
new proxy instance using the static 
\"newProxyInstance\" method defined in the 
Proxy class. 
<li>
If the BeanInfo for this type has a <code>BeanDescriptor</code> 
which defined a \"persistenceDelegate\" property, this 
value is returned. 
<li>
In all other cases the default persistence delegate 
is returned. The default persistence delegate assumes 
the type is a <em>JavaBean</em>, implying that it has a nullary constructor 
and that its state may be characterized by the matching pairs 
of \"setter\" and \"getter\" methods returned by the Introspector. 
</ul>

@param  type The type of the object. 
@return The persistence delegate for this type of object. 

@see #setPersistenceDelegate
@see java.beans.Introspector#getBeanInfo
@see java.beans.BeanInfo#getBeanDescriptor"
      end

      operation 6751899 "setPersistenceDelegate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "persistenceDelegate" type class_ref 891547 // PersistenceDelegate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the persistence delegate associated with this <code>type</code> to
<code>persistenceDelegate</code>.

@param  type The class of objects that <code>persistenceDelegate</code> applies to. 
@param  persistenceDelegate The persistence delegate for instances of <code>type</code>. 

@see #getPersistenceDelegate
@see java.beans.Introspector#getBeanInfo
@see java.beans.BeanInfo#getBeanDescriptor"
      end

      operation 6752027 "remove"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "oldInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the entry for this instance, returning the old entry.  

@param oldInstance The entry that should be removed. 
@return The entry that was removed. 

@see #get "
      end

      operation 6752155 "get"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "oldInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a tentative value for <code>oldInstance</code> in 
the environment created by this stream. A persistence 
delegate can use its <code>mutatesTo</code> method to 
determine whether this value may be initialized to 
form the equivalent object at the output or whether 
a new object must be instantiated afresh. If the 
stream has not yet seen this value, null is returned.  

@param  oldInstance The instance to be looked up. 
@return The object, null if the object has not been seen before. "
      end

      operation 6752283 "writeObject1"
	private explicit_return_type "Object"
	nparams 1
	  param inout name "oldInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6752411 "cloneStatement"
	private return_type class_ref 892187 // Statement
	nparams 1
	  param inout name "oldExp" type class_ref 892187 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6752539 "writeStatement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldStm" type class_ref 892187 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes statement <code>oldStm</code> to the stream. 
The <code>oldStm</code> should be written entirely 
in terms of the callers environment, i.e. the 
target and all arguments should be part of the 
object graph being written. These expressions 
represent a series of \"what happened\" expressions 
which tell the output stream how to produce an 
object graph like the original. 
<p>
The implementation of this method will produce 
a second expression to represent the same expression in 
an environment that will exist when the stream is read. 
This is achieved simply by calling <code>writeObject</code> 
on the target and all the arguments and building a new 
expression with the results. 

@param oldStm The expression to be written to the stream."
      end

      operation 6752667 "writeExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldExp" type class_ref 891803 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The implementation first checks to see if an 
expression with this value has already been written. 
If not, the expression is cloned, using 
the same procedure as <code>writeStatement</code>, 
and the value of this expression is reconciled 
with the value of the cloned expression   
by calling <code>writeObject</code>. 

@param oldExp The expression to be written to the stream."
      end

      operation 6752795 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6752923 "setAttribute"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "Object"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package private method for setting an attributes table for the encoder"
      end

      operation 6753051 "getAttribute"
	package explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 891803 "Expression"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An <code>Expression</code> object represents a primitive expression 
in which a single method is applied to a target and a set of 
arguments to return a result - as in <code>\"a.getFoo()\"</code>. 
<p> 
In addition to the properties of the super class, the 
<code>Expression</code> object provides a <em>value</em> which 
is the object returned when this expression is evaluated. 
The return value is typically not provided by the caller and 
is instead computed by dynamically finding the method and invoking 
it when the first call to <code>getValue</code> is made. 

@see #getValue
@see #setValue

@since 1.4

@version 1.3 11/15/00
@author Philip Milne"
      classrelation 1733659 // <generalisation>
	relation 1733659 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1733659 // <generalisation>
	  b parent class_ref 892187 // Statement
      end

      attribute 2685979 "unbound"
	class_attribute private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2686107 "value"
	private explicit_type "Object"
	init_value "=  unbound"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6759067 "Expression"
	public explicit_return_type ""
	nparams 3
	  param inout name "target" explicit_type "Object"
	  param in name "methodName" explicit_type "String"
	  param inout name "arguments" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Statement</code> object with a <code>target</code>, 
<code>methodName</code> and <code>arguments</code> as per the parameters. 

@param target The target of this expression. 
@param methodName The methodName of this expression. 
@param arguments The arguments of this expression. If <code>null</code> then an empty array will be used. 
    
@see #getValue"
      end

      operation 6759195 "Expression"
	public explicit_return_type ""
	nparams 4
	  param inout name "value" explicit_type "Object"
	  param inout name "target" explicit_type "Object"
	  param in name "methodName" explicit_type "String"
	  param inout name "arguments" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Expression</code> object for a method 
that returns a result. The result will never be calculated 
however, since this constructor uses the <code>value</code>  
parameter to set the value property by calling the 
<code>setValue</code> method.

@param value The value of this expression. 
@param target The target of this expression. 
@param methodName The methodName of this expression. 
@param arguments The arguments of this expression. If <code>null</code> then an empty array will be used.

@see #setValue"
      end

      operation 6759323 "getValue"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the value property of this instance is not already set, 
this method dynamically finds the method with the specified 
methodName on this target with these arguments and calls it. 
The result of the method invocation is first copied 
into the value property of this expression and then returned 
as the result of <code>getValue</code>. If the value property 
was already set, either by a call to <code>setValue</code> 
or a previous call to <code>getValue</code> then the value 
property is returned without either looking up or calling the method.
<p>
The value property of an <code>Expression</code> is set to 
a unique private (non-<code>null</code>) value by default and 
this value is used as an internal indication that the method 
has not yet been called. A return value of <code>null</code> 
replaces this default value in the same way that any other value 
would, ensuring that expressions are never evaluated more than once. 
<p>
See the <code>excecute<code> method for details on how 
methods are chosen using the dynamic types of the target 
and arguments. 

@see Statement#execute
@see #setValue

@return The result of applying this method to these arguments.  "
      end

      operation 6759451 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this expression to <code>value</code>. 
This value will be returned by the getValue method 
without calling the method associated with this 
expression. 

@param value The value of this expression. 

@see #getValue"
      end

      operation 6759579 "instanceName"
	package explicit_return_type "String"
	nparams 1
	  param inout name "instance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 6759707 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the value of this expression using a Java-style syntax. "
      end
    end

    class 891931 "DesignMode"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This interface is intended to be implemented by, or delegated from, instances
of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy
of java.beans.beancontext.BeanContextChild instances, the current \"designTime\" property.
<p>
The JavaBeans specification defines the notion of design time as is a 
mode in which JavaBeans instances should function during their composition
and customization in a interactive design, composition or construction tool,
as opposed to runtime when the JavaBean is part of an applet, application,
or other live Java executable abstraction.

@author Laurence P. G. Cable
@version 1.14, 12/19/03
@since 1.2

@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextChild
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent"
      attribute 2684315 "PROPERTYNAME"
	class_attribute public explicit_type "String"
	init_value "=  \"designTime\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The standard value of the propertyName as fired from a BeanContext or
other source of PropertyChangeEvents.
"
      end

      operation 6751003 "setDesignTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "designTime" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the \"value\" of the \"designTime\" property.
<p>
If the implementing object is an instance of java.beans.beancontext.BeanContext, 
or a subinterface thereof, then that BeanContext should fire a
PropertyChangeEvent, to its registered BeanContextMembershipListeners, with
parameters:
<ul>
	  <li><code>propertyName</code> - <code>java.beans.DesignMode.PROPERTYNAME</code>
   <li><code>oldValue</code> - previous value of \"designTime\"
   <li><code>newValue</code> - current value of \"designTime\"
</ul>
Note it is illegal for a BeanContextChild to invoke this method
associated with a BeanContext that it is nested within.

@param designTime  the current \"value\" of the \"designTime\" property
@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent"
      end

      operation 6751131 "isDesignTime"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A value of true denotes that JavaBeans should behave in design time
mode, a value of false denotes runtime behavior.

@return the current \"value\" of the \"designTime\" property."
      end
    end

    class 892059 "ExceptionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An ExceptionListener is notified of internal exceptions. 

@since 1.4

@version 1.6 12/19/03
@author Philip Milne"
      operation 6757915 "exceptionThrown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 165403 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when a recoverable exception has 
been caught. 

@param e The exception that was caught. 
"
      end
    end

    class 892187 "Statement"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A <code>Statement</code> object represents a primitive statement
in which a single method is applied to a target and
a set of arguments - as in <code>\"a.setFoo(b)\"</code>.
Note that where this example uses names
to denote the target and its argument, a statement
object does not require a name space and is constructed with
the values themselves.
The statement object associates the named method
with its environment as a simple set of values:
the target and an array of argument values.

@since 1.4

@version 1.32 05/29/05
@author Philip Milne"
      attribute 2685467 "emptyArray"
	class_attribute private explicit_type "Object"
	multiplicity "[]"
	init_value "=  new Object[]{}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1733531 // defaultExceptionListener (<unidirectional association>)
	relation 1733531 --->
	  a role_name "defaultExceptionListener" init_value "=  new ExceptionListener() {
        public void exceptionThrown(Exception e) {
            System.err.println(e);
            // e.printStackTrace();
            System.err.println(\"Continuing ...\");
        }
    }" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1733531 // defaultExceptionListener (<unidirectional association>)
	  b parent class_ref 892059 // ExceptionListener
      end

      attribute 2685595 "target"
	package explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2685723 "methodName"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2685851 "arguments"
	package explicit_type "Object"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6758043 "Statement"
	public explicit_return_type ""
	nparams 3
	  param inout name "target" explicit_type "Object"
	  param in name "methodName" explicit_type "String"
	  param inout name "arguments" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Statement</code> object with a <code>target</code>,
<code>methodName</code> and <code>arguments</code> as per the parameters.

@param target The target of this statement.
@param methodName The methodName of this statement.
@param arguments The arguments of this statement. If <code>null</code> then an empty array will be used.
"
      end

      operation 6758171 "getTarget"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the target of this statement.

@return The target of this statement."
      end

      operation 6758299 "getMethodName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method.

@return The name of the method."
      end

      operation 6758427 "getArguments"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arguments of this statement.

@return the arguments of this statement."
      end

      operation 6758555 "execute"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The execute method finds a method whose name is the same
as the methodName property, and invokes the method on
the target.

When the target's class defines many methods with the given name
the implementation should choose the most specific method using
the algorithm specified in the Java Language Specification
(15.11). The dynamic class of the target and arguments are used
in place of the compile-time type information and, like the
<code>java.lang.reflect.Method</code> class itself, conversion between
primitive values and their associated wrapper classes is handled
internally.
<p>
The following method types are handled as special cases:
<ul>
<li>
Static methods may be called by using a class object as the target.
<li>
The reserved method name \"new\" may be used to call a class's constructor
as if all classes defined static \"new\" methods. Constructor invocations
are typically considered <code>Expression</code>s rather than <code>Statement</code>s
as they return a value.
<li>
The method names \"get\" and \"set\" defined in the <code>java.util.List</code>
interface may also be applied to array instances, mapping to
the static methods of the same name in the <code>Array</code> class.
</ul>"
      end

      operation 6758683 "invoke"
	package explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6758811 "instanceName"
	package explicit_return_type "String"
	nparams 1
	  param inout name "instance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6758939 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the value of this statement using a Java-style syntax."
      end
    end

    class 892315 "EventHandler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>EventHandler</code> class provides 
support for dynamically generating event listeners whose methods
execute a simple statement involving an incoming event object
and a target object. 
<p>
The <code>EventHandler</code> class is intended to be used by interactive tools, such as
application builders, that allow developers to make connections between
beans. Typically connections are made from a user interface bean 
(the event <em>source</em>)
to an application logic bean (the <em>target</em>). The most effective 
connections of this kind isolate the application logic from the user 
interface.  For example, the <code>EventHandler</code> for a 
connection from a <code>JCheckBox</code> to a method 
that accepts a boolean value can deal with extracting the state 
of the check box and passing it directly to the method so that 
the method is isolated from the user interface layer. 
<p>
Inner classes are another, more general way to handle events from 
user interfaces.  The <code>EventHandler</code> class 
handles only a subset of what is possible using inner 
classes. However, <code>EventHandler</code> works better
with the long-term persistence scheme than inner classes.
Also, using <code>EventHandler</code> in large applications in 
which the same interface is implemented many times can
reduce the disk and memory footprint of the application. 
<p>
The reason that listeners created with <code>EventHandler</code>
have such a small 
footprint is that the <code>Proxy</code> class, on which 
the <code>EventHandler</code> relies, shares implementations 
of identical
interfaces. For example, if you use 
the <code>EventHandler</code> <code>create</code> methods to make
all the <code>ActionListener</code>s in an application,
all the action listeners will be instances of a single class
(one created by the <code>Proxy</code> class).
In general, listeners based on 
the <code>Proxy</code> class require one listener class 
to be created per <em>listener type</em> (interface),
whereas the inner class 
approach requires one class to be created per <em>listener</em>
(object that implements the interface). 

<p>
You don't generally deal directly with <code>EventHandler</code>
instances.
Instead, you use one of the <code>EventHandler</code>
<code>create</code> methods to create
an object that implements a given listener interface.
This listener object uses an <code>EventHandler</code> object
behind the scenes to encapsulate information about the
event, the object to be sent a message when the event occurs,
the message (method) to be sent, and any argument
to the method.
The following section gives examples of how to create listener
objects using the <code>create</code> methods.

<h2>Examples of Using EventHandler</h2>

The simplest use of <code>EventHandler</code> is to install  
a listener that calls a method on the target object with no arguments.  
In the following example we create an <code>ActionListener</code> 
that invokes the <code>toFront</code> method on an instance 
of <code>javax.swing.JFrame</code>.

<blockquote>
<pre>
myButton.addActionListener(
   (ActionListener)EventHandler.create(ActionListener.class, frame, \"toFront\"));
</pre>
</blockquote>

When <code>myButton</code> is pressed, the statement 
<code>frame.toFront()</code> will be executed.  One could get 
the same effect, with some additional compile-time type safety, 
by defining a new implementation of the <code>ActionListener</code> 
interface and adding an instance of it to the button: 

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
myButton.addActionListener(new ActionListener() {
   public void actionPerformed(ActionEvent e) {
       frame.toFront();
   }
});
</pre> 
</blockquote>

The next simplest use of <code>EventHandler</code> is 
to extract a property value from the first argument  
of the method in the listener interface (typically an event object) 
and use it to set the value of a property in the target object.  
In the following example we create an <code>ActionListener</code> that
sets the <code>nextFocusableComponent</code> property of the target 
object to the value of the \"source\" property of the event.

<blockquote>
<pre>
EventHandler.create(ActionListener.class, target, \"nextFocusableComponent\", \"source\")
</pre>
</blockquote>

This would correspond to the following inner class implementation: 

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener() {
   public void actionPerformed(ActionEvent e) {
       button.setNextFocusableComponent((Component)e.getSource()); 
   }
}
</pre>
</blockquote>

Probably the most common use of <code>EventHandler</code> 
is to extract a property value from the 
<em>source</em> of the event object and set this value as 
the value of a property of the target object. 
In the following example we create an <code>ActionListener</code> that
sets the \"label\" property of the target 
object to the value of the \"text\" property of the 
source (the value of the \"source\" property) of the event.

<blockquote>
<pre>
EventHandler.create(ActionListener.class, button, \"label\", \"source.text\")
</pre>
</blockquote>

This would correspond to the following inner class implementation: 

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener {
   public void actionPerformed(ActionEvent e) {
       button.setLabel(((JTextField)e.getSource()).getText()); 
   }
}
</pre>
</blockquote>

The event property may be be \"qualified\" with an arbitrary number 
of property prefixes delimited with the \".\" character. The \"qualifying\" 
names that appear before the \".\" characters are taken as the names of 
properties that should be applied, left-most first, to 
the event object.  
<p>  
For example, the following action listener

<blockquote>
<pre>
EventHandler.create(ActionListener.class, target, \"a\", \"b.c.d\")
</pre>
</blockquote>

might be written as the following inner class  
(assuming all the properties had canonical getter methods and 
returned the appropriate types): 

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new ActionListener {
   public void actionPerformed(ActionEvent e) {
       target.setA(e.getB().getC().isD()); 
   }
}
</pre>
</blockquote>

@see java.lang.reflect.Proxy
@see java.util.EventObject

@since 1.4 

@author Mark Davidson
@author Philip Milne
@author Hans Muller

@version 1.2 10/24/00"
      classrelation 1732251 // <realization>
	relation 1732251 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1732251 // <realization>
	  b parent class_ref 288411 // InvocationHandler
      end

      attribute 2684571 "empty"
	class_attribute private explicit_type "Object"
	multiplicity "[]"
	init_value "=  new Object[]{}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2684699 "target"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1732379 // targetMethod (<unidirectional association>)
	relation 1732379 --->
	  a role_name "targetMethod" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1732379 // targetMethod (<unidirectional association>)
	  b parent class_ref 170651 // Method
      end

      attribute 2684827 "action"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2684955 "eventPropertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2685083 "listenerMethodName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1732507 // acc (<unidirectional association>)
	relation 1732507 --->
	  a role_name "acc" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1732507 // acc (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end

      operation 6753179 "EventHandler"
	public explicit_return_type ""
	nparams 4
	  param inout name "target" explicit_type "Object"
	  param in name "action" explicit_type "String"
	  param in name "eventPropertyName" explicit_type "String"
	  param in name "listenerMethodName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>EventHandler</code> object;
you generally use one of the <code>create</code> methods
instead of invoking this constructor directly.

@param target the object that will perform the action
@param action the (possibly qualified) name of a writable property or method on the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event
@param listenerMethodName the name of the method in the listener interface that should trigger the action

@see EventHandler
@see #create(Class, Object, String, String, String)
@see #getTarget
@see #getAction
@see #getEventPropertyName
@see #getListenerMethodName"
      end

      operation 6753307 "getTarget"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object to which this event handler will send a message.

@return the target of this event handler
@see #EventHandler(Object, String, String, String)"
      end

      operation 6753435 "getAction"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the target's writable property
that this event handler will set,
or the name of the method that this event handler
will invoke on the target.

@return the action of this event handler
@see #EventHandler(Object, String, String, String)"
      end

      operation 6753563 "getEventPropertyName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property of the event that should be 
used in the action applied to the target. 

@return the property of the event

@see #EventHandler(Object, String, String, String)"
      end

      operation 6753691 "getListenerMethodName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method that will trigger the action.  
A return value of <code>null</code> signifies that all methods in the
listener interface trigger the action.  

@return the name of the method that will trigger the action

@see #EventHandler(Object, String, String, String)"
      end

      operation 6753819 "applyGetters"
	private explicit_return_type "Object"
	nparams 2
	  param inout name "target" explicit_type "Object"
	  param in name "getters" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6753947 "invoke"
	public explicit_return_type "Object"
	nparams 3
	  param in name "proxy" explicit_type "Object"
	  param in name "method" type class_ref 170651 // Method
	  param in name "arguments" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the appropriate property value from the event and 
pass it to the action associated with 
this <code>EventHandler</code>. 

@param proxy the proxy object
@param method the method in the listener interface
@return the result of applying the action to the target

@see EventHandler"
      end

      operation 6754075 "invokeInternal"
	private explicit_return_type "Object"
	nparams 3
	  param inout name "proxy" explicit_type "Object"
	  param inout name "method" type class_ref 170651 // Method
	  param inout name "arguments" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6754203 "create"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "listenerInterface" type class_ref 164635 // Class
	  param inout name "target" explicit_type "Object"
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an implementation of <code>listenerInterface</code> in which
<em>all</em> of the methods in the listener interface apply 
the handler's <code>action</code> to the <code>target</code>. This 
method is implemented by calling the other, more general, 
implementation of the <code>create</code> method with both 
the <code>eventPropertyName</code> and the <code>listenerMethodName</code> 
taking the value <code>null</code>. 
<p>
To create an <code>ActionListener</code> that shows a 
<code>JDialog</code> with <code>dialog.show()</code>, 
one can write:

<blockquote>
<pre>
EventHandler.create(ActionListener.class, dialog, \"show\")
</pre>
</blockquote>

<p>
@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a writable property or method on the target

@return an object that implements <code>listenerInterface</code>

@see #create(Class, Object, String, String)"
      end

      operation 6754331 "create"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "listenerInterface" type class_ref 164635 // Class
	  param inout name "target" explicit_type "Object"
	  param in name "action" explicit_type "String"
	  param in name "eventPropertyName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an implementation of <code>listenerInterface</code> in which
<em>all</em> of the methods pass the value of the event 
expression, <code>eventPropertyName</code>, to the final method in the
statement, <code>action</code>, which is applied to the <code>target</code>.
This method is implemented by calling the
more general, implementation of the <code>create</code> method with 
the <code>listenerMethodName</code> taking the value <code>null</code>. 
<p>
To create an <code>ActionListener</code> that sets the
the text of a <code>JLabel</code> to the text value of 
the <code>JTextField</code> source of the incoming event,
you can use the following code:

<blockquote>
<pre>
EventHandler.create(ActionListener.class, label, \"text\", \"source.text\");
</pre>
</blockquote>

This is equivalent to the following code:
<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
label.setText((JTextField(event.getSource())).getText()) 
</pre>
</blockquote>

@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a writable property or method on the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event

@return an object that implements <code>listenerInterface</code>

@see #create(Class, Object, String, String, String)"
      end

      operation 6754459 "create"
	class_operation public explicit_return_type "T"
	nparams 5
	  param inout name "listenerInterface" type class_ref 164635 // Class
	  param inout name "target" explicit_type "Object"
	  param in name "action" explicit_type "String"
	  param in name "eventPropertyName" explicit_type "String"
	  param in name "listenerMethodName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an implementation of <code>listenerInterface</code> in which
the method named <code>listenerMethodName</code> 
passes the value of the event expression, <code>eventPropertyName</code>, 
to the final method in the statement, <code>action</code>, which 
is applied to the <code>target</code>. All of the other listener 
methods do nothing. 
<p>
If the <code>eventPropertyName</code> is <code>null</code> the 
implementation calls a method with the name specified 
in <code>action</code> that takes an <code>EventObject</code> 
or a no-argument method with the same name if a method 
accepting an <code>EventObject</code> is not defined. 
<p>
If the <code>listenerMethodName</code> is <code>null</code> 
<em>all</em> methods in the interface trigger the <code>action</code> to be 
executed on the <code>target</code>. 
<p>
For example, to create a <code>MouseListener</code> that sets the target
object's <code>origin</code> property to the incoming <code>MouseEvent</code>'s
location (that's the value of <code>mouseEvent.getPoint()</code>) each 
time a mouse button is pressed, one would write:
<blockquote>
<pre>
EventHandler.create(MouseListener.class, \"mousePressed\", target, \"origin\", \"point\");
</pre>
</blockquote>

This is comparable to writing a <code>MouseListener</code> in which all
of the methods except <code>mousePressed</code> are no-ops:

<blockquote>
<pre>
//Equivalent code using an inner class instead of EventHandler.
new MouseAdapter() {
   public void mousePressed(MouseEvent e) {
       target.setOrigin(e.getPoint());
   }
}
</pre>
</blockquote>

@param listenerInterface the listener interface to create a proxy for
@param target the object that will perform the action
@param action the name of a writable property or method on the target
@param eventPropertyName the (possibly qualified) name of a readable property of the incoming event
@param listenerMethodName the name of the method in the listener interface that should trigger the action

@return an object that implements <code>listenerInterface</code>

@see EventHandler"
      end
    end

    class 892443 "IntrospectionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an exception happens during Introspection.
<p>
Typical causes include not being able to map a string class name
to a Class object, not being able to resolve a string method name,
or specifying a method name that has the wrong type signature for
its intended use."
      classrelation 1735195 // <generalisation>
	relation 1735195 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1735195 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      operation 6766747 "IntrospectionException"
	public explicit_return_type ""
	nparams 1
	  param in name "mess" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IntrospectionException</code> with a 
detailed message.

@param mess Descriptive message"
      end
    end

    class 892571 "IndexedPropertyChangeEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An \"IndexedPropertyChange\" event gets delivered whenever a component that
conforms to the JavaBeans<TM> specification (a \"bean\") changes a bound 
indexed property. This class is an extension of <code>PropertyChangeEvent</code>
but contains the index of the property that has changed.
<P>
Null values may be provided for the old and the new values if their
true values are not known.
<P>
An event source may send a null object as the name to indicate that an
arbitrary set of if its properties have changed.  In this case the
old and new values should also be null.

@version 1.4 12/19/03
@since 1.5
@author Mark Davidson"
      classrelation 1733915 // <generalisation>
	relation 1733915 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1733915 // <generalisation>
	  b parent class_ref 386075 // PropertyChangeEvent
      end

      attribute 2686747 "index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6760603 "IndexedPropertyChangeEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "source" explicit_type "Object"
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>IndexedPropertyChangeEvent</code> object.

@param source  The bean that fired the event.
@param propertyName  The programmatic name of the property that
            was changed.
@param oldValue      The old value of the property.
@param newValue      The new value of the property.
@param index index of the property element that was changed."
      end

      operation 6760731 "getIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the property that was changed.

@return The index specifying the property element that was
        changed."
      end
    end

    class 892699 "IndexedPropertyDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An IndexedPropertyDescriptor describes a property that acts like an
array and has an indexed read and/or indexed write method to access
specific elements of the array.
<p>
An indexed property may also provide simple non-indexed read and write
methods.  If these are present, they read and write arrays of the type
returned by the indexed read method."
      classrelation 1734683 // <generalisation>
	relation 1734683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1734683 // <generalisation>
	  b parent class_ref 423579 // PropertyDescriptor
      end

      classrelation 1734811 // indexedPropertyTypeRef (<unidirectional association>)
	relation 1734811 --->
	  a role_name "indexedPropertyTypeRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734811 // indexedPropertyTypeRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1734939 // indexedReadMethodRef (<unidirectional association>)
	relation 1734939 --->
	  a role_name "indexedReadMethodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1734939 // indexedReadMethodRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      classrelation 1735067 // indexedWriteMethodRef (<unidirectional association>)
	relation 1735067 --->
	  a role_name "indexedWriteMethodRef" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735067 // indexedWriteMethodRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      attribute 2687515 "indexedReadMethodName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2687643 "indexedWriteMethodName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6764315 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "beanClass" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor constructs an IndexedPropertyDescriptor for a property
that follows the standard Java conventions by having getFoo and setFoo 
accessor methods, for both indexed access and array access.
<p>
Thus if the argument name is \"fred\", it will assume that there
is an indexed reader method \"getFred\", a non-indexed (array) reader
method also called \"getFred\", an indexed writer method \"setFred\",
and finally a non-indexed writer method \"setFred\".

@param propertyName The programmatic name of the property.
@param beanClass The Class object for the target bean.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6764443 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 6
	  param in name "propertyName" explicit_type "String"
	  param inout name "beanClass" type class_ref 164635 // Class
	  param in name "readMethodName" explicit_type "String"
	  param in name "writeMethodName" explicit_type "String"
	  param in name "indexedReadMethodName" explicit_type "String"
	  param in name "indexedWriteMethodName" explicit_type "String"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and method
names for reading and writing the property, both indexed
and non-indexed.

@param propertyName The programmatic name of the property.
@param beanClass  The Class object for the target bean.
@param readMethodName The name of the method used for reading the property
		 values as an array.  May be null if the property is write-only
		 or must be indexed.
@param writeMethodName The name of the method used for writing the property
		 values as an array.  May be null if the property is read-only
		 or must be indexed.
@param indexedReadMethodName The name of the method used for reading
		an indexed property value.
		May be null if the property is write-only.
@param indexedWriteMethodName The name of the method used for writing
		an indexed property value.  
		May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6764571 "IndexedPropertyDescriptor"
	public explicit_return_type ""
	nparams 5
	  param in name "propertyName" explicit_type "String"
	  param inout name "readMethod" type class_ref 170651 // Method
	  param inout name "writeMethod" type class_ref 170651 // Method
	  param inout name "indexedReadMethod" type class_ref 170651 // Method
	  param inout name "indexedWriteMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor takes the name of a simple property, and Method
objects for reading and writing the property.

@param propertyName The programmatic name of the pro
perty.
@param readMethod The method used for reading the property values as an array.
		May be null if the property is write-only or must be indexed.
@param writeMethod The method used for writing the property values as an array.
		May be null if the property is read-only or must be indexed.
@param indexedReadMethod The method used for reading an indexed property value.
		May be null if the property is write-only.
@param indexedWriteMethod The method used for writing an indexed property value.  
		May be null if the property is read-only.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6764699 "getIndexedReadMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to read an indexed
property value.

@return The method that should be used to read an indexed
property value.
May return null if the property isn't indexed or is write-only."
      end

      operation 6764827 "setIndexedReadMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to read an indexed property value.

@param readMethod The new indexed read method."
      end

      operation 6764955 "setIndexedReadMethod0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "readMethod" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6765083 "getIndexedWriteMethod"
	public return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the method that should be used to write an indexed property value.

@return The method that should be used to write an indexed
property value.
May return null if the property isn't indexed or is read-only."
      end

      operation 6765211 "setIndexedWriteMethod"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the method that should be used to write an indexed property value.

@param writeMethod The new indexed write method."
      end

      operation 6765339 "setIndexedWriteMethod0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "writeMethod" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6765467 "getIndexedPropertyType"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>Class</code> object of the indexed properties' type.
The returned <code>Class</code> may describe a primitive type such as <code>int</code>.

@return The <code>Class</code> for the indexed properties' type; may return <code>null</code>
        if the type cannot be determined."
      end

      operation 6765595 "setIndexedPropertyType"
	private explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods which set get/set the Reference objects"
      end

      operation 6765723 "getIndexedPropertyType0"
	private return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6765851 "getIndexedReadMethod0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6765979 "getIndexedWriteMethod0"
	private return_type class_ref 170651 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6766107 "findIndexedPropertyType"
	private return_type class_ref 164635 // Class
	nparams 2
	  param inout name "indexedReadMethod" type class_ref 170651 // Method
	  param inout name "indexedWriteMethod" type class_ref 170651 // Method
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6766235 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>PropertyDescriptor</code> against the specified object.
Returns true if the objects are the same. Two <code>PropertyDescriptor</code>s
are the same if the read, write, property types, property editor and
flags  are equivalent.

@since 1.4"
      end

      operation 6766363 "IndexedPropertyDescriptor"
	package explicit_return_type ""
	nparams 2
	  param inout name "x" type class_ref 423579 // PropertyDescriptor
	  param inout name "y" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor.
Merge two property descriptors.  Where they conflict, give the
second argument (y) priority over the first argumnnt (x).

@param x  The first (lower priority) PropertyDescriptor
@param y  The second (higher priority) PropertyDescriptor"
      end

      operation 6766491 "IndexedPropertyDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 892699 // IndexedPropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end

      operation 6766619 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for the object. 
See {@link java.lang.Object#hashCode} for a complete description.

@return a hash code value for this object.
@since 1.5"
      end
    end

    class 892827 "PropertyEditor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A PropertyEditor class provides support for GUIs that want to
allow users to edit a property value of a given type.
<p>
PropertyEditor supports a variety of different kinds of ways of
displaying and updating property values.  Most PropertyEditors will
only need to support a subset of the different options available in
this API.
<P>
Simple PropertyEditors may only support the getAsText and setAsText
methods and need not support (say) paintValue or getCustomEditor.  More
complex types may be unable to support getAsText and setAsText but will
instead support paintValue and getCustomEditor.
<p>
Every propertyEditor must support one or more of the three simple
display styles.  Thus it can either (1) support isPaintable or (2)
both return a non-null String[] from getTags() and return a non-null
value from getAsText or (3) simply return a non-null String from 
getAsText().
<p>
Every property editor must support a call on setValue when the argument
object is of the type for which this is the corresponding propertyEditor.
In addition, each property editor must either support a custom editor,
or support setAsText.
<p>
Each PropertyEditor should have a null constructor."
      operation 6784539 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set (or change) the object that is to be edited.  Primitive types such
as \"int\" must be wrapped as the corresponding object type such as
\"java.lang.Integer\".

@param value The new target object to be edited.  Note that this
    object should not be modified by the PropertyEditor, rather 
    the PropertyEditor should create a new object to hold any
    modified value."
      end

      operation 6784667 "getValue"
	public explicit_return_type "Object"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the property value.

@return The value of the property.  Primitive types such as \"int\" will
be wrapped as the corresponding object type such as \"java.lang.Integer\"."
      end

      operation 6784795 "isPaintable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Determines whether this property editor is paintable.

@return  True if the class will honor the paintValue method."
      end

      operation 6784923 "paintValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "gfx" type class_ref 360475 // Graphics
	  param inout name "box" type class_ref 342299 // Rectangle
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint a representation of the value into a given area of screen
real estate.  Note that the propertyEditor is responsible for doing
its own clipping so that it fits into the given rectangle.
<p>
If the PropertyEditor doesn't honor paint requests (see isPaintable)
this method should be a silent noop.
<p>
The given Graphics object will have the default font, color, etc of
the parent container.  The PropertyEditor may change graphics attributes
such as font and color and doesn't need to restore the old values.

@param gfx  Graphics object to paint into.
@param box  Rectangle within graphics object into which we should paint."
      end

      operation 6785051 "getJavaInitializationString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Returns a fragment of Java code that can be used to set a property
to match the editors current state. This method is intended
for use when generating Java code to reflect changes made through the 
property editor.
<p>
The code fragment should be context free and must be a legal Java 
expression as specified by the JLS.
<p>
Specifically, if the expression represents a computation then all
classes and static members should be fully qualified. This rule 
applies to constructors, static methods and non primitive arguments.
<p>
Caution should be used when evaluating the expression as it may throw
exceptions. In particular, code generators must ensure that generated
code will compile in the presence of an expression that can throw 
checked exceptions.
<p>
Example results are:
<ul>
<li>Primitive expresssion: <code>2</code>
<li>Class constructor: <code>new java.awt.Color(127,127,34)</code>
<li>Static field: <code>java.awt.Color.orange</code>
<li>Static method: <code>javax.swing.Box.createRigidArea(new 
                                  java.awt.Dimension(0, 5))</code>
</ul>

@return a fragment of Java code representing an initializer for the
        current value. It should not contain a semi-colon 
        ('<code>;</code>') to end the expression."
      end

      operation 6785179 "getAsText"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Gets the property value as text.

@return The property value as a human editable string.
<p>   Returns null if the value can't be expressed as an editable string.
<p>   If a non-null value is returned, then the PropertyEditor should
	     be prepared to parse that string back in setAsText()."
      end

      operation 6785307 "setAsText"
	public explicit_return_type "void"
	nparams 1
	  param in name "text" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the property value by parsing a given String.  May raise
java.lang.IllegalArgumentException if either the String is
badly formatted or if this kind of property can't be expressed
as text.
@param text  The string to be parsed."
      end

      operation 6785435 "getTags"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

If the property value must be one of a set of known tagged values, 
then this method should return an array of the tags.  This can
be used to represent (for example) enum values.  If a PropertyEditor
supports tags, then it should support the use of setAsText with
a tag value as a way of setting the value and the use of getAsText
to identify the current value.

@return The tag values for this property.  May be null if this 
  property cannot be represented as a tagged value.
	"
      end

      operation 6785563 "getCustomEditor"
	public return_type class_ref 361371 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

A PropertyEditor may choose to make available a full custom Component
that edits its property value.  It is the responsibility of the
PropertyEditor to hook itself up to its editor Component itself and
to report property value changes by firing a PropertyChange event.
<P>
The higher-level code that calls getCustomEditor may either embed
the Component in some larger property sheet, or it may put it in
its own individual dialog, or ...

@return A java.awt.Component that will allow a human to directly
     edit the current property value.  May be null if this is
	    not supported."
      end

      operation 6785691 "supportsCustomEditor"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this property editor supports a custom editor.

@return  True if the propertyEditor can provide a custom editor."
      end

      operation 6785819 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Register a listener for the PropertyChange event.  When a
PropertyEditor changes its value it should fire a PropertyChange
event on all registered PropertyChangeListeners, specifying the
null value for the property name and itself as the source.

@param listener  An object to be invoked when a PropertyChange
		event is fired."
      end

      operation 6785947 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener for the PropertyChange event.

@param listener  The PropertyChange listener to be removed."
      end
    end

    class 892955 "Introspector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Introspector class provides a standard way for tools to learn about
the properties, events, and methods supported by a target Java Bean.
<p>
For each of those three kinds of information, the Introspector will
separately analyze the bean's class and superclasses looking for
either explicit or implicit information and use that information to
build a BeanInfo object that comprehensively describes the target bean.
<p>
For each class \"Foo\", explicit information may be available if there exists
a corresponding \"FooBeanInfo\" class that provides a non-null value when
queried for the information.   We first look for the BeanInfo class by
taking the full package-qualified name of the target bean class and
appending \"BeanInfo\" to form a new class name.  If this fails, then
we take the final classname component of this name, and look for that
class in each of the packages specified in the BeanInfo package search
path.
<p>
Thus for a class such as \"sun.xyz.OurButton\" we would first look for a
BeanInfo class called \"sun.xyz.OurButtonBeanInfo\" and if that failed we'd
look in each package in the BeanInfo search path for an OurButtonBeanInfo
class.  With the default search path, this would mean looking for
\"sun.beans.infos.OurButtonBeanInfo\".
<p>
If a class provides explicit BeanInfo about itself then we add that to
the BeanInfo information we obtained from analyzing any derived classes,
but we regard the explicit information as being definitive for the current
class and its base classes, and do not proceed any further up the superclass
chain.
<p>
If we don't find explicit BeanInfo on a class, we use low-level
reflection to study the methods of the class and apply standard design
patterns to identify property accessors, event sources, or public
methods.  We then proceed to analyze the class's superclass and add
in the information from it (and possibly on up the superclass chain).

<p>
Because the Introspector caches BeanInfo classes for better performance, 
take care if you use it in an application that uses
multiple class loaders.
In general, when you destroy a <code>ClassLoader</code>
that has been used to introspect classes,
you should use the
{@link #flushCaches <code>Introspector.flushCaches</code>} 
or 
{@link #flushFromCaches <code>Introspector.flushFromCaches</code>} method
to flush all of the introspected classes out of the cache.

<P>
For more information about introspection and design patterns, please 
consult the 
 <a href=\"http://java.sun.com/products/javabeans/docs/index.html\">JavaBeans specification</a>."
      attribute 2687771 "USE_ALL_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags that can be used to control getBeanInfo:"
      end

      attribute 2687899 "IGNORE_IMMEDIATE_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2688027 "IGNORE_ALL_BEANINFO"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1735323 // declaredMethodCache (<unidirectional association>)
	relation 1735323 --->
	  a role_name "declaredMethodCache" init_value "=  
	Collections.synchronizedMap(new WeakHashMap())" class_relation private
	    comment " Static Caches to speed up introspection.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735323 // declaredMethodCache (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1735451 // beanInfoCache (<unidirectional association>)
	relation 1735451 --->
	  a role_name "beanInfoCache" init_value "=  
	Collections.synchronizedMap(new WeakHashMap())" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735451 // beanInfoCache (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1735579 // beanClass (<unidirectional association>)
	relation 1735579 --->
	  a role_name "beanClass" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735579 // beanClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 1735707 // explicitBeanInfo (<unidirectional association>)
	relation 1735707 --->
	  a role_name "explicitBeanInfo" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735707 // explicitBeanInfo (<unidirectional association>)
	  b parent class_ref 890395 // BeanInfo
      end

      classrelation 1735835 // superBeanInfo (<unidirectional association>)
	relation 1735835 --->
	  a role_name "superBeanInfo" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1735835 // superBeanInfo (<unidirectional association>)
	  b parent class_ref 890395 // BeanInfo
      end

      classrelation 1735963 // additionalBeanInfo (<unidirectional association>)
	relation 1735963 --->
	  a role_name "additionalBeanInfo" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1735963 // additionalBeanInfo (<unidirectional association>)
	  b parent class_ref 890395 // BeanInfo
      end

      attribute 2688155 "propertyChangeSource"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1736091 // eventListenerType (<unidirectional association>)
	relation 1736091 --->
	  a role_name "eventListenerType" init_value "=  EventListener.class" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736091 // eventListenerType (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 2688283 "defaultEventName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These should be removed."
      end

      attribute 2688411 "defaultPropertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2688539 "defaultEventIndex"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2688667 "defaultPropertyIndex"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1736219 // methods (<unidirectional association>)
	relation 1736219 --->
	  a role_name "methods" private
	    comment " Methods maps from Method objects to MethodDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736219 // methods (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1736347 // properties (<unidirectional association>)
	relation 1736347 --->
	  a role_name "properties" private
	    comment " properties maps from String names to PropertyDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736347 // properties (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1736475 // events (<unidirectional association>)
	relation 1736475 --->
	  a role_name "events" private
	    comment " events maps from String names to EventSetDescriptors
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736475 // events (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      attribute 2688795 "DEFAULT_INFO_PATH"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"sun.beans.infos\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2688923 "searchPath"
	class_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  { DEFAULT_INFO_PATH }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1736603 // EMPTY_EVENTSETDESCRIPTORS (<unidirectional association>)
	relation 1736603 --->
	  a role_name "EMPTY_EVENTSETDESCRIPTORS" multiplicity "[]" init_value "=  new EventSetDescriptor[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1736603 // EMPTY_EVENTSETDESCRIPTORS (<unidirectional association>)
	  b parent class_ref 890523 // EventSetDescriptor
      end

      attribute 2689051 "ADD_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"add\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2689179 "REMOVE_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"remove\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2689307 "GET_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"get\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2689435 "SET_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"set\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2689563 "IS_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"is\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2689691 "BEANINFO_SUFFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"BeanInfo\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6766875 "getBeanInfo"
	class_operation public return_type class_ref 890395 // BeanInfo
	nparams 1
	  param inout name "beanClass" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
 				Public methods
======================================================================

Introspect on a Java Bean and learn about all its properties, exposed
methods, and events.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
then the BeanInfo class is retrieved from the BeanInfo cache.

@param beanClass  The bean class to be analyzed.
@return  A BeanInfo object describing the target bean.
@exception IntrospectionException if an exception occurs during
             introspection.
@see #flushCaches
@see #flushFromCaches"
      end

      operation 6767003 "getBeanInfo"
	class_operation public return_type class_ref 890395 // BeanInfo
	nparams 2
	  param inout name "beanClass" type class_ref 164635 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introspect on a Java bean and learn about all its properties, exposed
methods, and events, subject to some control flags.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
based on the same arguments then the BeanInfo class is retrieved 
from the BeanInfo cache.

@param beanClass  The bean class to be analyzed.
@param flags  Flags to control the introspection.
    If flags == USE_ALL_BEANINFO then we use all of the BeanInfo
	 	classes we can discover.
    If flags == IGNORE_IMMEDIATE_BEANINFO then we ignore any
          BeanInfo associated with the specified beanClass.
    If flags == IGNORE_ALL_BEANINFO then we ignore all BeanInfo
          associated with the specified beanClass or any of its
		 parent classes.
@return  A BeanInfo object describing the target bean.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6767131 "getBeanInfo"
	class_operation public return_type class_ref 890395 // BeanInfo
	nparams 2
	  param inout name "beanClass" type class_ref 164635 // Class
	  param inout name "stopClass" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introspect on a Java bean and learn all about its properties, exposed
methods, below a given \"stop\" point.
<p>
If the BeanInfo class for a Java Bean has been previously Introspected
based on the same arguments, then the BeanInfo class is retrieved
from the BeanInfo cache.

@param beanClass The bean class to be analyzed.
@param stopClass The baseclass at which to stop the analysis.  Any
   methods/properties/events in the stopClass or in its baseclasses
   will be ignored in the analysis.
@exception IntrospectionException if an exception occurs during
             introspection."
      end

      operation 6767259 "getBeanInfo"
	class_operation private return_type class_ref 890395 // BeanInfo
	nparams 3
	  param inout name "beanClass" type class_ref 164635 // Class
	  param inout name "stopClass" type class_ref 164635 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only called from the public getBeanInfo methods. This method caches
the Introspected BeanInfo based on the arguments."
      end

      operation 6767387 "decapitalize"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to take a string and convert it to normal Java variable
name capitalization.  This normally means converting the first
character from upper case to lower case, but in the (unusual) special
case when there is more than one character and both the first and
second characters are upper case, we leave it alone.
<p>
Thus \"FooBah\" becomes \"fooBah\" and \"X\" becomes \"x\", but \"URL\" stays
as \"URL\".

@param  name The string to be decapitalized.
@return  The decapitalized version of the string."
      end

      operation 6767515 "getBeanInfoSearchPath"
	class_operation public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of package names that will be used for
		finding BeanInfo classes.

@return  The array of package names that will be searched in
		order to find BeanInfo classes. The default value
         for this array is implementation-dependent; e.g. 
         Sun implementation initially sets to {\"sun.beans.infos\"}."
      end

      operation 6767643 "setBeanInfoSearchPath"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "path" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the list of package names that will be used for
		finding BeanInfo classes.  The behaviour of 
         this method is undefined if parameter path
         is null.

<p>First, if there is a security manager, its <code>checkPropertiesAccess</code> 
method is called. This could result in a SecurityException.

@param path  Array of package names.
@exception  SecurityException  if a security manager exists and its  
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess"
      end

      operation 6767771 "flushCaches"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush all of the Introspector's internal caches.  This method is
not normally required.  It is normally only needed by advanced
tools that update existing \"Class\" objects in-place and need
to make the Introspector re-analyze existing Class objects."
      end

      operation 6767899 "flushFromCaches"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "clz" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flush the Introspector's internal cached information for a given class.
This method is not normally required.  It is normally only needed
by advanced tools that update existing \"Class\" objects in-place
and need to make the Introspector re-analyze an existing Class object.

Note that only the direct state associated with the target Class
object is flushed.  We do not flush state for other Class objects
with the same name, nor do we flush state for any related Class
objects (such as subclasses), even though their state may include
information indirectly obtained from the target Class object.

@param clz  Class object to be flushed.
@throws NullPointerException If the Class object is null."
      end

      operation 6768027 "Introspector"
	private explicit_return_type ""
	nparams 3
	  param inout name "beanClass" type class_ref 164635 // Class
	  param inout name "stopClass" type class_ref 164635 // Class
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
 			Private implementation methods
======================================================================"
      end

      operation 6768155 "getBeanInfo"
	private return_type class_ref 890395 // BeanInfo
	nparams 0
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GenericBeanInfo class from the state of the Introspector"
      end

      operation 6768283 "findExplicitBeanInfo"
	class_operation private return_type class_ref 890395 // BeanInfo
	nparams 1
	  param inout name "beanClass" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks for an explicit BeanInfo class that corresponds to the Class.
First it looks in the existing package that the Class is defined in,
then it checks to see if the class is its own BeanInfo. Finally,
the BeanInfo search path is prepended to the class and searched.

@return Instance of an explicit BeanInfo class or null if one isn't found."
      end

      operation 6768411 "getTargetPropertyInfo"
	private return_type class_ref 423579 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of PropertyDescriptors describing the editable
properties supported by the target bean."
      end

      classrelation 1736731 // pdStore (<unidirectional association>)
	relation 1736731 --->
	  a role_name "pdStore" init_value "=  new HashMap()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1736731 // pdStore (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      operation 6768539 "addPropertyDescriptor"
	private explicit_return_type "void"
	nparams 1
	  param inout name "pd" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the property descriptor to the list store."
      end

      operation 6768667 "processPropertyDescriptors"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates the property descriptor table by merging the 
lists of Property descriptors."
      end

      operation 6768795 "mergePropertyDescriptor"
	private return_type class_ref 423579 // PropertyDescriptor
	nparams 2
	  param inout name "ipd" type class_ref 892699 // IndexedPropertyDescriptor
	  param inout name "pd" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the property descriptor to the indexedproperty descriptor only if the 
types are the same.

The most specific property descriptor will take precedence."
      end

      operation 6768923 "mergePropertyDescriptor"
	private return_type class_ref 423579 // PropertyDescriptor
	nparams 2
	  param inout name "pd1" type class_ref 423579 // PropertyDescriptor
	  param inout name "pd2" type class_ref 423579 // PropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle regular pd merge"
      end

      operation 6769051 "mergePropertyDescriptor"
	private return_type class_ref 423579 // PropertyDescriptor
	nparams 2
	  param inout name "ipd1" type class_ref 892699 // IndexedPropertyDescriptor
	  param inout name "ipd2" type class_ref 892699 // IndexedPropertyDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Handle regular ipd merge"
      end

      operation 6769179 "getTargetEventInfo"
	private return_type class_ref 890523 // EventSetDescriptor
	nparams 0
	nexceptions 1
	  exception class_ref 892443 // IntrospectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of EventSetDescriptors describing the kinds of 
events fired by the target bean."
      end

      operation 6769307 "addEvent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "esd" type class_ref 890523 // EventSetDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6769435 "getTargetMethodInfo"
	private return_type class_ref 890651 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return An array of MethodDescriptors describing the private
methods supported by the target bean."
      end

      operation 6769563 "addMethod"
	private explicit_return_type "void"
	nparams 1
	  param inout name "md" type class_ref 890651 // MethodDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6769691 "makeQualifiedMethodName"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "params" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a key for a method in a method cache."
      end

      operation 6769819 "getTargetDefaultEventIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6769947 "getTargetDefaultPropertyIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6770075 "getTargetBeanDescriptor"
	private return_type class_ref 890139 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6770203 "isEventHandler"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "m" type class_ref 170651 // Method
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6770331 "getPublicDeclaredMethods"
	class_operation private return_type class_ref 170651 // Method
	nparams 1
	  param inout name "clz" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method to return *public* methods within a class."
      end

      operation 6770459 "internalFindMethod"
	class_operation private return_type class_ref 170651 // Method
	nparams 4
	  param inout name "start" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param in name "argCount" explicit_type "int"
	  param inout name "args" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "======================================================================
 Package private support methods.
======================================================================

Internal support for finding a target methodName with a given
parameter list on a given class."
      end

      operation 6770587 "findMethod"
	class_operation package return_type class_ref 170651 // Method
	nparams 3
	  param inout name "cls" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param in name "argCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a target methodName on a given class."
      end

      operation 6770715 "findMethod"
	class_operation package return_type class_ref 170651 // Method
	nparams 4
	  param inout name "cls" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param in name "argCount" explicit_type "int"
	  param inout name "args" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a target methodName with specific parameter list on a given class.
<p>
Used in the contructors of the EventSetDescriptor, 
PropertyDescriptor and the IndexedPropertyDescriptor.
<p>
@param cls The Class object on which to retrieve the method.
@param methodName Name of the method.
@param argCount Number of arguments for the desired method.
@param args Array of argument types for the method.
@return the method or null if not found"
      end

      operation 6770843 "isSubclass"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 164635 // Class
	  param inout name "b" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if class a is either equivalent to class b, or
if class a is a subclass of class b, i.e. if a either \"extends\"
or \"implements\" b.
Note tht either or both \"Class\" objects may represent interfaces."
      end

      operation 6770971 "throwsException"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "method" type class_ref 170651 // Method
	  param inout name "exception" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true iff the given method throws the given exception."
      end

      operation 6771099 "instantiate"
	class_operation package explicit_return_type "Object"
	nparams 2
	  param inout name "sibling" type class_ref 164635 // Class
	  param in name "className" explicit_type "String"
	nexceptions 3
	  exception class_ref 220059 // InstantiationException
	  exception class_ref 306331 // IllegalAccessException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to create an instance of a named class.
First try the classloader of \"sibling\", then try the system
classloader then the class loader of the current Thread."
      end
    end

    class 893083 "GenericBeanInfo"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " end class Introspector
===========================================================================

Package private implementation support class for Introspector's
internal use.
<p>
Mostly this is used as a placeholder for the descriptors."
      classrelation 1736987 // <generalisation>
	relation 1736987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1736987 // <generalisation>
	  b parent class_ref 893211 // SimpleBeanInfo
      end

      classrelation 1737115 // beanDescriptor (<unidirectional association>)
	relation 1737115 --->
	  a role_name "beanDescriptor" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737115 // beanDescriptor (<unidirectional association>)
	  b parent class_ref 890139 // BeanDescriptor
      end

      classrelation 1737243 // events (<unidirectional association>)
	relation 1737243 --->
	  a role_name "events" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1737243 // events (<unidirectional association>)
	  b parent class_ref 890523 // EventSetDescriptor
      end

      attribute 2689819 "defaultEvent"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1737371 // properties (<unidirectional association>)
	relation 1737371 --->
	  a role_name "properties" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1737371 // properties (<unidirectional association>)
	  b parent class_ref 423579 // PropertyDescriptor
      end

      attribute 2689947 "defaultProperty"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1737499 // methods (<unidirectional association>)
	relation 1737499 --->
	  a role_name "methods" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1737499 // methods (<unidirectional association>)
	  b parent class_ref 890651 // MethodDescriptor
      end

      classrelation 1737627 // targetBeanInfo (<unidirectional association>)
	relation 1737627 --->
	  a role_name "targetBeanInfo" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1737627 // targetBeanInfo (<unidirectional association>)
	  b parent class_ref 890395 // BeanInfo
      end

      operation 6772379 "GenericBeanInfo"
	public explicit_return_type ""
	nparams 7
	  param inout name "beanDescriptor" type class_ref 890139 // BeanDescriptor
	  param inout name "events" type class_ref 890523 // EventSetDescriptor
	  param in name "defaultEvent" explicit_type "int"
	  param inout name "properties" type class_ref 423579 // PropertyDescriptor
	  param in name "defaultProperty" explicit_type "int"
	  param inout name "methods" type class_ref 890651 // MethodDescriptor
	  param inout name "targetBeanInfo" type class_ref 890395 // BeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6772507 "GenericBeanInfo"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 893083 // GenericBeanInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private dup constructor
This must isolate the new object from any changes to the old object."
      end

      operation 6772635 "getPropertyDescriptors"
	public return_type class_ref 423579 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6772763 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6772891 "getEventSetDescriptors"
	public return_type class_ref 890523 // EventSetDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773019 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773147 "getMethodDescriptors"
	public return_type class_ref 890651 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773275 "getBeanDescriptor"
	public return_type class_ref 890139 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773403 "getIcon"
	public return_type class_ref 366235 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893211 "SimpleBeanInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is a support class to make it easier for people to provide
BeanInfo classes.
<p>
It defaults to providing \"noop\" information, and can be selectively
overriden to provide more explicit information on chosen topics.
When the introspector sees the \"noop\" values, it will apply low
level introspection and design patterns to automatically analyze
the target bean."
      classrelation 1736859 // <realization>
	relation 1736859 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1736859 // <realization>
	  b parent class_ref 890395 // BeanInfo
      end

      operation 6771227 "getBeanDescriptor"
	public return_type class_ref 890139 // BeanDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge about the class and customizer of the bean.
You can override this if you wish to provide explicit info."
      end

      operation 6771355 "getPropertyDescriptors"
	public return_type class_ref 423579 // PropertyDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of properties. You can override this
if you wish to provide explicit property info."
      end

      operation 6771483 "getDefaultPropertyIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of a default property. You can override this
if you wish to define a default property for the bean."
      end

      operation 6771611 "getEventSetDescriptors"
	public return_type class_ref 890523 // EventSetDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of event sets. You can override this
if you wish to provide explicit event set info."
      end

      operation 6771739 "getDefaultEventIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of a default event. You can override this
if you wish to define a default event for the bean."
      end

      operation 6771867 "getMethodDescriptors"
	public return_type class_ref 890651 // MethodDescriptor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deny knowledge of methods. You can override this
if you wish to provide explicit method info."
      end

      operation 6771995 "getAdditionalBeanInfo"
	public return_type class_ref 890395 // BeanInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Claim there are no other relevant BeanInfo objects.  You
may override this if you want to (for example) return a
BeanInfo for a base class."
      end

      operation 6772123 "getIcon"
	public return_type class_ref 366235 // Image
	nparams 1
	  param in name "iconKind" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Claim there are no icons available.  You can override
this if you want to provide icons for your bean."
      end

      operation 6772251 "loadImage"
	public return_type class_ref 366235 // Image
	nparams 1
	  param in name "resourceName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a utility method to help in loading icon images.
It takes the name of a resource file associated with the
current object's class file and loads an image object
from that file.  Typically images will be GIFs.
<p>
@param resourceName  A pathname relative to the directory
		holding the class file of the current class.  For example,
		\"wombat.gif\".
@return  an image object.  May be null if the load failed."
      end
    end

    class 893339 "NullPersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Like the <code>Intropector</code>, the <code>MetaData</code> class
contains <em>meta</em> objects that describe the way
classes should express their state in terms of their
own public APIs.

@see java.beans.Intropector

@version 1.39 05/05/04
@author Philip Milne
@author Steve Langley"
      classrelation 1737755 // <generalisation>
	relation 1737755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1737755 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6773531 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note this will be called by all classes when they reach the
 top of their superclass chain."
      end

      operation 6773659 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6773787 "writeObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893467 "PrimitivePersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1737883 // <generalisation>
	relation 1737883 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1737883 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6773915 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774043 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893595 "ArrayPersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1738011 // <generalisation>
	relation 1738011 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738011 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6774171 "mutatesTo"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774299 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774427 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893723 "ProxyPersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1738139 // <generalisation>
	relation 1738139 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738139 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6774555 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893851 "java_lang_String_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Strings"
      classrelation 1738267 // <generalisation>
	relation 1738267 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738267 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6774683 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6774811 "writeObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 893979 "java_lang_Class_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Classes"
      classrelation 1738395 // <generalisation>
	relation 1738395 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738395 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6774939 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894107 "java_lang_reflect_Field_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Fields"
      classrelation 1738523 // <generalisation>
	relation 1738523 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738523 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6775067 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894235 "java_lang_reflect_Method_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Methods"
      classrelation 1738651 // <generalisation>
	relation 1738651 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738651 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6775195 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894363 "java_util_Collection_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Collections

The Hashtable and AbstractMap classes have no common ancestor yet may
be handled with a single persistence delegate: one which uses the methods
of the Map insterface exclusively. Attatching the persistence delegates
to the interfaces themselves is fraught however since, in the case of
the Map, both the AbstractMap and HashMap classes are declared to
implement the Map interface, leaving the obvious implementation prone
to repeating their initialization. These issues and questions around
the ordering of delegates attached to interfaces have lead us to
ignore any delegates attached to interfaces and force all persistence
delegates to be registered with concrete classes.

 Collection"
      classrelation 1738779 // <generalisation>
	relation 1738779 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738779 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6775323 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894491 "java_util_List_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " List"
      classrelation 1738907 // <generalisation>
	relation 1738907 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1738907 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6775451 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894619 "java_util_Map_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Map"
      classrelation 1739035 // <generalisation>
	relation 1739035 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739035 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6775579 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 894747 "java_util_AbstractCollection_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1739163 // <generalisation>
	relation 1739163 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739163 // <generalisation>
	  b parent class_ref 894363 // java_util_Collection_PersistenceDelegate
      end
    end

    class 894875 "java_util_AbstractList_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1739291 // <generalisation>
	relation 1739291 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739291 // <generalisation>
	  b parent class_ref 894491 // java_util_List_PersistenceDelegate
      end
    end

    class 895003 "java_util_AbstractMap_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1739419 // <generalisation>
	relation 1739419 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739419 // <generalisation>
	  b parent class_ref 894619 // java_util_Map_PersistenceDelegate
      end
    end

    class 895131 "java_util_Hashtable_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1739547 // <generalisation>
	relation 1739547 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739547 // <generalisation>
	  b parent class_ref 894619 // java_util_Map_PersistenceDelegate
      end
    end

    class 895259 "java_beans_beancontext_BeanContextSupport_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Beans"
      classrelation 1739675 // <generalisation>
	relation 1739675 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739675 // <generalisation>
	  b parent class_ref 894363 // java_util_Collection_PersistenceDelegate
      end
    end

    class 895387 "StaticFieldsPersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " AWT"
      classrelation 1739803 // <generalisation>
	relation 1739803 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739803 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6775707 "installFields"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 891675 // Encoder
	  param inout name "cls" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6775835 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6775963 "writeObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 895515 "java_awt_SystemColor_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " SystemColor"
      classrelation 1739931 // <generalisation>
	relation 1739931 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1739931 // <generalisation>
	  b parent class_ref 895387 // StaticFieldsPersistenceDelegate
      end
    end

    class 895643 "java_awt_font_TextAttribute_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " TextAttribute"
      classrelation 1740059 // <generalisation>
	relation 1740059 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740059 // <generalisation>
	  b parent class_ref 895387 // StaticFieldsPersistenceDelegate
      end
    end

    class 895771 "java_awt_MenuShortcut_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " MenuShortcut"
      classrelation 1740187 // <generalisation>
	relation 1740187 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740187 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6776091 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 895899 "java_awt_Component_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Component"
      classrelation 1740315 // <generalisation>
	relation 1740315 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740315 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776219 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896027 "java_awt_Container_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Container"
      classrelation 1740443 // <generalisation>
	relation 1740443 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740443 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776347 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896155 "java_awt_Choice_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Choice"
      classrelation 1740571 // <generalisation>
	relation 1740571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740571 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776475 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896283 "java_awt_Menu_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Menu"
      classrelation 1740699 // <generalisation>
	relation 1740699 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740699 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776603 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896411 "java_awt_MenuBar_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " MenuBar"
      classrelation 1740827 // <generalisation>
	relation 1740827 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740827 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776731 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896539 "java_awt_List_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " List"
      classrelation 1740955 // <generalisation>
	relation 1740955 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1740955 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776859 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896667 "java_awt_BorderLayout_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " LayoutManagers
 BorderLayout"
      classrelation 1741083 // <generalisation>
	relation 1741083 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741083 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6776987 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896795 "java_awt_CardLayout_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " CardLayout"
      classrelation 1741211 // <generalisation>
	relation 1741211 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741211 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777115 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 896923 "java_awt_GridBagLayout_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " GridBagLayout"
      classrelation 1741339 // <generalisation>
	relation 1741339 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741339 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777243 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897051 "javax_swing_JFrame_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Swing
 JFrame (If we do this for Window instead of JFrame, the setVisible call
 will be issued before we have added all the children to the JFrame and
 will appear blank)."
      classrelation 1741467 // <generalisation>
	relation 1741467 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741467 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777371 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897179 "javax_swing_DefaultListModel_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Models
 DefaultListModel"
      classrelation 1741595 // <generalisation>
	relation 1741595 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741595 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777499 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897307 "javax_swing_DefaultComboBoxModel_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " DefaultComboBoxModel"
      classrelation 1741723 // <generalisation>
	relation 1741723 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741723 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777627 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897435 "javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " DefaultMutableTreeNode"
      classrelation 1741851 // <generalisation>
	relation 1741851 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741851 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6777755 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897563 "javax_swing_ToolTipManager_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ToolTipManager"
      classrelation 1741979 // <generalisation>
	relation 1741979 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1741979 // <generalisation>
	  b parent class_ref 891547 // PersistenceDelegate
      end

      operation 6777883 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897691 "javax_swing_JTabbedPane_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " JTabbedPane"
      classrelation 1742107 // <generalisation>
	relation 1742107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742107 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6778011 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897819 "javax_swing_Box_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Box"
      classrelation 1742235 // <generalisation>
	relation 1742235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742235 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6778139 "instantiate"
	protected return_type class_ref 891803 // Expression
	nparams 2
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 897947 "javax_swing_JMenu_PersistenceDelegate"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " JMenu
 Note that we do not need to state the initialiser for
 JMenuItems since the getComponents() method defined in
 Container will return all of the sub menu items that
 need to be added to the menu item.
 Not so for JMenu apparently."
      classrelation 1742363 // <generalisation>
	relation 1742363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1742363 // <generalisation>
	  b parent class_ref 891419 // DefaultPersistenceDelegate
      end

      operation 6778267 "initialize"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "oldInstance" explicit_type "Object"
	  param inout name "newInstance" explicit_type "Object"
	  param inout name "out" type class_ref 891675 // Encoder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 898075 "MetaData"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " XXX - doens't seem to work. Debug later.
class javax_swing_JMenu_PersistenceDelegate extends DefaultPersistenceDelegate {
protected void initialize(Class<?> type, Object oldInstance, Object newInstance, Encoder out) {
super.initialize(type, oldInstance, newInstance, out);
javax.swing.JMenu m = (javax.swing.JMenu)oldInstance;
javax.swing.JMenu n = (javax.swing.JMenu)newInstance;
for (int i = n.getItemCount(); i < m.getItemCount(); i++) {
invokeStatement(oldInstance, \"add\", new Object[]{m.getItem(i)}, out);
}
}
}"
      classrelation 1742491 // internalPersistenceDelegates (<unidirectional association>)
	relation 1742491 --->
	  a role_name "internalPersistenceDelegates" init_value "=  new Hashtable()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1742491 // internalPersistenceDelegates (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1742619 // transientProperties (<unidirectional association>)
	relation 1742619 --->
	  a role_name "transientProperties" init_value "=  new Hashtable()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1742619 // transientProperties (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      classrelation 1742747 // nullPersistenceDelegate (<unidirectional association>)
	relation 1742747 --->
	  a role_name "nullPersistenceDelegate" init_value "=  new NullPersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1742747 // nullPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 891547 // PersistenceDelegate
      end

      classrelation 1742875 // primitivePersistenceDelegate (<unidirectional association>)
	relation 1742875 --->
	  a role_name "primitivePersistenceDelegate" init_value "=  new PrimitivePersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1742875 // primitivePersistenceDelegate (<unidirectional association>)
	  b parent class_ref 891547 // PersistenceDelegate
      end

      classrelation 1743003 // defaultPersistenceDelegate (<unidirectional association>)
	relation 1743003 --->
	  a role_name "defaultPersistenceDelegate" init_value "=  new DefaultPersistenceDelegate()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743003 // defaultPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 891547 // PersistenceDelegate
      end

      classrelation 1743131 // arrayPersistenceDelegate (<unidirectional association>)
	relation 1743131 --->
	  a role_name "arrayPersistenceDelegate" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743131 // arrayPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 891547 // PersistenceDelegate
      end

      classrelation 1743259 // proxyPersistenceDelegate (<unidirectional association>)
	relation 1743259 --->
	  a role_name "proxyPersistenceDelegate" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743259 // proxyPersistenceDelegate (<unidirectional association>)
	  b parent class_ref 891547 // PersistenceDelegate
      end

      extra_member 159515 "initialization"
	
	cpp "" ""
	java "  static {

// Constructors.

  // util

        registerConstructor(\"java.util.Date\", new String[]{\"time\"});

  // beans

        registerConstructor(\"java.beans.Statement\", new String[]{\"target\", \"methodName\", \"arguments\"});
        registerConstructor(\"java.beans.Expression\", new String[]{\"target\", \"methodName\", \"arguments\"});
        registerConstructor(\"java.beans.EventHandler\", new String[]{\"target\", \"action\", \"eventPropertyName\", \"listenerMethodName\"});

  // awt
  
        registerConstructor(\"java.awt.Point\", new String[]{\"x\", \"y\"});
        registerConstructor(\"java.awt.Dimension\", new String[]{\"width\", \"height\"});
        registerConstructor(\"java.awt.Rectangle\", new String[]{\"x\", \"y\", \"width\", \"height\"});

        registerConstructor(\"java.awt.Insets\", new String[]{\"top\", \"left\", \"bottom\", \"right\"});
        registerConstructor(\"java.awt.Color\", new String[]{\"red\", \"green\", \"blue\", \"alpha\"});
        registerConstructor(\"java.awt.Font\", new String[]{\"name\", \"style\", \"size\"});
        registerConstructor(\"java.awt.Cursor\", new String[]{\"type\"});
        registerConstructor(\"java.awt.GridBagConstraints\",
                            new String[]{\"gridx\", \"gridy\", \"gridwidth\", \"gridheight\",
                                         \"weightx\", \"weighty\",
                                         \"anchor\", \"fill\", \"insets\",
                                         \"ipadx\", \"ipady\"});                               
        registerConstructor(\"java.awt.ScrollPane\", new String[]{\"scrollbarDisplayPolicy\"});

  // swing

        registerConstructor(\"javax.swing.plaf.FontUIResource\", new String[]{\"name\", \"style\", \"size\"});
        registerConstructor(\"javax.swing.plaf.ColorUIResource\", new String[]{\"red\", \"green\", \"blue\"});

        registerConstructor(\"javax.swing.tree.DefaultTreeModel\", new String[]{\"root\"});
        registerConstructor(\"javax.swing.JTree\", new String[]{\"model\"});
        registerConstructor(\"javax.swing.tree.TreePath\", new String[]{\"path\"});

        registerConstructor(\"javax.swing.OverlayLayout\", new String[]{\"target\"});
        registerConstructor(\"javax.swing.BoxLayout\", new String[]{\"target\", \"axis\"});
        registerConstructor(\"javax.swing.Box$Filler\", new String[]{\"minimumSize\", \"preferredSize\",
								   \"maximumSize\"});
        registerConstructor(\"javax.swing.DefaultCellEditor\", new String[]{\"component\"});

        /*
        This is required because the JSplitPane reveals a private layout class
        called BasicSplitPaneUI$BasicVerticalLayoutManager which changes with
        the orientation. To avoid the necessity for instantiating it we cause
        the orientation attribute to get set before the layout manager - that
        way the layout manager will be changed as a side effect. Unfortunately,
        the layout property belongs to the superclass and therefore precedes
        the orientation property. PENDING - we need to allow this kind of
        modification. For now, put the property in the constructor.
        */
        registerConstructor(\"javax.swing.JSplitPane\", new String[]{\"orientation\"});
        // Try to synthesize the ImageIcon from its description.
        registerConstructor(\"javax.swing.ImageIcon\", new String[]{\"description\"});
        // JButton's \"label\" and \"actionCommand\" properties are related,
        // use the label as a constructor argument to ensure that it is set first.
        // This remove the benign, but unnecessary, manipulation of actionCommand
        // property in the common case.
        registerConstructor(\"javax.swing.JButton\", new String[]{\"label\"});

        // borders

        registerConstructor(\"javax.swing.border.BevelBorder\", new String[]{\"bevelType\", \"highlightOuter\", \"highlightInner\", \"shadowOuter\", \"shadowInner\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$BevelBorderUIResource\", new String[]{\"bevelType\", \"highlightOuter\", \"highlightInner\", \"shadowOuter\", \"shadowInner\"});
        registerConstructor(\"javax.swing.border.CompoundBorder\", new String[]{\"outsideBorder\", \"insideBorder\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$CompoundBorderUIResource\", new String[]{\"outsideBorder\", \"insideBorder\"});
        registerConstructor(\"javax.swing.border.EmptyBorder\", new String[]{\"top\", \"left\", \"bottom\", \"right\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$EmptyBorderUIResource\", new String[]{\"top\", \"left\", \"bottom\", \"right\"});
        registerConstructor(\"javax.swing.border.EtchedBorder\", new String[]{\"etchType\", \"highlight\", \"shadow\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$EtchedBorderUIResource\", new String[]{\"etchType\", \"highlight\", \"shadow\"});
        registerConstructor(\"javax.swing.border.LineBorder\", new String[]{\"lineColor\", \"thickness\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$LineBorderUIResource\", new String[]{\"lineColor\", \"thickness\"});
        // Note this should check to see which of \"color\" and \"tileIcon\" is non-null.
        registerConstructor(\"javax.swing.border.MatteBorder\", new String[]{\"top\", \"left\", \"bottom\", \"right\", \"tileIcon\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$MatteBorderUIResource\", new String[]{\"top\", \"left\", \"bottom\", \"right\", \"tileIcon\"});
        registerConstructor(\"javax.swing.border.SoftBevelBorder\", new String[]{\"bevelType\", \"highlightOuter\", \"highlightInner\", \"shadowOuter\", \"shadowInner\"});
        // registerConstructorWithBadEqual(\"javax.swing.plaf.BorderUIResource$SoftBevelBorderUIResource\", new String[]{\"bevelType\", \"highlightOuter\", \"highlightInner\", \"shadowOuter\", \"shadowInner\"});
        registerConstructor(\"javax.swing.border.TitledBorder\", new String[]{\"border\", \"title\", \"titleJustification\", \"titlePosition\", \"titleFont\", \"titleColor\"});
        registerConstructor(\"javax.swing.plaf.BorderUIResource$TitledBorderUIResource\", new String[]{\"border\", \"title\", \"titleJustification\", \"titlePosition\", \"titleFont\", \"titleColor\"});

// Transient properties

  // awt

    // Infinite graphs.
        removeProperty(\"java.awt.geom.RectangularShape\", \"frame\");
        // removeProperty(\"java.awt.Rectangle2D\", \"frame\");
        // removeProperty(\"java.awt.Rectangle\", \"frame\");

        removeProperty(\"java.awt.Rectangle\", \"bounds\");
        removeProperty(\"java.awt.Dimension\", \"size\");
        removeProperty(\"java.awt.Point\", \"location\");

        // The color and font properties in Component need special treatment, see above.
        removeProperty(\"java.awt.Component\", \"foreground\");
        removeProperty(\"java.awt.Component\", \"background\");
        removeProperty(\"java.awt.Component\", \"font\");

        // The visible property of Component needs special treatment because of Windows.
        removeProperty(\"java.awt.Component\", \"visible\");

        // This property throws an exception if accessed when there is no child. 
        removeProperty(\"java.awt.ScrollPane\", \"scrollPosition\"); 
        
	// 4917458 this should be removed for XAWT since it may throw
	// an unsupported exception if there isn't any input methods.
	// This shouldn't be a problem since these are added behind
	// the scenes automatically.
        removeProperty(\"java.awt.im.InputContext\", \"compositionEnabled\"); 

  // swing

        // The size properties in JComponent need special treatment, see above.
        removeProperty(\"javax.swing.JComponent\", \"minimumSize\");
        removeProperty(\"javax.swing.JComponent\", \"preferredSize\");
        removeProperty(\"javax.swing.JComponent\", \"maximumSize\");

        // These properties have platform specific implementations
        // and should not appear in archives.
        removeProperty(\"javax.swing.ImageIcon\", \"image\");
        removeProperty(\"javax.swing.ImageIcon\", \"imageObserver\");

        // This property throws an exception when set in JMenu.
        // PENDING: Note we must delete the property from
        // the superclass even though the superclass's
        // implementation does not throw an error.
        // This needs some more thought.
        removeProperty(\"javax.swing.JMenu\", \"accelerator\");
        removeProperty(\"javax.swing.JMenuItem\", \"accelerator\");
        // This property unconditionally throws a \"not implemented\" exception.
        removeProperty(\"javax.swing.JMenuBar\", \"helpMenu\");

        // The scrollBars in a JScrollPane are dynamic and should not
        // be archived. The row and columns headers are changed by
        // components like JTable on \"addNotify\".
        removeProperty(\"javax.swing.JScrollPane\", \"verticalScrollBar\");
        removeProperty(\"javax.swing.JScrollPane\", \"horizontalScrollBar\");
        removeProperty(\"javax.swing.JScrollPane\", \"rowHeader\");
        removeProperty(\"javax.swing.JScrollPane\", \"columnHeader\");
        
        removeProperty(\"javax.swing.JViewport\", \"extentSize\");

        // Renderers need special treatment, since their properties
        // change during rendering.
        removeProperty(\"javax.swing.table.JTableHeader\", \"defaultRenderer\");
        removeProperty(\"javax.swing.JList\", \"cellRenderer\");

        removeProperty(\"javax.swing.JList\", \"selectedIndices\");

        // The lead and anchor selection indexes are best ignored.
        // Selection is rarely something that should persist from
        // development to deployment.
        removeProperty(\"javax.swing.DefaultListSelectionModel\", \"leadSelectionIndex\");
        removeProperty(\"javax.swing.DefaultListSelectionModel\", \"anchorSelectionIndex\");

        // The selection must come after the text itself.
        removeProperty(\"javax.swing.JComboBox\", \"selectedIndex\");

        // All selection information should come after the JTabbedPane is built
        removeProperty(\"javax.swing.JTabbedPane\", \"selectedIndex\");
        removeProperty(\"javax.swing.JTabbedPane\", \"selectedComponent\");

        // PENDING: The \"disabledIcon\" property is often computed from the icon property.
        removeProperty(\"javax.swing.AbstractButton\", \"disabledIcon\");
	removeProperty(\"javax.swing.JLabel\", \"disabledIcon\");

        // The caret property throws errors when it it set beyond
        // the extent of the text. We could just set it after the
        // text, but this is probably not something we want to archive anyway.
        removeProperty(\"javax.swing.text.JTextComponent\", \"caret\");
        removeProperty(\"javax.swing.text.JTextComponent\", \"caretPosition\");
        // The selectionStart must come after the text itself.
        removeProperty(\"javax.swing.text.JTextComponent\", \"selectionStart\");
        removeProperty(\"javax.swing.text.JTextComponent\", \"selectionEnd\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 6778395 "equals"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "o1" explicit_type "Object"
	  param inout name "o2" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "pp"
      end

      operation 6778523 "setPersistenceDelegate"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 164635 // Class
	  param inout name "persistenceDelegate" type class_ref 891547 // PersistenceDelegate
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entry points for Encoder."
      end

      operation 6778651 "getPersistenceDelegate"
	class_operation public return_type class_ref 891547 // PersistenceDelegate
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6778779 "getBeanInfo"
	class_operation public return_type class_ref 890395 // BeanInfo
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wrapper for Introspector.getBeanInfo to handle exception handling.
 Note: this relys on new 1.4 Introspector semantics which cache the BeanInfos"
      end

      operation 6778907 "getPropertyDescriptor"
	class_operation private return_type class_ref 423579 // PropertyDescriptor
	nparams 2
	  param inout name "type" type class_ref 164635 // Class
	  param in name "propertyName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779035 "setPropertyAttribute"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "type" type class_ref 164635 // Class
	  param in name "property" explicit_type "String"
	  param in name "attribute" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779163 "setBeanAttribute"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "type" type class_ref 164635 // Class
	  param in name "attribute" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779291 "getBeanAttribute"
	class_operation private explicit_return_type "Object"
	nparams 2
	  param inout name "type" type class_ref 164635 // Class
	  param in name "attribute" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6779419 "registerConstructor"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "typeName" explicit_type "String"
	  param in name "constructor" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " MetaData registration"
      end

      operation 6779547 "removeProperty"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "typeName" explicit_type "String"
	  param in name "property" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 898203 "ParameterDescriptor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The ParameterDescriptor class allows bean implementors to provide
additional information on each of their parameters, beyond the
low level type information provided by the java.lang.reflect.Method
class.
<p>
Currently all our state comes from the FeatureDescriptor base class."
      classrelation 1744155 // <generalisation>
	relation 1744155 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1744155 // <generalisation>
	  b parent class_ref 890267 // FeatureDescriptor
      end

      operation 6781723 "ParameterDescriptor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Public default constructor."
      end

      operation 6781851 "ParameterDescriptor"
	package explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 898203 // ParameterDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private dup constructor.
This must isolate the new object from any changes to the old object."
      end
    end

    class 898331 "NameGenerator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A utility class which generates unique names for object instances.
The name will be a concatenation of the unqualified class name 
and an instance number.
<p>
For example, if the first object instance javax.swing.JButton 
is passed into <code>instanceName</code> then the returned
string identifier will be &quot;JButton0&quot;.

@version 1.10 03/31/08
@author Philip Milne"
      classrelation 1743899 // valueToName (<unidirectional association>)
	relation 1743899 --->
	  a role_name "valueToName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1743899 // valueToName (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1744027 // nameToCount (<unidirectional association>)
	relation 1744027 --->
	  a role_name "nameToCount" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744027 // nameToCount (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 6781083 "NameGenerator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6781211 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the name cache. Should be called to near the end of
the encoding cycle."
      end

      operation 6781339 "unqualifiedClassName"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the root name of the class."
      end

      operation 6781467 "capitalize"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String which capitalizes the first letter of the string."
      end

      operation 6781595 "instanceName"
	public explicit_return_type "String"
	nparams 1
	  param inout name "instance" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a unique string which identifies the object instance.
Invocations are cached so that if an object has been previously
passed into this method then the same identifier is returned.

@param instance object used to generate string
@return a unique string representing the object"
      end
    end

    class 898459 "PropertyChangeListenerProxy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class which extends the <code>EventListenerProxy</code> specifically 
for adding a named <code>PropertyChangeListener</code>. Instances of
this class can be added as <code>PropertyChangeListener</code> to
an object. 
<p>
If the object has a <code>getPropertyChangeListeners()</code>
method then the array returned could be a mixture of 
<code>PropertyChangeListener</code> and
<code>PropertyChangeListenerProxy</code> objects.

@see java.util.EventListenerProxy
@since 1.4"
      classrelation 1744283 // <generalisation>
	relation 1744283 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1744283 // <generalisation>
	  b parent class_ref 147227 // EventListenerProxy
      end

      classrelation 1744411 // <realization>
	relation 1744411 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1744411 // <realization>
	  b parent class_ref 367771 // PropertyChangeListener
      end

      attribute 2690203 "propertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6781979 "PropertyChangeListenerProxy"
	public explicit_return_type ""
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor which binds the PropertyChangeListener to a specific
property.

@param listener The listener object
@param propertyName The name of the property to listen on."
      end

      operation 6782107 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the property change event to the listener delegate.

@param evt the property change event"
      end

      operation 6782235 "getPropertyName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the named property associated with the
listener."
      end
    end

    class 898587 "PropertyEditorManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The PropertyEditorManager can be used to locate a property editor for
any given type name.  This property editor must support the
java.beans.PropertyEditor interface for editing a given object.
<P>
The PropertyEditorManager uses three techniques for locating an editor
for a given type.  First, it provides a registerEditor method to allow
an editor to be specifically registered for a given type.  Second it
tries to locate a suitable class by adding \"Editor\" to the full 
qualified classname of the given type (e.g. \"foo.bah.FozEditor\").
Finally it takes the simple classname (without the package name) adds
\"Editor\" to it and looks in a search-path of packages for a matching
class.
<P>
So for an input class foo.bah.Fred, the PropertyEditorManager would
first look in its tables to see if an editor had been registered for
foo.bah.Fred and if so use that.  Then it will look for a
foo.bah.FredEditor class.  Then it will look for (say) 
standardEditorsPackage.FredEditor class.
<p>
Default PropertyEditors will be provided for the Java primitive types
\"boolean\", \"byte\", \"short\", \"int\", \"long\", \"float\", and \"double\"; and
for the classes java.lang.String. java.awt.Color, and java.awt.Font."
      operation 6786075 "registerEditor"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "targetType" type class_ref 164635 // Class
	  param inout name "editorClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register an editor class to be used to edit values of
a given target class.

<p>First, if there is a security manager, its <code>checkPropertiesAccess</code> 
method is called. This could result in a SecurityException.

@param targetType the Class object of the type to be edited
@param editorClass the Class object of the editor class.  If
	   this is null, then any existing definition will be removed.
@exception  SecurityException  if a security manager exists and its  
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess"
      end

      operation 6786203 "findEditor"
	class_operation public return_type class_ref 892827 // PropertyEditor
	nparams 1
	  param inout name "targetType" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locate a value editor for a given target type.

@param targetType  The Class object for the type to be edited
@return An editor object for the given target class. 
The result is null if no suitable editor can be found."
      end

      operation 6786331 "getEditorSearchPath"
	class_operation public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package names that will be searched for property editors.

@return  The array of package names that will be searched in
		order to find property editors.
<p>     The default value for this array is implementation-dependent,
        e.g. Sun implementation initially sets to  {\"sun.beans.editors\"}."
      end

      operation 6786459 "setEditorSearchPath"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "path" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the list of package names that will be used for
		finding property editors.

<p>First, if there is a security manager, its <code>checkPropertiesAccess</code> 
method is called. This could result in a SecurityException.

@param path  Array of package names.
@exception  SecurityException  if a security manager exists and its  
            <code>checkPropertiesAccess</code> method doesn't allow setting
             of system properties.
@see SecurityManager#checkPropertiesAccess"
      end

      operation 6786587 "load"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "targetType" type class_ref 164635 // Class
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6786715 "initialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2690843 "searchPath"
	class_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  { \"sun.beans.editors\" }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1744795 // registry (<unidirectional association>)
	relation 1744795 --->
	  a role_name "registry" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1744795 // registry (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end
    end

    class 898715 "PropertyEditorSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is a support class to help build property editors.
<p>
It can be used either as a base class or as a delagatee."
      classrelation 1744923 // <realization>
	relation 1744923 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1744923 // <realization>
	  b parent class_ref 892827 // PropertyEditor
      end

      operation 6786843 "PropertyEditorSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyEditorSupport</code> object.

@since 1.5"
      end

      operation 6786971 "PropertyEditorSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PropertyEditorSupport</code> object.

@param source the source used for event firing
@since 1.5"
      end

      operation 6787099 "getSource"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bean that is used as the
source of events. If the source has not
been explicitly set then this instance of
<code>PropertyEditorSupport</code> is returned.

@return the source object or this instance
@since 1.5"
      end

      operation 6787227 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source bean.
<p>
The source bean is used as the source of events
for the property changes. This source should be used for information
purposes only and should not be modified by the PropertyEditor.

@param source source object to be used for events
@since 1.5"
      end

      operation 6787355 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set (or change) the object that is to be edited.

@param value The new target object to be edited.  Note that this
    object should not be modified by the PropertyEditor, rather 
    the PropertyEditor should create a new object to hold any
    modified value."
      end

      operation 6787483 "getValue"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the property.

@return The value of the property."
      end

      operation 6787611 "isPaintable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Determines whether the class will honor the painValue method.

@return  True if the class will honor the paintValue method."
      end

      operation 6787739 "paintValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "gfx" type class_ref 360475 // Graphics
	  param inout name "box" type class_ref 342299 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paint a representation of the value into a given area of screen
real estate.  Note that the propertyEditor is responsible for doing
its own clipping so that it fits into the given rectangle.
<p>
If the PropertyEditor doesn't honor paint requests (see isPaintable)
this method should be a silent noop.

@param gfx  Graphics object to paint into.
@param box  Rectangle within graphics object into which we should paint."
      end

      operation 6787867 "getJavaInitializationString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

This method is intended for use when generating Java code to set
the value of the property.  It should return a fragment of Java code
that can be used to initialize a variable with the current property
value.
<p>
Example results are \"2\", \"new Color(127,127,34)\", \"Color.orange\", etc.

@return A fragment of Java code representing an initializer for the
  	current value."
      end

      operation 6787995 "getAsText"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Gets the property value as a string suitable for presentation
to a human to edit.

@return The property value as a string suitable for presentation
      to a human to edit.
<p>   Returns \"null\" is the value can't be expressed as a string.
<p>   If a non-null value is returned, then the PropertyEditor should
	     be prepared to parse that string back in setAsText()."
      end

      operation 6788123 "setAsText"
	public explicit_return_type "void"
	nparams 1
	  param in name "text" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the property value by parsing a given String.  May raise
java.lang.IllegalArgumentException if either the String is
badly formatted or if this kind of property can't be expressed
as text.

@param text  The string to be parsed."
      end

      operation 6788251 "getTags"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

If the property value must be one of a set of known tagged values, 
then this method should return an array of the tag values.  This can
be used to represent (for example) enum values.  If a PropertyEditor
supports tags, then it should support the use of setAsText with
a tag value as a way of setting the value.

@return The tag values for this property.  May be null if this 
  property cannot be represented as a tagged value.
	"
      end

      operation 6788379 "getCustomEditor"
	public return_type class_ref 361371 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

A PropertyEditor may chose to make available a full custom Component
that edits its property value.  It is the responsibility of the
PropertyEditor to hook itself up to its editor Component itself and
to report property value changes by firing a PropertyChange event.
<P>
The higher-level code that calls getCustomEditor may either embed
the Component in some larger property sheet, or it may put it in
its own individual dialog, or ...

@return A java.awt.Component that will allow a human to directly
     edit the current property value.  May be null if this is
	    not supported."
      end

      operation 6788507 "supportsCustomEditor"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the propertyEditor can provide a custom editor.

@return  True if the propertyEditor can provide a custom editor."
      end

      operation 6788635 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------------------------------------------------------------

Register a listener for the PropertyChange event.  The class will
fire a PropertyChange value whenever the value is updated.

@param listener  An object to be invoked when a PropertyChange
		event is fired."
      end

      operation 6788763 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener for the PropertyChange event.

@param listener  The PropertyChange listener to be removed."
      end

      operation 6788891 "firePropertyChange"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that we have been modified to any interested listeners."
      end

      attribute 2690971 "value"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "----------------------------------------------------------------------"
      end

      attribute 2691099 "source"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1745051 // listeners (<unidirectional association>)
	relation 1745051 --->
	  a role_name "listeners" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1745051 // listeners (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end
    end

    class 898843 "ReflectionUtils"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A utility class for reflectively finding methods, constuctors and fields
using reflection."
      classrelation 1745435 // methodCacheRef (<unidirectional association>)
	relation 1745435 --->
	  a role_name "methodCacheRef" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1745435 // methodCacheRef (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      operation 6789275 "typeToClass"
	class_operation public return_type class_ref 164635 // Class
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6789403 "isPrimitive"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6789531 "primitiveTypeFor"
	class_operation public return_type class_ref 164635 // Class
	nparams 1
	  param inout name "wrapper" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6789659 "matchArguments"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "argClasses" type class_ref 164635 // Class
	  param inout name "argTypes" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests each element on the class arrays for assignability.

@param argClasses arguments to be tested
@param argTypes arguments from Method
@return true if each class in argTypes is assignable from the 
        corresponding class in argClasses."
      end

      operation 6789787 "matchExplicitArguments"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "argClasses" type class_ref 164635 // Class
	  param inout name "argTypes" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests each element on the class arrays for equality.

@param argClasses arguments to be tested
@param argTypes arguments from Method
@return true if each class in argTypes is equal to the 
        corresponding class in argClasses."
      end

      operation 6789915 "matchArguments"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "argClasses" type class_ref 164635 // Class
	  param inout name "argTypes" type class_ref 164635 // Class
	  param inout name "explicit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6790043 "getPublicMethod"
	class_operation package return_type class_ref 170651 // Method
	nparams 3
	  param inout name "declaringClass" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param inout name "argClasses" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 791451 // NoSuchMethodException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the method which best matches the signature or throw an exception
        if it can't be found or the method is ambiguous."
      end

      operation 6790171 "findPublicMethod"
	class_operation public return_type class_ref 170651 // Method
	nparams 3
	  param inout name "declaringClass" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param inout name "argClasses" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the method which best matches the signature or null if it cant be found or 
        the method is ambiguous."
      end

      operation 6790299 "getMostSpecificMethod"
	class_operation private return_type class_ref 170651 // Method
	nparams 2
	  param inout name "methods" type class_ref 135579 // List
	  param inout name "args" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most specific method from the list of methods which 
matches the args. The most specific method will have the most
number of equal parameters or will be closest in the inheritance
heirarchy to the runtime execution arguments.
<p>
See the JLS section 15.12
http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#20448

@param methods List of methods which already have the same param length
               and arg types are assignable to param types
@param args an array of param types to match
@return method or null if a specific method cannot be determined"
      end

      operation 6790427 "findMethod"
	class_operation public return_type class_ref 170651 // Method
	nparams 3
	  param inout name "targetClass" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param inout name "argClasses" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the method or null if it can't be found or is ambiguous."
      end

      class 898971 "Signature"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1745563 // targetClass (<unidirectional association>)
	  relation 1745563 --->
	    a role_name "targetClass" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1745563 // targetClass (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	attribute 2691227 "methodName"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1745691 // argClasses (<unidirectional association>)
	  relation 1745691 --->
	    a role_name "argClasses" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1745691 // argClasses (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	attribute 2691355 "hashCode"
	  volatile private explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6790555 "Signature"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "targetClass" type class_ref 164635 // Class
	    param in name "methodName" explicit_type "String"
	    param inout name "argClasses" type class_ref 164635 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6790683 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o2" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6790811 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Hash code computed using algorithm suggested in 
Effective Java, Item 8."
	end
      end

      operation 6790939 "getMethod"
	class_operation public return_type class_ref 170651 // Method
	nparams 3
	  param inout name "targetClass" type class_ref 164635 // Class
	  param in name "methodName" explicit_type "String"
	  param inout name "argClasses" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A wrapper to findMethod(), which will search or populate the method
in a cache.
@throws exception if the method is ambiguios."
      end

      operation 6791067 "getConstructor"
	class_operation public return_type class_ref 218395 // Constructor
	nparams 2
	  param inout name "cls" type class_ref 164635 // Class
	  param inout name "args" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a constructor on the class with the arguments.

@throws exception if the method is ambiguios."
      end

      operation 6791195 "getPrivateField"
	class_operation public explicit_return_type "Object"
	nparams 3
	  param inout name "instance" explicit_type "Object"
	  param inout name "cls" type class_ref 164635 // Class
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6791323 "getPrivateField"
	class_operation public explicit_return_type "Object"
	nparams 4
	  param inout name "instance" explicit_type "Object"
	  param inout name "cls" type class_ref 164635 // Class
	  param in name "name" explicit_type "String"
	  param inout name "el" type class_ref 892059 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a private field. 

@param instance object instance 
@param cls class 
@param name name of the field
@param el an exception listener to handle exceptions; or null
@return value of the field; null if not found or an error is encountered"
      end
    end

    class 899099 "VetoableChangeListenerProxy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class which extends the <code>EventListenerProxy</code> specifically 
for associating a <code>VetoableChangeListener</code> with a \"constrained\"
property. Instances of this class can be added as a 
<code>VetoableChangeListener</code> to a bean which supports firing
VetoableChange events.
<p>
If the object has a <code>getVetoableChangeListeners()</code>
method then the array returned could be a mixture of 
<code>VetoableChangeListener</code> and
<code>VetoableChangeListenerProxy</code> objects.
<p>
@see java.util.EventListenerProxy
@see VetoableChangeListener
@see VetoableChangeSupport#getVetoableChangeListeners
@since 1.4"
      classrelation 1745947 // <generalisation>
	relation 1745947 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1745947 // <generalisation>
	  b parent class_ref 147227 // EventListenerProxy
      end

      classrelation 1746075 // <realization>
	relation 1746075 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1746075 // <realization>
	  b parent class_ref 855067 // VetoableChangeListener
      end

      attribute 2691483 "propertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6791579 "VetoableChangeListenerProxy"
	public explicit_return_type ""
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param propertyName The name of the property to listen on.
@param listener The listener object"
      end

      operation 6791707 "vetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 386075 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the property change event to the listener delegate.

@param evt the property change event

@exception PropertyVetoException if the recipient wishes the property
             change to be rolled back."
      end

      operation 6791835 "getPropertyName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the named property associated with the
listener."
      end
    end

    class 899227 "Visibility"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Under some circumstances a bean may be run on servers where a GUI
is not available.  This interface can be used to query a bean to
determine whether it absolutely needs a gui, and to advise the
bean whether a GUI is available.
<p>
This interface is for expert developers, and is not needed
for normal simple beans.  To avoid confusing end-users we
avoid using getXXX setXXX design patterns for these methods."
      operation 6793755 "needsGui"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this bean needs a GUI.

@return True if the bean absolutely needs a GUI available in
		order to get its work done."
      end

      operation 6793883 "dontUseGui"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method instructs the bean that it should not use the Gui."
      end

      operation 6794011 "okToUseGui"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method instructs the bean that it is OK to use the Gui."
      end

      operation 6794139 "avoidingGui"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this bean is avoiding using a GUI.

@return true if the bean is currently avoiding use of the Gui.
  e.g. due to a call on dontUseGui()."
      end
    end

    class 899355 "XMLDecoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>XMLDecoder</code> class is used to read XML documents 
created using the <code>XMLEncoder</code> and is used just like 
the <code>ObjectInputStream</code>. For example, one can use 
the following fragment to read the first object defined 
in an XML document written by the <code>XMLEncoder</code> 
class: 
<pre>
      XMLDecoder d = new XMLDecoder(
                         new BufferedInputStream(
                             new FileInputStream(\"Test.xml\")));
      Object result = d.readObject();
      d.close();
</pre>

<p>
For more information you might also want to check out
<a
href=\"http://java.sun.com/products/jfc/tsc/articles/persistence3\">Long Term Persistence of JavaBeans Components: XML Schema</a>,
an article in <em>The Swing Connection.</em>
@see XMLEncoder
@see java.io.ObjectInputStream

@since 1.4

@version 1.30 06/01/04
@author Philip Milne"
      classrelation 1746587 // in (<unidirectional association>)
	relation 1746587 --->
	  a role_name "in" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1746587 // in (<unidirectional association>)
	  b parent class_ref 179099 // InputStream
      end

      attribute 2691995 "owner"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1746715 // exceptionListener (<unidirectional association>)
	relation 1746715 --->
	  a role_name "exceptionListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1746715 // exceptionListener (<unidirectional association>)
	  b parent class_ref 892059 // ExceptionListener
      end

      attribute 2692123 "handler"
	private explicit_type "ObjectHandler"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1746843 // clref (<unidirectional association>)
	relation 1746843 --->
	  a role_name "clref" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1746843 // clref (<unidirectional association>)
	  b parent class_ref 392475 // Reference
      end

      operation 6794267 "XMLDecoder"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives  
created by the <code>XMLEncoder</code> class. 

@param in The underlying stream. 

@see XMLEncoder#XMLEncoder(OutputStream)"
      end

      operation 6794395 "XMLDecoder"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "owner" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives  
created by the <code>XMLEncoder</code> class. 

@param in The underlying stream. 
@param owner The owner of this stream. 
"
      end

      operation 6794523 "XMLDecoder"
	public explicit_return_type ""
	nparams 3
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "owner" explicit_type "Object"
	  param inout name "exceptionListener" type class_ref 892059 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives  
created by the <code>XMLEncoder</code> class. 

@param in the underlying stream. 
@param owner the owner of this stream. 
@param exceptionListener the exception handler for the stream;
       if <code>null</code> the default exception listener will be used."
      end

      operation 6794651 "XMLDecoder"
	public explicit_return_type ""
	nparams 4
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "owner" explicit_type "Object"
	  param inout name "exceptionListener" type class_ref 892059 // ExceptionListener
	  param inout name "cl" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new input stream for reading archives  
created by the <code>XMLEncoder</code> class. 

@param in the underlying stream.  <code>null</code> may be passed without
       error, though the resulting XMLDecoder will be useless
@param owner the owner of this stream.  <code>null</code> is a legal
       value
@param exceptionListener the exception handler for the stream, or
       <code>null</code> to use the default
@param cl the class loader used for instantiating objects.  
       <code>null</code> indicates that the default class loader should
       be used
@since 1.5"
      end

      operation 6794779 "setClassLoader"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the class loader used to instantiate objects for this stream. 

@param cl a classloader to use; if null then the default class loader
          will be used"
      end

      operation 6794907 "getClassLoader"
	private return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class loader used to instantiate objects. If the class loader 
has not been explicitly set then null is returned.

@return the class loader used to instantiate objects "
      end

      operation 6795035 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method closes the input stream associated 
with this stream. "
      end

      operation 6795163 "setExceptionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exceptionListener" type class_ref 892059 // ExceptionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the exception handler for this stream to <code>exceptionListener</code>. 
The exception handler is notified when this stream catches recoverable 
exceptions.

@param exceptionListener The exception handler for this stream;
if <code>null</code> the default exception listener will be used. 

@see #getExceptionListener"
      end

      operation 6795291 "getExceptionListener"
	public return_type class_ref 892059 // ExceptionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exception handler for this stream. 

@return The exception handler for this stream. 
    Will return the default exception listener if this has not explicitly been set.

@see #setExceptionListener"
      end

      operation 6795419 "readObject"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the next object from the underlying input stream. 

@return the next object read

@throws ArrayIndexOutOfBoundsException if the stream contains no objects 
        (or no more objects)

@see XMLEncoder#writeObject"
      end

      operation 6795547 "setOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the owner of this decoder to <code>owner</code>. 

@param owner The owner of this decoder. 

@see #getOwner"
      end

      operation 6795675 "getOwner"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the owner of this decoder. 

@return The owner of this decoder. 

@see #setOwner"
      end
    end

    class 899483 "XMLEncoder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>XMLEncoder</code> class is a complementary alternative to
the <code>ObjectOutputStream</code> and can used to generate
a textual representation of a <em>JavaBean</em> in the same
way that the <code>ObjectOutputStream</code> can
be used to create binary representation of <code>Serializable</code>
objects. For example, the following fragment can be used to create
a textual representation the supplied <em>JavaBean</em>
and all its properties:
<pre>
      XMLEncoder e = new XMLEncoder(
                         new BufferedOutputStream(
                             new FileOutputStream(\"Test.xml\")));
      e.writeObject(new JButton(\"Hello, world\"));
      e.close();
</pre>
Despite the similarity of their APIs, the <code>XMLEncoder</code>
class is exclusively designed for the purpose of archiving graphs
of <em>JavaBean</em>s as textual representations of their public
properties. Like Java source files, documents written this way
have a natural immunity to changes in the implementations of the classes
involved. The <code>ObjectOutputStream</code> continues to be recommended
for interprocess communication and general purpose serialization.
<p>
The <code>XMLEncoder</code> class provides a default denotation for
<em>JavaBean</em>s in which they are represented as XML documents
complying with version 1.0 of the XML specification and the
UTF-8 character encoding of the Unicode/ISO 10646 character set.
The XML documents produced by the <code>XMLEncoder</code> class are:
<ul>
<li>
<em>Portable and version resilient</em>: they have no dependencies
on the private implementation of any class and so, like Java source
files, they may be exchanged between environments which may have
different versions of some of the classes and between VMs from
different vendors.
<li>
<em>Structurally compact</em>: The <code>XMLEncoder</code> class
uses a <em>redundancy elimination</em> algorithm internally so that the
default values of a Bean's properties are not written to the stream.
<li>
<em>Fault tolerant</em>: Non-structural errors in the file,
caused either by damage to the file or by API changes
made to classes in an archive remain localized
so that a reader can report the error and continue to load the parts
of the document which were not affected by the error.
</ul>
<p>
Below is an example of an XML archive containing
some user interface components from the <em>swing</em> toolkit:
<pre>
&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;
&lt;java version=\"1.0\" class=\"java.beans.XMLDecoder\"&gt;
&lt;object class=\"javax.swing.JFrame\"&gt;
  &lt;void property=\"name\"&gt;
    &lt;string&gt;frame1&lt;/string&gt;
  &lt;/void&gt;
  &lt;void property=\"bounds\"&gt;
    &lt;object class=\"java.awt.Rectangle\"&gt;
      &lt;int&gt;0&lt;/int&gt;
      &lt;int&gt;0&lt;/int&gt;
      &lt;int&gt;200&lt;/int&gt;
      &lt;int&gt;200&lt;/int&gt;
    &lt;/object&gt;
  &lt;/void&gt;
  &lt;void property=\"contentPane\"&gt;
    &lt;void method=\"add\"&gt;
      &lt;object class=\"javax.swing.JButton\"&gt;
        &lt;void property=\"label\"&gt;
          &lt;string&gt;Hello&lt;/string&gt;
        &lt;/void&gt;
      &lt;/object&gt;
    &lt;/void&gt;
  &lt;/void&gt;
  &lt;void property=\"visible\"&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/void&gt;
&lt;/object&gt;
&lt;/java&gt;
</pre>
The XML syntax uses the following conventions:
<ul>
<li>
Each element represents a method call.
<li>
The \"object\" tag denotes an <em>expression</em> whose value is
to be used as the argument to the enclosing element.
<li>
The \"void\" tag denotes a <em>statement</em> which will
be executed, but whose result will not be used as an
argument to the enclosing method.
<li>
Elements which contain elements use those elements as arguments,
unless they have the tag: \"void\".
<li>
The name of the method is denoted by the \"method\" attribute.
<li>
XML's standard \"id\" and \"idref\" attributes are used to make
references to previous expressions - so as to deal with
circularities in the object graph.
<li>
The \"class\" attribute is used to specify the target of a static
method or constructor explicitly; its value being the fully
qualified name of the class.
<li>
Elements with the \"void\" tag are executed using
the outer context as the target if no target is defined
by a \"class\" attribute.
<li>
Java's String class is treated specially and is
written &lt;string&gt;Hello, world&lt;/string&gt; where
the characters of the string are converted to bytes
using the UTF-8 character encoding.
</ul>
<p>
Although all object graphs may be written using just these three
tags, the following definitions are included so that common
data structures can be expressed more concisely:
<p>
<ul>
<li>
The default method name is \"new\".
<li>
A reference to a java class is written in the form
 &lt;class&gt;javax.swing.JButton&lt;/class&gt;.
<li>
Instances of the wrapper classes for Java's primitive types are written
using the name of the primitive type as the tag. For example, an
instance of the <code>Integer</code> class could be written:
&lt;int&gt;123&lt;/int&gt;. Note that the <code>XMLEncoder</code> class
uses Java's reflection package in which the conversion between
Java's primitive types and their associated \"wrapper classes\"
is handled internally. The API for the <code>XMLEncoder</code> class
itself deals only with <code>Object</code>s.
<li>
In an element representing a nullary method whose name
starts with \"get\", the \"method\" attribute is replaced
with a \"property\" attribute whose value is given by removing
the \"get\" prefix and decapitalizing the result.
<li>
In an element representing a monadic method whose name
starts with \"set\", the \"method\" attribute is replaced
with a \"property\" attribute whose value is given by removing
the \"set\" prefix and decapitalizing the result.
<li>
In an element representing a method named \"get\" taking one
integer argument, the \"method\" attribute is replaced
with an \"index\" attribute whose value the value of the
first argument.
<li>
In an element representing a method named \"set\" taking two arguments,
the first of which is an integer, the \"method\" attribute is replaced
with an \"index\" attribute whose value the value of the
first argument.
<li>
A reference to an array is written using the \"array\"
tag. The \"class\" and \"length\" attributes specify the
sub-type of the array and its length respectively.
</ul>

<p>
For more information you might also want to check out 
<a
href=\"http://java.sun.com/products/jfc/tsc/articles/persistence4\">Using XMLEncoder</a>,
an article in <em>The Swing Connection.</em>
@see XMLDecoder
@see java.io.ObjectOutputStream

@since 1.4

@version 1.33 12/19/03
@author Philip Milne"
      classrelation 1746971 // <generalisation>
	relation 1746971 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1746971 // <generalisation>
	  b parent class_ref 891675 // Encoder
      end

      attribute 2692251 "encoding"
	class_attribute private explicit_type "String"
	init_value "=  \"UTF-8\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1747099 // out (<unidirectional association>)
	relation 1747099 --->
	  a role_name "out" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1747099 // out (<unidirectional association>)
	  b parent class_ref 183835 // OutputStream
      end

      attribute 2692379 "owner"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2692507 "indentation"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2692635 "internal"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1747227 // valueToExpression (<unidirectional association>)
	relation 1747227 --->
	  a role_name "valueToExpression" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1747227 // valueToExpression (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1747355 // targetToStatementList (<unidirectional association>)
	relation 1747355 --->
	  a role_name "targetToStatementList" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1747355 // targetToStatementList (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      attribute 2692763 "preambleWritten"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1747483 // nameGenerator (<unidirectional association>)
	relation 1747483 --->
	  a role_name "nameGenerator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1747483 // nameGenerator (<unidirectional association>)
	  b parent class_ref 898331 // NameGenerator
      end

      class 899611 "ValueData"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2692891 "refs"
	  public explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2693019 "marked"
	  public explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Marked -> refs > 0 unless ref was a target."
	end

	attribute 2693147 "name"
	  public explicit_type "String"
	  init_value "=  null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1747611 // exp (<unidirectional association>)
	  relation 1747611 --->
	    a role_name "exp" init_value "=  null" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1747611 // exp (<unidirectional association>)
	    b parent class_ref 891803 // Expression
	end
      end

      operation 6795803 "XMLEncoder"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 183835 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new output stream for sending <em>JavaBeans</em>
to the stream <code>out</code> using an XML encoding.

@param out The stream to which the XML representation of
the objects will be sent.

@see XMLDecoder#XMLDecoder(InputStream)"
      end

      operation 6795931 "setOwner"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the owner of this encoder to <code>owner</code>.

@param owner The owner of this encoder.

@see #getOwner"
      end

      operation 6796059 "getOwner"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the owner of this encoder.

@return The owner of this encoder.

@see #setOwner"
      end

      operation 6796187 "writeObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an XML representation of the specified object to the output.

@param o The object to be written to the stream.

@see XMLDecoder#readObject"
      end

      operation 6796315 "statementList"
	private return_type class_ref 153883 // Vector
	nparams 1
	  param inout name "target" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796443 "mark"
	private explicit_return_type "void"
	nparams 2
	  param inout name "o" explicit_type "Object"
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796571 "mark"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stm" type class_ref 892187 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6796699 "writeStatement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldStm" type class_ref 892187 // Statement
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the Statement so that the Encoder will
produce the actual output when the stream is flushed.
<P>
This method should only be invoked within the context
of initializing a persistence delegate.

@param oldStm The statement that will be written
              to the stream.
@see java.beans.PersistenceDelegate#initialize"
      end

      operation 6796827 "writeExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oldExp" type class_ref 891803 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the Expression so that the Encoder will
produce the actual output when the stream is flushed.
<P>
This method should only be invoked within the context of
initializing a persistence delegate or setting up an encoder to
read from a resource bundle.
<P>
For more information about using resource bundles with the
XMLEncoder, see 
http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n

@param oldExp The expression that will be written
              to the stream.
@see java.beans.PersistenceDelegate#initialize"
      end

      operation 6796955 "flush"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method writes out the preamble associated with the
XML encoding if it has not been written already and
then writes out all of the values that been
written to the stream since the last time <code>flush</code>
was called. After flushing, all internal references to the
values that were written to this stream are cleared."
      end

      operation 6797083 "clear"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797211 "close"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>flush</code>, writes the closing
postamble and then closes the output stream associated
with this stream."
      end

      operation 6797339 "quote"
	private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797467 "getValueData"
	private return_type class_ref 899611 // ValueData
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797595 "quoteCharacters"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797723 "writeln"
	private explicit_return_type "void"
	nparams 1
	  param in name "exp" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797851 "outputValue"
	private explicit_return_type "void"
	nparams 3
	  param inout name "value" explicit_type "Object"
	  param inout name "outer" explicit_type "Object"
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6797979 "outputStatement"
	private explicit_return_type "void"
	nparams 3
	  param inout name "exp" type class_ref 892187 // Statement
	  param inout name "outer" explicit_type "Object"
	  param inout name "isArgument" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 145179 "beans"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 289307 "PropertyChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 367771 // PropertyChangeListener
      end
      comment "@(#)PropertyChangeListener.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663067 "AppletInitializer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.applet.Applet;
import java.beans.beancontext.BeanContext;
${definition}"
      associated_classes
	class_ref 889883 // AppletInitializer
      end
      comment "@(#)AppletInitializer.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663195 "FeatureDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import java.lang.ref.SoftReference;
${definition}"
      associated_classes
	class_ref 890267 // FeatureDescriptor
      end
      comment "@(#)FeatureDescriptor.java	1.33 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663323 "BeanDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
${definition}"
      associated_classes
	class_ref 890139 // BeanDescriptor
      end
      comment "@(#)BeanDescriptor.java	1.23 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663451 "BeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 890395 // BeanInfo
      end
      comment "@(#)BeanInfo.java	1.28 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663579 "Beans"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.applet.*;
import java.awt.*;
import java.beans.AppletInitializer;
import java.beans.beancontext.BeanContext;
import java.io.*;
import java.lang.reflect.Constructor;
import java.net.URL;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 890779 // Beans
	class_ref 890907 // ObjectInputStreamWithLoader
	class_ref 891035 // BeansAppletContext
	class_ref 891163 // BeansAppletStub
      end
      comment "@(#)Beans.java	1.63 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663707 "Customizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 891291 // Customizer
      end
      comment "@(#)Customizer.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663835 "PersistenceDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 891547 // PersistenceDelegate
      end
      comment "@(#)PersistenceDelegate.java	1.11 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 663963 "DefaultPersistenceDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.lang.reflect.*;
import java.beans.*;
import java.io.*;
import sun.reflect.misc.*;
${definition}"
      associated_classes
	class_ref 891419 // DefaultPersistenceDelegate
      end
      comment "@(#)DefaultPersistenceDelegate.java	1.18 05/08/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664091 "DesignMode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 891931 // DesignMode
      end
      comment "@(#)DesignMode.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664219 "Encoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
${definition}"
      associated_classes
	class_ref 891675 // Encoder
      end
      comment "@(#)Encoder.java	1.20 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664347 "EventHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Proxy;
import java.lang.reflect.Method;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.EventObject;
import sun.reflect.misc.MethodUtil;
${definition}"
      associated_classes
	class_ref 892315 // EventHandler
      end
      comment "@(#)EventHandler.java	1.16 05/08/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664475 "EventSetDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 890523 // EventSetDescriptor
      end
      comment "@(#)EventSetDescriptor.java	1.65 05/10/14

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664603 "ExceptionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 892059 // ExceptionListener
      end
      comment "@(#)ExceptionListener.java	1.6 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664731 "Statement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.AccessibleObject;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import com.sun.beans.ObjectHandler;
import sun.reflect.misc.MethodUtil;
${definition}"
      associated_classes
	class_ref 892187 // Statement
      end
      comment "@(#)Statement.java	1.32 05/05/29

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664859 "Expression"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 891803 // Expression
      end
      comment "@(#)Expression.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 664987 "PropertyChangeEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 386075 // PropertyChangeEvent
      end
      comment "@(#)PropertyChangeEvent.java	1.33 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665115 "IndexedPropertyChangeEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 892571 // IndexedPropertyChangeEvent
      end
      comment "@(#)IndexedPropertyChangeEvent.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665243 "PropertyDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
import java.lang.reflect.Constructor;
${definition}"
      associated_classes
	class_ref 423579 // PropertyDescriptor
      end
      comment "@(#)PropertyDescriptor.java	1.72 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665371 "IndexedPropertyDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 892699 // IndexedPropertyDescriptor
      end
      comment "@(#)IndexedPropertyDescriptor.java	1.49 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665499 "IntrospectionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 892443 // IntrospectionException
      end
      comment "@(#)IntrospectionException.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665627 "Introspector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.SoftReference;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Collections;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.EventListener;
import java.util.List;
import java.util.WeakHashMap;
import java.util.TreeMap;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_classes
	class_ref 892955 // Introspector
	class_ref 893083 // GenericBeanInfo
      end
      comment "@(#)Introspector.java	1.143 05/08/09

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665755 "SimpleBeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 893211 // SimpleBeanInfo
      end
      comment "@(#)SimpleBeanInfo.java	1.27 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 665883 "NullPersistenceDelegate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.Vector;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 893339 // NullPersistenceDelegate
	class_ref 893467 // PrimitivePersistenceDelegate
	class_ref 893595 // ArrayPersistenceDelegate
	class_ref 893723 // ProxyPersistenceDelegate
	class_ref 893851 // java_lang_String_PersistenceDelegate
	class_ref 893979 // java_lang_Class_PersistenceDelegate
	class_ref 894107 // java_lang_reflect_Field_PersistenceDelegate
	class_ref 894235 // java_lang_reflect_Method_PersistenceDelegate
	class_ref 894363 // java_util_Collection_PersistenceDelegate
	class_ref 894491 // java_util_List_PersistenceDelegate
	class_ref 894619 // java_util_Map_PersistenceDelegate
	class_ref 894747 // java_util_AbstractCollection_PersistenceDelegate
	class_ref 894875 // java_util_AbstractList_PersistenceDelegate
	class_ref 895003 // java_util_AbstractMap_PersistenceDelegate
	class_ref 895131 // java_util_Hashtable_PersistenceDelegate
	class_ref 895259 // java_beans_beancontext_BeanContextSupport_PersistenceDelegate
	class_ref 895387 // StaticFieldsPersistenceDelegate
	class_ref 895515 // java_awt_SystemColor_PersistenceDelegate
	class_ref 895643 // java_awt_font_TextAttribute_PersistenceDelegate
	class_ref 895771 // java_awt_MenuShortcut_PersistenceDelegate
	class_ref 895899 // java_awt_Component_PersistenceDelegate
	class_ref 896027 // java_awt_Container_PersistenceDelegate
	class_ref 896155 // java_awt_Choice_PersistenceDelegate
	class_ref 896283 // java_awt_Menu_PersistenceDelegate
	class_ref 896411 // java_awt_MenuBar_PersistenceDelegate
	class_ref 896539 // java_awt_List_PersistenceDelegate
	class_ref 896667 // java_awt_BorderLayout_PersistenceDelegate
	class_ref 896795 // java_awt_CardLayout_PersistenceDelegate
	class_ref 896923 // java_awt_GridBagLayout_PersistenceDelegate
	class_ref 897051 // javax_swing_JFrame_PersistenceDelegate
	class_ref 897179 // javax_swing_DefaultListModel_PersistenceDelegate
	class_ref 897307 // javax_swing_DefaultComboBoxModel_PersistenceDelegate
	class_ref 897435 // javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate
	class_ref 897563 // javax_swing_ToolTipManager_PersistenceDelegate
	class_ref 897691 // javax_swing_JTabbedPane_PersistenceDelegate
	class_ref 897819 // javax_swing_Box_PersistenceDelegate
	class_ref 897947 // javax_swing_JMenu_PersistenceDelegate
	class_ref 898075 // MetaData
      end
      comment "@(#)MetaData.java	1.39 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666011 "MethodDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import java.lang.reflect.Method;
import java.util.List;
import java.util.ArrayList;
import com.sun.beans.ObjectHandler;
${definition}"
      associated_classes
	class_ref 890651 // MethodDescriptor
      end
      comment "@(#)MethodDescriptor.java	1.31 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666139 "NameGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.Map;
import static java.util.Locale.ENGLISH;
${definition}"
      associated_classes
	class_ref 898331 // NameGenerator
      end
      comment "@(#)NameGenerator.java	1.10 08/03/31

Copyright 2008 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666267 "ParameterDescriptor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 898203 // ParameterDescriptor
      end
      comment "@(#)ParameterDescriptor.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666395 "PropertyChangeListenerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 898459 // PropertyChangeListenerProxy
      end
      comment "@(#)PropertyChangeListenerProxy.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666523 "PropertyChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import sun.awt.EventListenerAggregate;
${definition}"
      associated_classes
	class_ref 372379 // PropertyChangeSupport
      end
      comment "@(#)PropertyChangeSupport.java	1.49 04/05/11

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666651 "PropertyEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 892827 // PropertyEditor
      end
      comment "@(#)PropertyEditor.java	1.37 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666779 "PropertyEditorManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 898587 // PropertyEditorManager
      end
      comment "@(#)PropertyEditorManager.java	1.45 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 666907 "PropertyEditorSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.*;
${definition}"
      associated_classes
	class_ref 898715 // PropertyEditorSupport
      end
      comment "@(#)PropertyEditorSupport.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667035 "PropertyVetoException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 855195 // PropertyVetoException
      end
      comment "@(#)PropertyVetoException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667163 "ReflectionUtils"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.ref.Reference;
import java.lang.ref.SoftReference;
import java.util.*;
import com.sun.beans.ObjectHandler;
import sun.reflect.misc.MethodUtil;
import sun.reflect.misc.ConstructorUtil;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_classes
	class_ref 898843 // ReflectionUtils
      end
      comment "@(#)ReflectionUtils.java	1.10 05/08/26

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667291 "VetoableChangeListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 855067 // VetoableChangeListener
      end
      comment "@(#)VetoableChangeListener.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667419 "VetoableChangeListenerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListenerProxy;
${definition}"
      associated_classes
	class_ref 899099 // VetoableChangeListenerProxy
      end
      comment "@(#)VetoableChangeListenerProxy.java	1.6 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667547 "VetoableChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
${definition}"
      associated_classes
	class_ref 379675 // VetoableChangeSupport
      end
      comment "@(#)VetoableChangeSupport.java	1.44 04/03/04

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667675 "Visibility"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 899227 // Visibility
      end
      comment "@(#)Visibility.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667803 "XMLDecoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.beans.ObjectHandler;
import java.io.InputStream;
import java.io.IOException;
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import org.xml.sax.SAXException;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
${definition}"
      associated_classes
	class_ref 899355 // XMLDecoder
      end
      comment "@(#)XMLDecoder.java	1.30 04/06/01

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 667931 "XMLEncoder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.lang.reflect.*;
${definition}"
      associated_classes
	class_ref 899483 // XMLEncoder
      end
      comment "@(#)XMLEncoder.java	1.33 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end

  package_ref 179867 // beancontext
end
