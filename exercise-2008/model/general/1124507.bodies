class ThreadSafePrintable
!!!9138459.java!!!	ThreadSafePrintable(inout printDelegate : Printable)
            this.printDelegate = printDelegate;
!!!9138587.java!!!	startUpdatingStatus(inout statusFormat : MessageFormat, inout statusLabel : JLabel) : void
            this.statusFormat = statusFormat;
            this.statusLabel = statusLabel;
!!!9138715.java!!!	stopUpdatingStatus() : void
            statusFormat = null;
            statusLabel = null;
!!!9138843.java!!!	print(in graphics : Graphics, in pageFormat : PageFormat, in pageIndex : int) : int

            // We'll use this Runnable
            Runnable runnable = new Runnable() {
                public synchronized void run() {
                    // set a flag to hide the selection and focused cell
                    isPrinting = true;

                    try {
                        if (statusLabel != null) {
                            // set the status message on the JOptionPane with
                            // the current page number
                            Object[] pageNumber = new Object[]{
                                new Integer(pageIndex + 1)};
                            statusLabel.setText(statusFormat.format(pageNumber));
                        }

                        // call into the delegate and save the return value
                        retVal = printDelegate.print(graphics, pageFormat, pageIndex);
                    } catch (Throwable throwable) {
                        // save any Throwable to be rethrown
                        retThrowable = throwable;
                    } finally {
                        // restore the flag
                        isPrinting = false;

                        // notify the caller that we're done
                        notifyAll();
                    }
                }
            };

            synchronized(runnable) {
                // make sure these are initialized
                retVal = -1;
                retThrowable = null;

                // call into the EDT
                SwingUtilities.invokeLater(runnable);

                // wait for the runnable to finish
                while (retVal == -1 && retThrowable == null) {
                    try {
                        runnable.wait();
                    } catch (InterruptedException ie) {
                        // short process, safe to ignore interrupts
                    }
                }

                // if the delegate threw a throwable, rethrow it here
                if (retThrowable != null) {
                    if (retThrowable instanceof PrinterException) {
                        throw (PrinterException)retThrowable;
                    } else if (retThrowable instanceof RuntimeException) {
                        throw (RuntimeException)retThrowable;
                    } else if (retThrowable instanceof Error) {
                        throw (Error)retThrowable;
                    }

                    // can not happen
                    throw new AssertionError(retThrowable);
                }

                return retVal;
            }
