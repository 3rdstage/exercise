class EventHandlerBase
!!!907803.java!!!	setUseSelectThreadToWait(inout x : boolean) : void
	useSelectThreadToWait = x;
!!!907931.java!!!	shouldUseSelectThreadToWait() : boolean
	return useSelectThreadToWait;
!!!908059.java!!!	setSelectionKey(inout selectionKey : SelectionKey) : void
	this.selectionKey = selectionKey;
!!!908187.java!!!	getSelectionKey() : SelectionKey
	return selectionKey;
!!!908315.java!!!	handleEvent() : void
	if (orb.transportDebugFlag) {
	    dprint(".handleEvent->: " + this);
	}
	getSelectionKey().interestOps(getSelectionKey().interestOps() &
				      (~ getInterestOps()));
	if (shouldUseWorkerThreadForEvent()) {
	    Throwable throwable = null;
	    try {
		if (orb.transportDebugFlag) {
		    dprint(".handleEvent: addWork to pool: " + 0);
		}
		orb.getThreadPoolManager().getThreadPool(0)
		    .getWorkQueue(0).addWork(getWork());
	    } catch (NoSuchThreadPoolException e) {
		throwable = e;
	    } catch (NoSuchWorkQueueException e) {
		throwable = e;
	    }
	    // REVISIT: need to close connection.
	    if (throwable != null) {
		if (orb.transportDebugFlag) {
		    dprint(".handleEvent: " + throwable);
		}
		INTERNAL i = new INTERNAL("NoSuchThreadPoolException");
		i.initCause(throwable);
		throw i;
	    }
	} else {
	    if (orb.transportDebugFlag) {
		dprint(".handleEvent: doWork");
	    }
	    getWork().doWork();
	}
	if (orb.transportDebugFlag) {
	    dprint(".handleEvent<-: " + this);
	}
!!!908443.java!!!	shouldUseWorkerThreadForEvent() : boolean
	return useWorkerThreadForEvent;
!!!908571.java!!!	setUseWorkerThreadForEvent(inout x : boolean) : void
	useWorkerThreadForEvent = x;
!!!908699.java!!!	setWork(inout work : Work) : void
	this.work = work;
!!!908827.java!!!	getWork() : Work
	return work;
!!!908955.java!!!	dprint(in msg : String) : void
	ORBUtility.dprint("EventHandlerBase", msg);
