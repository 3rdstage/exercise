class Channels
!!!7474971.java!!!	write(inout ch : WritableByteChannel, inout bb : ByteBuffer) : int
	if (ch instanceof SelectableChannel) {
	    SelectableChannel sc = (SelectableChannel)ch;
	    synchronized (sc.blockingLock()) {
		if (!sc.isBlocking())
		    throw new IllegalBlockingModeException();
		return ch.write(bb);
	    }
	} else {
	    return ch.write(bb);
	}
!!!7475099.java!!!	newInputStream(inout ch : ReadableByteChannel) : InputStream
	return new sun.nio.ch.ChannelInputStream(ch);
!!!7475227.java!!!	newOutputStream(in ch : WritableByteChannel) : OutputStream
	return new OutputStream() {

		private ByteBuffer bb = null;
		private byte[] bs = null; 	// Invoker's previous array
		private byte[] b1 = null;

                public synchronized void write(int b) throws IOException {
                   if (b1 == null)
                        b1 = new byte[1];
                    b1[0] = (byte)b;
                    this.write(b1);
                }

                public synchronized void write(byte[] bs, int off, int len)
                    throws IOException
                {
                    if ((off < 0) || (off > bs.length) || (len < 0) ||
                        ((off + len) > bs.length) || ((off + len) < 0)) {
                        throw new IndexOutOfBoundsException();
                    } else if (len == 0) {
                        return;
                    }
                    ByteBuffer bb = ((this.bs == bs)
                                     ? this.bb
                                     : ByteBuffer.wrap(bs));
                    bb.limit(Math.min(off + len, bb.capacity()));
                    bb.position(off);
                    this.bb = bb;
                    this.bs = bs;
                    Channels.write(ch, bb);
                }

		public void close() throws IOException {
		    ch.close();
		}

	    };
!!!7475355.java!!!	newChannel(in in : InputStream) : ReadableByteChannel
        if (in instanceof FileInputStream) {
            String inClass = in.getClass().toString();
            if (inClass.equals("java.io.FileInputStream"))
               return ((FileInputStream)in).getChannel();
        }
	return new ReadableByteChannelImpl(in);
!!!7476891.java!!!	newChannel(in out : OutputStream) : WritableByteChannel
        if (out instanceof FileOutputStream) {
            String outClass = out.getClass().toString();
            if (outClass.equals("java.io.FileOutputStream"))
                return ((FileOutputStream)out).getChannel();
        }
	return new WritableByteChannelImpl(out);
!!!7477403.java!!!	newReader(inout ch : ReadableByteChannel, inout dec : CharsetDecoder, in minBufferCap : int) : Reader
	dec.reset();
	return StreamDecoder.forDecoder(ch, dec, minBufferCap);
!!!7477531.java!!!	newReader(inout ch : ReadableByteChannel, in csName : String) : Reader
	return newReader(ch, Charset.forName(csName).newDecoder(), -1);
!!!7477659.java!!!	newWriter(in ch : WritableByteChannel, in enc : CharsetEncoder, in minBufferCap : int) : Writer
        enc.reset();
	return StreamEncoder.forEncoder(ch, enc, minBufferCap);
!!!7477787.java!!!	newWriter(inout ch : WritableByteChannel, in csName : String) : Writer
	return newWriter(ch, Charset.forName(csName).newEncoder(), -1);
