class WorkQueueImpl
!!!1527451.java!!!	WorkQueueImpl()
	name=ORBConstants.WORKQUEUE_DEFAULT_NAME;
	initializeMonitoring();
!!!1527579.java!!!	WorkQueueImpl(inout workerThreadPool : ThreadPool)
        this(workerThreadPool, ORBConstants.WORKQUEUE_DEFAULT_NAME);
!!!1527707.java!!!	WorkQueueImpl(inout workerThreadPool : ThreadPool, in name : String)
        this.workerThreadPool = workerThreadPool;
	this.name = name;
	initializeMonitoring();
!!!1527835.java!!!	initializeMonitoring() : void
	workqueueMonitoredObject = MonitoringFactories.
			    getMonitoredObjectFactory().
			    createMonitoredObject(name,
			    MonitoringConstants.WORKQUEUE_MONITORING_DESCRIPTION);

	LongMonitoredAttributeBase b1 = new 
	    LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_TOTAL_WORK_ITEMS_ADDED, 
		    MonitoringConstants.WORKQUEUE_TOTAL_WORK_ITEMS_ADDED_DESCRIPTION) {
		public Object getValue() {
		    return new Long(WorkQueueImpl.this.totalWorkItemsAdded());
		}
	    };
	workqueueMonitoredObject.addAttribute(b1);
	LongMonitoredAttributeBase b2 = new 
	    LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_WORK_ITEMS_IN_QUEUE, 
		    MonitoringConstants.WORKQUEUE_WORK_ITEMS_IN_QUEUE_DESCRIPTION) {
		public Object getValue() {
		    return new Long(WorkQueueImpl.this.workItemsInQueue());
		}
	    };
	workqueueMonitoredObject.addAttribute(b2);
	LongMonitoredAttributeBase b3 = new 
	    LongMonitoredAttributeBase(MonitoringConstants.WORKQUEUE_AVERAGE_TIME_IN_QUEUE, 
		    MonitoringConstants.WORKQUEUE_AVERAGE_TIME_IN_QUEUE_DESCRIPTION) {
		public Object getValue() {
		    return new Long(WorkQueueImpl.this.averageTimeInQueue());
		}
	    };
	workqueueMonitoredObject.addAttribute(b3);
!!!1527963.java!!!	getMonitoredObject() : MonitoredObject
	return workqueueMonitoredObject;
!!!1528091.java!!!	addWork(inout work : Work) : void
        synchronized (this) {
            workItemsAdded++;
            work.setEnqueueTime(System.currentTimeMillis());
            theWorkQueue.addLast(work);
	    ((ThreadPoolImpl)workerThreadPool).notifyForAvailableWork(this);
        }
!!!1528219.java!!!	requestWork(in waitTime : long) : Work
        Work workItem;
        synchronized (this) {
            if (theWorkQueue.size() != 0) {
                workItem = (Work)theWorkQueue.removeFirst();
                totalTimeInQueue += System.currentTimeMillis() - workItem.getEnqueueTime();
                workItemsDequeued++;
                return workItem;
            }

            try {

                long remainingWaitTime = waitTime;
                long finishTime = System.currentTimeMillis() + waitTime;

                do {

                    this.wait(remainingWaitTime);

                    if (theWorkQueue.size() != 0) {
                        workItem = (Work)theWorkQueue.removeFirst();
                        totalTimeInQueue += System.currentTimeMillis() - workItem.getEnqueueTime();
                        workItemsDequeued++;
                        return workItem;
                    }

                    remainingWaitTime = finishTime - System.currentTimeMillis();

                } while (remainingWaitTime > 0);

                throw new TimeoutException();

            } catch (InterruptedException ie) {
                throw ie;
            }
        }
!!!1528347.java!!!	setThreadPool(inout workerThreadPool : ThreadPool) : void
	    this.workerThreadPool = workerThreadPool;
!!!1528475.java!!!	getThreadPool() : ThreadPool
	    return workerThreadPool;
!!!1528603.java!!!	totalWorkItemsAdded() : long
        return workItemsAdded;
!!!1528731.java!!!	workItemsInQueue() : int
        return theWorkQueue.size();
!!!1528859.java!!!	averageTimeInQueue() : long
        return (totalTimeInQueue/workItemsDequeued);
!!!1528987.java!!!	getName() : String
        return name;
