class MatchQueryExp
!!!8233115.java!!!	MatchQueryExp()
 
!!!8233243.java!!!	MatchQueryExp(inout a : AttributeValueExp, inout s : StringValueExp)
 
	exp     = a;
	pattern = s.getValue();
!!!8233371.java!!!	getAttribute() : AttributeValueExp
 
	return exp;
!!!8233499.java!!!	getPattern() : String
 
	return pattern;
!!!8233627.java!!!	apply(inout name : ObjectName) : boolean
 

	ValueExp val = exp.apply(name);	
	if (!(val instanceof StringValueExp)) {
	    return false;
	}	
	return wildmatch(((StringValueExp)val).getValue(), pattern);
!!!8233755.java!!!	toString() : String
 
	return exp + " like " + new StringValueExp(likeTranslate(pattern));
!!!8233883.java!!!	likeTranslate(in s : String) : String
	return s.replace('?', '_').replace('*', '%');
!!!8234011.java!!!	wildmatch(in s : String, in p : String) : boolean
	char c;
        int si = 0, pi = 0;
        int slen = s.length();
        int plen = p.length();

        while (pi < plen) {            // While still string
            c = p.charAt(pi++);
            if (c == '?') {
                if (++si > slen)
                    return false;
            } else if (c == '[') {        // Start of choice
                boolean wantit = true;
                boolean seenit = false;
                if (p.charAt(pi) == '!') {
                    wantit = false;
                    ++pi;
                }
                while (++pi < plen && (c = p.charAt(pi)) != ']') {		
                    if (p.charAt(pi) == '-' && pi+1 < plen) {
                        if (s.charAt(si) >= c && s.charAt(si) <= p.charAt(pi+1)) {
                            seenit = true;		
			}
			pi += 1;                    
                    } else {
                        if (c == s.charAt(si)) {
                            seenit = true;
			}
                    }
                }
                if ((pi >= plen) || (wantit != seenit)) {
                    return false;
		}
		++pi;
                ++si;
            } else if (c == '*') {   // Wildcard	
                if (pi >= plen)
                    return true;
                do {
                    if (wildmatch(s.substring(si), p.substring(pi)))
                        return true;
                } while (++si < slen);
                return false;
            } else if (c == '\\') {
                if (pi >= plen || p.charAt(pi++) != s.charAt(si++))
                    return false;
            } else {
                if (si >= slen || c != s.charAt(si++)) {
                    return false;
		}
            }
        }
        return (si == slen);    
