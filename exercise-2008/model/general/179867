format 66
"beancontext" // src::java::beans::beancontext
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/beans/beancontext"
  java_package "java.beans.beancontext"
  classview 174619 "beancontext"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 890011 "BeanContext"
      visibility public stereotype "interface"
      nactuals 4
      actual class class_ref 135067 // Collection
        rank 0 explicit_value ""
      actual class class_ref 135067 // Collection
        rank 1 explicit_value ""
      actual class class_ref 135067 // Collection
        rank 2 explicit_value ""
      actual class class_ref 135067 // Collection
        rank 3 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
The BeanContext acts a logical hierarchical container for JavaBeans.
</p>

@author Laurence P. G. Cable
@version 1.23, 12/19/03
@since 1.2

@see java.beans.Beans
@see java.beans.beancontext.BeanContextChild
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent
@see java.beans.VetoableChangeEvent
@see java.beans.DesignMode
@see java.beans.Visibility
@see java.util.Collection"
      classrelation 1747739 // <generalisation>
	relation 1747739 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1747739 // <generalisation>
	  b parent class_ref 899739 // BeanContextChild
      end

      classrelation 1747867 // <generalisation>
	relation 1747867 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1747867 // <generalisation>
	  b parent class_ref 135067 // Collection
      end

      classrelation 1747995 // <generalisation>
	relation 1747995 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1747995 // <generalisation>
	  b parent class_ref 891931 // DesignMode
      end

      classrelation 1748123 // <generalisation>
	relation 1748123 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1748123 // <generalisation>
	  b parent class_ref 899227 // Visibility
      end

      operation 6798875 "instantiateChild"
	public explicit_return_type "Object"
	nparams 1
	  param in name "beanName" explicit_type "String"
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate the javaBean named as a 
child of this <code>BeanContext</code>.
The implementation of the JavaBean is 
derived from the value of the beanName parameter, 
and is defined by the 
<code>java.beans.Beans.instantiate()</code> method.

@param beanName The name of the JavaBean to instantiate 
as a child of this <code>BeanContext</code>
@throws <code>IOException</code>
@throws <code>ClassNotFoundException</code> if the class identified
by the beanName parameter is not found"
      end

      operation 6799003 "getResourceAsStream"
	public return_type class_ref 179099 // InputStream
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "bcc" type class_ref 899739 // BeanContextChild
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Analagous to <code>java.lang.ClassLoader.getResourceAsStream()</code>, 
this method allows a <code>BeanContext</code> implementation 
to interpose behavior between the child <code>Component</code> 
and underlying <code>ClassLoader</code>.

@param name the resource name
@param bcc the specified child
@return an <code>InputStream</code> for reading the resource, 
or <code>null</code> if the resource could not
be found.
@throws <code>IllegalArgumentException</code> if 
the resource is not valid"
      end

      operation 6799131 "getResource"
	public return_type class_ref 269467 // URL
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "bcc" type class_ref 899739 // BeanContextChild
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Analagous to <code>java.lang.ClassLoader.getResource()</code>, this
method allows a <code>BeanContext</code> implementation to interpose
behavior between the child <code>Component</code> 
and underlying <code>ClassLoader</code>.

@param name the resource name
@param bcc the specified child
@return a <code>URL</code> for the named 
resource for the specified child
@throws <code>IllegalArgumentException</code> 
if the resource is not valid"
      end

      operation 6799259 "addBeanContextMembershipListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcml" type class_ref 899867 // BeanContextMembershipListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified <code>BeanContextMembershipListener</code> 
to receive <code>BeanContextMembershipEvents</code> from 
this <code>BeanContext</code> whenever it adds
or removes a child <code>Component</code>(s).

@param bcml the <code>BeanContextMembershipListener</code> to be added"
      end

      operation 6799387 "removeBeanContextMembershipListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcml" type class_ref 899867 // BeanContextMembershipListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>BeanContextMembershipListener</code> 
so that it no longer receives <code>BeanContextMembershipEvent</code>s 
when the child <code>Component</code>(s) are added or removed.

@param bcml the <code>BeanContextMembershipListener</code> 
to be removed"
      end

      attribute 2693275 "globalHierarchyLock"
	class_attribute const_attribute public explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This global lock is used by both <code>BeanContext</code> 
and <code>BeanContextServices</code> implementors 
to serialize changes in a <code>BeanContext</code> 
hierarchy and any service requests etc.
"
      end
    end

    class 899739 "BeanContextChild"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
JavaBeans wishing to be nested within, and obtain a reference to their
execution environment, or context, as defined by the BeanContext
sub-interface shall implement this interface.
</p>
<p>
Conformant BeanContexts shall as a side effect of adding a BeanContextChild
object shall pass a reference to itself via the setBeanContext() method of
this interface.
</p>
<p>
Note that a BeanContextChild may refuse a change in state by throwing
PropertyVetoedException in response.
</p>
<p>
In order for persistence mechanisms to function properly on BeanContextChild
instances across a broad variety of scenarios, implementing classes of this
interface are required to define as transient, any or all fields, or
instance variables, that may contain, or represent, references to the
nesting BeanContext instance or other resources obtained
from the BeanContext via any unspecified mechanisms.
</p>

@author	Laurence P. G. Cable
@version	1.20, 12/19/03
@since	1.2

@see	java.beans.beancontext.BeanContext
@see	java.beans.PropertyChangeEvent
@see	java.beans.PropertyChangeListener
@see	java.beans.PropertyVetoEvent
@see	java.beans.PropertyVetoListener
@see	java.beans.PropertyVetoException"
      operation 6798107 "setBeanContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bc" type class_ref 890011 // BeanContext
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Objects that implement this interface, 
shall fire a java.beans.PropertyChangeEvent, with parameters:

propertyName \"beanContext\", oldValue (the previous nesting 
<code>BeanContext</code> instance, or <code>null</code>), 
newValue (the current nesting 
<code>BeanContext</code> instance, or <code>null</code>).
<p>
A change in the value of the nesting BeanContext property of this
BeanContextChild may be vetoed by throwing the appropriate exception.
</p>
@param bc The <code>BeanContext</code> with which 
to associate this <code>BeanContextChild</code>.
@throws <code>PropertyVetoException</code> if the 
addition of the specified <code>BeanContext</code> is refused."
      end

      operation 6798235 "getBeanContext"
	public return_type class_ref 890011 // BeanContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>BeanContext</code> associated 
with this <code>BeanContextChild</code>.
@return the <code>BeanContext</code> associated 
with this <code>BeanContextChild</code>."
      end

      operation 6798363 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "pcl" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>PropertyChangeListener</code> 
to this <code>BeanContextChild</code> 
in order to receive a <code>PropertyChangeEvent</code> 
whenever the specified property has changed.
@param name the name of the property to listen on
@param pcl the <code>PropertyChangeListener</code> to add"
      end

      operation 6798491 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "pcl" type class_ref 367771 // PropertyChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from this 
<code>BeanContextChild</code>  so that it no longer 
receives <code>PropertyChangeEvents</code> when the 
specified property is changed.

@param name the name of the property that was listened on
@param pcl the <code>PropertyChangeListener</code> to remove"
      end

      operation 6798619 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "vcl" type class_ref 855067 // VetoableChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>VetoableChangeListener</code> to 
this <code>BeanContextChild</code>  
to receive events whenever the specified property changes.
@param name the name of the property to listen on
@param vcl the <code>VetoableChangeListener</code> to add"
      end

      operation 6798747 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "vcl" type class_ref 855067 // VetoableChangeListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>VetoableChangeListener</code> from this 
<code>BeanContextChild</code> so that it no longer receives 
events when the specified property changes.
@param name the name of the property that was listened on.
@param vcl the <code>VetoableChangeListener</code> to remove."
      end
    end

    class 899867 "BeanContextMembershipListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
Compliant BeanContexts fire events on this interface when the state of
the membership of the BeanContext changes.
</p>

@author	Laurence P. G. Cable
@version	1.12, 12/19/03
@since	1.2
@see		java.beans.beancontext.BeanContext"
      classrelation 1749915 // <generalisation>
	relation 1749915 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1749915 // <generalisation>
	  b parent class_ref 147099 // EventListener
      end

      operation 6803867 "childrenAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcme" type class_ref 901019 // BeanContextMembershipEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a child or list of children is added to a 
<code>BeanContext</code> that this listener is registered with.
@param bcme The <code>BeanContextMembershipEvent</code> 
describing the change that occurred."
      end

      operation 6803995 "childrenRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcme" type class_ref 901019 // BeanContextMembershipEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a child or list of children is removed 
from a <code>BeanContext</code> that this listener 
is registered with.
@param bcme The <code>BeanContextMembershipEvent</code> 
describing the change that occurred."
      end
    end

    class 899995 "BeanContextChildComponentProxy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This interface is implemented by 
<code>BeanContextChildren</code> that have an AWT <code>Component</code>
associated with them.
</p>

@author Laurence P. G. Cable
@version 1.10, 12/19/03
@since 1.2

@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextSupport"
      operation 6799515 "getComponent"
	public return_type class_ref 361371 // Component
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>java.awt.Component</code> associated with 
this <code>BeanContextChild</code>.
@return the AWT <code>Component</code> associated with 
this <code>BeanContextChild</code>"
      end
    end

    class 900123 "BeanContextChildSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This is a general support class to provide support for implementing the
BeanContextChild protocol.

This class may either be directly subclassed, or encapsulated and delegated
to in order to implement this interface for a given component.
</p>

@author	Laurence P. G. Cable
@version	1.16, 03/04/04
@since	1.2

@see	java.beans.beancontext.BeanContext
@see	java.beans.beancontext.BeanContextServices
@see	java.beans.beancontext.BeanContextChild"
      classrelation 1748251 // <realization>
	relation 1748251 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1748251 // <realization>
	  b parent class_ref 899739 // BeanContextChild
      end

      classrelation 1748635 // <realization>
	relation 1748635 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1748635 // <realization>
	  b parent class_ref 900251 // BeanContextServicesListener
      end

      classrelation 1748763 // <realization>
	relation 1748763 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1748763 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2693403 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  6328947014421475877L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6799899 "BeanContextChildSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "construct a BeanContextChildSupport where this class has been 
subclassed in order to implement the JavaBean component itself."
      end

      operation 6800027 "BeanContextChildSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "bcc" type class_ref 899739 // BeanContextChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "construct a BeanContextChildSupport where the JavaBean component
itself implements BeanContextChild, and encapsulates this, delegating
that interface to this implementation"
      end

      operation 6800155 "setBeanContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bc" type class_ref 890011 // BeanContext
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>BeanContext</code> for 
this <code>BeanContextChildSupport</code>.
@param bc the new value to be assigned to the <code>BeanContext</code> 
property
@throws <code>PropertyVetoException</code> if the change is rejected"
      end

      operation 6800283 "getBeanContext"
	public return_type class_ref 890011 // BeanContext
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the nesting <code>BeanContext</code> 
for this <code>BeanContextChildSupport</code>.
@return the nesting <code>BeanContext</code> for 
this <code>BeanContextChildSupport</code>."
      end

      operation 6800411 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "pcl" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a PropertyChangeListener for a specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>name</code> or <code>pcl</code> is null, no exception is thrown
and no action is taken.

@param name The name of the property to listen on
@param pcl The <code>PropertyChangeListener</code> to be added"
      end

      operation 6800539 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "pcl" type class_ref 367771 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a PropertyChangeListener for a specific property.
If <code>pcl</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>name</code> is null, no exception is thrown
and no action is taken.
If <code>pcl</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param name The name of the property that was listened on
@param pcl The PropertyChangeListener to be removed"
      end

      operation 6800667 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "vcl" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a VetoableChangeListener for a specific property.
The same listener object may be added more than once.  For each
property,  the listener will be invoked the number of times it was added
for that property.
If <code>name</code> or <code>vcl</code> is null, no exception is thrown
and no action is taken.

@param name The name of the property to listen on
@param vcl The <code>VetoableChangeListener</code> to be added"
      end

      operation 6800795 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "vcl" type class_ref 855067 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>VetoableChangeListener</code>.
If <code>pcl</code> was added more than once to the same event
source for the specified property, it will be notified one less time
after being removed.
If <code>name</code> is null, no exception is thrown
and no action is taken.
If <code>vcl</code> is null, or was never added for the specified
property, no exception is thrown and no action is taken.

@param name The name of the property that was listened on
@param vcl The <code>VetoableChangeListener</code> to be removed"
      end

      operation 6800923 "serviceRevoked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsre" type class_ref 900507 // BeanContextServiceRevokedEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A service provided by the nesting BeanContext has been revoked.

Subclasses may override this method in order to implement their own
behaviors.
@param bcsre The <code>BeanContextServiceRevokedEvent</code> fired as a 
result of a service being revoked"
      end

      operation 6801051 "serviceAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsae" type class_ref 900635 // BeanContextServiceAvailableEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A new service is available from the nesting BeanContext.

Subclasses may override this method in order to implement their own
behaviors 
@param bcsae The BeanContextServiceAvailableEvent fired as a
result of a service becoming available
"
      end

      operation 6801179 "getBeanContextChildPeer"
	public return_type class_ref 899739 // BeanContextChild
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <tt>BeanContextChild</tt> associated with this 
<tt>BeanContextChildSupport</tt>.

@return the <tt>BeanContextChild</tt> peer of this class"
      end

      operation 6801307 "isDelegated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not this class is a delegate of another.

@return true if this class is a delegate of another"
      end

      operation 6801435 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a bound property update to any registered listeners. No event is
fired if old and new are equal and non-null.
@param name The programmatic name of the property that was changed
@param oldValue  The old value of the property
@param newValue  The new value of the property"
      end

      operation 6801563 "fireVetoableChange"
	public explicit_return_type "void"
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a vetoable property update to any registered listeners. 
If anyone vetos the change, then fire a new event 
reverting everyone to the old value and then rethrow 
the PropertyVetoException. <P>

No event is fired if old and new are equal and non-null.
<P>
@param name The programmatic name of the property that is about to
change

@param oldValue The old value of the property
@param newValue - The new value of the property

@throws PropertyVetoException if the recipient wishes the property
change to be rolled back."
      end

      operation 6801691 "validatePendingSetBeanContext"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "newValue" type class_ref 890011 // BeanContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from setBeanContext to validate (or otherwise) the
pending change in the nesting BeanContext property value.
Returning false will cause setBeanContext to throw
PropertyVetoException.
@param newValue the new value that has been requested for 
 the BeanContext property
@return <code>true</code> if the change operation is to be vetoed"
      end

      operation 6801819 "releaseBeanContextResources"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method may be overridden by subclasses to provide their own
release behaviors. When invoked any resources held by this instance
obtained from its current BeanContext property should be released
since the object is no longer nested within that BeanContext."
      end

      operation 6801947 "initializeBeanContextResources"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method may be overridden by subclasses to provide their own
initialization behaviors. When invoked any resources requried by the
BeanContextChild should be obtained from the current BeanContext."
      end

      operation 6802075 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the persistence state of the object."
      end

      operation 6802203 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a persistent object, must wait for subsequent setBeanContext()
to fully restore any resources obtained from the new nesting 
BeanContext"
      end

      classrelation 1748891 // beanContextChildPeer (<unidirectional association>)
	relation 1748891 --->
	  a role_name "beanContextChildPeer" public
	    comment "
fields


The <code>BeanContext</code> in which 
this <code>BeanContextChild</code> is nested.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1748891 // beanContextChildPeer (<unidirectional association>)
	  b parent class_ref 899739 // BeanContextChild
      end

      classrelation 1749019 // pcSupport (<unidirectional association>)
	relation 1749019 --->
	  a role_name "pcSupport" protected
	    comment " 
The <tt>PropertyChangeSupport</tt> associated with this
<tt>BeanContextChildSupport</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1749019 // pcSupport (<unidirectional association>)
	  b parent class_ref 372379 // PropertyChangeSupport
      end

      classrelation 1749147 // vcSupport (<unidirectional association>)
	relation 1749147 --->
	  a role_name "vcSupport" protected
	    comment "
The <tt>VetoableChangeSupport</tt> associated with this
<tt>BeanContextChildSupport</tt>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1749147 // vcSupport (<unidirectional association>)
	  b parent class_ref 379675 // VetoableChangeSupport
      end

      classrelation 1749275 // beanContext (<unidirectional association>)
	relation 1749275 --->
	  a role_name "beanContext" protected
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1749275 // beanContext (<unidirectional association>)
	  b parent class_ref 890011 // BeanContext
      end

      attribute 2693531 "rejectedSetBCOnce"
	protected explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A flag indicating that there has been
at least one <code>PropertyChangeVetoException</code>
thrown for the attempted setBeanContext operation.
"
      end
    end

    class 900251 "BeanContextServicesListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The listener interface for receiving 
<code>BeanContextServiceAvailableEvent</code> objects. 
A class that is interested in processing a 
<code>BeanContextServiceAvailableEvent</code> implements this interface. "
      classrelation 1748507 // <generalisation>
	relation 1748507 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1748507 // <generalisation>
	  b parent class_ref 900379 // BeanContextServiceRevokedListener
      end

      operation 6799771 "serviceAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsae" type class_ref 900635 // BeanContextServiceAvailableEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The service named has been registered. getService requests for
this service may now be made.
@param bcsae the <code>BeanContextServiceAvailableEvent</code> "
      end
    end

    class 900379 "BeanContextServiceRevokedListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The listener interface for receiving 
<code>BeanContextServiceRevokedEvent</code> objects. A class that is 
interested in processing a <code>BeanContextServiceRevokedEvent</code>
implements this interface. "
      classrelation 1748379 // <generalisation>
	relation 1748379 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1748379 // <generalisation>
	  b parent class_ref 147099 // EventListener
      end

      operation 6799643 "serviceRevoked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsre" type class_ref 900507 // BeanContextServiceRevokedEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The service named has been revoked. getService requests for
this service will no longer be satisifed.
@param bcsre the <code>BeanContextServiceRevokedEvent</code> received 
by this listener. "
      end
    end

    class 900507 "BeanContextServiceRevokedEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This event type is used by the 
<code>BeanContextServiceRevokedListener</code> in order to
identify the service being revoked.
</p>"
      classrelation 1750427 // <generalisation>
	relation 1750427 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750427 // <generalisation>
	  b parent class_ref 900891 // BeanContextEvent
      end

      operation 6805275 "BeanContextServiceRevokedEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "bcs" type class_ref 901275 // BeanContextServices
	  param inout name "sc" type class_ref 164635 // Class
	  param inout name "invalidate" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>BeanContextServiceEvent</code>.
@param bcs the <code>BeanContextServices</code> 
from which this service is being revoked
@param sc the service that is being revoked
@param invalidate <code>true</code> for immediate revocation "
      end

      operation 6805403 "getSourceAsBeanContextServices"
	public return_type class_ref 901275 // BeanContextServices
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source as a reference of type <code>BeanContextServices</code>
@return the <code>BeanContextServices</code> from which 
this service is being revoked"
      end

      operation 6805531 "getServiceClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the service class that is the subject of this notification
@return A <code>Class</code> reference to the 
service that is being revoked"
      end

      operation 6805659 "isServiceClass"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks this event to determine whether or not
the service being revoked is of a particular class.
@param service the service of interest (should be non-null)
@return <code>true</code> if the service being revoked is of the
same class as the specified service"
      end

      operation 6805787 "isCurrentServiceInvalidNow"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports if the current service is being forcibly revoked,
in which case the references are now invalidated and unusable.
@return <code>true</code> if current service is being forcibly revoked"
      end

      classrelation 1750555 // serviceClass (<unidirectional association>)
	relation 1750555 --->
	  a role_name "serviceClass" protected
	    comment "
fields


A <code>Class</code> reference to the service that is being revoked.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1750555 // serviceClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 2693659 "invalidateRefs"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 900635 "BeanContextServiceAvailableEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This event type is used by the BeanContextServicesListener in order to
identify the service being registered.
</p>"
      classrelation 1750043 // <generalisation>
	relation 1750043 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750043 // <generalisation>
	  b parent class_ref 900891 // BeanContextEvent
      end

      operation 6804251 "BeanContextServiceAvailableEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "bcs" type class_ref 901275 // BeanContextServices
	  param inout name "sc" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>BeanContextAvailableServiceEvent</code>.
@param bcs The context in which the service has become available
@param sc A <code>Class</code> reference to the newly available service"
      end

      operation 6804379 "getSourceAsBeanContextServices"
	public return_type class_ref 901275 // BeanContextServices
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source as a reference of type <code>BeanContextServices</code>.
@return The context in which the service has become available"
      end

      operation 6804507 "getServiceClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the service class that is the subject of this notification.
@return A <code>Class</code> reference to the newly available service"
      end

      operation 6804635 "getCurrentServiceSelectors"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of service dependent selectors.
@return the current selectors available from the service"
      end

      classrelation 1750171 // serviceClass (<unidirectional association>)
	relation 1750171 --->
	  a role_name "serviceClass" protected
	    comment "
fields


A <code>Class</code> reference to the newly available service

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1750171 // serviceClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end
    end

    class 900763 "BeanContextContainerProxy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This interface is implemented by BeanContexts' that have an AWT Container
associated with them.
</p>

@author Laurence P. G. Cable
@version 1.10, 12/19/03
@since 1.2

@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextSupport"
      operation 6802331 "getContainer"
	public return_type class_ref 369691 // Container
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>java.awt.Container</code> associated 
with this <code>BeanContext</code>.
@return the <code>java.awt.Container</code> associated 
with this <code>BeanContext</code>."
      end
    end

    class 900891 "BeanContextEvent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
<code>BeanContextEvent</code> is the abstract root event class 
for all events emitted
from, and pertaining to the semantics of, a <code>BeanContext</code>.
This class introduces a mechanism to allow the propagation of 
<code>BeanContextEvent</code> subclasses through a hierarchy of 
<code>BeanContext</code>s. The <code>setPropagatedFrom()</code> 
and <code>getPropagatedFrom()</code> methods allow a 
<code>BeanContext</code> to identify itself as the source 
of a propagated event. 
</p>

@author	Laurence P. G. Cable
@version	1.14, 12/19/03
@since	1.2
@see		java.beans.beancontext.BeanContext"
      classrelation 1749403 // <generalisation>
	relation 1749403 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1749403 // <generalisation>
	  b parent class_ref 147355 // EventObject
      end

      operation 6802459 "BeanContextEvent"
	protected explicit_return_type ""
	nparams 1
	  param inout name "bc" type class_ref 890011 // BeanContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Contruct a BeanContextEvent

@param bc	The BeanContext source"
      end

      operation 6802587 "getBeanContext"
	public return_type class_ref 890011 // BeanContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>BeanContext</code> associated with this event.
@return the <code>BeanContext</code> associated with this event."
      end

      operation 6802715 "setPropagatedFrom"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bc" type class_ref 890011 // BeanContext
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>BeanContext</code> from which this event was propagated.
@param bc the <code>BeanContext</code> from which this event 
was propagated"
      end

      operation 6802843 "getPropagatedFrom"
	public return_type class_ref 890011 // BeanContext
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>BeanContext</code> from which this event was propagated.
@return the <code>BeanContext</code> from which this 
event was propagated"
      end

      operation 6802971 "isPropagated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not this event is 
propagated from some other <code>BeanContext</code>.
@return <code>true</code> if propagated, <code>false</code> 
if not"
      end

      classrelation 1749531 // propagatedFrom (<unidirectional association>)
	relation 1749531 --->
	  a role_name "propagatedFrom" protected
	    comment "
fields

 
The <code>BeanContext</code> from which this event was propagated

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1749531 // propagatedFrom (<unidirectional association>)
	  b parent class_ref 890011 // BeanContext
      end
    end

    class 901019 "BeanContextMembershipEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A <code>BeanContextMembershipEvent</code> encapsulates 
the list of children added to, or removed from, 
the membership of a particular <code>BeanContext</code>. 
An instance of this event is fired whenever a successful 
add(), remove(), retainAll(), removeAll(), or clear() is 
invoked on a given <code>BeanContext</code> instance.
Objects interested in receiving events of this type must 
implement the <code>BeanContextMembershipListener</code> 
interface, and must register their intent via the
<code>BeanContext</code>'s 
<code>addBeanContextMembershipListener(BeanContextMembershipListener bcml)
</code> method. 

@author	Laurence P. G. Cable
@version	1.15
@since	1.2
@see		java.beans.beancontext.BeanContext
@see		java.beans.beancontext.BeanContextEvent
@see		java.beans.beancontext.BeanContextMembershipListener"
      classrelation 1749659 // <generalisation>
	relation 1749659 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1749659 // <generalisation>
	  b parent class_ref 900891 // BeanContextEvent
      end

      operation 6803099 "BeanContextMembershipEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "bc" type class_ref 890011 // BeanContext
	  param inout name "changes" type class_ref 135067 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Contruct a BeanContextMembershipEvent

@param bc	The BeanContext source
@param changes	The Children affected
@throws NullPointerException if <CODE>changes</CODE> is <CODE>null</CODE>"
      end

      operation 6803227 "BeanContextMembershipEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "bc" type class_ref 890011 // BeanContext
	  param inout name "changes" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Contruct a BeanContextMembershipEvent

@param bc	The BeanContext source
@param changes	The Children effected
@exception       NullPointerException if changes associated with this 
                 event are null."
      end

      operation 6803355 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of children affected by the notification.
@return the number of children affected by the notification"
      end

      operation 6803483 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the child specified affected by the event?
@return <code>true</code> if affected, <code>false</code> 
if not"
      end

      operation 6803611 "toArray"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the array of children affected by this event.
@return the array of children affected"
      end

      operation 6803739 "iterator"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the array of children affected by this event.
@return the array of children effected"
      end

      classrelation 1749787 // children (<unidirectional association>)
	relation 1749787 --->
	  a role_name "children" protected
	    comment "
fields


The list of children affected by this 
event notification.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1749787 // children (<unidirectional association>)
	  b parent class_ref 135067 // Collection
      end
    end

    class 901147 "BeanContextProxy"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This interface is implemented by a JavaBean that does 
not directly have a BeanContext(Child) associated with 
it (via implementing that interface or a subinterface thereof), 
but has a public BeanContext(Child) delegated from it.
For example, a subclass of java.awt.Container may have a BeanContext 
associated with it that all Component children of that Container shall
be contained within.
</p>
<p>
An Object may not implement this interface and the 
BeanContextChild interface
(or any subinterfaces thereof) they are mutually exclusive.
</p>
<p>
Callers of this interface shall examine the return type in order to 
obtain a particular subinterface of BeanContextChild as follows:
<code>
BeanContextChild bcc = o.getBeanContextProxy();

if (bcc instanceof BeanContext) {
	// ...
}
</code>
or
<code>
BeanContextChild bcc = o.getBeanContextProxy();
BeanContext      bc  = null;

try {
    bc = (BeanContext)bcc; 
} catch (ClassCastException cce) {
    // cast failed, bcc is not an instanceof BeanContext 
}
</code>
</p>
<p>
The return value is a constant for the lifetime of the implementing
instance
</p>
@author Laurence P. G. Cable
@version 1.11, 12/19/03
@since 1.2

@see java.beans.beancontext.BeanContextChild
@see java.beans.beancontext.BeanContextChildSupport"
      operation 6804123 "getBeanContextProxy"
	public return_type class_ref 899739 // BeanContextChild
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>BeanContextChild</code> (or subinterface) 
associated with this object. 
@return the <code>BeanContextChild</code> (or subinterface) 
associated with this object"
      end
    end

    class 901275 "BeanContextServices"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
The BeanContextServices interface provides a mechanism for a BeanContext
to expose generic \"services\" to the BeanContextChild objects within.
</p>"
      classrelation 1750683 // <generalisation>
	relation 1750683 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750683 // <generalisation>
	  b parent class_ref 890011 // BeanContext
      end

      classrelation 1750811 // <generalisation>
	relation 1750811 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750811 // <generalisation>
	  b parent class_ref 900251 // BeanContextServicesListener
      end

      operation 6805915 "addService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "serviceProvider" type class_ref 901403 // BeanContextServiceProvider
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a service to this BeanContext.
<code>BeanContextServiceProvider</code>s call this method 
to register a particular service with this context. 
If the service has not previously been added, the 
<code>BeanContextServices</code> associates
the service with the <code>BeanContextServiceProvider</code> and 
fires a <code>BeanContextServiceAvailableEvent</code> to all 
currently registered <code>BeanContextServicesListeners</code>. 
The method then returns <code>true</code>, indicating that 
the addition of the service was successful.
If the given service has already been added, this method 
simply returns <code>false</code>.
@param serviceClass     the service to add
@param serviceProvider  the <code>BeanContextServiceProvider</code> 
associated with the service"
      end

      operation 6806043 "revokeService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "serviceProvider" type class_ref 901403 // BeanContextServiceProvider
	  param inout name "revokeCurrentServicesNow" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "BeanContextServiceProviders wishing to remove 
a currently registered service from this context
may do so via invocation of this method. Upon revocation of 
the service, the <code>BeanContextServices</code> fires a 
<code>BeanContextServiceRevokedEvent</code> to its
list of currently registered 
<code>BeanContextServiceRevokedListeners</code> and 
<code>BeanContextServicesListeners</code>.
@param serviceClass the service to revoke from this BeanContextServices
@param serviceProvider the BeanContextServiceProvider associated with
this particular service that is being revoked
@param revokeCurrentServicesNow a value of <code>true</code> 
indicates an exceptional circumstance where the 
<code>BeanContextServiceProvider</code> or
<code>BeanContextServices</code> wishes to immediately 
terminate service to all currently outstanding references 
to the specified service."
      end

      operation 6806171 "hasService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not a given service is 
currently available from this context.
@param serviceClass the service in question
@return true if the service is available"
      end

      operation 6806299 "getService"
	public explicit_return_type "Object"
	nparams 5
	  param inout name "child" type class_ref 899739 // BeanContextChild
	  param inout name "requestor" explicit_type "Object"
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "serviceSelector" explicit_type "Object"
	  param inout name "bcsrl" type class_ref 900379 // BeanContextServiceRevokedListener
	nexceptions 1
	  exception class_ref 157595 // TooManyListenersException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A <code>BeanContextChild</code>, or any arbitrary object 
associated with a <code>BeanContextChild</code>, may obtain 
a reference to a currently registered service from its 
nesting <code>BeanContextServices</code> 
via invocation of this method. When invoked, this method
gets the service by calling the getService() method on the 
underlying <code>BeanContextServiceProvider</code>.
@param child the <code>BeanContextChild</code> 
associated with this request
@param requestor the object requesting the service
@param serviceClass class of the requested service
@param serviceSelector the service dependent parameter
@param bcsrl the 
<code>BeanContextServiceRevokedListener</code> to notify
if the service should later become revoked
@throws TooManyListenersException 
@return a reference to this context's named 
Service as requested or <code>null</code>"
      end

      operation 6806427 "releaseService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "child" type class_ref 899739 // BeanContextChild
	  param inout name "requestor" explicit_type "Object"
	  param inout name "service" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases a <code>BeanContextChild</code>'s 
(or any arbitrary object associated with a BeanContextChild) 
reference to the specified service by calling releaseService() 
on the underlying <code>BeanContextServiceProvider</code>.
@param child the <code>BeanContextChild</code>
@param requestor the requestor
@param service the service"
      end

      operation 6806555 "getCurrentServiceClasses"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the currently available services for this context.
@return an <code>Iterator</code> consisting of the 
currently available services"
      end

      operation 6806683 "getCurrentServiceSelectors"
	public return_type class_ref 135323 // Iterator
	nparams 1
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of service dependent service parameters 
(Service Selectors) for the specified service, by 
calling getCurrentServiceSelectors() on the
underlying BeanContextServiceProvider.
@param serviceClass the specified service
@return the currently available service selectors 
for the named serviceClass"
      end

      operation 6806811 "addBeanContextServicesListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsl" type class_ref 900251 // BeanContextServicesListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>BeanContextServicesListener</code> to this BeanContext
@param bcsl the <code>BeanContextServicesListener</code> to add"
      end

      operation 6806939 "removeBeanContextServicesListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsl" type class_ref 900251 // BeanContextServicesListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>BeanContextServicesListener</code> 
from this <code>BeanContext</code>
@param bcsl the <code>BeanContextServicesListener</code> 
to remove from this context"
      end
    end

    class 901403 "BeanContextServiceProvider"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
One of the primary functions of a BeanContext is to act a as rendezvous 
between JavaBeans, and BeanContextServiceProviders.
</p>
<p>
A JavaBean nested within a BeanContext, may ask that BeanContext to 
provide an instance of a \"service\", based upon a reference to a Java
Class object that represents that service.
</p>
<p>
If such a service has been registered with the context, or one of its 
nesting context's, in the case where a context delegate to its context
to satisfy a service request, then the BeanContextServiceProvider associated with 
the service is asked to provide an instance of that service.
</p>
<p>
The ServcieProvider may always return the same instance, or it may
construct a new instance for each request.
</p>"
      operation 6804763 "getService"
	public explicit_return_type "Object"
	nparams 4
	  param inout name "bcs" type class_ref 901275 // BeanContextServices
	  param inout name "requestor" explicit_type "Object"
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "serviceSelector" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked by <code>BeanContextServices</code>, this method 
requests an instance of a
service from this <code>BeanContextServiceProvider</code>. 

@param bcs The <code>BeanContextServices</code> associated with this
particular request. This parameter enables the
<code>BeanContextServiceProvider</code> to distinguish service 
requests from multiple sources.

@param requestor	 	The object requesting the service

@param serviceClass	The service requested

@param serviceSelector the service dependent parameter 
for a particular service, or <code>null</code> if not applicable.

@return a reference to the requested service"
      end

      operation 6804891 "releaseService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "bcs" type class_ref 901275 // BeanContextServices
	  param inout name "requestor" explicit_type "Object"
	  param inout name "service" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked by <code>BeanContextServices</code>, 
this method releases a nested <code>BeanContextChild</code>'s 
(or any arbitrary object associated with a
<code>BeanContextChild</code>) reference to the specified service.

@param bcs the <code>BeanContextServices</code> associated with this
particular release request

@param requestor the object requesting the service to be released

@param service the service that is to be released"
      end

      operation 6805019 "getCurrentServiceSelectors"
	public return_type class_ref 135323 // Iterator
	nparams 2
	  param inout name "bcs" type class_ref 901275 // BeanContextServices
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked by <code>BeanContextServices</code>, this method
gets the current service selectors for the specified service. 
A service selector is a service specific parameter, 
typical examples of which could include: a
parameter to a constructor for the service implementation class, 
a value for a particular service's property, or a key into a 
map of existing implementations. 

@param bcs           the <code>BeanContextServices</code> for this request
@param serviceClass  the specified service
@return   the current service selectors for the specified serviceClass"
      end
    end

    class 901531 "BeanContextServiceProviderBeanInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A BeanContextServiceProvider implementor who wishes to provide explicit
information about the services their bean may provide shall implement a
BeanInfo class that implements this BeanInfo subinterface and provides
explicit information about the methods, properties, events, etc, of their
services."
      classrelation 1750299 // <generalisation>
	relation 1750299 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750299 // <generalisation>
	  b parent class_ref 890395 // BeanInfo
      end

      operation 6805147 "getServicesBeanInfo"
	public return_type class_ref 890395 // BeanInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a <code>BeanInfo</code> array, one for each 
service class or interface statically available 
from this ServiceProvider. 
@return the <code>BeanInfo</code> array"
      end
    end

    class 901659 "BeanContextServicesSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This helper class provides a utility implementation of the
java.beans.beancontext.BeanContextServices interface.
</p>
<p>
Since this class directly implements the BeanContextServices interface,
the class can, and is intended to be used either by subclassing this
implementation, or via delegation of an instance of this class
from another through the BeanContextProxy interface.
</p>

@author Laurence P. G. Cable
@version 1.23, 04/15/04
@since 1.2"
      classrelation 1752603 // <generalisation>
	relation 1752603 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1752603 // <generalisation>
	  b parent class_ref 901787 // BeanContextSupport
      end

      classrelation 1752731 // <realization>
	relation 1752731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1752731 // <realization>
	  b parent class_ref 901275 // BeanContextServices
      end

      operation 6816411 "BeanContextServicesSupport"
	public explicit_return_type ""
	nparams 4
	  param inout name "peer" type class_ref 901275 // BeanContextServices
	  param inout name "lcle" type class_ref 138907 // Locale
	  param inout name "dTime" explicit_type "boolean"
	  param inout name "visible" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Construct a BeanContextServicesSupport instance
</p>

@param peer	The peer BeanContext we are supplying an implementation for, if null the this object is its own peer
@param lcle	The current Locale for this BeanContext.
@param dtime	The initial state, true if in design mode, false if runtime.
@param visible	The initial visibility.
"
      end

      operation 6816539 "BeanContextServicesSupport"
	public explicit_return_type ""
	nparams 3
	  param inout name "peer" type class_ref 901275 // BeanContextServices
	  param inout name "lcle" type class_ref 138907 // Locale
	  param inout name "dtime" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance using the specified Locale and design mode.

@param peer	The peer BeanContext we are supplying an implementation for, if null the this object is its own peer
@param lcle	The current Locale for this BeanContext.
@param dtime	The initial state, true if in design mode, false if runtime."
      end

      operation 6816667 "BeanContextServicesSupport"
	public explicit_return_type ""
	nparams 2
	  param inout name "peer" type class_ref 901275 // BeanContextServices
	  param inout name "lcle" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance using the specified locale

@param peer	The peer BeanContext we are supplying an implementation for, if null the this object is its own peer
@param lcle	The current Locale for this BeanContext."
      end

      operation 6816795 "BeanContextServicesSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "peer" type class_ref 901275 // BeanContextServices
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance with a peer

@param peer	The peer BeanContext we are supplying an implementation for, if null the this object is its own peer"
      end

      operation 6816923 "BeanContextServicesSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance that is not a delegate of another object"
      end

      operation 6817051 "initialize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called by BeanContextSupport superclass during construction and 
deserialization to initialize subclass transient state.

subclasses may envelope this method, but should not override it or
call it directly."
      end

      operation 6817179 "getBeanContextServicesPeer"
	public return_type class_ref 901275 // BeanContextServices
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <tt>BeanContextServices</tt> associated with this
<tt>BeanContextServicesSupport</tt>.

@return the instance of <tt>BeanContext</tt> 
this object is providing the implementation for."
      end

      class 902171 "BCSSChild"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1752859 // <generalisation>
	  relation 1752859 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1752859 // <generalisation>
	    b parent class_ref 902043 // BCSChild
	end

	attribute 2694939 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value "=  -3263851306889194873L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	class 902299 "BCSSCServiceClassRef"
	  visibility package 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 6817307 "BCSSCServiceClassRef"
	    package explicit_return_type ""
	    nparams 3
	      param inout name "sc" type class_ref 164635 // Class
	      param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	      param inout name "delegated" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " create an instance of a service ref"
	  end

	  operation 6817435 "addRequestor"
	    package explicit_return_type "void"
	    nparams 2
	      param inout name "requestor" explicit_type "Object"
	      param inout name "bcsrl" type class_ref 900379 // BeanContextServiceRevokedListener
	    nexceptions 1
	      exception class_ref 157595 // TooManyListenersException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " add a requestor and assoc listener"
	  end

	  operation 6817563 "removeRequestor"
	    package explicit_return_type "void"
	    nparams 1
	      param inout name "requestor" explicit_type "Object"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " remove a requestor"
	  end

	  operation 6817691 "verifyRequestor"
	    package explicit_return_type "void"
	    nparams 2
	      param inout name "requestor" explicit_type "Object"
	      param inout name "bcsrl" type class_ref 900379 // BeanContextServiceRevokedListener
	    nexceptions 1
	      exception class_ref 157595 // TooManyListenersException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " check a requestors listener"
	  end

	  operation 6817819 "verifyAndMaybeSetProvider"
	    package explicit_return_type "void"
	    nparams 2
	      param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	      param inout name "isDelegated" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6817947 "cloneOfEntries"
	    package return_type class_ref 135323 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818075 "entries"
	    package return_type class_ref 135323 // Iterator
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818203 "isEmpty"
	    package explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818331 "getServiceClass"
	    package return_type class_ref 164635 // Class
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818459 "getServiceProvider"
	    package return_type class_ref 901403 // BeanContextServiceProvider
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818587 "getDelegateProvider"
	    package return_type class_ref 901403 // BeanContextServiceProvider
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818715 "isDelegated"
	    package explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818843 "addRef"
	    package explicit_return_type "void"
	    nparams 1
	      param inout name "delegated" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6818971 "releaseRef"
	    package explicit_return_type "void"
	    nparams 1
	      param inout name "delegated" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819099 "getRefs"
	    package explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819227 "getDelegateRefs"
	    package explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819355 "getServiceRefs"
	    package explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  classrelation 1752987 // serviceClass (<unidirectional association>)
	    relation 1752987 --->
	      a role_name "serviceClass" package
		comment "
fields

"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1752987 // serviceClass (<unidirectional association>)
	      b parent class_ref 164635 // Class
	  end

	  classrelation 1753115 // serviceProvider (<unidirectional association>)
	    relation 1753115 --->
	      a role_name "serviceProvider" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1753115 // serviceProvider (<unidirectional association>)
	      b parent class_ref 901403 // BeanContextServiceProvider
	  end

	  attribute 2695067 "serviceRefs"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 1753243 // delegateProvider (<unidirectional association>)
	    relation 1753243 --->
	      a role_name "delegateProvider" package
		comment " proxy"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1753243 // delegateProvider (<unidirectional association>)
	      b parent class_ref 901403 // BeanContextServiceProvider
	  end

	  attribute 2695195 "delegateRefs"
	    package explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 1753371 // requestors (<unidirectional association>)
	    relation 1753371 --->
	      a role_name "requestors" init_value "=  new HashMap(1)" package
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1753371 // requestors (<unidirectional association>)
	      b parent class_ref 144923 // HashMap
	  end
	end

	class 902427 "BCSSCServiceRef"
	  visibility package 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 6819483 "BCSSCServiceRef"
	    package explicit_return_type ""
	    nparams 2
	      param inout name "scref" type class_ref 902299 // BCSSCServiceClassRef
	      param inout name "isDelegated" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819611 "addRef"
	    package explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819739 "release"
	    package explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819867 "getServiceClassRef"
	    package return_type class_ref 902299 // BCSSCServiceClassRef
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6819995 "isDelegated"
	    package explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  classrelation 1753499 // serviceClassRef (<unidirectional association>)
	    relation 1753499 --->
	      a role_name "serviceClassRef" package
		comment "
fields

"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1753499 // serviceClassRef (<unidirectional association>)
	      b parent class_ref 902299 // BCSSCServiceClassRef
	  end

	  attribute 2695323 "refCnt"
	    package explicit_type "int"
	    init_value "=  1"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 2695451 "delegated"
	    package explicit_type "boolean"
	    init_value "=  false"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	operation 6820123 "BCSSChild"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "bcc" explicit_type "Object"
	    param inout name "peer" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6820251 "usingService"
	  package explicit_return_type "void"
	  nparams 6
	    param inout name "requestor" explicit_type "Object"
	    param inout name "service" explicit_type "Object"
	    param inout name "serviceClass" type class_ref 164635 // Class
	    param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	    param inout name "isDelegated" explicit_type "boolean"
	    param inout name "bcsrl" type class_ref 900379 // BeanContextServiceRevokedListener
	  nexceptions 2
	    exception class_ref 157595 // TooManyListenersException
	    exception class_ref 220315 // UnsupportedOperationException
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " note usage of service per requestor, per service"
	end

	operation 6820379 "releaseService"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "requestor" explicit_type "Object"
	    param inout name "service" explicit_type "Object"
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " release a service reference"
	end

	operation 6820507 "revokeService"
	  package explicit_return_type "void"
	  nparams 3
	    param inout name "serviceClass" type class_ref 164635 // Class
	    param inout name "isDelegated" explicit_type "boolean"
	    param inout name "revokeNow" explicit_type "boolean"
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " revoke a service"
	end

	operation 6820635 "cleanupReferences"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " release all references for this child since it has been unnested."
	end

	operation 6820763 "revokeAllDelegatedServicesNow"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1753627 // serviceClasses (<unidirectional association>)
	  relation 1753627 --->
	    a role_name "serviceClasses" private
	      comment "
fields 

"
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1753627 // serviceClasses (<unidirectional association>)
	    b parent class_ref 144923 // HashMap
	end

	classrelation 1753755 // serviceRequestors (<unidirectional association>)
	  relation 1753755 --->
	    a role_name "serviceRequestors" private
	      transient
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1753755 // serviceRequestors (<unidirectional association>)
	    b parent class_ref 144923 // HashMap
	end
      end

      operation 6820891 "createBCSChild"
	protected return_type class_ref 902043 // BCSChild
	nparams 2
	  param inout name "targetChild" explicit_type "Object"
	  param inout name "peer" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Subclasses can override this method to insert their own subclass
of Child without having to override add() or the other Collection
methods that add children to the set.
</p>

@param targetChild the child to create the Child on behalf of
@param peer        the peer if the targetChild and peer are related by BeanContextProxy"
      end

      class 902555 "BCSSServiceProvider"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1753883 // <realization>
	  relation 1753883 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1753883 // <realization>
	    b parent class_ref 137883 // Serializable
	end

	operation 6821019 "BCSSServiceProvider"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "sc" type class_ref 164635 // Class
	    param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6821147 "getServiceProvider"
	  protected return_type class_ref 901403 // BeanContextServiceProvider
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1754011 // serviceProvider (<unidirectional association>)
	  relation 1754011 --->
	    a role_name "serviceProvider" protected
	      comment "
fields

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1754011 // serviceProvider (<unidirectional association>)
	    b parent class_ref 901403 // BeanContextServiceProvider
	end
      end

      operation 6821275 "createBCSSServiceProvider"
	protected return_type class_ref 902555 // BCSSServiceProvider
	nparams 2
	  param inout name "sc" type class_ref 164635 // Class
	  param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "subclasses can override this method to create new subclasses of
BCSSServiceProvider without having to overrride addService() in
order to instantiate."
      end

      operation 6821403 "addBeanContextServicesListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsl" type class_ref 900251 // BeanContextServicesListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add a BeanContextServicesListener

@throw new NullPointerException"
      end

      operation 6821531 "removeBeanContextServicesListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcsl" type class_ref 900251 // BeanContextServicesListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "remove a BeanContextServicesListener"
      end

      operation 6821659 "addService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add a service"
      end

      operation 6821787 "addService"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	  param inout name "fireEvent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add a service"
      end

      operation 6821915 "revokeService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "bcsp" type class_ref 901403 // BeanContextServiceProvider
	  param inout name "revokeCurrentServicesNow" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "remove a service"
      end

      operation 6822043 "hasService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "has a service, which may be delegated"
      end

      class 902683 "BCSSProxyServiceProvider"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1754139 // <realization>
	  relation 1754139 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1754139 // <realization>
	    b parent class_ref 901403 // BeanContextServiceProvider
	end

	classrelation 1754267 // <realization>
	  relation 1754267 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1754267 // <realization>
	    b parent class_ref 900379 // BeanContextServiceRevokedListener
	end

	operation 6822171 "BCSSProxyServiceProvider"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "bcs" type class_ref 901275 // BeanContextServices
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6822299 "getService"
	  public explicit_return_type "Object"
	  nparams 4
	    param inout name "bcs" type class_ref 901275 // BeanContextServices
	    param inout name "requestor" explicit_type "Object"
	    param inout name "serviceClass" type class_ref 164635 // Class
	    param inout name "serviceSelector" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6822427 "releaseService"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "bcs" type class_ref 901275 // BeanContextServices
	    param inout name "requestor" explicit_type "Object"
	    param inout name "service" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6822555 "getCurrentServiceSelectors"
	  public return_type class_ref 135323 // Iterator
	  nparams 2
	    param inout name "bcs" type class_ref 901275 // BeanContextServices
	    param inout name "serviceClass" type class_ref 164635 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6822683 "serviceRevoked"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "bcsre" type class_ref 900507 // BeanContextServiceRevokedEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1754395 // nestingCtxt (<unidirectional association>)
	  relation 1754395 --->
	    a role_name "nestingCtxt" private
	      comment "
fields

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1754395 // nestingCtxt (<unidirectional association>)
	    b parent class_ref 901275 // BeanContextServices
	end
      end

      operation 6822811 "getService"
	public explicit_return_type "Object"
	nparams 5
	  param inout name "child" type class_ref 899739 // BeanContextChild
	  param inout name "requestor" explicit_type "Object"
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "serviceSelector" explicit_type "Object"
	  param inout name "bcsrl" type class_ref 900379 // BeanContextServiceRevokedListener
	nexceptions 1
	  exception class_ref 157595 // TooManyListenersException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "obtain a service which may be delegated"
      end

      operation 6822939 "releaseService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "child" type class_ref 899739 // BeanContextChild
	  param inout name "requestor" explicit_type "Object"
	  param inout name "service" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "release a service"
      end

      operation 6823067 "getCurrentServiceClasses"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return an iterator for all the currently registered service classes."
      end

      operation 6823195 "getCurrentServiceSelectors"
	public return_type class_ref 135323 // Iterator
	nparams 1
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return an iterator for all the currently available service selectors
(if any) available for the specified service."
      end

      operation 6823323 "serviceAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcssae" type class_ref 900635 // BeanContextServiceAvailableEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "BeanContextServicesListener callback, propagates event to all 
currently registered listeners and BeanContextServices children,
if this BeanContextService does not already implement this service
itself.

subclasses may override or envelope this method to implement their
own propagation semantics."
      end

      operation 6823451 "serviceRevoked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcssre" type class_ref 900507 // BeanContextServiceRevokedEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "BeanContextServicesListener callback, propagates event to all 
currently registered listeners and BeanContextServices children,
if this BeanContextService does not already implement this service
itself.

subclasses may override or envelope this method to implement their
own propagation semantics."
      end

      operation 6823579 "getChildBeanContextServicesListener"
	class_operation protected return_type class_ref 900251 // BeanContextServicesListener
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <tt>BeanContextServicesListener</tt> (if any) of the specified
child.

@param child the specified child
@return the BeanContextServicesListener (if any) of the specified child"
      end

      operation 6823707 "childJustRemovedHook"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "Object"
	  param inout name "bcsc" type class_ref 902043 // BCSChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called from superclass child removal operations after a child
has been successfully removed. called with child synchronized.

This subclass uses this hook to immediately revoke any services
being used by this child if it is a BeanContextChild.

subclasses may envelope this method in order to implement their
own child removal side-effects."
      end

      operation 6823835 "releaseBeanContextResources"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called from setBeanContext to notify a BeanContextChild
to release resources obtained from the nesting BeanContext.

This method revokes any services obtained from its parent.

subclasses may envelope this method to implement their own semantics."
      end

      operation 6823963 "initializeBeanContextResources"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called from setBeanContext to notify a BeanContextChild
to allocate resources obtained from the nesting BeanContext.

subclasses may envelope this method to implement their own semantics."
      end

      operation 6824091 "fireServiceAdded"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "serviceClass" type class_ref 164635 // Class
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a <tt>BeanContextServiceEvent</tt> notifying of a new service."
      end

      operation 6824219 "fireServiceAdded"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bcssae" type class_ref 900635 // BeanContextServiceAvailableEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a <tt>BeanContextServiceAvailableEvent</tt> indicating that a new
service has become available.

@param bcssae the <tt>BeanContextServiceAvailableEvent</tt>"
      end

      operation 6824347 "fireServiceRevoked"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bcsre" type class_ref 900507 // BeanContextServiceRevokedEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a <tt>BeanContextServiceEvent</tt> notifying of a service being revoked.

@param bcsre the <tt>BeanContextServiceRevokedEvent</tt>"
      end

      operation 6824475 "fireServiceRevoked"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "serviceClass" type class_ref 164635 // Class
	  param inout name "revokeNow" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a <tt>BeanContextServiceRevokedEvent</tt> 
indicating that a particular service is 
no longer available."
      end

      operation 6824603 "bcsPreSerializationHook"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called from BeanContextSupport writeObject before it serializes the
children ...

This class will serialize any Serializable BeanContextServiceProviders
herein.

subclasses may envelope this method to insert their own serialization
processing that has to occur prior to serialization of the children"
      end

      operation 6824731 "bcsPreDeserializationHook"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called from BeanContextSupport readObject before it deserializes the
children ...

This class will deserialize any Serializable BeanContextServiceProviders
serialized earlier thus making them available to the children when they
deserialized.

subclasses may envelope this method to insert their own serialization
processing that has to occur prior to serialization of the children"
      end

      operation 6824859 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "serialize the instance"
      end

      operation 6824987 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "deserialize the instance"
      end

      classrelation 1754523 // services (<unidirectional association>)
	relation 1754523 --->
	  a role_name "services" protected
	    comment "
fields


all accesses to the <code> protected transient HashMap services </code>
field should be synchronized on that object

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1754523 // services (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      attribute 2695579 "serializable"
	protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of instances of a serializable <tt>BeanContextServceProvider</tt>.
"
      end

      classrelation 1754651 // proxy (<unidirectional association>)
	relation 1754651 --->
	  a role_name "proxy" protected
	    comment "
Delegate for the <tt>BeanContextServiceProvider</tt>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1754651 // proxy (<unidirectional association>)
	  b parent class_ref 902683 // BCSSProxyServiceProvider
      end

      classrelation 1754779 // bcsListeners (<unidirectional association>)
	relation 1754779 --->
	  a role_name "bcsListeners" protected
	    comment "
List of <tt>BeanContextServicesListener</tt> objects.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1754779 // bcsListeners (<unidirectional association>)
	  b parent class_ref 137627 // ArrayList
      end
    end

    class 901787 "BeanContextSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This helper class provides a utility implementation of the
java.beans.beancontext.BeanContext interface.
</p>
<p>
Since this class directly implements the BeanContext interface, the class
can, and is intended to be used either by subclassing this implementation,
or via ad-hoc delegation of an instance of this class from another.
</p>

@author Laurence P. G. Cable
@version 1.46, 01/13/03
@since 1.2"
      classrelation 1750939 // <generalisation>
	relation 1750939 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1750939 // <generalisation>
	  b parent class_ref 900123 // BeanContextChildSupport
      end

      classrelation 1751067 // <realization>
	relation 1751067 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1751067 // <realization>
	  b parent class_ref 890011 // BeanContext
      end

      classrelation 1751195 // <realization>
	relation 1751195 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1751195 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 1751323 // <realization>
	relation 1751323 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1751323 // <realization>
	  b parent class_ref 367771 // PropertyChangeListener
      end

      classrelation 1751451 // <realization>
	relation 1751451 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1751451 // <realization>
	  b parent class_ref 855067 // VetoableChangeListener
      end

      attribute 2693787 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -4879613978649577204L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Fix for bug 4282900 to pass JCK regression test"
      end

      operation 6807067 "BeanContextSupport"
	public explicit_return_type ""
	nparams 4
	  param inout name "peer" type class_ref 890011 // BeanContext
	  param inout name "lcle" type class_ref 138907 // Locale
	  param inout name "dTime" explicit_type "boolean"
	  param inout name "visible" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Construct a BeanContextSupport instance


@param peer	The peer <tt>BeanContext</tt> we are 
                 supplying an implementation for, 
                 or <tt>null</tt> 
                 if this object is its own peer
@param lcle	The current Locale for this BeanContext. If 
                 <tt>lcle</tt> is <tt>null</tt>, the default locale 
                 is assigned to the <tt>BeanContext</tt> instance. 
@param dTime	The initial state, 
                 <tt>true</tt> if in design mode, 
                 <tt>false</tt> if runtime.
@param visible	The initial visibility.
@see java.util.Locale#getDefault()      
@see java.util.Locale#setDefault(java.util.Locale)  "
      end

      operation 6807195 "BeanContextSupport"
	public explicit_return_type ""
	nparams 3
	  param inout name "peer" type class_ref 890011 // BeanContext
	  param inout name "lcle" type class_ref 138907 // Locale
	  param inout name "dtime" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance using the specified Locale and design mode.

@param peer	The peer <tt>BeanContext</tt> we 
                 are supplying an implementation for, 
                 or <tt>null</tt> if this object is its own peer
@param lcle	The current Locale for this <tt>BeanContext</tt>. If 
                 <tt>lcle</tt> is <tt>null</tt>, the default locale 
                 is assigned to the <tt>BeanContext</tt> instance. 
@param dtime	The initial state, <tt>true</tt> 
                 if in design mode, 
                 <tt>false</tt> if runtime.
@see java.util.Locale#getDefault()      
@see java.util.Locale#setDefault(java.util.Locale)  "
      end

      operation 6807323 "BeanContextSupport"
	public explicit_return_type ""
	nparams 2
	  param inout name "peer" type class_ref 890011 // BeanContext
	  param inout name "lcle" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance using the specified locale

@param peer	The peer BeanContext we are 
                 supplying an implementation for, 
                 or <tt>null</tt> if this object 
                 is its own peer
@param lcle	The current Locale for this 
                 <tt>BeanContext</tt>. If 
                 <tt>lcle</tt> is <tt>null</tt>, 
                 the default locale 
                 is assigned to the <tt>BeanContext</tt> 
                 instance.
@see java.util.Locale#getDefault()      
@see java.util.Locale#setDefault(java.util.Locale)   "
      end

      operation 6807451 "BeanContextSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "peer" type class_ref 890011 // BeanContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance using with a default locale

@param peer	The peer <tt>BeanContext</tt> we are 
                 supplying an implementation for, 
                 or <tt>null</tt> if this object 
                 is its own peer"
      end

      operation 6807579 "BeanContextSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance that is not a delegate of another object"
      end

      operation 6807707 "getBeanContextPeer"
	public return_type class_ref 890011 // BeanContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the instance of <tt>BeanContext</tt> that
this object is providing the implementation for.
@return the BeanContext instance "
      end

      operation 6807835 "instantiateChild"
	public explicit_return_type "Object"
	nparams 1
	  param in name "beanName" explicit_type "String"
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
The instantiateChild method is a convenience hook 
in BeanContext to simplify
the task of instantiating a Bean, nested, 
into a <tt>BeanContext</tt>.
</p>
<p>
The semantics of the beanName parameter are defined by java.beans.Beans.instantate.
</p>

@param beanName the name of the Bean to instantiate within this BeanContext
@throws IOException if there is an I/O error when the bean is being deserialized
@throws ClassNotFoundException if the class 
identified by the beanName parameter is not found
@return the new object"
      end

      operation 6807963 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of children currently nested in 
this BeanContext.

@return number of children"
      end

      operation 6808091 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not this 
<tt>BeanContext</tt> is empty.
A <tt>BeanContext</tt> is considered 
empty when it contains zero 
nested children.
@return if there are not children"
      end

      operation 6808219 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether or not the specified object 
is currently a child of this <tt>BeanContext</tt>.
@param o the Object in question
@return if this object is a child"
      end

      operation 6808347 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether or not the specified object 
is currently a child of this <tt>BeanContext</tt>.
@param o the Object in question
@return if this object is a child"
      end

      operation 6808475 "iterator"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all JavaBean or <tt>BeanContext</tt> instances 
currently nested in this <tt>BeanContext</tt>.
@return an <tt>Iterator</tt> of the nested children"
      end

      operation 6808603 "toArray"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all JavaBean or <tt>BeanContext</tt> 
instances currently nested in this BeanContext."
      end

      operation 6808731 "toArray"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "arry" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an array containing all children of 
this <tt>BeanContext</tt> that match
the types contained in arry.
@param arry The array of object 
types that are of interest.
@return an array of children"
      end

      class 901915 "BCSIterator"
	visibility protected 
	nactuals 4
	actual class class_ref 135323 // Iterator
	  rank 0 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 1 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 2 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 3 explicit_value ""
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1751579 // <realization>
	  relation 1751579 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1751579 // <realization>
	    b parent class_ref 135323 // Iterator
	end

	operation 6808859 "BCSIterator"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "i" type class_ref 135323 // Iterator
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6808987 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809115 "next"
	  public explicit_return_type "Object"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809243 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1751707 // src (<unidirectional association>)
	  relation 1751707 --->
	    a role_name "src" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1751707 // src (<unidirectional association>)
	    b parent class_ref 135323 // Iterator
	end
      end

      class 902043 "BCSChild"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1751835 // <realization>
	  relation 1751835 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1751835 // <realization>
	    b parent class_ref 137883 // Serializable
	end

	attribute 2693915 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value "=  -5815286101609939109L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6809371 "BCSChild"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "bcc" explicit_type "Object"
	    param inout name "peer" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809499 "getChild"
	  package explicit_return_type "Object"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809627 "setRemovePending"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "v" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809755 "isRemovePending"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6809883 "isProxyPeer"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6810011 "getProxyPeer"
	  package explicit_return_type "Object"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2694043 "child"
	  private explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "fields
"
	end

	attribute 2694171 "proxyPeer"
	  private explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2694299 "removePending"
	  private explicit_type "boolean"
	  cpp_decl ""
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 6810139 "createBCSChild"
	protected return_type class_ref 902043 // BCSChild
	nparams 2
	  param inout name "targetChild" explicit_type "Object"
	  param inout name "peer" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Subclasses can override this method to insert their own subclass
of Child without having to override add() or the other Collection
methods that add children to the set.
</p>

@param targetChild the child to create the Child on behalf of
@param peer        the peer if the tragetChild and the peer are related by an implementation of BeanContextProxy"
      end

      operation 6810267 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "targetChild" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds/nests a child within this <tt>BeanContext</tt>.
<p>
Invoked as a side effect of java.beans.Beans.instantiate().
If the child object is not valid for adding then this method
throws an IllegalStateException.
</p>


@param targetChild The child objects to nest 
within this <tt>BeanContext</tt>
@return true if the child was added successfully.
@see #validatePendingAdd"
      end

      operation 6810395 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "targetChild" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a child from this BeanContext.  If the child object is not
for adding then this method throws an IllegalStateException.
@param targetChild The child objects to remove
@see #validatePendingRemove"
      end

      operation 6810523 "remove"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "targetChild" explicit_type "Object"
	  param inout name "callChildSetBC" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "internal remove used when removal caused by 
unexpected <tt>setBeanContext</tt> or
by <tt>remove()</tt> invocation.
@param targetChild the JavaBean, BeanContext, or Object to be removed
@param callChildSetBC used to indicate that 
the child should be notified that it is no 
longer nested in this <tt>BeanContext</tt>."
      end

      operation 6810651 "containsAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 135067 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests to see if all objects in the
specified <tt>Collection</tt> are children of
this <tt>BeanContext</tt>.
@param c the specified <tt>Collection</tt> 

@return <tt>true</tt> if all objects 
in the collection are children of 
this <tt>BeanContext</tt>, false if not."
      end

      operation 6810779 "addAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 135067 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add Collection to set of Children (Unsupported)
implementations must synchronized on the hierarchy lock and \"children\" protected field
@throws UnsupportedOperationException"
      end

      operation 6810907 "removeAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 135067 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "remove all specified children (Unsupported)
implementations must synchronized on the hierarchy lock and \"children\" protected field
@throws UnsupportedOperationException"
      end

      operation 6811035 "retainAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 135067 // Collection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "retain only specified children (Unsupported)
implementations must synchronized on the hierarchy lock and \"children\" protected field
@throws UnsupportedOperationException"
      end

      operation 6811163 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "clear the children (Unsupported)
implementations must synchronized on the hierarchy lock and \"children\" protected field
@throws UnsupportedOperationException"
      end

      operation 6811291 "addBeanContextMembershipListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcml" type class_ref 899867 // BeanContextMembershipListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a BeanContextMembershipListener

@param  bcml the BeanContextMembershipListener to add
@throws NullPointerException"
      end

      operation 6811419 "removeBeanContextMembershipListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bcml" type class_ref 899867 // BeanContextMembershipListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a BeanContextMembershipListener

@param  bcml the BeanContextMembershipListener to remove
@throws NullPointerException"
      end

      operation 6811547 "getResourceAsStream"
	public return_type class_ref 179099 // InputStream
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "bcc" type class_ref 899739 // BeanContextChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param name the name of the resource requested.
@param bcc  the child object making the request.

@return  the requested resource as an InputStream
@throws  NullPointerException"
      end

      operation 6811675 "getResource"
	public return_type class_ref 269467 // URL
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "bcc" type class_ref 899739 // BeanContextChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param name the name of the resource requested.
@param bcc  the child object making the request.

@return the requested resource as an InputStream"
      end

      operation 6811803 "setDesignTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dTime" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the new design time value for this <tt>BeanContext</tt>.
@param dTime the new designTime value"
      end

      operation 6811931 "isDesignTime"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not this object is in
currently in design time mode.
@return <tt>true</tt> if in design time mode, 
<tt>false</tt> if not"
      end

      operation 6812059 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newLocale" type class_ref 138907 // Locale
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the locale of this BeanContext.
@param newLocale the new locale. This method call will have
       no effect if newLocale is <CODE>null</CODE>.
@throws PropertyVetoException if the new value is rejected"
      end

      operation 6812187 "getLocale"
	public return_type class_ref 138907 // Locale
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locale for this <tt>BeanContext</tt>.

@return the current Locale of the <tt>BeanContext</tt>"
      end

      operation 6812315 "needsGui"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
This method is typically called from the environment in order to determine
if the implementor \"needs\" a GUI.
</p>
<p>
The algorithm used herein tests the BeanContextPeer, and its current children
to determine if they are either Containers, Components, or if they implement
Visibility and return needsGui() == true.
</p>
@return <tt>true</tt> if the implementor needs a GUI"
      end

      operation 6812443 "dontUseGui"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "notify this instance that it may no longer render a GUI."
      end

      operation 6812571 "okToUseGui"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify this instance that it may now render a GUI"
      end

      operation 6812699 "avoidingGui"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to determine if the <tt>BeanContext</tt> 
child is avoiding using its GUI.
@return is this instance avoiding using its GUI?
@see Visibility"
      end

      operation 6812827 "isSerializing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this <tt>BeanContext</tt> in the 
process of being serialized?
@return if this <tt>BeanContext</tt> is 
currently being serialized"
      end

      operation 6812955 "bcsChildren"
	protected return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator of all children 
of this <tt>BeanContext</tt>.
@return an iterator for all the current BCSChild values "
      end

      operation 6813083 "bcsPreSerializationHook"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called by writeObject after defaultWriteObject() but prior to
serialization of currently serializable children.

This method may be overridden by subclasses to perform custom
serialization of their state prior to this superclass serializing
the children.

This method should not however be used by subclasses to replace their
own implementation (if any) of writeObject()."
      end

      operation 6813211 "bcsPreDeserializationHook"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called by readObject after defaultReadObject() but prior to
deserialization of any children.

This method may be overridden by subclasses to perform custom
deserialization of their state prior to this superclass deserializing
the children.

This method should not however be used by subclasses to replace their
own implementation (if any) of readObject()."
      end

      operation 6813339 "childDeserializedHook"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "Object"
	  param inout name "bcsc" type class_ref 902043 // BCSChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by readObject with the newly deserialized child and BCSChild.
@param child the newly deserialized child
@param bcsc the newly deserialized BCSChild"
      end

      operation 6813467 "serialize"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	  param inout name "coll" type class_ref 135067 // Collection
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by writeObject to serialize a Collection.
@param oos the <tt>ObjectOutputStream</tt> 
to use during serialization
@param coll the <tt>Collection</tt> to serialize
@throws IOException if serialization failed"
      end

      operation 6813595 "deserialize"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	  param inout name "coll" type class_ref 135067 // Collection
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "used by readObject to deserialize a collection.
@param ois the ObjectInputStream to use
@param coll the Collection"
      end

      operation 6813723 "writeChildren"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to serialize all children of 
this <tt>BeanContext</tt>.
@param oos the <tt>ObjectOutputStream</tt> 
to use during serialization
@throws IOException if serialization failed"
      end

      operation 6813851 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serialize the BeanContextSupport, if this instance has a distinct 
peer (that is this object is acting as a delegate for another) then
the children of this instance are not serialized here due to a 
'chicken and egg' problem that occurs on deserialization of the 
children at the same time as this instance. 

Therefore in situations where there is a distinct peer to this instance
it should always call writeObject() followed by writeChildren() and
readObject() followed by readChildren().

@param oos the ObjectOutputStream"
      end

      operation 6813979 "readChildren"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When an instance of this class is used as a delegate for the
implementation of the BeanContext protocols (and its subprotocols)
there exists a 'chicken and egg' problem during deserialization "
      end

      operation 6814107 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "deserialize contents ... if this instance has a distinct peer the
children are *not* serialized here, the peer's readObject() must call
readChildren() after deserializing this instance."
      end

      operation 6814235 "vetoableChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pce" type class_ref 386075 // PropertyChangeEvent
	nexceptions 1
	  exception class_ref 855195 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "subclasses may envelope to monitor veto child property changes."
      end

      operation 6814363 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pce" type class_ref 386075 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "subclasses may envelope to monitor child property changes."
      end

      operation 6814491 "validatePendingAdd"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "targetChild" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Subclasses of this class may override, or envelope, this method to
add validation behavior for the BeanContext to examine child objects
immediately prior to their being added to the BeanContext. 
</p>

@return true iff the child may be added to this BeanContext, otherwise false."
      end

      operation 6814619 "validatePendingRemove"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "targetChild" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Subclasses of this class may override, or envelope, this method to
add validation behavior for the BeanContext to examine child objects
immediately prior to their being removed from the BeanContext. 
</p>

@return true iff the child may be removed from this BeanContext, otherwise false."
      end

      operation 6814747 "childJustAddedHook"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "Object"
	  param inout name "bcsc" type class_ref 902043 // BCSChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "subclasses may override this method to simply extend add() semantics
after the child has been added and before the event notification has
occurred. The method is called with the child synchronized."
      end

      operation 6814875 "childJustRemovedHook"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "child" explicit_type "Object"
	  param inout name "bcsc" type class_ref 902043 // BCSChild
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "subclasses may override this method to simply extend remove() semantics
after the child has been removed and before the event notification has
occurred. The method is called with the child synchronized."
      end

      operation 6815003 "getChildVisibility"
	class_operation protected return_type class_ref 899227 // Visibility
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Component (if any) associated with the specified child.
@param child the specified child
@return the Component (if any) associated with the specified child."
      end

      operation 6815131 "getChildSerializable"
	class_operation protected return_type class_ref 137883 // Serializable
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Serializable (if any) associated with the specified Child
@param child the specified child
@return the Serializable (if any) associated with the specified Child"
      end

      operation 6815259 "getChildPropertyChangeListener"
	class_operation protected return_type class_ref 367771 // PropertyChangeListener
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the PropertyChangeListener 
(if any) of the specified child
@param child the specified child
@return the PropertyChangeListener (if any) of the specified child"
      end

      operation 6815387 "getChildVetoableChangeListener"
	class_operation protected return_type class_ref 855067 // VetoableChangeListener
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the VetoableChangeListener 
(if any) of the specified child
@param child the specified child
@return the VetoableChangeListener (if any) of the specified child"
      end

      operation 6815515 "getChildBeanContextMembershipListener"
	class_operation protected return_type class_ref 899867 // BeanContextMembershipListener
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the BeanContextMembershipListener 
(if any) of the specified child
@param child the specified child
@return the BeanContextMembershipListener (if any) of the specified child"
      end

      operation 6815643 "getChildBeanContextChild"
	class_operation protected return_type class_ref 899739 // BeanContextChild
	nparams 1
	  param inout name "child" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the BeanContextChild (if any) of the specified child
@param child the specified child
@return  the BeanContextChild (if any) of the specified child
@throws  IllegalArgumentException if child implements both BeanContextChild and BeanContextProxy"
      end

      operation 6815771 "fireChildrenAdded"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bcme" type class_ref 901019 // BeanContextMembershipEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire a BeanContextshipEvent on the BeanContextMembershipListener interface"
      end

      operation 6815899 "fireChildrenRemoved"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "bcme" type class_ref 901019 // BeanContextMembershipEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fire a BeanContextshipEvent on the BeanContextMembershipListener interface"
      end

      operation 6816027 "initialize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "protected method called from constructor and readObject to initialize
transient state of BeanContextSupport instance.

This class uses this method to instantiate inner class listeners used
to monitor PropertyChange and VetoableChange events on children.

subclasses may envelope this method to add their own initialization
behavior"
      end

      operation 6816155 "copyChildren"
	protected explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the this BeanContext's children.
@return a copy of the current nested children"
      end

      operation 6816283 "classEquals"
	class_operation protected explicit_return_type "boolean"
	nparams 2
	  param inout name "first" type class_ref 164635 // Class
	  param inout name "second" type class_ref 164635 // Class
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests to see if two class objects, 
or their names are equal.
@param first the first object
@param second the second object
@return true if equal, false if not"
      end

      classrelation 1751963 // children (<unidirectional association>)
	relation 1751963 --->
	  a role_name "children" protected
	    comment "
fields


all accesses to the <code> protected HashMap children </code> field
shall be synchronized on that object.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1751963 // children (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      attribute 2694427 "serializable"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " children serializable"
      end

      classrelation 1752091 // bcmListeners (<unidirectional association>)
	relation 1752091 --->
	  a role_name "bcmListeners" protected
	    comment "
all accesses to the <code> protected ArrayList bcmListeners </code> field
shall be synchronized on that object.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1752091 // bcmListeners (<unidirectional association>)
	  b parent class_ref 137627 // ArrayList
      end

      classrelation 1752219 // locale (<unidirectional association>)
	relation 1752219 --->
	  a role_name "locale" protected
	    comment " 

The current locale of this BeanContext.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1752219 // locale (<unidirectional association>)
	  b parent class_ref 138907 // Locale
      end

      attribute 2694555 "okToUseGui"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <tt>boolean</tt> indicating if this 
instance may now render a GUI.
"
      end

      attribute 2694683 "designTime"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <tt>boolean</tt> indicating whether or not 
this object is currently in design time mode.
"
      end

      classrelation 1752347 // childPCL (<unidirectional association>)
	relation 1752347 --->
	  a role_name "childPCL" private
	    comment "
transient 

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1752347 // childPCL (<unidirectional association>)
	  b parent class_ref 367771 // PropertyChangeListener
      end

      classrelation 1752475 // childVCL (<unidirectional association>)
	relation 1752475 --->
	  a role_name "childVCL" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1752475 // childVCL (<unidirectional association>)
	  b parent class_ref 855067 // VetoableChangeListener
      end

      attribute 2694811 "serializing"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 166427 "beancontext"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 668059 "BeanContextChild"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeListener;
import java.beans.VetoableChangeListener;
import java.beans.PropertyVetoException;
import java.beans.beancontext.BeanContext;
${definition}"
      associated_classes
	class_ref 899739 // BeanContextChild
      end
      comment "@(#)BeanContextChild.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668187 "BeanContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.DesignMode;
import java.beans.Visibility;
import java.io.InputStream;
import java.io.IOException;
import java.net.URL;
import java.util.Collection;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 890011 // BeanContext
      end
      comment "@(#)BeanContext.java	1.23 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668315 "BeanContextChildComponentProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
${definition}"
      associated_classes
	class_ref 899995 // BeanContextChildComponentProxy
      end
      comment "@(#)BeanContextChildComponentProxy.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668443 "BeanContextServiceRevokedListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.beancontext.BeanContextServiceRevokedEvent;
import java.util.EventListener;
${definition}"
      associated_classes
	class_ref 900379 // BeanContextServiceRevokedListener
      end
      comment "@(#)BeanContextServiceRevokedListener.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668571 "BeanContextServicesListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.beancontext.BeanContextServiceAvailableEvent;
import java.beans.beancontext.BeanContextServiceRevokedEvent;
import java.beans.beancontext.BeanContextServiceRevokedListener;
${definition}"
      associated_classes
	class_ref 900251 // BeanContextServicesListener
      end
      comment "@(#)BeanContextServicesListener.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668699 "BeanContextChildSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 900123 // BeanContextChildSupport
      end
      comment "@(#)BeanContextChildSupport.java	1.16 04/03/04

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668827 "BeanContextContainerProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Container;
${definition}"
      associated_classes
	class_ref 900763 // BeanContextContainerProxy
      end
      comment "@(#)BeanContextContainerProxy.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 668955 "BeanContextEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import java.beans.beancontext.BeanContext;
${definition}"
      associated_classes
	class_ref 900891 // BeanContextEvent
      end
      comment "@(#)BeanContextEvent.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669083 "BeanContextMembershipEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import java.beans.beancontext.BeanContext;
import java.beans.beancontext.BeanContextEvent;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 901019 // BeanContextMembershipEvent
      end
      comment "@(#)BeanContextMembershipEvent.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669211 "BeanContextMembershipListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.beancontext.BeanContextMembershipEvent;
import java.util.EventListener;
${definition}"
      associated_classes
	class_ref 899867 // BeanContextMembershipListener
      end
      comment "@(#)BeanContextMembershipListener.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669339 "BeanContextProxy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 901147 // BeanContextProxy
      end
      comment "@(#)BeanContextProxy.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669467 "BeanContextServiceAvailableEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.beancontext.BeanContextChild;
import java.beans.beancontext.BeanContextEvent;
import java.beans.beancontext.BeanContextServices;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 900635 // BeanContextServiceAvailableEvent
      end
      comment "@(#)BeanContextServiceAvailableEvent.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669595 "BeanContextServiceProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 901403 // BeanContextServiceProvider
      end
      comment "@(#)BeanContextServiceProvider.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669723 "BeanContextServiceProviderBeanInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.BeanInfo;
${definition}"
      associated_classes
	class_ref 901531 // BeanContextServiceProviderBeanInfo
      end
      comment "@(#)BeanContextServiceProviderBeanInfo.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669851 "BeanContextServiceRevokedEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.beancontext.BeanContextEvent;
import java.beans.beancontext.BeanContextServices;
${definition}"
      associated_classes
	class_ref 900507 // BeanContextServiceRevokedEvent
      end
      comment "@(#)BeanContextServiceRevokedEvent.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 669979 "BeanContextServices"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.TooManyListenersException;
import java.beans.beancontext.BeanContext;
import java.beans.beancontext.BeanContextServiceProvider;
import java.beans.beancontext.BeanContextServicesListener;
${definition}"
      associated_classes
	class_ref 901275 // BeanContextServices
      end
      comment "@(#)BeanContextServices.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 670107 "BeanContextSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Container;
import java.beans.Beans;
import java.beans.AppletInitializer;
import java.beans.DesignMode;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.beans.PropertyVetoException;
import java.beans.Visibility;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 901787 // BeanContextSupport
      end
      comment "@(#)BeanContextSupport.java	1.46 03/01/13

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 670235 "BeanContextServicesSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.TooManyListenersException;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 901659 // BeanContextServicesSupport
      end
      comment "@(#)BeanContextServicesSupport.java	1.23 04/04/15

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
