class Formatter
!!!8045595.java!!!	getHead(inout h : Handler) : String
	return "";
!!!8045723.java!!!	getTail(inout h : Handler) : String
	return "";
!!!8045851.java!!!	formatMessage(inout record : LogRecord) : String
	String format = record.getMessage();
	java.util.ResourceBundle catalog = record.getResourceBundle();
	if (catalog != null) {
//	    // We cache catalog lookups.  This is mostly to avoid the
//	    // cost of exceptions for keys that are not in the catalog.
//	    if (catalogCache == null) {
//		catalogCache = new HashMap();
//	    }
//	    format = (String)catalogCache.get(record.essage);
//	    if (format == null) {
	        try {
	            format = catalog.getString(record.getMessage());
	        } catch (java.util.MissingResourceException ex) {
		    // Drop through.  Use record message as format
		    format = record.getMessage();
		}
//		catalogCache.put(record.message, format);
//	    }
	}
  	// Do the formatting.
	try {
	    Object parameters[] = record.getParameters();
 	    if (parameters == null || parameters.length == 0) {
		// No parameters.  Just return format string.
		return format;
	    }
	    // Is is a java.text style format?
            // Ideally we could match with
            // Pattern.compile("\\{\\d").matcher(format).find())
            // However the cost is 14% higher, so we cheaply check for
            // 1 of the first 4 parameters
            if (format.indexOf("{0") >= 0 || format.indexOf("{1") >=0 ||
                        format.indexOf("{2") >=0|| format.indexOf("{3") >=0) {
	        return java.text.MessageFormat.format(format, parameters);
	    }
	    return format;

	} catch (Exception ex) {
	    // Formatting failed: use localized format string.
	    return format;
	}
