class NumericAttribute
!!!10024731.java!!!	NumericAttribute(in d : int, inout s : Object, in r : String)
	    super(d, s, r);
	    rtfDefault = 0;
	    swingDefault = null;
	    scale = 1f;
!!!10024859.java!!!	NumericAttribute(in d : int, inout s : Object, in r : String, in ds : int, in dr : int)
	    this(d, s, r, new Integer(ds), dr, 1f);
!!!10024987.java!!!	NumericAttribute(in d : int, inout s : Object, in r : String, inout ds : Number, in dr : int, in sc : float)
	    super(d, s, r);
	    swingDefault = ds;
	    rtfDefault = dr;
	    scale = sc;
!!!10025115.java!!!	NewTwips(in d : int, inout s : Object, in r : String, in ds : float, in dr : int) : NumericAttribute
	    return new NumericAttribute(d, s, r, new Float(ds), dr, 20f);
!!!10025243.java!!!	NewTwips(in d : int, inout s : Object, in r : String, in dr : int) : NumericAttribute
	    return new NumericAttribute(d, s, r, null, dr, 20f);
!!!10025371.java!!!	set(inout target : MutableAttributeSet) : boolean
	    return false;
!!!10025499.java!!!	set(inout target : MutableAttributeSet, in parameter : int) : boolean
	    Number swingValue;

	    if (scale == 1f)
	        swingValue = new Integer(parameter);
	    else
	        swingValue = new Float(parameter / scale);
	    target.addAttribute(swingName, swingValue);
	    return true;
!!!10025627.java!!!	setDefault(inout target : MutableAttributeSet) : boolean
	    Number old = (Number)target.getAttribute(swingName);
	    if (old == null)
	        old = swingDefault;
	    if (old != null && (
		    (scale == 1f && old.intValue() == rtfDefault) ||
		    (Math.round(old.floatValue() * scale) == rtfDefault)
	       ))
	        return true;
	    set(target, rtfDefault);
	    return true;
!!!10025755.java!!!	writeValue(inout o_value : Object, inout target : RTFGenerator, inout force : boolean) : boolean
	    Number value = (Number)o_value;
	    if (value == null)
	        value = swingDefault;
	    if (value == null) {
		/* TODO: What is the proper behavior if the Swing object does
		   not specify a value, and we don't know its default value?
		   Currently we pretend that the RTF default value is
		   equivalent (probably a workable assumption) */
		return true;
	    }
	    int int_value = Math.round(value.floatValue() * scale);
	    if (force || (int_value != rtfDefault))
	        target.writeControlWord(rtfName, int_value);
	    return true;
