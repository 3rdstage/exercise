class ToolBarBorder
!!!9468059.java!!!	paintBorder(inout c : Component, inout g : Graphics, in x : int, in y : int, in w : int, in h : int) : void
	    g.translate( x, y );

	    if ( ((JToolBar) c).isFloatable() )
	    {
	        if ( ((JToolBar) c).getOrientation() == HORIZONTAL )
		{
                    int shift = MetalLookAndFeel.usingOcean() ? -1 : 0;
		    bumps.setBumpArea( 10, c.getSize().height - 4 );
                    if( MetalUtils.isLeftToRight(c) ) {
                        bumps.paintIcon( c, g, 2, 2 + shift );
                    } else {
                        bumps.paintIcon( c, g, c.getBounds().width-12,
                                         2 + shift );
                    }
	        }
		else // vertical
		{
		    bumps.setBumpArea( c.getSize().width - 4, 10 );
		    bumps.paintIcon( c, g, 2, 2 );
	        }

	    }

            if (((JToolBar) c).getOrientation() == HORIZONTAL && 
                               MetalLookAndFeel.usingOcean()) {
                g.setColor(MetalLookAndFeel.getControl());
                g.drawLine(0, h - 2, w, h - 2);
                g.setColor(UIManager.getColor("ToolBar.borderColor"));
                g.drawLine(0, h - 1, w, h - 1);
            }

	    g.translate( -x, -y );
!!!9468187.java!!!	getBorderInsets(inout c : Component) : Insets
	    return getBorderInsets(c, new Insets(0,0,0,0));
!!!9468315.java!!!	getBorderInsets(inout c : Component, inout newInsets : Insets) : Insets
            if (MetalLookAndFeel.usingOcean()) {
                newInsets.set(1, 2, 3, 2);
            }
            else {
                newInsets.top = newInsets.left = newInsets.bottom = newInsets.right = 2;
            }

	    if ( ((JToolBar) c).isFloatable() ) {
	        if ( ((JToolBar) c).getOrientation() == HORIZONTAL ) {
		    if (c.getComponentOrientation().isLeftToRight()) {
	        	newInsets.left = 16;
		    } else {
	        	newInsets.right = 16;
		    }
	        } else {// vertical
		    newInsets.top = 16;
	        }
	    }

	    Insets margin = ((JToolBar) c).getMargin();

	    if ( margin != null ) {
	        newInsets.left   += margin.left;
	        newInsets.top    += margin.top;
	        newInsets.right  += margin.right;
	        newInsets.bottom += margin.bottom;
	    }

            return newInsets;
