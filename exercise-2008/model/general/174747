format 66
"validation" // src::javax::xml::validation
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/xml/validation"
  java_package "javax.xml.validation"
  classview 169883 "validation"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 773147 "Schema"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Immutable in-memory representation of grammar.

<p>
This object represents a set of constraints that can be checked/
enforced against an XML document. 

<p>
A {@link Schema} object is thread safe and applications are
encouraged to share it across many parsers in many threads.

<p>
A {@link Schema} object is immutable in the sense that it shouldn't
change the set of constraints once it is created. In other words,
if an application validates the same document twice against the same
{@link Schema}, it must always produce the same result. 

<p>
A {@link Schema} object is usually created from {@link SchemaFactory}.

<p>
Two kinds of validators can be created from a {@link Schema} object.
One is {@link Validator}, which provides highly-level validation
operations that cover typical use cases. The other is
{@link ValidatorHandler}, which works on top of SAX for better
modularity.

<p>
This specification does not refine
the {@link java.lang.Object#equals(java.lang.Object)} method.
In other words, if you parse the same schema twice, you may
still get <code>!schemaA.equals(schemaB)</code>.

@author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.4 $, $Date: 2003/12/06 00:21:36 $
@see <a href=\"http://www.w3.org/TR/xmlschema-1/\">XML Schema Part 1: Structures</a>
@see <a href=\"http://www.w3.org/TR/xml11/\">Extensible Markup Language (XML) 1.1</a>
@see <a href=\"http://www.w3.org/TR/REC-xml\">Extensible Markup Language (XML) 1.0 (Second Edition)</a>
@since 1.5"
      operation 5427227 "Schema"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for the derived class.

<p>
The constructor does nothing."
      end

      operation 5427355 "newValidator"
	abstract public return_type class_ref 778139 // Validator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link Validator} for this {@link Schema}.

<p>
A validator enforces/checks the set of constraints this object
represents.

@return
     Always return a non-null valid object."
      end

      operation 5427483 "newValidatorHandler"
	abstract public return_type class_ref 773787 // ValidatorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link ValidatorHandler} for this {@link Schema}.

@return
     Always return a non-null valid object."
      end
    end

    class 773787 "ValidatorHandler"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Streaming validator that works on SAX stream.

<p>
A {@link ValidatorHandler} object is a thread-unsafe, non-reentrant object.
In other words, it is the application's responsibility to make
sure that one {@link ValidatorHandler} object is not used from
more than one thread at any given time.

<p>
{@link ValidatorHandler} checks if the SAX events follow 
the set of constraints described in the associated {@link Schema},
and additionally it may modify the SAX events (for example
by adding default values, etc.)

<p>
{@link ValidatorHandler} extends from {@link ContentHandler},
but it refines the underlying {@link ContentHandler} in
the following way:
<ol>
 <li>startElement/endElement events must receive non-null String
     for <code>uri</code>, <code>localName</code>, and <code>qname</code>,
     even though SAX allows some of them to be null.
     Similarly, the user-specified {@link ContentHandler} will receive non-null
     Strings for all three parameters.

 <li>Applications must ensure that {@link ValidatorHandler}'s
     {@link ContentHandler#startPrefixMapping(String,String)} and
     {@link ContentHandler#endPrefixMapping(String)} are invoked
     properly. Similarly, the user-specified {@link ContentHandler}
     will receive startPrefixMapping/endPrefixMapping events.
     If the {@link ValidatorHandler} introduces additional namespace
     bindings, the user-specified {@link ContentHandler} will receive
     additional startPrefixMapping/endPrefixMapping events.

 <li>{@link org.xml.sax.Attributes} for the
     {@link ContentHandler#startElement(String,String,String,Attributes)} method
     may or may not include xmlns* attributes.
</ol>

<p>
A {@link ValidatorHandler} is automatically reset every time
the startDocument method is invoked.

<h2>Recognized Properties and Features</h2>
<p>
This spec defines the following feature that must be recognized
by all {@link ValidatorHandler} implementations.

<h3><code>http://xml.org/sax/features/namespace-prefixes</code></h3>
<p>
This feature controls how a {@link ValidatorHandler} introduces
namespace bindings that were not present in the original SAX event
stream.
When this feature is set to true, it must make
sure that the user's {@link ContentHandler} will see 
the corresponding <code>xmlns*</code> attribute in
the {@link org.xml.sax.Attributes} object of the
{@link ContentHandler#startElement(String,String,String,Attributes)}
callback. Otherwise, <code>xmlns*</code> attributes must not be
added to {@link org.xml.sax.Attributes} that's passed to the
user-specified {@link ContentHandler}.
<p> 
(Note that regardless of this switch, namespace bindings are
always notified to applications through 
{@link ContentHandler#startPrefixMapping(String,String)} and
{@link ContentHandler#endPrefixMapping(String)} methods of the
{@link ContentHandler} specified by the user.)

<p>
Note that this feature does <em>NOT</em> affect the way
a {@link ValidatorHandler} receives SAX events. It merely
changes the way it augments SAX events.

<p>This feature is set to <code>false</code> by default.</p>

@author  <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.23.16.1 $, $Date: 2004/06/28 18:26:43 $
@since 1.5"
      classrelation 1417243 // <realization>
	relation 1417243 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1417243 // <realization>
	  b parent class_ref 670491 // ContentHandler
      end

      operation 5419035 "ValidatorHandler"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for derived classes.

<p>
The constructor does nothing.

<p>
Derived classes must create {@link ValidatorHandler} objects that have
<tt>null</tt> {@link ErrorHandler} and
<tt>null</tt> {@link LSResourceResolver}."
      end

      operation 5419163 "setContentHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "receiver" type class_ref 670491 // ContentHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ContentHandler} which receives
the augmented validation result.

<p>
When a {@link ContentHandler} is specified, a
{@link ValidatorHandler} will work as a filter
and basically copy the incoming events to the
specified {@link ContentHandler}.

<p>
In doing so, a {@link ValidatorHandler} may modify
the events, for example by adding defaulted attributes.

<p>
A {@link ValidatorHandler} may buffer events to certain
extent, but to allow {@link ValidatorHandler} to be used
by a parser, the following requirement has to be met.

<ol>
 <li>When
     {@link ContentHandler#startElement(String, String, String, Attributes)},
     {@link ContentHandler#endElement(String, String, String)},
     {@link ContentHandler#startDocument()}, or
     {@link ContentHandler#endDocument()}
     are invoked on a {@link ValidatorHandler},
     the same method on the user-specified {@link ContentHandler}
     must be invoked for the same event before the callback
     returns.
 <li>{@link ValidatorHandler} may not introduce new elements that
     were not present in the input.

 <li>{@link ValidatorHandler} may not remove attributes that were
     present in the input.
</ol> 

<p>
When a callback method on the specified {@link ContentHandler}
throws an exception, the same exception object must be thrown
from the {@link ValidatorHandler}. The {@link ErrorHandler}
should not be notified of such an exception.

<p>
This method can be called even during a middle of a validation.

@param receiver
     A {@link ContentHandler} or a null value. "
      end

      operation 5419291 "getContentHandler"
	abstract public return_type class_ref 670491 // ContentHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link ContentHandler} which receives the
augmented validation result.

@return
     This method returns the object that was last set through
     the {@link #getContentHandler()} method, or null
     if that method has never been called since this {@link ValidatorHandler}
     has created.

@see #setContentHandler(ContentHandler)"
      end

      operation 5419419 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 682011 // ErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ErrorHandler} to receive errors encountered
during the validation.

<p>
Error handler can be used to customize the error handling process
during a validation. When an {@link ErrorHandler} is set,
errors found during the validation will be first sent
to the {@link ErrorHandler}.

<p>
The error handler can abort further validation immediately
by throwing {@link org.xml.sax.SAXException} from the handler. Or for example
it can print an error to the screen and try to continue the
validation by returning normally from the {@link ErrorHandler} 

<p>
If any {@link Throwable} is thrown from an {@link ErrorHandler},
the same {@link Throwable} object will be thrown toward the
root of the call stack.

<p>
{@link ValidatorHandler} is not allowed to
throw {@link org.xml.sax.SAXException} without first reporting it to
{@link ErrorHandler}.

<p>
When the {@link ErrorHandler} is null, the implementation will
behave as if the following {@link ErrorHandler} is set:
<pre>
class DraconianErrorHandler implements {@link ErrorHandler} {
    public void fatalError( {@link org.xml.sax.SAXParseException} e ) throws {@link org.xml.sax.SAXException} {
        throw e;
    }
    public void error( {@link org.xml.sax.SAXParseException} e ) throws {@link org.xml.sax.SAXException} {
        throw e;
    }
    public void warning( {@link org.xml.sax.SAXParseException} e ) throws {@link org.xml.sax.SAXException} {
        // noop
    }
}
</pre>

<p>
When a new {@link ValidatorHandler} object is created, initially
this field is set to null.

@param   errorHandler
     A new error handler to be set. This parameter can be null."
      end

      operation 5419547 "getErrorHandler"
	abstract public return_type class_ref 682011 // ErrorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link ErrorHandler} set to this {@link ValidatorHandler}.

@return
     This method returns the object that was last set through
     the {@link #setErrorHandler(ErrorHandler)} method, or null
     if that method has never been called since this {@link ValidatorHandler}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5419675 "setResourceResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resourceResolver" type class_ref 777755 // LSResourceResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link LSResourceResolver} to customize
resource resolution while in a validation episode.

<p>
{@link ValidatorHandler} uses a {@link LSResourceResolver}
when it needs to locate external resources while a validation,
although exactly what constitutes \"locating external resources\" is
up to each schema language.

<p>
When the {@link LSResourceResolver} is null, the implementation will
behave as if the following {@link LSResourceResolver} is set:
<pre>
class DumbLSResourceResolver implements {@link LSResourceResolver} {
    public {@link org.w3c.dom.ls.LSInput} resolveResource(
        String publicId, String systemId, String baseURI) {
        
        return null; // always return null
    }
}
</pre>

<p>
If a {@link LSResourceResolver} throws a {@link RuntimeException}
 (or instances of its derived classes),
then the {@link ValidatorHandler} will abort the parsing and  
the caller of the <code>validate</code> method will receive
the same {@link RuntimeException}. 

<p>
When a new {@link ValidatorHandler} object is created, initially
this field is set to null.

@param   resourceResolver
     A new resource resolver to be set. This parameter can be null."
      end

      operation 5419803 "getResourceResolver"
	abstract public return_type class_ref 777755 // LSResourceResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link LSResourceResolver} set to this {@link ValidatorHandler}.

@return
     This method returns the object that was last set through
     the {@link #setResourceResolver(LSResourceResolver)} method, or null
     if that method has never been called since this {@link ValidatorHandler}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5419931 "getTypeInfoProvider"
	abstract public return_type class_ref 774171 // TypeInfoProvider
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the {@link TypeInfoProvider} implementation of this
{@link ValidatorHandler}.

<p>
The obtained {@link TypeInfoProvider} can be queried during a parse
to access the type information determined by the validator.

<p>
Some schema languages do not define the notion of type,
for those languages, this method may not be supported.
However, to be compliant with this specification, implementations
for W3C XML Schema 1.0 must support this operation. 

@return
     null if the validator / schema language does not support
     the notion of {@link org.w3c.dom.TypeInfo}.
     Otherwise a non-null valid {@link TypeInfoProvider}."
      end

      operation 5420059 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a feature flag.

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link ValidatorHandler} to recognize a feature name but
temporarily be unable to return its value.
Some feature values may be available only in specific
contexts, such as before, during, or after a validation.

<p>Implementors are free (and encouraged) to invent their own features,
using names built on their own URIs.</p>

@param name The feature name, which is a non-null fully-qualified URI.
@return The current value of the feature (true or false).
@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link ValidatorHandler} recognizes the feature name but 
           cannot determine its value at this time.
@throws NullPointerException
         When the name parameter is null.
@see #setFeature(String, boolean)"
      end

      operation 5420187 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a feature flag.

<p>
Feature can be used to control the way a {@link ValidatorHandler}
parses schemas, although {@link ValidatorHandler}s are not required
to recognize any specific property names.</p>

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link ValidatorHandler} to expose a feature value but
to be unable to change the current value.
Some feature values may be immutable or mutable only 
in specific contexts, such as before, during, or after 
a validation.</p>

@param name The feature name, which is a non-null fully-qualified URI.
@param value The requested value of the feature (true or false).

@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link ValidatorHandler} recognizes the feature name but 
           cannot set the requested value.
@throws NullPointerException
         When the name parameter is null.

@see #getFeature(String)"
      end

      operation 5420315 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "object" explicit_type "Object"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link ValidatorHandler} to recognize a property name but
to be unable to change the current value.
Some property values may be immutable or mutable only 
in specific contexts, such as before, during, or after 
a validation.</p>

<p>{@link ValidatorHandler}s are not required to recognize setting
any specific property names.</p>

@param name The property name, which is a non-null fully-qualified URI.
@param object The requested value for the property.

@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link ValidatorHandler} recognizes the property name but 
           cannot set the requested value.
@throws NullPointerException
         When the name parameter is null."
      end

      operation 5420443 "getProperty"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link ValidatorHandler} to recognize a property name but
temporarily be unable to return its value.
Some property values may be available only in specific
contexts, such as before, during, or after a validation.</p>

<p>{@link ValidatorHandler}s are not required to recognize any specific
property names.</p>

<p>Implementors are free (and encouraged) to invent their own properties,
using names built on their own URIs.</p>

@param name The property name, which is a non-null fully-qualified URI.
@return The current value of the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           XMLReader recognizes the property name but 
           cannot determine its value at this time.
@throws NullPointerException
         When the name parameter is null.
@see #setProperty(String, Object)"
      end
    end

    class 774171 "TypeInfoProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides access to the type information determined
by {@link ValidatorHandler}. 

<p>
Some schema languages, such as W3C XML Schema, encourages a validator
to report the \"type\" it assigns to each attribute/element.
Those applications who wish to access this type information can invoke
methods defined on this \"interface\" to access such type information.
 
<p>
Implementation of this \"interface\" can be obtained through the
{@link ValidatorHandler#getTypeInfoProvider()} method.

@author  <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.11 $, $Date: 2004/02/06 01:16:10 $
@see org.w3c.dom.TypeInfo 
@since 1.5"
      operation 10098971 "TypeInfoProvider"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for the derived class.

<p>
The constructor does nothing."
      end

      operation 10099099 "getElementTypeInfo"
	abstract public return_type class_ref 615323 // TypeInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the immutable {@link TypeInfo} object for the current element.</p>

<p>
The method may only be called by the startElement event of
the {@link org.xml.sax.ContentHandler} that the application sets to the
{@link ValidatorHandler}.</p>

@throws IllegalStateException
     If this method is called from other {@link org.xml.sax.ContentHandler}
     methods.
@return
     An immutable {@link TypeInfo} object that represents the
     type of the current element. 
     Note that the caller can keep references to the obtained
     {@link TypeInfo} longer than the callback scope.

     Otherwise, this method returns
     null if the validator is unable to
     determine the type of the current element for some reason
     (for example, if the validator is recovering from
     an earlier error.)
"
      end

      operation 10099227 "getAttributeTypeInfo"
	abstract public return_type class_ref 615323 // TypeInfo
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the immutable {@link TypeInfo} object for the specified
attribute of the current element.

<p>
The method may only be called by the startElement event of
the {@link org.xml.sax.ContentHandler} that the application sets to the
{@link ValidatorHandler}.

@param index
     The index of the attribute. The same index for
     the {@link org.xml.sax.Attributes} object passed to the
     <tt>startElement</tt> callback.

@throws IndexOutOfBoundsException
     If the index is invalid.
@throws IllegalStateException
     If this method is called from other {@link org.xml.sax.ContentHandler}
     methods.

@return
     An immutable {@link TypeInfo} object that represents the
     type of the specified attribute. 
     Note that the caller can keep references to the obtained
     {@link TypeInfo} longer than the callback scope.

     Otherwise, this method returns
     null if the validator is unable to
     determine the type."
      end

      operation 10099355 "isIdAttribute"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if the specified attribute is determined
to be ID.

<p>
Exacly how an attribute is \"determined to be ID\" is up to the
schema language. In case of W3C XML Schema, this means
that the actual type of the attribute is the built-in ID type
or its derived type.

<p>
A {@link javax.xml.parsers.DocumentBuilder} uses this information
to properly implement {@link org.w3c.dom.Attr#isId()}.

<p>
The method may only be called by the startElement event of
the {@link org.xml.sax.ContentHandler} that the application sets to the
{@link ValidatorHandler}.

@param index
     The index of the attribute. The same index for
     the {@link org.xml.sax.Attributes} object passed to the
     <tt>startElement</tt> callback.

@throws IndexOutOfBoundsException
     If the index is invalid.
@throws IllegalStateException
     If this method is called from other {@link org.xml.sax.ContentHandler}
     methods.

@return true
     if the type of the specified attribute is ID."
      end

      operation 10099483 "isSpecified"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>false</tt> if the attribute was added by the validator.

<p>
This method provides information necessary for
a {@link javax.xml.parsers.DocumentBuilder} to determine what
the DOM tree should return from the {@link org.w3c.dom.Attr#getSpecified()} method.

<p>
The method may only be called by the startElement event of
the {@link org.xml.sax.ContentHandler} that the application sets to the
{@link ValidatorHandler}.

<p>
A general guideline for validators is to return true if
the attribute was originally present in the pipeline, and
false if it was added by the validator.

@param index
     The index of the attribute. The same index for
     the {@link org.xml.sax.Attributes} object passed to the
     <tt>startElement</tt> callback.

@throws IndexOutOfBoundsException
     If the index is invalid.
@throws IllegalStateException
     If this method is called from other {@link org.xml.sax.ContentHandler}
     methods.

@return
     <tt>true</tt> if the attribute was present before the validator
     processes input. <tt>false</tt> if the attribute was added
     by the validator."
      end
    end

    class 778139 "Validator"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A processor that checks an XML document against {@link Schema}.</p>

<p>
A validator is a thread-unsafe and non-reentrant object.
In other words, it is the application's responsibility to make
sure that one {@link Validator} object is not used from
more than one thread at any given time, and while the <tt>validate</tt>
method is invoked, applications may not recursively call
the <tt>validate</tt> method.
<p>

Note that while the {@link #validate(javax.xml.transform.Source)} and {@link #validate(javax.xml.transform.Source, javax.xml.transform.Result)}
methods take a {@link Source} instance, the <code>Source</code>
instance must be a <code>SAXSource</code> or <code>DOMSource</code>.

@author  <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.18.14.1.2.4 $, $Date: 2004/07/13 22:27:52 $
@since 1.5"
      operation 5424411 "Validator"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for derived classes.

<p>
The constructor does nothing.

<p>
Derived classes must create {@link Validator} objects that have
<tt>null</tt> {@link ErrorHandler} and
<tt>null</tt> {@link LSResourceResolver}."
      end

      operation 5424539 "reset"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>Validator</code> to its original configuration.</p>

<p><code>Validator</code> is reset to the same state as when it was created with
{@link Schema#newValidator()}.
<code>reset()</code> is designed to allow the reuse of existing <code>Validator</code>s
thus saving resources associated with the creation of new <code>Validator</code>s.</p>

<p>The reset <code>Validator</code> is not guaranteed to have the same {@link LSResourceResolver} or {@link ErrorHandler}
<code>Object</code>s, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>LSResourceResolver</code> and <code>ErrorHandler</code>.</p>"
      end

      operation 5424667 "validate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 691227 // Source
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates the specified input.

<p>
This is just a convenience method of:
<pre>
validate(source,null);
</pre>

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5424795 "validate"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "source" type class_ref 691227 // Source
	  param inout name "result" type class_ref 707483 // Result
	nexceptions 2
	  exception class_ref 394907 // SAXException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates the specified input and send the augmented validation
result to the specified output.

<p>
This method places the following restrictions on the types of
the {@link Source}/{@link Result} accepted.

<h4>{@link Source}/{@link Result} accepted:</h4>
<table border=1>
<thead>
 <tr>
  <td></td>
  <td>{@link javax.xml.transform.sax.SAXSource}</td>
  <td>{@link javax.xml.transform.dom.DOMSource}</td>
 </tr>
</thead>
<tbody>
 <tr>
  <td><tt>null</tt></td>
  <td>OK</td>
  <td>OK</td>
 </tr>
 <tr>
  <td>{@link javax.xml.transform.sax.SAXResult}</td>
  <td>OK</td>
  <td>Err</td>
 </tr>
 <tr>
  <td>{@link javax.xml.transform.dom.DOMResult}</td>
  <td>Err</td>
  <td>OK</td>
 </tr>
</tbody>
</table>

<p>
<strong>Note that {@link javax.xml.transform.stream.StreamSource} instances are not allowed.</strong> To process
a <code>StreamSource</code>, or to validate one {@link Source} into another kind of {@link Result}, use the identity transformer
(see {@link javax.xml.transform.TransformerFactory#newTransformer()}).

<p>
Errors found during the validation is sent to the specified
{@link ErrorHandler}.

<p>
If a document is valid, or if a document contains some errors
but none of them were fatal and the {@link ErrorHandler} didn't
throw any exception, then the method returns normally.

@param source
     XML to be validated. Must not be null.

@param result
     The {@link Result} object that receives (possibly augmented)
     XML. This parameter can be null if the caller is not interested
     in it.
     
     Note that when a {@link javax.xml.transform.dom.DOMResult} is used,
     a validator might just pass the same DOM node from
     {@link javax.xml.transform.dom.DOMSource} to
     {@link javax.xml.transform.dom.DOMResult}
     (in which case <tt>source.getNode()==result.getNode()</tt>),
     it might copy the entire DOM tree, or it might alter the
     node given by the source.

@throws IllegalArgumentException
     If the {@link Result} type doesn't match the {@link Source} type,
     or if the specified source is neither
     {@link javax.xml.transform.sax.SAXSource} nor
     {@link javax.xml.transform.dom.DOMSource}. 

@throws SAXException
     If the {@link ErrorHandler} throws a {@link SAXException} or
     if a fatal error is found and the {@link ErrorHandler} returns
     normally.

@throws IOException
     If the validator is processing a
     {@link javax.xml.transform.sax.SAXSource} and the
     underlying {@link org.xml.sax.XMLReader} throws an
     {@link IOException}.

@throws NullPointerException
     If the <tt>source</tt> parameter is null.

@see #validate(Source)"
      end

      operation 5424923 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 682011 // ErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ErrorHandler} to receive errors encountered
during the <code>validate</code> method invocation.

<p>
Error handler can be used to customize the error handling process
during a validation. When an {@link ErrorHandler} is set,
errors found during the validation will be first sent
to the {@link ErrorHandler}.

<p>
The error handler can abort further validation immediately
by throwing {@link SAXException} from the handler. Or for example
it can print an error to the screen and try to continue the
validation by returning normally from the {@link ErrorHandler} 

<p>
If any {@link Throwable} is thrown from an {@link ErrorHandler},
the caller of the <code>validate</code> method will be thrown
the same {@link Throwable} object.

<p>
{@link Validator} is not allowed to
throw {@link SAXException} without first reporting it to
{@link ErrorHandler}.

<p>
When the {@link ErrorHandler} is null, the implementation will
behave as if the following {@link ErrorHandler} is set:
<pre>
class DraconianErrorHandler implements {@link ErrorHandler} {
    public void fatalError( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        throw e;
    }
    public void error( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        throw e;
    }
    public void warning( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        // noop
    }
}
</pre>

<p>
When a new {@link Validator} object is created, initially
this field is set to null.

@param   errorHandler
     A new error handler to be set. This parameter can be null."
      end

      operation 5425051 "getErrorHandler"
	abstract public return_type class_ref 682011 // ErrorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link ErrorHandler} set to this {@link Validator}.

@return
     This method returns the object that was last set through
     the {@link #setErrorHandler(ErrorHandler)} method, or null
     if that method has never been called since this {@link Validator}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5425179 "setResourceResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resourceResolver" type class_ref 777755 // LSResourceResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link LSResourceResolver} to customize
resource resolution while in a validation episode.

<p>
{@link Validator} uses a {@link LSResourceResolver}
when it needs to locate external resources while a validation,
although exactly what constitutes \"locating external resources\" is
up to each schema language.

<p>
When the {@link LSResourceResolver} is null, the implementation will
behave as if the following {@link LSResourceResolver} is set:
<pre>
class DumbLSResourceResolver implements {@link LSResourceResolver} {
    public {@link org.w3c.dom.ls.LSInput} resolveResource(
        String publicId, String systemId, String baseURI) {
        
        return null; // always return null
    }
}
</pre>

<p>
If a {@link LSResourceResolver} throws a {@link RuntimeException}
 (or instances of its derived classes),
then the {@link Validator} will abort the parsing and  
the caller of the <code>validate</code> method will receive
the same {@link RuntimeException}. 

<p>
When a new {@link Validator} object is created, initially
this field is set to null.

@param   resourceResolver
     A new resource resolver to be set. This parameter can be null."
      end

      operation 5425307 "getResourceResolver"
	abstract public return_type class_ref 777755 // LSResourceResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link LSResourceResolver} set to this {@link Validator}.

@return
     This method returns the object that was last set through
     the {@link #setResourceResolver(LSResourceResolver)} method, or null
     if that method has never been called since this {@link Validator}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5425435 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a feature flag.

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link Validator} to recognize a feature name but
temporarily be unable to return its value.
Some feature values may be available only in specific
contexts, such as before, during, or after a validation.

<p>Implementors are free (and encouraged) to invent their own features,
using names built on their own URIs.</p>

@param name The feature name, which is a non-null fully-qualified URI.
@return The current value of the feature (true or false).
@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link Validator} recognizes the feature name but 
           cannot determine its value at this time.
@throws NullPointerException
         When the name parameter is null.
@see #setFeature(String, boolean)"
      end

      operation 5425563 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a feature flag.

<p>
Feature can be used to control the way a {@link Validator}
parses schemas, although {@link Validator}s are not required
to recognize any specific property names.</p>

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link Validator} to expose a feature value but
to be unable to change the current value.
Some feature values may be immutable or mutable only 
in specific contexts, such as before, during, or after 
a validation.</p>

@param name The feature name, which is a non-null fully-qualified URI.
@param value The requested value of the feature (true or false).

@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link Validator} recognizes the feature name but 
           cannot set the requested value.
@throws NullPointerException
         When the name parameter is null.

@see #getFeature(String)"
      end

      operation 5425691 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "object" explicit_type "Object"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link Validator} to recognize a property name but
to be unable to change the current value.
Some property values may be immutable or mutable only 
in specific contexts, such as before, during, or after 
a validation.</p>

<p>{@link Validator}s are not required to recognize setting
any specific property names.</p>

@param name The property name, which is a non-null fully-qualified URI.
@param object The requested value for the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link Validator} recognizes the property name but 
           cannot set the requested value.
@throws NullPointerException
         When the name parameter is null."
      end

      operation 5425819 "getProperty"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link Validator} to recognize a property name but
temporarily be unable to return its value.
Some property values may be available only in specific
contexts, such as before, during, or after a validation.</p>

<p>{@link Validator}s are not required to recognize any specific
property names.</p>

<p>Implementors are free (and encouraged) to invent their own properties,
using names built on their own URIs.</p>

@param name The property name, which is a non-null fully-qualified URI.
@return The current value of the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           XMLReader recognizes the property name but 
           cannot determine its value at this time.
@throws NullPointerException
         When the name parameter is null.
@see #setProperty(String, Object)"
      end
    end

    class 779419 "SchemaFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Factory that creates {@link Schema} objects&#x2E; Entry-point to
the validation API.

<p>
{@link SchemaFactory} is a schema compiler. It reads external
representations of schemas and prepares them for validation.

<p>
The {@link SchemaFactory} class is not thread-safe. In other words,
it is the application's responsibility to ensure that at most
one thread is using a {@link SchemaFactory} object at any
given moment. Implementations are encouraged to mark methods
as <tt>synchronized</tt> to protect themselves from broken clients.

<p>
{@link SchemaFactory} is not re-entrant. While one of the
<code>newSchema</code> methods is being invoked, applications
may not attempt to recursively invoke the <code>newSchema</code> method,
even from the same thread.

<h2><a name=\"schemaLanguage\"></a>Schema Language</h2>
<p>
This spec uses a namespace URI to designate a schema language.
The following table shows the values defined by this specification.
<p>
To be compliant with the spec, the implementation 
is only required to support W3C XML Schema 1.0. However,
if it chooses to support other schema languages listed here,
it must conform to the relevant behaviors described in this spec.

<p>
Schema languages not listed here are expected to
introduce their own URIs to represent themselves.  
The {@link SchemaFactory} class is capable of locating other
implementations for other schema languages at run-time.

<p>
Note that because the XML DTD is strongly tied to the parsing process
and has a significant effect on the parsing process, it is impossible
to define the DTD validation as a process independent from parsing. 
For this reason, this specification does not define the semantics for
the XML DTD. This doesn't prohibit implentors from implementing it
in a way they see fit, but <em>users are warned that any DTD
validation implemented on this interface necessarily deviate from
the XML DTD semantics as defined in the XML 1.0</em>.

<table border=\"1\" cellpadding=\"2\">
  <thead>
    <tr>
      <th>value</th>
      <th>language</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>{@link javax.xml.XMLConstants#W3C_XML_SCHEMA_NS_URI} (\"<code>http://www.w3.org/2001/XMLSchema</code>\")</td>
      <td><a href=\"http://www.w3.org/TR/xmlschema-1\">W3C XML Schema 1.0</a></td>
    </tr>
    <tr>
      <td>{@link javax.xml.XMLConstants#RELAXNG_NS_URI} (\"<code>http://relaxng.org/ns/structure/1.0</code>\")</td>
      <td><a href=\"http://www.relaxng.org/\">RELAX NG 1.0</a></td>
    </tr>
  </tbody>
</table>

@author  <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.20.10.1.2.3 $, $Date: 2004/09/16 09:24:47 $
@since 1.5"
      classrelation 1421211 // ss (<unidirectional association>)
	relation 1421211 --->
	  a role_name "ss" init_value "=  new SecuritySupport()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421211 // ss (<unidirectional association>)
	  b parent class_ref 779547 // SecuritySupport
      end

      operation 5429147 "SchemaFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor for derived classes.</p>

<p>The constructor does nothing.</p>

<p>Derived classes must create {@link SchemaFactory} objects that have
<code>null</code> {@link ErrorHandler} and
<code>null</code> {@link LSResourceResolver}.</p>"
      end

      operation 5429275 "newInstance"
	class_operation public return_type class_ref 779419 // SchemaFactory
	nparams 1
	  param in name "schemaLanguage" explicit_type "String"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Lookup an implementation of the <code>SchemaFactory</code> that supports the specified
schema language and return it.</p>

<p>To find a <code>SchemaFactory</code> object for a given schema language,
this method looks the following places in the following order
where \"the class loader\" refers to the context class loader:</p>
<ol>
 <li>
    If the system property
    <code>\"javax.xml.validation.SchemaFactory:<i>schemaLanguage</i>\"</code>
    is present (where <i>schemaLanguage</i> is the parameter
    to this method), then its value is read
    as a class name. The method will try to
    create a new instance of this class by using the class loader,
    and returns it if it is successfully created.
  </li>
  <li>
    <code>$java.home/lib/jaxp.properties</code> is read and
    the value associated with the key being the system property above
    is looked for. If present, the value is processed just like above.
  </li>
  <li>
    <p>The class loader is asked for service provider provider-configuration files matching
    <code>javax.xml.validation.SchemaFactory</code> in the resource directory META-INF/services.
    See the JAR File Specification for file format and parsing rules.
    Each potential service provider is required to implement the method:</p>
    <pre>
       {@link #isSchemaLanguageSupported(String schemaLanguage)}
    </pre> 
    The first service provider found in class loader order that supports the specified schema language is returned.
  </li>
  <li>
    Platform default <code>SchemaFactory</code> is located
    in a implementation specific way. There must be a platform default
    <code>SchemaFactory</code> for W3C XML Schema.
  </li>
</ol>

<p>If everything fails, {@link IllegalArgumentException} will be thrown.</p>

<p><strong>Tip for Trouble-shooting:</strong></p>
<p>See {@link java.util.Properties#load(java.io.InputStream)} for
exactly how a property file is parsed. In particular, colons ':'
need to be escaped in a property file, so make sure schema language
URIs are properly escaped in it. For example:</p>
<pre>
http\\://www.w3.org/2001/XMLSchema=org.acme.foo.XSSchemaFactory
</pre>

@param schemaLanguage
     Specifies the schema language which the returned
     SchemaFactory will understand. See
     <a href=\"#schemaLanguage\">the list of available
     schema languages</a> for the possible values.

@return New instance of a <code>SchemaFactory</code>

@throws IllegalArgumentException
     If no implementation of the schema language is available.

@throws NullPointerException
     If the <tt>schemLanguage</tt> parameter is null."
      end

      operation 5429403 "isSchemaLanguageSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "schemaLanguage" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Is specified schema supported by this <code>SchemaFactory</code>?</p>

@param schemaLanguage Specifies the schema language which the returned <code>SchemaFactory</code> will understand.
   <code>schemaLanguage</code> must specify a <a href=\"#schemaLanguage\">valid</a> schema language.

@return <code>true</code> if <code>SchemaFactory</code> supports <code>schemaLanguage</code>, else <code>false</code>.

@throws NullPointerException If <code>schemaLanguage</code> is <code>null</code>.
@throws IllegalArgumentException If <code>schemaLanguage.length() == 0</code>
  or <code>schemaLanguage</code> does not specify a <a href=\"#schemaLanguage\">valid</a> schema language.  "
      end

      operation 5429531 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a feature flag.

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link SchemaFactory} to recognize a feature name but
temporarily be unable to return its value.

<p>Implementors are free (and encouraged) to invent their own features,
using names built on their own URIs.</p>

@param name The feature name, which is a non-null fully-qualified URI.
@return The current value of the feature (true or false).
@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link SchemaFactory} recognizes the feature name but 
           cannot determine its value at this time.
@exception NullPointerException
             if the name parameter is null.
@see #setFeature(String, boolean)"
      end

      operation 5429659 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a feature flag.

<p>
Feature can be used to control the way a {@link SchemaFactory}
parses schemas, although {@link SchemaFactory}s are not required
to recognize any specific feature names.</p>

<p>The feature name is any fully-qualified URI.  It is
possible for a {@link SchemaFactory} to expose a feature value but
to be unable to change the current value.</p>

<p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is:</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include enity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
    {@link ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link  #setErrorHandler(ErrorHandler errorHandler)}.
  </li>
  <li>
    <code>false</code>: the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name The feature name, which is a non-null fully-qualified URI.
@param value The requested value of the feature (true or false).

@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link SchemaFactory} recognizes the feature name but 
           cannot set the requested value.
@exception NullPointerException
             if the name parameter is null.

@see #getFeature(String)"
      end

      operation 5429787 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "object" explicit_type "Object"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link SchemaFactory} to recognize a property name but
to be unable to change the current value.</p>

<p>{@link SchemaFactory}s are not required to recognize setting
any specific property names.</p>

@param name The property name, which is a non-null fully-qualified URI.
@param object The requested value for the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           {@link SchemaFactory} recognizes the property name but 
           cannot set the requested value.
@exception NullPointerException
             if the name parameter is null."
      end

      operation 5429915 "getProperty"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 2
	  exception class_ref 704539 // SAXNotRecognizedException
	  exception class_ref 648859 // SAXNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a property.

<p>The property name is any fully-qualified URI.  It is
possible for a {@link SchemaFactory} to recognize a property name but
temporarily be unable to return its value.</p>

<p>{@link SchemaFactory}s are not required to recognize any specific
property names.</p>

<p>Implementors are free (and encouraged) to invent their own properties,
using names built on their own URIs.</p>

@param name The property name, which is a non-null fully-qualified URI.
@return The current value of the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception org.xml.sax.SAXNotSupportedException When the
           XMLReader recognizes the property name but 
           cannot determine its value at this time.
@exception NullPointerException
             if the name parameter is null.
@see #setProperty(String, Object)"
      end

      operation 5430043 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 682011 // ErrorHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link ErrorHandler} to receive errors encountered
during the <code>newSchema</code> method invocation.

<p>
Error handler can be used to customize the error handling process
during schema parsing. When an {@link ErrorHandler} is set,
errors found during the parsing of schemas will be first sent
to the {@link ErrorHandler}.

<p>
The error handler can abort the parsing of a schema immediately
by throwing {@link SAXException} from the handler. Or for example
it can print an error to the screen and try to continue the
processing by returning normally from the {@link ErrorHandler} 

<p>
If any {@link Throwable} (or instances of its derived classes)
is thrown from an {@link ErrorHandler},
the caller of the <code>newSchema</code> method will be thrown
the same {@link Throwable} object.

<p>
{@link SchemaFactory} is not allowed to
throw {@link SAXException} without first reporting it to
{@link ErrorHandler}.

<p>
Applications can call this method even during a {@link Schema}
is being parsed. 

<p>
When the {@link ErrorHandler} is null, the implementation will
behave as if the following {@link ErrorHandler} is set:
<pre>
class DraconianErrorHandler implements {@link ErrorHandler} {
    public void fatalError( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        throw e;
    }
    public void error( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        throw e;
    }
    public void warning( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {
        // noop
    }
}
</pre>

<p>
When a new {@link SchemaFactory} object is created, initially
this field is set to null. This field will <em>NOT</em> be
inherited to {@link Schema}s, {@link Validator}s, or 
{@link ValidatorHandler}s that are created from this {@link SchemaFactory}.


@param   errorHandler
     A new error handler to be set. This parameter can be null."
      end

      operation 5430171 "getErrorHandler"
	abstract public return_type class_ref 682011 // ErrorHandler
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link ErrorHandler} set to this {@link SchemaFactory}.

@return
     This method returns the object that was last set through
     the {@link #setErrorHandler(ErrorHandler)} method, or null
     if that method has never been called since this {@link SchemaFactory}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5430299 "setResourceResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "resourceResolver" type class_ref 777755 // LSResourceResolver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link LSResourceResolver} to customize
resource resolution when parsing schemas.

<p>
{@link SchemaFactory} uses a {@link LSResourceResolver}
when it needs to locate external resources while parsing schemas,
although exactly what constitutes \"locating external resources\" is
up to each schema language. For example, for W3C XML Schema,
this includes files <tt>&lt;include></tt>d or <tt>&lt;import></tt>ed,
and DTD referenced from schema files, etc.

<p>
Applications can call this method even during a {@link Schema}
is being parsed. 

<p>
When the {@link LSResourceResolver} is null, the implementation will
behave as if the following {@link LSResourceResolver} is set:
<pre>
class DumbDOMResourceResolver implements {@link LSResourceResolver} {
    public {@link org.w3c.dom.ls.LSInput} resolveResource(
        String publicId, String systemId, String baseURI) {
        
        return null; // always return null
    }
}
</pre>

<p>
If a {@link LSResourceResolver} throws a {@link RuntimeException}
 (or instances of its derived classes),
then the {@link SchemaFactory} will abort the parsing and  
the caller of the <code>newSchema</code> method will receive
the same {@link RuntimeException}. 

<p>
When a new {@link SchemaFactory} object is created, initially
this field is set to null.  This field will <em>NOT</em> be
inherited to {@link Schema}s, {@link Validator}s, or 
{@link ValidatorHandler}s that are created from this {@link SchemaFactory}.

@param   resourceResolver
     A new resource resolver to be set. This parameter can be null."
      end

      operation 5430427 "getResourceResolver"
	abstract public return_type class_ref 777755 // LSResourceResolver
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current {@link LSResourceResolver} set to this {@link SchemaFactory}.

@return
     This method returns the object that was last set through
     the {@link #setResourceResolver(LSResourceResolver)} method, or null
     if that method has never been called since this {@link SchemaFactory}
     has created.

@see #setErrorHandler(ErrorHandler)"
      end

      operation 5430555 "newSchema"
	public return_type class_ref 773147 // Schema
	nparams 1
	  param inout name "schema" type class_ref 691227 // Source
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parses the specified source as a schema and returns it as a schema.</p>

<p>This is a convenience method for {@link #newSchema(Source[] schemas)}.</p>

@param schema Source that represents a schema.

@return New <code>Schema</code> from parsing <code>schema</code>.

@throws SAXException If a SAX error occurs during parsing.
@throws NullPointerException if <tt>schema</tt> is null."
      end

      operation 5430683 "newSchema"
	public return_type class_ref 773147 // Schema
	nparams 1
	  param inout name "schema" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parses the specified <code>File</code> as a schema and returns it as a <code>Schema</code>.</p>

<p>This is a convenience method for {@link #newSchema(Source schema)}.</p>

@param schema File that represents a schema.

@return New <code>Schema</code> from parsing <code>schema</code>.

@throws SAXException If a SAX error occurs during parsing.
@throws NullPointerException if <tt>schema</tt> is null."
      end

      operation 5430811 "newSchema"
	public return_type class_ref 773147 // Schema
	nparams 1
	  param inout name "schema" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parses the specified <code>URL</code> as a schema and returns it as a <code>Schema</code>.</p>

<p>This is a convenience method for {@link #newSchema(Source schema)}.</p>

@param schema <code>URL</code> that represents a schema.

@return New <code>Schema</code> from parsing <code>schema</code>.

@throws SAXException If a SAX error occurs during parsing.
@throws NullPointerException if <tt>schema</tt> is null."
      end

      operation 5430939 "newSchema"
	abstract public return_type class_ref 773147 // Schema
	nparams 1
	  param inout name "schemas" type class_ref 691227 // Source
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified source(s) as a schema and returns it as a schema.

<p>
The callee will read all the {@link Source}s and combine them into a
single schema. The exact semantics of the combination depends on the schema
language that this {@link SchemaFactory} object is created for.

<p>
When an {@link ErrorHandler} is set, the callee will report all the errors
found in sources to the handler. If the handler throws an exception, it will
abort the schema compilation and the same exception will be thrown from
this method. Also, after an error is reported to a handler, the callee is allowed
to abort the further processing by throwing it. If an error handler is not set,
the callee will throw the first error it finds in the sources.   

<h2>W3C XML Schema 1.0</h2>
<p>
The resulting schema contains components from the specified sources.
The same result would be achieved if all these sources were
imported, using appropriate values for schemaLocation and namespace,
into a single schema document with a different targetNamespace
and no components of its own, if the import elements were given
in the same order as the sources.  Section 4.2.3 of the XML Schema
recommendation describes the options processors have in this
regard.  While a processor should be consistent in its treatment of
JAXP schema sources and XML Schema imports, the behaviour between
JAXP-compliant parsers may vary; in particular, parsers may choose
to ignore all but the first &lt;import> for a given namespace,
regardless of information provided in schemaLocation.

<p>
If the parsed set of schemas includes error(s) as
specified in the section 5.1 of the XML Schema spec, then
the error must be reported to the {@link ErrorHandler}.

<h2>RELAX NG</h2>

<p>For RELAX NG, this method must throw {@link UnsupportedOperationException}
if <tt>schemas.length!=1</tt>. 
 

@param schemas
     inputs to be parsed. {@link SchemaFactory} is required
     to recognize {@link javax.xml.transform.sax.SAXSource},
     {@link StreamSource}, and {@link javax.xml.transform.dom.DOMSource}.

@return
     Always return a non-null valid {@link Schema} object.
     Note that when an error has been reported, there is no
     guarantee that the returned {@link Schema} object is
     meaningful.

@throws SAXException
     If an error is found during processing the specified inputs.
     When an {@link ErrorHandler} is set, errors are reported to
     there first. See {@link #setErrorHandler(ErrorHandler)}.
@throws NullPointerException
     If the <code>schemas</code> parameter itself is null or
     any item in the array is null.
@throws IllegalArgumentException
     If any item in the array is not recognized by this method. 
@throws UnsupportedOperationException
     If the schema language doesn't support this operation."
      end

      operation 5431067 "newSchema"
	abstract public return_type class_ref 773147 // Schema
	nparams 0
	nexceptions 1
	  exception class_ref 394907 // SAXException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a special {@link Schema} object.

<p>
The exact semantics of the returned {@link Schema} object depends
on the schema language that this {@link SchemaFactory} is created
for.

<p>
Also, implementations are allowed to use implementation-specific
property/feature to alter the semantics of this method.


<h2>W3C XML Schema 1.0</h2>
<p>
For XML Schema, this method creates a {@link Schema} object that
performs validation by using location hints specified in documents.

<p>
The returned {@link Schema} object assumes that if documents
refer to the same URL in the schema location hints,
they will always resolve to the same schema document. This
asusmption allows implementations to reuse parsed results of
schema documents so that multiple validations against the same
schema will run faster.

<p>
Note that the use of schema location hints introduces a
vulnerability to denial-of-service attacks. 
 

<h2>RELAX NG</h2>
<p>
RELAX NG does not support this operation. 

@return
     Always return non-null valid {@link Schema} object.

@throws UnsupportedOperationException
     If this operation is not supported by the callee.
@throws SAXException
     If this operation is supported but failed for some reason."
      end
    end

    class 779547 "SecuritySupport"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is duplicated for each JAXP subpackage so keep it in sync.
It is package private and therefore is not exposed as part of the JAXP
API.

Security related methods that only work on J2SE 1.2 and newer."
      operation 10097947 "getContextClassLoader"
	package return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098075 "getSystemProperty"
	package explicit_return_type "String"
	nparams 1
	  param in name "propName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098203 "getFileInputStream"
	package return_type class_ref 635547 // FileInputStream
	nparams 1
	  param in name "file" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 509851 // FileNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098331 "getURLInputStream"
	package return_type class_ref 179099 // InputStream
	nparams 1
	  param in name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098459 "getResourceAsURL"
	package return_type class_ref 269467 // URL
	nparams 2
	  param in name "cl" type class_ref 163611 // ClassLoader
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098587 "getResources"
	package return_type class_ref 144411 // Enumeration
	nparams 2
	  param in name "cl" type class_ref 163611 // ClassLoader
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098715 "getResourceAsStream"
	package return_type class_ref 179099 // InputStream
	nparams 2
	  param in name "cl" type class_ref 163611 // ClassLoader
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10098843 "doesFileExist"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1216283 "SchemaFactoryFinder"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implementation of {@link SchemaFactory#newInstance(String)}.

@author <a href=\"Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.14 $, $Date: 2004/11/24 23:32:37 $
@since 1.5"
      attribute 3391643 "debug"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debug support code. "
      end

      classrelation 2618907 // ss (<unidirectional association>)
	relation 2618907 --->
	  a role_name "ss" init_value "=  new SecuritySupport()" class_relation private
	    comment "
<p> Take care of restrictions imposed by java security model </p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618907 // ss (<unidirectional association>)
	  b parent class_ref 779547 // SecuritySupport
      end

      classrelation 2619035 // cacheProps (<unidirectional association>)
	relation 2619035 --->
	  a role_name "cacheProps" init_value "=  new Properties()" class_relation private
	    comment "
<p>Cache properties for performance.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2619035 // cacheProps (<unidirectional association>)
	  b parent class_ref 154907 // Properties
      end

      attribute 3391771 "firstTime"
	class_attribute private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>First time requires initialization overhead.</p>
"
      end

      extra_member 177307 "initialization"
	
	cpp "" ""
	java "  static {
        // Use try/catch block to support applets
        try {
            debug = ss.getSystemProperty(\"jaxp.debug\") != null;
        } catch (Exception _) {
            debug = false;
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 10095899 "debugPrintln"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Conditional debug printing.</p>

@param msg to print"
      end

      classrelation 2619163 // classLoader (<unidirectional association>)
	relation 2619163 --->
	  a role_name "classLoader" const_relation private
	    comment "
<p><code>ClassLoader</code> to use to find <code>SchemaFactory</code>.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2619163 // classLoader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      operation 10096027 "SchemaFactoryFinder"
	public explicit_return_type ""
	nparams 1
	  param inout name "loader" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor that specifies <code>ClassLoader</code> to use
to find <code>SchemaFactory</code>.</p>

@param loader
     to be used to load resource, {@link SchemaFactory}, and
     {@link SchemaFactoryLoader} implementations during
     the resolution process.
     If this parameter is null, the default system class loader
     will be used."
      end

      operation 10096155 "debugDisplayClassLoader"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10096283 "newFactory"
	public return_type class_ref 779419 // SchemaFactory
	nparams 1
	  param in name "schemaLanguage" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link SchemaFactory} object for the specified
schema language.</p>

@param schemaLanguage
     See {@link SchemaFactory Schema Language} table in <code>SchemaFactory</code>
     for the list of available schema languages.

@return <code>null</code> if the callee fails to create one.

@throws NullPointerException
     If the <tt>schemaLanguage</tt> parameter is null."
      end

      operation 10096411 "_newFactory"
	private return_type class_ref 779419 // SchemaFactory
	nparams 1
	  param in name "schemaLanguage" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Lookup a <code>SchemaFactory</code> for the given <code>schemaLanguage</code>.</p>

@param schemaLanguage Schema language to lookup <code>SchemaFactory</code> for.
 
@return <code>SchemaFactory</code> for the given <code>schemaLanguage</code>."
      end

      operation 10096539 "createInstance"
	private return_type class_ref 779419 // SchemaFactory
	nparams 1
	  param in name "className" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates an instance of the specified and returns it.</p>

@param className
     fully qualified class name to be instanciated.

@return null
     if it fails. Error messages will be printed by this method. "
      end

      class 1216411 "SingleIterator"
	abstract visibility private 
	nactuals 4
	actual class class_ref 135323 // Iterator
	  rank 0 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 1 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 2 explicit_value ""
	actual class class_ref 135323 // Iterator
	  rank 3 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2619291 // <realization>
	  relation 2619291 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2619291 // <realization>
	    b parent class_ref 135323 // Iterator
	end

	attribute 3391899 "seen"
	  private explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10096667 "remove"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10096795 "hasNext"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10096923 "next"
	  public explicit_return_type "Object"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10097051 "value"
	  abstract protected explicit_return_type "Object"
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 10097179 "loadFromProperty"
	private return_type class_ref 779419 // SchemaFactory
	nparams 3
	  param in name "keyName" explicit_type "String"
	  param in name "resourceName" explicit_type "String"
	  param inout name "in" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks up a value in a property file
while producing all sorts of debug messages.

@return null
     if there was an error."
      end

      operation 10097307 "createServiceFileIterator"
	private return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@link Iterator} that enumerates all 
the META-INF/services files that we care."
      end

      classrelation 2619419 // SERVICE_CLASS (<unidirectional association>)
	relation 2619419 --->
	  a role_name "SERVICE_CLASS" init_value "=  SchemaFactory.class" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2619419 // SERVICE_CLASS (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 3392027 "SERVICE_ID"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"META-INF/services/\" + SERVICE_CLASS.getName()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 10097435 "which"
	class_operation private explicit_return_type "String"
	nparams 1
	  param inout name "clazz" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10097563 "which"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "classname" explicit_type "String"
	  param inout name "loader" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Search the specified classloader for the given classname.</p>

@param classname the fully qualified name of the class to search for
@param loader the classloader to search

@return the source location of the resource, or null if it wasn't found"
      end
    end

    class 1216539 "SchemaFactoryLoader"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Factory that creates {@link SchemaFactory}.</p>

<p>
This class is intended to be used by the implementations of
the validation API, not by users.
</p>

@author <a href=\"Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@version $Revision: 1.6 $, $Date: 2004/03/17 03:58:54 $
@since 1.5"
      operation 10097691 "SchemaFactoryLoader"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A do-nothing constructor."
      end

      operation 10097819 "newFactory"
	abstract public return_type class_ref 779419 // SchemaFactory
	nparams 1
	  param in name "schemaLanguage" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link SchemaFactory} object for the specified
schema language.

@param schemaLanguage
     See <a href=\"../SchemaFactory.html#schemaLanguage\">
     the list of available schema languages</a>.

@throws NullPointerException
     If the <tt>schemaLanguage</tt> parameter is null.

@return <code>null</code> if the callee fails to create one."
      end
    end
  end

  deploymentview 162971 "validation"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 560027 "ValidatorHandler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.ls.LSResourceResolver;
import org.xml.sax.ContentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_classes
	class_ref 773787 // ValidatorHandler
      end
      comment " $Id: ValidatorHandler.java,v 1.23.16.1 2004/06/28 18:26:43 ndw Exp $

@(#)ValidatorHandler.java	1.7 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 560283 "Validator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import org.w3c.dom.ls.LSResourceResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_classes
	class_ref 778139 // Validator
      end
      comment " $Id: Validator.java,v 1.18.14.1.2.4 2004/07/13 22:27:52 jsuttor Exp $

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 560795 "Schema"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 773147 // Schema
      end
      comment " $Id: Schema.java,v 1.4 2003/12/06 00:21:36 jsuttor Exp $

@(#)Schema.java	1.5 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 561307 "SchemaFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.net.URL;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import org.w3c.dom.ls.LSResourceResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_classes
	class_ref 779419 // SchemaFactory
      end
      comment " $Id: SchemaFactory.java,v 1.20.10.1.2.3 2004/09/16 09:24:47 nb131165 Exp $

@(#)SchemaFactory.java	1.13 05/01/04

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 903195 "SchemaFactoryFinder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Properties;
${definition}"
      associated_classes
	class_ref 1216283 // SchemaFactoryFinder
      end
      comment " $Id: SchemaFactoryFinder.java,v 1.14 2004/11/24 23:32:37 jsuttor Exp $

@(#)SchemaFactoryFinder.java	1.12 05/01/04

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
"
    end

    artifact 903323 "SchemaFactoryLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1216539 // SchemaFactoryLoader
      end
      comment " $Id: SchemaFactoryLoader.java,v 1.6 2004/03/17 03:58:54 jsuttor Exp $

@(#)SchemaFactoryLoader.java	1.3 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 903451 "SecuritySupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.URL;
import java.security.*;
import java.net.*;
import java.io.*;
import java.util.*;
${definition}"
      associated_classes
	class_ref 779547 // SecuritySupport
      end
      comment "@(#)SecuritySupport.java	1.3 05/01/04

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 903579 "TypeInfoProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.TypeInfo;
${definition}"
      associated_classes
	class_ref 774171 // TypeInfoProvider
      end
      comment " $Id: TypeInfoProvider.java,v 1.11 2004/02/06 01:16:10 kk122374 Exp $

@(#)TypeInfoProvider.java	1.5 04/07/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
