class FunctionOneArg
!!!6013595.java!!!	getArg0() : Expression
    return m_arg0;
!!!6013723.java!!!	setArg(inout arg : Expression, in argNum : int) : void

    if (0 == argNum)
    {
      m_arg0 = arg;
      arg.exprSetParent(this);
    }
    else
      reportWrongNumberArgs();
!!!6013851.java!!!	checkNumberArgs(in argNum : int) : void
    if (argNum != 1)
      reportWrongNumberArgs();
!!!6013979.java!!!	reportWrongNumberArgs() : void
      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("one", null));
!!!6014107.java!!!	canTraverseOutsideSubtree() : boolean
    return m_arg0.canTraverseOutsideSubtree();
!!!6014235.java!!!	fixupVariables(inout vars : Vector, in globalsSize : int) : void
    if(null != m_arg0)
      m_arg0.fixupVariables(vars, globalsSize);
!!!6014363.java!!!	callArgVisitors(inout visitor : XPathVisitor) : void
  	if(null != m_arg0)
  		m_arg0.callVisitors(this, visitor);
!!!6014491.java!!!	getExpression() : Expression
    return m_arg0;
!!!6014619.java!!!	setExpression(inout exp : Expression) : void
  	exp.exprSetParent(this);
  	m_arg0 = exp;
!!!6014747.java!!!	deepEquals(inout expr : Expression) : boolean
  	if(!super.deepEquals(expr))
  		return false;
  		
  	if(null != m_arg0)
  	{
  		if(null == ((FunctionOneArg)expr).m_arg0)
  			return false;
  			
  		if(!m_arg0.deepEquals(((FunctionOneArg)expr).m_arg0))
  			return false;
  	}
  	else if(null != ((FunctionOneArg)expr).m_arg0)
  		return false;

  	return true;
