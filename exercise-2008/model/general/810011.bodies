class StringToStringTable
!!!5833371.java!!!	StringToStringTable()

    m_blocksize = 16;
    m_mapSize = m_blocksize;
    m_map = new String[m_blocksize];
!!!5833499.java!!!	StringToStringTable(in blocksize : int)

    m_blocksize = blocksize;
    m_mapSize = blocksize;
    m_map = new String[blocksize];
!!!5833627.java!!!	getLength() : int
    return m_firstFree;
!!!5833755.java!!!	put(in key : String, in value : String) : void

    if ((m_firstFree + 2) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      String newMap[] = new String[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_map[m_firstFree] = key;

    m_firstFree++;

    m_map[m_firstFree] = value;

    m_firstFree++;
!!!5833883.java!!!	get(in key : String) : String

    for (int i = 0; i < m_firstFree; i += 2)
    {
      if (m_map[i].equals(key))
        return m_map[i + 1];
    }

    return null;
!!!5834011.java!!!	remove(in key : String) : void

    for (int i = 0; i < m_firstFree; i += 2)
    {
      if (m_map[i].equals(key))
      {
        if ((i + 2) < m_firstFree)
          System.arraycopy(m_map, i + 2, m_map, i, m_firstFree - (i + 2));

        m_firstFree -= 2;
        m_map[m_firstFree] = null;
        m_map[m_firstFree + 1] = null;

        break;
      }
    }
!!!5834139.java!!!	getIgnoreCase(in key : String) : String

    if (null == key)
      return null;

    for (int i = 0; i < m_firstFree; i += 2)
    {
      if (m_map[i].equalsIgnoreCase(key))
        return m_map[i + 1];
    }

    return null;
!!!5834267.java!!!	getByValue(in val : String) : String

    for (int i = 1; i < m_firstFree; i += 2)
    {
      if (m_map[i].equals(val))
        return m_map[i - 1];
    }

    return null;
!!!5834395.java!!!	elementAt(in i : int) : String
    return m_map[i];
!!!5834523.java!!!	contains(in key : String) : boolean

    for (int i = 0; i < m_firstFree; i += 2)
    {
      if (m_map[i].equals(key))
        return true;
    }

    return false;
!!!5834651.java!!!	containsValue(in val : String) : boolean

    for (int i = 1; i < m_firstFree; i += 2)
    {
      if (m_map[i].equals(val))
        return true;
    }

    return false;
