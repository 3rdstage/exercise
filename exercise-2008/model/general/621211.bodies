class DocumentTypeImpl
!!!4834587.java!!!	DocumentTypeImpl(inout ownerDocument : CoreDocumentImpl, in name : String)
        super(ownerDocument);
        
        this.name = name;
        // DOM
        entities  = new NamedNodeMapImpl(this);
        notations = new NamedNodeMapImpl(this);
        
        // NON-DOM
        elements = new NamedNodeMapImpl(this);
        
!!!4834715.java!!!	DocumentTypeImpl(inout ownerDocument : CoreDocumentImpl, in qualifiedName : String, in publicID : String, in systemID : String)
        this(ownerDocument, qualifiedName);
        this.publicID = publicID;
        this.systemID = systemID;
        
!!!4834843.java!!!	getPublicId() : String
        if (needsSyncData()) {
            synchronizeData();
        }
        return publicID;
!!!4834971.java!!!	getSystemId() : String
        if (needsSyncData()) {
            synchronizeData();
        }
        return systemID;
!!!4835099.java!!!	setInternalSubset(in internalSubset : String) : void
        if (needsSyncData()) {
            synchronizeData();
        }
        this.internalSubset = internalSubset;
!!!4835227.java!!!	getInternalSubset() : String
        if (needsSyncData()) {
            synchronizeData();
        }
        return internalSubset;
!!!4835355.java!!!	getNodeType() : short
        return Node.DOCUMENT_TYPE_NODE;
!!!4835483.java!!!	getNodeName() : String
        if (needsSyncData()) {
            synchronizeData();
        }
        return name;
!!!4835611.java!!!	cloneNode(inout deep : boolean) : Node
        
        DocumentTypeImpl newnode = (DocumentTypeImpl)super.cloneNode(deep);
        // NamedNodeMaps must be cloned explicitly, to avoid sharing them.
        newnode.entities  = entities.cloneMap(newnode);
        newnode.notations = notations.cloneMap(newnode);
        newnode.elements  = elements.cloneMap(newnode);
        
        return newnode;
        
!!!4835739.java!!!	getTextContent() : String
        return null;
!!!4835867.java!!!	setTextContent(in textContent : String) : void
        // no-op
!!!4835995.java!!!	isEqualNode(inout arg : Node) : boolean
        
        if (!super.isEqualNode(arg)) {
            return false;
        }
        
        if (needsSyncData()) {
            synchronizeData();
        }
        DocumentTypeImpl argDocType = (DocumentTypeImpl) arg;
        
        //test if the following string attributes are equal: publicId,
        //systemId, internalSubset.
        if ((getPublicId() == null && argDocType.getPublicId() != null)
        || (getPublicId() != null && argDocType.getPublicId() == null)
        || (getSystemId() == null && argDocType.getSystemId() != null)
        || (getSystemId() != null && argDocType.getSystemId() == null)
        || (getInternalSubset() == null
        && argDocType.getInternalSubset() != null)
        || (getInternalSubset() != null
        && argDocType.getInternalSubset() == null)) {
            return false;
        }
        
        if (getPublicId() != null) {
            if (!getPublicId().equals(argDocType.getPublicId())) {
                return false;
            }
        }
        
        if (getSystemId() != null) {
            if (!getSystemId().equals(argDocType.getSystemId())) {
                return false;
            }
        }
        
        if (getInternalSubset() != null) {
            if (!getInternalSubset().equals(argDocType.getInternalSubset())) {
                return false;
            }
        }
        
        //test if NamedNodeMaps entities and notations are equal
        NamedNodeMapImpl argEntities = argDocType.entities;
        
        if ((entities == null && argEntities != null)
        || (entities != null && argEntities == null))
            return false;
        
        if (entities != null && argEntities != null) {
            if (entities.getLength() != argEntities.getLength())
                return false;
            
            for (int index = 0; entities.item(index) != null; index++) {
                Node entNode1 = entities.item(index);
                Node entNode2 =
                argEntities.getNamedItem(entNode1.getNodeName());
                
                if (!((NodeImpl) entNode1).isEqualNode((NodeImpl) entNode2))
                    return false;
            }
        }
        
        NamedNodeMapImpl argNotations = argDocType.notations;
        
        if ((notations == null && argNotations != null)
        || (notations != null && argNotations == null))
            return false;
        
        if (notations != null && argNotations != null) {
            if (notations.getLength() != argNotations.getLength())
                return false;
            
            for (int index = 0; notations.item(index) != null; index++) {
                Node noteNode1 = notations.item(index);
                Node noteNode2 =
                argNotations.getNamedItem(noteNode1.getNodeName());
                
                if (!((NodeImpl) noteNode1).isEqualNode((NodeImpl) noteNode2))
                    return false;
            }
        }
        
        return true;
!!!4836123.java!!!	setOwnerDocument(inout doc : CoreDocumentImpl) : void
        super.setOwnerDocument(doc);
        entities.setOwnerDocument(doc);
        notations.setOwnerDocument(doc);
        elements.setOwnerDocument(doc);
!!!4836251.java!!!	getNodeNumber() : int
        // If the doctype has a document owner, get the node number
        // relative to the owner doc
        if (getOwnerDocument()!=null)
            return super.getNodeNumber();
        
        // The doctype is disconnected and not associated with any document.
        // Assign the doctype a number relative to the implementation.
        if (doctypeNumber==0) {
            
            CoreDOMImplementationImpl cd = (CoreDOMImplementationImpl)CoreDOMImplementationImpl.getDOMImplementation();
            doctypeNumber = cd.assignDocTypeNumber();
        }
        return doctypeNumber;
!!!4836379.java!!!	getName() : String
        
        if (needsSyncData()) {
            synchronizeData();
        }
        return name;
        
!!!4836507.java!!!	getEntities() : NamedNodeMap
        if (needsSyncChildren()) {
            synchronizeChildren();
        }
        return entities;
!!!4836635.java!!!	getNotations() : NamedNodeMap
        if (needsSyncChildren()) {
            synchronizeChildren();
        }
        return notations;
!!!4836763.java!!!	setReadOnly(inout readOnly : boolean, inout deep : boolean) : void
        
        if (needsSyncChildren()) {
            synchronizeChildren();
        }
        super.setReadOnly(readOnly, deep);
        
        // set read-only property
        elements.setReadOnly(readOnly, true);
        entities.setReadOnly(readOnly, true);
        notations.setReadOnly(readOnly, true);
        
!!!4836891.java!!!	getElements() : NamedNodeMap
        if (needsSyncChildren()) {
            synchronizeChildren();
        }
        return elements;
!!!4837019.java!!!	setUserData(in key : String, inout data : Object, inout handler : UserDataHandler) : Object
        if(userData == null)
            userData = new Hashtable();
        if (data == null) {
            if (userData != null) {
                Object o = userData.remove(key);
                if (o != null) {
                    UserDataRecord r = (UserDataRecord) o;
                    return r.fData;
                }
            }
            return null;
        }
        else {
            Object o = userData.put(key, new UserDataRecord(data, handler));
            if (o != null) {
                UserDataRecord r = (UserDataRecord) o;
                return r.fData;
            }
        }
        return null;
!!!4837147.java!!!	getUserData(in key : String) : Object
        if (userData == null) {
            return null;
        }
        Object o = userData.get(key);
        if (o != null) {
            UserDataRecord r = (UserDataRecord) o;
            return r.fData;
        }
        return null;
!!!4837275.java!!!	getUserDataRecord() : Hashtable
        return userData;
