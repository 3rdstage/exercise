class NotSingleU
!!!8114971.java!!!	NotSingleU(in c : int)
            ch = Character.toLowerCase(Character.toUpperCase((char)c));
!!!8115099.java!!!	dup(inout not : boolean) : Node
            if (not)
                return new SingleU(ch);
            else
                return new NotSingleU(ch);
!!!8115227.java!!!	match(inout matcher : Matcher, in i : int, inout seq : CharSequence) : boolean
            if (i >= matcher.to) {
                matcher.hitEnd = true;
            } else {
                int c = Character.codePointAt(seq, i);
                if (c == ch)
                    return false;
                int cc = Character.toUpperCase(c);
                cc = Character.toLowerCase(cc);

                if (cc != ch)
                    return next.match(matcher, i+Character.charCount(c), seq);
            }
            return false;
!!!8115355.java!!!	study(inout info : TreeInfo) : boolean
            info.minLength++;
            info.maxLength++;
            return next.study(info);
