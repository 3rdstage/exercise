class Function2Args
!!!6015131.java!!!	getArg1() : Expression
    return m_arg1;
!!!6015259.java!!!	fixupVariables(inout vars : Vector, in globalsSize : int) : void
    super.fixupVariables(vars, globalsSize);
    if(null != m_arg1)
      m_arg1.fixupVariables(vars, globalsSize);
!!!6015387.java!!!	setArg(inout arg : Expression, in argNum : int) : void

    // System.out.println("argNum: "+argNum);
    if (argNum == 0)
      super.setArg(arg, argNum);
    else if (1 == argNum)
    {
      m_arg1 = arg;
      arg.exprSetParent(this);
    }
    else
		  reportWrongNumberArgs();
!!!6015515.java!!!	checkNumberArgs(in argNum : int) : void
    if (argNum != 2)
      reportWrongNumberArgs();
!!!6015643.java!!!	reportWrongNumberArgs() : void
      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("two", null));
!!!6015771.java!!!	canTraverseOutsideSubtree() : boolean
    return super.canTraverseOutsideSubtree() 
    ? true : m_arg1.canTraverseOutsideSubtree();
!!!6016155.java!!!	callArgVisitors(inout visitor : XPathVisitor) : void
  	super.callArgVisitors(visitor);
  	if(null != m_arg1)
  		m_arg1.callVisitors(new Arg1Owner(), visitor);
!!!6016283.java!!!	deepEquals(inout expr : Expression) : boolean
  	if(!super.deepEquals(expr))
  		return false;
  		
  	if(null != m_arg1)
  	{
  		if(null == ((Function2Args)expr).m_arg1)
  			return false;
  			
  		if(!m_arg1.deepEquals(((Function2Args)expr).m_arg1))
  			return false;
  	}
  	else if(null != ((Function2Args)expr).m_arg1)
  		return false;
  		
  	return true;
