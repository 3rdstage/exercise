class ArrayQueue
!!!3225371.java!!!	ArrayQueue(in capacity : int)
	this.capacity = capacity + 1;
	this.queue = (T[]) new Object[capacity + 1];
	this.head = 0;
	this.tail = 0;
!!!3225499.java!!!	resize(in newcapacity : int) : void
	int size = size();
	if (newcapacity < size)
	    throw new IndexOutOfBoundsException("Resizing would lose data");
	newcapacity++;
	if (newcapacity == this.capacity)
	    return;
	T[] newqueue = (T[]) new Object[newcapacity];
	for (int i = 0; i < size; i++)
	    newqueue[i] = get(i);
	this.capacity = newcapacity;
	this.queue = newqueue;
	this.head = 0;
	this.tail = size;
!!!3225627.java!!!	add(inout o : T) : boolean
	queue[tail] = o;
	int newtail = (tail + 1) % capacity;
	if (newtail == head)
	    throw new IndexOutOfBoundsException("Queue full");
	tail = newtail;
	return true; // we did add something
!!!3225755.java!!!	remove(in i : int) : T
	if (i != 0)
	    throw new IllegalArgumentException("Can only remove head of queue");
	if (head == tail)
	    throw new IndexOutOfBoundsException("Queue empty");
	T removed = queue[head];
	queue[head] = null;
	head = (head + 1) % capacity;
	return removed;
!!!3225883.java!!!	get(in i : int) : T
	int size = size();
	if (i < 0 || i >= size) {
	    final String msg = "Index " + i + ", queue size " + size;
	    throw new IndexOutOfBoundsException(msg);
	}
	int index = (head + i) % capacity;
	return queue[index];
!!!3226011.java!!!	size() : int
	// Can't use % here because it's not mod: -3 % 2 is -1, not +1.
	int diff = tail - head;
	if (diff < 0)
	    diff += capacity;
	return diff;
