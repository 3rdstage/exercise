format 66
"monitor" // src::javax::management::monitor
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management/monitor"
  java_package "javax.management.monitor"
  classview 177051 "monitor"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1036315 "CounterMonitor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a monitor MBean designed to observe the values of a counter
attribute.

<P> A counter monitor sends a {@link
MonitorNotification#THRESHOLD_VALUE_EXCEEDED threshold
notification} when the value of the counter reaches or exceeds a
threshold known as the comparison level.  The notify flag must be
set to <CODE>true</CODE>.

<P> In addition, an offset mechanism enables particular counting
intervals to be detected.  If the offset value is not zero,
whenever the threshold is triggered by the counter value reaching a
comparison level, that comparison level is incremented by the
offset value.  This is regarded as taking place instantaneously,
that is, before the count is incremented.  Thus, for each level,
the threshold triggers an event notification every time the count
increases by an interval equal to the offset value.

<P> If the counter can wrap around its maximum value, the modulus
needs to be specified.  The modulus is the value at which the
counter is reset to zero.

<P> If the counter difference mode is used, the value of the
derived gauge is calculated as the difference between the observed
counter values for two successive observations.  If this difference
is negative, the value of the derived gauge is incremented by the
value of the modulus.  The derived gauge value (V[t]) is calculated
using the following method:

<UL>
<LI>if (counter[t] - counter[t-GP]) is positive then
V[t] = counter[t] - counter[t-GP]
<LI>if (counter[t] - counter[t-GP]) is negative then
V[t] = counter[t] - counter[t-GP] + MODULUS
</UL>

This implementation of the counter monitor requires the observed
attribute to be of the type integer (<CODE>Byte</CODE>,
<CODE>Integer</CODE>, <CODE>Short</CODE>, <CODE>Long</CODE>).

@version     1.74     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2052251 // <generalisation>
	relation 2052251 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2052251 // <generalisation>
	  b parent class_ref 1036443 // Monitor
      end

      classrelation 2052507 // <realization>
	relation 2052507 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2052507 // <realization>
	  b parent class_ref 1036699 // CounterMonitorMBean
      end

      classrelation 2052635 // INTEGER_ZERO (<unidirectional association>)
	relation 2052635 --->
	  a role_name "INTEGER_ZERO" init_value "=  new Integer(0)" class_relation const_relation private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052635 // INTEGER_ZERO (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      classrelation 2052763 // threshold (<unidirectional association>)
	relation 2052763 --->
	  a role_name "threshold" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Counter thresholds.
<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2052763 // threshold (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      classrelation 2052891 // modulus (<unidirectional association>)
	relation 2052891 --->
	  a role_name "modulus" init_value "=  INTEGER_ZERO" private
	    comment "
Counter modulus.
<BR>The default value is a null Integer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052891 // modulus (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      classrelation 2053019 // offset (<unidirectional association>)
	relation 2053019 --->
	  a role_name "offset" init_value "=  INTEGER_ZERO" private
	    comment "
Counter offset.
<BR>The default value is a null Integer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053019 // offset (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3041307 "notify"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the counter monitor notifies when exceeding
the threshold.  The default value is set to
<CODE>false</CODE>.
"
      end

      attribute 3041435 "differenceMode"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the counter difference mode is used.  If the
counter difference mode is used, the derived gauge is the
difference between two consecutive observed values.  Otherwise,
the derived gauge is directly the value of the observed
attribute.  The default value is set to <CODE>false</CODE>.
"
      end

      classrelation 2053147 // initThreshold (<unidirectional association>)
	relation 2053147 --->
	  a role_name "initThreshold" init_value "=  INTEGER_ZERO" private
	    comment "
Initial counter threshold.  This value is used to initialize
the threshold when a new object is added to the list and reset
the threshold to its initial value each time the counter
resets.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053147 // initThreshold (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      classrelation 2053275 // derivedGauge (<unidirectional association>)
	relation 2053275 --->
	  a role_name "derivedGauge" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Derived gauges.

<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2053275 // derivedGauge (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3041563 "derivedGaugeTimestamp"
	private explicit_type "long"
	multiplicity "[]"
	init_value "=  new long[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Derived gauge timestamp.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      classrelation 2053403 // previousScanCounter (<unidirectional association>)
	relation 2053403 --->
	  a role_name "previousScanCounter" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Scan counter value captured by the previous observation.
<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2053403 // previousScanCounter (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3041691 "modulusExceeded"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value "=  new boolean[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the modulus has been exceeded by the
threshold.  This flag is used to reset the threshold once we
are sure that the counter has been resetted.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      classrelation 2053531 // derivedGaugeExceeded (<unidirectional association>)
	relation 2053531 --->
	  a role_name "derivedGaugeExceeded" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Derived gauge captured when the modulus has been exceeded by
the threshold.  This value is used to check if the counter has
been resetted (in order to reset the threshold).
<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2053531 // derivedGaugeExceeded (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3041819 "eventAlreadyNotified"
	private explicit_type "boolean"
	multiplicity "[]"
	init_value "=  new boolean[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag is used to notify only once between two granularity
periods.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      attribute 3041947 "type"
	private explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This attribute is used to keep the derived gauge type.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      attribute 3042075 "INTEGER"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags needed to keep trace of the derived gauge type.
 Integer types only are allowed.
"
      end

      attribute 3042203 "BYTE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3042331 "SHORT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3042459 "LONG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3042587 "THRESHOLD_ERROR_NOTIFIED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " New flags defining possible counter monitor errors.
 Flag denoting that a notification has occured after changing
 the threshold.
 This flag is used to check that the threshold, offset and
 modulus types are the same as the counter.
"
      end

      classrelation 2053659 // timer (<unidirectional association>)
	relation 2053659 --->
	  a role_name "timer" init_value "=  null" private
	    comment "
Timer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2053659 // timer (<unidirectional association>)
	  b parent class_ref 156827 // Timer
      end

      operation 8320667 "makeDebugTag"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8320795 "CounterMonitor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Default constructor."
      end

      operation 8320923 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Allows the counter monitor MBean to perform any operations it
needs before being unregistered by the MBean server.

<P>Resets the threshold values.

@exception java.lang.Exception"
      end

      operation 8321051 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the counter monitor."
      end

      operation 8321179 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the counter monitor.

This method is not synchronized, because if it were there could
be a deadlock with a thread that attempted to get the lock on
the monitor before being interrupted or noticing that it had
been interrupted."
      end

      operation 8321307 "setGranularityPeriod"
	public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Sets the granularity period (in milliseconds).
<BR>The default value of the granularity period is 10 seconds.

@param period The granularity period value.
@exception java.lang.IllegalArgumentException The granularity
period is less than or equal to zero.

@see Monitor#setGranularityPeriod(long)"
      end

      operation 8321435 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge of the specified object, if this object is
contained in the set of observed MBeans, or <code>null</code> otherwise.

@param object the name of the object whose derived gauge is to
be returned.

@return The derived gauge of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8321563 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp of the specified object, if
this object is contained in the set of observed MBeans, or
<code>null</code> otherwise.

@param object the name of the object whose derived gauge
timestamp is to be returned.

@return The derived gauge timestamp of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8321691 "getThreshold"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current threshold value of the specified object, if
this object is contained in the set of observed MBeans, or
<code>null</code> otherwise.

@param object the name of the object whose threshold is to be
returned.

@return The threshold value of the specified object.

@see #setThreshold

@since.unbundled JMX 1.2"
      end

      operation 8321819 "getInitThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the initial threshold value common to all observed objects.

@return The initial threshold.

@see #setInitThreshold

@since.unbundled JMX 1.2"
      end

      operation 8321947 "setInitThreshold"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the initial threshold value common to all observed objects.

<BR>The current threshold of every object in the set of
observed MBeans is updated consequently.

@param value The initial threshold value.
@exception java.lang.IllegalArgumentException The specified
threshold is null or the threshold value is less than zero.

@see #getInitThreshold

@since.unbundled JMX 1.2"
      end

      operation 8322075 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the derived gauge of the first object in the set of
observed MBeans.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8322203 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp of the first object in the set
of observed MBeans.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by
{@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8322331 "getThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the threshold value of the first object in the set of
observed MBeans.

@return The threshold value.

@see #setThreshold(Number)

@deprecated As of JMX 1.2, replaced by {@link #getThreshold(ObjectName)}"
      end

      operation 8322459 "setThreshold"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the initial threshold value.

@param value The initial threshold value.
@exception IllegalArgumentException The specified threshold is
null or the threshold value is less than zero.

@see #getThreshold()

@deprecated As of JMX 1.2, replaced by {@link #setInitThreshold}"
      end

      operation 8322587 "getOffset"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the offset value common to all observed MBeans.

@return The offset value.

@see #setOffset"
      end

      operation 8322715 "setOffset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the offset value common to all observed MBeans.

@param value The offset value.
@exception java.lang.IllegalArgumentException The specified
offset is null or the offset value is less than zero.

@see #getOffset"
      end

      operation 8322843 "getModulus"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the modulus value common to all observed MBeans.

@see #setModulus

@return The modulus value."
      end

      operation 8322971 "setModulus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the modulus value common to all observed MBeans.

@param value The modulus value.
@exception java.lang.IllegalArgumentException The specified
modulus is null or the modulus value is less than zero.

@see #getModulus"
      end

      operation 8323099 "getNotify"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the notification's on/off switch value common to all
observed MBeans.

@return <CODE>true</CODE> if the counter monitor notifies when
exceeding the threshold, <CODE>false</CODE> otherwise.

@see #setNotify"
      end

      operation 8323227 "setNotify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the notification's on/off switch value common to all
observed MBeans.

@param value The notification's on/off switch value.

@see #getNotify"
      end

      operation 8323355 "getDifferenceMode"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the difference mode flag value common to all observed MBeans.

@return <CODE>true</CODE> if the difference mode is used,
<CODE>false</CODE> otherwise.

@see #setDifferenceMode"
      end

      operation 8323483 "setDifferenceMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the difference mode flag value common to all observed MBeans.

@param value The difference mode flag value.

@see #getDifferenceMode"
      end

      operation 8323611 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <CODE>NotificationInfo</CODE> object containing the
name of the Java class of the notification and the notification
types sent by the counter monitor."
      end

      operation 8323739 "updateDerivedGauge"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "scanCounter" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------


Updates the derived gauge and the derived gauge timestamp attributes
of the observed object at the specified index.

@param scanCounter The value of the observed attribute.
@param index The index of the observed object.
@return <CODE>true</CODE> if the derived gauge value is valid,
<CODE>false</CODE> otherwise.  The derived gauge value is
invalid when the differenceMode flag is set to
<CODE>true</CODE> and it is the first notification (so we
haven't 2 consecutive values to update the derived gauge)."
      end

      operation 8323867 "updateNotifications"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the notification attribute of the observed object at the
specified index and notifies the listeners only once if the notify flag
is set to <CODE>true</CODE>.
@param index The index of the observed object."
      end

      operation 8323995 "updateThreshold"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the threshold attribute of the observed object at the
specified index.
@param index The index of the observed object."
      end

      operation 8324123 "isThresholdTypeValid"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the threshold, offset and modulus of the specified index are
of the same type as the counter. Only integer types are allowed.

Note:
  If the optional offset or modulus have not been initialized, their
  default value is an Integer object with a value equal to zero.

@param index The index of the observed object.
@return <CODE>true</CODE> if type is the same,
<CODE>false</CODE> otherwise."
      end

      operation 8324251 "setDerivedGaugeWithDifference"
	private explicit_return_type "void"
	nparams 3
	  param inout name "scanCounter" type class_ref 413979 // Number
	  param inout name "mod" type class_ref 413979 // Number
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the derived gauge of the specified index when the
differenceMode flag is set to <CODE>true</CODE>.  Integer types
only are allowed.

@param scanCounter The value of the observed attribute.
@param mod The counter modulus value.
@param index The index of the observed object."
      end

      operation 8324379 "notifyAlarmClock"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


This method is called by the counter monitor each time
the granularity period has been exceeded.
@param index The index of the observed object."
      end

      operation 8324507 "insertSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when adding a new observed object in the vector.
It updates all the counter specific arrays.
@param index The index of the observed object."
      end

      operation 8324635 "removeSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when removing an observed object from the vector.
It updates all the counter specific arrays.
@param index The index of the observed object."
      end

      class 1036827 "CounterAlarmClock"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2053787 // <generalisation>
	  relation 2053787 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2053787 // <generalisation>
	    b parent class_ref 157211 // TimerTask
	end

	classrelation 2053915 // listener (<unidirectional association>)
	  relation 2053915 --->
	    a role_name "listener" init_value "=  null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2053915 // listener (<unidirectional association>)
	    b parent class_ref 1036315 // CounterMonitor
	end

	operation 8324763 "CounterAlarmClock"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "listener" type class_ref 1036315 // CounterMonitor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------"
	end

	operation 8324891 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


This method is called by the CounterAlarmClock thread when
it is started."
	end
      end
    end

    class 1036443 "Monitor"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the common part to all monitor MBeans.
A monitor MBean monitors values of an attribute common to a set of observed
MBeans. The observed attribute is monitored at intervals specified by the
granularity period. A gauge value (derived gauge) is derived from the values
of the observed attribute.

@version     4.42     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2051611 // <generalisation>
	relation 2051611 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2051611 // <generalisation>
	  b parent class_ref 516763 // NotificationBroadcasterSupport
      end

      classrelation 2051739 // <realization>
	relation 2051739 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2051739 // <realization>
	  b parent class_ref 1036571 // MonitorMBean
      end

      classrelation 2051867 // <realization>
	relation 2051867 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2051867 // <realization>
	  b parent class_ref 517019 // MBeanRegistration
      end

      classrelation 2051995 // observedObjects (<unidirectional association>)
	relation 2051995 --->
	  a role_name "observedObjects" init_value "=  new ArrayList()" private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------


List of MBeans to which the attribute to observe belongs.
<BR>The default value is set to null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2051995 // observedObjects (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      attribute 3039515 "observedAttribute"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Attribute to observe.
<BR>The default value is set to null.
"
      end

      attribute 3039643 "granularityPeriod"
	private explicit_type "long"
	init_value "=  10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Monitor granularity period (in milliseconds).
<BR>The default value is set to 10 seconds.
"
      end

      attribute 3039771 "capacityIncrement"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PROTECTED VARIABLES
------------------------------------------


The amount by which the capacity of the monitor arrays are
automatically incremented when their size becomes greater than
their capacity.
"
      end

      attribute 3039899 "elementCount"
	protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of valid components in the vector of observed objects.

@since.unbundled JMX 1.2
"
      end

      attribute 3040027 "alreadyNotified"
	protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Monitor errors that have already been notified.
@deprecated equivalent to {@link #alreadyNotifieds}[0].
"
      end

      attribute 3040155 "alreadyNotifieds"
	protected explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Selected monitor errors that have already been notified.</p>

<p>Each element in this array corresponds to an observed object
in the vector.  It contains a bit mask of the flags {@link
#OBSERVED_OBJECT_ERROR_NOTIFIED} etc, indicating whether the
corresponding notification has already been sent for the MBean
being monitored.</p>

@since.unbundled JMX 1.2
"
      end

      classrelation 2052123 // server (<unidirectional association>)
	relation 2052123 --->
	  a role_name "server" init_value "=  null" protected
	    comment "
Reference on the MBean server.  This reference is null when the
monitor MBean is not registered in an MBean server.  This
reference is initialized before the monitor MBean is registered
in the MBean server.
@see #preRegister(MBeanServer server, ObjectName name)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2052123 // server (<unidirectional association>)
	  b parent class_ref 513179 // MBeanServer
      end

      attribute 3040283 "RESET_FLAGS_ALREADY_NOTIFIED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags defining possible monitor errors.


This flag is used to reset the {@link #alreadyNotifieds
alreadyNotifieds} monitor attribute.
"
      end

      attribute 3040411 "OBSERVED_OBJECT_ERROR_NOTIFIED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag denoting that a notification has occurred after changing
the observed object.  This flag is used to check that the new
observed object is registered in the MBean server at the time
of the first notification.
"
      end

      attribute 3040539 "OBSERVED_ATTRIBUTE_ERROR_NOTIFIED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag denoting that a notification has occurred after changing
the observed attribute.  This flag is used to check that the
new observed attribute belongs to the observed object at the
time of the first notification.
"
      end

      attribute 3040667 "OBSERVED_ATTRIBUTE_TYPE_ERROR_NOTIFIED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag denoting that a notification has occurred after changing
the observed object or the observed attribute.  This flag is
used to check that the observed attribute type is correct
(depending on the monitor in use) at the time of the first
notification.
"
      end

      attribute 3040795 "RUNTIME_ERROR_NOTIFIED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag denoting that a notification has occurred after changing
the observed object or the observed attribute.  This flag is
used to notify any exception (except the cases described above)
when trying to get the value of the observed attribute at the
time of the first notification.
"
      end

      attribute 3040923 "dbgTag"
	protected explicit_type "String"
	init_value "=  \"Monitor\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is retained for compatibility but should not be referenced.

@deprecated No replacement.
"
      end

      attribute 3041051 "isActive"
	package explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PACKAGE VARIABLES
------------------------------------------


Monitor state.
The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3041179 "sequenceNumber"
	package explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Monitor sequence number.
The default value is set to 0.
"
      end

      operation 8313115 "isTraceOn"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8313243 "trace"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8313371 "trace"
	package explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8313499 "isDebugOn"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8313627 "debug"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8313755 "debug"
	package explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8313883 "preRegister"
	public return_type class_ref 510875 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 513179 // MBeanServer
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Allows the monitor MBean to perform any operations it needs
before being registered in the MBean server.
<P>
Initializes the reference to the MBean server.

@param server The MBean server in which the monitor MBean will
be registered.
@param name The object name of the monitor MBean.

@return The name of the monitor MBean registered.

@exception java.lang.Exception"
      end

      operation 8314011 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 392091 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the monitor MBean to perform any operations needed after
having been registered in the MBean server or after the
registration has failed.
<P>
Not used in this context."
      end

      operation 8314139 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the monitor MBean to perform any operations it needs
before being unregistered by the MBean server.
<P>
Stops the monitor.

@exception java.lang.Exception"
      end

      operation 8314267 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the monitor MBean to perform any operations needed after
having been unregistered by the MBean server.
<P>
Not used in this context."
      end

      operation 8314395 "start"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the monitor."
      end

      operation 8314523 "stop"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the monitor."
      end

      operation 8314651 "getObservedObject"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Returns the object name of the first object in the set of observed
MBeans, or <code>null</code> if there is no such object.

@return The object being observed.

@see #setObservedObject(ObjectName)

@deprecated As of JMX 1.2, replaced by {@link #getObservedObjects}"
      end

      operation 8314779 "setObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Removes all objects from the set of observed objects, and then adds the
specified object.

@param object The object to observe.
@exception java.lang.IllegalArgumentException The specified
object is null.

@see #getObservedObject()

@deprecated As of JMX 1.2, replaced by {@link #addObservedObject}"
      end

      operation 8314907 "addObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified object in the set of observed MBeans, if this object
is not already present.

@param object The object to observe.
@exception IllegalArgumentException The specified object is null.

@since.unbundled JMX 1.2"
      end

      operation 8315035 "removeObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified object from the set of observed MBeans.

@param object The object to remove.

@since.unbundled JMX 1.2"
      end

      operation 8315163 "containsObservedObject"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the specified object is in the set of observed MBeans.

@param object The object to check.
@return <CODE>true</CODE> if the specified object is present,
<CODE>false</CODE> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8315291 "getObservedObjects"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing the objects being observed.

@return The objects being observed.

@since.unbundled JMX 1.2"
      end

      operation 8315419 "getObservedAttribute"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the attribute being observed.
<BR>The observed attribute is not initialized by default (set to null).

@return The attribute being observed.

@see #setObservedAttribute"
      end

      operation 8315547 "setObservedAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "attribute" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attribute to observe.
<BR>The observed attribute is not initialized by default (set to null).

@param attribute The attribute to observe.
@exception java.lang.IllegalArgumentException The specified
attribute is null.

@see #getObservedAttribute"
      end

      operation 8315675 "getGranularityPeriod"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the granularity period (in milliseconds).
<BR>The default value of the granularity period is 10 seconds.

@return The granularity period value.

@see #setGranularityPeriod"
      end

      operation 8315803 "setGranularityPeriod"
	public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the granularity period (in milliseconds).
<BR>The default value of the granularity period is 10 seconds.

@param period The granularity period value.
@exception java.lang.IllegalArgumentException The granularity
period is less than or equal to zero.

@see #getGranularityPeriod"
      end

      operation 8315931 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the monitor MBean is active.  A monitor MBean is
marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is
called.

@return <CODE>true</CODE> if the monitor MBean is active,
<CODE>false</CODE> otherwise.

 This method must be synchronized so that the monitoring thread will
correctly see modifications to the isActive variable.  See the various
AlarmClock threads in the subclasses.  "
      end

      operation 8316059 "getObservedObject"
	package return_type class_ref 510875 // ObjectName
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 791195 // ArrayIndexOutOfBoundsException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


Gets the {@link ObjectName} of the object at the specified
index in the list of observed MBeans.
@return The observed object at the specified index.
@exception ArrayIndexOutOfBoundsException If the index is invalid."
      end

      operation 8316187 "updateDeprecatedAlreadyNotified"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the deprecated {@link #alreadyNotified} field."
      end

      operation 8316315 "setAlreadyNotified"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the given bits in the given element of {@link #alreadyNotifieds}.
Ensure the deprecated {@link #alreadyNotified} field is updated
if appropriate."
      end

      operation 8316443 "resetAlreadyNotified"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the given bits in the given element of {@link #alreadyNotifieds}.
Ensure the deprecated {@link #alreadyNotified} field is updated
if appropriate."
      end

      operation 8316571 "alreadyNotified"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8316699 "resetAllAlreadyNotified"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all bits in the given element of {@link #alreadyNotifieds}.
Ensure the deprecated {@link #alreadyNotified} field is updated
if appropriate."
      end

      operation 8316827 "expandArray"
	package explicit_return_type "int"
	nparams 1
	  param in name "array" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8316955 "expandArray"
	package explicit_return_type "long"
	nparams 1
	  param in name "array" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8317083 "expandArray"
	package return_type class_ref 413979 // Number
	nparams 1
	  param inout name "array" type class_ref 413979 // Number
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8317211 "expandArray"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8317339 "expandArray"
	package explicit_return_type "String"
	nparams 1
	  param in name "array" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8317467 "removeElementAt"
	package explicit_return_type "void"
	nparams 2
	  param in name "array" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component at the specified index from the specified
int array."
      end

      operation 8317595 "removeElementAt"
	package explicit_return_type "void"
	nparams 2
	  param in name "array" explicit_type "long"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component at the specified index from the specified
long array."
      end

      operation 8317723 "removeElementAt"
	package explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "boolean"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component at the specified index from the specified
boolean array."
      end

      operation 8317851 "removeElementAt"
	package explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component at the specified index from the specified
Number array."
      end

      operation 8317979 "indexOf"
	package explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument, testing
for equality using the equals method."
      end

      operation 8318107 "insertSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is overridden by the specific monitor classes
(Counter, Gauge and String).  It updates all the specific
arrays after adding a new observed object in the list.

The method is not abstract so that this class can be subclassed
by classes outside this package."
      end

      operation 8318235 "removeSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is overridden by the specific monitor classes
(Counter, Gauge and String).  It updates all the specific
arrays after removing an observed object from the vector.

The method is not abstract so that this class can be subclassed
by classes outside this package."
      end

      operation 8318363 "sendNotification"
	package explicit_return_type "void"
	nparams 6
	  param in name "type" explicit_type "String"
	  param in name "timeStamp" explicit_type "long"
	  param in name "msg" explicit_type "String"
	  param inout name "derGauge" explicit_type "Object"
	  param inout name "trigger" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used by the monitor MBean create and send a
monitor notification to all the listeners registered for this
kind of notification.

@param type The notification type.
@param timeStamp The notification emission date.
@param msg The notification message.
@param derGauge The derived gauge.
@param trigger The threshold/string (depending on the monitor
type) that triggered off the notification.
@param index The index of the observed object that triggered
off the notification."
      end
    end

    class 1036571 "MonitorMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the remote management interface of monitor MBeans.

@version     4.23     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      operation 8311451 "start"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the monitor."
      end

      operation 8311579 "stop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the monitor."
      end

      operation 8311707 "addObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
-------------------- 

Adds the specified object in the set of observed MBeans.

@param object The object to observe.
@exception java.lang.IllegalArgumentException the specified object is null.

@since.unbundled JMX 1.2"
      end

      operation 8311835 "removeObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified object from the set of observed MBeans.

@param object The object to remove.

@since.unbundled JMX 1.2"
      end

      operation 8311963 "containsObservedObject"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the specified object is in the set of observed MBeans.

@param object The object to check.
@return <CODE>true</CODE> if the specified object is in the set, <CODE>false</CODE> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8312091 "getObservedObjects"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing the objects being observed.

@return The objects being observed.

@since.unbundled JMX 1.2"
      end

      operation 8312219 "getObservedObject"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the object name of the object being observed.

@return The object being observed.

@see #setObservedObject

@deprecated As of JMX 1.2, replaced by {@link #getObservedObjects}"
      end

      operation 8312347 "setObservedObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the object to observe identified by its object name.

@param object The object to observe.

@see #getObservedObject

@deprecated As of JMX 1.2, replaced by {@link #addObservedObject}"
      end

      operation 8312475 "getObservedAttribute"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the attribute being observed.

@return The attribute being observed.

@see #setObservedAttribute"
      end

      operation 8312603 "setObservedAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "attribute" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the attribute to observe.

@param attribute The attribute to observe.

@see #getObservedAttribute"
      end

      operation 8312731 "getGranularityPeriod"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the granularity period (in milliseconds).

@return The granularity period.

@see #setGranularityPeriod"
      end

      operation 8312859 "setGranularityPeriod"
	public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the granularity period (in milliseconds).

@param period The granularity period.
@exception java.lang.IllegalArgumentException The granularity
period is less than or equal to zero.

@see #getGranularityPeriod"
      end

      operation 8312987 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the monitor MBean is active.
A monitor MBean is marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is called.

@return <CODE>true</CODE> if the monitor MBean is active, <CODE>false</CODE> otherwise."
      end
    end

    class 1036699 "CounterMonitorMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the remote management interface of the counter monitor MBean.

@version     4.26     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2052379 // <generalisation>
	relation 2052379 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2052379 // <generalisation>
	  b parent class_ref 1036571 // MonitorMBean
      end

      operation 8318491 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------    

Gets the derived gauge.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8318619 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8318747 "getThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the threshold value.

@return The threshold value.

@see #setThreshold(Number)

@deprecated As of JMX 1.2, replaced by {@link #getThreshold(ObjectName)}"
      end

      operation 8318875 "setThreshold"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the threshold value.

@see #getThreshold()

@param value The threshold value.
@exception java.lang.IllegalArgumentException The specified threshold is null or the threshold value is less than zero.
@deprecated As of JMX 1.2, replaced by {@link #setInitThreshold}"
      end

      operation 8319003 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge for the specified MBean.

@param object the MBean for which the derived gauge is to be returned
@return The derived gauge for the specified MBean if this MBean is in the
        set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8319131 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp for the specified MBean.

@param object the MBean for which the derived gauge timestamp is to be returned
@return The derived gauge timestamp for the specified MBean if this MBean
        is in the set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8319259 "getThreshold"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the threshold value for the specified MBean.

@param object the MBean for which the threshold value is to be returned
@return The threshold value for the specified MBean if this MBean
        is in the set of observed MBeans, or <code>null</code> otherwise.

@see #setThreshold

@since.unbundled JMX 1.2"
      end

      operation 8319387 "getInitThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the initial threshold value common to all observed objects.

@return The initial threshold value.

@see #setInitThreshold

@since.unbundled JMX 1.2"
      end

      operation 8319515 "setInitThreshold"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the initial threshold value common to all observed MBeans.

@param value The initial threshold value.
@exception java.lang.IllegalArgumentException The specified
threshold is null or the threshold value is less than zero.

@see #getInitThreshold

@since.unbundled JMX 1.2"
      end

      operation 8319643 "getOffset"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the offset value.

@see #setOffset(Number)

@return The offset value."
      end

      operation 8319771 "setOffset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the offset value.

@param value The offset value.
@exception java.lang.IllegalArgumentException The specified
offset is null or the offset value is less than zero.

@see #getOffset()"
      end

      operation 8319899 "getModulus"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the modulus value.

@return The modulus value.

@see #setModulus"
      end

      operation 8320027 "setModulus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the modulus value.

@param value The modulus value.
@exception java.lang.IllegalArgumentException The specified
modulus is null or the modulus value is less than zero.

@see #getModulus"
      end

      operation 8320155 "getNotify"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the notification's on/off switch value.

@return <CODE>true</CODE> if the counter monitor notifies when
exceeding the threshold, <CODE>false</CODE> otherwise.

@see #setNotify"
      end

      operation 8320283 "setNotify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the notification's on/off switch value.

@param value The notification's on/off switch value.

@see #getNotify"
      end

      operation 8320411 "getDifferenceMode"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the difference mode flag value.

@return <CODE>true</CODE> if the difference mode is used,
<CODE>false</CODE> otherwise.

@see #setDifferenceMode"
      end

      operation 8320539 "setDifferenceMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the difference mode flag value.

@param value The difference mode flag value.

@see #getDifferenceMode"
      end
    end

    class 1036955 "GaugeMonitor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a monitor MBean designed to observe the values of a gauge attribute.

<P> A gauge monitor observes an attribute that is continuously
variable with time.  A gauge monitor sends notifications as
follows:

<UL>

<LI> if the attribute value is increasing and becomes equal to or
greater than the high threshold value, a {@link
MonitorNotification#THRESHOLD_HIGH_VALUE_EXCEEDED threshold high
notification} is sent.  The notify high flag must be set to
<CODE>true</CODE>

<BR>Subsequent crossings of the high threshold value do not cause
further notifications unless the attribute value becomes equal to
or less than the low threshold value.

<LI> if the attribute value is decreasing and becomes equal to or
less than the low threshold value, a {@link
MonitorNotification#THRESHOLD_LOW_VALUE_EXCEEDED threshold low
notification} is sent.  The notify low flag must be set to
<CODE>true</CODE>.

<BR>Subsequent crossings of the low threshold value do not cause
further notifications unless the attribute value becomes equal to
or greater than the high threshold value.

</UL>

This provides a hysteresis mechanism to avoid repeated triggering
of notifications when the attribute value makes small oscillations
around the high or low threshold value.

<P> If the gauge difference mode is used, the value of the derived
gauge is calculated as the difference between the observed gauge
values for two successive observations.

<BR>The derived gauge value (V[t]) is calculated using the following method:
<UL>
<LI>V[t] = gauge[t] - gauge[t-GP]
</UL>

This implementation of the gauge monitor requires the observed
attribute to be of the type integer or floating-point
(<CODE>Byte</CODE>, <CODE>Integer</CODE>, <CODE>Short</CODE>,
<CODE>Long</CODE>, <CODE>Float</CODE>, <CODE>Double</CODE>).

@version     1.73     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2054043 // <generalisation>
	relation 2054043 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2054043 // <generalisation>
	  b parent class_ref 1036443 // Monitor
      end

      classrelation 2054299 // <realization>
	relation 2054299 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2054299 // <realization>
	  b parent class_ref 1037083 // GaugeMonitorMBean
      end

      classrelation 2054427 // INTEGER_ZERO (<unidirectional association>)
	relation 2054427 --->
	  a role_name "INTEGER_ZERO" init_value "=  new Integer(0)" class_relation const_relation private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054427 // INTEGER_ZERO (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      classrelation 2054555 // highThreshold (<unidirectional association>)
	relation 2054555 --->
	  a role_name "highThreshold" init_value "=  INTEGER_ZERO" private
	    comment "
Gauge high threshold.
<BR>The default value is a null Integer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054555 // highThreshold (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      classrelation 2054683 // lowThreshold (<unidirectional association>)
	relation 2054683 --->
	  a role_name "lowThreshold" init_value "=  INTEGER_ZERO" private
	    comment "
Gauge low threshold.
<BR>The default value is a null Integer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2054683 // lowThreshold (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3042715 "notifyHigh"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the gauge monitor notifies when exceeding
the high threshold.

<BR>The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3042843 "notifyLow"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the gauge monitor notifies when exceeding
the low threshold.

<BR>The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3042971 "differenceMode"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the gauge difference mode is used.  If the
gauge difference mode is used, the derived gauge is the
difference between two consecutive observed values.  Otherwise,
the derived gauge is directly the value of the observed
attribute.

<BR>The default value is set to <CODE>false</CODE>.
"
      end

      classrelation 2054811 // derivedGauge (<unidirectional association>)
	relation 2054811 --->
	  a role_name "derivedGauge" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Derived gauges.
<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2054811 // derivedGauge (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3043099 "derivedGaugeTimestamp"
	private explicit_type "long"
	multiplicity "[]"
	init_value "=  new long[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Derived gauge timestamps.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      classrelation 2054939 // previousScanGauge (<unidirectional association>)
	relation 2054939 --->
	  a role_name "previousScanGauge" multiplicity "[]" init_value "=  new Number[capacityIncrement]" private
	    comment "
Scan gauge values captured by the previous observation.
<BR>Each element in this array corresponds to an observed
object in the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2054939 // previousScanGauge (<unidirectional association>)
	  b parent class_ref 413979 // Number
      end

      attribute 3043227 "status"
	private explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This attribute is used to handle the hysteresis mechanism.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      attribute 3043355 "type"
	private explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This attribute is used to keep the derived gauge type.
<BR>Each element in this array corresponds to an observed
object in the list.
"
      end

      attribute 3043483 "RISING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags needed to implement the hysteresis mechanism.
"
      end

      attribute 3043611 "FALLING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3043739 "RISING_OR_FALLING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3043867 "INTEGER"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags needed to keep trace of the derived gauge type.
 Integer + floating-point types are allowed.
"
      end

      attribute 3043995 "BYTE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3044123 "SHORT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3044251 "LONG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3044379 "FLOAT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3044507 "DOUBLE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3044635 "THRESHOLD_ERROR_NOTIFIED"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " New flags defining possible gauge monitor errors.
 Flag denoting that a notification has occurred after changing
 the high/low threshold.  This flag is used to check that the
 high/low threshold type is the same as the gauge and that the
 threshold high value is greater than the threshold low value at
 the first notification time.
"
      end

      classrelation 2055067 // timer (<unidirectional association>)
	relation 2055067 --->
	  a role_name "timer" init_value "=  null" private
	    comment "
Timer.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2055067 // timer (<unidirectional association>)
	  b parent class_ref 156827 // Timer
      end

      operation 8326683 "makeDebugTag"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8326811 "GaugeMonitor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Default constructor."
      end

      operation 8326939 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Starts the gauge monitor."
      end

      operation 8327067 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the gauge monitor.

 This method is not synchronized, because if it were there could
be a deadlock with a thread that attempted to get the lock on
the monitor before being interrupted or noticing that it had
been interrupted.  "
      end

      operation 8327195 "setGranularityPeriod"
	public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Sets the granularity period (in milliseconds).
<BR>The default value of the granularity period is 10 seconds.

@param period The granularity period value.
@exception java.lang.IllegalArgumentException The granularity
period is less than or equal to zero.

@see Monitor#setGranularityPeriod(long)"
      end

      operation 8327323 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge of the specified object, if this object is
contained in the set of observed MBeans, or <code>null</code> otherwise.

@param object the name of the MBean.

@return The derived gauge of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8327451 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp of the specified object, if
this object is contained in the set of observed MBeans, or
<code>null</code> otherwise.

@param object the name of the MBean.

@return The derived gauge timestamp of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8327579 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the derived gauge of the first object in the set of
observed MBeans.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8327707 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp of the first object in the set
of observed MBeans.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by
{@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8327835 "getHighThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the high threshold value common to all observed MBeans.

@return The high threshold value."
      end

      operation 8327963 "getLowThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the low threshold value common to all observed MBeans.

@return The low threshold value."
      end

      operation 8328091 "setThresholds"
	public explicit_return_type "void"
	nparams 2
	  param inout name "highValue" type class_ref 413979 // Number
	  param inout name "lowValue" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the high and the low threshold values common to all
observed MBeans.

@param highValue The high threshold value.
@param lowValue The low threshold value.

@exception IllegalArgumentException The specified high/low
threshold is null or the low threshold is greater than the high
threshold or the high threshold and the low threshold are not
of the same type."
      end

      operation 8328219 "getNotifyHigh"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the high notification's on/off switch value common to all
observed MBeans.

@see #setNotifyHigh

@return <CODE>true</CODE> if the gauge monitor notifies when
exceeding the high threshold, <CODE>false</CODE> otherwise."
      end

      operation 8328347 "setNotifyHigh"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the high notification's on/off switch value common to all
observed MBeans.

@param value The high notification's on/off switch value.

@see #getNotifyHigh"
      end

      operation 8328475 "getNotifyLow"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the low notification's on/off switch value common to all
observed MBeans.

@return <CODE>true</CODE> if the gauge monitor notifies when
exceeding the low threshold, <CODE>false</CODE> otherwise.

@see #setNotifyLow"
      end

      operation 8328603 "setNotifyLow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the low notification's on/off switch value common to all
observed MBeans.

@param value The low notification's on/off switch value.

@see #getNotifyLow"
      end

      operation 8328731 "getDifferenceMode"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the difference mode flag value common to all observed MBeans.

@return <CODE>true</CODE> if the difference mode is used,
<CODE>false</CODE> otherwise.

@see #setDifferenceMode"
      end

      operation 8328859 "setDifferenceMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the difference mode flag value common to all observed MBeans.

@param value The difference mode flag value.

@see #getDifferenceMode"
      end

      operation 8328987 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <CODE>NotificationInfo</CODE> object containing the
name of the Java class of the notification and the notification
types sent by the gauge monitor."
      end

      operation 8329115 "updateDerivedGauge"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "scanGauge" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------


Updates the derived gauge and the derived gauge timestamp attributes
of the observed object at the specified index.

@param scanGauge The value of the observed attribute.
@param index The index of the observed object.
@return <CODE>true</CODE> if the derived gauge value is valid,
<CODE>false</CODE> otherwise.  The derived gauge value is
invalid when the differenceMode flag is set to
<CODE>true</CODE> and it is the first notification (so we
haven't 2 consecutive values to update the derived gauge)."
      end

      operation 8329243 "updateNotifications"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the notification attribute of the observed object at the
specified index and notifies the listeners only once if the notify flag
is set to <CODE>true</CODE>.
@param index The index of the observed object."
      end

      operation 8329371 "isThresholdTypeValid"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the threshold high and threshold low are both of the
same type as the gauge.  Both integer and floating-point types
are allowed.

Note:
  If the optional lowThreshold or highThreshold have not been
  initialized, their default value is an Integer object with
  a value equal to zero.

@param index The index of the observed object.
@return <CODE>true</CODE> if type is the same,
<CODE>false</CODE> otherwise."
      end

      operation 8329499 "setDerivedGaugeWithDifference"
	private explicit_return_type "void"
	nparams 2
	  param inout name "scanGauge" type class_ref 413979 // Number
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the derived gauge when the differenceMode flag is set to
<CODE>true</CODE>.  Both integer and floating-point types are
allowed.

@param scanGauge The value of the observed attribute.
@param index The index of the observed object."
      end

      operation 8329627 "isFirstGreaterThanLast"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "greater" type class_ref 413979 // Number
	  param inout name "less" type class_ref 413979 // Number
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the first specified Number is greater than or equal to
the last.  Both integer and floating-point types are allowed.

@param greater The first Number to compare with the second.
@param less The second Number to compare with the first.
@param type The number type.
@return <CODE>true</CODE> if the first specified Number is
greater than or equal to the last, <CODE>false</CODE>
otherwise."
      end

      operation 8329755 "isFirstStrictlyGreaterThanLast"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "greater" type class_ref 413979 // Number
	  param inout name "less" type class_ref 413979 // Number
	  param in name "className" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the first specified Number is strictly greater than the last.
Both integer and floating-point types are allowed.

@param greater The first Number to compare with the second.
@param less The second Number to compare with the first.
@param className The number class name.
@return <CODE>true</CODE> if the first specified Number is
strictly greater than the last, <CODE>false</CODE> otherwise."
      end

      operation 8329883 "notifyAlarmClock"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


This method is called by the gauge monitor each time
the granularity period has been exceeded.
@param index The index of the observed object."
      end

      operation 8330011 "insertSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when adding a new observed object in the vector.
It updates all the gauge specific arrays.
@param index The index of the observed object."
      end

      operation 8330139 "removeSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when removing an observed object from the vector.
It updates all the gauge specific arrays.
@param index The index of the observed object."
      end

      class 1037211 "GaugeAlarmClock"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2055195 // <generalisation>
	  relation 2055195 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2055195 // <generalisation>
	    b parent class_ref 157211 // TimerTask
	end

	classrelation 2055323 // listener (<unidirectional association>)
	  relation 2055323 --->
	    a role_name "listener" init_value "=  null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2055323 // listener (<unidirectional association>)
	    b parent class_ref 1036955 // GaugeMonitor
	end

	operation 8330267 "GaugeAlarmClock"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "listener" type class_ref 1036955 // GaugeMonitor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------"
	end

	operation 8330395 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


This method is called by the GaugeAlarmClock thread when it
is started."
	end
      end
    end

    class 1037083 "GaugeMonitorMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the remote management interface of the gauge monitor MBean.

@version     4.25     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2054171 // <generalisation>
	relation 2054171 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2054171 // <generalisation>
	  b parent class_ref 1036571 // MonitorMBean
      end

      operation 8325019 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------    

Gets the derived gauge.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8325147 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8325275 "getDerivedGauge"
	public return_type class_ref 413979 // Number
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge for the specified MBean.

@param object the MBean for which the derived gauge is to be returned
@return The derived gauge for the specified MBean if this MBean is in the
        set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8325403 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp for the specified MBean.

@param object the MBean for which the derived gauge timestamp is to be returned
@return The derived gauge timestamp for the specified MBean if this MBean
        is in the set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8325531 "getHighThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the high threshold value.

@return The high threshold value."
      end

      operation 8325659 "getLowThreshold"
	public return_type class_ref 413979 // Number
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the low threshold value.

@return The low threshold value."
      end

      operation 8325787 "setThresholds"
	public explicit_return_type "void"
	nparams 2
	  param inout name "highValue" type class_ref 413979 // Number
	  param inout name "lowValue" type class_ref 413979 // Number
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the high and the low threshold values.

@param highValue The high threshold value.
@param lowValue The low threshold value.
@exception java.lang.IllegalArgumentException The specified high/low threshold is null
or the low threshold is greater than the high threshold
or the high threshold and the low threshold are not of the same type."
      end

      operation 8325915 "getNotifyHigh"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the high notification's on/off switch value.

@return <CODE>true</CODE> if the gauge monitor notifies when
exceeding the high threshold, <CODE>false</CODE> otherwise.

@see #setNotifyHigh"
      end

      operation 8326043 "setNotifyHigh"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the high notification's on/off switch value.

@param value The high notification's on/off switch value.

@see #getNotifyHigh"
      end

      operation 8326171 "getNotifyLow"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the low notification's on/off switch value.

@return <CODE>true</CODE> if the gauge monitor notifies when
exceeding the low threshold, <CODE>false</CODE> otherwise.

@see #setNotifyLow"
      end

      operation 8326299 "setNotifyLow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the low notification's on/off switch value.

@param value The low notification's on/off switch value.

@see #getNotifyLow"
      end

      operation 8326427 "getDifferenceMode"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the difference mode flag value.

@return <CODE>true</CODE> if the difference mode is used,
<CODE>false</CODE> otherwise.

@see #setDifferenceMode"
      end

      operation 8326555 "setDifferenceMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the difference mode flag value.

@param value The difference mode flag value.

@see #getDifferenceMode"
      end
    end

    class 1037339 "MonitorNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides definitions of the notifications sent by monitor MBeans.
<P>
The notification source and a set of parameters concerning the monitor MBean's state
need to be specified when creating a new object of this class.

The list of notifications fired by the monitor MBeans is the following:

<UL>
<LI>Common to all kind of monitors:
    <UL>
    <LI>The observed object is not registered in the MBean server.
    <LI>The observed attribute is not contained in the observed object.
    <LI>The type of the observed attribute is not correct.
    <LI>Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.
    </UL>
<LI>Common to the counter and the gauge monitors:
    <UL>
    <LI>The threshold high or threshold low are not of the same type as the gauge (gauge monitors).
    <LI>The threshold or the offset or the modulus are not of the same type as the counter (counter monitors).
    </UL>
<LI>Counter monitors only:
    <UL>
    <LI>The observed attribute has reached the threshold value.
    </UL>
<LI>Gauge monitors only:
    <UL>
    <LI>The observed attribute has exceeded the threshold high value.
    <LI>The observed attribute has exceeded the threshold low value.
    </UL>
<LI>String monitors only:
    <UL>
    <LI>The observed attribute has matched the \"string to compare\" value.
    <LI>The observed attribute has differed from the \"string to compare\" value.
    </UL>
</UL>

@version     4.22     12/19/03
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2055451 // <generalisation>
	relation 2055451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055451 // <generalisation>
	  b parent class_ref 513819 // Notification
      end

      attribute 3044763 "OBSERVED_OBJECT_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.error.mbean\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PUBLIC VARIABLES
------------------------------------------


Notification type denoting that the observed object is not registered in the MBean server.
This notification is fired by all kinds of monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.error.mbean</CODE>.
"
      end

      attribute 3044891 "OBSERVED_ATTRIBUTE_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.error.attribute\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute is not contained in the observed object.
This notification is fired by all kinds of monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.error.attribute</CODE>.
"
      end

      attribute 3045019 "OBSERVED_ATTRIBUTE_TYPE_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.error.type\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the type of the observed attribute is not correct.
This notification is fired by all kinds of monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.error.type</CODE>.
"
      end

      attribute 3045147 "THRESHOLD_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.error.threshold\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the type of the thresholds, offset or modulus is not correct.
This notification is fired by counter and gauge monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.error.threshold</CODE>.
"
      end

      attribute 3045275 "RUNTIME_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.error.runtime\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute.
This notification is fired by all kinds of monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.error.runtime</CODE>.
"
      end

      attribute 3045403 "THRESHOLD_VALUE_EXCEEDED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.counter.threshold\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute has reached the threshold value.
This notification is only fired by counter monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.counter.threshold</CODE>.
"
      end

      attribute 3045531 "THRESHOLD_HIGH_VALUE_EXCEEDED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.gauge.high\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute has exceeded the threshold high value.
This notification is only fired by gauge monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.gauge.high</CODE>.
"
      end

      attribute 3045659 "THRESHOLD_LOW_VALUE_EXCEEDED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.gauge.low\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute has exceeded the threshold low value.
This notification is only fired by gauge monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.gauge.low</CODE>.
"
      end

      attribute 3045787 "STRING_TO_COMPARE_VALUE_MATCHED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.string.matches\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute has matched the \"string to compare\" value.
This notification is only fired by string monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.string.matches</CODE>.
"
      end

      attribute 3045915 "STRING_TO_COMPARE_VALUE_DIFFERED"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"jmx.monitor.string.differs\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Notification type denoting that the observed attribute has differed from the \"string to compare\" value.
This notification is only fired by string monitors.
<BR>The value of this notification type is <CODE>jmx.monitor.string.differs</CODE>.
"
      end

      attribute 3046043 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4608189663661929204L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PRIVATE VARIABLES
------------------------------------------

 Serial version "
      end

      classrelation 2055579 // observedObject (<unidirectional association>)
	relation 2055579 --->
	  a role_name "observedObject" init_value "=  null" private
	    comment "
@serial Monitor notification observed object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2055579 // observedObject (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      attribute 3046171 "observedAttribute"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Monitor notification observed attribute.
"
      end

      attribute 3046299 "derivedGauge"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Monitor notification derived gauge.
"
      end

      attribute 3046427 "trigger"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial Monitor notification release mechanism.
        This value is used to keep the threshold/string (depending on the
        monitor type) that triggered off this notification.
"
      end

      operation 8330523 "MonitorNotification"
	package explicit_return_type ""
	nparams 9
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param in name "msg" explicit_type "String"
	  param inout name "obsObj" type class_ref 510875 // ObjectName
	  param in name "obsAtt" explicit_type "String"
	  param inout name "derGauge" explicit_type "Object"
	  param inout name "trigger" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Creates a monitor notification object.

@param type The notification type.
@param source The notification producer.
@param sequenceNumber The notification sequence number within the source object.
@param timeStamp The notification emission date.
@param msg The notification message.
@param obsObj The object observed by the producer of this notification.
@param obsAtt The attribute observed by the producer of this notification.
@param derGauge The derived gauge.
@param trigger The threshold/string (depending on the monitor type) that triggered the notification."
      end

      operation 8330651 "getObservedObject"
	public return_type class_ref 510875 // ObjectName
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------

 GETTERS AND SETTERS
--------------------    

Gets the observed object of this monitor notification.

@return The observed object."
      end

      operation 8330779 "getObservedAttribute"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the observed attribute of this monitor notification.

@return The observed attribute."
      end

      operation 8330907 "getDerivedGauge"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge of this monitor notification.

@return The derived gauge."
      end

      operation 8331035 "getTrigger"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.

@return The trigger."
      end
    end

    class 1037467 "MonitorSettingException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exception thrown by the monitor when a monitor setting becomes invalid while the monitor is running.
<P>
As the monitor attributes may change at runtime, a check is performed before each observation.
If a monitor attribute has become invalid, a monitor setting exception is thrown.

@version     4.16     12/19/03
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2055707 // <generalisation>
	relation 2055707 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055707 // <generalisation>
	  b parent class_ref 543643 // JMRuntimeException
      end

      attribute 3046555 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8807913418190202007L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8331163 "MonitorSettingException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor."
      end

      operation 8331291 "MonitorSettingException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that allows an error message to be specified.

@param message The specific error message."
      end
    end

    class 1037595 "StringMonitor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a monitor MBean designed to observe the values of a string
attribute.
<P>
A string monitor sends notifications as follows:
<UL>
<LI> if the attribute value matches the string to compare value,
     a {@link MonitorNotification#STRING_TO_COMPARE_VALUE_MATCHED
     match notification} is sent.
     The notify match flag must be set to <CODE>true</CODE>.
     <BR>Subsequent matchings of the string to compare values do not
     cause further notifications unless
     the attribute value differs from the string to compare value.
<LI> if the attribute value differs from the string to compare value,
     a {@link MonitorNotification#STRING_TO_COMPARE_VALUE_DIFFERED
     differ notification} is sent.
     The notify differ flag must be set to <CODE>true</CODE>.
     <BR>Subsequent differences from the string to compare value do
     not cause further notifications unless
     the attribute value matches the string to compare value.
</UL>

@version     4.41     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2055835 // <generalisation>
	relation 2055835 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055835 // <generalisation>
	  b parent class_ref 1036443 // Monitor
      end

      classrelation 2056091 // <realization>
	relation 2056091 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2056091 // <realization>
	  b parent class_ref 1037723 // StringMonitorMBean
      end

      operation 8332699 "makeDebugTag"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      attribute 3046683 "types"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value "=  {
	    MonitorNotification.RUNTIME_ERROR,
	    MonitorNotification.OBSERVED_OBJECT_ERROR,
	    MonitorNotification.OBSERVED_ATTRIBUTE_ERROR,
	    MonitorNotification.OBSERVED_ATTRIBUTE_TYPE_ERROR,
	    MonitorNotification.STRING_TO_COMPARE_VALUE_MATCHED,
	    MonitorNotification.STRING_TO_COMPARE_VALUE_DIFFERED}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PRIVATE VARIABLES
------------------------------------------
"
      end

      classrelation 2056219 // notifsInfo (<unidirectional association>)
	relation 2056219 --->
	  a role_name "notifsInfo" multiplicity "[]" init_value "=  {
	    new MBeanNotificationInfo(types,
		\"javax.management.monitor.MonitorNotification\",
		\"Notifications sent by the StringMonitor MBean\")}" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2056219 // notifsInfo (<unidirectional association>)
	  b parent class_ref 516635 // MBeanNotificationInfo
      end

      attribute 3046811 "stringToCompare"
	private explicit_type "String"
	init_value "=  \"\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "String to compare with the observed attribute.
<BR>The default value is an empty character sequence.
"
      end

      attribute 3046939 "notifyMatch"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the string monitor notifies when matching
the string to compare.
<BR>The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3047067 "notifyDiffer"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if the string monitor notifies when differing
from the string to compare.
<BR>The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3047195 "derivedGauge"
	private explicit_type "String"
	multiplicity "[]"
	init_value "=  new String[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Derived gauges.
<BR>Each element in this array corresponds to an observed object
in the list.
"
      end

      attribute 3047323 "derivedGaugeTimestamp"
	private explicit_type "long"
	multiplicity "[]"
	init_value "=  new long[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Derived gauge timestamps.
<BR>Each element in this array corresponds to an observed object
in the list.
"
      end

      attribute 3047451 "status"
	private explicit_type "int"
	multiplicity "[]"
	init_value "=  new int[capacityIncrement]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This attribute is used to handle the matching/differing mechanism.
<BR>Each element in this array corresponds to an observed object
in the list.
"
      end

      attribute 3047579 "MATCHING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags needed to implement the matching/differing mechanism.
"
      end

      attribute 3047707 "DIFFERING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3047835 "MATCHING_OR_DIFFERING"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2056347 // timer (<unidirectional association>)
	relation 2056347 --->
	  a role_name "timer" init_value "=  null" private
	    comment "
Timer.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2056347 // timer (<unidirectional association>)
	  b parent class_ref 156827 // Timer
      end

      operation 8332827 "StringMonitor"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Default constructor."
      end

      operation 8332955 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Starts the string monitor."
      end

      operation 8333083 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the string monitor.

 This method is not synchronized, because if it were there could
be a deadlock with a thread that attempted to get the lock on
the monitor before being interrupted or noticing that it had
been interrupted.  "
      end

      operation 8333211 "setGranularityPeriod"
	public explicit_return_type "void"
	nparams 1
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Sets the granularity period (in milliseconds).
<BR>The default value of the granularity period is 10 seconds.

@param period The granularity period value.
@exception java.lang.IllegalArgumentException The granularity
period is less than or equal to zero.

@see Monitor#setGranularityPeriod(long)"
      end

      operation 8333339 "getDerivedGauge"
	public explicit_return_type "String"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge of the specified object, if this object is
contained in the set of observed MBeans, or <code>null</code> otherwise.

@param object the name of the MBean whose derived gauge is required.

@return The derived gauge of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8333467 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp of the specified object, if
this object is contained in the set of observed MBeans, or
<code>null</code> otherwise.

@param object the name of the MBean whose derived gauge
timestamp is required.

@return The derived gauge timestamp of the specified object.

@since.unbundled JMX 1.2"
      end

      operation 8333595 "getDerivedGauge"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the derived gauge of the first object in the set of
observed MBeans.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8333723 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp of the first object in the set
of observed MBeans.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by
{@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8333851 "getStringToCompare"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string to compare with the observed attribute common
to all observed MBeans.

@return The string value.

@see #setStringToCompare"
      end

      operation 8333979 "setStringToCompare"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string to compare with the observed attribute common
to all observed MBeans.

@param value The string value.
@exception java.lang.IllegalArgumentException The specified
       string to compare is null.

@see #getStringToCompare"
      end

      operation 8334107 "getNotifyMatch"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the matching notification's on/off switch value common to
all observed MBeans.

@return <CODE>true</CODE> if the string monitor notifies when
   matching the string to compare, <CODE>false</CODE> otherwise.

@see #setNotifyMatch"
      end

      operation 8334235 "setNotifyMatch"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the matching notification's on/off switch value common to
all observed MBeans.

@param value The matching notification's on/off switch value.

@see #getNotifyMatch"
      end

      operation 8334363 "getNotifyDiffer"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the differing notification's on/off switch value common to
all observed MBeans.

@return <CODE>true</CODE> if the string monitor notifies when
   differing from the string to compare, <CODE>false</CODE> otherwise.

@see #setNotifyDiffer"
      end

      operation 8334491 "setNotifyDiffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the differing notification's on/off switch value common to
all observed MBeans.

@param value The differing notification's on/off switch value.

@see #getNotifyDiffer"
      end

      operation 8334619 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <CODE>NotificationInfo</CODE> object containing the
name of the Java class of the notification
and the notification types sent by the string monitor."
      end

      operation 8334747 "updateDerivedGauge"
	private explicit_return_type "void"
	nparams 2
	  param inout name "scanString" explicit_type "Object"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------


Updates the derived gauge and the derived gauge timestamp attributes
of the observed object at the specified index.

@param scanString The value of the observed attribute.
@param index The index of the observed object."
      end

      operation 8334875 "updateNotifications"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the notification attributes of the observed object at the
specified index and notifies the listeners only once if the
notifyMatch/notifyDiffer flag is set to <CODE>true</CODE>.
@param index The index of the observed object."
      end

      operation 8335003 "notifyAlarmClock"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


This method is called by the string monitor each time
the granularity period has been exceeded.
@param index The index of the observed object."
      end

      operation 8335131 "insertSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when adding a new observed object in the vector.
It updates all the string specific arrays.
@param index The index of the observed object."
      end

      operation 8335259 "removeSpecificElementAt"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when removing an observed object from the vector.
It updates all the string specific arrays.
@param index The index of the observed object."
      end

      class 1037851 "StringAlarmClock"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2056475 // <generalisation>
	  relation 2056475 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2056475 // <generalisation>
	    b parent class_ref 157211 // TimerTask
	end

	classrelation 2056603 // listener (<unidirectional association>)
	  relation 2056603 --->
	    a role_name "listener" init_value "=  null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2056603 // listener (<unidirectional association>)
	    b parent class_ref 1037595 // StringMonitor
	end

	operation 8335387 "StringAlarmClock"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "listener" type class_ref 1037595 // StringMonitor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------"
	end

	operation 8335515 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


This method is called by the StringAlarmClock thread when
it is started."
	end
      end
    end

    class 1037723 "StringMonitorMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the remote management interface of the string monitor MBean.

@version     4.24     05/18/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2055963 // <generalisation>
	relation 2055963 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2055963 // <generalisation>
	  b parent class_ref 1036571 // MonitorMBean
      end

      operation 8331419 "getDerivedGauge"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------    

Gets the derived gauge.

@return The derived gauge.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}"
      end

      operation 8331547 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the derived gauge timestamp.

@return The derived gauge timestamp.
@deprecated As of JMX 1.2, replaced by {@link #getDerivedGaugeTimeStamp(ObjectName)}"
      end

      operation 8331675 "getDerivedGauge"
	public explicit_return_type "String"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge for the specified MBean.

@param object the MBean for which the derived gauge is to be returned
@return The derived gauge for the specified MBean if this MBean is in the
        set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8331803 "getDerivedGaugeTimeStamp"
	public explicit_return_type "long"
	nparams 1
	  param inout name "object" type class_ref 510875 // ObjectName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the derived gauge timestamp for the specified MBean.

@param object the MBean for which the derived gauge timestamp is to be returned
@return The derived gauge timestamp for the specified MBean if this MBean
        is in the set of observed MBeans, or <code>null</code> otherwise.

@since.unbundled JMX 1.2"
      end

      operation 8331931 "getStringToCompare"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string to compare with the observed attribute.

@return The string value.

@see #setStringToCompare"
      end

      operation 8332059 "setStringToCompare"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "String"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string to compare with the observed attribute.

@param value The string value.
@exception java.lang.IllegalArgumentException The specified
string to compare is null.

@see #getStringToCompare"
      end

      operation 8332187 "getNotifyMatch"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the matching notification's on/off switch value.

@return <CODE>true</CODE> if the string monitor notifies when
matching, <CODE>false</CODE> otherwise.

@see #setNotifyMatch"
      end

      operation 8332315 "setNotifyMatch"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the matching notification's on/off switch value.

@param value The matching notification's on/off switch value.

@see #getNotifyMatch"
      end

      operation 8332443 "getNotifyDiffer"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the differing notification's on/off switch value.

@return <CODE>true</CODE> if the string monitor notifies when
differing, <CODE>false</CODE> otherwise.

@see #setNotifyDiffer"
      end

      operation 8332571 "setNotifyDiffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the differing notification's on/off switch value.

@param value The differing notification's on/off switch value.

@see #getNotifyDiffer"
      end
    end
  end

  deploymentview 170139 "monitor"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 788763 "MonitorMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1036571 // MonitorMBean
      end
      comment "@(#)MonitorMBean.java	4.23 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 788891 "Monitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import javax.management.MBeanServer;
import javax.management.MBeanRegistration;
import javax.management.ObjectName;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1036443 // Monitor
      end
      comment "@(#)Monitor.java	4.42 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789019 "CounterMonitorMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1036699 // CounterMonitorMBean
      end
      comment "@(#)CounterMonitorMBean.java	4.26 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789147 "CounterMonitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.management.ObjectName;
import javax.management.MBeanNotificationInfo;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ReflectionException;
${definition}"
      associated_classes
	class_ref 1036315 // CounterMonitor
      end
      comment "@(#)CounterMonitor.java	1.74 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789275 "GaugeMonitorMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1037083 // GaugeMonitorMBean
      end
      comment "@(#)GaugeMonitorMBean.java	4.25 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789403 "GaugeMonitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.management.ObjectName;
import javax.management.MBeanNotificationInfo;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ReflectionException;
${definition}"
      associated_classes
	class_ref 1036955 // GaugeMonitor
      end
      comment "@(#)GaugeMonitor.java	1.73 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789531 "MonitorNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1037339 // MonitorNotification
      end
      comment "@(#)MonitorNotification.java	4.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789659 "MonitorSettingException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1037467 // MonitorSettingException
      end
      comment "@(#)MonitorSettingException.java	4.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789787 "StringMonitorMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1037723 // StringMonitorMBean
      end
      comment "@(#)StringMonitorMBean.java	4.24 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 789915 "StringMonitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.management.ObjectName;
import javax.management.MBeanNotificationInfo;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ReflectionException;
${definition}"
      associated_classes
	class_ref 1037595 // StringMonitor
      end
      comment "@(#)StringMonitor.java	4.41 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
