class Select
!!!3833499.java!!!	Select(in opcode : short, in match : int, inout targets : InstructionHandle, inout target : InstructionHandle)
    super(opcode, target);

    this.targets = targets;
    for(int i=0; i < targets.length; i++)
      notifyTarget(null, targets[i], this);

    this.match = match;

    if((match_length = match.length) != targets.length)
      throw new ClassGenException("Match and target array have not the same length");

    indices = new int[match_length];
!!!3833627.java!!!	updatePosition(in offset : int, in max_offset : int) : int
    position += offset; // Additional offset caused by preceding SWITCHs, GOTOs, etc.

    short old_length = length;

    /* Alignment on 4-byte-boundary, + 1, because of tag byte.
     */
    padding = (4 - ((position + 1) % 4)) % 4;
    length  = (short)(fixed_length + padding); // Update length

    return length - old_length;
!!!3833755.java!!!	dump(inout out : DataOutputStream) : void
    out.writeByte(opcode);

    for(int i=0; i < padding; i++) // Padding bytes
      out.writeByte(0);

    index = getTargetOffset();     // Write default target offset
    out.writeInt(index);
!!!3833883.java!!!	initFromFile(inout bytes : ByteSequence, inout wide : boolean) : void
    padding = (4 - (bytes.getIndex() % 4)) % 4; // Compute number of pad bytes

    for(int i=0; i < padding; i++) {
      byte b;
      if((b=bytes.readByte()) != 0)
	throw new ClassGenException("Padding byte != 0: " + b);
    }
    
    // Default branch target common for both cases (TABLESWITCH, LOOKUPSWITCH)
    index = bytes.readInt();
!!!3834011.java!!!	toString(inout verbose : boolean) : String
    StringBuffer buf = new StringBuffer(super.toString(verbose));

    if(verbose) {
      for(int i=0; i < match_length; i++) {
	String s = "null";
	
	if(targets[i] != null)
	  s = targets[i].getInstruction().toString();
	
	buf.append("(" + match[i] + ", " + s + " = {" + indices[i] + "})");
      }
    }
    else
      buf.append(" ...");
    
    return buf.toString();
!!!3834139.java!!!	setTarget(in i : int, inout target : InstructionHandle) : void
    notifyTarget(targets[i], target, this);
    targets[i] = target;
!!!3834267.java!!!	updateTarget(inout old_ih : InstructionHandle, inout new_ih : InstructionHandle) : void
    boolean targeted = false;

    if(target == old_ih) {
      targeted = true;
      setTarget(new_ih);
    }

    for(int i=0; i < targets.length; i++) {
      if(targets[i] == old_ih) {
	targeted = true;
	setTarget(i, new_ih);
      }
    }
    
    if(!targeted)
      throw new ClassGenException("Not targeting " + old_ih);
!!!3834395.java!!!	containsTarget(inout ih : InstructionHandle) : boolean
    if(target == ih)
      return true;

    for(int i=0; i < targets.length; i++)
      if(targets[i] == ih)
	return true;

    return false;
!!!3834523.java!!!	dispose() : void
    super.dispose();

    for(int i=0; i < targets.length; i++)
      targets[i].removeTargeter(this);
!!!3834651.java!!!	getMatchs() : int
 return match;
!!!3834779.java!!!	getIndices() : int
 return indices;
!!!3834907.java!!!	getTargets() : InstructionHandle
 return targets;
