class SerialArray
!!!8791195.java!!!	SerialArray(inout array : Array, inout map : Map)
         
        if ((array == null) || (map == null)) {
            throw new SQLException("Cannot instantiate a SerialArray " +
            "object with null parameters");
        }   
                 
        if ((elements = (Object[])array.getArray()) == null) {
             throw new SQLException("Invalid Array object. Calls to Array.getArray() " +
                 "return null value which cannot be serialized");
         }

	elements = (Object[])array.getArray(map);
        baseType = array.getBaseType();
        baseTypeName = array.getBaseTypeName();
        len = elements.length;

        switch (baseType) {
            case java.sql.Types.STRUCT: 
                for (int i = 0; i < len; i++) {
                    elements[i] = new SerialStruct((Struct)elements[i], map);
                }
            break;
        
            case java.sql.Types.ARRAY:
                for (int i = 0; i < len; i++) {
                    elements[i] = new SerialArray((Array)elements[i], map);
                }
            break;
        
            case java.sql.Types.BLOB: 
            for (int i = 0; i < len; i++) {
                elements[i] = new SerialBlob((Blob)elements[i]);                
            }
            break;
       
            case java.sql.Types.CLOB: 
                for (int i = 0; i < len; i++) {
                    elements[i] = new SerialClob((Clob)elements[i]);
                }
            break;

            case java.sql.Types.DATALINK:
                for (int i = 0; i < len; i++) {
                    elements[i] = new SerialDatalink((URL)elements[i]);
                }
            break;
            
            case java.sql.Types.JAVA_OBJECT:
                for (int i = 0; i < len; i++) {
    		elements[i] = new SerialJavaObject((Object)elements[i]);
            }
        default:
            ;
        }
!!!8791323.java!!!	SerialArray(inout array : Array)
         if (array == null) {
             throw new SQLException("Cannot instantiate a SerialArray " +
                 "object with a null Array object");
         }                             
         
         if ((elements = (Object[])array.getArray()) == null) {
             throw new SQLException("Invalid Array object. Calls to Array.getArray() " +
                 "return null value which cannot be serialized");
         }
         
         //elements = (Object[])array.getArray();
         baseType = array.getBaseType();
         baseTypeName = array.getBaseTypeName();
         len = elements.length;

        switch (baseType) {

        case java.sql.Types.BLOB: 
            for (int i = 0; i < len; i++) {
                elements[i] = new SerialBlob((Blob)elements[i]);
            }
            break;
            
        case java.sql.Types.CLOB: 
            for (int i = 0; i < len; i++) {
                elements[i] = new SerialClob((Clob)elements[i]);
            }
            break;
            
	case java.sql.Types.DATALINK:
	    for (int i = 0; i < len; i++) {
		elements[i] = new SerialDatalink((URL)elements[i]);
	    }
            break;
            
	case java.sql.Types.JAVA_OBJECT:
	    for (int i = 0; i < len; i++) {
		elements[i] = new SerialJavaObject((Object)elements[i]);
	    }
            
        default:
            ;
        }
            
            
!!!8791451.java!!!	getArray() : Object
        Object dst = new Object[len];
        System.arraycopy((Object)elements, 0, dst, 0, len);
        return dst;
!!!8791579.java!!!	getArray(inout map : Map) : Object
        Object dst[] = new Object[len];
        System.arraycopy((Object)elements, 0, dst, 0, len);
        return dst;
!!!8791707.java!!!	getArray(in index : long, in count : int) : Object
        Object dst = new Object[count];
        System.arraycopy((Object)elements, (int)index, dst, 0, count);
        return dst;        
!!!8791835.java!!!	getArray(in index : long, in count : int, inout map : Map) : Object
        Object dst = new Object[count];
        System.arraycopy((Object)elements, (int)index, dst, 0, count);
        return dst;        
!!!8791963.java!!!	getBaseType() : int
        return baseType;
!!!8792091.java!!!	getBaseTypeName() : String
        return baseTypeName;
!!!8792219.java!!!	getResultSet(in index : long, in count : int) : ResultSet
        throw new UnsupportedOperationException();
!!!8792347.java!!!	getResultSet(inout map : Map) : ResultSet
        throw new UnsupportedOperationException();
!!!8792475.java!!!	getResultSet() : ResultSet
        throw new UnsupportedOperationException();
!!!8792603.java!!!	getResultSet(in index : long, in count : int, inout map : Map) : ResultSet
        throw new UnsupportedOperationException();
