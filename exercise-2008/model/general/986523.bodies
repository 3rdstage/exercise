class SafeCharIterator
!!!7841947.java!!!	SafeCharIterator(inout base : CharacterIterator)
            this.base = base;
            this.rangeStart = base.getBeginIndex();
            this.rangeLimit = base.getEndIndex();
            this.currentIndex = base.getIndex();
!!!7842075.java!!!	first() : char
            return setIndex(rangeStart);
!!!7842203.java!!!	last() : char
            return setIndex(rangeLimit - 1);
!!!7842331.java!!!	current() : char
            if (currentIndex < rangeStart || currentIndex >= rangeLimit) {
                return DONE;
            }
            else {
                return base.setIndex(currentIndex);
            }
!!!7842459.java!!!	next() : char

            currentIndex++;
            if (currentIndex >= rangeLimit) {
                currentIndex = rangeLimit;
                return DONE;
            }
            else {
                return base.setIndex(currentIndex);
            }
!!!7842587.java!!!	previous() : char

            currentIndex--;
            if (currentIndex < rangeStart) {
                currentIndex = rangeStart;
                return DONE;
            }
            else {
                return base.setIndex(currentIndex);
            }
!!!7842715.java!!!	setIndex(in i : int) : char

            if (i < rangeStart || i > rangeLimit) {
                throw new IllegalArgumentException("Invalid position");
            }
            currentIndex = i;
            return current();
!!!7842843.java!!!	getBeginIndex() : int
            return rangeStart;
!!!7842971.java!!!	getEndIndex() : int
            return rangeLimit;
!!!7843099.java!!!	getIndex() : int
            return currentIndex;
!!!7843227.java!!!	clone() : Object

            SafeCharIterator copy = null;
            try {
                copy = (SafeCharIterator) super.clone();
            }
            catch(CloneNotSupportedException e) {
                throw new Error("Clone not supported: " + e);
            }

            CharacterIterator copyOfBase = (CharacterIterator) base.clone();
            copy.base = copyOfBase;
            return copy;
