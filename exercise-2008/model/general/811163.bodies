class UnImplNode
!!!5847195.java!!!	error(in msg : String) : void

    System.out.println("DOM ERROR! class: " + this.getClass().getName());

    throw new RuntimeException(XMLMessages.createXMLMessage(msg, null));
!!!5847323.java!!!	error(in msg : String, inout args : Object) : void

    System.out.println("DOM ERROR! class: " + this.getClass().getName());

    throw new RuntimeException(XMLMessages.createXMLMessage(msg, args));  //"UnImplNode error: "+msg);
!!!5847451.java!!!	appendChild(inout newChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"appendChild not supported!");

    return null;
!!!5847579.java!!!	hasChildNodes() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasChildNodes not supported!");

    return false;
!!!5847707.java!!!	getNodeType() : short

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeType not supported!");

    return 0;
!!!5847835.java!!!	getParentNode() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getParentNode not supported!");

    return null;
!!!5847963.java!!!	getChildNodes() : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getChildNodes not supported!");

    return null;
!!!5848091.java!!!	getFirstChild() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getFirstChild not supported!");

    return null;
!!!5848219.java!!!	getLastChild() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLastChild not supported!");

    return null;
!!!5848347.java!!!	getNextSibling() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNextSibling not supported!");

    return null;
!!!5848475.java!!!	getLength() : int

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLength not supported!");

    return 0;
!!!5848603.java!!!	item(in index : int) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"item not supported!");

    return null;
!!!5848731.java!!!	getOwnerDocument() : Document

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getOwnerDocument not supported!");

    return null;
!!!5848859.java!!!	getTagName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getTagName not supported!");

    return null;
!!!5848987.java!!!	getNodeName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeName not supported!");

    return null;
!!!5849115.java!!!	normalize() : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"normalize not supported!");
!!!5849243.java!!!	getElementsByTagName(in name : String) : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getElementsByTagName not supported!");

    return null;
!!!5849371.java!!!	removeAttributeNode(inout oldAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttributeNode not supported!");

    return null;
!!!5849499.java!!!	setAttributeNode(inout newAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNode not supported!");

    return null;
!!!5849627.java!!!	hasAttribute(in name : String) : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttribute not supported!");

    return false;
!!!5849755.java!!!	hasAttributeNS(in name : String, in x : String) : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttributeNS not supported!");

    return false;
!!!5849883.java!!!	getAttributeNode(in name : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNode not supported!");

    return null;
!!!5850011.java!!!	removeAttribute(in name : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttribute not supported!");
!!!5850139.java!!!	setAttribute(in name : String, in value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttribute not supported!");
!!!5850267.java!!!	getAttribute(in name : String) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttribute not supported!");

    return null;
!!!5850395.java!!!	hasAttributes() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"hasAttributes not supported!");

    return false;
!!!5850523.java!!!	getElementsByTagNameNS(in namespaceURI : String, in localName : String) : NodeList

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getElementsByTagNameNS not supported!");

    return null;
!!!5850651.java!!!	setAttributeNodeNS(inout newAttr : Attr) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNodeNS not supported!");

    return null;
!!!5850779.java!!!	getAttributeNodeNS(in namespaceURI : String, in localName : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNodeNS not supported!");

    return null;
!!!5850907.java!!!	removeAttributeNS(in namespaceURI : String, in localName : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"removeAttributeNS not supported!");
!!!5851035.java!!!	setAttributeNS(in namespaceURI : String, in qualifiedName : String, in value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setAttributeNS not supported!");
!!!5851163.java!!!	getAttributeNS(in namespaceURI : String, in localName : String) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributeNS not supported!");

    return null;
!!!5851291.java!!!	getPreviousSibling() : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getPreviousSibling not supported!");

    return null;
!!!5851419.java!!!	cloneNode(inout deep : boolean) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"cloneNode not supported!");

    return null;
!!!5851547.java!!!	getNodeValue() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNodeValue not supported!");

    return null;
!!!5851675.java!!!	setNodeValue(in nodeValue : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setNodeValue not supported!");
!!!5851803.java!!!	setValue(in value : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setValue not supported!");
!!!5851931.java!!!	getOwnerElement() : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getOwnerElement not supported!");

    return null;
!!!5852059.java!!!	getSpecified() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setValue not supported!");

    return false;
!!!5852187.java!!!	getAttributes() : NamedNodeMap

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getAttributes not supported!");

    return null;
!!!5852315.java!!!	insertBefore(inout newChild : Node, inout refChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"insertBefore not supported!");

    return null;
!!!5852443.java!!!	replaceChild(inout newChild : Node, inout oldChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"replaceChild not supported!");

    return null;
!!!5852571.java!!!	removeChild(inout oldChild : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"replaceChild not supported!");

    return null;
!!!5852699.java!!!	isSupported(in feature : String, in version : String) : boolean
    return false;
!!!5852827.java!!!	getNamespaceURI() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getNamespaceURI not supported!");

    return null;
!!!5852955.java!!!	getPrefix() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getPrefix not supported!");

    return null;
!!!5853083.java!!!	setPrefix(in prefix : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"setPrefix not supported!");
!!!5853211.java!!!	getLocalName() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);  //"getLocalName not supported!");

    return null;
!!!5853339.java!!!	getDoctype() : DocumentType

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5853467.java!!!	getImplementation() : DOMImplementation

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5853595.java!!!	getDocumentElement() : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5853723.java!!!	createElement(in tagName : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5853851.java!!!	createDocumentFragment() : DocumentFragment

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5853979.java!!!	createTextNode(in data : String) : Text

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854107.java!!!	createComment(in data : String) : Comment

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854235.java!!!	createCDATASection(in data : String) : CDATASection

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854363.java!!!	createProcessingInstruction(in target : String, in data : String) : ProcessingInstruction

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854491.java!!!	createAttribute(in name : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854619.java!!!	createEntityReference(in name : String) : EntityReference

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854747.java!!!	importNode(inout importedNode : Node, inout deep : boolean) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5854875.java!!!	createElementNS(in namespaceURI : String, in qualifiedName : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5855003.java!!!	createAttributeNS(in namespaceURI : String, in qualifiedName : String) : Attr

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5855131.java!!!	getElementById(in elementId : String) : Element

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5855259.java!!!	setData(in data : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5855387.java!!!	substringData(in offset : int, in count : int) : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5855515.java!!!	appendData(in arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5855643.java!!!	insertData(in offset : int, in arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5855771.java!!!	deleteData(in offset : int, in count : int) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5855899.java!!!	replaceData(in offset : int, in count : int, in arg : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5856027.java!!!	splitText(in offset : int) : Text

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5856155.java!!!	adoptNode(inout source : Node) : Node

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5856283.java!!!	getInputEncoding() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5856411.java!!!	setInputEncoding(in encoding : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5856539.java!!!	getStandalone() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return false;
!!!5856667.java!!!	setStandalone(inout standalone : boolean) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5856795.java!!!	getStrictErrorChecking() : boolean

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return false;
!!!5856923.java!!!	setStrictErrorChecking(inout strictErrorChecking : boolean) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5857051.java!!!	getVersion() : String

    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);

    return null;
!!!5857179.java!!!	setVersion(in version : String) : void
    error(XMLErrorResources.ER_FUNCTION_NOT_SUPPORTED);
!!!5857307.java!!!	setUserData(in key : String, inout data : Object, inout handler : UserDataHandler) : Object
        return getOwnerDocument().setUserData( key, data, handler);
!!!5857435.java!!!	getUserData(in key : String) : Object
        return getOwnerDocument().getUserData( key);
!!!5857563.java!!!	getFeature(in feature : String, in version : String) : Object
        // we don't have any alternate node, either this node does the job
        // or we don't have anything that does
        return isSupported(feature, version) ? this : null;
!!!5857691.java!!!	isEqualNode(inout arg : Node) : boolean
        if (arg == this) {
            return true;
        }
        if (arg.getNodeType() != getNodeType()) {
            return false;
        }
        // in theory nodeName can't be null but better be careful
        // who knows what other implementations may be doing?...
        if (getNodeName() == null) {
            if (arg.getNodeName() != null) {
                return false;
            }
        }
        else if (!getNodeName().equals(arg.getNodeName())) {
            return false;
        }

        if (getLocalName() == null) {
            if (arg.getLocalName() != null) {
                return false;
            }
        }
        else if (!getLocalName().equals(arg.getLocalName())) {
            return false;
        }

        if (getNamespaceURI() == null) {
            if (arg.getNamespaceURI() != null) {
                return false;
            }
        }
        else if (!getNamespaceURI().equals(arg.getNamespaceURI())) {
            return false;
        }

        if (getPrefix() == null) {
            if (arg.getPrefix() != null) {
                return false;
            }
        }
        else if (!getPrefix().equals(arg.getPrefix())) {
            return false;
        }

        if (getNodeValue() == null) {
            if (arg.getNodeValue() != null) {
                return false;
            }
        }
        else if (!getNodeValue().equals(arg.getNodeValue())) {
            return false;
        }
    /*
        if (getBaseURI() == null) {
            if (((NodeImpl) arg).getBaseURI() != null) {
                return false;
            }
        }
        else if (!getBaseURI().equals(((NodeImpl) arg).getBaseURI())) {
            return false;
        }
*/

             return true;
!!!5857819.java!!!	lookupNamespaceURI(in specifiedPrefix : String) : String
        short type = this.getNodeType();
        switch (type) {
        case Node.ELEMENT_NODE : {

                String namespace = this.getNamespaceURI();
                String prefix = this.getPrefix();
                if (namespace !=null) {
                    // REVISIT: is it possible that prefix is empty string?
                    if (specifiedPrefix== null && prefix==specifiedPrefix) {
                        // looking for default namespace
                        return namespace;
                    } else if (prefix != null && prefix.equals(specifiedPrefix)) {
                        // non default namespace
                        return namespace;
                    }
                }
                if (this.hasAttributes()) {
                    NamedNodeMap map = this.getAttributes();
                    int length = map.getLength();
                    for (int i=0;i<length;i++) {
                        Node attr = map.item(i);
                        String attrPrefix = attr.getPrefix();
                        String value = attr.getNodeValue();
                        namespace = attr.getNamespaceURI();
                        if (namespace !=null && namespace.equals("http://www.w3.org/2000/xmlns/")) {
                            // at this point we are dealing with DOM Level 2 nodes only
                            if (specifiedPrefix == null &&
                                attr.getNodeName().equals("xmlns")) {
                                // default namespace
                                return value;
                            } else if (attrPrefix !=null &&
                                       attrPrefix.equals("xmlns") &&
                                       attr.getLocalName().equals(specifiedPrefix)) {
                 // non default namespace
                                return value;
                            }
                        }
                    }
                }
		/*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupNamespaceURI(specifiedPrefix);
                }
		*/

                return null;


            }
/*
        case Node.DOCUMENT_NODE : {
                return((NodeImpl)((Document)this).getDocumentElement()).lookupNamespaceURI(specifiedPrefix) ;
            }
*/
        case Node.ENTITY_NODE :
        case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return null;
        case Node.ATTRIBUTE_NODE:{
                if (this.getOwnerElement().getNodeType() == Node.ELEMENT_NODE) {
                    return getOwnerElement().lookupNamespaceURI(specifiedPrefix);

                }
                return null;
            }
        default:{
	   /*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupNamespaceURI(specifiedPrefix);
                }
             */
                return null;
            }

        }
!!!5857947.java!!!	isDefaultNamespace(in namespaceURI : String) : boolean
       /*
        // REVISIT: remove casts when DOM L3 becomes REC.
        short type = this.getNodeType();
        switch (type) {
        case Node.ELEMENT_NODE: {
            String namespace = this.getNamespaceURI();
            String prefix = this.getPrefix();

            // REVISIT: is it possible that prefix is empty string?
            if (prefix == null || prefix.length() == 0) {
                if (namespaceURI == null) {
                    return (namespace == namespaceURI);
                }
                return namespaceURI.equals(namespace);
            }
            if (this.hasAttributes()) {
                ElementImpl elem = (ElementImpl)this;
                NodeImpl attr = (NodeImpl)elem.getAttributeNodeNS("http://www.w3.org/2000/xmlns/", "xmlns");
                if (attr != null) {
                    String value = attr.getNodeValue();
                    if (namespaceURI == null) {
                        return (namespace == value);
                    }
                    return namespaceURI.equals(value);
                }
            }

            NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
            if (ancestor != null) {
                return ancestor.isDefaultNamespace(namespaceURI);
            }
            return false;
        }
        case Node.DOCUMENT_NODE:{
                return((NodeImpl)((Document)this).getDocumentElement()).isDefaultNamespace(namespaceURI);
            }

        case Node.ENTITY_NODE :
          case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return false;
        case Node.ATTRIBUTE_NODE:{
                if (this.ownerNode.getNodeType() == Node.ELEMENT_NODE) {
                    return ownerNode.isDefaultNamespace(namespaceURI);

                }
                return false;
            }
        default:{  
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.isDefaultNamespace(namespaceURI);
                }
                return false;
            }

        }
*/
        return false;


!!!5858075.java!!!	lookupPrefix(in namespaceURI : String) : String

        // REVISIT: When Namespaces 1.1 comes out this may not be true
        // Prefix can't be bound to null namespace
        if (namespaceURI == null) {
            return null;
        }

        short type = this.getNodeType();

        switch (type) {
/*
        case Node.ELEMENT_NODE: {

                String namespace = this.getNamespaceURI(); // to flip out children
                return lookupNamespacePrefix(namespaceURI, (ElementImpl)this);
            }

        case Node.DOCUMENT_NODE:{
                return((NodeImpl)((Document)this).getDocumentElement()).lookupPrefix(namespaceURI);
            }
*/
        case Node.ENTITY_NODE :
        case Node.NOTATION_NODE:
        case Node.DOCUMENT_FRAGMENT_NODE:
        case Node.DOCUMENT_TYPE_NODE:
            // type is unknown
            return null;
        case Node.ATTRIBUTE_NODE:{
                if (this.getOwnerElement().getNodeType() == Node.ELEMENT_NODE) {
                    return getOwnerElement().lookupPrefix(namespaceURI);

                }
                return null;
            }
        default:{ 
/*
                NodeImpl ancestor = (NodeImpl)getElementAncestor(this);
                if (ancestor != null) {
                    return ancestor.lookupPrefix(namespaceURI);
                }
*/
                return null;
            }
         }
!!!5858203.java!!!	isSameNode(inout other : Node) : boolean
        // we do not use any wrapper so the answer is obvious
        return this == other;
!!!5858331.java!!!	setTextContent(in textContent : String) : void
        setNodeValue(textContent);
!!!5858459.java!!!	getTextContent() : String
        return getNodeValue();  // overriden in some subclasses
!!!5858587.java!!!	compareDocumentPosition(inout other : Node) : short
        return 0;
!!!5858715.java!!!	getBaseURI() : String
        return null;
!!!5858843.java!!!	renameNode(inout n : Node, in namespaceURI : String, in name : String) : Node
        return n;
!!!5858971.java!!!	normalizeDocument() : void
   

!!!5859099.java!!!	getDomConfig() : DOMConfiguration
       return null;
!!!5859227.java!!!	setDocumentURI(in documentURI : String) : void
        
        fDocumentURI= documentURI;
!!!5859355.java!!!	getDocumentURI() : String
        return fDocumentURI;
!!!5859483.java!!!	getActualEncoding() : String
        return actualEncoding;
!!!5859611.java!!!	setActualEncoding(in value : String) : void
        actualEncoding = value;
!!!5859739.java!!!	replaceWholeText(in content : String) : Text
/*

        if (needsSyncData()) {
            synchronizeData();
        }

        // make sure we can make the replacement
        if (!canModify(nextSibling)) {
            throw new DOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR,
                DOMMessageFormatter.formatMessage(DOMMessageFormatter.DOM_DOMAIN, "NO_MODIFICATION_ALLOWED_ERR", null));
        }

        Node parent = this.getParentNode();
        if (content == null || content.length() == 0) {
            // remove current node
            if (parent !=null) { // check if node in the tree
                parent.removeChild(this);
                return null;
            }
        }
        Text currentNode = null;
        if (isReadOnly()){
            Text newNode = this.ownerDocument().createTextNode(content);
            if (parent !=null) { // check if node in the tree
                parent.insertBefore(newNode, this);
                parent.removeChild(this);
                currentNode = newNode;
            } else {
                return newNode;
            }
        }  else {
            this.setData(content);
            currentNode = this;
        }
        Node sibling =  currentNode.getNextSibling();
        while ( sibling !=null) {
            parent.removeChild(sibling);
            sibling = currentNode.getNextSibling();
        }

        return currentNode;
*/
        return null; //Pending
!!!5859867.java!!!	getWholeText() : String

/*
        if (needsSyncData()) {
            synchronizeData();
        }
        if (nextSibling == null) {
            return data;
        }
        StringBuffer buffer = new StringBuffer();
        if (data != null && data.length() != 0) {
            buffer.append(data);
        }
        getWholeText(nextSibling, buffer);
        return buffer.toString();
*/
        return null; // PENDING

!!!5859995.java!!!	isWhitespaceInElementContent() : boolean
        return false;
!!!5860123.java!!!	setIdAttribute(inout id : boolean) : void
        //PENDING
!!!5860251.java!!!	setIdAttribute(in name : String, inout makeId : boolean) : void
        //PENDING
!!!5860379.java!!!	setIdAttributeNode(inout at : Attr, inout makeId : boolean) : void
        //PENDING
!!!5860507.java!!!	setIdAttributeNS(in namespaceURI : String, in localName : String, inout makeId : boolean) : void
        //PENDING
!!!5860635.java!!!	getSchemaTypeInfo() : TypeInfo
      return null; //PENDING
!!!5860763.java!!!	isId() : boolean
        return false; //PENDING
!!!5860891.java!!!	getXmlEncoding() : String
        return xmlEncoding;
!!!5861019.java!!!	setXmlEncoding(in xmlEncoding : String) : void
        this.xmlEncoding = xmlEncoding;
!!!5861147.java!!!	getXmlStandalone() : boolean
        return xmlStandalone;
!!!5861275.java!!!	setXmlStandalone(inout xmlStandalone : boolean) : void
        this.xmlStandalone = xmlStandalone;
!!!5861403.java!!!	getXmlVersion() : String
        return xmlVersion;
!!!5861531.java!!!	setXmlVersion(in xmlVersion : String) : void
        this.xmlVersion = xmlVersion;
