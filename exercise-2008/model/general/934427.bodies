class Buffer
!!!7300635.java!!!	Buffer(in mark : int, in pos : int, in lim : int, in cap : int)
	// package-private
	if (cap < 0)
	    throw new IllegalArgumentException();
	this.capacity = cap;
	limit(lim);
	position(pos);
	if (mark >= 0) {
	    if (mark > pos)
		throw new IllegalArgumentException();
	    this.mark = mark;
	}
!!!7300763.java!!!	capacity() : int
	return capacity;
!!!7300891.java!!!	position() : int
	return position;
!!!7301019.java!!!	position(in newPosition : int) : Buffer
	if ((newPosition > limit) || (newPosition < 0))
	    throw new IllegalArgumentException();
	position = newPosition;
	if (mark > position) mark = -1;
	return this;
!!!7301147.java!!!	limit() : int
	return limit;
!!!7301275.java!!!	limit(in newLimit : int) : Buffer
	if ((newLimit > capacity) || (newLimit < 0))
	    throw new IllegalArgumentException();
	limit = newLimit;
	if (position > limit) position = limit;
	if (mark > limit) mark = -1;
	return this;
!!!7301403.java!!!	mark() : Buffer
	mark = position;
	return this;
!!!7301531.java!!!	reset() : Buffer
        int m = mark;
	if (m < 0)
	    throw new InvalidMarkException();
	position = m;
	return this;
!!!7301659.java!!!	clear() : Buffer
	position = 0;
	limit = capacity;
	mark = -1;
	return this;
!!!7301787.java!!!	flip() : Buffer
	limit = position;
	position = 0;
	mark = -1;
	return this;
!!!7301915.java!!!	rewind() : Buffer
	position = 0;
	mark = -1;
	return this;
!!!7302043.java!!!	remaining() : int
	return limit - position;
!!!7302171.java!!!	hasRemaining() : boolean
	return position < limit;
!!!7302427.java!!!	nextGetIndex() : int
				// package-private
	if (position >= limit)
	    throw new BufferUnderflowException();
	return position++;
!!!7302555.java!!!	nextGetIndex(in nb : int) : int
			// package-private
        if (limit - position < nb)
	    throw new BufferUnderflowException();
	int p = position;
	position += nb;
	return p;
!!!7302683.java!!!	nextPutIndex() : int
				// package-private
	if (position >= limit)
	    throw new BufferOverflowException();
	return position++;
!!!7302811.java!!!	nextPutIndex(in nb : int) : int
			// package-private
        if (limit - position < nb)
	    throw new BufferOverflowException();
	int p = position;
	position += nb;
	return p;
!!!7302939.java!!!	checkIndex(in i : int) : int
			// package-private
	if ((i < 0) || (i >= limit))
	    throw new IndexOutOfBoundsException();
	return i;
!!!7303067.java!!!	checkIndex(in i : int, in nb : int) : int
		// package-private
	if ((i < 0) || (nb > limit - i))
	    throw new IndexOutOfBoundsException();
	return i;
!!!7303195.java!!!	markValue() : int
				// package-private
	return mark;
!!!7303323.java!!!	checkBounds(in off : int, in len : int, in size : int) : void
 // package-private
        if ((off | len | (off + len) | (size - (off + len))) < 0)
	    throw new IndexOutOfBoundsException();
