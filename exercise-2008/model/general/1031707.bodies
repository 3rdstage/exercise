class MBeanServerFactory
!!!8245403.java!!!	MBeanServerFactory()
	
!!!8245531.java!!!	releaseMBeanServer(inout mbeanServer : MBeanServer) : void
	checkPermission("releaseMBeanServer");

	removeMBeanServer(mbeanServer);
!!!8245659.java!!!	createMBeanServer() : MBeanServer
	return createMBeanServer(null);
!!!8245787.java!!!	createMBeanServer(in domain : String) : MBeanServer
	checkPermission("createMBeanServer");

	final MBeanServer mBeanServer = newMBeanServer(domain);
	addMBeanServer(mBeanServer);
	return mBeanServer;
!!!8245915.java!!!	newMBeanServer() : MBeanServer
	return newMBeanServer(null);
!!!8246043.java!!!	newMBeanServer(in domain : String) : MBeanServer
	checkPermission("newMBeanServer");

	// Get the builder. Creates a new one if necessary.
	//
	final MBeanServerBuilder mbsBuilder = getNewMBeanServerBuilder();
	// Returned value cannot be null.  NullPointerException if violated.

	synchronized(mbsBuilder) {
	    final MBeanServerDelegate delegate  = 
		mbsBuilder.newMBeanServerDelegate();
	    if (delegate == null) {
		final String msg =
		    "MBeanServerBuilder.newMBeanServerDelegate() " +
		    "returned null";
		throw new JMRuntimeException(msg);
	    }
	    final MBeanServer mbeanServer =
		mbsBuilder.newMBeanServer(domain,null,delegate);
	    if (mbeanServer == null) {
		final String msg =
		    "MBeanServerBuilder.newMBeanServer() returned null";
		throw new JMRuntimeException(msg);
	    }
	    return mbeanServer;
	}
!!!8246171.java!!!	findMBeanServer(in agentId : String) : ArrayList
	checkPermission("findMBeanServer");

	if (agentId == null)
	    return (ArrayList) mBeanServerList.clone();

	ArrayList result = new ArrayList();
	for (Iterator i = mBeanServerList.iterator(); i.hasNext(); ) {
	    MBeanServer mbs = (MBeanServer) i.next();
	    String name = mBeanServerName(mbs);
	    if (agentId.equals(name))
		result.add(mbs);
	}
	return result;
!!!8246299.java!!!	getClassLoaderRepository(inout server : MBeanServer) : ClassLoaderRepository
	return server.getClassLoaderRepository(); 
!!!8246427.java!!!	mBeanServerName(inout mbs : MBeanServer) : String
	try {
	    return (String) mbs.getAttribute(delegateName, "MBeanServerId");
	} catch (JMException e) {
	    return null;
	}
!!!8246555.java!!!	checkPermission(in action : String) : void
	SecurityManager sm = System.getSecurityManager();
	if (sm != null) {
	    Permission perm = new MBeanServerPermission(action);
	    sm.checkPermission(perm);
	}
!!!8246683.java!!!	addMBeanServer(inout mbs : MBeanServer) : void
        mBeanServerList.add(mbs);
!!!8246811.java!!!	removeMBeanServer(inout mbs : MBeanServer) : void
	boolean removed = mBeanServerList.remove(mbs);
	if (!removed) {
	    trace("removeMBeanServer", "MBeanServer was not in list!");
	    throw new IllegalArgumentException("MBeanServer was not in list!");
	}
!!!8246939.java!!!	loadBuilderClass(in builderClassName : String) : Class
	final ClassLoader loader = 
	    Thread.currentThread().getContextClassLoader();

	if (loader != null) {
	    // Try with context class loader
	    return loader.loadClass(builderClassName);
	} 

	// No context class loader? Try with Class.forName()
	return Class.forName(builderClassName);  
!!!8247067.java!!!	newBuilder(inout builderClass : Class) : MBeanServerBuilder
	try {
	    final Object builder = builderClass.newInstance();
	    return (MBeanServerBuilder)builder;
	} catch (RuntimeException x) {
	    throw x;
	} catch (Exception x) {
	    final String msg =
               "Failed to instantiate a MBeanServerBuilder from " +
	       builderClass + ": " + x;
	    throw new JMRuntimeException(msg, x);
	}
!!!8247195.java!!!	checkMBeanServerBuilder() : void
	try {
	    PrivilegedAction act =
		new GetPropertyAction(JmxProperties.JMX_INITIAL_BUILDER);
	    String builderClassName = (String)
		AccessController.doPrivileged(act);

	    try {
		final Class newBuilderClass;
		if (builderClassName == null || builderClassName.length() == 0)
		    newBuilderClass = MBeanServerBuilder.class;
		else
		    newBuilderClass = loadBuilderClass(builderClassName);

		// Check whether a new builder needs to be created
		if (builder != null) {
		    final Class builderClass = builder.getClass();
		    if (newBuilderClass == builderClass)
			return; // no need to create a new builder...
		} 

		// Create a new builder 
		builder = newBuilder(newBuilderClass);	    
	    } catch (ClassNotFoundException x) {
		final String msg =
		    "Failed to load MBeanServerBuilder class " +
		    builderClassName + ": " + x;
		throw new JMRuntimeException(msg, x);
	    }
	} catch (RuntimeException x) {
	    debug("checkMBeanServerBuilder",
		  "Failed to instantiate MBeanServerBuilder: " + x +
		  "\n\t\tCheck the value of the " + 
		  JmxProperties.JMX_INITIAL_BUILDER + " property." );
	    throw x;
	}
!!!8247323.java!!!	getNewMBeanServerBuilder() : MBeanServerBuilder
	checkMBeanServerBuilder();
	return builder;
!!!8247451.java!!!	trace(in method : String, in message : String) : void
	if (Trace.isSelected(Trace.LEVEL_TRACE, Trace.INFO_MBEANSERVER)) {
	    Trace.send(Trace.LEVEL_TRACE, Trace.INFO_MBEANSERVER,
		       MBeanServerFactory.class.getName(), method, message);
	}
!!!8247579.java!!!	debug(in method : String, in message : String) : void
	if (Trace.isSelected(Trace.LEVEL_DEBUG, Trace.INFO_MBEANSERVER)) {
	    Trace.send(Trace.LEVEL_DEBUG, Trace.INFO_MBEANSERVER,
		       MBeanServerFactory.class.getName(), method, message);
	}
!!!8247707.java!!!	error(in method : String, in message : String) : void
	if (Trace.isSelected(Trace.LEVEL_ERROR, Trace.INFO_MBEANSERVER)) {
	    Trace.send(Trace.LEVEL_ERROR, Trace.INFO_MBEANSERVER,
		       MBeanServerFactory.class.getName(), method, message);
	}
