class JSpinner
!!!9061147.java!!!	JSpinner(inout model : SpinnerModel)
	this.model = model;
	this.editor = createEditor(model);
	setOpaque(true);
        updateUI();
!!!9061275.java!!!	JSpinner()
	this(new SpinnerNumberModel());
!!!9061403.java!!!	getUI() : SpinnerUI
        return (SpinnerUI)ui;
!!!9061531.java!!!	setUI(inout ui : SpinnerUI) : void
        super.setUI(ui);
!!!9061659.java!!!	getUIClassID() : String
        return uiClassID;
!!!9061787.java!!!	updateUI() : void
        setUI((SpinnerUI)UIManager.getUI(this));
        invalidate();
!!!9061915.java!!!	createEditor(inout model : SpinnerModel) : JComponent
	if (model instanceof SpinnerDateModel) {
	    return new DateEditor(this);
	}
	else if (model instanceof SpinnerListModel) {
	    return new ListEditor(this);
	}
	else if (model instanceof SpinnerNumberModel) {
	    return new NumberEditor(this);
	}
	else {
	    return new DefaultEditor(this);
	}
!!!9062043.java!!!	setModel(inout model : SpinnerModel) : void
	if (model == null) {
	    throw new IllegalArgumentException("null model");
	}
	if (!model.equals(this.model)) {
	    SpinnerModel oldModel = this.model;
	    this.model = model;
	    if (modelListener != null) {
		this.model.addChangeListener(modelListener);
	    }
	    firePropertyChange("model", oldModel, model);
	    if (!editorExplicitlySet) {
		setEditor(createEditor(model)); // sets editorExplicitlySet true
		editorExplicitlySet = false;
	    }
	    repaint();
	    revalidate();
	}
!!!9062171.java!!!	getModel() : SpinnerModel
	return model;
!!!9062299.java!!!	getValue() : Object
	return getModel().getValue();
!!!9062427.java!!!	setValue(inout value : Object) : void
	getModel().setValue(value);
!!!9062555.java!!!	getNextValue() : Object
	return getModel().getNextValue();
!!!9062811.java!!!	addChangeListener(inout listener : ChangeListener) : void
        if (modelListener == null) {
            modelListener = new ModelListener();
            getModel().addChangeListener(modelListener);
        }
        listenerList.add(ChangeListener.class, listener);
!!!9062939.java!!!	removeChangeListener(inout listener : ChangeListener) : void
        listenerList.remove(ChangeListener.class, listener);
!!!9063067.java!!!	getChangeListeners() : ChangeListener
        return (ChangeListener[])listenerList.getListeners(
                ChangeListener.class);
!!!9063195.java!!!	fireStateChanged() : void
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i] == ChangeListener.class) {
                if (changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((ChangeListener)listeners[i+1]).stateChanged(changeEvent);
            }
        }
!!!9063323.java!!!	getPreviousValue() : Object
	return getModel().getPreviousValue();
!!!9063451.java!!!	setEditor(inout editor : JComponent) : void
	if (editor == null) {
	    throw new IllegalArgumentException("null editor");
	}
	if (!editor.equals(this.editor)) {
	    JComponent oldEditor = this.editor;
	    this.editor = editor;
	    if (oldEditor instanceof DefaultEditor) {
		((DefaultEditor)oldEditor).dismiss(this);
	    }
	    editorExplicitlySet = true;
	    firePropertyChange("editor", oldEditor, editor);
	    revalidate();
	    repaint();
	}
!!!9063579.java!!!	getEditor() : JComponent
	return editor;
!!!9063707.java!!!	commitEdit() : void
        JComponent editor = getEditor();
        if (editor instanceof DefaultEditor) {
            ((DefaultEditor)editor).commitEdit();
        }
!!!9063835.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        HashMap additionalValues = new HashMap(1);
        SpinnerModel model = getModel();

        if (model instanceof Serializable) {
            additionalValues.put("model", model);
        }
        s.writeObject(additionalValues);

        if (getUIClassID().equals(uiClassID)) {
            byte count = JComponent.getWriteObjCounter(this);
            JComponent.setWriteObjCounter(this, --count);
            if (count == 0 && ui != null) {
                ui.installUI(this);
            }
        }
!!!9063963.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();

        Map additionalValues = (Map)s.readObject();

        model = (SpinnerModel)additionalValues.get("model");
!!!9084955.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleJSpinner();
        }
        return accessibleContext;
