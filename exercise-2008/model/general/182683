format 66
"timer" // src::javax::management::timer
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management/timer"
  java_package "javax.management.timer"
  classview 177435 "timer"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1047323 "Timer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Provides the implementation of the timer MBean.
The timer MBean sends out an alarm at a specified time 
that wakes up all the listeners registered to receive timer notifications.
<P>

This class manages a list of dated timer notifications.
A method allows users to add/remove as many notifications as required.
When a timer notification is emitted by the timer and becomes obsolete,
it is automatically removed from the list of timer notifications.
<BR>Additional timer notifications can be added into regularly repeating notifications.
<P>

Note:
<OL>
<LI>All notifications before the time when the <CODE>addNotification</CODE> method is called 
are ignored, irrespective of the <CODE>sendPastNotifications</CODE> flag.
<LI>When sending timer notifications, the timer updates the notification sequence number
irrespective of the notification type.
<LI>The timer service relies on the system date of the host where the <CODE>Timer</CODE> class is loaded. 
Listeners may receive untimely notifications 
if their host has a different system date.
To avoid such problems, synchronize the system date of all host machines where timing is needed.
<LI>The default behavior for periodic notifications is <i>fixed-delay execution</i>, as
    specified in {@link java.util.Timer}. In order to use <i>fixed-rate execution</i>, use the
    overloaded {@link #addNotification(String, String, Object, Date, long, long, boolean)} method.
<LI>Notification listeners are potentially all executed in the same
thread.  Therefore, they should execute rapidly to avoid holding up
other listeners or perturbing the regularity of fixed-delay
executions.  See {@link NotificationBroadcasterSupport}.
</OL>

@version     4.58     04/13/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2093595 // <generalisation>
	relation 2093595 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2093595 // <generalisation>
	  b parent class_ref 516763 // NotificationBroadcasterSupport
      end

      classrelation 2093723 // <realization>
	relation 2093723 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2093723 // <realization>
	  b parent class_ref 1047451 // TimerMBean
      end

      classrelation 2093851 // <realization>
	relation 2093851 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2093851 // <realization>
	  b parent class_ref 517019 // MBeanRegistration
      end

      attribute 3074459 "ONE_SECOND"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PUBLIC VARIABLES
------------------------------------------


Number of milliseconds in one second.
Useful constant for the <CODE>addNotification</CODE> method.
"
      end

      attribute 3074587 "ONE_MINUTE"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  60*ONE_SECOND"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of milliseconds in one minute.
Useful constant for the <CODE>addNotification</CODE> method.
"
      end

      attribute 3074715 "ONE_HOUR"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  60*ONE_MINUTE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of milliseconds in one hour.
Useful constant for the <CODE>addNotification</CODE> method.
"
      end

      attribute 3074843 "ONE_DAY"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  24*ONE_HOUR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of milliseconds in one day.
Useful constant for the <CODE>addNotification</CODE> method.
"
      end

      attribute 3074971 "ONE_WEEK"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  7*ONE_DAY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of milliseconds in one week.
Useful constant for the <CODE>addNotification</CODE> method.
"
      end

      operation 8444827 "isTraceOn"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8444955 "trace"
	package explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8445083 "trace"
	package explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8445211 "isDebugOn"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8445339 "debug"
	package explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8445467 "debug"
	package explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3075099 "dbgTag"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Timer\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
 PRIVATE VARIABLES
------------------------------------------
"
      end

      classrelation 2093979 // timerTable (<unidirectional association>)
	relation 2093979 --->
	  a role_name "timerTable" init_value "=  new Hashtable()" private
	    comment "
Table containing all the timer notifications of this timer,
with the associated date, period and number of occurrences.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2093979 // timerTable (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      attribute 3075227 "sendPastNotifications"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Past notifications sending on/off flag value.
This attribute is used to specify if the timer has to send past notifications after start.
<BR>The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3075355 "isActive"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Timer state.
The default value is set to <CODE>false</CODE>.
"
      end

      attribute 3075483 "sequenceNumber"
	private explicit_type "long"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Timer sequence number.
The default value is set to 0.
"
      end

      attribute 3075611 "TIMER_NOTIF_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags needed to keep the indexes of the objects in the array.
"
      end

      attribute 3075739 "TIMER_DATE_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3075867 "TIMER_PERIOD_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3075995 "TIMER_NB_OCCUR_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3076123 "ALARM_CLOCK_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3076251 "FIXED_RATE_INDEX"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3076379 "counterID"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The notification counter ID.
Used to keep the max key value inserted into the timer table.
"
      end

      classrelation 2094107 // timer (<unidirectional association>)
	relation 2094107 --->
	  a role_name "timer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2094107 // timer (<unidirectional association>)
	  b parent class_ref 156827 // Timer
      end

      operation 8445595 "Timer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Default constructor."
      end

      operation 8445723 "preRegister"
	public return_type class_ref 510875 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 513179 // MBeanServer
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Allows the timer MBean to perform any operations it needs before being registered
in the MBean server.
<P>
Not used in this context.

@param server The MBean server in which the timer MBean will be registered.
@param name The object name of the timer MBean.

@return The name of the timer MBean registered.

@exception java.lang.Exception"
      end

      operation 8445851 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 392091 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations needed after having been
registered in the MBean server or after the registration has failed.
<P>
Not used in this context."
      end

      operation 8445979 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations it needs before being unregistered
by the MBean server.
<P>
Stops the timer.

@exception java.lang.Exception"
      end

      operation 8446107 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the timer MBean to perform any operations needed after having been
unregistered by the MBean server.
<P>
Not used in this context."
      end

      operation 8446235 "getNotificationInfo"
	public return_type class_ref 516635 // MBeanNotificationInfo
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This overrides the method in NotificationBroadcasterSupport.
Return the MBeanNotificationInfo[] array for this MBean.
The returned array has one element to indicate that the MBean
can emit TimerNotification.  The array of type strings
associated with this entry is a snapshot of the current types
that were given to addNotification."
      end

      operation 8446363 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the timer.
<P>
If there is one or more timer notifications before the time in the list of notifications, the notification
is sent according to the <CODE>sendPastNotifications</CODE> flag and then, updated
according to its period and remaining number of occurrences.
If the timer notification date remains earlier than the current date, this notification is just removed 
from the list of notifications."
      end

      operation 8446491 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the timer."
      end

      operation 8446619 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 7
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	  param inout name "fixedRate" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date, 
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter. 
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, the value of parameter <i>fixedRate</i> is used to
specify the execution scheme, as specified in {@link java.util.Timer}.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.
@param fixedRate If <code>true</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-rate</i> execution scheme. If
                 <code>false</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-delay</i> execution scheme. Ignored if the
                 notification is not periodic.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period or the number of occurrences is negative

@see #addNotification(String, String, Object, Date, long, long)

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                                Date date, long period, long nbOccurences) 
 end of NPCTE fix for bugId 4464388"
      end

      operation 8446747 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 6
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date, 
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter. 
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, uses a <i>fixed-delay</i> execution scheme, as specified in
{@link java.util.Timer}. In order to use a <i>fixed-rate</i> execution scheme, use 
{@link #addNotification(String, String, Object, Date, long, long, boolean)} instead.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period or the number of occurrences is negative

@see #addNotification(String, String, Object, Date, long, long, boolean)

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec 
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                              Date date, long period) 
 end of NPCTE fix for bugId 4464388 */ "
      end

      operation 8446875 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 5
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and period and a null number of occurrences.
<P>
The timer notification will repeat continuously using the timer period using a <i>fixed-delay</i>
execution scheme, as specified in {@link java.util.Timer}. In order to use a <i>fixed-rate</i>
execution scheme, use {@link #addNotification(String, String, Object, Date, long, long,
boolean)} instead. 
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. The
first notification is delivered immediately and the subsequent ones are
spaced as specified by the period parameter.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period is negative or
the date notification is before the current date.

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec 
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                              Date date, long period) 
 end of NPCTE fix for bugId 4464388 */ "
      end

      operation 8447003 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 4
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and a null period and number of occurrences.
<P>
The timer notification will be handled once at the specified date.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date and the
notification is delivered immediately.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date notification is before the current date.

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, Date date) 
      throws java.lang.IllegalArgumentException {
 end of NPCTE fix for bugId 4464388"
      end

      operation 8447131 "removeNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the timer notification corresponding to the specified identifier from the list of notifications.

@param id The timer notification identifier.

@exception InstanceNotFoundException The specified identifier does not correspond to any timer notification
in the list of notifications of this timer MBean."
      end

      operation 8447259 "removeNotifications"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "String"
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications corresponding to the specified type from the list of notifications.

@param type The timer notification type.

@exception InstanceNotFoundException The specified type does not correspond to any timer notification
in the list of notifications of this timer MBean."
      end

      operation 8447387 "removeAllNotifications"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications from the list of notifications
and resets the counter used to update the timer notification identifiers."
      end

      operation 8447515 "getNbNotifications"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the number of timer notifications registered into the list of notifications.

@return The number of timer notifications."
      end

      operation 8447643 "getAllNotificationIDs"
	public return_type class_ref 153883 // Vector
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all timer notification identifiers registered into the list of notifications.

@return A vector of <CODE>Integer</CODE> objects containing all the timer notification identifiers.
<BR>The vector is empty if there is no timer notification registered for this timer MBean."
      end

      operation 8447771 "getNotificationIDs"
	public return_type class_ref 153883 // Vector
	nparams 1
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the identifiers of timer notifications corresponding to the specified type.

@param type The timer notification type.

@return A vector of <CODE>Integer</CODE> objects containing all the identifiers of 
timer notifications with the specified <CODE>type</CODE>.
<BR>The vector is empty if there is no timer notifications registered for this timer MBean 
with the specified <CODE>type</CODE>."
      end

      operation 8447899 "getNotificationType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification type corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification type or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8448027 "getNotificationMessage"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification detailed message corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification detailed message or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8448155 "getNotificationUserData"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification user data object corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification user data object or null if the identifier is not mapped to any 
timer notification registered for this timer MBean.

 NPCTE fix for bugId 4464388, esc 0, MR, 03 sept 2001, to be added after modification of jmx spec
public Serializable getNotificationUserData(Integer id) {
 end of NPCTE fix for bugId 4464388"
      end

      operation 8448283 "getDate"
	public return_type class_ref 139163 // Date
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the date associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the date or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8448411 "getPeriod"
	public return_type class_ref 277915 // Long
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the period (in milliseconds) associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the period or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8448539 "getNbOccurences"
	public return_type class_ref 277915 // Long
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the remaining number of occurrences associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the remaining number of occurrences or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8448667 "getFixedRate"
	public return_type class_ref 392091 // Boolean
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the flag indicating whether a periodic notification is
executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.

@param id The timer notification identifier.

@return A copy of the flag indicating whether a periodic notification is
        executed at <i>fixed-delay</i> or at <i>fixed-rate</i>."
      end

      operation 8448795 "getSendPastNotifications"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the flag indicating whether or not the timer sends past notifications.
<BR>The default value of the past notifications sending on/off flag is <CODE>false</CODE>.

@return The past notifications sending on/off flag value.

@see #setSendPastNotifications"
      end

      operation 8448923 "setSendPastNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether the timer sends past notifications or not.
<BR>The default value of the past notifications sending on/off flag is <CODE>false</CODE>.

@param value The past notifications sending on/off flag value.

@see #getSendPastNotifications"
      end

      operation 8449051 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the timer MBean is active.
A timer MBean is marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is called.
<BR>The default value of the active on/off flag is <CODE>false</CODE>.

@return <CODE>true</CODE> if the timer MBean is active, <CODE>false</CODE> otherwise."
      end

      operation 8449179 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the list of timer notifications is empty.

@return <CODE>true</CODE> if the list of timer notifications is empty, <CODE>false</CODE> otherwise."
      end

      operation 8449307 "sendPastNotifications"
	private explicit_return_type "void"
	nparams 2
	  param inout name "currentDate" type class_ref 139163 // Date
	  param inout name "currentFlag" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------


Sends or not past notifications depending on the specified flag.

@param currentDate The current date.
@param currentFlag The flag indicating if past notifications must be sent or not."
      end

      operation 8449435 "updateTimerTable"
	private explicit_return_type "void"
	nparams 1
	  param inout name "notifID" type class_ref 170395 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the timer notification is not periodic, it is removed from the list of notifications.
<P>
If the timer period of the timer notification has a non null periodicity,
the date of the timer notification is updated by adding the periodicity.
The associated TimerAlarmClock is updated by setting its timeout to the period value.
<P>
If the timer period has a defined number of occurrences, the timer 
notification is updated if the number of occurrences has not yet been reached.
Otherwise it is removed from the list of notifications.

@param notifID The timer notification identifier to update."
      end

      operation 8449563 "notifyAlarmClock"
	package explicit_return_type "void"
	nparams 1
	  param inout name "notification" type class_ref 1047579 // TimerAlarmClockNotification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


This method is called by the timer each time 
the TimerAlarmClock has exceeded its timeout.

@param notification The TimerAlarmClock notification."
      end

      operation 8449691 "sendNotification"
	package explicit_return_type "void"
	nparams 2
	  param inout name "timeStamp" type class_ref 139163 // Date
	  param inout name "notification" type class_ref 1047707 // TimerNotification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is used by the timer MBean to update and send a timer
notification to all the listeners registered for this kind of notification.

@param timeStamp The notification emission date.
@param notification The timer notification to send."
      end
    end

    class 1047451 "TimerMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the management interface of the timer MBean.

@version     4.25     02/10/04
@author      Sun Microsystems, Inc

@since 1.5"
      operation 8441883 "start"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the timer.
<P>
If there is one or more timer notifications before the time in the list of notifications, the notification
is sent according to the <CODE>sendPastNotifications</CODE> flag and then, updated
according to its period and remaining number of occurrences.
If the timer notification date remains earlier than the current date, this notification is just removed 
from the list of notifications."
      end

      operation 8442011 "stop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the timer."
      end

      operation 8442139 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 7
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	  param inout name "fixedRate" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date, 
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter. 
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, the value of parameter <i>fixedRate</i> is used to
specify the execution scheme, as specified in {@link java.util.Timer}.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.
@param fixedRate If <code>true</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-rate</i> execution scheme. If
                 <code>false</code> and if the notification is periodic, the notification
                 is scheduled with a <i>fixed-delay</i> execution scheme. Ignored if the
                 notification is not periodic.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period or the number of occurrences is negative

@see #addNotification(String, String, Object, Date, long, long)

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                                Date date, long period, long nbOccurences) 
 end of NPCTE fix for bugId 4464388"
      end

      operation 8442267 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 6
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	  param in name "nbOccurences" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date, 
period and number of occurrences.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. <BR>
For once-off notifications, the notification is delivered immediately. <BR>
For periodic notifications, the first notification is delivered immediately and the
subsequent ones are spaced as specified by the period parameter. 
<P>
Note that once the timer notification has been added into the list of notifications,
its associated date, period and number of occurrences cannot be updated.
<P>
In the case of a periodic notification, uses a <i>fixed-delay</i> execution scheme, as specified in
{@link java.util.Timer}. In order to use a <i>fixed-rate</i> execution scheme, use 
{@link #addNotification(String, String, Object, Date, long, long, boolean)} instead.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).
@param nbOccurences The total number the timer notification will be emitted.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period or the number of occurrences is negative

@see #addNotification(String, String, Object, Date, long, long, boolean)

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec 
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                              Date date, long period) 
 end of NPCTE fix for bugId 4464388 */ "
      end

      operation 8442395 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 5
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	  param in name "period" explicit_type "long"
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and period and a null number of occurrences.
<P>
The timer notification will repeat continuously using the timer period using a <i>fixed-delay</i>
execution scheme, as specified in {@link java.util.Timer}. In order to use a <i>fixed-rate</i>
execution scheme, use {@link #addNotification(String, String, Object, Date, long, long,
boolean)} instead. 
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date. The
first notification is delivered immediately and the subsequent ones are
spaced as specified by the period parameter.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.
@param period The period of the timer notification (in milliseconds).

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The period is negative or
the date notification is before the current date.

 NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec 
  public synchronized Integer addNotification(String type, String message, Serializable userData, 
                                              Date date, long period) 
 end of NPCTE fix for bugId 4464388 */ "
      end

      operation 8442523 "addNotification"
	public return_type class_ref 170395 // Integer
	nparams 4
	  param in name "type" explicit_type "String"
	  param in name "message" explicit_type "String"
	  param inout name "userData" explicit_type "Object"
	  param inout name "date" type class_ref 139163 // Date
	nexceptions 1
	  exception class_ref 216859 // IllegalArgumentException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new timer notification with the specified <CODE>type</CODE>, <CODE>message</CODE> 
and <CODE>userData</CODE> and inserts it into the list of notifications with a given date
and a null period and number of occurrences.
<P>
The timer notification will be handled once at the specified date.
<P>
If the timer notification to be inserted has a date that is before the current date,
the method behaves as if the specified date were the current date and the
notification is delivered immediately.

@param type The timer notification type.
@param message The timer notification detailed message.
@param userData The timer notification user data object.
@param date The date when the notification occurs.

@return The identifier of the new created timer notification.

@exception java.lang.IllegalArgumentException The date notification is before the current date.

 NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec
  public synchronized Integer addNotification(String type, String message, Serializable userData, Date date) 
      throws java.lang.IllegalArgumentException {
 end of NPCTE fix for bugId 4464388"
      end

      operation 8442651 "removeNotification"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the timer notification corresponding to the specified identifier from the list of notifications.

@param id The timer notification identifier.

@exception InstanceNotFoundException The specified identifier does not correspond to any timer notification
in the list of notifications of this timer MBean."
      end

      operation 8442779 "removeNotifications"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "String"
	nexceptions 1
	  exception class_ref 511643 // InstanceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications corresponding to the specified type from the list of notifications.

@param type The timer notification type.

@exception InstanceNotFoundException The specified type does not correspond to any timer notification
in the list of notifications of this timer MBean."
      end

      operation 8442907 "removeAllNotifications"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the timer notifications from the list of notifications
and resets the counter used to update the timer notification identifiers."
      end

      operation 8443035 "getNbNotifications"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------    

Gets the number of timer notifications registered into the list of notifications.

@return The number of timer notifications."
      end

      operation 8443163 "getAllNotificationIDs"
	public return_type class_ref 153883 // Vector
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all timer notification identifiers registered into the list of notifications.

@return A vector of <CODE>Integer</CODE> objects containing all the timer notification identifiers.
<BR>The vector is empty if there is no timer notification registered for this timer MBean."
      end

      operation 8443291 "getNotificationIDs"
	public return_type class_ref 153883 // Vector
	nparams 1
	  param in name "type" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the identifiers of timer notifications corresponding to the specified type.

@param type The timer notification type.

@return A vector of <CODE>Integer</CODE> objects containing all the identifiers of 
timer notifications with the specified <CODE>type</CODE>.
<BR>The vector is empty if there is no timer notifications registered for this timer MBean 
with the specified <CODE>type</CODE>."
      end

      operation 8443419 "getNotificationType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification type corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification type or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8443547 "getNotificationMessage"
	public explicit_return_type "String"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification detailed message corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification detailed message or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8443675 "getNotificationUserData"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the timer notification user data object corresponding to the specified identifier.

@param id The timer notification identifier.

@return The timer notification user data object or null if the identifier is not mapped to any 
timer notification registered for this timer MBean.

 NPCTE fix for bugId 4464388, esc 0 , MR , 03 sept 2001 , to be added after modification of jmx spec
public Serializable getNotificationUserData(Integer id);
 end of NPCTE fix for bugId 4464388"
      end

      operation 8443803 "getDate"
	public return_type class_ref 139163 // Date
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the date associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the date or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8443931 "getPeriod"
	public return_type class_ref 277915 // Long
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the period (in milliseconds) associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the period or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8444059 "getNbOccurences"
	public return_type class_ref 277915 // Long
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the remaining number of occurrences associated to a timer notification.

@param id The timer notification identifier.

@return A copy of the remaining number of occurrences or null if the identifier is not mapped to any 
timer notification registered for this timer MBean."
      end

      operation 8444187 "getFixedRate"
	public return_type class_ref 392091 // Boolean
	nparams 1
	  param inout name "id" type class_ref 170395 // Integer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a copy of the flag indicating whether a periodic notification is
executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.

@param id The timer notification identifier.

@return A copy of the flag indicating whether a periodic notification is
        executed at <i>fixed-delay</i> or at <i>fixed-rate</i>."
      end

      operation 8444315 "getSendPastNotifications"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the flag indicating whether or not the timer sends past notifications.

@return The past notifications sending on/off flag value.

@see #setSendPastNotifications"
      end

      operation 8444443 "setSendPastNotifications"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating whether the timer sends past notifications or not.

@param value The past notifications sending on/off flag value.

@see #getSendPastNotifications"
      end

      operation 8444571 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the timer MBean is active.
A timer MBean is marked active when the {@link #start start} method is called.
It becomes inactive when the {@link #stop stop} method is called.

@return <CODE>true</CODE> if the timer MBean is active, <CODE>false</CODE> otherwise."
      end

      operation 8444699 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the list of timer notifications is empty.

@return <CODE>true</CODE> if the list of timer notifications is empty, <CODE>false</CODE> otherwise."
      end
    end

    class 1047579 "TimerAlarmClockNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Definitions of the notifications sent by TimerAlarmClock
MBeans.</p>

@deprecated This class is of no use to user code.  It is retained
purely for compatibility reasons.

@since 1.5
@since.unbundled JMX 1.1"
      classrelation 2094619 // <generalisation>
	relation 2094619 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2094619 // <generalisation>
	  b parent class_ref 513819 // Notification
      end

      attribute 3076635 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4841061275673620641L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      operation 8450203 "TimerAlarmClockNotification"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 1047835 // TimerAlarmClock
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Constructor.

@param source the source."
      end
    end

    class 1047707 "TimerNotification"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides definitions of the notifications sent by timer MBeans.
<BR>It defines a timer notification identifier which allows to retrieve a timer notification
from the list of notifications of a timer MBean.
<P>
The timer notifications are created and handled by the timer MBean.

@version     1.26     02/10/04
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2094747 // <generalisation>
	relation 2094747 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2094747 // <generalisation>
	  b parent class_ref 513819 // Notification
      end

      attribute 3076763 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  1798492029603825750L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Serial version "
      end

      classrelation 2094875 // notificationID (<unidirectional association>)
	relation 2094875 --->
	  a role_name "notificationID" private
	    comment "
------------------------------------------
 PRIVATE VARIABLES
------------------------------------------


@serial Timer notification identifier.
        This identifier is used to retrieve a timer notification from the timer list of notifications.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2094875 // notificationID (<unidirectional association>)
	  b parent class_ref 170395 // Integer
      end

      operation 8450331 "TimerNotification"
	public explicit_return_type ""
	nparams 6
	  param in name "type" explicit_type "String"
	  param inout name "source" explicit_type "Object"
	  param in name "sequenceNumber" explicit_type "long"
	  param in name "timeStamp" explicit_type "long"
	  param in name "msg" explicit_type "String"
	  param inout name "id" type class_ref 170395 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


Creates a timer notification object.

@param type The notification type.
@param source The notification producer.
@param sequenceNumber The notification sequence number within the source object.
@param timeStamp The notification emission date.
@param msg The notification message.
@param id The notification identifier.

@since.unbundled JMX 1.2"
      end

      operation 8450459 "getNotificationID"
	public return_type class_ref 170395 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------

 GETTERS AND SETTERS
--------------------    

Gets the identifier of this timer notification.

@return The identifier."
      end

      operation 8450587 "cloneTimerNotification"
	package explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


Creates and returns a copy of this object.
"
      end
    end

    class 1047835 "TimerAlarmClock"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "TimerAlarmClock inner class:
This class provides a simple implementation of an alarm clock MBean.
The aim of this MBean is to set up an alarm which wakes up the timer every timeout (fixed-delay)
or at the specified date (fixed-rate)."
      classrelation 2094235 // <generalisation>
	relation 2094235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2094235 // <generalisation>
	  b parent class_ref 157211 // TimerTask
      end

      classrelation 2094363 // listener (<unidirectional association>)
	relation 2094363 --->
	  a role_name "listener" init_value "=  null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2094363 // listener (<unidirectional association>)
	  b parent class_ref 1047323 // Timer
      end

      attribute 3076507 "timeout"
	package explicit_type "long"
	init_value "=  10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2094491 // next (<unidirectional association>)
	relation 2094491 --->
	  a role_name "next" init_value "=  null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2094491 // next (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      operation 8449819 "TimerAlarmClock"
	public explicit_return_type ""
	nparams 2
	  param inout name "listener" type class_ref 1047323 // Timer
	  param in name "timeout" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------"
      end

      operation 8449947 "TimerAlarmClock"
	public explicit_return_type ""
	nparams 2
	  param inout name "listener" type class_ref 1047323 // Timer
	  param inout name "next" type class_ref 139163 // Date
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8450075 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


This method is called by the timer when it is started."
      end
    end
  end

  deploymentview 170651 "timer"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 799515 "TimerMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Enumeration;
import java.util.Vector;
import javax.management.InstanceNotFoundException;
${definition}"
      associated_classes
	class_ref 1047451 // TimerMBean
      end
      comment "@(#)TimerMBean.java	4.25 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799643 "Timer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Date;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import javax.management.MBeanNotificationInfo;
import javax.management.MBeanRegistration;
import javax.management.MBeanServer;
import javax.management.NotificationBroadcasterSupport;
import javax.management.ObjectName;
import javax.management.InstanceNotFoundException;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1047323 // Timer
	class_ref 1047835 // TimerAlarmClock
      end
      comment "@(#)Timer.java	4.58 04/04/13

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799771 "TimerAlarmClockNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1047579 // TimerAlarmClockNotification
      end
      comment "@(#)TimerAlarmClockNotification.java	1.19 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 799899 "TimerNotification"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1047707 // TimerNotification
      end
      comment "@(#)TimerNotification.java	1.26 04/02/10

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
