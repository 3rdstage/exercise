class LeafElement
!!!2561307.java!!!	LeafElement(inout parent : Element, inout a : AttributeSet, in offs0 : int, in offs1 : int)
	    super(parent, a);
	    try {
		p0 = createPosition(offs0);
		p1 = createPosition(offs1);
	    } catch (BadLocationException e) {
		p0 = null;
		p1 = null;
		throw new StateInvariantError("Can't create Position references");
	    }
!!!2561435.java!!!	toString() : String
	    return "LeafElement(" + getName() + ") " + p0 + "," + p1 + "\n";
!!!2561563.java!!!	getStartOffset() : int
	    return p0.getOffset();
!!!2561691.java!!!	getEndOffset() : int
	    return p1.getOffset();
!!!2561819.java!!!	getName() : String
	    String nm = super.getName();
	    if (nm == null) {
		nm = ContentElementName;
	    }
	    return nm;
!!!2561947.java!!!	getElementIndex(in pos : int) : int
	    return -1;
!!!2562075.java!!!	getElement(in index : int) : Element
	    return null;
!!!2562203.java!!!	getElementCount() : int
	    return 0;
!!!2562331.java!!!	isLeaf() : boolean
	    return true;
!!!2562459.java!!!	getAllowsChildren() : boolean
	    return false;
!!!2562587.java!!!	children() : Enumeration
	    return null;
!!!2562715.java!!!	writeObject(inout s : ObjectOutputStream) : void
	    s.defaultWriteObject();
	    s.writeInt(p0.getOffset());
	    s.writeInt(p1.getOffset());
!!!2562843.java!!!	readObject(inout s : ObjectInputStream) : void
	    s.defaultReadObject();

	    // set the range with positions that track change
	    int off0 = s.readInt();
	    int off1 = s.readInt();
	    try {
		p0 = createPosition(off0);
		p1 = createPosition(off1);
	    } catch (BadLocationException e) {
		p0 = null;
		p1 = null;
		throw new IOException("Can't restore Position references");
	    }
