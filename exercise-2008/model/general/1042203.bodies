class RoleList
!!!8393371.java!!!	RoleList()
	super();
	return;
!!!8393499.java!!!	RoleList(in theInitialCapacity : int)
	super(theInitialCapacity);
	return;
!!!8393627.java!!!	RoleList(inout theList : List)

	if (theList == null) {
	    String excMsg = "Invalid parameter";
	    throw new IllegalArgumentException(excMsg);
	}

	int i = 0;
	for (Iterator eltIter = theList.iterator();
	     eltIter.hasNext();) {
	    Object currElt = eltIter.next();
	    if (!(currElt instanceof Role)) {
		StringBuffer excMsgStrB = new StringBuffer();
		String excMsg = "An element is not a Role at index ";
		excMsgStrB.append(excMsg);
		excMsgStrB.append(i);
		throw new IllegalArgumentException(excMsgStrB.toString());
	    }
	    i++;
	    super.add(currElt);
	}
	return;
!!!8393755.java!!!	add(inout theRole : Role) : void

	if (theRole == null) {
	    String excMsg = "Invalid parameter";
	    throw new IllegalArgumentException(excMsg);
	}
	super.add(theRole);
	return;
!!!8393883.java!!!	add(in theIndex : int, inout theRole : Role) : void

	if (theRole == null) {
	    String excMsg = "Invalid parameter";
	    throw new IllegalArgumentException(excMsg);
	}

	super.add(theIndex, theRole);
	return;
!!!8394011.java!!!	set(in theIndex : int, inout theRole : Role) : void

	if (theRole == null) {
	    // Revisit [cebro] Localize message
	    String excMsg = "Invalid parameter.";
	    throw new IllegalArgumentException(excMsg);
	}

	super.set(theIndex, theRole);
	return;
!!!8394139.java!!!	addAll(inout theRoleList : RoleList) : boolean

	if (theRoleList == null) {
	    return true;
	}

	return (super.addAll(theRoleList));
!!!8394267.java!!!	addAll(in theIndex : int, inout theRoleList : RoleList) : boolean

	if (theRoleList == null) {
	    // Revisit [cebro] Localize message
	    String excMsg = "Invalid parameter.";
	    throw new IllegalArgumentException(excMsg);
	}

	return (super.addAll(theIndex, theRoleList));
