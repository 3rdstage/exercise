class EditableView
!!!9921563.java!!!	EditableView(inout e : Element)
	super(e);
!!!9921691.java!!!	getMinimumSpan(in axis : int) : float
	if (isVisible) {
	    return super.getMinimumSpan(axis);
	}
	return 0;
!!!9921819.java!!!	getPreferredSpan(in axis : int) : float
	if (isVisible) {
	    return super.getPreferredSpan(axis);
	}
	return 0;
!!!9921947.java!!!	getMaximumSpan(in axis : int) : float
	if (isVisible) {
	    return super.getMaximumSpan(axis);
	}
	return 0;
!!!9922075.java!!!	paint(inout g : Graphics, inout allocation : Shape) : void
	Component c = getComponent();
	Container host = getContainer();
	
	if (host != null &&
	    isVisible != ((JTextComponent)host).isEditable()) {
	    isVisible = ((JTextComponent)host).isEditable();
	    preferenceChanged(null, true, true);
	    host.repaint();
	}
	/*
	 * Note: we cannot tweak the visible state of the
	 * component in createComponent() even though it
	 * gets called after the setParent() call where
	 * the value of the boolean is set.  This 
	 * because, the setComponentParent() in the 
	 * superclass, always does a setVisible(false)
	 * after calling createComponent().   We therefore
	 * use this flag in the paint() method to 
	 * setVisible() to true if required.
	 */
	if (isVisible) {
	    super.paint(g, allocation);
	}
	else {
	    setSize(0, 0);
	}
	if (c != null) {
	    c.setFocusable(isVisible);
	}
!!!9922203.java!!!	setParent(inout parent : View) : void
	if (parent != null) {
	    Container host = parent.getContainer();
	    if (host != null) {
		isVisible = ((JTextComponent)host).isEditable();
	    }
	}
	super.setParent(parent);
!!!9922331.java!!!	isVisible() : boolean
	return isVisible;
