class EntrySet
!!!7904411.java!!!	iterator() : Iterator
            return new EntryIterator();
!!!7904539.java!!!	contains(inout o : Object) : boolean
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry<K,V> e = (Map.Entry<K,V>)o;
            V v = ConcurrentHashMap.this.get(e.getKey());
            return v != null && v.equals(e.getValue());
!!!7904667.java!!!	remove(inout o : Object) : boolean
            if (!(o instanceof Map.Entry))
                return false;
            Map.Entry<K,V> e = (Map.Entry<K,V>)o;
            return ConcurrentHashMap.this.remove(e.getKey(), e.getValue());
!!!7904795.java!!!	size() : int
            return ConcurrentHashMap.this.size();
!!!7904923.java!!!	clear() : void
            ConcurrentHashMap.this.clear();
!!!7905051.java!!!	toArray() : Object
            // Since we don't ordinarily have distinct Entry objects, we
            // must pack elements using exportable SimpleEntry
            Collection<Map.Entry<K,V>> c = new ArrayList<Map.Entry<K,V>>(size());
            for (Iterator<Map.Entry<K,V>> i = iterator(); i.hasNext(); )
                c.add(new SimpleEntry<K,V>(i.next()));
            return c.toArray();
!!!7905179.java!!!	toArray(inout a : T) : T
            Collection<Map.Entry<K,V>> c = new ArrayList<Map.Entry<K,V>>(size());
            for (Iterator<Map.Entry<K,V>> i = iterator(); i.hasNext(); )
                c.add(new SimpleEntry<K,V>(i.next()));
            return c.toArray(a);
