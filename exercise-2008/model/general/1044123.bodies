class RoleUnresolved
!!!8395675.java!!!	RoleUnresolved(in theRoleName : String, inout theRoleValue : List, in thePbType : int)

	if (theRoleName == null) {
	    // Revisit [cebro] Localize message
	    String excMsg = "Invalid parameter.";
	    throw new IllegalArgumentException(excMsg);
	}

	setRoleName(theRoleName);
	setRoleValue(theRoleValue);
	// Can throw IllegalArgumentException
	setProblemType(thePbType);
	return;
!!!8395803.java!!!	getRoleName() : String
	return roleName;
!!!8395931.java!!!	getRoleValue() : List
	return roleValue;
!!!8396059.java!!!	getProblemType() : int
	return problemType;
!!!8396187.java!!!	setRoleName(in theRoleName : String) : void

	if (theRoleName == null) {
	    // Revisit [cebro] Localize message
	    String excMsg = "Invalid parameter.";
	    throw new IllegalArgumentException(excMsg);
	}

	roleName = theRoleName;
	return;
!!!8396315.java!!!	setRoleValue(inout theRoleValue : List) : void

	if (theRoleValue != null) {
	    roleValue = new ArrayList(theRoleValue);
	} else {
	    roleValue = null;
	}
	return;
!!!8396443.java!!!	setProblemType(in thePbType : int) : void

	if (!(RoleStatus.isRoleStatus(thePbType))) {
	    // Revisit [cebro] Localize message
	    String excMsg = "Incorrect problem type.";
	    throw new IllegalArgumentException(excMsg);
	}
	problemType = thePbType;
	return;
!!!8396571.java!!!	clone() : Object
	try {
	    return new RoleUnresolved(roleName, roleValue, problemType);
	} catch (IllegalArgumentException exc) {
	    return null; // :)
	}
!!!8396699.java!!!	toString() : String
	StringBuffer result = new StringBuffer();
	result.append("role name: " + roleName);
	if (roleValue != null) {
	    result.append("; value: ");
	    for (Iterator objNameIter = roleValue.iterator();
		 objNameIter.hasNext();) {
		ObjectName currObjName = (ObjectName)(objNameIter.next());
		result.append(currObjName.toString());
		if (objNameIter.hasNext()) {
		    result.append(", ");
		}
	    }
	}
	result.append("; problem type: " + problemType);
	return result.toString();
!!!8396827.java!!!	readObject(inout in : ObjectInputStream) : void
      if (compat)
      {
        // Read an object serialized in the old serial form
        //
        ObjectInputStream.GetField fields = in.readFields();
	roleName = (String) fields.get("myRoleName", null);
	if (fields.defaulted("myRoleName"))
        {
          throw new NullPointerException("myRoleName");
        }
	roleValue = (List) fields.get("myRoleValue", null);
	if (fields.defaulted("myRoleValue"))
        {
          throw new NullPointerException("myRoleValue");
        }
	problemType = fields.get("myPbType", (int)0);
	if (fields.defaulted("myPbType"))
        {
          throw new NullPointerException("myPbType");
        }
      }
      else
      {
        // Read an object serialized in the new serial form
        //
        in.defaultReadObject();
      }
!!!8396955.java!!!	writeObject(inout out : ObjectOutputStream) : void
      if (compat)
      {
        // Serializes this instance in the old serial form
        //
        ObjectOutputStream.PutField fields = out.putFields();
	fields.put("myRoleName", roleName);
	fields.put("myRoleValue", (ArrayList)roleValue);
	fields.put("myPbType", problemType);
	out.writeFields();
      }
      else
      {
        // Serializes this instance in the new serial form
        //
        out.defaultWriteObject();
      }
