format 66
"kerberos" // src::javax::security::auth::kerberos
  revision 1
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/security/auth/kerberos"
  java_package "javax.security.auth.kerberos"
  classview 173083 "kerberos"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 845979 "KerberosPrincipal"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates a Kerberos principal.

@author Mayank Upadhyay
@version 1.18, 02/03/04
@since 1.4"
      classrelation 2212123 // <realization>
	relation 2212123 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2212123 // <realization>
	  b parent class_ref 527131 // Principal
      end

      classrelation 2212251 // <realization>
	relation 2212251 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2212251 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3133339 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7374788026156829911L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3133467 "KRB_NT_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value "=    0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "name types

unknown name type.
"
      end

      attribute 3133595 "KRB_NT_PRINCIPAL"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "user principal name type.
"
      end

      attribute 3133723 "KRB_NT_SRV_INST"
	class_attribute const_attribute public explicit_type "int"
	init_value "=   2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "service and other unique instance (krbtgt) name type.
"
      end

      attribute 3133851 "KRB_NT_SRV_HST"
	class_attribute const_attribute public explicit_type "int"
	init_value "=    3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "service with host name as instance (telnet, rcommands) name type.
"
      end

      attribute 3133979 "KRB_NT_SRV_XHST"
	class_attribute const_attribute public explicit_type "int"
	init_value "=   4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "service with host as remaining components name type.
"
      end

      attribute 3134107 "KRB_NT_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "unique ID name type.
"
      end

      attribute 3134235 "fullName"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3134363 "realm"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3134491 "nameType"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3134619 "NAME_REALM_SEPARATOR"
	class_attribute const_attribute private explicit_type "char"
	init_value "=  '@'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8665371 "KerberosPrincipal"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosPrincipal from the provided string input. The 
name type for this  principal defaults to 
{@link #KRB_NT_PRINCIPAL KRB_NT_PRINCIPAL}
This string is assumed to contain a name in the format
that is specified in Section 2.1.1. (Kerberos Principal Name Form) of 
<a href=http://www.ietf.org/rfc/rfc1964.txt> RFC 1964 </a>
(for example, <i>duke@FOO.COM</i>, where <i>duke</i>
represents a principal, and <i>FOO.COM</i> represents a realm).

<p>If the input name does not contain a realm, the default realm
is used. The default realm can be specified either in a Kerberos 
configuration file or via the java.security.krb5.realm
system property. For more information, 
<a href=\"../../../../../guide/security/jgss/tutorials/index.html\">
Kerberos Requirements </a>

@param name the principal name
@throws IllegalArgumentException if name is improperly
formatted, if name is null, or if name does not contain 
the realm to use and the default realm is not specified
in either a Kerberos configuration file or via the 
java.security.krb5.realm system property.


TBD:  Research what encoding would be most appropriate to use
      when converting the String to bytes. And document that."
      end

      operation 8665499 "KerberosPrincipal"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "nameType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosPrincipal from the provided string and
name type input.  The string is assumed to contain a name in the
format that is specified in Section 2.1 (Mandatory Name Forms) of
<a href=http://www.ietf.org/rfc/rfc1964.txt>RFC 1964</a>.
Valid name types are specified in Section 7.2 (Principal Names) of
<a href=http://www.ietf.org/rfc/rfc1510.txt>RFC 1510</a>.
The input name must be consistent with the provided name type.
(for example, <i>duke@FOO.COM</i>, is a valid input string for the
name type, KRB_NT_PRINCIPAL where <i>duke</i>
represents a principal, and <i>FOO.COM</i> represents a realm).

<p> If the input name does not contain a realm, the default realm
is used. The default realm can be specified either in a Kerberos
configuration file or via the java.security.krb5.realm
system property. For more information, see
<a href=\"../../../../../guide/security/jgss/tutorials/index.html\">
Kerberos Requirements</a>.

@param name the principal name
@param nameType the name type of the principal 
@throws IllegalArgumentException if name is improperly
formatted, if name is null, if the nameType is not supported,  
or if name does not contain the realm to use and the default 
realm is not specified in either a Kerberos configuration 
file or via the java.security.krb5.realm system property."
      end

      operation 8665627 "getRealm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the realm component of this Kerberos principal.

@return the realm component of this Kerberos principal."
      end

      operation 8665755 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this principal. The hash code is defined to 
be the result of the following  calculation:
<pre><code>
 hashCode = getName().hashCode();
</code></pre>

@return a hashCode() for the <code>KerberosPrincipal</code>"
      end

      operation 8665883 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this Principal for equality.
Returns true if the given object is also a 
<code>KerberosPrincipal</code> and the two
<code>KerberosPrincipal</code> instances are equivalent. 
More formally two <code>KerberosPrincipal</code> instances are equal 
if the values returned by <code>getName()</code> are equal and the 
values returned by <code>getNameType()</code> are equal.

@param other the Object to compare to
@return true if the Object passed in represents the same principal
as this one, false otherwise."
      end

      operation 8666011 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the KerberosPrincipal object to a stream

@serialData this <code>KerberosPrincipal</code> is serialized
		by writing out the PrincipalName and the
		realm in their DER-encoded form as specified in Section 5.2 of
		<a href=http://www.ietf.org/rfc/rfc1510.txt> RFC1510</a>. "
      end

      operation 8666139 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)"
      end

      operation 8666267 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The returned string corresponds to the single-string
representation of a Kerberos Principal name as specified in
Section 2.1 of <a href=http://www.ietf.org/rfc/rfc1964.txt>RFC 1964</a>.

@return the principal name."
      end

      operation 8666395 "getNameType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name type of the KerberosPrincipal. Valid name types
are specified in Section 7.2 of
<a href=http://www.ietf.org/rfc/rfc1510.txt> RFC1510</a>. 

@return the name type.
"
      end

      operation 8666523 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inherits javadocs from Object"
      end
    end

    class 846107 "KerberosTicket"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates a Kerberos ticket and associated
information as viewed from the client's point of view. It captures all
information that the Key Distribution Center (KDC) sends to the client
in the reply message KDC-REP defined in the Kerberos Protocol
Specification (<a href=http://www.ietf.org/rfc/rfc1510.txt>RFC 1510</a>).
<p>
All Kerberos JAAS login modules that authenticate a user to a KDC should
use this class. Where available, the login module might even read this 
information from a ticket cache in the operating system instead of
directly communicating with the KDC. During the commit phase of the JAAS
authentication process, the JAAS login module should instantiate this
class and store the instance in the private credential set of a
{@link javax.security.auth.Subject Subject}.<p>

It might be necessary for the application to be granted a
{@link javax.security.auth.PrivateCredentialPermission 
PrivateCredentialPermission} if it needs to access a KerberosTicket
instance from a Subject. This permission is not needed when the
application depends on the default JGSS Kerberos mechanism to access the
KerberosTicket. In that case, however, the application will need an
appropriate
{@link javax.security.auth.kerberos.ServicePermission ServicePermission}.
<p>
Note that this class is applicable to both ticket granting tickets and
other regular service tickets. A ticket granting ticket is just a
special case of a more generalized service ticket.

@see javax.security.auth.Subject
@see javax.security.auth.PrivateCredentialPermission
@see javax.security.auth.login.LoginContext
@see org.ietf.jgss.GSSCredential
@see org.ietf.jgss.GSSManager

@author Mayank Upadhyay
@version 1.17, 06/01/06
@since 1.4"
      classrelation 2212379 // <realization>
	relation 2212379 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2212379 // <realization>
	  b parent class_ref 965531 // Destroyable
      end

      classrelation 2212507 // <realization>
	relation 2212507 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2212507 // <realization>
	  b parent class_ref 1081883 // Refreshable
      end

      classrelation 2212635 // <realization>
	relation 2212635 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2212635 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3134747 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  7395334370157380539L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3134875 "FORWARDABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TBD: Make these flag indices public"
      end

      attribute 3135003 "FORWARDED_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135131 "PROXIABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135259 "PROXY_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135387 "POSTDATED_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135515 "RENEWABLE_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135643 "INITIAL_TICKET_FLAG"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135771 "NUM_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3135899 "asn1Encoding"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
ASN.1 DER Encoding of the Ticket as defined in the 
Kerberos Protocol Specification RFC1510.

@serial
"
      end

      classrelation 2212763 // sessionKey (<unidirectional association>)
	relation 2212763 --->
	  a role_name "sessionKey" private
	    comment "
<code>KeyImpl</code> is serialized by writing out the ASN1 Encoded bytes 
of the encryption key. The ASN1 encoding is defined in RFC1510 and as
follows:
<pre>		
			EncryptionKey ::=   SEQUENCE {
				keytype[0]    INTEGER,
				keyvalue[1]   OCTET STRING    	
				}
</pre>

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2212763 // sessionKey (<unidirectional association>)
	  b parent class_ref 1083163 // KeyImpl
      end

      attribute 3136027 "flags"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
Ticket Flags as defined in the Kerberos Protocol Specification RFC1510.

@serial
"
      end

      classrelation 2212891 // authTime (<unidirectional association>)
	relation 2212891 --->
	  a role_name "authTime" private
	    comment "

Time of initial authentication 

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2212891 // authTime (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      classrelation 2213019 // startTime (<unidirectional association>)
	relation 2213019 --->
	  a role_name "startTime" private
	    comment "

Time after which the ticket is valid.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2213019 // startTime (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      classrelation 2213147 // endTime (<unidirectional association>)
	relation 2213147 --->
	  a role_name "endTime" private
	    comment "

Time after which the ticket will not be honored. (its expiration time).

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2213147 // endTime (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      classrelation 2213275 // renewTill (<unidirectional association>)
	relation 2213275 --->
	  a role_name "renewTill" private
	    comment "

For renewable Tickets it indicates the maximum endtime that may be 
included in a renewal. It can be thought of as the absolute expiration 
time for the ticket, including all renewals. This field may be null
for tickets that are not renewable.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2213275 // renewTill (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      classrelation 2213403 // client (<unidirectional association>)
	relation 2213403 --->
	  a role_name "client" private
	    comment "

Client that owns the service ticket

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2213403 // client (<unidirectional association>)
	  b parent class_ref 845979 // KerberosPrincipal
      end

      classrelation 2213531 // server (<unidirectional association>)
	relation 2213531 --->
	  a role_name "server" private
	    comment "

The service for which the ticket was issued.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2213531 // server (<unidirectional association>)
	  b parent class_ref 845979 // KerberosPrincipal
      end

      classrelation 2213659 // clientAddresses (<unidirectional association>)
	relation 2213659 --->
	  a role_name "clientAddresses" multiplicity "[]" private
	    comment "

The addresses from where the ticket may be used by the client. 
This field may be null when the ticket is usable from any address.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2213659 // clientAddresses (<unidirectional association>)
	  b parent class_ref 530715 // InetAddress
      end

      attribute 3136155 "destroyed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8666651 "KerberosTicket"
	public explicit_return_type ""
	nparams 11
	  param in name "asn1Encoding" explicit_type "byte"
	  param inout name "client" type class_ref 845979 // KerberosPrincipal
	  param inout name "server" type class_ref 845979 // KerberosPrincipal
	  param in name "sessionKey" explicit_type "byte"
	  param in name "keyType" explicit_type "int"
	  param inout name "flags" explicit_type "boolean"
	  param inout name "authTime" type class_ref 139163 // Date
	  param inout name "startTime" type class_ref 139163 // Date
	  param inout name "endTime" type class_ref 139163 // Date
	  param inout name "renewTill" type class_ref 139163 // Date
	  param inout name "clientAddresses" type class_ref 530715 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10}[] ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosTicket using credentials information that a
client either receives from a KDC or reads from a cache.

@param asn1Encoding the ASN.1 encoding of the ticket as defined by
the Kerberos protocol specification.
@param client the client that owns this service
ticket
@param server the service that this ticket is for
@param sessionKey the raw bytes for the session key that must be
used to encrypt the authenticator that will be sent to the server
@param keyType the key type for the session key as defined by the
Kerberos protocol specification.
@param flags the ticket flags. Each element in this array indicates
the value for the corresponding bit in the ASN.1 BitString that
represents the ticket flags. If the number of elements in this array 
is less than the number of flags used by the Kerberos protocol,
then the missing flags will be filled in with false.
@param authTime the time of initial authentication for the client
@param startTime the time after which the ticket will be valid. This 
may be null in which case the value of authTime is treated as the
startTime.
@param endTime the time after which the ticket will no longer be
valid
@param renewTill an absolute expiration time for the ticket,
including all renewal that might be possible. This field may be null 
for tickets that are not renewable.
@param clientAddresses the addresses from where the ticket may be
used by the client. This field may be null when the ticket is usable 
from any address."
      end

      operation 8666779 "init"
	private explicit_return_type "void"
	nparams 11
	  param in name "asn1Encoding" explicit_type "byte"
	  param inout name "client" type class_ref 845979 // KerberosPrincipal
	  param inout name "server" type class_ref 845979 // KerberosPrincipal
	  param in name "sessionKey" explicit_type "byte"
	  param in name "keyType" explicit_type "int"
	  param inout name "flags" explicit_type "boolean"
	  param inout name "authTime" type class_ref 139163 // Date
	  param inout name "startTime" type class_ref 139163 // Date
	  param inout name "endTime" type class_ref 139163 // Date
	  param inout name "renewTill" type class_ref 139163 // Date
	  param inout name "clientAddresses" type class_ref 530715 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10}[] ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8666907 "getClient"
	public return_type class_ref 845979 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the client principal associated with this ticket.

@return the client principal."
      end

      operation 8667035 "getServer"
	public return_type class_ref 845979 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service principal associated with this ticket.

@return the service principal."
      end

      operation 8667163 "getSessionKey"
	public explicit_return_type "SecretKey"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the session key associated with this ticket.

@return the session key."
      end

      operation 8667291 "getSessionKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key type of the session key associated with this
ticket as defined by the Kerberos Protocol Specification.

@return the key type of the session key associated with this
ticket.

@see #getSessionKey()"
      end

      operation 8667419 "isForwardable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket is forwardable.

@return true if this ticket is forwardable, false if not."
      end

      operation 8667547 "isForwarded"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket had been forwarded or was issued based on
authentication involving a forwarded ticket-granting ticket.

@return true if this ticket had been forwarded or was issued based on
authentication involving a forwarded ticket-granting ticket,
false otherwise."
      end

      operation 8667675 "isProxiable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket is proxiable.

@return true if this ticket is proxiable, false if not."
      end

      operation 8667803 "isProxy"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is a proxy-ticket.

@return true if this ticket is a proxy-ticket, false if not."
      end

      operation 8667931 "isPostdated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is post-dated.

@return true if this ticket is post-dated, false if not."
      end

      operation 8668059 "isRenewable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines is this ticket is renewable. If so, the {@link #refresh() 
refresh} method can be called, assuming the validity period for
renewing is not already over.

@return true if this ticket is renewable, false if not."
      end

      operation 8668187 "isInitial"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket was issued using the Kerberos AS-Exchange
protocol, and not issued based on some ticket-granting ticket.

@return true if this ticket was issued using the Kerberos AS-Exchange
protocol, false if not."
      end

      operation 8668315 "getFlags"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flags associated with this ticket. Each element in the
returned array indicates the value for the corresponding bit in the
ASN.1 BitString that represents the ticket flags.

@return the flags associated with this ticket."
      end

      operation 8668443 "getAuthTime"
	public return_type class_ref 139163 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time that the client was authenticated.

@return the time that the client was authenticated
        or null if not set."
      end

      operation 8668571 "getStartTime"
	public return_type class_ref 139163 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the start time for this ticket's validity period.

@return the start time for this ticket's validity period
        or null if not set."
      end

      operation 8668699 "getEndTime"
	public return_type class_ref 139163 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the expiration time for this ticket's validity period.

@return the expiration time for this ticket's validity period."
      end

      operation 8668827 "getRenewTill"
	public return_type class_ref 139163 // Date
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the latest expiration time for this ticket, including all
renewals. This will return a null value for non-renewable tickets.

@return the latest expiration time for this ticket."
      end

      operation 8668955 "getClientAddresses"
	public return_type class_ref 530715 // InetAddress
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of addresses from where the ticket can be used.

@return ths list of addresses or null, if the field was not
provided."
      end

      operation 8669083 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an ASN.1 encoding of the entire ticket.

@return an ASN.1 encoding of the entire ticket."
      end

      operation 8669211 "isCurrent"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determines if this ticket is still current.  "
      end

      operation 8669339 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1082011 // RefreshFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extends the validity period of this ticket. The ticket will contain
a new session key if the refresh operation succeeds. The refresh
operation will fail if the ticket is not renewable or the latest
allowable renew time has passed. Any other error returned by the
KDC will also cause this method to fail.

Note: This method is not synchronized with the the accessor
methods of this object. Hence callers need to be aware of multiple
threads that might access this and try to renew it at the same
time.

@throws RefreshFailedException if the ticket is not renewable, or
the latest allowable renew time has passed, or the KDC returns some
error.

@see #isRenewable()
@see #getRenewTill()"
      end

      operation 8669467 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 965659 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys the ticket and destroys any sensitive information stored in
it."
      end

      operation 8669595 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this ticket has been destroyed."
      end

      operation 8669723 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 846235 "KerberosKey"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates a long term secret key for a Kerberos
principal.<p>

All Kerberos JAAS login modules that obtain a principal's password and
generate the secret key from it should use this class. Where available,
the login module might even read this secret key directly from a
Kerberos \"keytab\". Sometimes, such as when authenticating a server in
the absence of user-to-user authentication, the login module will store 
an instance of this class in the private credential set of a
{@link javax.security.auth.Subject Subject} during the commit phase of the
authentication process.<p>

It might be necessary for the application to be granted a
{@link javax.security.auth.PrivateCredentialPermission 
PrivateCredentialPermission} if it needs to access the KerberosKey
instance from a Subject. This permission is not needed when the 
application depends on the default JGSS Kerberos mechanism to access the 
KerberosKey. In that case, however, the application will need an 
appropriate 
{@link javax.security.auth.kerberos.ServicePermission ServicePermission}.

@author Mayank Upadhyay
@version 1.17, 01/13/04
@since 1.4"
      classrelation 2211739 // <realization>
	relation 2211739 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2211739 // <realization>
	  b parent class_ref 965531 // Destroyable
      end

      attribute 3132955 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4625402278148246993L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2211867 // principal (<unidirectional association>)
	relation 2211867 --->
	  a role_name "principal" private
	    comment "
The principal that this secret key belongs to.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2211867 // principal (<unidirectional association>)
	  b parent class_ref 845979 // KerberosPrincipal
      end

      attribute 3133083 "versionNum"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the version number of this secret key

@serial
"
      end

      classrelation 2211995 // key (<unidirectional association>)
	relation 2211995 --->
	  a role_name "key" private
	    comment "
<code>KeyImpl</code> is serialized by writing out the ASN1 Encoded bytes 
			of the 	encryption key. The ASN1 encoding is defined in 
			RFC1510 and as  follows:
			<pre>
			EncryptionKey ::=   SEQUENCE {
				keytype[0]    INTEGER,
				keyvalue[1]   OCTET STRING    	
				}
			</pre>

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2211995 // key (<unidirectional association>)
	  b parent class_ref 1083163 // KeyImpl
      end

      attribute 3133211 "destroyed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8663963 "KerberosKey"
	public explicit_return_type ""
	nparams 4
	  param inout name "principal" type class_ref 845979 // KerberosPrincipal
	  param in name "keyBytes" explicit_type "byte"
	  param in name "keyType" explicit_type "int"
	  param in name "versionNum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosKey from the given bytes when the key type and
key version number are known. This can be used when reading the secret
key information from a Kerberos \"keytab\".

@param principal the principal that this secret key belongs to
@param keyBytes the raw bytes for the secret key
@param keyType the key type for the secret key as defined by the
Kerberos protocol specification.
@param versionNum the version number of this secret key"
      end

      operation 8664091 "KerberosKey"
	public explicit_return_type ""
	nparams 3
	  param inout name "principal" type class_ref 845979 // KerberosPrincipal
	  param in name "password" explicit_type "char"
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KerberosKey from a principal's password.

@param principal the principal that this password belongs to
@param password the password that should be used to compute the key
@param algorithm the name for the algorithm that this key will be
used for. This parameter may be null in which case the default
algorithm \"DES\" will be assumed.
@throws IllegalArgumentException if the name of the 
algorithm passed is unsupported. "
      end

      operation 8664219 "getPrincipal"
	public return_type class_ref 845979 // KerberosPrincipal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal that this key belongs to.

@return the principal this key belongs to."
      end

      operation 8664347 "getVersionNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key version number.

@return the key version number."
      end

      operation 8664475 "getKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key type for this long-term key.

@return the key type."
      end

      operation 8664603 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Methods from java.security.Key

 
Returns the standard algorithm name for this key. For 
example, \"DES\" would indicate that this key is a DES key. 
See Appendix A in the <a href= 
\"../../../../../guide/security/CryptoSpec.html#AppA\"> 
Java Cryptography Architecture API Specification &amp; Reference
</a> 
for information about standard algorithm names.

@return the name of the algorithm associated with this key."
      end

      operation 8664731 "getFormat"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format for this secret key.

@return the String \"RAW\""
      end

      operation 8664859 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key material of this secret key.

@return the key material"
      end

      operation 8664987 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 965659 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys this key. A call to any of its other methods after this
will cause an  IllegalStateException to be thrown.

@throws DestroyFailedException if some error occurs while destorying 
this key."
      end

      operation 8665115 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determines if this key has been destroyed."
      end

      operation 8665243 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1082779 "DelegationPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to restrict the usage of the Kerberos
delegation model, ie: forwardable and proxiable tickets.
<p>
The target name of this <code>Permission</code> specifies a pair of 
kerberos service principals. The first is the subordinate service principal 
being entrusted to use the TGT. The second service principal designates
the target service the subordinate service principal is to
interact with on behalf of the initiating KerberosPrincipal. This
latter service principal is specified to restrict the use of a
proxiable ticket.
<p>
For example, to specify the \"host\" service use of a forwardable TGT the
target permission is specified as follows:
<p> 
<pre>
 DelegationPermission(\"\\\"host/foo.example.com@EXAMPLE.COM\\\" \\\"krbtgt/EXAMPLE.COM@EXAMPLE.COM\\\"\");
</pre>
<p>
To give the \"backup\" service a proxiable nfs service ticket the target permission
might be specified:
<p>
<pre>
 DelegationPermission(\"\\\"backup/bar.example.com@EXAMPLE.COM\\\" \\\"nfs/home.EXAMPLE.COM@EXAMPLE.COM\\\"\");
</pre>

@since JDK1.4"
      classrelation 2210843 // <generalisation>
	relation 2210843 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2210843 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      classrelation 2210971 // <realization>
	relation 2210971 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2210971 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3132443 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  883133252142523922L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3132571 "subordinate"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3132699 "service"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8662043 "DelegationPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "principals" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DelegationPermission</code>
with the specified subordinate and target principals.

<p>

@param principals the name of the subordinate and target principals"
      end

      operation 8662171 "DelegationPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "principals" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DelegationPermission</code>
with the specified subordinate and target principals.
<p>

@param principals the name of the subordinate and target principals 
<p>
@param actions should be null."
      end

      operation 8662299 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "target" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the DelegationPermission object."
      end

      operation 8662427 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this Kerberos delegation permission object \"implies\" the 
specified permission.
<P>
If none of the above are true, <code>implies</code> returns false.
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.  "
      end

      operation 8662555 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two DelegationPermission objects for equality. 
<P>
@param obj the object to test for equality with this object.

@return true if <i>obj</i> is a DelegationPermission, and
 has the same subordinate and service principal as this.
 DelegationPermission object."
      end

      operation 8662683 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 8662811 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a PermissionCollection object for storing
DelegationPermission objects.
<br>
DelegationPermission objects must be stored in a manner that
allows them to be inserted into the collection in any order, but
that also enables the PermissionCollection implies method to
be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for storing
DelegationPermissions."
      end

      operation 8662939 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the DelegationPermission 
to a stream. The actions are serialized, and the superclass
takes care of the name."
      end

      operation 8663067 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the
DelegationPermission from a stream."
      end
    end

    class 1082907 "KrbDelegationPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "public static void main(String args[]) throws Exception {
DelegationPermission this_ =
new DelegationPermission(args[0]);
DelegationPermission that_ =
new DelegationPermission(args[1]);
System.out.println(\"-----\\n\");
System.out.println(\"this.implies(that) = \" + this_.implies(that_));
System.out.println(\"-----\\n\");
System.out.println(\"this = \"+this_);
System.out.println(\"-----\\n\");
System.out.println(\"that = \"+that_);
System.out.println(\"-----\\n\");

KrbDelegationPermissionCollection nps =
new KrbDelegationPermissionCollection();
nps.add(this_);
nps.add(new DelegationPermission(\"\\\"host/foo.example.com@EXAMPLE.COM\\\" \\\"CN=Gary Ellison/OU=JSN/O=SUNW/L=Palo Alto/ST=CA/C=US\\\"\"));
try {
nps.add(new DelegationPermission(\"host/foo.example.com@EXAMPLE.COM \\\"CN=Gary Ellison/OU=JSN/O=SUNW/L=Palo Alto/ST=CA/C=US\\\"\"));
} catch (Exception e) {
System.err.println(e);
}

System.out.println(\"nps.implies(that) = \" + nps.implies(that_));
System.out.println(\"-----\\n\");

Enumeration e = nps.elements();

while (e.hasMoreElements()) {
DelegationPermission x =
(DelegationPermission) e.nextElement();
System.out.println(\"nps.e = \" + x);
}
}"
      classrelation 2211099 // <generalisation>
	relation 2211099 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2211099 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 2211227 // <realization>
	relation 2211227 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2211227 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2211355 // perms (<unidirectional association>)
	relation 2211355 --->
	  a role_name "perms" private
	    comment " Not serialized; see serialization section at end of class.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2211355 // perms (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8663195 "KrbDelegationPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8663323 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this collection of permissions implies the permissions 
expressed in \"permission\".

@param p the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in 
the collection, false if not."
      end

      operation 8663451 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the DelegationPermissions. The key for
the hash is the name.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      DelegationPermission

@exception SecurityException - if this PermissionCollection object
                               has been marked readonly"
      end

      operation 8663579 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the DelegationPermission objects
in the container.

@return an enumeration of all the DelegationPermission objects."
      end

      attribute 3132827 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3383936936589966948L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2211483 // serialPersistentFields (<unidirectional association>)
	relation 2211483 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"permissions\", Vector.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
    private Vector permissions;

@serialField permissions java.util.Vector
    A list of DelegationPermission objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2211483 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 8663707 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData \"permissions\" field (a Vector containing the DelegationPermissions).


Writes the contents of the perms field out as a Vector for
serialization compatibility with earlier releases."
      end

      operation 8663835 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Vector of DelegationPermissions and saves them in the perms field."
      end
    end

    class 1083163 "KeyImpl"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates a Kerberos encryption key. It is not associated
with a principal and may represent an ephemeral session key.

@author Mayank Upadhyay
@version 1.13, 04/01/04
@since 1.4

@serial include"
      classrelation 2213915 // <realization>
	relation 2213915 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2213915 // <realization>
	  b parent class_ref 965531 // Destroyable
      end

      classrelation 2214043 // <realization>
	relation 2214043 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2214043 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3136283 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7889313790214321193L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3136411 "keyBytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3136539 "keyType"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3136667 "destroyed"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8669851 "KeyImpl"
	public explicit_return_type ""
	nparams 2
	  param in name "keyBytes" explicit_type "byte"
	  param in name "keyType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyImpl from the given bytes.

@param keyBytes the raw bytes for the secret key
@param keyType the key type for the secret key as defined by the
Kerberos protocol specification."
      end

      operation 8669979 "KeyImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "principal" type class_ref 845979 // KerberosPrincipal
	  param in name "password" explicit_type "char"
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyImpl from a password.

@param principal the principal from which to derive the salt
@param password the password that should be used to compute the
key.
@param algorithm the name for the algorithm that this key wil be
used for. This parameter may be null in which case \"DES\" will be
assumed."
      end

      operation 8670107 "getKeyType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keyType for this key as defined in the Kerberos Spec."
      end

      operation 8670235 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Methods from java.security.Key"
      end

      operation 8670363 "getAlgorithmName"
	private explicit_return_type "String"
	nparams 1
	  param in name "eType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670491 "getFormat"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670619 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670747 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 965659 // DestroyFailedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8670875 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8671003 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData this <code>KeyImpl</code> is serialized by
			writing out the ASN1 Encoded bytes of the
			encryption key. The ASN1 encoding is defined in 
			RFC1510 and as  follows:
			EncryptionKey ::=   SEQUENCE {
				keytype[0]    INTEGER,
				keyvalue[1]   OCTET STRING    	
				}"
      end

      operation 8671131 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8671259 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1083291 "ServicePermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to protect Kerberos services and the 
credentials necessary to access those services. There is a one to 
one mapping of a service principal and the credentials necessary
to access the service. Therefore granting access to a service
principal implicitly grants access to the credential necessary to
establish a security context with the service principal. This
applies regardless of whether the credentials are in a cache
or acquired via an exchange with the KDC. The credential can
be either a ticket granting ticket, a service ticket or a secret
key from a key table.
<p>
A ServicePermission contains a service principal name and
a list of actions which specify the context the credential can be
used within.
<p>
The service principal name is the canonical name of the
<code>KereberosPrincipal</code> supplying the service, that is
the KerberosPrincipal represents a Kerberos service
principal. This name is treated in a case sensitive manner.
An asterisk may appear by itself, to signify any service principal.
<p>
Granting this permission implies that the caller can use a cached
credential (TGT, service ticket or secret key) within the context
designated by the action. In the case of the TGT, granting this
permission also implies that the TGT can be obtained by an
Authentication Service exchange.
<p>
The possible actions are:
<p>
<pre>
   initiate -              allow the caller to use the credential to
                           initiate a security context with a service
                           principal.

   accept -                allow the caller to use the credential to
                           accept security context as a particular
                           principal.
</pre>

For example, to specify the permission to access to the TGT to
initiate a security context the permission is constructed as follows:
<p>
<pre>
    ServicePermission(\"krbtgt/EXAMPLE.COM@EXAMPLE.COM\", \"initiate\");
</pre>
<p>
To obtain a service ticket to initiate a context with the \"host\"
service the permission is constructed as follows:
<pre>
    ServicePermission(\"host/foo.example.com@EXAMPLE.COM\", \"initiate\");
</pre>
<p>
For a Kerberized server the action is \"accept\". For example, the permission
necessary to access and use the secret key of the  Kerberized \"host\"
service (telnet and the likes)  would be constructed as follows:
<p>
<pre>
    ServicePermission(\"host/foo.example.com@EXAMPLE.COM\", \"accept\");
</pre>

@since JDK1.4"
      classrelation 2214171 // <generalisation>
	relation 2214171 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2214171 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      classrelation 2214299 // <realization>
	relation 2214299 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2214299 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3136795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -1227585031618624935L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3136923 "INITIATE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Initiate a security context to the specified service
"
      end

      attribute 3137051 "ACCEPT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Accept a security context
"
      end

      attribute 3137179 "ALL"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  INITIATE|ACCEPT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "All actions
"
      end

      attribute 3137307 "NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0x0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "No actions.
"
      end

      attribute 3137435 "mask"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the actions mask"
      end

      attribute 3137563 "actions"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the actions string. 

@serial

 Left null as long as possible, then"
      end

      operation 8671387 "ServicePermission"
	public explicit_return_type ""
	nparams 2
	  param in name "servicePrincipal" explicit_type "String"
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " created and re-used in the getAction function.

Create a new <code>ServicePermission</code>
with the specified <code>servicePrincipal</code>
and <code>action</code>.

@param servicePrincipal the name of the service principal.
An asterisk may appear by itself, to signify any service principal.
<p>
@param action the action string"
      end

      operation 8671515 "init"
	private explicit_return_type "void"
	nparams 2
	  param in name "servicePrincipal" explicit_type "String"
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the ServicePermission object."
      end

      operation 8671643 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this Kerberos service permission object \"implies\" the 
specified permission.
<P>
If none of the above are true, <code>implies</code> returns false.
@param p the permission to check against.

@return true if the specified permission is implied by this object,
false if not.  "
      end

      operation 8671771 "impliesIgnoreMask"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 1083291 // ServicePermission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8671899 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two ServicePermission objects for equality. 
<P>
@param obj the object to test for equality with this object.

@return true if <i>obj</i> is a ServicePermission, and has the
 same service principal, and actions as this
ServicePermission object."
      end

      operation 8672027 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 8672155 "getActions"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "mask" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions in the
specified mask.
Always returns present actions in the following order: 
initiate, accept.

@param mask a specific integer action mask to translate into a string
@return the canonical string representation of the actions"
      end

      operation 8672283 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions.
Always returns present actions in the following order:
initiate, accept."
      end

      operation 8672411 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a PermissionCollection object for storing
ServicePermission objects.
<br>
ServicePermission objects must be stored in a manner that
allows them to be inserted into the collection in any order, but
that also enables the PermissionCollection implies method to
be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for storing
ServicePermissions."
      end

      operation 8672539 "getMask"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current action mask.

@return the actions mask."
      end

      operation 8672667 "getMask"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "action" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert an action string to an integer actions mask. 

@param action the action string
@return the action mask"
      end

      operation 8672795 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "WriteObject is called to save the state of the ServicePermission 
to a stream. The actions are serialized, and the superclass
takes care of the name."
      end

      operation 8672923 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the
ServicePermission from a stream."
      end
    end

    class 1083419 "KrbServicePermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "public static void main(String args[]) throws Exception {
ServicePermission this_ =
new ServicePermission(args[0], \"accept\");
ServicePermission that_ =
new ServicePermission(args[1], \"accept,initiate\");
System.out.println(\"-----\\n\");
System.out.println(\"this.implies(that) = \" + this_.implies(that_));
System.out.println(\"-----\\n\");
System.out.println(\"this = \"+this_);
System.out.println(\"-----\\n\");
System.out.println(\"that = \"+that_);
System.out.println(\"-----\\n\");

KrbServicePermissionCollection nps =
new KrbServicePermissionCollection();
nps.add(this_);
nps.add(new ServicePermission(\"nfs/example.com@EXAMPLE.COM\",
\"accept\"));
nps.add(new ServicePermission(\"host/example.com@EXAMPLE.COM\",
\"initiate\"));
System.out.println(\"nps.implies(that) = \" + nps.implies(that_));
System.out.println(\"-----\\n\");

Enumeration e = nps.elements();

while (e.hasMoreElements()) {
ServicePermission x =
(ServicePermission) e.nextElement();
System.out.println(\"nps.e = \" + x);
}

}"
      classrelation 2214427 // <generalisation>
	relation 2214427 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2214427 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 2214555 // <realization>
	relation 2214555 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2214555 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 2214683 // perms (<unidirectional association>)
	relation 2214683 --->
	  a role_name "perms" private
	    comment " Not serialized; see serialization section at end of class
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2214683 // perms (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8673051 "KrbServicePermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8673179 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this collection of permissions implies the permissions 
expressed in \"permission\".

@param p the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in 
the collection, false if not."
      end

      operation 8673307 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the ServicePermissions. The key for
the hash is the name.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      ServicePermission

@exception SecurityException - if this PermissionCollection object
                               has been marked readonly"
      end

      operation 8673435 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the ServicePermission objects
in the container.

@return an enumeration of all the ServicePermission objects."
      end

      attribute 3137691 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4118834211490102011L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2214811 // serialPersistentFields (<unidirectional association>)
	relation 2214811 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"permissions\", Vector.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 private Vector permissions;

@serialField permissions java.util.Vector
    A list of ServicePermission objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2214811 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 8673563 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData \"permissions\" field (a Vector containing the ServicePermissions).


Writes the contents of the perms field out as a Vector for
serialization compatibility with earlier releases."
      end

      operation 8673691 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Vector of ServicePermissions and saves them in the perms field."
      end
    end
  end

  deploymentview 171931 "kerberos"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 831387 "DelegationPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Permission;
import java.security.BasicPermission;
import java.security.PermissionCollection;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1082779 // DelegationPermission
	class_ref 1082907 // KrbDelegationPermissionCollection
      end
      comment "@(#)DelegationPermission.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 831515 "KerberosKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.crypto.SecretKey;
import javax.security.auth.Destroyable;
import javax.security.auth.DestroyFailedException;
${definition}"
      associated_classes
	class_ref 846235 // KerberosKey
      end
      comment "@(#)KerberosKey.java	1.17 04/01/13

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 831643 "KerberosPrincipal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import sun.security.krb5.Asn1Exception;
import sun.security.krb5.KrbException;
import sun.security.krb5.PrincipalName;
import sun.security.krb5.Realm;
import sun.security.util.*;
${definition}"
      associated_classes
	class_ref 845979 // KerberosPrincipal
      end
      comment "@(#)KerberosPrincipal.java	1.18 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 831771 "KerberosTicket"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.Date;
import java.util.Arrays;
import java.net.InetAddress;
import javax.crypto.SecretKey;
import javax.security.auth.Refreshable;
import javax.security.auth.Destroyable;
import javax.security.auth.RefreshFailedException;
import javax.security.auth.DestroyFailedException;
import sun.misc.HexDumpEncoder;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.Asn1Exception;
import sun.security.util.*;
${definition}"
      associated_classes
	class_ref 846107 // KerberosTicket
      end
      comment "@(#)KerberosTicket.java	1.17 06/06/01

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 831899 "KeyImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.Arrays;
import javax.crypto.SecretKey;
import javax.security.auth.Destroyable;
import javax.security.auth.DestroyFailedException;
import sun.misc.HexDumpEncoder;
import sun.security.krb5.Asn1Exception;
import sun.security.krb5.PrincipalName;
import sun.security.krb5.EncryptionKey;
import sun.security.krb5.EncryptedData;
import sun.security.krb5.KrbException;
import sun.security.krb5.KrbCryptoException;
import sun.security.util.DerValue;
${definition}"
      associated_classes
	class_ref 1083163 // KeyImpl
      end
      comment "@(#)KeyImpl.java	1.13 04/04/01

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 832027 "ServicePermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Permission;
import java.security.PermissionCollection;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1083291 // ServicePermission
	class_ref 1083419 // KrbServicePermissionCollection
      end
      comment "@(#)ServicePermission.java	1.12 04/03/29

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
