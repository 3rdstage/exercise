class Short
!!!7040411.java!!!	toString(in s : short) : String
	return Integer.toString((int)s, 10);
!!!7040539.java!!!	parseShort(in s : String) : short
	return parseShort(s, 10);
!!!7040667.java!!!	parseShort(in s : String, in radix : int) : short
	int i = Integer.parseInt(s, radix);
	if (i < MIN_VALUE || i > MAX_VALUE)
	    throw new NumberFormatException(
                "Value out of range. Value:\"" + s + "\" Radix:" + radix);
	return (short)i;
!!!7040795.java!!!	valueOf(in s : String, in radix : int) : Short
	return new Short(parseShort(s, radix));
!!!7040923.java!!!	valueOf(in s : String) : Short
	return valueOf(s, 10);
!!!7041179.java!!!	valueOf(in s : short) : Short
	final int offset = 128;
	int sAsInt = s;
	if (sAsInt >= -128 && sAsInt <= 127) { // must cache 
	    return ShortCache.cache[sAsInt + offset];
	}
        return new Short(s);
!!!7041307.java!!!	decode(in nm : String) : Short
        int radix = 10;
        int index = 0;
        boolean negative = false;
        Short result;

        // Handle minus sign, if present
        if (nm.startsWith("-")) {
            negative = true;
            index++;
        }

        // Handle radix specifier, if present
	if (nm.startsWith("0x", index) || nm.startsWith("0X", index)) {
	    index += 2;
            radix = 16;
	}
	else if (nm.startsWith("#", index)) {
	    index ++;
            radix = 16;
	}
	else if (nm.startsWith("0", index) && nm.length() > 1 + index) {
	    index ++;
            radix = 8;
	}

        if (nm.startsWith("-", index))
            throw new NumberFormatException("Negative sign in wrong position");

        try {
            result = Short.valueOf(nm.substring(index), radix);
            result = negative ? new Short((short)-result.shortValue()) :result;
        } catch (NumberFormatException e) {
            // If number is Short.MIN_VALUE, we'll end up here. The next line
            // handles this case, and causes any genuine format error to be
            // rethrown.
            String constant = negative ? new String("-" + nm.substring(index))
                                       : nm.substring(index);
            result = Short.valueOf(constant, radix);
        }
        return result;
!!!7041435.java!!!	Short(in value : short)
	this.value = value;
!!!7041563.java!!!	Short(in s : String)
	this.value = parseShort(s, 10);
!!!7041691.java!!!	byteValue() : byte
	return (byte)value;
!!!7041819.java!!!	shortValue() : short
	return value;
!!!7041947.java!!!	intValue() : int
	return (int)value;
!!!7042075.java!!!	longValue() : long
	return (long)value;
!!!7042203.java!!!	floatValue() : float
	return (float)value;
!!!7042331.java!!!	doubleValue() : double
	return (double)value;
!!!7042459.java!!!	toString() : String
	return String.valueOf((int)value);
!!!7042587.java!!!	hashCode() : int
	return (int)value;
!!!7042715.java!!!	equals(inout obj : Object) : boolean
	if (obj instanceof Short) {
	    return value == ((Short)obj).shortValue();
	}
	return false;
!!!7042843.java!!!	compareTo(inout anotherShort : Short) : int
	return this.value - anotherShort.value;
!!!7042971.java!!!	reverseBytes(in i : short) : short
        return (short) (((i & 0xFF00) >> 8) | (i << 8));
