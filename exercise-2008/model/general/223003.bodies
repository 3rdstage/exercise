class EncapsulationUtility
!!!842395.java!!!	readIdentifiableSequence(inout container : List, inout finder : IdentifiableFactoryFinder, inout istr : InputStream) : void
	int count = istr.read_long() ;
	for (int ctr = 0; ctr<count; ctr++) {
	    int id = istr.read_long() ;
	    Identifiable obj = finder.create( id, istr ) ;
	    container.add( obj ) ;
	}
!!!842523.java!!!	writeIdentifiableSequence(inout container : List, inout os : OutputStream) : void
	os.write_long( container.size() ) ;
	Iterator iter = container.iterator() ;
	while (iter.hasNext()) {
	    Identifiable obj = (Identifiable)( iter.next() ) ;
	    os.write_long( obj.getId() ) ;
	    obj.write( os ) ;
	}
!!!842651.java!!!	writeOutputStream(inout dataStream : OutputStream, inout os : OutputStream) : void
	byte[] data = ((CDROutputStream)dataStream).toByteArray() ;
	os.write_long( data.length ) ;
	os.write_octet_array( data, 0, data.length ) ;
!!!842779.java!!!	getEncapsulationStream(inout is : InputStream) : InputStream
	byte[] data = readOctets( is ) ;
	EncapsInputStream result = new EncapsInputStream( is.orb(), data, 
	    data.length ) ;
	result.consumeEndian() ;
	return result ;
!!!842907.java!!!	readOctets(inout is : InputStream) : byte
	int len = is.read_ulong() ;
	byte[] data = new byte[len] ;
	is.read_octet_array( data, 0, len ) ;
	return data ;
!!!843035.java!!!	writeEncapsulation(inout obj : WriteContents, inout os : OutputStream) : void
	EncapsOutputStream out = new EncapsOutputStream( (ORB)os.orb() ) ;

	out.putEndian() ;

	obj.writeContents( out ) ;

	writeOutputStream( out, os ) ;
