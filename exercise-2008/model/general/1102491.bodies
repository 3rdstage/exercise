class DefaultBoundedRangeModel
!!!8863387.java!!!	DefaultBoundedRangeModel(in value : int, in extent : int, in min : int, in max : int)
        if ((max >= min) && 
	    (value >= min) && 
	    ((value + extent) >= value) &&   
	    ((value + extent) <= max)) {
            this.value = value;
            this.extent = extent;
            this.min = min;
            this.max = max;
        }
        else {
            throw new IllegalArgumentException("invalid range properties");
        }
!!!8863515.java!!!	getValue() : int
      return value; 
!!!8863643.java!!!	getExtent() : int
      return extent; 
!!!8863771.java!!!	getMinimum() : int
      return min; 
!!!8863899.java!!!	getMaximum() : int
        return max; 
!!!8864027.java!!!	setValue(in n : int) : void
        n = Math.min(n, Integer.MAX_VALUE - extent);

        int newValue = Math.max(n, min);
        if (newValue + extent > max) {
            newValue = max - extent; 
        }
        setRangeProperties(newValue, extent, min, max, isAdjusting);
!!!8864155.java!!!	setExtent(in n : int) : void
        int newExtent = Math.max(0, n);
        if(value + newExtent > max) {
            newExtent = max - value;
        }
        setRangeProperties(value, newExtent, min, max, isAdjusting);
!!!8864283.java!!!	setMinimum(in n : int) : void
        int newMax = Math.max(n, max);
        int newValue = Math.max(n, value);
        int newExtent = Math.min(newMax - newValue, extent);
        setRangeProperties(newValue, newExtent, n, newMax, isAdjusting);
!!!8864411.java!!!	setMaximum(in n : int) : void
        int newMin = Math.min(n, min);
        int newExtent = Math.min(n - newMin, extent);
        int newValue = Math.min(n - newExtent, value);
        setRangeProperties(newValue, newExtent, newMin, n, isAdjusting);
!!!8864539.java!!!	setValueIsAdjusting(inout b : boolean) : void
        setRangeProperties(value, extent, min, max, b);
!!!8864667.java!!!	getValueIsAdjusting() : boolean
        return isAdjusting; 
!!!8864795.java!!!	setRangeProperties(in newValue : int, in newExtent : int, in newMin : int, in newMax : int, inout adjusting : boolean) : void
        if (newMin > newMax) {
            newMin = newMax;
	}
        if (newValue > newMax) {
            newMax = newValue;
	}
        if (newValue < newMin) {
            newMin = newValue;
	}

	/* Convert the addends to long so that extent can be 
	 * Integer.MAX_VALUE without rolling over the sum.
	 * A JCK test covers this, see bug 4097718.
	 */
        if (((long)newExtent + (long)newValue) > newMax) {
            newExtent = newMax - newValue;
	}
	
        if (newExtent < 0) {
            newExtent = 0;
	}

        boolean isChange =
            (newValue != value) ||
            (newExtent != extent) ||
            (newMin != min) ||
            (newMax != max) ||
            (adjusting != isAdjusting);

        if (isChange) {
            value = newValue;
            extent = newExtent;
            min = newMin;
            max = newMax;
            isAdjusting = adjusting;

            fireStateChanged();
        }
!!!8864923.java!!!	addChangeListener(inout l : ChangeListener) : void
        listenerList.add(ChangeListener.class, l);
!!!8865051.java!!!	removeChangeListener(inout l : ChangeListener) : void
        listenerList.remove(ChangeListener.class, l);
!!!8865179.java!!!	getChangeListeners() : ChangeListener
        return (ChangeListener[])listenerList.getListeners(
                ChangeListener.class);
!!!8865307.java!!!	fireStateChanged() : void
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -=2 ) {
            if (listeners[i] == ChangeListener.class) {
                if (changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((ChangeListener)listeners[i+1]).stateChanged(changeEvent);
            }          
        }
!!!8865435.java!!!	toString() : String
        String modelString =
            "value=" + getValue() + ", " +
            "extent=" + getExtent() + ", " +
            "min=" + getMinimum() + ", " +
            "max=" + getMaximum() + ", " +
            "adj=" + getValueIsAdjusting();

        return getClass().getName() + "[" + modelString + "]";
!!!8865563.java!!!	getListeners(inout listenerType : Class) : T
 
	return listenerList.getListeners(listenerType); 
