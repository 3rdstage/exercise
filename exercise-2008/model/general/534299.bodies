class SnmpVarBind
!!!3336347.java!!!	SnmpVarBind(inout oid : SnmpOid)
        this.oid = oid ;
!!!3336475.java!!!	SnmpVarBind(inout oid : SnmpOid, inout val : SnmpValue)
        this.oid = oid ;
        this.setSnmpValue(val) ;
!!!3336603.java!!!	SnmpVarBind(in name : String)

        if (name.startsWith(".")) {
            this.oid = new SnmpOid(name) ;
        } else {
            SnmpOidRecord record= null;
            try {
                int index = name.indexOf('.') ;
                handleLong(name, index);
                this.oid = new SnmpOid(name);
            } 
            catch(NumberFormatException e) {
                int index = name.indexOf('.') ;
                if (index <= 0) {
                    record = resolveVarName(name) ;
                    this.oid = new SnmpOid(record.getName()) ;
                } else {
                    record = resolveVarName(name.substring(0, index)) ;				       
                    this.oid = new SnmpOid(record.getName() + name.substring(index)) ;
                }
            }
        }
!!!3336731.java!!!	getOid() : SnmpOid
        return this.oid ;
!!!3336859.java!!!	setOid(inout oid : SnmpOid) : void
        this.oid = oid ;
        clearValue() ;
!!!3336987.java!!!	getSnmpValue() : SnmpValue
        return this.value ;
!!!3337115.java!!!	setSnmpValue(inout val : SnmpValue) : void
        this.value= val ;
        setValueValid();
!!!3337243.java!!!	getSnmpCounter64Value() : SnmpCounter64
        return (SnmpCounter64)this.value ;
!!!3337371.java!!!	setSnmpCounter64Value(in val : long) : void
        clearValue() ;
        this.value = new SnmpCounter64(val) ;
        setValueValid() ;
!!!3337499.java!!!	getSnmpIntValue() : SnmpInt
        return (SnmpInt)this.value ;
!!!3337627.java!!!	setSnmpIntValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpInt(val) ;
        setValueValid() ;
!!!3337755.java!!!	getSnmpCounterValue() : SnmpCounter
        return (SnmpCounter)this.value ;
!!!3337883.java!!!	setSnmpCounterValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpCounter(val) ;
        setValueValid() ;
!!!3338011.java!!!	getSnmpGaugeValue() : SnmpGauge
        return (SnmpGauge)this.value ;
!!!3338139.java!!!	setSnmpGaugeValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpGauge(val) ;
        setValueValid() ;
!!!3338267.java!!!	getSnmpTimeticksValue() : SnmpTimeticks
        return (SnmpTimeticks)this.value ;
!!!3338395.java!!!	setSnmpTimeticksValue(in val : long) : void
        clearValue() ;
        this.value = new SnmpTimeticks(val) ;
        setValueValid() ;
!!!3338523.java!!!	getSnmpOidValue() : SnmpOid
        return (SnmpOid)this.value ;
!!!3338651.java!!!	setSnmpOidValue(in val : String) : void
        clearValue() ;
        this.value = new SnmpOid(val) ;
        setValueValid() ;
!!!3338779.java!!!	getSnmpIpAddressValue() : SnmpIpAddress
        return (SnmpIpAddress)this.value ;
!!!3338907.java!!!	setSnmpIpAddressValue(in val : String) : void
        clearValue() ;
        this.value = new SnmpIpAddress(val) ;
        setValueValid() ;
!!!3339035.java!!!	getSnmpStringValue() : SnmpString
        return (SnmpString)this.value ;
!!!3339163.java!!!	setSnmpStringValue(in val : String) : void
        clearValue() ;
        this.value = new SnmpString(val) ;
        setValueValid() ;
!!!3339291.java!!!	getSnmpOpaqueValue() : SnmpOpaque
        return (SnmpOpaque)this.value ;
!!!3339419.java!!!	setSnmpOpaqueValue(in val : byte) : void
        clearValue() ;
        this.value = new SnmpOpaque(val) ;
        setValueValid() ;
!!!3339547.java!!!	getSnmpStringFixedValue() : SnmpStringFixed
        return (SnmpStringFixed)this.value ;
!!!3339675.java!!!	setSnmpStringFixedValue(in val : String) : void
        clearValue() ;
        this.value = new SnmpStringFixed(val) ;
        setValueValid() ;
!!!3339803.java!!!	resolveVarName(in name : String) : SnmpOidRecord
        
        SnmpOidTable mibTable = oid.getSnmpOidTable();
        if (mibTable == null)
            throw new SnmpStatusException(SnmpStatusException.noSuchName);
        int index = name.indexOf('.');
        if (index < 0) {
            return mibTable.resolveVarName(name);
        } else {
            return mibTable.resolveVarOid(name);
        }
!!!3339931.java!!!	getValueStatus() : int
        return status ;
!!!3340059.java!!!	getValueStatusLegend() : String
        return statusLegend[status] ;
!!!3340187.java!!!	isValidValue() : boolean
        return (status == stValueOk) ;
!!!3340315.java!!!	isUnspecifiedValue() : boolean
        return (status == stValueUnspecified) ;
!!!3340443.java!!!	clearValue() : void
        this.value = null ;
        status = stValueUnspecified ;
!!!3340571.java!!!	isOidEqual(inout var : SnmpVarBind) : boolean
        return this.oid.equals(var.oid) ;
!!!3340699.java!!!	addInstance(in inst : long) : void
        oid.append(inst) ;
        return ;
!!!3340827.java!!!	addInstance(in inst : long) : void
        oid.addToOid(inst) ;
        return ;
!!!3340955.java!!!	addInstance(in inst : String) : void
        if (inst != null) {
            oid.addToOid(inst) ;
        }
        return ;
!!!3341083.java!!!	insertInOid(in oid : int) : void
        this.oid.insert(oid) ;
!!!3341211.java!!!	appendInOid(inout oid : SnmpOid) : void
        this.oid.append(oid) ;
!!!3341339.java!!!	hasVarBindException() : boolean
        switch (status) {
        case  stValueUnspecified :
        case  stValueNoSuchObject :
        case  stValueNoSuchInstance :
        case  stValueEndOfMibView :
            return true ;
        }
        return false ;
!!!3341467.java!!!	copyValueAndOid(inout var : SnmpVarBind) : void
        setOid((SnmpOid) (var.oid.clone())) ;
        copyValue(var) ;
!!!3341595.java!!!	copyValue(inout var : SnmpVarBind) : void
        if (var.isValidValue()) {
            this.value = var.getSnmpValue().duplicate() ;
            setValueValid() ;
        } else {
            status = var.getValueStatus() ;
	    if (status == stValueEndOfMibView)        value=endOfMibView;
	    else if (status == stValueNoSuchObject)   value=noSuchObject;
	    else if (status == stValueNoSuchInstance) value=noSuchInstance;
        }
!!!3341723.java!!!	cloneWithoutValue() : Object
        SnmpOid noid = (SnmpOid)this.oid.clone() ;
        return new SnmpVarBind(noid) ;
!!!3341851.java!!!	clone() : Object
 
//         SnmpVarBind v = null ;
//         try {
//             v = (SnmpVarBind) super.clone() ;
//             v.copyValueAndOid(this) ;
//         } catch (CloneNotSupportedException e) {
//             throw new InternalError() ;
//         }
//         return v ;
        SnmpVarBind v = new SnmpVarBind() ;
        v.copyValueAndOid(this) ;
        return v ;
!!!3341979.java!!!	getStringValue() : String
        return this.value.toString() ;
!!!3342107.java!!!	setNoSuchObject() : void
	value=noSuchObject;
	status=stValueNoSuchObject;
!!!3342235.java!!!	setNoSuchInstance() : void
	value=noSuchInstance;
	status=stValueNoSuchInstance;
!!!3342363.java!!!	setEndOfMibView() : void
	value=endOfMibView;
	status=stValueEndOfMibView;
!!!3342491.java!!!	toString() : String
        StringBuffer s = new StringBuffer(400) ;
        s.append("Object ID : " + this.oid.toString()) ; 

        if (isValidValue()) {
            s.append("  (Syntax : " + this.value.getTypeName() + ")\n") ;
            s.append("Value : " + this.value.toString()) ;
        } else {
            s.append("\n" + "Value Exception : " + getValueStatusLegend()) ;
        }
        return s.toString() ;
!!!3342619.java!!!	setValueValid() : void
	if (value == endOfMibView)        status=stValueEndOfMibView;
	else if (value == noSuchObject)   status=stValueNoSuchObject;
	else if (value == noSuchInstance) status=stValueNoSuchInstance;
        else status = stValueOk ;
!!!3342747.java!!!	handleLong(in oid : String, in index : int) : void

        String str;
        if (index >0) {
            str= oid.substring(0, index);
        } else {
            str= oid ;
        }

        // just parse the element.
        //
        Long.parseLong(str);
