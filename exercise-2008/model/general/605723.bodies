class MenuBar
!!!6323483.java!!!	constructComponentName() : String
        synchronized (getClass()) {
	    return base + nameCounter++;
	}
!!!6323611.java!!!	addNotify() : void
        synchronized (getTreeLock()) {
	    if (peer == null)
	        peer = Toolkit.getDefaultToolkit().createMenuBar(this);

	    int nmenus = getMenuCount();
	    for (int i = 0 ; i < nmenus ; i++) {
	        getMenu(i).addNotify();
	    }
	}
!!!6323739.java!!!	removeNotify() : void
        synchronized (getTreeLock()) {
	    int nmenus = getMenuCount();
	    for (int i = 0 ; i < nmenus ; i++) {
	        getMenu(i).removeNotify();
	    }
	    super.removeNotify();
	}
!!!6323867.java!!!	getHelpMenu() : Menu
	return helpMenu;
!!!6323995.java!!!	setHelpMenu(inout m : Menu) : void
        synchronized (getTreeLock()) {
	    if (helpMenu == m) {
	        return;
	    }
	    if (helpMenu != null) {
                remove(helpMenu);
	    }
	    if (m.parent != this) {
	        add(m);
	    }
	    helpMenu = m;
	    if (m != null) {
	        m.isHelpMenu = true;
		m.parent = this;
		MenuBarPeer peer = (MenuBarPeer)this.peer;
		if (peer != null) {
		    if (m.peer == null) {
		        m.addNotify();
		    }
		    peer.addHelpMenu(m);
		}
	    }
	}
!!!6324123.java!!!	add(inout m : Menu) : Menu
        synchronized (getTreeLock()) {
	    if (m.parent != null) {
	        m.parent.remove(m);
	    }
	    menus.addElement(m);
	    m.parent = this;

	    MenuBarPeer peer = (MenuBarPeer)this.peer;
	    if (peer != null) {
	        if (m.peer == null) {
		    m.addNotify();
		}
		peer.addMenu(m);
	    }
	    return m;
	}
!!!6324251.java!!!	remove(in index : int) : void
        synchronized (getTreeLock()) {
            Menu m = getMenu(index);
            menus.removeElementAt(index);
	    MenuBarPeer peer = (MenuBarPeer)this.peer;
	    if (peer != null) {
		m.removeNotify();
		m.parent = null;
		peer.delMenu(index);
	    }
	}
!!!6324379.java!!!	remove(inout m : MenuComponent) : void
        synchronized (getTreeLock()) {
	    int index = menus.indexOf(m);
	    if (index >= 0) {
	        remove(index);
	    }
	}
!!!6324507.java!!!	getMenuCount() : int
	return countMenus();
!!!6324635.java!!!	countMenus() : int
	return getMenuCountImpl();
!!!6324763.java!!!	getMenuCountImpl() : int
	return menus.size();
!!!6324891.java!!!	getMenu(in i : int) : Menu
	return getMenuImpl(i);
!!!6325019.java!!!	getMenuImpl(in i : int) : Menu
	return (Menu)menus.elementAt(i);
!!!6325147.java!!!	shortcuts() : Enumeration
        Vector shortcuts = new Vector();
	int nmenus = getMenuCount();
	for (int i = 0 ; i < nmenus ; i++) {
            Enumeration e = getMenu(i).shortcuts();
            while (e.hasMoreElements()) {
                shortcuts.addElement(e.nextElement());
            }
	}
        return shortcuts.elements();
!!!6325275.java!!!	getShortcutMenuItem(inout s : MenuShortcut) : MenuItem
	int nmenus = getMenuCount();
	for (int i = 0 ; i < nmenus ; i++) {
            MenuItem mi = getMenu(i).getShortcutMenuItem(s);
            if (mi != null) {
                return mi;
            }
	}
        return null;  // MenuShortcut wasn't found
!!!6325403.java!!!	handleShortcut(inout e : KeyEvent) : boolean
        // Is it a key event?
        int id = e.getID();
        if (id != KeyEvent.KEY_PRESSED && id != KeyEvent.KEY_RELEASED) {
            return false;
        }

        // Is the accelerator modifier key pressed?
        int accelKey = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
        if ((e.getModifiers() & accelKey) == 0) {
            return false;
        }

        // Pass MenuShortcut on to child menus.
	int nmenus = getMenuCount();
	for (int i = 0 ; i < nmenus ; i++) {
	    Menu m = getMenu(i);
            if (m.handleShortcut(e)) {
                return true;
            }
        }
        return false;
!!!6325531.java!!!	deleteShortcut(inout s : MenuShortcut) : void
	int nmenus = getMenuCount();
	for (int i = 0 ; i < nmenus ; i++) {
	    getMenu(i).deleteShortcut(s);
        }
!!!6325659.java!!!	writeObject(inout s : ObjectOutputStream) : void
      s.defaultWriteObject();
!!!6325787.java!!!	readObject(inout s : ObjectInputStream) : void
      // HeadlessException will be thrown from MenuComponent's readObject
      s.defaultReadObject();
      for (int i = 0; i < menus.size(); i++) {
	Menu m = (Menu)menus.elementAt(i);
	m.parent = this;
      }
!!!6326043.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleAWTMenuBar();
        }
        return accessibleContext;
!!!6326171.java!!!	getAccessibleChildIndex(inout child : MenuComponent) : int
        return menus.indexOf(child);
