class InputStreamHook
!!!794395.java!!!	InputStreamHook()
	super();
!!!794523.java!!!	defaultReadObject() : void
        readObjectState.beginDefaultReadObject(this);

    	defaultReadObjectDelegate();

        readObjectState.endDefaultReadObject(this);
!!!794907.java!!!	readFields() : GetField

        HashMap fieldValueMap = new HashMap();

        // We were treating readFields same as defaultReadObject. It is
        // incorrect if the state is readOptionalData. If this line
        // is uncommented, it will throw a stream corrupted exception.
        // _REVISIT_: The ideal fix would be to add a new state. In 
        // writeObject user may do one of the following
        // 1. Call defaultWriteObject() 
        // 2. Put out optional fields 
        // 3. Call writeFields 
        // We have the state defined for (1) and (2) but not for (3), so
        // we should ideally introduce a new state for 3 and have the
        // beginDefaultReadObject do nothing.
        //readObjectState.beginDefaultReadObject(this);

        readFields(fieldValueMap);

        readObjectState.endDefaultReadObject(this);

	return new HookGetFields(fieldValueMap);
!!!795035.java!!!	setState(inout newState : ReadObjectState) : void
        readObjectState = newState;
!!!796955.java!!!	throwOptionalDataIncompatibleException() : void
	throw omgWrapper.rmiiiopOptionalDataIncompatible2() ;
