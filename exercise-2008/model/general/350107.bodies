class DHTMarkerSegment
!!!1974683.java!!!	DHTMarkerSegment(inout needFour : boolean)
        super(JPEG.DHT);
        tables.add(new Htable(JPEGHuffmanTable.StdDCLuminance, true, 0));
        if (needFour) {
            tables.add(new Htable(JPEGHuffmanTable.StdDCChrominance, true, 1));
        }
        tables.add(new Htable(JPEGHuffmanTable.StdACLuminance, false, 0));
        if (needFour) {
            tables.add(new Htable(JPEGHuffmanTable.StdACChrominance, false, 1));
        }
!!!1974811.java!!!	DHTMarkerSegment(inout buffer : JPEGBuffer)
        super(buffer);
        int count = length;
        while (count > 0) {
            Htable newGuy = new Htable(buffer);
            tables.add(newGuy);
            count -= 1 + 16 + newGuy.values.length;
        }
        buffer.bufAvail -= length;
!!!1974939.java!!!	DHTMarkerSegment(inout dcTables : JPEGHuffmanTable, inout acTables : JPEGHuffmanTable)
        super(JPEG.DHT);
        for (int i = 0; i < dcTables.length; i++) {
            tables.add(new Htable(dcTables[i], true, i));
        }
        for (int i = 0; i < acTables.length; i++) {
            tables.add(new Htable(acTables[i], false, i));
        }
!!!1975067.java!!!	DHTMarkerSegment(inout node : Node)
        super(JPEG.DHT);
        NodeList children = node.getChildNodes();
        int size = children.getLength();
        if ((size < 1) || (size > 4)) {
            throw new IIOInvalidTreeException("Invalid DHT node", node);
        }
        for (int i = 0; i < size; i++) {
            tables.add(new Htable(children.item(i)));
        }
!!!1975195.java!!!	clone() : Object
        DHTMarkerSegment newGuy = (DHTMarkerSegment) super.clone();
        newGuy.tables = new ArrayList(tables.size());
        Iterator iter = tables.iterator();
        while (iter.hasNext()) {
            Htable table = (Htable) iter.next();
            newGuy.tables.add(table.clone());
        }
        return newGuy;
!!!1975323.java!!!	getNativeNode() : IIOMetadataNode
        IIOMetadataNode node = new IIOMetadataNode("dht");
        for (int i= 0; i<tables.size(); i++) {
            Htable table = (Htable) tables.get(i);
            node.appendChild(table.getNativeNode());
        }
        return node;           
!!!1975451.java!!!	write(inout ios : ImageOutputStream) : void
        // We don't write DHT segments; the IJG library does.
!!!1975579.java!!!	print() : void
        printTag("DHT");
        System.out.println("Num tables: " 
                           + Integer.toString(tables.size()));
        for (int i= 0; i<tables.size(); i++) {
            Htable table = (Htable) tables.get(i);
            table.print();
        }
        System.out.println();
            
!!!1975707.java!!!	getHtableFromNode(inout node : Node) : Htable
        return new Htable(node);
!!!1975835.java!!!	addHtable(inout table : JPEGHuffmanTable, inout isDC : boolean, in id : int) : void
        tables.add(new Htable(table, isDC, id));
