class XMLString
!!!5532059.java!!!	XMLString(in ch : char, in offset : int, in length : int)
        setValues(ch, offset, length);
!!!5532187.java!!!	XMLString(inout string : XMLString)
        setValues(string);
!!!5532315.java!!!	setValues(in ch : char, in offset : int, in length : int) : void
        this.ch = ch;
        this.offset = offset;
        this.length = length;
!!!5532443.java!!!	setValues(inout s : XMLString) : void
        setValues(s.ch, s.offset, s.length);
!!!5532571.java!!!	clear() : void
        this.ch = null;
        this.offset = 0;
        this.length = -1;
!!!5532699.java!!!	equals(in ch : char, in offset : int, in length : int) : boolean
        if (ch == null) {
            return false;
        }
        if (this.length != length) {
            return false;
        }

        for (int i=0; i<length; i++) {
            if (this.ch[this.offset+i] != ch[offset+i] ) {
                return false;
            }
        }
        return true;
!!!5532827.java!!!	equals(in s : String) : boolean
        if (s == null) {
            return false;
        }
        if ( length != s.length() ) {
            return false;
        }

        // is this faster than call s.toCharArray first and compare the 
        // two arrays directly, which will possibly involve creating a
        // new char array object.
        for (int i=0; i<length; i++) {
            if (ch[offset+i] != s.charAt(i)) {
                return false;
            }
        }

        return true;
!!!5532955.java!!!	toString() : String
        return length > 0 ? new String(ch, offset, length) : "";
