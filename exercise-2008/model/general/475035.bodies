class LineBorder
!!!2927131.java!!!	createBlackLineBorder() : Border
        if (blackLine == null) {
            blackLine = new LineBorder(Color.black, 1);
        }
        return blackLine;
!!!2927259.java!!!	createGrayLineBorder() : Border
        if (grayLine == null) {
            grayLine = new LineBorder(Color.gray, 1);
        }
        return grayLine;
!!!2927387.java!!!	LineBorder(inout color : Color)
        this(color, 1, false);
!!!2927515.java!!!	LineBorder(inout color : Color, in thickness : int)
        this(color, thickness, false);
!!!2927643.java!!!	LineBorder(inout color : Color, in thickness : int, inout roundedCorners : boolean)
        lineColor = color;
        this.thickness = thickness;
	this.roundedCorners = roundedCorners;
!!!2927771.java!!!	paintBorder(inout c : Component, inout g : Graphics, in x : int, in y : int, in width : int, in height : int) : void
        Color oldColor = g.getColor();
        int i;

	/// PENDING(klobad) How/should do we support Roundtangles?
        g.setColor(lineColor);
        for(i = 0; i < thickness; i++)  {
	    if(!roundedCorners)
                g.drawRect(x+i, y+i, width-i-i-1, height-i-i-1);
	    else
                g.drawRoundRect(x+i, y+i, width-i-i-1, height-i-i-1, thickness, thickness);
        }
        g.setColor(oldColor);
!!!2927899.java!!!	getBorderInsets(inout c : Component) : Insets
        return new Insets(thickness, thickness, thickness, thickness);
!!!2928027.java!!!	getBorderInsets(inout c : Component, inout insets : Insets) : Insets
        insets.left = insets.top = insets.right = insets.bottom = thickness;
        return insets;
!!!2928155.java!!!	getLineColor() : Color
        return lineColor;
!!!2928283.java!!!	getThickness() : int
        return thickness;
!!!2928411.java!!!	getRoundedCorners() : boolean
        return roundedCorners;
!!!2928539.java!!!	isBorderOpaque() : boolean
 
        return !roundedCorners; 
