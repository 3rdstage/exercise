class AbstractElement
!!!2554907.java!!!	AbstractElement(inout parent : Element, inout a : AttributeSet)
	    this.parent = parent;
	    attributes = getAttributeContext().getEmptySet();
	    if (a != null) {
		addAttributes(a);
	    }
!!!2555035.java!!!	indent(inout out : PrintWriter, in n : int) : void
	    for (int i = 0; i < n; i++) {
		out.print("  ");
	    }
!!!2555163.java!!!	dump(inout psOut : PrintStream, in indentAmount : int) : void
            PrintWriter out;
            try {
                out = new PrintWriter(new OutputStreamWriter(psOut,"JavaEsc"),
                                      true);
            } catch (UnsupportedEncodingException e){
                out = new PrintWriter(psOut,true);
            }
	    indent(out, indentAmount);
	    if (getName() == null) {
		out.print("<??");
	    } else {
		out.print("<" + getName());
	    }
	    if (getAttributeCount() > 0) {
		out.println("");
		// dump the attributes
		Enumeration names = attributes.getAttributeNames();
		while (names.hasMoreElements()) {
		    Object name = names.nextElement();
		    indent(out, indentAmount + 1);
		    out.println(name + "=" + getAttribute(name));
		}
		indent(out, indentAmount);
	    }
	    out.println(">");

	    if (isLeaf()) {
		indent(out, indentAmount+1);
		out.print("[" + getStartOffset() + "," + getEndOffset() + "]");
		Content c = getContent();
		try {
		    String contentStr = c.getString(getStartOffset(), 
                                                    getEndOffset() - getStartOffset())/*.trim()*/;
		    if (contentStr.length() > 40) {
			contentStr = contentStr.substring(0, 40) + "...";
		    }
		    out.println("["+contentStr+"]");		
	        } catch (BadLocationException e) {
			;
		}

	    } else {
		int n = getElementCount();
		for (int i = 0; i < n; i++) {
		    AbstractElement e = (AbstractElement) getElement(i);
		    e.dump(psOut, indentAmount+1);
		}
	    }
!!!2555291.java!!!	getAttributeCount() : int
	    return attributes.getAttributeCount();
!!!2555419.java!!!	isDefined(inout attrName : Object) : boolean
	    return attributes.isDefined(attrName);
!!!2555547.java!!!	isEqual(inout attr : AttributeSet) : boolean
	    return attributes.isEqual(attr);
!!!2555675.java!!!	copyAttributes() : AttributeSet
	    return attributes.copyAttributes();
!!!2555803.java!!!	getAttribute(inout attrName : Object) : Object
	    Object value = attributes.getAttribute(attrName);
	    if (value == null) {
		// The delegate nor it's resolvers had a match,
		// so we'll try to resolve through the parent
		// element.
		AttributeSet a = (parent != null) ? parent.getAttributes() : null;
		if (a != null) {
		    value = a.getAttribute(attrName);
		}
	    }
	    return value;
!!!2555931.java!!!	getAttributeNames() : Enumeration
	    return attributes.getAttributeNames();
!!!2556059.java!!!	containsAttribute(inout name : Object, inout value : Object) : boolean
	    return attributes.containsAttribute(name, value);
!!!2556187.java!!!	containsAttributes(inout attrs : AttributeSet) : boolean
	    return attributes.containsAttributes(attrs);
!!!2556315.java!!!	getResolveParent() : AttributeSet
	    AttributeSet a = attributes.getResolveParent();
	    if ((a == null) && (parent != null)) {
		a = parent.getAttributes();
	    }
	    return a;
!!!2556443.java!!!	addAttribute(inout name : Object, inout value : Object) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    attributes = context.addAttribute(attributes, name, value);
!!!2556571.java!!!	addAttributes(inout attr : AttributeSet) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    attributes = context.addAttributes(attributes, attr);
!!!2556699.java!!!	removeAttribute(inout name : Object) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    attributes = context.removeAttribute(attributes, name);
!!!2556827.java!!!	removeAttributes(inout names : Enumeration) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    attributes = context.removeAttributes(attributes, names);
!!!2556955.java!!!	removeAttributes(inout attrs : AttributeSet) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    if (attrs == this) {
		attributes = context.getEmptySet();
	    } else {
		attributes = context.removeAttributes(attributes, attrs);
	    }
!!!2557083.java!!!	setResolveParent(inout parent : AttributeSet) : void
	    checkForIllegalCast();
	    AttributeContext context = getAttributeContext();
	    if (parent != null) {
		attributes = 
		    context.addAttribute(attributes, StyleConstants.ResolveAttribute,
					 parent);
	    } else {
		attributes = 
		    context.removeAttribute(attributes, StyleConstants.ResolveAttribute);
	    }
!!!2557211.java!!!	checkForIllegalCast() : void
	    Thread t = getCurrentWriter();
	    if ((t == null) || (t != Thread.currentThread())) {
		throw new StateInvariantError("Illegal cast to MutableAttributeSet");
	    }
!!!2557339.java!!!	getDocument() : Document
	    return AbstractDocument.this;
!!!2557467.java!!!	getParentElement() : Element
	    return parent;
!!!2557595.java!!!	getAttributes() : AttributeSet
	    return this;
!!!2557723.java!!!	getName() : String
	    if (attributes.isDefined(ElementNameAttribute)) {
		return (String) attributes.getAttribute(ElementNameAttribute);
	    }
	    return null;
!!!2558619.java!!!	getChildAt(in childIndex : int) : TreeNode
	    return (TreeNode)getElement(childIndex);
!!!2558747.java!!!	getChildCount() : int
	    return getElementCount();
!!!2558875.java!!!	getParent() : TreeNode
	    return (TreeNode)getParentElement();
!!!2559003.java!!!	getIndex(inout node : TreeNode) : int
	    for(int counter = getChildCount() - 1; counter >= 0; counter--)
		if(getChildAt(counter) == node)
		    return counter;
	    return -1;
!!!2559387.java!!!	writeObject(inout s : ObjectOutputStream) : void
	    s.defaultWriteObject();
	    StyleContext.writeAttributeSet(s, attributes);
!!!2559515.java!!!	readObject(inout s : ObjectInputStream) : void
	    s.defaultReadObject();
	    MutableAttributeSet attr = new SimpleAttributeSet();
	    StyleContext.readAttributeSet(s, attr);
	    AttributeContext context = getAttributeContext();
	    attributes = context.addAttributes(SimpleAttributeSet.EMPTY, attr);
