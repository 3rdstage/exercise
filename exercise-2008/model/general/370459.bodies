class Cursor
!!!6207899.java!!!	initCursorDir() : String
	String jhome =	(String) java.security.AccessController.doPrivileged(
               new sun.security.action.GetPropertyAction("java.home"));
	return jhome +
	    File.separator + "lib" + File.separator + "images" +
	    File.separator + "cursors" + File.separator;
!!!6208283.java!!!	setPData(in pData : long) : void
        this.pData = pData;
        if (!GraphicsEnvironment.isHeadless() && pData != 0) {
            if (disposer == null) {
                // anchor is null after deserialization
                if (anchor == null) {
                    anchor = new Object();
                }
                disposer = new CursorDisposer();
                sun.java2d.Disposer.addRecord(anchor, disposer);
            }
            disposer.pData = pData;                
        }
!!!6208411.java!!!	getPredefinedCursor(in type : int) : Cursor
	if (type < Cursor.DEFAULT_CURSOR || type > Cursor.MOVE_CURSOR) {
	    throw new IllegalArgumentException("illegal cursor type");
	}
	if (predefined[type] == null) {
	    predefined[type] = new Cursor(type);
	}
	return predefined[type];
!!!6208539.java!!!	getSystemCustomCursor(in name : String) : Cursor
        GraphicsEnvironment.checkHeadless();
	Cursor cursor = (Cursor)systemCustomCursors.get(name);

	if (cursor == null) {
	    synchronized(systemCustomCursors) {
		if (systemCustomCursorProperties == null)
		    loadSystemCustomCursorProperties();
	    }

	    String prefix = CursorDotPrefix + name;
	    String key    = prefix + DotFileSuffix;

	    if (!systemCustomCursorProperties.containsKey(key)) {
	        if (dbg.on) {
	            dbg.println("Cursor.getSystemCustomCursor(" + name + ") returned null");
	        } 
	        return null;
	    }

	    final String fileName =
		systemCustomCursorProperties.getProperty(key);

	    String localized = (String)systemCustomCursorProperties.getProperty(prefix + DotNameSuffix);

	    if (localized == null) localized = name;

	    String hotspot = (String)systemCustomCursorProperties.getProperty(prefix + DotHotspotSuffix);

	    if (hotspot == null)
	    	throw new AWTException("no hotspot property defined for cursor: " + name);

	    StringTokenizer st = new StringTokenizer(hotspot, ",");

	    if (st.countTokens() != 2)
	    	throw new AWTException("failed to parse hotspot property for cursor: " + name);

	    int x = 0;
	    int y = 0;

	    try {
		x = Integer.parseInt(st.nextToken());
		y = Integer.parseInt(st.nextToken());
	    } catch (NumberFormatException nfe) {
	    	throw new AWTException("failed to parse hotspot property for cursor: " + name);
	    }

	    try {
		final int fx = x;
		final int fy = y;
		final String flocalized = localized;

                cursor = (Cursor) java.security.AccessController.doPrivileged(
		    new java.security.PrivilegedExceptionAction() {
		    public Object run() throws Exception {
			Toolkit toolkit = Toolkit.getDefaultToolkit();
			Image image = toolkit.getImage(
			   systemCustomCursorDirPrefix + fileName);
			return toolkit.createCustomCursor(
				    image, new Point(fx,fy), flocalized);
		    }
		});
	    } catch (Exception e) {
		throw new AWTException(
                    "Exception: " + e.getClass() + " " + e.getMessage() +
                    " occurred while creating cursor " + name);
	    }

	    if (cursor == null) {
	        if (dbg.on) {
	            dbg.println("Cursor.getSystemCustomCursor(" + name + ") returned null");
		} 
	    } else {
	        systemCustomCursors.put(name, cursor);
	    }
	}

	return cursor;
!!!6208667.java!!!	getDefaultCursor() : Cursor
        return getPredefinedCursor(Cursor.DEFAULT_CURSOR);
!!!6208795.java!!!	Cursor(in type : int)
	if (type < Cursor.DEFAULT_CURSOR || type > Cursor.MOVE_CURSOR) {
	    throw new IllegalArgumentException("illegal cursor type");
	}
	this.type = type;

        // Lookup localized name.
        name = Toolkit.getProperty(cursorProperties[type][0],
                                   cursorProperties[type][1]);
!!!6208923.java!!!	Cursor(in name : String)
        this.type = Cursor.CUSTOM_CURSOR;
        this.name = name;
!!!6209051.java!!!	getType() : int
	return type;
!!!6209179.java!!!	getName() : String
	return name;
!!!6209307.java!!!	toString() : String
	return getClass().getName() + "[" + getName() + "]";
!!!6209435.java!!!	loadSystemCustomCursorProperties() : void
	synchronized(systemCustomCursors) {
	    systemCustomCursorProperties = new Properties();

            try {
	    	AccessController.doPrivileged(
                      new java.security.PrivilegedExceptionAction() {
		    public Object run() throws Exception {
			FileInputStream fis = null;
			try {
			    fis = new FileInputStream(
					   systemCustomCursorPropertiesFile);
			    systemCustomCursorProperties.load(fis);
			} finally {
			    if (fis != null)
				fis.close();
			}
			return null;
		    }
		});
	    } catch (Exception e) {
		systemCustomCursorProperties = null;
		 throw new AWTException("Exception: " + e.getClass() + " " +
		   e.getMessage() + " occurred while loading: " +
					systemCustomCursorPropertiesFile);
	    }
    	}
