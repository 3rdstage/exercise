class TableElementInfo
!!!9905179.java!!!	TableElementInfo(inout e : Element, inout parent : ElementInfo)
            super(e, parent);
!!!9905307.java!!!	getCaptionInfo() : ElementInfo
	    return caption;
!!!9905435.java!!!	validate() : void
            super.validate();
            updateGrid();
!!!9905563.java!!!	loadChildren(inout e : Element) : void

            for (int counter = 0; counter < e.getElementCount(); counter++) {
                Element child = e.getElement(counter);
                AttributeSet attrs = child.getAttributes();

                if (attrs.getAttribute(StyleConstants.NameAttribute) ==
                                       HTML.Tag.TR) {
                    addChild(new TableRowElementInfo(child, this, counter));

                } else if (attrs.getAttribute(StyleConstants.NameAttribute) ==
                                       HTML.Tag.CAPTION) {
		    // Handle captions as a special case since all other
		    // children are table rows.
		    caption = createElementInfo(child, this);
		}
            }
!!!9905691.java!!!	updateGrid() : void
            // Determine the max row/col count.
            int delta = 0;
            int maxCols = 0;
            int rows = 0;
            for (int counter = 0; counter < getChildCount(); counter++) {
                TableRowElementInfo row = getRow(counter);
                int prev = 0;
                for (int y = 0; y < delta; y++) {
                    prev = Math.max(prev, getRow(counter - y - 1).
                                    getColumnCount(y + 2));
                }
                delta = Math.max(row.getRowCount(), delta);
                delta--;
                maxCols = Math.max(maxCols, row.getColumnCount() + prev);
            }
            rows = getChildCount() + delta;

            // Alloc
            grid = new TableCellElementInfo[rows][];
            for (int counter = 0; counter < rows; counter++) {
                grid[counter] = new TableCellElementInfo[maxCols];
            }
            // Update
            for (int counter = 0; counter < rows; counter++) {
                getRow(counter).updateGrid(counter);
            }
!!!9905819.java!!!	getRow(in index : int) : TableRowElementInfo
            return (TableRowElementInfo)getChild(index);
!!!9905947.java!!!	getCell(in r : int, in c : int) : TableCellElementInfo
            if (validateIfNecessary() && r < grid.length &&
                                         c < grid[0].length) {
                return grid[r][c];
            }
            return null;
!!!9906075.java!!!	getRowExtentAt(in r : int, in c : int) : int
            TableCellElementInfo cell = getCell(r, c);

            if (cell != null) {
                int rows = cell.getRowCount();
                int delta = 1;

                while ((r - delta) >= 0 && grid[r - delta][c] == cell) {
                    delta++;
                }
                return rows - delta + 1;
            }
            return 0;
!!!9906203.java!!!	getColumnExtentAt(in r : int, in c : int) : int
            TableCellElementInfo cell = getCell(r, c);

            if (cell != null) {
                int cols = cell.getColumnCount();
                int delta = 1;

                while ((c - delta) >= 0 && grid[r][c - delta] == cell) {
                    delta++;
                }
                return cols - delta + 1;
            }
            return 0;
!!!9906331.java!!!	getRowCount() : int
            if (validateIfNecessary()) {
                return grid.length;
            }
            return 0;
!!!9906459.java!!!	getColumnCount() : int
            if (validateIfNecessary() && grid.length > 0) {
                return grid[0].length;
            }
            return 0;
!!!9906587.java!!!	getAccessibleContext() : AccessibleContext
	    if (accessibleContext == null) {
		accessibleContext = new TableAccessibleContext(this);
	    }
	    return accessibleContext;
