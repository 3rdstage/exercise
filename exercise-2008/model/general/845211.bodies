class X500Principal
!!!8679195.java!!!	X500Principal(inout x500Name : X500Name)
        thisX500Name = x500Name;
!!!8679323.java!!!	X500Principal(in name : String)
	if (name == null) {
	    throw new NullPointerException
		(sun.security.util.ResourcesMgr.getString
		("provided null name"));
	}

	try {
	    thisX500Name = new X500Name(name);
	} catch (Exception e) {
	    IllegalArgumentException iae = new IllegalArgumentException
			("improperly specified input name: " + name);
	    iae.initCause(e);
	    throw iae;
	}

!!!8679451.java!!!	X500Principal(in name : byte)
	try {
	    thisX500Name = new X500Name(name);
	} catch (Exception e) {
	    IllegalArgumentException iae = new IllegalArgumentException
			("improperly specified input name");
	    iae.initCause(e);
	    throw iae;
	}
!!!8679579.java!!!	X500Principal(inout is : InputStream)
	if (is == null) {
	    throw new NullPointerException("provided null input stream");
	}

	try {
	    if (is.markSupported())
		is.mark(is.available() + 1);
	    DerValue der = new DerValue(is);
	    thisX500Name = new X500Name(der.data);
	} catch (Exception e) {
	    if (is.markSupported()) {
		try {
		    is.reset();
		} catch (IOException ioe) {
		    IllegalArgumentException iae = new IllegalArgumentException
			("improperly specified input stream " +
			("and unable to reset input stream"));
		    iae.initCause(e);
		    throw iae;
		}
	    }
	    IllegalArgumentException iae = new IllegalArgumentException
			("improperly specified input stream");
	    iae.initCause(e);
	    throw iae;
	}
!!!8679707.java!!!	getName() : String
	return getName(X500Principal.RFC2253);
!!!8679835.java!!!	getName(in format : String) : String
	if (format != null) {
	    if (format.equalsIgnoreCase(RFC1779)) {
		return thisX500Name.getRFC1779Name();
	    } else if (format.equalsIgnoreCase(RFC2253)) {
		return thisX500Name.getRFC2253Name();
	    } else if (format.equalsIgnoreCase(CANONICAL)) {
		return thisX500Name.getRFC2253CanonicalName();
	    }
	}
        throw new IllegalArgumentException("invalid format specified");
!!!8679963.java!!!	getEncoded() : byte
	try {
	    return thisX500Name.getEncoded();
	} catch (IOException e) {
            throw new RuntimeException("unable to get encoding", e);
	}
!!!8680091.java!!!	toString() : String
	return thisX500Name.toString();
!!!8680219.java!!!	equals(inout o : Object) : boolean
        if (this == o) {
            return true;
	}
	if (o instanceof X500Principal == false) {
	    return false;
	}
	X500Principal other = (X500Principal)o;
	return this.thisX500Name.equals(other.thisX500Name);
!!!8680347.java!!!	hashCode() : int
	return thisX500Name.hashCode();
!!!8680475.java!!!	writeObject(inout s : ObjectOutputStream) : void
	s.writeObject(thisX500Name.getEncodedInternal());
!!!8680603.java!!!	readObject(inout s : ObjectInputStream) : void

	// re-create thisX500Name
	thisX500Name = new X500Name((byte[])s.readObject());
