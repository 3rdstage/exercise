format 66
"sasl" // src::javax::security::sasl
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/security/sasl"
  java_package "javax.security.sasl"
  classview 178331 "sasl"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1084955 "AuthenticationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown by a SASL mechanism implementation 
to indicate that the SASL
exchange has failed due to reasons related to authentication, such as 
an invalid identity, passphrase, or key.
<p>
Note that the lack of an AuthenticationException does not mean that
the failure was not due to an authentication error.  A SASL mechanism
implementation might throw the more general SaslException instead of
AuthenticationException if it is unable to determine the nature
of the failure, or if does not want to disclose the nature of
the failure, for example, due to security reasons.

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      classrelation 2219547 // <generalisation>
	relation 2219547 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2219547 // <generalisation>
	  b parent class_ref 1085083 // SaslException
      end

      operation 8682395 "AuthenticationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>AuthenticationException</tt>.
The root exception and the detailed message are null."
      end

      operation 8682523 "AuthenticationException"
	public explicit_return_type ""
	nparams 1
	  param in name "detail" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>AuthenticationException</tt> 
with a detailed message.
The root exception is null.
@param detail A possibly null string containing details of the exception.

@see java.lang.Throwable#getMessage"
      end

      operation 8682651 "AuthenticationException"
	public explicit_return_type ""
	nparams 2
	  param in name "detail" explicit_type "String"
	  param inout name "ex" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>AuthenticationException</tt> with a detailed message
and a root exception.

@param detail A possibly null string containing details of the exception.
@param ex A possibly null root exception that caused this exception.

@see java.lang.Throwable#getMessage
@see #getCause"
      end

      attribute 3141915 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3579708765071815007L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Use serialVersionUID from JSR 28 RI for interoperability "
      end
    end

    class 1085083 "SaslException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents an error that has occurred when using SASL.

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      classrelation 2219291 // <generalisation>
	relation 2219291 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2219291 // <generalisation>
	  b parent class_ref 179355 // IOException
      end

      classrelation 2219419 // _exception (<unidirectional association>)
	relation 2219419 --->
	  a role_name "_exception" private
	    comment "
The possibly null root cause exception.
@serial

 Required for serialization interoperability with JSR 28
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2219419 // _exception (<unidirectional association>)
	  b parent class_ref 164251 // Throwable
      end

      operation 8681627 "SaslException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>SaslException</tt>.
The root exception and the detailed message are null."
      end

      operation 8681755 "SaslException"
	public explicit_return_type ""
	nparams 1
	  param in name "detail" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>SaslException</tt> with a detailed message.
The root exception is null.
@param detail A possibly null string containing details of the exception.

@see java.lang.Throwable#getMessage"
      end

      operation 8681883 "SaslException"
	public explicit_return_type ""
	nparams 2
	  param in name "detail" explicit_type "String"
	  param inout name "ex" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <tt>SaslException</tt> with a detailed message
and a root exception.
For example, a SaslException might result from a problem with
the callback handler, which might throw a NoSuchCallbackException if
it does not support the requested callback, or throw an IOException
if it had problems obtaining data for the callback. The
SaslException's root exception would be then be the exception thrown
by the callback handler.

@param detail A possibly null string containing details of the exception.
@param ex A possibly null root exception that caused this exception.

@see java.lang.Throwable#getMessage
@see #getCause"
      end

      operation 8682011 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override Throwable.getCause() to ensure deserialized object from
JSR 28 would return same value for getCause() (i.e., _exception)."
      end

      operation 8682139 "initCause"
	public return_type class_ref 164251 // Throwable
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override Throwable.initCause() to match getCause() by updating
_exception as well."
      end

      operation 8682267 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this exception.
The string representation contains
this exception's class name, its detailed messsage, and if
it has a root exception, the string representation of the root
exception. This string representation
is meant for debugging and not meant to be interpreted
programmatically.
@return The non-null string representation of this exception.
@see java.lang.Throwable#getMessage

 Override Throwable.toString() to conform to JSR 28"
      end

      attribute 3141787 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4579784287983423626L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Use serialVersionUID from JSR 28 RI for interoperability "
      end
    end

    class 1085211 "AuthorizeCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This callback is used by <tt>SaslServer</tt> to determine whether
one entity (identified by an authenticated authentication id) 
can act on
behalf of another entity (identified by an authorization id).

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      classrelation 2219675 // <realization>
	relation 2219675 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2219675 // <realization>
	  b parent class_ref 525851 // Callback
      end

      classrelation 2219803 // <realization>
	relation 2219803 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2219803 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3142043 "authenticationID"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The (authenticated) authentication id to check.
@serial
"
      end

      attribute 3142171 "authorizationID"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The authorization id to check.
@serial
"
      end

      attribute 3142299 "authorizedID"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The id of the authorized entity. If null, the id of
the authorized entity is authorizationID.
@serial
"
      end

      attribute 3142427 "authorized"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A flag indicating whether the authentication id is allowed to
act on behalf of the authorization id. 
@serial
"
      end

      operation 8682779 "AuthorizeCallback"
	public explicit_return_type ""
	nparams 2
	  param in name "authnID" explicit_type "String"
	  param in name "authzID" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of <tt>AuthorizeCallback</tt>.

@param authnID	The (authenticated) authentication id.
@param authzID   The authorization id."
      end

      operation 8682907 "getAuthenticationID"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the authentication id to check.
@return The authentication id to check."
      end

      operation 8683035 "getAuthorizationID"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the authorization id to check.
@return The authentication id to check."
      end

      operation 8683163 "isAuthorized"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication id is allowed to
act on behalf of the authorization id.

@return <tt>true</tt> if authorization is allowed; <tt>false</tt> otherwise
@see #setAuthorized(boolean)
@see #getAuthorizedID()"
      end

      operation 8683291 "setAuthorized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ok" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the authorization is allowed.
@param ok <tt>true</tt> if authorization is allowed; <tt>false</tt> otherwise
@see #isAuthorized
@see #setAuthorizedID(java.lang.String)"
      end

      operation 8683419 "getAuthorizedID"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the id of the authorized user.
@return The id of the authorized user. <tt>null</tt> means the
authorization failed.
@see #setAuthorized(boolean)
@see #setAuthorizedID(java.lang.String)"
      end

      operation 8683547 "setAuthorizedID"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the id of the authorized entity. Called by handler only when the id
is different from getAuthorizationID(). For example, the id
might need to be canonicalized for the environment in which it
will be used.
@param id The id of the authorized user.
@see #setAuthorized(boolean)
@see #getAuthorizedID"
      end

      attribute 3142555 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2353344186490470805L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 1085339 "RealmCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This callback is used by <tt>SaslClient</tt> and <tt>SaslServer</tt>
to retrieve realm information.

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      classrelation 2219931 // <generalisation>
	relation 2219931 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2219931 // <generalisation>
	  b parent class_ref 1082651 // TextInputCallback
      end

      operation 8683675 "RealmCallback"
	public explicit_return_type ""
	nparams 1
	  param in name "prompt" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <tt>RealmCallback</tt> with a prompt.

@param prompt The non-null prompt to use to request the realm information.
@throws IllegalArgumentException If <tt>prompt</tt> is null or 
the empty string."
      end

      operation 8683803 "RealmCallback"
	public explicit_return_type ""
	nparams 2
	  param in name "prompt" explicit_type "String"
	  param in name "defaultRealmInfo" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <tt>RealmCallback</tt> with a prompt and default
realm information.

@param prompt The non-null prompt to use to request the realm information.
@param defaultRealmInfo The non-null default realm information to use.
@throws IllegalArgumentException If <tt>prompt</tt> is null or 
the empty string, 
or if <tt>defaultRealm</tt> is empty or null."
      end

      attribute 3142683 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4342673378785456908L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 1085467 "RealmChoiceCallback"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This callback is used by <tt>SaslClient</tt> and <tt>SaslServer</tt>
to obtain a realm given a list of realm choices.

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      classrelation 2220059 // <generalisation>
	relation 2220059 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2220059 // <generalisation>
	  b parent class_ref 1082395 // ChoiceCallback
      end

      operation 8683931 "RealmChoiceCallback"
	public explicit_return_type ""
	nparams 4
	  param in name "prompt" explicit_type "String"
	  param in name "choices" explicit_type "String"
	  param in name "defaultChoice" explicit_type "int"
	  param inout name "multiple" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <tt>RealmChoiceCallback</tt> with a prompt, a list of
choices and a default choice.

@param prompt the non-null prompt to use to request the realm.
@param choices the non-null list of realms to choose from.
@param defaultChoice the choice to be used as the default choice
when the list of choices is displayed. It is an index into
the <tt>choices</tt> arary.
@param multiple true if multiple choices allowed; false otherwise
@throws IllegalArgumentException If <tt>prompt</tt> is null or the empty string,
if <tt>choices</tt> has a length of 0, if any element from
<tt>choices</tt> is null or empty, or if <tt>defaultChoice</tt> 
does not fall within the array boundary of <tt>choices</tt>"
      end

      attribute 3142811 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8588141348846281332L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 1085595 "Sasl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A static class for creating SASL clients and servers.
<p>
This class defines the policy of how to locate, load, and instantiate
SASL clients and servers. 
<p>
For example, an application or library gets a SASL client by doing
something like:
<blockquote><pre>
SaslClient sc = Sasl.createSaslClient(mechanisms,
    authorizationId, protocol, serverName, props, callbackHandler);
</pre></blockquote>
It can then proceed to use the instance to create an authentication connection.
<p>
Similarly, a server gets a SASL server by using code that looks as follows:
<blockquote><pre>
SaslServer ss = Sasl.createSaslServer(mechanism,
    protocol, serverName, props, callbackHandler);
</pre></blockquote>

@since 1.5

@author Rosanna Lee
@author Rob Weltman"
      operation 8684059 "Sasl"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cannot create one of these"
      end

      attribute 3142939 "QOP"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"javax.security.sasl.qop\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies the quality-of-protection to use.
The property contains a comma-separated, ordered list
of quality-of-protection values that the
client or server is willing to support.  A qop value is one of
<ul>
<li><tt>\"auth\"</tt> - authentication only</li>
<li><tt>\"auth-int\"</tt> - authentication plus integrity protection</li>
<li><tt>\"auth-conf\"</tt> - authentication plus integrity and confidentiality
protection</li>
</ul>

The order of the list specifies the preference order of the client or
server. If this property is absent, the default qop is <tt>\"auth\"</tt>.
The value of this constant is <tt>\"javax.security.sasl.qop\"</tt>.
"
      end

      attribute 3143067 "STRENGTH"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"javax.security.sasl.strength\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies the cipher strength to use.
The property contains a comma-separated, ordered list
of cipher strength values that
the client or server is willing to support. A strength value is one of
<ul>
<li><tt>\"low\"</tt></li>
<li><tt>\"medium\"</tt></li>
<li><tt>\"high\"</tt></li>
</ul>
The order of the list specifies the preference order of the client or
server.  An implementation should allow configuration of the meaning
of these values.  An application may use the Java Cryptography
Extension (JCE) with JCE-aware mechanisms to control the selection of
cipher suites that match the strength values.
<BR>
If this property is absent, the default strength is 
<tt>\"high,medium,low\"</tt>.
The value of this constant is <tt>\"javax.security.sasl.strength\"</tt>.
"
      end

      attribute 3143195 "SERVER_AUTH"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  
    \"javax.security.sasl.server.authentication\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether the
server must authenticate to the client. The property contains 
<tt>\"true\"</tt> if the server must
authenticate the to client; <tt>\"false\"</tt> otherwise.
The default is <tt>\"false\"</tt>.
<br>The value of this constant is
<tt>\"javax.security.sasl.server.authentication\"</tt>.
"
      end

      attribute 3143323 "MAX_BUFFER"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"javax.security.sasl.maxbuffer\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies the maximum size of the receive
buffer in bytes of <tt>SaslClient</tt>/<tt>SaslServer</tt>.
The property contains the string representation of an integer.
<br>If this property is absent, the default size
is defined by the mechanism.
<br>The value of this constant is <tt>\"javax.security.sasl.maxbuffer\"</tt>.
"
      end

      attribute 3143451 "RAW_SEND_SIZE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"javax.security.sasl.rawsendsize\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies the maximum size of the raw send
buffer in bytes of <tt>SaslClient</tt>/<tt>SaslServer</tt>.
The property contains the string representation of an integer.
The value of this property is negotiated between the client and server
during the authentication exchange.
<br>The value of this constant is <tt>\"javax.security.sasl.rawsendsize\"</tt>.
"
      end

      attribute 3143579 "REUSE"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"javax.security.sasl.reuse\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether to reuse previously
authenticated session information. The property contains \"true\" if the
mechanism implementation may attempt to reuse previously authenticated
session information; it contains \"false\" if the implementation must
not reuse previously authenticated session information.  A setting of
\"true\" serves only as a hint: it does not necessarily entail actual
reuse because reuse might not be possible due to a number of reasons,
including, but not limited to, lack of mechanism support for reuse,
expiration of reusable information, and the peer's refusal to support
reuse.

The property's default value is \"false\".  The value of this constant
is \"javax.security.sasl.reuse\".

Note that all other parameters and properties required to create a
SASL client/server instance must be provided regardless of whether
this property has been supplied. That is, you cannot supply any less
information in anticipation of reuse.

Mechanism implementations that support reuse might allow customization
of its implementation, for factors such as cache size, timeouts, and
criteria for reuseability. Such customizations are
implementation-dependent.
"
      end

      attribute 3143707 "POLICY_NOPLAINTEXT"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.noplaintext\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies
whether mechanisms susceptible to simple plain passive attacks (e.g.,
\"PLAIN\") are not permitted. The property
contains <tt>\"true\"</tt> if such mechanisms are not permitted;
<tt>\"false\"</tt> if such mechanisms are permitted.
The default is <tt>\"false\"</tt>.
<br>The value of this constant is 
<tt>\"javax.security.sasl.policy.noplaintext\"</tt>.
"
      end

      attribute 3143835 "POLICY_NOACTIVE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.noactive\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether
mechanisms susceptible to active (non-dictionary) attacks
are not permitted.
The property contains <tt>\"true\"</tt> 
if mechanisms susceptible to active attacks
are not permitted; <tt>\"false\"</tt> if such mechanisms are permitted.
The default is <tt>\"false\"</tt>.
<br>The value of this constant is 
<tt>\"javax.security.sasl.policy.noactive\"</tt>.
"
      end

      attribute 3143963 "POLICY_NODICTIONARY"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.nodictionary\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether
mechanisms susceptible to passive dictionary attacks are not permitted.
The property contains <tt>\"true\"</tt>
if mechanisms susceptible to dictionary attacks are not permitted;
<tt>\"false\"</tt> if such mechanisms are permitted.
The default is <tt>\"false\"</tt>.
<br>
The value of this constant is 
<tt>\"javax.security.sasl.policy.nodictionary\"</tt>.
"
      end

      attribute 3144091 "POLICY_NOANONYMOUS"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.noanonymous\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether mechanisms that accept
anonymous login are not permitted. The property contains <tt>\"true\"</tt> 
if mechanisms that accept anonymous login are not permitted; 
<tt>\"false\"</tt>
if such mechanisms are permitted. The default is <tt>\"false\"</tt>.
<br>
The value of this constant is 
<tt>\"javax.security.sasl.policy.noanonymous\"</tt>.
"
      end

      attribute 3144219 "POLICY_FORWARD_SECRECY"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.forward\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether mechanisms that implement
forward secrecy between sessions are required. Forward secrecy
means that breaking into one session will not automatically
provide information for breaking into future sessions. 
The property
contains <tt>\"true\"</tt> if mechanisms that implement forward secrecy 
between sessions are required; <tt>\"false\"</tt> if such mechanisms 
are not required. The default is <tt>\"false\"</tt>.
<br>
The value of this constant is 
<tt>\"javax.security.sasl.policy.forward\"</tt>.
"
      end

      attribute 3144347 "POLICY_PASS_CREDENTIALS"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
    \"javax.security.sasl.policy.credentials\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of a property that specifies whether
mechanisms that pass client credentials are required. The property
contains <tt>\"true\"</tt> if mechanisms that pass
client credentials are required; <tt>\"false\"</tt>
if such mechanisms are not required. The default is <tt>\"false\"</tt>.
<br>
The value of this constant is 
<tt>\"javax.security.sasl.policy.credentials\"</tt>.
"
      end

      operation 8684187 "createSaslClient"
	class_operation public return_type class_ref 1085723 // SaslClient
	nparams 6
	  param in name "mechanisms" explicit_type "String"
	  param in name "authorizationId" explicit_type "String"
	  param in name "protocol" explicit_type "String"
	  param in name "serverName" explicit_type "String"
	  param inout name "props" type class_ref 136603 // Map
	  param inout name "cbh" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <tt>SaslClient</tt> using the parameters supplied.

This method uses the 
<a href=\"http://java.sun.com/j2se/1.4/docs/guide/security/CryptoSpec.html#Provider\">JCA Security Provider Framework</a>, described in the 
\"Java Cryptography Architecture API Specification & Reference\", for
locating and selecting a <tt>SaslClient</tt> implementation.

First, it 
obtains an ordered list of <tt>SaslClientFactory</tt> instances from
the registered security providers for the \"SaslClientFactory\" service
and the specified SASL mechanism(s). It then invokes
<tt>createSaslClient()</tt> on each factory instance on the list
until one produces a non-null <tt>SaslClient</tt> instance. It returns
the non-null <tt>SaslClient</tt> instance, or null if the search fails
to produce a non-null <tt>SaslClient</tt> instance.
<p>
A security provider for SaslClientFactory registers with the
JCA Security Provider Framework keys of the form <br>
<tt>SaslClientFactory.<em>mechanism_name</em></tt>
<br>
and values that are class names of implementations of 
<tt>javax.security.sasl.SaslClientFactory</tt>.

For example, a provider that contains a factory class,
<tt>com.wiz.sasl.digest.ClientFactory</tt>, that supports the
\"DIGEST-MD5\" mechanism would register the following entry with the JCA:
<tt>SaslClientFactory.DIGEST-MD5 com.wiz.sasl.digest.ClientFactory</tt>
<p>
See the
\"Java Cryptography Architecture API Specification & Reference\" 
for information about how to install and configure security service
 providers.

@param mechanisms The non-null list of mechanism names to try. Each is the
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param authorizationId The possibly null protocol-dependent 
identification to be used for authorization.
If null or empty, the server derives an authorization 
ID from the client's authentication credentials.
When the SASL authentication completes successfully, 
the specified entity is granted access. 

@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").

@param serverName The non-null fully-qualified host name of the server
to authenticate to.

@param props The possibly null set of properties used to
select the SASL mechanism and to configure the authentication
exchange of the selected mechanism.
For example, if <tt>props</tt> contains the 
<code>Sasl.POLICY_NOPLAINTEXT</code> property with the value 
<tt>\"true\"</tt>, then the selected
SASL mechanism must not be susceptible to simple plain passive attacks.
In addition to the standard properties declared in this class, 
other, possibly mechanism-specific, properties can be included. 
Properties not relevant to the selected mechanism are ignored.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a <tt>NameCallback</tt>.
The password is requested by using a <tt>PasswordCallback</tt>.
The realm is requested by using a <tt>RealmChoiceCallback</tt> if there is a list
of realms to choose from, and by using a <tt>RealmCallback</tt> if
the realm must be entered. 

@return A possibly null <tt>SaslClient</tt> created using the parameters
supplied. If null, cannot find a <tt>SaslClientFactory</tt>
that will produce one.
@exception SaslException If cannot create a <tt>SaslClient</tt> because
of an error."
      end

      operation 8684315 "loadFactory"
	class_operation private explicit_return_type "Object"
	nparams 2
	  param inout name "p" type class_ref 959643 // Provider
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8684443 "createSaslServer"
	class_operation public return_type class_ref 1085851 // SaslServer
	nparams 5
	  param in name "mechanism" explicit_type "String"
	  param in name "protocol" explicit_type "String"
	  param in name "serverName" explicit_type "String"
	  param inout name "props" type class_ref 136603 // Map
	  param inout name "cbh" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <tt>SaslServer</tt> for the specified mechanism. 

This method uses the 
<a href=\"http://java.sun.com/j2se/1.4/docs/guide/security/CryptoSpec.html#Provider\">JCA Security Provider Framework</a>, 
described in the 
\"Java Cryptography Architecture API Specification & Reference\", for
locating and selecting a <tt>SaslServer</tt> implementation.

First, it 
obtains an ordered list of <tt>SaslServerFactory</tt> instances from
the registered security providers for the \"SaslServerFactory\" service
and the specified mechanism. It then invokes
<tt>createSaslServer()</tt> on each factory instance on the list
until one produces a non-null <tt>SaslServer</tt> instance. It returns
the non-null <tt>SaslServer</tt> instance, or null if the search fails
to produce a non-null <tt>SaslServer</tt> instance.
<p>
A security provider for SaslServerFactory registers with the
JCA Security Provider Framework keys of the form <br>
<tt>SaslServerFactory.<em>mechanism_name</em></tt>
<br>
and values that are class names of implementations of 
<tt>javax.security.sasl.SaslServerFactory</tt>.

For example, a provider that contains a factory class,
<tt>com.wiz.sasl.digest.ServerFactory</tt>, that supports the
\"DIGEST-MD5\" mechanism would register the following entry with the JCA:
<tt>SaslServerFactory.DIGEST-MD5  com.wiz.sasl.digest.ServerFactory</tt>
<p>
See the
\"Java Cryptography Architecture API Specification & Reference\" 
for information about how to install and configure security 
service providers.

@param mechanism The non-null mechanism name. It must be an
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The non-null fully qualified host name of the server.
@param props The possibly null set of properties used to
select the SASL mechanism and to configure the authentication
exchange of the selected mechanism.
For example, if <tt>props</tt> contains the 
<code>Sasl.POLICY_NOPLAINTEXT</code> property with the value 
<tt>\"true\"</tt>, then the selected
SASL mechanism must not be susceptible to simple plain passive attacks.
In addition to the standard properties declared in this class, 
other, possibly mechanism-specific, properties can be included. 
Properties not relevant to the selected mechanism are ignored.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a <tt>NameCallback</tt>.
The password is requested by using a <tt>PasswordCallback</tt>.
The realm is requested by using a <tt>RealmChoiceCallback</tt> if there is a list
of realms to choose from, and by using a <tt>RealmCallback</tt> if
the realm must be entered. 

@return A possibly null <tt>SaslServer</tt> created using the parameters
supplied. If null, cannot find a <tt>SaslServerFactory</tt>
that will produce one.
@exception SaslException If cannot create a <tt>SaslServer</tt> because
of an error."
      end

      operation 8684571 "getSaslClientFactories"
	class_operation public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SaslClientFactory> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of known factories for producing <tt>SaslClient</tt>.
This method uses the same algorithm for locating factories as
<tt>createSaslClient()</tt>.
@return A non-null enumeration of known factories for producing
<tt>SaslClient</tt>.
@see #createSaslClient"
      end

      operation 8684699 "getSaslServerFactories"
	class_operation public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<SaslServerFactory> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of known factories for producing <tt>SaslServer</tt>.
This method uses the same algorithm for locating factories as
<tt>createSaslServer()</tt>.
@return A non-null enumeration of known factories for producing
<tt>SaslServer</tt>.
@see #createSaslServer"
      end

      operation 8684827 "getFactories"
	class_operation private return_type class_ref 136731 // Set
	nparams 1
	  param in name "serviceName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1085723 "SaslClient"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Performs SASL authentication as a client.
<p>
A protocol library such as one for LDAP gets an instance of this
class in order to perform authentication defined by a specific SASL
mechanism. Invoking methods on the <tt>SaslClient</tt> instance
process challenges and create responses according to the SASL
mechanism implemented by the <tt>SaslClient</tt>.
As the authentication proceeds, the instance
encapsulates the state of a SASL client's authentication exchange. 
<p>
Here's an example of how an LDAP library might use a <tt>SaslClient</tt>.
It first gets an instance of a <tt>SaslClient</tt>:
<blockquote><pre>
SaslClient sc = Sasl.createSaslClient(mechanisms,
    authorizationId, protocol, serverName, props, callbackHandler);
</pre></blockquote>
It can then proceed to use the client for authentication.
For example, an LDAP library might use the client as follows:
<blockquote><pre>
// Get initial response and send to server
byte[] response = (sc.hasInitialResponse() ? sc.evaluateChallenge(new byte[0]) :
    null);
LdapResult res = ldap.sendBindRequest(dn, sc.getName(), response);
while (!sc.isComplete() && 
    (res.status == SASL_BIND_IN_PROGRESS || res.status == SUCCESS)) {
    response = sc.evaluateChallenge(res.getBytes());
    if (res.status == SUCCESS) {
        // we're done; don't expect to send another BIND
        if (response != null) {
	       throw new SaslException(
	           \"Protocol error: attempting to send response after completion\");
	   }
        break;
    }
    res = ldap.sendBindRequest(dn, sc.getName(), response);
}
if (sc.isComplete() && res.status == SUCCESS) {
   String qop = (String) sc.getNegotiatedProperty(Sasl.QOP);
   if (qop != null 
       && (qop.equalsIgnoreCase(\"auth-int\") 
           || qop.equalsIgnoreCase(\"auth-conf\"))) {

     // Use SaslClient.wrap() and SaslClient.unwrap() for future
     // communication with server
	ldap.in = new SecureInputStream(sc, ldap.in);
	ldap.out = new SecureOutputStream(sc, ldap.out);
   }
}
</pre></blockquote>

If the mechanism has an initial response, the library invokes
<tt>evaluateChallenge()</tt> with an empty
challenge and to get initial response.
Protocols such as IMAP4, which do not include an initial response with
their first authentication command to the server, initiates the
authentication without first calling <tt>hasInitialResponse()</tt> 
or <tt>evaluateChallenge()</tt>.
When the server responds to the command, it sends an initial challenge.
For a SASL mechanism in which the client sends data first, the server should
have issued a challenge with no data. This will then result in a call
(on the client) to <tt>evaluateChallenge()</tt> with an empty challenge.

@since 1.5

@see Sasl
@see SaslClientFactory

@author Rosanna Lee
@author Rob Weltman"
      operation 8684955 "getMechanismName"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IANA-registered mechanism name of this SASL client.
(e.g. \"CRAM-MD5\", \"GSSAPI\").
@return A non-null string representing the IANA-registered mechanism name."
      end

      operation 8685083 "hasInitialResponse"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this mechanism has an optional initial response.
If true, caller should call <tt>evaluateChallenge()</tt> with an
empty array to get the initial response.

@return true if this mechanism has an initial response."
      end

      operation 8685211 "evaluateChallenge"
	abstract public explicit_return_type "byte"
	nparams 1
	  param in name "challenge" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the challenge data and generates a response.
If a challenge is received from the server during the authentication 
process, this method is called to prepare an appropriate next 
response to submit to the server.

@param challenge The non-null challenge sent from the server.
The challenge array may have zero length. 

@return The possibly null reponse to send to the server.
It is null if the challenge accompanied a \"SUCCESS\" status and the challenge
only contains data for the client to update its state and no response
needs to be sent to the server. The response is a zero-length byte 
array if the client is to send a response with no data. 
@exception SaslException If an error occurred while processing
the challenge or generating a response."
      end

      operation 8685339 "isComplete"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication exchange has completed.
This method may be called at any time, but typically, it
will not be called until the caller has received indication
from the server
(in a protocol-specific manner) that the exchange has completed. 

@return true if the authentication exchange has completed; false otherwise."
      end

      operation 8685467 "unwrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param in name "incoming" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unwraps a byte array received from the server.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true) and only if
the authentication exchange has negotiated integrity and/or privacy 
as the quality of protection; otherwise, an 
<tt>IllegalStateException</tt> is thrown.
<p>
<tt>incoming</tt> is the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
<tt>offset</tt> and <tt>len</tt> specify the portion of <tt>incoming</tt>
to use.

@param incoming A non-null byte array containing the encoded bytes
		      from the server.
@param offset The starting position at <tt>incoming</tt> of the bytes to use.
@param len The number of bytes from <tt>incoming</tt> to use.
@return A non-null byte array containing the decoded bytes.
@exception SaslException if <tt>incoming</tt> cannot be successfully 
unwrapped.
@exception IllegalStateException if the authentication exchange has 
not completed, or  if the negotiated quality of protection 
has neither integrity nor privacy."
      end

      operation 8685595 "wrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param in name "outgoing" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array to be sent to the server.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true) and only if
the authentication exchange has negotiated integrity and/or privacy 
as the quality of protection; otherwise, an 
<tt>IllegalStateException</tt> is thrown.
<p>
The result of this method will make up the contents of the SASL buffer 
as defined in RFC 2222 without the leading four octet field that 
represents the length.
<tt>offset</tt> and <tt>len</tt> specify the portion of <tt>outgoing</tt>
to use.

@param outgoing A non-null byte array containing the bytes to encode.
@param offset The starting position at <tt>outgoing</tt> of the bytes to use.
@param len The number of bytes from <tt>outgoing</tt> to use.
@return A non-null byte array containing the encoded bytes.
@exception SaslException if <tt>outgoing</tt> cannot be successfully 
wrapped.
@exception IllegalStateException if the authentication exchange has 
not completed, or if the negotiated quality of protection 
has neither integrity nor privacy."
      end

      operation 8685723 "getNegotiatedProperty"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "propName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the negotiated property.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true); otherwise, an
<tt>IllegalStateException</tt> is thrown.

@param propName The non-null property name.
@return The value of the negotiated property. If null, the property was
not negotiated or is not applicable to this mechanism.
@exception IllegalStateException if this authentication exchange 
has not completed"
      end

      operation 8685851 "dispose"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of any system resources or security-sensitive information
the SaslClient might be using. Invoking this method invalidates
the SaslClient instance. This method is idempotent.
@throws SaslException If a problem was encountered while disposing
the resources."
      end
    end

    class 1085851 "SaslServer"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Performs SASL authentication as a server.
<p>
A server such an LDAP server gets an instance of this
class in order to perform authentication defined by a specific SASL
mechanism. Invoking methods on the <tt>SaslServer</tt> instance
generates challenges according to the SASL
mechanism implemented by the <tt>SaslServer</tt>.
As the authentication proceeds, the instance
encapsulates the state of a SASL server's authentication exchange. 
<p>
Here's an example of how an LDAP server might use a <tt>SaslServer</tt>.
It first gets an instance of a <tt>SaslServer</tt> for the SASL mechanism
requested by the client:
<blockquote><pre>
SaslServer ss = Sasl.createSaslServer(mechanism,
    \"ldap\", myFQDN, props, callbackHandler);
</pre></blockquote>
It can then proceed to use the server for authentication.
For example, suppose the LDAP server received an LDAP BIND request
containing the name of the SASL mechanism and an (optional) initial
response. It then might use the server as follows:
<blockquote><pre>
while (!ss.isComplete()) {
    try {
        byte[] challenge = ss.evaluateResponse(response);
        if (ss.isComplete()) {
            status = ldap.sendBindResponse(mechanism, challenge, SUCCESS);
        } else {
            status = ldap.sendBindResponse(mechanism, challenge, 
SASL_BIND_IN_PROGRESS);
            response = ldap.readBindRequest();
        }
    } catch (SaslException e) {
	    status = ldap.sendErrorResponse(e);
	    break;
    }
}
if (ss.isComplete() && status == SUCCESS) {
   String qop = (String) sc.getNegotiatedProperty(Sasl.QOP);
   if (qop != null 
       && (qop.equalsIgnoreCase(\"auth-int\") 
           || qop.equalsIgnoreCase(\"auth-conf\"))) {

     // Use SaslServer.wrap() and SaslServer.unwrap() for future
     // communication with client
	ldap.in = new SecureInputStream(ss, ldap.in);
	ldap.out = new SecureOutputStream(ss, ldap.out);
   }
}
</pre></blockquote>

@since 1.5

@see Sasl
@see SaslServerFactory

@author Rosanna Lee
@author Rob Weltman"
      operation 8686235 "getMechanismName"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IANA-registered mechanism name of this SASL server.
(e.g. \"CRAM-MD5\", \"GSSAPI\").
@return A non-null string representing the IANA-registered mechanism name."
      end

      operation 8686363 "evaluateResponse"
	abstract public explicit_return_type "byte"
	nparams 1
	  param in name "response" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the response data and generates a challenge.

If a response is received from the client during the authentication 
process, this method is called to prepare an appropriate next 
challenge to submit to the client. The challenge is null if the 
authentication has succeeded and no more challenge data is to be sent 
to the client. It is non-null if the authentication must be continued 
by sending a challenge to the client, or if the authentication has 
succeeded but challenge data needs to be processed by the client. 
<tt>isComplete()</tt> should be called 
after each call to <tt>evaluateResponse()</tt>,to determine if any further 
response is needed from the client. 

@param response The non-null (but possibly empty) response sent
by the client.

@return The possibly null challenge to send to the client.
It is null if the authentication has succeeded and there is
no more challenge data to be sent to the client.
@exception SaslException If an error occurred while processing
the response or generating a challenge."
      end

      operation 8686491 "isComplete"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the authentication exchange has completed.
This method is typically called after each invocation of 
<tt>evaluateResponse()</tt> to determine whether the 
authentication has completed successfully or should be continued. 
@return true if the authentication exchange has completed; false otherwise."
      end

      operation 8686619 "getAuthorizationID"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports the authorization ID in effect for the client of this
session. 
This method can only be called if isComplete() returns true. 
@return The authorization ID of the client.
@exception IllegalStateException if this authentication session has not completed"
      end

      operation 8686747 "unwrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param in name "incoming" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unwraps a byte array received from the client.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true) and only if
the authentication exchange has negotiated integrity and/or privacy 
as the quality of protection; otherwise, 
an <tt>IllegalStateException</tt> is thrown.
<p>
<tt>incoming</tt> is the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
<tt>offset</tt> and <tt>len</tt> specify the portion of <tt>incoming</tt>
to use.

@param incoming A non-null byte array containing the encoded bytes
		      from the client.
@param offset The starting position at <tt>incoming</tt> of the bytes to use.
@param len The number of bytes from <tt>incoming</tt> to use.
@return A non-null byte array containing the decoded bytes.
@exception SaslException if <tt>incoming</tt> cannot be successfully 
unwrapped.
@exception IllegalStateException if the authentication exchange has 
not completed, or if the negotiated quality of protection 
has neither integrity nor privacy"
      end

      operation 8686875 "wrap"
	abstract public explicit_return_type "byte"
	nparams 3
	  param in name "outgoing" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wraps a byte array to be sent to the client.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true) and only if
the authentication exchange has negotiated integrity and/or privacy 
as the quality of protection; otherwise, a <tt>SaslException</tt> is thrown.
<p>
The result of this method
will make up the contents of the SASL buffer as defined in RFC 2222
without the leading four octet field that represents the length.
<tt>offset</tt> and <tt>len</tt> specify the portion of <tt>outgoing</tt>
to use.

@param outgoing A non-null byte array containing the bytes to encode.
@param offset The starting position at <tt>outgoing</tt> of the bytes to use.
@param len The number of bytes from <tt>outgoing</tt> to use.
@return A non-null byte array containing the encoded bytes.
@exception SaslException if <tt>outgoing</tt> cannot be successfully 
wrapped.
@exception IllegalStateException if the authentication exchange has 
not completed, or if the negotiated quality of protection has 
neither integrity nor privacy."
      end

      operation 8687003 "getNegotiatedProperty"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "propName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the negotiated property.
This method can be called only after the authentication exchange has
completed (i.e., when <tt>isComplete()</tt> returns true); otherwise, an
<tt>IllegalStateException</tt> is thrown.

@param propName the property
@return The value of the negotiated property. If null, the property was
not negotiated or is not applicable to this mechanism.
@exception IllegalStateException if this authentication exchange has not completed"
      end

      operation 8687131 "dispose"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of any system resources or security-sensitive information
the SaslServer might be using. Invoking this method invalidates
the SaslServer instance. This method is idempotent.
@throws SaslException If a problem was encountered while disposing
the resources."
      end
    end

    class 1085979 "SaslClientFactory"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface for creating instances of <tt>SaslClient</tt>.
A class that implements this interface
must be thread-safe and handle multiple simultaneous 
requests. It must also have a public constructor that accepts no 
argument. 
<p>
This interface is not normally accessed directly by a client, which will use the
<tt>Sasl</tt> static methods
instead. However, a particular environment may provide and install a
new or different <tt>SaslClientFactory</tt>.

@since 1.5

@see SaslClient
@see Sasl

@author Rosanna Lee
@author Rob Weltman"
      operation 8685979 "createSaslClient"
	abstract public return_type class_ref 1085723 // SaslClient
	nparams 6
	  param in name "mechanisms" explicit_type "String"
	  param in name "authorizationId" explicit_type "String"
	  param in name "protocol" explicit_type "String"
	  param in name "serverName" explicit_type "String"
	  param inout name "props" type class_ref 136603 // Map
	  param inout name "cbh" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SaslClient using the parameters supplied.

@param mechanisms The non-null list of mechanism names to try. Each is the
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param authorizationId The possibly null protocol-dependent 
identification to be used for authorization.
If null or empty, the server derives an authorization 
ID from the client's authentication credentials.
When the SASL authentication completes successfully, 
the specified entity is granted access. 
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The non-null fully qualified host name 
of the server to authenticate to.
@param props The possibly null set of properties used to select the SASL
mechanism and to configure the authentication exchange of the selected
mechanism. See the <tt>Sasl</tt> class for a list of standard properties. 
Other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a <tt>NameCallback</tt>.
The password is requested by using a <tt>PasswordCallback</tt>.
The realm is requested by using a <tt>RealmChoiceCallback</tt> if there is a list
of realms to choose from, and by using a <tt>RealmCallback</tt> if
the realm must be entered. 

@return A possibly null <tt>SaslClient</tt> created using the parameters
supplied. If null, this factory cannot produce a <tt>SaslClient</tt>
using the parameters supplied.
@exception SaslException If cannot create a <tt>SaslClient</tt> because
of an error."
      end

      operation 8686107 "getMechanismNames"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "props" type class_ref 136603 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of names of mechanisms that match the specified
mechanism selection policies.
@param props The possibly null set of properties used to specify the
security policy of the SASL mechanisms. For example, if <tt>props</tt>
contains the <tt>Sasl.POLICY_NOPLAINTEXT</tt> property with the value
<tt>\"true\"</tt>, then the factory must not return any SASL mechanisms
that are susceptible to simple plain passive attacks.
See the <tt>Sasl</tt> class for a complete list of policy properties.
Non-policy related properties, if present in <tt>props</tt>, are ignored.
@return A non-null array containing a IANA-registered SASL mechanism names."
      end
    end

    class 1086107 "SaslServerFactory"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface for creating instances of <tt>SaslServer</tt>.
A class that implements this interface
must be thread-safe and handle multiple simultaneous 
requests. It must also have a public constructor that accepts no 
argument. 
<p>
This interface is not normally accessed directly by a server, which will use the
<tt>Sasl</tt> static methods
instead. However, a particular environment may provide and install a
new or different <tt>SaslServerFactory</tt>.

@since 1.5

@see SaslServer
@see Sasl

@author Rosanna Lee
@author Rob Weltman"
      operation 8687259 "createSaslServer"
	abstract public return_type class_ref 1085851 // SaslServer
	nparams 5
	  param in name "mechanism" explicit_type "String"
	  param in name "protocol" explicit_type "String"
	  param in name "serverName" explicit_type "String"
	  param inout name "props" type class_ref 136603 // Map
	  param inout name "cbh" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 1085083 // SaslException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <tt>SaslServer</tt> using the parameters supplied.
It returns null
if no <tt>SaslServer</tt> can be created using the parameters supplied.
Throws <tt>SaslException</tt> if it cannot create a <tt>SaslServer</tt>
because of an error.

@param mechanism The non-null
IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").
@param protocol The non-null string name of the protocol for which
the authentication is being performed (e.g., \"ldap\").
@param serverName The non-null fully qualified host name of the server
to authenticate to.
@param props The possibly null set of properties used to select the SASL
mechanism and to configure the authentication exchange of the selected
mechanism. See the <tt>Sasl</tt> class for a list of standard properties. 
Other, possibly mechanism-specific, properties can be included.
Properties not relevant to the selected mechanism are ignored.

@param cbh The possibly null callback handler to used by the SASL
mechanisms to get further information from the application/library
to complete the authentication. For example, a SASL mechanism might
require the authentication ID, password and realm from the caller.
The authentication ID is requested by using a <tt>NameCallback</tt>.
The password is requested by using a <tt>PasswordCallback</tt>.
The realm is requested by using a <tt>RealmChoiceCallback</tt> if there is a list
of realms to choose from, and by using a <tt>RealmCallback</tt> if
the realm must be entered. 

@return A possibly null <tt>SaslServer</tt> created using the parameters
supplied. If null, this factory cannot produce a <tt>SaslServer</tt>
using the parameters supplied.
@exception SaslException If cannot create a <tt>SaslServer</tt> because
of an error."
      end

      operation 8687387 "getMechanismNames"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "props" type class_ref 136603 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of names of mechanisms that match the specified
mechanism selection policies.
@param props The possibly null set of properties used to specify the
security policy of the SASL mechanisms. For example, if <tt>props</tt>
contains the <tt>Sasl.POLICY_NOPLAINTEXT</tt> property with the value
<tt>\"true\"</tt>, then the factory must not return any SASL mechanisms
that are susceptible to simple plain passive attacks.
See the <tt>Sasl</tt> class for a complete list of policy properties.
Non-policy related properties, if present in <tt>props</tt>, are ignored.
@return A non-null array containing a IANA-registered SASL mechanism names."
      end
    end
  end

  deploymentview 172187 "sasl"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 833819 "SaslException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1085083 // SaslException
      end
      comment "@(#)SaslException.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 833947 "AuthenticationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1084955 // AuthenticationException
      end
      comment "@(#)AuthenticationException.java	1.4 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834075 "AuthorizeCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.Callback;
${definition}"
      associated_classes
	class_ref 1085211 // AuthorizeCallback
      end
      comment "@(#)AuthorizeCallback.java	1.10 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834203 "RealmCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.TextInputCallback;
${definition}"
      associated_classes
	class_ref 1085339 // RealmCallback
      end
      comment "@(#)RealmCallback.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834331 "RealmChoiceCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.ChoiceCallback;
${definition}"
      associated_classes
	class_ref 1085467 // RealmChoiceCallback
      end
      comment "@(#)RealmChoiceCallback.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834459 "Sasl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.callback.CallbackHandler;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.security.Provider;
import java.security.Security;
${definition}"
      associated_classes
	class_ref 1085595 // Sasl
      end
      comment "@(#)Sasl.java	1.21 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834587 "SaslClient"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1085723 // SaslClient
      end
      comment "@(#)SaslClient.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834715 "SaslClientFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import javax.security.auth.callback.CallbackHandler;
${definition}"
      associated_classes
	class_ref 1085979 // SaslClientFactory
      end
      comment "@(#)SaslClientFactory.java	1.15 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834843 "SaslServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1085851 // SaslServer
      end
      comment "@(#)SaslServer.java	1.13 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 834971 "SaslServerFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import javax.security.auth.callback.CallbackHandler;
${definition}"
      associated_classes
	class_ref 1086107 // SaslServerFactory
      end
      comment "@(#)SaslServerFactory.java	1.14 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
