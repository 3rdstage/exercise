format 66
"spi" // src::javax::imageio::spi
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/imageio/spi"
  java_package "javax.imageio.spi"
  classview 149019 "spi"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 341147 "ImageReaderSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The service provider interface (SPI) for <code>ImageReader</code>s.
For more information on service provider classes, see the class comment
for the <code>IIORegistry</code> class.

<p> Each <code>ImageReaderSpi</code> provides several types of information
about the <code>ImageReader</code> class with which it is associated.

<p> The name of the vendor who defined the SPI class and a
brief description of the class are available via the
<code>getVendorName</code>, <code>getDescription</code>,
and <code>getVersion</code> methods.
These methods may be internationalized to provide locale-specific
output.  These methods are intended mainly to provide short,
human-readable information that might be used to organize a pop-up
menu or other list.

<p> Lists of format names, file suffixes, and MIME types associated
with the service may be obtained by means of the
<code>getFormatNames</code>, <code>getFileSuffixes</code>, and
<code>getMIMETypes</code> methods.  These methods may be used to
identify candidate <code>ImageReader</code>s for decoding a
particular file or stream based on manual format selection, file
naming, or MIME associations (for example, when accessing a file
over HTTP or as an email attachment).

<p> A more reliable way to determine which <code>ImageReader</code>s
are likely to be able to parse a particular data stream is provided
by the <code>canDecodeInput</code> method.  This methods allows the
service provider to inspect the actual stream contents.

<p> Finally, an instance of the <code>ImageReader</code> class
associated with this service provider may be obtained by calling
the <code>createReaderInstance</code> method.  Any heavyweight
initialization, such as the loading of native libraries or creation
of large tables, should be deferred at least until the first
invocation of this method.

@see IIORegistry
@see javax.imageio.ImageReader

@version 0.5"
      classrelation 496923 // <generalisation>
	relation 496923 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 496923 // <generalisation>
	  b parent class_ref 343195 // ImageReaderWriterSpi
      end

      classrelation 497051 // STANDARD_INPUT_TYPE (<unidirectional association>)
	relation 497051 --->
	  a role_name "STANDARD_INPUT_TYPE" multiplicity "[]" init_value "= 
        { ImageInputStream.class }" class_relation const_relation public
	    comment "
A single-element array, initially containing
<code>ImageInputStream.class</code>, to be returned from
<code>getInputTypes</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 497051 // STANDARD_INPUT_TYPE (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 497179 // inputTypes (<unidirectional association>)
	relation 497179 --->
	  a role_name "inputTypes" multiplicity "[]" init_value "=  null" protected
	    comment "
An array of <code>Class</code> objects to be returned from
<code>getInputTypes</code>, initially <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 497179 // inputTypes (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 528155 "writerSpiNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of strings to be returned from
<code>getImageWriterSpiNames</code>, initially
<code>null</code>.
"
      end

      classrelation 497307 // readerClass (<unidirectional association>)
	relation 497307 --->
	  a role_name "readerClass" init_value "=  null" private
	    comment "
The <code>Class</code> of the reader, initially
<code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 497307 // readerClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 1910683 "ImageReaderSpi"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageReaderSpi</code>.  It is up to
the subclass to initialize instance variables and/or override
method implementations in order to provide working versions of
all methods."
      end

      operation 1910811 "ImageReaderSpi"
	public explicit_return_type ""
	nparams 18
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	  param in name "names" explicit_type "String"
	  param in name "suffixes" explicit_type "String"
	  param in name "MIMETypes" explicit_type "String"
	  param in name "readerClassName" explicit_type "String"
	  param inout name "inputTypes" type class_ref 164635 // Class
	  param in name "writerSpiNames" explicit_type "String"
	  param inout name "supportsStandardStreamMetadataFormat" explicit_type "boolean"
	  param in name "nativeStreamMetadataFormatName" explicit_type "String"
	  param in name "nativeStreamMetadataFormatClassName" explicit_type "String"
	  param in name "extraStreamMetadataFormatNames" explicit_type "String"
	  param in name "extraStreamMetadataFormatClassNames" explicit_type "String"
	  param inout name "supportsStandardImageMetadataFormat" explicit_type "boolean"
	  param in name "nativeImageMetadataFormatName" explicit_type "String"
	  param in name "nativeImageMetadataFormatClassName" explicit_type "String"
	  param in name "extraImageMetadataFormatNames" explicit_type "String"
	  param in name "extraImageMetadataFormatClassNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7}[] ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11}[] ${p11}, ${t12}[] ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16}[] ${p16}, ${t17}[] ${p17}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageReaderSpi</code> with a given
set of values.

@param vendorName the vendor name, as a non-<code>null</code>
<code>String</code>.
@param version a version identifier, as a non-<code>null</code>
<code>String</code>.
@param names a non-<code>null</code> array of
<code>String</code>s indicating the format names.  At least one
entry must be present.
@param suffixes an array of <code>String</code>s indicating the
common file suffixes.  If no suffixes are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param MIMETypes an array of <code>String</code>s indicating
the format's MIME types.  If no MIME types are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param readerClassName the fully-qualified name of the
associated <code>ImageReader</code> class, as a
non-<code>null</code> <code>String</code>.
@param inputTypes a non-<code>null</code> array of
<code>Class</code> objects of length at least 1 indicating the
legal input types.
@param writerSpiNames an array <code>String</code>s naming the
classes of all associated <code>ImageWriter</code>s, or
<code>null</code>.  An array of length 0 is normalized to
<code>null</code>.
@param supportsStandardStreamMetadataFormat a
<code>boolean</code> that indicates whether a stream metadata
object can use trees described by the standard metadata format.
@param nativeStreamMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeStreamMetadataFormatName</code>.
@param nativeStreamMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeStreamMetadataFormat</code>.
@param extraStreamMetadataFormatNames an array of
<code>String</code>s, or <code>null</code>, to be returned from
<code>getExtraStreamMetadataFormatNames</code>.  An array of length
0 is normalized to <code>null</code>.
@param extraStreamMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getStreamMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.
@param supportsStandardImageMetadataFormat a
<code>boolean</code> that indicates whether an image metadata
object can use trees described by the standard metadata format.
@param nativeImageMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeImageMetadataFormatName</code>. 
@param nativeImageMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeImageMetadataFormat</code>.
@param extraImageMetadataFormatNames an array of
<code>String</code>s to be returned from
<code>getExtraImageMetadataFormatNames</code>.  An array of length 0
is normalized to <code>null</code>.
@param extraImageMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getImageMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>names</code>
is <code>null</code> or has length 0.
@exception IllegalArgumentException if <code>readerClassName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>inputTypes</code>
is <code>null</code> or has length 0."
      end

      operation 1910939 "getInputTypes"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Class</code> objects indicating what
types of objects may be used as arguments to the reader's
<code>setInput</code> method.

<p> For most readers, which only accept input from an
<code>ImageInputStream</code>, a single-element array
containing <code>ImageInputStream.class</code> should be
returned.

@return a non-<code>null</code> array of
<code>Class</code>objects of length at least 1."
      end

      operation 1911067 "canDecodeInput"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "source" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the supplied source object appears
to be of the format supported by this reader.  Returning
<code>true</code> from this method does not guarantee that
reading will succeed, only that there appears to be a
reasonable chance of success based on a brief inspection of the
stream contents.  If the source is an
<code>ImageInputStream</code>, implementations will commonly
check the first several bytes of the stream for a \"magic
number\" associated with the format.  Once actual reading has
commenced, the reader may still indicate failure at any time
prior to the completion of decoding.

<p> It is important that the state of the object not be
disturbed in order that other <code>ImageReaderSpi</code>s can
properly determine whether they are able to decode the object.
In particular, if the source is an
<code>ImageInputStream</code>, a
<code>mark</code>/<code>reset</code> pair should be used to
preserve the stream position.

<p> Formats such as \"raw,\" which can potentially attempt
to read nearly any stream, should return <code>false</code>
in order to avoid being invoked in preference to a closer
match.

<p> If <code>source</code> is not an instance of one of the
classes returned by <code>getInputTypes</code>, the method
should simply return <code>false</code>.

@param source the object (typically an
<code>ImageInputStream</code>) to be decoded.

@return <code>true</code> if it is likely that this stream can
be decoded.

@exception IllegalArgumentException if <code>source</code> is
<code>null</code>.
@exception IOException if an I/O error occurs while reading the
stream."
      end

      operation 1911195 "createReaderInstance"
	public return_type class_ref 341019 // ImageReader
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageReader</code>
implementation associated with this service provider.
The returned object will initially be in an initial state
as if its <code>reset</code> method had been called.

<p> The default implementation simply returns
<code>createReaderInstance(null)</code>.

@return an <code>ImageReader</code> instance.

@exception IOException if an error occurs during loading, 
or initialization of the reader class, or during instantiation
or initialization of the reader object."
      end

      operation 1911323 "createReaderInstance"
	abstract public return_type class_ref 341019 // ImageReader
	nparams 1
	  param inout name "extension" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageReader</code>
implementation associated with this service provider.
The returned object will initially be in an initial state
as if its <code>reset</code> method had been called.

<p> An <code>Object</code> may be supplied to the plug-in at
construction time.  The nature of the object is entirely
plug-in specific.

<p> Typically, a plug-in will implement this method using code
such as <code>return new MyImageReader(this)</code>.

@param extension a plug-in specific extension object, which may
be <code>null</code>.

@return an <code>ImageReader</code> instance.

@exception IOException if the attempt to instantiate
the reader fails.
@exception IllegalArgumentException if the
<code>ImageReader</code>'s contructor throws an
<code>IllegalArgumentException</code> to indicate that the
extension object is unsuitable."
      end

      operation 1911451 "isOwnReader"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "reader" type class_ref 341019 // ImageReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageReader</code> object
passed in is an instance of the <code>ImageReader</code> 
associated with this service provider.

<p> The default implementation compares the fully-qualified
class name of the <code>reader</code> argument with the class
name passed into the constructor.  This method may be overridden
if more sophisticated checking is required.

@param reader an <code>ImageReader</code> instance.

@return <code>true</code> if <code>reader</code> is recognized.

@exception IllegalArgumentException if <code>reader</code> is
<code>null</code>."
      end

      operation 1911579 "getImageWriterSpiNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the fully
qualified names of all the <code>ImageWriterSpi</code> classes
that can understand the internal metadata representation used
by the <code>ImageReader</code> associated with this service
provider, or <code>null</code> if there are no such
<code>ImageWriter</code>s specified.  If a
non-<code>null</code> value is returned, it must have non-zero
length.

<p> The first item in the array must be the name of the service
provider for the \"preferred\" writer, as it will be used to
instantiate the <code>ImageWriter</code> returned by
<code>ImageIO.getImageWriter(ImageReader)</code>.

<p> This mechanism may be used to obtain
<code>ImageWriters</code> that will understand the internal
structure of non-pixel meta-data (see
<code>IIOTreeInfo</code>) generated by an
<code>ImageReader</code>.  By obtaining this data from the
<code>ImageReader</code> and passing it on to one of the
<code>ImageWriters</code> obtained with this method, a client
program can read an image, modify it in some way, and write it
back out while preserving all meta-data, without having to
understand anything about the internal structure of the
meta-data, or even about the image format.

@return an array of <code>String</code>s of length at least 1
containing names of <code>ImageWriterSpi</code>, or
<code>null</code>.

@see javax.imageio.ImageIO#getImageWriter(ImageReader)"
      end
    end

    class 343195 "ImageReaderWriterSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A superclass containing instance variables and methods common to
<code>ImageReaderSpi</code> and <code>ImageWriterSpi</code>.

@see IIORegistry
@see ImageReaderSpi
@see ImageWriterSpi

@version 0.5"
      classrelation 496795 // <generalisation>
	relation 496795 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 496795 // <generalisation>
	  b parent class_ref 343323 // IIOServiceProvider
      end

      attribute 526363 "names"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of strings to be returned from
<code>getFormatNames</code>, initially <code>null</code>.
Constructors should set this to a non-<code>null</code> value.
"
      end

      attribute 526491 "suffixes"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of strings to be returned from
<code>getFileSuffixes</code>, initially <code>null</code>.
"
      end

      attribute 526619 "MIMETypes"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of strings to be returned from
<code>getMIMETypes</code>, initially <code>null</code>.
"
      end

      attribute 526747 "pluginClassName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> containing the name of the associated
plug-in class, initially <code>null</code>.
"
      end

      attribute 526875 "supportsStandardStreamMetadataFormat"
	protected explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A boolean indicating whether this plug-in supports the
standard metadata format for stream metadata, initially
<code>false</code>.
"
      end

      attribute 527003 "nativeStreamMetadataFormatName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> containing the name of the native stream
metadata format supported by this plug-in, initially
<code>null</code>.
"
      end

      attribute 527131 "nativeStreamMetadataFormatClassName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> containing the class name of the native
stream metadata format supported by this plug-in, initially
<code>null</code>.
"
      end

      attribute 527259 "extraStreamMetadataFormatNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of <code>String</code>s containing the names of any
additional stream metadata formats supported by this plug-in,
initially <code>null</code>.
"
      end

      attribute 527387 "extraStreamMetadataFormatClassNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of <code>String</code>s containing the class names of
any additional stream metadata formats supported by this plug-in,
initially <code>null</code>.
"
      end

      attribute 527515 "supportsStandardImageMetadataFormat"
	protected explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A boolean indicating whether this plug-in supports the
standard metadata format for image metadata, initially
<code>false</code>.
"
      end

      attribute 527643 "nativeImageMetadataFormatName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> containing the name of the
native stream metadata format supported by this plug-in,
initially <code>null</code>.
"
      end

      attribute 527771 "nativeImageMetadataFormatClassName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> containing the class name of the
native stream metadata format supported by this plug-in,
initially <code>null</code>.
"
      end

      attribute 527899 "extraImageMetadataFormatNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of <code>String</code>s containing the names of any
additional image metadata formats supported by this plug-in,
initially <code>null</code>.
"
      end

      attribute 528027 "extraImageMetadataFormatClassNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of <code>String</code>s containing the class names of
any additional image metadata formats supported by this
plug-in, initially <code>null</code>.
"
      end

      operation 1908763 "ImageReaderWriterSpi"
	public explicit_return_type ""
	nparams 16
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	  param in name "names" explicit_type "String"
	  param in name "suffixes" explicit_type "String"
	  param in name "MIMETypes" explicit_type "String"
	  param in name "pluginClassName" explicit_type "String"
	  param inout name "supportsStandardStreamMetadataFormat" explicit_type "boolean"
	  param in name "nativeStreamMetadataFormatName" explicit_type "String"
	  param in name "nativeStreamMetadataFormatClassName" explicit_type "String"
	  param in name "extraStreamMetadataFormatNames" explicit_type "String"
	  param in name "extraStreamMetadataFormatClassNames" explicit_type "String"
	  param inout name "supportsStandardImageMetadataFormat" explicit_type "boolean"
	  param in name "nativeImageMetadataFormatName" explicit_type "String"
	  param in name "nativeImageMetadataFormatClassName" explicit_type "String"
	  param in name "extraImageMetadataFormatNames" explicit_type "String"
	  param in name "extraImageMetadataFormatClassNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9}[] ${p9}, ${t10}[] ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14}[] ${p14}, ${t15}[] ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageReaderWriterSpi</code> with a given
set of values.

@param vendorName the vendor name, as a non-<code>null</code>
<code>String</code>.
@param version a version identifier, as a non-<code>null</code>
<code>String</code>.
@param names a non-<code>null</code> array of
<code>String</code>s indicating the format names.  At least one
entry must be present.
@param suffixes an array of <code>String</code>s indicating the
common file suffixes.  If no suffixes are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param MIMETypes an array of <code>String</code>s indicating
the format's MIME types.  If no MIME types are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param pluginClassName the fully-qualified name of the
associated <code>ImageReader</code> or <code>ImageWriter</code>
class, as a non-<code>null</code> <code>String</code>.
@param supportsStandardStreamMetadataFormat a
<code>boolean</code> that indicates whether a stream metadata
object can use trees described by the standard metadata format.
@param nativeStreamMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeStreamMetadataFormatName</code>.
@param nativeStreamMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeStreamMetadataFormat</code>.
@param extraStreamMetadataFormatNames an array of
<code>String</code>s, or <code>null</code>, to be returned from
<code>getExtraStreamMetadataFormatNames</code>.  An array of length
0 is normalized to <code>null</code>.
@param extraStreamMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getStreamMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.
@param supportsStandardImageMetadataFormat a
<code>boolean</code> that indicates whether an image metadata
object can use trees described by the standard metadata format.
@param nativeImageMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeImageMetadataFormatName</code>. 
@param nativeImageMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeImageMetadataFormat</code>.
@param extraImageMetadataFormatNames an array of
<code>String</code>s to be returned from
<code>getExtraImageMetadataFormatNames</code>.  An array of length 0
is normalized to <code>null</code>.
@param extraImageMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getImageMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>names</code>
is <code>null</code> or has length 0.
@exception IllegalArgumentException if <code>pluginClassName</code>
is <code>null</code>."
      end

      operation 1908891 "ImageReaderWriterSpi"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageReaderWriterSpi</code>.  It is up
to the subclass to initialize instance variables and/or
override method implementations in order to provide working
versions of all methods."
      end

      operation 1909019 "getFormatNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing
human-readable names for the formats that are generally usable
by the <code>ImageReader</code> or <code>ImageWriter</code>
implementation associated with this service provider.  For
example, a single <code>ImageReader</code> might be able to
process both PBM and PNM files.

@return a non-<code>null</code> array of <code>String</code>s
or length at least 1 containing informal format names
associated with this reader or writer."
      end

      operation 1909147 "getFileSuffixes"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing a list of
file suffixes associated with the formats that are generally
usable by the <code>ImageReader</code> or
<code>ImageWriter</code> implementation associated with this
service provider.  For example, a single
<code>ImageReader</code> might be able to process files with
'.pbm' and '.pnm' suffixes, or both '.jpg' and '.jpeg'
suffixes.  If there are no known file suffixes,
<code>null</code> will be returned.

<p> Returning a particular suffix does not guarantee that files
with that suffix can be processed; it merely indicates that it
may be worthwhile attempting to decode or encode such files
using this service provider.

@return an array of <code>String</code>s or length at least 1
containing common file suffixes associated with this reader or
writer, or <code>null</code>."
      end

      operation 1909275 "getMIMETypes"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing a list of
MIME types associated with the formats that are generally
usable by the <code>ImageReader</code> or
<code>ImageWriter</code> implementation associated with this
service provider.

<p> Ideally, only a single MIME type would be required in order
to describe a particular format.  However, for several reasons
it is necessary to associate a list of types with each service
provider.  First, many common image file formats do not have
standard MIME types, so a list of commonly used unofficial
names will be required, such as <code>image/x-pbm</code> and
<code>image/x-portable-bitmap</code>.  Some file formats have
official MIME types but may sometimes be referred to using
their previous unofficial designations, such as
<code>image/x-png</code> instead of the official
<code>image/png</code>.  Finally, a single service provider may
be capable of parsing multiple distinct types from the MIME
point of view, for example <code>image/x-xbitmap</code> and
<code>image/x-xpixmap</code>.

<p> Returning a particular MIME type does not guarantee that
files claiming to be of that type can be processed; it merely
indicates that it may be worthwhile attempting to decode or
encode such files using this service provider.

@return an array of <code>String</code>s or length at least 1
containing MIME types associated with this reader or writer, or
<code>null</code>."
      end

      operation 1909403 "getPluginClassName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully-qualified class name of the
<code>ImageReader</code> or <code>ImageWriter</code> plug-in
associated with this service provider.

@return the class name, as a non-<code>null</code>
<code>String</code>."
      end

      operation 1909531 "isStandardStreamMetadataFormatSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the standard metadata format is
among the document formats recognized by the
<code>getAsTree</code> and <code>setFromTree</code> methods on
the stream metadata objects produced or consumed by this
plug-in.

@return <code>true</code> if the standard format is supported
for stream metadata."
      end

      operation 1909659 "getNativeStreamMetadataFormatName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the \"native\" stream metadata format for
this plug-in, which typically allows for lossless encoding and
transmission of the stream metadata stored in the format handled by
this plug-in.  If no such format is supported,
<code>null</code>will be returned.

<p> The default implementation returns the
<code>nativeStreamMetadataFormatName</code> instance variable,
which is typically set by the constructor.

@return the name of the native stream metadata format, or
<code>null</code>.
"
      end

      operation 1909787 "getExtraStreamMetadataFormatNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of additional document formats, other than the native and
standard formats, recognized by the
<code>getAsTree</code> and <code>setFromTree</code> methods on
the stream metadata objects produced or consumed by this
plug-in.

<p> If the plug-in does not handle metadata, null should be
returned.

<p> The set of formats may differ according to the particular
images being read or written; this method should indicate all
the additional formats supported by the plug-in under any
circumstances.

<p> The default implementation returns a clone of the
<code>extraStreamMetadataFormatNames</code> instance variable,
which is typically set by the constructor.

@return an array of <code>String</code>s, or null.

@see IIOMetadata#getMetadataFormatNames
@see #getExtraImageMetadataFormatNames
@see #getNativeStreamMetadataFormatName"
      end

      operation 1909915 "isStandardImageMetadataFormatSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the standard metadata format is
among the document formats recognized by the
<code>getAsTree</code> and <code>setFromTree</code> methods on
the image metadata objects produced or consumed by this
plug-in.

@return <code>true</code> if the standard format is supported
for image metadata."
      end

      operation 1910043 "getNativeImageMetadataFormatName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the \"native\" image metadata format for
this plug-in, which typically allows for lossless encoding and
transmission of the image metadata stored in the format handled by
this plug-in.  If no such format is supported,
<code>null</code>will be returned.

<p> The default implementation returns the
<code>nativeImageMetadataFormatName</code> instance variable,
which is typically set by the constructor.

@return the name of the native image metadata format, or
<code>null</code>.

@see #getExtraImageMetadataFormatNames"
      end

      operation 1910171 "getExtraImageMetadataFormatNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of additional document formats, other than the native and
standard formats, recognized by the
<code>getAsTree</code> and <code>setFromTree</code> methods on
the image metadata objects produced or consumed by this
plug-in.

<p> If the plug-in does not handle image metadata, null should
be returned.

<p> The set of formats may differ according to the particular
images being read or written; this method should indicate all
the additional formats supported by the plug-in under any circumstances.

<p> The default implementation returns a clone of the
<code>extraImageMetadataFormatNames</code> instance variable,
which is typically set by the constructor.

@return an array of <code>String</code>s, or null.

@see IIOMetadata#getMetadataFormatNames
@see #getExtraStreamMetadataFormatNames
@see #getNativeImageMetadataFormatName"
      end

      operation 1910299 "getStreamMetadataFormat"
	public return_type class_ref 343707 // IIOMetadataFormat
	nparams 1
	  param in name "formatName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
given stream metadata format, or <code>null</code> if no
description is available.  The supplied name must be the native
stream metadata format name, the standard metadata format name,
or one of those returned by
<code>getExtraStreamMetadataFormatNames</code>.

@param formatName the desired stream metadata format.

@return an <code>IIOMetadataFormat</code> object.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not a supported name."
      end

      operation 1910427 "getImageMetadataFormat"
	public return_type class_ref 343707 // IIOMetadataFormat
	nparams 1
	  param in name "formatName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
given image metadata format, or <code>null</code> if no
description is available.  The supplied name must be the native
iamge metadata format name, the standard metadata format name,
or one of those returned by
<code>getExtraImageMetadataFormatNames</code>.

@param formatName the desired image metadata format.

@return an <code>IIOMetadataFormat</code> object.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not a supported name."
      end

      operation 1910555 "getMetadataFormat"
	private return_type class_ref 343707 // IIOMetadataFormat
	nparams 6
	  param in name "formatName" explicit_type "String"
	  param inout name "supportsStandard" explicit_type "boolean"
	  param in name "nativeName" explicit_type "String"
	  param in name "nativeClassName" explicit_type "String"
	  param in name "extraNames" explicit_type "String"
	  param in name "extraClassNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 343323 "IIOServiceProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A superinterface for functionality common to all Image I/O service
provider interfaces (SPIs).  For more information on service
provider classes, see the class comment for the
<code>IIORegistry</code> class.

@see IIORegistry
@see javax.imageio.spi.ImageReaderSpi
@see javax.imageio.spi.ImageWriterSpi
@see javax.imageio.spi.ImageTranscoderSpi
@see javax.imageio.spi.ImageInputStreamSpi

@version 0.5"
      classrelation 496667 // <realization>
	relation 496667 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 496667 // <realization>
	  b parent class_ref 343451 // RegisterableService
      end

      attribute 526107 "vendorName"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> to be returned from
<code>getVendorName</code>, initially <code>null</code>.
Constructors should set this to a non-<code>null</code> value.
"
      end

      attribute 526235 "version"
	protected explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> to be returned from
<code>getVersion</code>, initially null.  Constructors should
set this to a non-<code>null</code> value.
"
      end

      operation 1907867 "IIOServiceProvider"
	public explicit_return_type ""
	nparams 2
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOServiceProvider</code> with a given
vendor name and version identifier.

@param vendorName the vendor name.
@param version a version identifier.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>."
      end

      operation 1907995 "IIOServiceProvider"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>IIOServiceProvider</code>.  It is up
to the subclass to initialize instance variables and/or
override method implementations in order to ensure that the
<code>getVendorName</code> and <code>getVersion</code> methods
will return non-<code>null</code> values."
      end

      operation 1908123 "onRegistration"
	public explicit_return_type "void"
	nparams 2
	  param inout name "registry" type class_ref 343579 // ServiceRegistry
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A callback that will be called exactly once after the Spi class
has been instantiated and registered in a
<code>ServiceRegistry</code>.  This may be used to verify that
the environment is suitable for this service, for example that
native libraries can be loaded.  If the service cannot function
in the environment where it finds itself, it should deregister
itself from the registry.

<p> Only the registry should call this method.

<p> The default implementation does nothing.

@see ServiceRegistry#registerServiceProvider(Object provider)"
      end

      operation 1908251 "onDeregistration"
	public explicit_return_type "void"
	nparams 2
	  param inout name "registry" type class_ref 343579 // ServiceRegistry
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A callback that will be whenever the Spi class has been
deregistered from a <code>ServiceRegistry</code>.

<p> Only the registry should call this method.

<p> The default implementation does nothing.

@see ServiceRegistry#deregisterServiceProvider(Object provider)"
      end

      operation 1908379 "getVendorName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the vendor responsible for creating this
service provider and its associated implementation.  Because
the vendor name may be used to select a service provider,
it is not localized.

<p> The default implementation returns the value of the
<code>vendorName</code> instance variable.

@return a non-<code>null</code> <code>String</code> containing
the name of the vendor."
      end

      operation 1908507 "getVersion"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the version
number of this service provider and its associated
implementation.  Because the version may be used by transcoders
to identify the service providers they understand, this method
is not localized.

<p> The default implementation returns the value of the
<code>version</code> instance variable.

@return a non-<code>null</code> <code>String</code> containing
the version of this service provider."
      end

      operation 1908635 "getDescription"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "locale" type class_ref 138907 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a brief, human-readable description of this service
provider and its associated implementation.  The resulting
string should be localized for the supplied
<code>Locale</code>, if possible.

@param locale a <code>Locale</code> for which the return value
should be localized.

@return a <code>String</code> containing a description of this
service provider."
      end
    end

    class 343451 "RegisterableService"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An optional interface that may be provided by service provider
objects that will be registered with a
<code>ServiceRegistry</code>.  If this interface is present,
notification of registration and deregistration will be performed.

@see ServiceRegistry

@version 0.5"
      operation 1907611 "onRegistration"
	public explicit_return_type "void"
	nparams 2
	  param inout name "registry" type class_ref 343579 // ServiceRegistry
	  param inout name "category" type class_ref 164635 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an object implementing this interface is added to
the given <code>category</code> of the given
<code>registry</code>.  The object may already be registered
under another category or categories.

@param registry a <code>ServiceRegistry</code> where this
object has been registered.
@param category a <code>Class</code> object indicating the
registry category under which this object has been registered."
      end

      operation 1907739 "onDeregistration"
	public explicit_return_type "void"
	nparams 2
	  param inout name "registry" type class_ref 343579 // ServiceRegistry
	  param inout name "category" type class_ref 164635 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an object implementing this interface is removed
from the given <code>category</code> of the given
<code>registry</code>.  The object may still be registered
under another category or categories.

@param registry a <code>ServiceRegistry</code> from which this
object is being (wholly or partially) deregistered.
@param category a <code>Class</code> object indicating the
registry category from which this object is being deregistered."
      end
    end

    class 343579 "ServiceRegistry"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A registry for service provider instances.

<p> A <i>service</i> is a well-known set of interfaces and (usually
abstract) classes.  A <i>service provider</i> is a specific
implementation of a service.  The classes in a provider typically
implement the interface or subclass the class defined by the
service itself.

<p> Service providers are stored in one or more <i>categories</i>,
each of which is defined by a class of interface (described by a
<code>Class</code> object) that all of its members must implement.
The set of categories may be changed dynamically.

<p> Only a single instance of a given leaf class (that is, the
actual class returned by <code>getClass()</code>, as opposed to any
inherited classes or interfaces) may be registered.  That is,
suppose that the
<code>com.mycompany.mypkg.GreenServiceProvider</code> class
implements the <code>com.mycompany.mypkg.MyService</code>
interface.  If a <code>GreenServiceProvider</code> instance is
registered, it will be stored in the category defined by the
<code>MyService</code> class.  If a new instance of
<code>GreenServiceProvider</code> is registered, it will replace
the previous instance.  In practice, service provider objects are
usually singletons so this behavior is appropriate.

<p> To declare a service provider, a <code>services</code>
subdirectory is placed within the <code>META-INF</code> directory
that is present in every JAR file.  This directory contains a file
for each service provider interface that has one or more
implementation classes present in the JAR file.  For example, if
the JAR file contained a class named
<code>com.mycompany.mypkg.MyServiceImpl</code> which implements the
<code>javax.someapi.SomeService</code> interface, the JAR file
would contain a file named: <pre>
META-INF/services/javax.someapi.SomeService </pre>

containing the line:

<pre>
com.mycompany.mypkg.MyService
</pre>

<p> The service provider classes should be to be lightweight and
quick to load.  Implementations of these interfaces should avoid
complex dependencies on other classes and on native code. The usual
pattern for more complex services is to register a lightweight
proxy for the heavyweight service.

<p> An application may customize the contents of a registry as it
sees fit, so long as it has the appropriate runtime permission.

<p> For more details on declaring service providers, and the JAR
format in general, see the <a
href=\"http://java.sun.com/products/jdk/1.3/docs/guide/jar/jar.html\">
JAR File Specification</a>.

@see RegisterableService

@version 0.5"
      class 1024795 "Filter"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 8171931 "filter"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "provider" explicit_type "Object"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns <code>true</code> if the given
<code>provider</code> object matches the criterion defined
by this <code>Filter</code>.

@param provider a service provider <code>Object</code>.

@return true if the provider matches the criterion."
	end
      end

      classrelation 2007067 // categoryMap (<unidirectional association>)
	relation 2007067 --->
	  a role_name "categoryMap" init_value "=  new HashMap()" private
	    comment " Class -> Registry
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2007067 // categoryMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8170395 "ServiceRegistry"
	public explicit_return_type ""
	nparams 1
	  param inout name "categories" type class_ref 135323 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ServiceRegistry</code> instance with a
set of categories taken from the <code>categories</code>
argument.

@param categories an <code>Iterator</code> containing
<code>Class</code> objects to be used to define categories.

@exception IllegalArgumentException if
<code>categories</code> is <code>null</code>."
      end

      operation 8170523 "lookupProviders"
	class_operation public return_type class_ref 135323 // Iterator
	nparams 2
	  param inout name "providerClass" type class_ref 164635 // Class
	  param inout name "loader" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The following two methods expose functionality from
 sun.misc.Service.  If that class is made public, they may be
 removed.
 
 The sun.misc.ServiceConfigurationError class may also be
 exposed, in which case the references to 'an
 <code>Error</code>' below should be changed to 'a
 <code>ServiceConfigurationError</code>'.

Searches for implementations of a particular service class
using the given class loader.

<p> This method transforms the name of the given service class
into a provider-configuration filename as described in the
class comment and then uses the <code>getResources</code>
method of the given class loader to find all available files
with that name.  These files are then read and parsed to
produce a list of provider-class names.  The iterator that is
returned uses the given class loader to look up and then
instantiate each element of the list.

<p> Because it is possible for extensions to be installed into
a running Java virtual machine, this method may return
different results each time it is invoked.

@param providerClass a <code>Class</code>object indicating the
class or interface of the service providers being detected.

@param loader the class loader to be used to load
provider-configuration files and instantiate provider classes,
or <code>null</code> if the system class loader (or, failing that
the bootstrap class loader) is to be used.

@return An <code>Iterator</code> that yields provider objects
for the given service, in some arbitrary order.  The iterator
will throw an <code>Error</code> if a provider-configuration
file violates the specified format or if a provider class
cannot be found and instantiated.

@exception IllegalArgumentException if
<code>providerClass</code> is <code>null</code>."
      end

      operation 8170651 "lookupProviders"
	class_operation public return_type class_ref 135323 // Iterator
	nparams 1
	  param inout name "providerClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates and incrementally instantiates the available providers
of a given service using the context class loader.  This
convenience method is equivalent to:

<pre>
  ClassLoader cl = Thread.currentThread().getContextClassLoader();
  return Service.providers(service, cl);
</pre>

@param providerClass a <code>Class</code>object indicating the
class or interface of the service providers being detected.

@return An <code>Iterator</code> that yields provider objects
for the given service, in some arbitrary order.  The iterator
will throw an <code>Error</code> if a provider-configuration
file violates the specified format or if a provider class
cannot be found and instantiated.

@exception IllegalArgumentException if
<code>providerClass</code> is <code>null</code>."
      end

      operation 8170779 "getCategories"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Class<?>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Iterator</code> of <code>Class</code> objects
indicating the current set of categories.  The iterator will be
empty if no categories exist.

@return an <code>Iterator</code> containing
<code>Class</code>objects."
      end

      operation 8170907 "getSubRegistries"
	private return_type class_ref 135323 // Iterator
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Iterator containing the subregistries to which the
provider belongs."
      end

      operation 8171035 "registerServiceProvider"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "provider" explicit_type "T"
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a service provider object to the registry.  The provider
is associated with the given category.

<p> If <code>provider</code> implements the
<code>RegisterableService</code> interface, its
<code>onRegistration</code> method will be called.  Its
<code>onDeregistration</code> method will be called each time
it is deregistered from a category, for example if a
category is removed or the registry is garbage collected.

@param provider the service provide object to be registered.
@param category the category under which to register the
provider.

@return true if no provider of the same class was previously
registered in the same category category.

@exception IllegalArgumentException if <code>provider</code> is
<code>null</code>.
@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>.
@exception ClassCastException if provider does not implement
the <code>Class</code> defined by <code>category</code>."
      end

      operation 8171163 "registerServiceProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a service provider object to the registry.  The provider
is associated within each category present in the registry
whose <code>Class</code> it implements.

<p> If <code>provider</code> implements the
<code>RegisterableService</code> interface, its
<code>onRegistration</code> method will be called once for each
category it is registered under.  Its
<code>onDeregistration</code> method will be called each time
it is deregistered from a category or when the registry is
finalized.

@param provider the service provider object to be registered.

@exception IllegalArgumentException if
<code>provider</code> is <code>null</code>."
      end

      operation 8171291 "registerServiceProviders"
	public explicit_return_type "void"
	nparams 1
	  param inout name "providers" type class_ref 135323 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a set of service provider objects, taken from an
<code>Iterator</code> to the registry.  Each provider is
associated within each category present in the registry whose
<code>Class</code> it implements.

<p> For each entry of <code>providers</code> that implements
the <code>RegisterableService</code> interface, its
<code>onRegistration</code> method will be called once for each
category it is registered under.  Its
<code>onDeregistration</code> method will be called each time
it is deregistered from a category or when the registry is
finalized.

@param providers an Iterator containing service provider
objects to be registered.

@exception IllegalArgumentException if <code>providers</code>
is <code>null</code> or contains a <code>null</code> entry."
      end

      operation 8171419 "deregisterServiceProvider"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "provider" explicit_type "T"
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a service provider object from the given category.  If
the provider was not previously registered, nothing happens and
<code>false</code> is returned.  Otherwise, <code>true</code>
is returned.  If an object of the same class as
<code>provider</code> but not equal (using <code>==</code>) to
<code>provider</code> is registered, it will not be
deregistered.

<p> If <code>provider</code> implements the
<code>RegisterableService</code> interface, its
<code>onDeregistration</code> method will be called.

@param provider the service provider object to be deregistered.
@param category the category from which to deregister the
provider.

@return <code>true</code> if the provider was previously
registered in the same category category,
<code>false</code> otherwise.

@exception IllegalArgumentException if <code>provider</code> is
<code>null</code>.
@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>.
@exception ClassCastException if provider does not implement
the class defined by <code>category</code>."
      end

      operation 8171547 "deregisterServiceProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a service provider object from all categories that
contain it.

@param provider the service provider object to be deregistered.

@exception IllegalArgumentException if <code>provider</code> is
<code>null</code>."
      end

      operation 8171675 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if <code>provider</code> is currently
registered.

@param provider the service provider object to be queried.

@return <code>true</code> if the given provider has been
registered.

@exception IllegalArgumentException if <code>provider</code> is
<code>null</code>."
      end

      operation 8171803 "getServiceProviders"
	public return_type class_ref 135323 // Iterator
	nparams 2
	  param inout name "category" type class_ref 164635 // Class
	  param inout name "useOrdering" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Iterator</code> containing all registered
service providers in the given category.  If
<code>useOrdering</code> is <code>false</code>, the iterator
will return all of the server provider objects in an arbitrary
order.  Otherwise, the ordering will respect any pairwise
orderings that have been set.  If the graph of pairwise
orderings contains cycles, any providers that belong to a cycle
will not be returned.

@param category the category to be retrieved from.
@param useOrdering <code>true</code> if pairwise orderings
should be taken account in ordering the returned objects.

@return an <code>Iterator</code> containing service provider
objects from the given category, possibly in order.

@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>."
      end

      operation 8172059 "getServiceProviders"
	public return_type class_ref 135323 // Iterator
	nparams 3
	  param inout name "category" type class_ref 164635 // Class
	  param inout name "filter" type class_ref 1024795 // Filter
	  param inout name "useOrdering" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Iterator</code> containing service provider
objects within a given category that satisfy a criterion
imposed by the supplied <code>ServiceRegistry.Filter</code>
object's <code>filter</code> method.

<p> The <code>useOrdering</code> argument controls the
ordering of the results using the same rules as
<code>getServiceProviders(Class, boolean)</code>.

@param category the category to be retrieved from.
@param filter an instance of <code>ServiceRegistry.Filter</code>
whose <code>filter</code> method will be invoked.
@param useOrdering <code>true</code> if pairwise orderings
should be taken account in ordering the returned objects.

@return an <code>Iterator</code> containing service provider
objects from the given category, possibly in order.

@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>."
      end

      operation 8172187 "getServiceProviderByClass"
	public explicit_return_type "T"
	nparams 1
	  param inout name "providerClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently registered service provider object that
is of the given class type.  At most one object of a given
class is allowed to be registered at any given time.  If no
registered object has the desired class type, <code>null</code>
is returned.

@param providerClass the <code>Class</code> of the desired
service provider object.

@return a currently registered service provider object with the
desired <code>Class</code>type, or <code>null</code> is none is
present.

@exception IllegalArgumentException if <code>providerClass</code> is
<code>null</code>."
      end

      operation 8172315 "setOrdering"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "category" type class_ref 164635 // Class
	  param inout name "firstProvider" explicit_type "T"
	  param inout name "secondProvider" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a pairwise ordering between two service provider objects
within a given category.  If one or both objects are not
currently registered within the given category, or if the
desired ordering is already set, nothing happens and
<code>false</code> is returned.  If the providers previously
were ordered in the reverse direction, that ordering is
removed.

<p> The ordering will be used by the
<code>getServiceProviders</code> methods when their
<code>useOrdering</code> argument is <code>true</code>.

@param category a <code>Class</code> object indicating the
category under which the preference is to be established.
@param firstProvider the preferred provider.
@param secondProvider the provider to which
<code>firstProvider</code> is preferred.

@return <code>true</code> if a previously unset ordering
was established.

@exception IllegalArgumentException if either provider is
<code>null</code> or they are the same object.
@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>."
      end

      operation 8172443 "unsetOrdering"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "category" type class_ref 164635 // Class
	  param inout name "firstProvider" explicit_type "T"
	  param inout name "secondProvider" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a pairwise ordering between two service provider objects
within a given category.  If one or both objects are not
currently registered within the given category, or if no
ordering is currently set between them, nothing happens
and <code>false</code> is returned.

<p> The ordering will be used by the
<code>getServiceProviders</code> methods when their
<code>useOrdering</code> argument is <code>true</code>.

@param category a <code>Class</code> object indicating the
category under which the preference is to be disestablished.
@param firstProvider the formerly preferred provider.
@param secondProvider the provider to which
<code>firstProvider</code> was formerly preferred.

@return <code>true</code> if a previously set ordering was
disestablished.

@exception IllegalArgumentException if either provider is
<code>null</code> or they are the same object.
@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>."
      end

      operation 8172571 "deregisterAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deregisters all service provider object currently registered
under the given category.

@param category the category to be emptied.

@exception IllegalArgumentException if there is no category
corresponding to <code>category</code>."
      end

      operation 8172699 "deregisterAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deregisters all currently registered service providers from all
categories."
      end

      operation 8172827 "finalize"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalizes this object prior to garbage collection.  The
<code>deregisterAll</code> method is called to deregister all
currently registered service providers.  This method should not
be called from application code.

@exception Throwable if an error occurs during superclass
finalization."
      end
    end

    class 344347 "ImageWriterSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The service provider interface (SPI) for <code>ImageWriter</code>s.
For more information on service provider classes, see the class comment
for the <code>IIORegistry</code> class.

<p> Each <code>ImageWriterSpi</code> provides several types of information
about the <code>ImageWriter</code> class with which it is associated.

<p> The name of the vendor who defined the SPI class and a
brief description of the class are available via the
<code>getVendorName</code>, <code>getDescription</code>,
and <code>getVersion</code> methods.
These methods may be internationalized to provide locale-specific
output.  These methods are intended mainly to provide short,
human-writable information that might be used to organize a pop-up
menu or other list.

<p> Lists of format names, file suffixes, and MIME types associated
with the service may be obtained by means of the
<code>getFormatNames</code>, <code>getFileSuffixes</code>, and
<code>getMIMEType</code> methods.  These methods may be used to
identify candidate <code>ImageWriter</code>s for writing a
particular file or stream based on manual format selection, file
naming, or MIME associations.

<p> A more reliable way to determine which <code>ImageWriter</code>s
are likely to be able to parse a particular data stream is provided
by the <code>canEncodeImage</code> method.  This methods allows the
service provider to inspect the actual image contents.

<p> Finally, an instance of the <code>ImageWriter</code> class
associated with this service provider may be obtained by calling
the <code>createWriterInstance</code> method.  Any heavyweight
initialization, such as the loading of native libraries or creation
of large tables, should be deferred at least until the first
invocation of this method.

@see IIORegistry
@see javax.imageio.ImageTypeSpecifier
@see javax.imageio.ImageWriter

@version 0.5"
      classrelation 499227 // <generalisation>
	relation 499227 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 499227 // <generalisation>
	  b parent class_ref 343195 // ImageReaderWriterSpi
      end

      classrelation 499355 // STANDARD_OUTPUT_TYPE (<unidirectional association>)
	relation 499355 --->
	  a role_name "STANDARD_OUTPUT_TYPE" multiplicity "[]" init_value "= 
        { ImageOutputStream.class }" class_relation const_relation public
	    comment "
A single-element array, initially containing
<code>ImageInputStream.class</code>, to be returned from
<code>getInputTypes</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 499355 // STANDARD_OUTPUT_TYPE (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 499483 // outputTypes (<unidirectional association>)
	relation 499483 --->
	  a role_name "outputTypes" multiplicity "[]" init_value "=  null" protected
	    comment "
An array of <code>Class</code> objects to be returned from
<code>getOutputTypes</code>, initially <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 499483 // outputTypes (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      attribute 530459 "readerSpiNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of strings to be returned from
<code>getImageReaderSpiNames</code>, initially
<code>null</code>.
"
      end

      classrelation 499611 // writerClass (<unidirectional association>)
	relation 499611 --->
	  a role_name "writerClass" init_value "=  null" private
	    comment "
The <code>Class</code> of the writer, initially
<code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499611 // writerClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 1925531 "ImageWriterSpi"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageWriterSpi</code>.  It is up to
the subclass to initialize instance variables and/or override
method implementations in order to provide working versions of
all methods."
      end

      operation 1925659 "ImageWriterSpi"
	public explicit_return_type ""
	nparams 18
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	  param in name "names" explicit_type "String"
	  param in name "suffixes" explicit_type "String"
	  param in name "MIMETypes" explicit_type "String"
	  param in name "writerClassName" explicit_type "String"
	  param inout name "outputTypes" type class_ref 164635 // Class
	  param in name "readerSpiNames" explicit_type "String"
	  param inout name "supportsStandardStreamMetadataFormat" explicit_type "boolean"
	  param in name "nativeStreamMetadataFormatName" explicit_type "String"
	  param in name "nativeStreamMetadataFormatClassName" explicit_type "String"
	  param in name "extraStreamMetadataFormatNames" explicit_type "String"
	  param in name "extraStreamMetadataFormatClassNames" explicit_type "String"
	  param inout name "supportsStandardImageMetadataFormat" explicit_type "boolean"
	  param in name "nativeImageMetadataFormatName" explicit_type "String"
	  param in name "nativeImageMetadataFormatClassName" explicit_type "String"
	  param in name "extraImageMetadataFormatNames" explicit_type "String"
	  param in name "extraImageMetadataFormatClassNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7}[] ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11}[] ${p11}, ${t12}[] ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16}[] ${p16}, ${t17}[] ${p17}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageWriterSpi</code> with a given
set of values.

@param vendorName the vendor name, as a non-<code>null</code>
<code>String</code>.
@param version a version identifier, as a non-<code>null</code>
<code>String</code>.
@param names a non-<code>null</code> array of
<code>String</code>s indicating the format names.  At least one
entry must be present.
@param suffixes an array of <code>String</code>s indicating the
common file suffixes.  If no suffixes are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param MIMETypes an array of <code>String</code>s indicating
the format's MIME types.  If no suffixes are defined,
<code>null</code> should be supplied.  An array of length 0
will be normalized to <code>null</code>.
@param writerClassName the fully-qualified name of the
associated <code>ImageWriterSpi</code> class, as a
non-<code>null</code> <code>String</code>.
@param outputTypes an array of <code>Class</code> objects of
length at least 1 indicating the legal output types.
@param readerSpiNames an array <code>String</code>s of length
at least 1 naming the classes of all associated
<code>ImageReader</code>s, or <code>null</code>.  An array of
length 0 is normalized to <code>null</code>.
@param supportsStandardStreamMetadataFormat a
<code>boolean</code> that indicates whether a stream metadata
object can use trees described by the standard metadata format.
@param nativeStreamMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeStreamMetadataFormatName</code>.
@param nativeStreamMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeStreamMetadataFormat</code>.
@param extraStreamMetadataFormatNames an array of
<code>String</code>s, or <code>null</code>, to be returned from
<code>getExtraStreamMetadataFormatNames</code>.  An array of length
0 is normalized to <code>null</code>.
@param extraStreamMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getStreamMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.
@param supportsStandardImageMetadataFormat a
<code>boolean</code> that indicates whether an image metadata
object can use trees described by the standard metadata format.
@param nativeImageMetadataFormatName a
<code>String</code>, or <code>null</code>, to be returned from
<code>getNativeImageMetadataFormatName</code>. 
@param nativeImageMetadataFormatClassName a
<code>String</code>, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getNativeImageMetadataFormat</code>.
@param extraImageMetadataFormatNames an array of
<code>String</code>s to be returned from
<code>getExtraImageMetadataFormatNames</code>.  An array of length 0
is normalized to <code>null</code>.
@param extraImageMetadataFormatClassNames an array of
<code>String</code>s, or <code>null</code>, to be used to instantiate
a metadata format object to be returned from
<code>getImageMetadataFormat</code>.  An array of length
0 is normalized to <code>null</code>.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>names</code>
is <code>null</code> or has length 0.
@exception IllegalArgumentException if <code>writerClassName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>outputTypes</code>
is <code>null</code> or has length 0."
      end

      operation 1925787 "isFormatLossless"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the format that this writer
outputs preserves pixel data bit-accurately.  The default
implementation returns <code>true</code>.

@return <code>true</code> if the format preserves full pixel
accuracy."
      end

      operation 1925915 "getOutputTypes"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Class</code> objects indicating what
types of objects may be used as arguments to the writer's
<code>setOutput</code> method.

<p> For most writers, which only output to an
<code>ImageOutputStream</code>, a single-element array
containing <code>ImageOutputStream.class</code> should be
returned.

@return a non-<code>null</code> array of
<code>Class</code>objects of length at least 1."
      end

      operation 1926043 "canEncodeImage"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" type class_ref 341659 // ImageTypeSpecifier
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageWriter</code>
implementation associated with this service provider is able to
encode an image with the given layout.  The layout
(<i>i.e.</i>, the image's <code>SampleModel</code> and
<code>ColorModel</code>) is described by an
<code>ImageTypeSpecifier</code> object.

<p> A return value of <code>true</code> is not an absolute
guarantee of successful encoding; the encoding process may still
produce errors due to factors such as I/O errors, inconsistent
or malformed data structures, etc.  The intent is that a
reasonable inspection of the basic structure of the image be
performed in order to determine if it is within the scope of
the encoding format.  For example, a service provider for a
format that can only encode greyscale would return
<code>false</code> if handed an RGB <code>BufferedImage</code>.
Similarly, a service provider for a format that can encode
8-bit RGB imagery might refuse to encode an image with an
associated alpha channel.

<p> Different <code>ImageWriter</code>s, and thus service
providers, may choose to be more or less strict.  For example,
they might accept an image with premultiplied alpha even though
it will have to be divided out of each pixel, at some loss of
precision, in order to be stored.

@param type an <code>ImageTypeSpecifier</code> specifying the
layout of the image to be written.

@return <code>true</code> if this writer is likely to be able
to encode images with the given layout.

@exception IllegalArgumentException if <code>type</code>
is <code>null</code>."
      end

      operation 1926171 "canEncodeImage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "im" type class_ref 342171 // RenderedImage
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageWriter</code>
implementation associated with this service provider is able to
encode the given <code>RenderedImage</code> instance.  Note
that this includes instances of
<code>java.awt.image.BufferedImage</code>.

<p> See the discussion for
<code>canEncodeImage(ImageTypeSpecifier)</code> for information
on the semantics of this method.

@param im an instance of <code>RenderedImage</code> to be encoded.

@return <code>true</code> if this writer is likely to be able
to encode this image.

@exception IllegalArgumentException if <code>im</code>
is <code>null</code>."
      end

      operation 1926299 "createWriterInstance"
	public return_type class_ref 343963 // ImageWriter
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageWriter</code>
implementation associated with this service provider.
The returned object will initially be in an initial state as if
its <code>reset</code> method had been called.

<p> The default implementation simply returns
<code>createWriterInstance(null)</code>.
    
@return an <code>ImageWriter</code> instance.

@exception IOException if an error occurs during loading, 
or initialization of the writer class, or during instantiation
or initialization of the writer object."
      end

      operation 1926427 "createWriterInstance"
	abstract public return_type class_ref 343963 // ImageWriter
	nparams 1
	  param inout name "extension" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageWriter</code>
implementation associated with this service provider.
The returned object will initially be in an initial state
as if its <code>reset</code> method had been called.

<p> An <code>Object</code> may be supplied to the plug-in at
construction time.  The nature of the object is entirely
plug-in specific.

<p> Typically, a plug-in will implement this method using code
such as <code>return new MyImageWriter(this)</code>.

@param extension a plug-in specific extension object, which may
be <code>null</code>.

@return an <code>ImageWriter</code> instance.

@exception IOException if the attempt to instantiate
the writer fails.
@exception IllegalArgumentException if the
<code>ImageWriter</code>'s constructor throws an
<code>IllegalArgumentException</code> to indicate that the
extension object is unsuitable."
      end

      operation 1926555 "isOwnWriter"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "writer" type class_ref 343963 // ImageWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageWriter</code> object
passed in is an instance of the <code>ImageWriter</code> 
associated with this service provider.

@param writer an <code>ImageWriter</code> instance.

@return <code>true</code> if <code>writer</code> is recognized

@exception IllegalArgumentException if <code>writer</code> is
<code>null</code>."
      end

      operation 1926683 "getImageReaderSpiNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing all the
fully qualified names of all the <code>ImageReaderSpi</code>
classes that can understand the internal metadata
representation used by the <code>ImageWriter</code> associated
with this service provider, or <code>null</code> if there are
no such <code>ImageReaders</code> specified.  If a
non-<code>null</code> value is returned, it must have non-zero
length.

<p> The first item in the array must be the name of the service
provider for the \"preferred\" reader, as it will be used to
instantiate the <code>ImageReader</code> returned by
<code>ImageIO.getImageReader(ImageWriter)</code>.

<p> This mechanism may be used to obtain
<code>ImageReaders</code> that will generated non-pixel
meta-data (see <code>IIOExtraDataInfo</code>) in a structure
understood by an <code>ImageWriter</code>.  By reading the
image and obtaining this data from one of the
<code>ImageReaders</code> obtained with this method and passing
it on to the <code>ImageWriter</code>, a client program can
read an image, modify it in some way, and write it back out
preserving all meta-data, without having to understand anything
about the internal structure of the meta-data, or even about
the image format.

@return an array of <code>String</code>s of length at least 1
containing names of <code>ImageReaderSpi</code>s, or
<code>null</code>.

@see javax.imageio.ImageIO#getImageReader(ImageWriter)
@see ImageReaderSpi#getImageWriterSpiNames()"
      end
    end

    class 358683 "ImageInputStreamSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The service provider interface (SPI) for
<code>ImageInputStream</code>s.  For more information on service
provider interfaces, see the class comment for the
<code>IIORegistry</code> class.

<p> This interface allows arbitrary objects to be \"wrapped\" by
instances of <code>ImageInputStream</code>.  For example,
a particular <code>ImageInputStreamSpi</code> might allow
a generic <code>InputStream</code> to be used as an input source;
another might take input from a <code>URL</code>.

<p> By treating the creation of <code>ImageInputStream</code>s as a
pluggable service, it becomes possible to handle future input
sources without changing the API.  Also, high-performance
implementations of <code>ImageInputStream</code> (for example,
native implementations for a particular platform) can be installed
and used transparently by applications.

@see IIORegistry
@see javax.imageio.stream.ImageInputStream

@version 0.5"
      classrelation 527259 // <generalisation>
	relation 527259 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 527259 // <generalisation>
	  b parent class_ref 343323 // IIOServiceProvider
      end

      classrelation 527387 // inputClass (<unidirectional association>)
	relation 527387 --->
	  a role_name "inputClass" protected
	    comment "
A <code>Class</code> object indicating the legal object type
for use by the <code>createInputStreamInstance</code> method.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 527387 // inputClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 2058395 "ImageInputStreamSpi"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageInputStreamSpi</code>.  It is up
to the subclass to initialize instance variables and/or
override method implementations in order to provide working
versions of all methods."
      end

      operation 2058523 "ImageInputStreamSpi"
	public explicit_return_type ""
	nparams 3
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	  param inout name "inputClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageInputStreamSpi</code> with a given set
of values.

@param vendorName the vendor name.
@param version a version identifier.
@param inputClass a <code>Class</code> object indicating the
legal object type for use by the
<code>createInputStreamInstance</code> method.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>."
      end

      operation 2058651 "getInputClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Class</code> object representing the class or
interface type that must be implemented by an input source in
order to be \"wrapped\" in an <code>ImageInputStream</code> via
the <code>createInputStreamInstance</code> method.

<p> Typical return values might include
<code>InputStream.class</code> or <code>URL.class</code>, but
any class may be used.

@return a <code>Class</code> variable.

@see #createInputStreamInstance(Object, boolean, File)"
      end

      operation 2058779 "canUseCacheFile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageInputStream</code>
implementation associated with this service provider can
optionally make use of a cache file for improved performance
and/or memory footrprint.  If <code>false</code>, the value of
the <code>useCache</code> argument to
<code>createInputStreamInstance</code> will be ignored.

<p> The default implementation returns <code>false</code>.

@return <code>true</code> if a cache file can be used by the
input streams created by this service provider."
      end

      operation 2058907 "needsCacheFile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageInputStream</code>
implementation associated with this service provider requires
the use of a cache <code>File</code>.  If <code>true</code>,
the value of the <code>useCache</code> argument to
<code>createInputStreamInstance</code> will be ignored.

<p> The default implementation returns <code>false</code>.

@return <code>true</code> if a cache file is needed by the
input streams created by this service provider."
      end

      operation 2059035 "createInputStreamInstance"
	abstract public return_type class_ref 342683 // ImageInputStream
	nparams 3
	  param inout name "input" explicit_type "Object"
	  param inout name "useCache" explicit_type "boolean"
	  param inout name "cacheDir" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageInputStream</code>
implementation associated with this service provider.  If the
use of a cache file is optional, the <code>useCache</code>
parameter will be consulted.  Where a cache is required, or 
not applicable, the value of <code>useCache</code> will be ignored.

@param input an object of the class type returned by
<code>getInputClass</code>.
@param useCache a <code>boolean</code> indicating whether a
cache file should be used, in cases where it is optional.
@param cacheDir a <code>File</code> indicating where the 
cache file should be created, or <code>null</code> to use the
system directory.

@return an <code>ImageInputStream</code> instance.

@exception IllegalArgumentException if <code>input</code> is
not an instance of the correct class or is <code>null</code>.
@exception IllegalArgumentException if a cache file is needed
but <code>cacheDir</code> is non-<code>null</code> and is not a
directory.
@exception IOException if a cache file is needed but cannot be
created.

@see #getInputClass
@see #canUseCacheFile
@see #needsCacheFile"
      end

      operation 2059163 "createInputStreamInstance"
	public return_type class_ref 342683 // ImageInputStream
	nparams 1
	  param inout name "input" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageInputStream</code>
implementation associated with this service provider.  A cache
file will be created in the system-dependent default
temporary-file directory, if needed.

@param input an object of the class type returned by
<code>getInputClass</code>.

@return an <code>ImageInputStream</code> instance.

@exception IllegalArgumentException if <code>input</code> is
not an instance of the correct class or is <code>null</code>.
@exception IOException if a cache file is needed but cannot be
created.

@see #getInputClass()"
      end
    end

    class 358939 "ImageOutputStreamSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The service provider interface (SPI) for
<code>ImageOutputStream</code>s.  For more information on service
provider interfaces, see the class comment for the
<code>IIORegistry</code> class.

<p> This interface allows arbitrary objects to be \"wrapped\" by
instances of <code>ImageOutputStream</code>.  For example, a
particular <code>ImageOutputStreamSpi</code> might allow a generic
<code>OutputStream</code> to be used as a destination; another
might output to a <code>File</code> or to a device such as a serial
port.

<p> By treating the creation of <code>ImageOutputStream</code>s as
a pluggable service, it becomes possible to handle future output
destinations without changing the API.  Also, high-performance
implementations of <code>ImageOutputStream</code> (for example,
native implementations for a particular platform) can be installed
and used transparently by applications.

@see IIORegistry
@see javax.imageio.stream.ImageOutputStream

@version 0.5"
      classrelation 527771 // <generalisation>
	relation 527771 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 527771 // <generalisation>
	  b parent class_ref 343323 // IIOServiceProvider
      end

      classrelation 527899 // outputClass (<unidirectional association>)
	relation 527899 --->
	  a role_name "outputClass" protected
	    comment "
A <code>Class</code> object indicating the legal object type
for use by the <code>createInputStreamInstance</code> method.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 527899 // outputClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 2059675 "ImageOutputStreamSpi"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageOutputStreamSpi</code>.  It is up
to the subclass to initialize instance variables and/or
override method implementations in order to provide working
versions of all methods."
      end

      operation 2059803 "ImageOutputStreamSpi"
	public explicit_return_type ""
	nparams 3
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	  param inout name "outputClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageOutputStreamSpi</code> with a given
set of values.

@param vendorName the vendor name.
@param version a version identifier.
@param outputClass a <code>Class</code> object indicating the
legal object type for use by the
<code>createOutputStreamInstance</code> method.

@exception IllegalArgumentException if <code>vendorName</code>
is <code>null</code>.
@exception IllegalArgumentException if <code>version</code>
is <code>null</code>. "
      end

      operation 2059931 "getOutputClass"
	public return_type class_ref 164635 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Class</code> object representing the class or
interface type that must be implemented by an output
destination in order to be \"wrapped\" in an
<code>ImageOutputStream</code> via the
<code>createOutputStreamInstance</code> method.

<p> Typical return values might include
<code>OutputStream.class</code> or <code>File.class</code>, but
any class may be used.

@return a <code>Class</code> variable.

@see #createOutputStreamInstance(Object, boolean, File)"
      end

      operation 2060059 "canUseCacheFile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageOutputStream</code>
implementation associated with this service provider can
optionally make use of a cache <code>File</code> for improved
performance and/or memory footrprint.  If <code>false</code>,
the value of the <code>cacheFile</code> argument to
<code>createOutputStreamInstance</code> will be ignored.

<p> The default implementation returns <code>false</code>.

@return <code>true</code> if a cache file can be used by the
output streams created by this service provider."
      end

      operation 2060187 "needsCacheFile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>ImageOutputStream</code>
implementation associated with this service provider requires
the use of a cache <code>File</code>.

<p> The default implementation returns <code>false</code>.

@return <code>true</code> if a cache file is needed by the
output streams created by this service provider."
      end

      operation 2060315 "createOutputStreamInstance"
	abstract public return_type class_ref 344859 // ImageOutputStream
	nparams 3
	  param inout name "output" explicit_type "Object"
	  param inout name "useCache" explicit_type "boolean"
	  param inout name "cacheDir" type class_ref 165147 // File
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageOutputStream</code>
implementation associated with this service provider.  If the
use of a cache file is optional, the <code>useCache</code>
parameter will be consulted.  Where a cache is required, or 
not applicable, the value of <code>useCache</code> will be ignored.

@param output an object of the class type returned by
<code>getOutputClass</code>.
@param useCache a <code>boolean</code> indicating whether a
cache file should be used, in cases where it is optional.
@param cacheDir a <code>File</code> indicating where the 
cache file should be created, or <code>null</code> to use the
system directory.

@return an <code>ImageOutputStream</code> instance.

@exception IllegalArgumentException if <code>output</code> is
not an instance of the correct class or is <code>null</code>.
@exception IllegalArgumentException if a cache file is needed,
but <code>cacheDir</code> is non-<code>null</code> and is not a
directory.
@exception IOException if a cache file is needed but cannot be
created.

@see #getOutputClass"
      end

      operation 2060443 "createOutputStreamInstance"
	public return_type class_ref 344859 // ImageOutputStream
	nparams 1
	  param inout name "output" explicit_type "Object"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageOutputStream</code>
implementation associated with this service provider.  A cache
file will be created in the system-dependent default
temporary-file directory, if needed.

@param output an object of the class type returned by
<code>getOutputClass</code>.

@return an <code>ImageOutputStream</code> instance.

@exception IllegalArgumentException if <code>output</code> is
not an instance of the correct class or is <code>null</code>.
@exception IOException if a cache file is needed but cannot be
created.

@see #getOutputClass()"
      end
    end

    class 1024283 "IIORegistry"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A registry for service provider instances.  Service provider
classes may be detected at run time by means of meta-information in
the JAR files containing them.  The intent is that it be relatively
inexpensive to load and inspect all available service provider
classes.  These classes may them be used to locate and instantiate
more heavyweight classes that will perform actual work, in this
case instances of <code>ImageReader</code>,
<code>ImageWriter</code>, <code>ImageTranscoder</code>,
<code>ImageInputStream</code>, and <code>ImageOutputStream</code>.

<p> Service providers found on the system classpath (<i>e.g.</i>,
the <code>jre/lib/ext</code> directory in Sun's implementation of
JDK) are automatically loaded as soon as this class is
instantiated.

<p> When the <code>registerApplicationClasspathSpis</code> method
is called, service provider instances declared in the
meta-information section of JAR files on the application class path
are loaded.  To declare a service provider, a <code>services</code>
subdirectory is placed within the <code>META-INF</code> directory
that is present in every JAR file.  This directory contains a file
for each service provider interface that has one or more
implementation classes present in the JAR file.  For example, if
the JAR file contained a class named
<code>com.mycompany.imageio.MyFormatReaderSpi</code> which
implements the <code>ImageReaderSpi</code> interface, the JAR file
would contain a file named:

<pre>
META-INF/services/javax.imageio.spi.ImageReaderSpi
</pre>

containing the line:

<pre>
com.mycompany.imageio.MyFormatReaderSpi
</pre>

<p> The service provider classes are intended to be lightweight
and quick to load.  Implementations of these interfaces
should avoid complex dependencies on other classes and on
native code.

<p> It is also possible to manually add service providers not found
automatically, as well as to remove those that are using the
interfaces of the <code>ServiceRegistry</code> class.  Thus
the application may customize the contents of the registry as it
sees fit.

<p> For more details on declaring service providers, and the JAR
format in general, see the <a
href=\"{@docRoot}/../guide/jar/jar.html\">
JAR File Specification</a>.

@version 0.5"
      classrelation 2017307 // <generalisation>
	relation 2017307 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2017307 // <generalisation>
	  b parent class_ref 343579 // ServiceRegistry
      end

      classrelation 2017435 // initialCategories (<unidirectional association>)
	relation 2017435 --->
	  a role_name "initialCategories" init_value "=  new Vector(5)" class_relation const_relation private
	    comment "
A <code>Vector</code> containing the valid IIO registry
categories (superinterfaces) to be used in the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2017435 // initialCategories (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      extra_member 168603 "initialization"
	
	cpp "" ""
	java "  static {
        initialCategories.add(ImageReaderSpi.class);
        initialCategories.add(ImageWriterSpi.class);
        initialCategories.add(ImageTranscoderSpi.class);
        initialCategories.add(ImageInputStreamSpi.class);
        initialCategories.add(ImageOutputStreamSpi.class);
    }"
	php ""
	python ""
	idl ""
      end

      operation 8205851 "IIORegistry"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set up the valid service provider categories and automatically
register all available service providers.

<p> The constructor is private in order to prevent creation of
additional instances."
      end

      operation 8205979 "getDefaultInstance"
	class_operation public return_type class_ref 1024283 // IIORegistry
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default <code>IIORegistry</code> instance used by
the Image I/O API.  This instance should be used for all
registry functions.

<p> Each <code>ThreadGroup</code> will receive its own
instance; this allows different <code>Applet</code>s in the
same browser (for example) to each have their own registry.

@return the default registry for the current
<code>ThreadGroup</code>."
      end

      operation 8206107 "registerStandardSpis"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8206235 "registerApplicationClasspathSpis"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers all available service providers found on the
application class path, using the default
<code>ClassLoader</code>.  This method is typically invoked by
the <code>ImageIO.scanForPlugins</code> method.

@see javax.imageio.ImageIO#scanForPlugins
@see ClassLoader#getResources"
      end

      operation 8206363 "registerInstalledProviders"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1024923 "SubRegistry"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A portion of a registry dealing with a single superclass or
interface."
      classrelation 2007195 // registry (<unidirectional association>)
	relation 2007195 --->
	  a role_name "registry" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2007195 // registry (<unidirectional association>)
	  b parent class_ref 343579 // ServiceRegistry
      end

      classrelation 2007323 // category (<unidirectional association>)
	relation 2007323 --->
	  a role_name "category" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2007323 // category (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 2007451 // poset (<unidirectional association>)
	relation 2007451 --->
	  a role_name "poset" init_value "=  new PartiallyOrderedSet()" package
	    comment " Provider Objects organized by partial oridering
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2007451 // poset (<unidirectional association>)
	  b parent class_ref 1025051 // PartiallyOrderedSet
      end

      classrelation 2007579 // map (<unidirectional association>)
	relation 2007579 --->
	  a role_name "map" init_value "=  new HashMap()" package
	    comment " Class -> Provider Object of that class
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>,Object> ${name}${value};
"
	    classrelation_ref 2007579 // map (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8172955 "SubRegistry"
	public explicit_return_type ""
	nparams 2
	  param inout name "registry" type class_ref 343579 // ServiceRegistry
	  param inout name "category" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173083 "registerServiceProvider"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173211 "deregisterServiceProvider"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the provider was not previously registered, do nothing.

@return true if the provider was previously registered."
      end

      operation 8173339 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "provider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173467 "setOrdering"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "firstProvider" explicit_type "Object"
	  param inout name "secondProvider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173595 "unsetOrdering"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "firstProvider" explicit_type "Object"
	  param inout name "secondProvider" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173723 "getServiceProviders"
	public return_type class_ref 135323 // Iterator
	nparams 1
	  param inout name "useOrdering" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173851 "getServiceProviderByClass"
	public explicit_return_type "T"
	nparams 1
	  param inout name "providerClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8173979 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8174107 "finalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1025051 "PartiallyOrderedSet"
      visibility package 
      nactuals 4
      actual class class_ref 137499 // AbstractSet
        rank 0 explicit_value ""
      actual class class_ref 137499 // AbstractSet
        rank 1 explicit_value ""
      actual class class_ref 137499 // AbstractSet
        rank 2 explicit_value ""
      actual class class_ref 137499 // AbstractSet
        rank 3 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A set of <code>Object</code>s with pairwise orderings between them.
The <code>iterator</code> method provides the elements in
topologically sorted order.  Elements participating in a cycle
are not returned.

Unlike the <code>SortedSet</code> and <code>SortedMap</code>
interfaces, which require their elements to implement the
<code>Comparable</code> interface, this class receives ordering
information via its <code>setOrdering</code> and
<code>unsetPreference</code> methods.  This difference is due to
the fact that the relevant ordering between elements is unlikely to
be inherent in the elements themselves; rather, it is set
dynamically accoring to application policy.  For example, in a
service provider registry situation, an application might allow the
user to set a preference order for service provider objects
supplied by a trusted vendor over those supplied by another.

@version 0.5"
      classrelation 2017691 // <generalisation>
	relation 2017691 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2017691 // <generalisation>
	  b parent class_ref 137499 // AbstractSet
      end

      classrelation 2017819 // poNodes (<unidirectional association>)
	relation 2017819 --->
	  a role_name "poNodes" init_value "=  new HashMap()" private
	    comment " The topological sort (roughly) follows the algorithm described in
 Horowitz and Sahni, _Fundamentals of Data Structures_ (1976),
 p. 315.
 Maps Objects to DigraphNodes that contain them
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2017819 // poNodes (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2017947 // nodes (<unidirectional association>)
	relation 2017947 --->
	  a role_name "nodes" init_value "=  poNodes.keySet()" private
	    comment " The set of Objects
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2017947 // nodes (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      operation 8207131 "PartiallyOrderedSet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>PartiallyOrderedSet</code>."
      end

      operation 8207259 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8207387 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8207515 "iterator"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over the elements contained in this
collection, with an ordering that respects the orderings set
by the <code>setOrdering</code> method."
      end

      operation 8207643 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>Object</code> to this
<code>PartiallyOrderedSet</code>."
      end

      operation 8207771 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>Object</code> from this
<code>PartiallyOrderedSet</code>."
      end

      operation 8207899 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8208027 "setOrdering"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "first" explicit_type "Object"
	  param inout name "second" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an ordering between two nodes.  When an iterator is
requested, the first node will appear earlier in the
sequence than the second node.  If a prior ordering existed
between the nodes in the opposite order, it is removed.

@return <code>true</code> if no prior ordering existed
between the nodes, <code>false</code>otherwise."
      end

      operation 8208155 "unsetOrdering"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "first" explicit_type "Object"
	  param inout name "second" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any ordering between two nodes.

@return true if a prior prefence existed between the nodes."
      end

      operation 8208283 "hasOrdering"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "preferred" explicit_type "Object"
	  param inout name "other" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if an ordering exists between two
nodes."
      end
    end

    class 1025179 "FilterIterator"
      visibility package 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 4
      actual class class_ref 135323 // Iterator
        rank 0 explicit_value "T"
      actual class class_ref 135323 // Iterator
        rank 1 explicit_value ""
      actual class class_ref 135323 // Iterator
        rank 2 explicit_value ""
      actual class class_ref 135323 // Iterator
        rank 3 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for wrapping <code>Iterators</code> with a filter function.
This provides an iterator for a subset without duplication."
      classrelation 2007707 // <realization>
	relation 2007707 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2007707 // <realization>
	  b parent class_ref 135323 // Iterator
      end

      classrelation 2007835 // iter (<unidirectional association>)
	relation 2007835 --->
	  a role_name "iter" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 2007835 // iter (<unidirectional association>)
	  b parent class_ref 135323 // Iterator
      end

      classrelation 2007963 // filter (<unidirectional association>)
	relation 2007963 --->
	  a role_name "filter" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2007963 // filter (<unidirectional association>)
	  b parent class_ref 1024795 // Filter
      end

      attribute 3002139 "next"
	private explicit_type "T"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8174235 "FilterIterator"
	public explicit_return_type ""
	nparams 2
	  param inout name "iter" type class_ref 135323 // Iterator
	  param inout name "filter" type class_ref 1024795 // Filter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8174363 "advance"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8174491 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8174619 "next"
	public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8174747 "remove"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1027483 "DigraphNode"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A node in a directed graph.  In addition to an arbitrary
<code>Object</code> containing user data associated with the node,
each node maintains a <code>Set</code>s of nodes which are pointed
to by the current node (available from <code>getOutNodes</code>).
The in-degree of the node (that is, number of nodes that point to
the current node) may be queried.

@version 0.5"
      classrelation 2016795 // <realization>
	relation 2016795 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2016795 // <realization>
	  b parent class_ref 339867 // Cloneable
      end

      classrelation 2016923 // <realization>
	relation 2016923 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2016923 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 3009307 "data"
	protected explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The data associated with this node. "
      end

      classrelation 2017051 // outNodes (<unidirectional association>)
	relation 2017051 --->
	  a role_name "outNodes" init_value "=  new HashSet()" protected
	    comment "
A <code>Set</code> of neighboring nodes pointed to by this
node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2017051 // outNodes (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      attribute 3009435 "inDegree"
	protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The in-degree of the node. "
      end

      classrelation 2017179 // inNodes (<unidirectional association>)
	relation 2017179 --->
	  a role_name "inNodes" init_value "=  new HashSet()" private
	    comment "
A <code>Set</code> of neighboring nodes that point to this
node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2017179 // inNodes (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      operation 8204571 "DigraphNode"
	public explicit_return_type ""
	nparams 1
	  param inout name "data" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8204699 "getData"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>Object</code> referenced by this node. "
      end

      operation 8204827 "getOutNodes"
	public return_type class_ref 135323 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Iterator</code> containing the nodes pointed
to by this node."
      end

      operation 8204955 "addEdge"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 1027483 // DigraphNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a directed edge to the graph.  The outNodes list of this
node is updated and the in-degree of the other node is incremented.

@param node a <code>DigraphNode</code>.

@return <code>true</code> if the node was not previously the
target of an edge."
      end

      operation 8205083 "hasEdge"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 1027483 // DigraphNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if an edge exists between this node
and the given node.

@param node a <code>DigraphNode</code>.

@return <code>true</code> if the node is the target of an edge."
      end

      operation 8205211 "removeEdge"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 1027483 // DigraphNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a directed edge from the graph.  The outNodes list of this
node is updated and the in-degree of the other node is decremented.

@return <code>true</code> if the node was previously the target
of an edge."
      end

      operation 8205339 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes this node from the graph, updating neighboring nodes
appropriately."
      end

      operation 8205467 "getInDegree"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the in-degree of this node. "
      end

      operation 8205595 "incrementInDegree"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Increments the in-degree of this node. "
      end

      operation 8205723 "decrementInDegree"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Decrements the in-degree of this node. "
      end
    end

    class 1027611 "ImageTranscoderSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The service provider interface (SPI) for <code>ImageTranscoder</code>s.
For more information on service provider classes, see the class comment
for the <code>IIORegistry</code> class.

@see IIORegistry
@see javax.imageio.ImageTranscoder

@version 0.5"
      classrelation 2017563 // <generalisation>
	relation 2017563 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2017563 // <generalisation>
	  b parent class_ref 343323 // IIOServiceProvider
      end

      operation 8206491 "ImageTranscoderSpi"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>ImageTranscoderSpi</code>.  It is up
to the subclass to initialize instance variables and/or
override method implementations in order to provide working
versions of all methods."
      end

      operation 8206619 "ImageTranscoderSpi"
	public explicit_return_type ""
	nparams 2
	  param in name "vendorName" explicit_type "String"
	  param in name "version" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ImageTranscoderSpi</code> with a given set
of values.

@param vendorName the vendor name.
@param version a version identifier."
      end

      operation 8206747 "getReaderServiceProviderName"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified class name of an
<code>ImageReaderSpi</code> class that generates
<code>IIOMetadata</code> objects that may be used as input to
this transcoder.

@return a <code>String</code> containing the fully-qualified
class name of the <code>ImageReaderSpi</code> implementation class.

@see ImageReaderSpi"
      end

      operation 8206875 "getWriterServiceProviderName"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified class name of an
<code>ImageWriterSpi</code> class that generates
<code>IIOMetadata</code> objects that may be used as input to
this transcoder.

@return a <code>String</code> containing the fully-qualified
class name of the <code>ImageWriterSpi</code> implementation class.

@see ImageWriterSpi"
      end

      operation 8207003 "createTranscoderInstance"
	abstract public return_type class_ref 344091 // ImageTranscoder
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the <code>ImageTranscoder</code>
implementation associated with this service provider.

@return an <code>ImageTranscoder</code> instance."
      end
    end

    class 1027739 "PartialOrderIterator"
      visibility package 
      nactuals 4
      actual class class_ref 135323 // Iterator
        rank 0 explicit_value ""
      actual class class_ref 135323 // Iterator
        rank 1 explicit_value ""
      actual class class_ref 135323 // Iterator
        rank 2 explicit_value ""
      actual class class_ref 135323 // Iterator
        rank 3 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2018075 // <realization>
	relation 2018075 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2018075 // <realization>
	  b parent class_ref 135323 // Iterator
      end

      classrelation 2018203 // zeroList (<unidirectional association>)
	relation 2018203 --->
	  a role_name "zeroList" init_value "=  new LinkedList()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2018203 // zeroList (<unidirectional association>)
	  b parent class_ref 152987 // LinkedList
      end

      classrelation 2018331 // inDegrees (<unidirectional association>)
	relation 2018331 --->
	  a role_name "inDegrees" init_value "=  new HashMap()" package
	    comment " DigraphNode -> Integer"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2018331 // inDegrees (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 8208411 "PartialOrderIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "iter" type class_ref 135323 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8208539 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8208667 "next"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8208795 "remove"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 142491 "spi"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 272155 "RegisterableService"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 343451 // RegisterableService
      end
      comment "@(#)RegisterableService.java	1.9 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 272283 "IIOServiceProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import javax.imageio.spi.RegisterableService;
import javax.imageio.spi.ServiceRegistry;
${definition}"
      associated_classes
	class_ref 343323 // IIOServiceProvider
      end
      comment "@(#)IIOServiceProvider.java	1.18 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 272411 "ImageReaderWriterSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Iterator;
import javax.imageio.ImageReader;
import javax.imageio.metadata.IIOMetadata;
import javax.imageio.metadata.IIOMetadataFormat;
import javax.imageio.metadata.IIOMetadataFormatImpl;
import javax.imageio.stream.ImageInputStream;
${definition}"
      associated_classes
	class_ref 343195 // ImageReaderWriterSpi
      end
      comment "@(#)ImageReaderWriterSpi.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 272539 "ImageReaderSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;
${definition}"
      associated_classes
	class_ref 341147 // ImageReaderSpi
      end
      comment "@(#)ImageReaderSpi.java	1.41 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 273307 "ImageWriterSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.RenderedImage;
import java.io.IOException;
import javax.imageio.ImageTypeSpecifier;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
${definition}"
      associated_classes
	class_ref 344347 // ImageWriterSpi
      end
      comment "@(#)ImageWriterSpi.java	1.38 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 282139 "ImageInputStreamSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import javax.imageio.stream.ImageInputStream;
${definition}"
      associated_classes
	class_ref 358683 // ImageInputStreamSpi
      end
      comment "@(#)ImageInputStreamSpi.java	1.23 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 282395 "ImageOutputStreamSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import javax.imageio.stream.ImageOutputStream;
${definition}"
      associated_classes
	class_ref 358939 // ImageOutputStreamSpi
      end
      comment "@(#)ImageOutputStreamSpi.java	1.19 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 774555 "ServiceRegistry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import sun.misc.Service;
${definition}"
      associated_classes
	class_ref 343579 // ServiceRegistry
	class_ref 1024923 // SubRegistry
	class_ref 1025179 // FilterIterator
      end
      comment "@(#)ServiceRegistry.java	1.22 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 776475 "DigraphNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 1027483 // DigraphNode
      end
      comment "@(#)DigraphNode.java 1.7 03/01/23

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 776603 "IIORegistry"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.PrivilegedAction;
import java.security.AccessController;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.Vector;
import com.sun.imageio.spi.FileImageInputStreamSpi;
import com.sun.imageio.spi.FileImageOutputStreamSpi;
import com.sun.imageio.spi.InputStreamImageInputStreamSpi;
import com.sun.imageio.spi.OutputStreamImageOutputStreamSpi;
import com.sun.imageio.spi.RAFImageInputStreamSpi;
import com.sun.imageio.spi.RAFImageOutputStreamSpi;
import com.sun.imageio.plugins.gif.GIFImageReaderSpi;
import com.sun.imageio.plugins.jpeg.JPEGImageReaderSpi;
import com.sun.imageio.plugins.jpeg.JPEGImageWriterSpi;
import com.sun.imageio.plugins.png.PNGImageReaderSpi;
import com.sun.imageio.plugins.png.PNGImageWriterSpi;
import com.sun.imageio.plugins.bmp.BMPImageReaderSpi;
import com.sun.imageio.plugins.bmp.BMPImageWriterSpi;
import com.sun.imageio.plugins.wbmp.WBMPImageReaderSpi;
import com.sun.imageio.plugins.wbmp.WBMPImageWriterSpi;
import sun.awt.AppContext;
import sun.misc.Service;
import sun.misc.ServiceConfigurationError;
${definition}"
      associated_classes
	class_ref 1024283 // IIORegistry
      end
      comment "@(#)IIORegistry.java	1.65 04/06/17

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 776731 "ImageTranscoderSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.imageio.ImageTranscoder;
${definition}"
      associated_classes
	class_ref 1027611 // ImageTranscoderSpi
      end
      comment "@(#)ImageTranscoderSpi.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 776859 "PartiallyOrderedSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.AbstractSet;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 1025051 // PartiallyOrderedSet
	class_ref 1027739 // PartialOrderIterator
      end
      comment "@(#)PartiallyOrderedSet.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
