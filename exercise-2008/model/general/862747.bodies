class Menu
!!!6319259.java!!!	Menu()
	this("", false);
!!!6319387.java!!!	Menu(in label : String)
	this(label, false);
!!!6319515.java!!!	Menu(in label : String, inout tearOff : boolean)
	super(label);
	this.tearOff = tearOff;
!!!6319643.java!!!	constructComponentName() : String
        synchronized (getClass()) {
	    return base + nameCounter++;
	}
!!!6319771.java!!!	addNotify() : void
        synchronized (getTreeLock()) {
	    if (peer == null)
	        peer = Toolkit.getDefaultToolkit().createMenu(this);
	    int nitems = getItemCount();
	    for (int i = 0 ; i < nitems ; i++) {
	        MenuItem mi = getItem(i);
		mi.parent = this;
		mi.addNotify();
	    }
	}
!!!6319899.java!!!	removeNotify() : void
        synchronized (getTreeLock()) {
	    int nitems = getItemCount();
	    for (int i = 0 ; i < nitems ; i++) {
	        getItem(i).removeNotify();
	    }
	    super.removeNotify();
	}
!!!6320027.java!!!	isTearOff() : boolean
	return tearOff;
!!!6320155.java!!!	getItemCount() : int
	return countItems();
!!!6320283.java!!!	countItems() : int
	return countItemsImpl();
!!!6320411.java!!!	countItemsImpl() : int
	return items.size();
!!!6320539.java!!!	getItem(in index : int) : MenuItem
	return getItemImpl(index);
!!!6320667.java!!!	getItemImpl(in index : int) : MenuItem
	return (MenuItem)items.elementAt(index);
!!!6320795.java!!!	add(inout mi : MenuItem) : MenuItem
        synchronized (getTreeLock()) {
	    if (mi.parent != null) {
	        mi.parent.remove(mi);
	    }
	    items.addElement(mi);
	    mi.parent = this;
	    MenuPeer peer = (MenuPeer)this.peer;
	    if (peer != null) {
	        mi.addNotify();
		peer.addItem(mi);
	    }
	    return mi;
	}
!!!6320923.java!!!	add(in label : String) : void
	add(new MenuItem(label));
!!!6321051.java!!!	insert(inout menuitem : MenuItem, in index : int) : void
        synchronized (getTreeLock()) {
	    if (index < 0) {
	        throw new IllegalArgumentException("index less than zero.");
	    }

	    int nitems = getItemCount();
	    Vector tempItems = new Vector();

	    /* Remove the item at index, nitems-index times 
	       storing them in a temporary vector in the
	       order they appear on the menu.
	    */
	    for (int i = index ; i < nitems; i++) {
	        tempItems.addElement(getItem(index));
		remove(index);
	    }

	    add(menuitem);

	    /* Add the removed items back to the menu, they are
	       already in the correct order in the temp vector.
	    */
	    for (int i = 0; i < tempItems.size()  ; i++) {
	        add((MenuItem)tempItems.elementAt(i));
	    }
	}
!!!6321179.java!!!	insert(in label : String, in index : int) : void
        insert(new MenuItem(label), index);
!!!6321307.java!!!	addSeparator() : void
	add("-");
!!!6321435.java!!!	insertSeparator(in index : int) : void
        synchronized (getTreeLock()) {
	    if (index < 0) {
	        throw new IllegalArgumentException("index less than zero.");
	    }

	    int nitems = getItemCount();
	    Vector tempItems = new Vector();

	    /* Remove the item at index, nitems-index times 
	       storing them in a temporary vector in the
	       order they appear on the menu.
	    */
	    for (int i = index ; i < nitems; i++) {
	        tempItems.addElement(getItem(index));
		remove(index);
	    }

	    addSeparator();

	    /* Add the removed items back to the menu, they are
	       already in the correct order in the temp vector.
	    */
	    for (int i = 0; i < tempItems.size()  ; i++) {
	        add((MenuItem)tempItems.elementAt(i));
	    }
	}
!!!6321563.java!!!	remove(in index : int) : void
        synchronized (getTreeLock()) {
	    MenuItem mi = getItem(index);
	    items.removeElementAt(index);
	    MenuPeer peer = (MenuPeer)this.peer;
	    if (peer != null) {
	        mi.removeNotify();
		mi.parent = null;
		peer.delItem(index);
	    }
	}
!!!6321691.java!!!	remove(inout item : MenuComponent) : void
        synchronized (getTreeLock()) {
	    int index = items.indexOf(item);
	    if (index >= 0) {
	        remove(index);
	    }
	}
!!!6321819.java!!!	removeAll() : void
        synchronized (getTreeLock()) {
	    int nitems = getItemCount();
	    for (int i = nitems-1 ; i >= 0 ; i--) {
	        remove(i);
	    }
	}
!!!6321947.java!!!	handleShortcut(inout e : KeyEvent) : boolean
        int nitems = getItemCount();
        for (int i = 0 ; i < nitems ; i++) {
            MenuItem mi = getItem(i);
            if (mi.handleShortcut(e)) {
                return true;
            }
        }
        return false;
!!!6322075.java!!!	getShortcutMenuItem(inout s : MenuShortcut) : MenuItem
	int nitems = getItemCount();
	for (int i = 0 ; i < nitems ; i++) {
            MenuItem mi = getItem(i).getShortcutMenuItem(s);
            if (mi != null) {
                return mi;
            }
	}
        return null;
!!!6322203.java!!!	shortcuts() : Enumeration
        Vector shortcuts = new Vector();
        int nitems = getItemCount();
	for (int i = 0 ; i < nitems ; i++) {
            MenuItem mi = getItem(i);
            if (mi instanceof Menu) {
                Enumeration e = ((Menu)mi).shortcuts();
                while (e.hasMoreElements()) {
                    shortcuts.addElement(e.nextElement());
                }
            } else {
                MenuShortcut ms = mi.getShortcut();
                if (ms != null) {
                    shortcuts.addElement(ms);
                }
            }
	}
        return shortcuts.elements();
!!!6322331.java!!!	deleteShortcut(inout s : MenuShortcut) : void
	int nitems = getItemCount();
	for (int i = 0 ; i < nitems ; i++) {
	    getItem(i).deleteShortcut(s);
	}
!!!6322459.java!!!	writeObject(inout s : ObjectOutputStream) : void
      s.defaultWriteObject();
!!!6322587.java!!!	readObject(inout s : ObjectInputStream) : void
      // HeadlessException will be thrown from MenuComponent's readObject
      s.defaultReadObject();
      for(int i = 0; i < items.size(); i++) {
	MenuItem item = (MenuItem)items.elementAt(i);
	item.parent = this;
      }
!!!6322715.java!!!	paramString() : String
        String str = ",tearOff=" + tearOff+",isHelpMenu=" + isHelpMenu;
        return super.paramString() + str;
!!!6322971.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleAWTMenu();
        }
        return accessibleContext;
!!!6323099.java!!!	getAccessibleChildIndex(inout child : MenuComponent) : int
        return items.indexOf(child);
