class IntStack
!!!5798555.java!!!	IntStack()
    super();
!!!5798683.java!!!	IntStack(in blocksize : int)
    super(blocksize);
!!!5798811.java!!!	IntStack(inout v : IntStack)
  	super(v);
!!!5798939.java!!!	push(in i : int) : int

    if ((m_firstFree + 1) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      int newMap[] = new int[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_map[m_firstFree] = i;

    m_firstFree++;

    return i;
!!!5799067.java!!!	pop() : int
    return m_map[--m_firstFree];
!!!5799195.java!!!	quickPop(in n : int) : void
    m_firstFree -= n;
!!!5799323.java!!!	peek() : int
    try {
      return m_map[m_firstFree - 1];
    }
    catch (ArrayIndexOutOfBoundsException e)
    {
      throw new EmptyStackException();
    }
!!!5799451.java!!!	peek(in n : int) : int
    try {
      return m_map[m_firstFree-(1+n)];
    }
    catch (ArrayIndexOutOfBoundsException e)
    {
      throw new EmptyStackException();
    }
!!!5799579.java!!!	setTop(in val : int) : void
    try {
      m_map[m_firstFree - 1] = val;
    }
    catch (ArrayIndexOutOfBoundsException e)
    {
      throw new EmptyStackException();
    }
!!!5799707.java!!!	empty() : boolean
    return m_firstFree == 0;
!!!5799835.java!!!	search(in o : int) : int

    int i = lastIndexOf(o);

    if (i >= 0)
    {
      return size() - i;
    }

    return -1;
!!!5799963.java!!!	clone() : Object
  	return (IntStack) super.clone();
