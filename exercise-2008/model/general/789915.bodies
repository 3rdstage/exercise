class DTMException
!!!5572251.java!!!	getLocator() : SourceLocator
        return locator;
!!!5572379.java!!!	setLocator(inout location : SourceLocator) : void
        locator = location;
!!!5572507.java!!!	getException() : Throwable
        return containedException;
!!!5572635.java!!!	getCause() : Throwable

        return ((containedException == this)
                ? null
                : containedException);
!!!5572763.java!!!	initCause(inout cause : Throwable) : Throwable

        if ((this.containedException == null) && (cause != null)) {
            throw new IllegalStateException(XMLMessages.createXMLMessage(XMLErrorResources.ER_CANNOT_OVERWRITE_CAUSE, null)); //"Can't overwrite cause");
        }

        if (cause == this) {
            throw new IllegalArgumentException(
                XMLMessages.createXMLMessage(XMLErrorResources.ER_SELF_CAUSATION_NOT_PERMITTED, null)); //"Self-causation not permitted");
        }

        this.containedException = cause;

        return this;
!!!5572891.java!!!	DTMException(in message : String)

        super(message);

        this.containedException = null;
        this.locator            = null;
!!!5573019.java!!!	DTMException(inout e : Throwable)

        super(e.getMessage());

        this.containedException = e;
        this.locator            = null;
!!!5573147.java!!!	DTMException(in message : String, inout e : Throwable)

        super(((message == null) || (message.length() == 0))
              ? e.getMessage()
              : message);

        this.containedException = e;
        this.locator            = null;
!!!5573275.java!!!	DTMException(in message : String, inout locator : SourceLocator)

        super(message);

        this.containedException = null;
        this.locator            = locator;
!!!5573403.java!!!	DTMException(in message : String, inout locator : SourceLocator, inout e : Throwable)

        super(message);

        this.containedException = e;
        this.locator            = locator;
!!!5573531.java!!!	getMessageAndLocation() : String

        StringBuffer sbuffer = new StringBuffer();
        String       message = super.getMessage();

        if (null != message) {
            sbuffer.append(message);
        }

        if (null != locator) {
            String systemID = locator.getSystemId();
            int    line     = locator.getLineNumber();
            int    column   = locator.getColumnNumber();

            if (null != systemID) {
                sbuffer.append("; SystemID: ");
                sbuffer.append(systemID);
            }

            if (0 != line) {
                sbuffer.append("; Line#: ");
                sbuffer.append(line);
            }

            if (0 != column) {
                sbuffer.append("; Column#: ");
                sbuffer.append(column);
            }
        }

        return sbuffer.toString();
!!!5573659.java!!!	getLocationAsString() : String

        if (null != locator) {
            StringBuffer sbuffer  = new StringBuffer();
            String       systemID = locator.getSystemId();
            int          line     = locator.getLineNumber();
            int          column   = locator.getColumnNumber();

            if (null != systemID) {
                sbuffer.append("; SystemID: ");
                sbuffer.append(systemID);
            }

            if (0 != line) {
                sbuffer.append("; Line#: ");
                sbuffer.append(line);
            }

            if (0 != column) {
                sbuffer.append("; Column#: ");
                sbuffer.append(column);
            }

            return sbuffer.toString();
        } else {
            return null;
        }
!!!5573787.java!!!	printStackTrace() : void
        printStackTrace(new java.io.PrintWriter(System.err, true));
!!!5573915.java!!!	printStackTrace(inout s : PrintStream) : void
        printStackTrace(new java.io.PrintWriter(s));
!!!5574043.java!!!	printStackTrace(inout s : PrintWriter) : void

        if (s == null) {
            s = new java.io.PrintWriter(System.err, true);
        }

        try {
            String locInfo = getLocationAsString();

            if (null != locInfo) {
                s.println(locInfo);
            }

            super.printStackTrace(s);
        } catch (Throwable e) {}

        Throwable exception = getException();

        for (int i = 0; (i < 10) && (null != exception); i++) {
            s.println("---------");

            try {
                if (exception instanceof DTMException) {
                    String locInfo =
                        ((DTMException) exception)
                            .getLocationAsString();

                    if (null != locInfo) {
                        s.println(locInfo);
                    }
                }

                exception.printStackTrace(s);
            } catch (Throwable e) {
                s.println("Could not print stack trace...");
            }

            try {
                Method meth =
                    ((Object) exception).getClass().getMethod("getException",
                        null);

                if (null != meth) {
                    Throwable prev = exception;

                    exception = (Throwable) meth.invoke(exception, null);

                    if (prev == exception) {
                        break;
                    }
                } else {
                    exception = null;
                }
            } catch (InvocationTargetException ite) {
                exception = null;
            } catch (IllegalAccessException iae) {
                exception = null;
            } catch (NoSuchMethodException nsme) {
                exception = null;
            }
        }
