class JScrollBar
!!!9040411.java!!!	checkOrientation(in orientation : int) : void
        switch (orientation) {
        case VERTICAL:
        case HORIZONTAL:
            break;
        default:
            throw new IllegalArgumentException("orientation must be one of: VERTICAL, HORIZONTAL");
        }
!!!9040539.java!!!	JScrollBar(in orientation : int, in value : int, in extent : int, in min : int, in max : int)
        checkOrientation(orientation);
        this.unitIncrement = 1;
        this.blockIncrement = (extent == 0) ? 1 : extent;
        this.orientation = orientation;
        this.model = new DefaultBoundedRangeModel(value, extent, min, max);
        this.model.addChangeListener(fwdAdjustmentEvents);
	setRequestFocusEnabled(false);
        updateUI();
!!!9040667.java!!!	JScrollBar(in orientation : int)
        this(orientation, 0, 10, 0, 100);
!!!9040795.java!!!	JScrollBar()
        this(VERTICAL);
!!!9040923.java!!!	setUI(inout ui : ScrollBarUI) : void
        super.setUI(ui);
!!!9041051.java!!!	getUI() : ScrollBarUI
 
        return (ScrollBarUI)ui;
!!!9041179.java!!!	updateUI() : void
        setUI((ScrollBarUI)UIManager.getUI(this));
!!!9041307.java!!!	getUIClassID() : String
        return uiClassID;
!!!9041435.java!!!	getOrientation() : int
 
        return orientation; 
!!!9041563.java!!!	setOrientation(in orientation : int) : void
 
        checkOrientation(orientation);
        int oldValue = this.orientation;
        this.orientation = orientation;
        firePropertyChange("orientation", oldValue, orientation);

        if ((oldValue != orientation) && (accessibleContext != null)) {
            accessibleContext.firePropertyChange(
                    AccessibleContext.ACCESSIBLE_STATE_PROPERTY,
                    ((oldValue == VERTICAL) 
                     ? AccessibleState.VERTICAL : AccessibleState.HORIZONTAL),
                    ((orientation == VERTICAL) 
                     ? AccessibleState.VERTICAL : AccessibleState.HORIZONTAL));
        }
        if (orientation != oldValue) {
            revalidate();
        }
!!!9041691.java!!!	getModel() : BoundedRangeModel
 
        return model; 
!!!9041819.java!!!	setModel(inout newModel : BoundedRangeModel) : void
        Integer oldValue = null;
        BoundedRangeModel oldModel = model;
        if (model != null) {
            model.removeChangeListener(fwdAdjustmentEvents);
            oldValue = new Integer(model.getValue());
        }
        model = newModel;
        if (model != null) {
            model.addChangeListener(fwdAdjustmentEvents);
        }

        firePropertyChange("model", oldModel, model);

        if (accessibleContext != null) {
            accessibleContext.firePropertyChange(
                    AccessibleContext.ACCESSIBLE_VALUE_PROPERTY,
                    oldValue, new Integer(model.getValue()));        
        }
!!!9041947.java!!!	getUnitIncrement(in direction : int) : int
 
        return unitIncrement; 
!!!9042075.java!!!	setUnitIncrement(in unitIncrement : int) : void
 
        int oldValue = this.unitIncrement;
        this.unitIncrement = unitIncrement;
        firePropertyChange("unitIncrement", oldValue, unitIncrement);
!!!9042203.java!!!	getBlockIncrement(in direction : int) : int
 
        return blockIncrement; 
!!!9042331.java!!!	setBlockIncrement(in blockIncrement : int) : void
 
        int oldValue = this.blockIncrement;
        this.blockIncrement = blockIncrement;
        firePropertyChange("blockIncrement", oldValue, blockIncrement);
!!!9042459.java!!!	getUnitIncrement() : int
        return unitIncrement;
!!!9042587.java!!!	getBlockIncrement() : int
        return blockIncrement;
!!!9042715.java!!!	getValue() : int
 
        return getModel().getValue(); 
!!!9042843.java!!!	setValue(in value : int) : void
        BoundedRangeModel m = getModel();
        int oldValue = m.getValue();
        m.setValue(value);

        if (accessibleContext != null) {
            accessibleContext.firePropertyChange(
                    AccessibleContext.ACCESSIBLE_VALUE_PROPERTY,
                    new Integer(oldValue),
                    new Integer(m.getValue()));
        }
!!!9042971.java!!!	getVisibleAmount() : int
 
        return getModel().getExtent(); 
!!!9043099.java!!!	setVisibleAmount(in extent : int) : void
 
        getModel().setExtent(extent); 
!!!9043227.java!!!	getMinimum() : int
 
        return getModel().getMinimum(); 
!!!9043355.java!!!	setMinimum(in minimum : int) : void
 
        getModel().setMinimum(minimum); 
!!!9043483.java!!!	getMaximum() : int
 
        return getModel().getMaximum(); 
!!!9043611.java!!!	setMaximum(in maximum : int) : void
 
        getModel().setMaximum(maximum); 
!!!9043739.java!!!	getValueIsAdjusting() : boolean
 
        return getModel().getValueIsAdjusting(); 
!!!9043867.java!!!	setValueIsAdjusting(inout b : boolean) : void
 
        BoundedRangeModel m = getModel();   
        boolean oldValue = m.getValueIsAdjusting();
        m.setValueIsAdjusting(b);
   
        if ((oldValue != b) && (accessibleContext != null)) {
            accessibleContext.firePropertyChange(
                    AccessibleContext.ACCESSIBLE_STATE_PROPERTY,
                    ((oldValue) ? AccessibleState.BUSY : null),
                    ((b) ? AccessibleState.BUSY : null));
        }
!!!9043995.java!!!	setValues(in newValue : int, in newExtent : int, in newMin : int, in newMax : int) : void
        BoundedRangeModel m = getModel();
        int oldValue = m.getValue();
        m.setRangeProperties(newValue, newExtent, newMin, newMax, m.getValueIsAdjusting());

        if (accessibleContext != null) {
            accessibleContext.firePropertyChange(
                    AccessibleContext.ACCESSIBLE_VALUE_PROPERTY,
                    new Integer(oldValue),
                    new Integer(m.getValue()));
        }
!!!9044123.java!!!	addAdjustmentListener(inout l : AdjustmentListener) : void
        listenerList.add(AdjustmentListener.class, l);
!!!9044251.java!!!	removeAdjustmentListener(inout l : AdjustmentListener) : void
        listenerList.remove(AdjustmentListener.class, l);
!!!9044379.java!!!	getAdjustmentListeners() : AdjustmentListener
        return (AdjustmentListener[])listenerList.getListeners(
                AdjustmentListener.class);
!!!9044507.java!!!	fireAdjustmentValueChanged(in id : int, in type : int, in value : int) : void
	fireAdjustmentValueChanged(id, type, value, getValueIsAdjusting());
!!!9044635.java!!!	fireAdjustmentValueChanged(in id : int, in type : int, in value : int, inout isAdjusting : boolean) : void
        Object[] listeners = listenerList.getListenerList();
        AdjustmentEvent e = null;
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i]==AdjustmentListener.class) {
                if (e == null) {
                    e = new AdjustmentEvent(this, id, type, value, isAdjusting);
                }
                ((AdjustmentListener)listeners[i+1]).adjustmentValueChanged(e);
            }          
        }
!!!9044891.java!!!	getMinimumSize() : Dimension
        Dimension pref = getPreferredSize();
        if (orientation == VERTICAL) {
            return new Dimension(pref.width, 5);
        } else {
            return new Dimension(5, pref.height);
        }
!!!9045019.java!!!	getMaximumSize() : Dimension
        Dimension pref = getPreferredSize();
        if (getOrientation() == VERTICAL) {
            return new Dimension(pref.width, Short.MAX_VALUE);
        } else {
            return new Dimension(Short.MAX_VALUE, pref.height);
        }
!!!9045147.java!!!	setEnabled(inout x : boolean) : void
        super.setEnabled(x);
        Component[] children = getComponents();
        for(int i = 0; i < children.length; i++) {
            children[i].setEnabled(x);
        }
!!!9045275.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        if (getUIClassID().equals(uiClassID)) {
            byte count = JComponent.getWriteObjCounter(this);
            JComponent.setWriteObjCounter(this, --count);
            if (count == 0 && ui != null) {
                ui.installUI(this);
            }
        }
!!!9045403.java!!!	paramString() : String
	String orientationString = (orientation == HORIZONTAL ?
				    "HORIZONTAL" : "VERTICAL");

	return super.paramString() +
	",blockIncrement=" + blockIncrement +
	",orientation=" + orientationString +
	",unitIncrement=" + unitIncrement;
!!!9045531.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleJScrollBar();
        }
        return accessibleContext;
