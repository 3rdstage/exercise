class DocumentBuilder
!!!5369243.java!!!	reset() : void
	
		// implementors should override this method
		throw new UnsupportedOperationException(
			"This DocumentBuilder, \"" + this.getClass().getName() + "\", does not support the reset functionality."
			+ "  Specification \"" + this.getClass().getPackage().getSpecificationTitle() + "\""
			+ " version \"" + this.getClass().getPackage().getSpecificationVersion() + "\""
			);
!!!5369371.java!!!	parse(inout is : InputStream) : Document
        if (is == null) {
            throw new IllegalArgumentException("InputStream cannot be null");
        }
        
        InputSource in = new InputSource(is);
        return parse(in);
!!!5369499.java!!!	parse(inout is : InputStream, in systemId : String) : Document
        if (is == null) {
            throw new IllegalArgumentException("InputStream cannot be null");
        }
        
        InputSource in = new InputSource(is);
        in.setSystemId(systemId);
        return parse(in);
!!!5369627.java!!!	parse(in uri : String) : Document
        if (uri == null) {
            throw new IllegalArgumentException("URI cannot be null");
        }
        
        InputSource in = new InputSource(uri);
        return parse(in);
!!!5369755.java!!!	parse(inout f : File) : Document
        if (f == null) {
            throw new IllegalArgumentException("File cannot be null");
        }

        String uri = "file:" + f.getAbsolutePath();
        if (File.separatorChar == '\\') {
            uri = uri.replace('\\', '/');
        }
        InputSource in = new InputSource(uri);
        return parse(in);
!!!5370779.java!!!	getSchema() : Schema
        throw new UnsupportedOperationException(
            "This parser does not support specification \""
            + this.getClass().getPackage().getSpecificationTitle()
            + "\" version \""
            + this.getClass().getPackage().getSpecificationVersion()
            + "\""
            );
!!!5370907.java!!!	isXIncludeAware() : boolean
        throw new UnsupportedOperationException(
            "This parser does not support specification \""
            + this.getClass().getPackage().getSpecificationTitle()
            + "\" version \""
            + this.getClass().getPackage().getSpecificationVersion()
            + "\""
            );
