format 66
"metadata" // src::javax::imageio::metadata
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/imageio/metadata"
  java_package "javax.imageio.metadata"
  classview 149275 "metadata"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 341915 "IIOMetadata"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An abstract class to be extended by objects that represent metadata
(non-image data) associated with images and streams.  Plug-ins
represent metadata using opaque, plug-in specific objects.  These
objects, however, provide the ability to access their internal
information as a tree of <code>IIOMetadataNode</code> objects that
support the XML DOM interfaces as well as additional interfaces for
storing non-textual data and retrieving information about legal
data values.  The format of such trees is plug-in dependent, but
plug-ins may choose to support a plug-in neutral format described
below.  A single plug-in may support multiple metadata formats,
whose names maybe determined by calling
<code>getMetadataFormatNames</code>.  The plug-in may also support
a single special format, referred to as the \"native\" format, which
is designed to encode its metadata losslessly.  This format will
typically be designed specifically to work with a specific file
format, so that images may be loaded and saved in the same format
with no loss of metadata, but may be less useful for transfering
metadata between an <code>ImageReader</code> and an
<code>ImageWriter</code> for different image formats.  To convert
between two native formats as losslessly as the image file formats
will allow, an <code>ImageTranscoder</code> object must be used.

@see javax.imageio.ImageReader#getImageMetadata
@see javax.imageio.ImageReader#getStreamMetadata
@see javax.imageio.ImageReader#readAll
@see javax.imageio.ImageWriter#getDefaultStreamMetadata
@see javax.imageio.ImageWriter#getDefaultImageMetadata
@see javax.imageio.ImageWriter#write
@see javax.imageio.ImageWriter#convertImageMetadata
@see javax.imageio.ImageWriter#convertStreamMetadata
@see javax.imageio.IIOImage
@see javax.imageio.ImageTranscoder

@version 0.5"
      attribute 531227 "standardFormatSupported"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A boolean indicating whether the concrete subclass supports the
standard metadata format, set via the constructor.
"
      end

      attribute 531355 "nativeMetadataFormatName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the native metadata format for this object,
initialized to <code>null</code> and set via the constructor.
"
      end

      attribute 531483 "nativeMetadataFormatClassName"
	protected explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the class implementing <code>IIOMetadataFormat</code>
and representing the native metadata format, initialized to
<code>null</code> and set via the constructor.
"
      end

      attribute 531611 "extraMetadataFormatNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of names of formats, other than the standard and
native formats, that are supported by this plug-in,
initialized to <code>null</code> and set via the constructor.
"
      end

      attribute 531739 "extraMetadataFormatClassNames"
	protected explicit_type "String"
	multiplicity "[]"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of names of classes implementing <code>IIOMetadataFormat</code>
and representing the metadata formats, other than the standard and
native formats, that are supported by this plug-in,
initialized to <code>null</code> and set via the constructor.
"
      end

      classrelation 499867 // defaultController (<unidirectional association>)
	relation 499867 --->
	  a role_name "defaultController" init_value "=  null" protected
	    comment "
An <code>IIOMetadataController</code> that is suggested for use
as the controller for this <code>IIOMetadata</code> object.  It
may be retrieved via <code>getDefaultController</code>.  To
install the default controller, call
<code>setController(getDefaultController())</code>.  This
instance variable should be set by subclasses that choose to
provide their own default controller, usually a GUI, for
setting parameters.

@see IIOMetadataController
@see #getDefaultController

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499867 // defaultController (<unidirectional association>)
	  b parent class_ref 345371 // IIOMetadataController
      end

      classrelation 499995 // controller (<unidirectional association>)
	relation 499995 --->
	  a role_name "controller" init_value "=  null" protected
	    comment "
The <code>IIOMetadataController</code> that will be
used to provide settings for this <code>IIOMetadata</code>
object when the <code>activateController</code> method
is called.  This value overrides any default controller, 
even when <code>null</code>.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #hasController()
@see #activateController()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 499995 // controller (<unidirectional association>)
	  b parent class_ref 345371 // IIOMetadataController
      end

      operation 1927451 "IIOMetadata"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <code>IIOMetadata</code> object.  The
subclass is responsible for suppying values for all protected
instance variables that will allow any non-overridden default
implemtations of methods to satisfy their contracts.  For example,
<code>extraMetadataFormatNames</code> should not have length 0."
      end

      operation 1927579 "IIOMetadata"
	protected explicit_return_type ""
	nparams 5
	  param inout name "standardMetadataFormatSupported" explicit_type "boolean"
	  param in name "nativeMetadataFormatName" explicit_type "String"
	  param in name "nativeMetadataFormatClassName" explicit_type "String"
	  param in name "extraMetadataFormatNames" explicit_type "String"
	  param in name "extraMetadataFormatClassNames" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOMetadata</code> object with the given
format names and format class names, as well as a boolean
indicating whether the standard format is supported.

<p> This constructor does not attempt to check the class names
for validity.  Invalid class names may cause exceptions in
subsequent calls to <code>getMetadataFormat</code>.

@param standardMetadataFormatSupported <code>true</code> if
this object can return or accept a DOM tree using the standard
metadata format.
@param nativeMetadataFormatName the name of the native metadata
format, as a <code>String</code>, or <code>null</code> if there
is no native format.
@param nativeMetadataFormatClassName the name of the class of 
the native metadata format, or <code>null</code> if there is
no native format.
@param extraMetadataFormatNames an array of <code>String</code>s
indicating additional formats supported by this object, or
<code>null</code> if there are none.
@param extraMetadataFormatClassNames an array of <code>String</code>s
indicating the class names of any additional formats supported by
this object, or <code>null</code> if there are none.

@exception IllegalArgumentException if
<code>extraMetadataFormatNames</code> has length 0.
@exception IllegalArgumentException if
<code>extraMetadataFormatNames</code> and
<code>extraMetadataFormatClassNames</code> are neither both
<code>null</code>, nor of the same length."
      end

      operation 1927707 "isStandardMetadataFormatSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the standard metadata format is
supported by <code>getMetadataFormat</code>,
<code>getAsTree</code>, <code>setFromTree</code>, and
<code>mergeTree</code>.

<p> The default implementation returns the value of the
<code>standardFormatSupported</code> instance variable.

@return <code>true</code> if the standard metadata format
is supported.

@see #getAsTree
@see #setFromTree
@see #mergeTree
@see #getMetadataFormat"
      end

      operation 1927835 "isReadOnly"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this object does not support the
<code>mergeTree</code>, <code>setFromTree</code>, and
<code>reset</code> methods.  

@return true if this <code>IIOMetadata</code> object cannot be
modified."
      end

      operation 1927963 "getNativeMetadataFormatName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the \"native\" metadata format for this
plug-in, which typically allows for lossless encoding and
transmission of the metadata stored in the format handled by
this plug-in.  If no such format is supported,
<code>null</code>will be returned.  

<p> The structure and contents of the \"native\" metadata format
are defined by the plug-in that created this
<code>IIOMetadata</code> object.  Plug-ins for simple formats
will usually create a dummy node for the root, and then a
series of child nodes representing individual tags, chunks, or
keyword/value pairs.  A plug-in may choose whether or not to
document its native format.

<p> The default implementation returns the value of the
<code>nativeMetadataFormatName</code> instance variable.

@return the name of the native format, or <code>null</code>.

@see #getExtraMetadataFormatNames
@see #getMetadataFormatNames"
      end

      operation 1928091 "getExtraMetadataFormatNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of additional metadata formats, other than the native and standard
formats, recognized by this plug-in's
<code>getAsTree</code>, <code>setFromTree</code>, and
<code>mergeTree</code> methods.  If there are no such additional
formats, <code>null</code> is returned.

<p> The default implementation returns a clone of the
<code>extraMetadataFormatNames</code> instance variable.

@return an array of <code>String</code>s with length at least
1, or <code>null</code>.

@see #getAsTree
@see #setFromTree
@see #mergeTree
@see #getNativeMetadataFormatName
@see #getMetadataFormatNames"
      end

      operation 1928219 "getMetadataFormatNames"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of all metadata formats, including the native and standard
formats, recognized by this plug-in's <code>getAsTree</code>,
<code>setFromTree</code>, and <code>mergeTree</code> methods.
If there are no such formats, <code>null</code> is returned.

<p> The default implementation calls
<code>getNativeMetadataFormatName</code>,
<code>isStandardMetadataFormatSupported</code>, and
<code>getExtraMetadataFormatNames</code> and returns the
combined results.

@return an array of <code>String</code>s.

@see #getNativeMetadataFormatName
@see #isStandardMetadataFormatSupported
@see #getExtraMetadataFormatNames"
      end

      operation 1928347 "getMetadataFormat"
	public return_type class_ref 343707 // IIOMetadataFormat
	nparams 1
	  param in name "formatName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
given metadata format, or <code>null</code> if no description
is available.  The supplied name must be one of those returned
by <code>getMetadataFormatNames</code> (<i>i.e.</i>, either the
native format name, the standard format name, or one of those
returned by <code>getExtraMetadataFormatNames</code>).

<p> The default implementation checks the name against the
global standard metadata format name, and returns that format
if it is supported.  Otherwise, it checks against the native
format names followed by any additional format names.  If a
match is found, it retrieves the name of the
<code>IIOMetadataFormat</code> class from
<code>nativeMetadataFormatClassName</code> or
<code>extraMetadataFormatClassNames</code> as appropriate, and
constructs an instance of that class using its
<code>getInstance</code> method.

@param formatName the desired metadata format.

@return an <code>IIOMetadataFormat</code> object.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names recognized by
the plug-in.
@exception IllegalStateException if the class corresponding to
the format name cannot be loaded."
      end

      operation 1928475 "getAsTree"
	abstract public return_type class_ref 345499 // Node
	nparams 1
	  param in name "formatName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an XML DOM <code>Node</code> object that represents the
root of a tree of metadata contained within this object
according to the conventions defined by a given metadata
format.

<p> The names of the available metadata formats may be queried
using the <code>getMetadataFormatNames</code> method.

@param formatName the desired metadata format.

@return an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.

@see #getMetadataFormatNames
@see #setFromTree
@see #mergeTree"
      end

      operation 1928603 "mergeTree"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "formatName" explicit_type "String"
	  param inout name "root" type class_ref 345499 // Node
	nexceptions 1
	  exception class_ref 345627 // IIOInvalidTreeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Alters the internal state of this <code>IIOMetadata</code>
object from a tree of XML DOM <code>Node</code>s whose syntax
is defined by the given metadata format.  The previous state is
altered only as necessary to accomodate the nodes that are
present in the given tree.  If the tree structure or contents
are invalid, an <code>IIOInvalidTreeException</code> will be
thrown.

<p> As the semantics of how a tree or subtree may be merged with
another tree are completely format-specific, plug-in authors may
implement this method in whatever manner is most appropriate for
the format, including simply replacing all existing state with the
contents of the given tree.

@param formatName the desired metadata format.
@param root an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalStateException if this object is read-only.
@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.
@exception IllegalArgumentException if <code>root</code> is
<code>null</code>.
@exception IIOInvalidTreeException if the tree cannot be parsed
successfully using the rules of the given format.

@see #getMetadataFormatNames
@see #getAsTree
@see #setFromTree"
      end

      operation 1928731 "getStandardChromaNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the chroma
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1928859 "getStandardCompressionNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
compression information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1928987 "getStandardDataNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the data
format information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1929115 "getStandardDimensionNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
dimension information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1929243 "getStandardDocumentNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the document
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1929371 "getStandardTextNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the textual
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1929499 "getStandardTileNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the tiling
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree"
      end

      operation 1929627 "getStandardTransparencyNode"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
transparency information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>."
      end

      operation 1929755 "append"
	private explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 345755 // IIOMetadataNode
	  param inout name "node" type class_ref 345755 // IIOMetadataNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a new node to an existing node, if the new node is
non-<code>null</code>."
      end

      operation 1929883 "getStandardTree"
	protected return_type class_ref 345755 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility method to return a tree of
<code>IIOMetadataNode</code>s representing the metadata
contained within this object according to the conventions of
the standard <code>javax_imageio_1.0</code> metadata format.

<p> This method calls the various <code>getStandard*Node</code>
methods to supply each of the subtrees rooted at the children
of the root node.  If any of those methods returns
<code>null</code>, the corresponding subtree will be omitted.
If all of them return <code>null</code>, a tree consisting of a
single root node will be returned.

@return an <code>IIOMetadataNode</code> representing the root
of a metadata tree in the <code>javax_imageio_1.0</code>
format.

@see #getStandardChromaNode
@see #getStandardCompressionNode
@see #getStandardDataNode
@see #getStandardDimensionNode
@see #getStandardDocumentNode
@see #getStandardTextNode
@see #getStandardTileNode
@see #getStandardTransparencyNode"
      end

      operation 1930011 "setFromTree"
	public explicit_return_type "void"
	nparams 2
	  param in name "formatName" explicit_type "String"
	  param inout name "root" type class_ref 345499 // Node
	nexceptions 1
	  exception class_ref 345627 // IIOInvalidTreeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the internal state of this <code>IIOMetadata</code> object
from a tree of XML DOM <code>Node</code>s whose syntax is
defined by the given metadata format.  The previous state is
discarded.  If the tree's structure or contents are invalid, an
<code>IIOInvalidTreeException</code> will be thrown.

<p> The default implementation calls <code>reset</code>
followed by <code>mergeTree(formatName, root)</code>.

@param formatName the desired metadata format.
@param root an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalStateException if this object is read-only.
@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.
@exception IllegalArgumentException if <code>root</code> is
<code>null</code>.
@exception IIOInvalidTreeException if the tree cannot be parsed
successfully using the rules of the given format.

@see #getMetadataFormatNames
@see #getAsTree
@see #mergeTree"
      end

      operation 1930139 "reset"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets all the data stored in this object to default values,
usually to the state this object was in immediately after
construction, though the precise semantics are plug-in specific.
Note that there are many possible default values, depending on
how the object was created.

@exception IllegalStateException if this object is read-only.

@see javax.imageio.ImageReader#getStreamMetadata
@see javax.imageio.ImageReader#getImageMetadata
@see javax.imageio.ImageWriter#getDefaultStreamMetadata
@see javax.imageio.ImageWriter#getDefaultImageMetadata"
      end

      operation 1930267 "setController"
	public explicit_return_type "void"
	nparams 1
	  param inout name "controller" type class_ref 345371 // IIOMetadataController
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>IIOMetadataController</code> to be used
to provide settings for this <code>IIOMetadata</code>
object when the <code>activateController</code> method
is called, overriding any default controller.  If the
argument is <code>null</code>, no controller will be
used, including any default.  To restore the default, use
<code>setController(getDefaultController())</code>.

<p> The default implementation sets the <code>controller</code>
instance variable to the supplied value.

@param controller An appropriate 
<code>IIOMetadataController</code>, or <code>null</code>.

@see IIOMetadataController
@see #getController
@see #getDefaultController
@see #hasController
@see #activateController()"
      end

      operation 1930395 "getController"
	public return_type class_ref 345371 // IIOMetadataController
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whatever <code>IIOMetadataController</code> is currently
installed.  This could be the default if there is one, 
<code>null</code>, or the argument of the most recent call
to <code>setController</code>.

<p> The default implementation returns the value of the
<code>controller</code> instance variable.

@return the currently installed
<code>IIOMetadataController</code>, or <code>null</code>.

@see IIOMetadataController
@see #setController
@see #getDefaultController
@see #hasController
@see #activateController()"
      end

      operation 1930523 "getDefaultController"
	public return_type class_ref 345371 // IIOMetadataController
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default <code>IIOMetadataController</code>, if there
is one, regardless of the currently installed controller.  If
there is no default controller, returns <code>null</code>.

<p> The default implementation returns the value of the
<code>defaultController</code> instance variable.

@return the default <code>IIOMetadataController</code>, or
<code>null</code>.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #hasController
@see #activateController()"
      end

      operation 1930651 "hasController"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if there is a controller installed
for this <code>IIOMetadata</code> object.

<p> The default implementation returns <code>true</code> if the
<code>getController</code> method returns a
non-<code>null</code> value.

@return <code>true</code> if a controller is installed.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #getDefaultController
@see #activateController()"
      end

      operation 1930779 "activateController"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Activates the installed <code>IIOMetadataController</code> for
this <code>IIOMetadata</code> object and returns the resulting
value.  When this method returns <code>true</code>, all values for this
<code>IIOMetadata</code> object will be ready for the next write
operation.  If <code>false</code> is
returned, no settings in this object will have been disturbed
(<i>i.e.</i>, the user canceled the operation).

<p> Ordinarily, the controller will be a GUI providing a user
interface for a subclass of <code>IIOMetadata</code> for a
particular plug-in.  Controllers need not be GUIs, however.

<p> The default implementation calls <code>getController</code>
and the calls <code>activate</code> on the returned object if
<code>hasController</code> returns <code>true</code>.

@return <code>true</code> if the controller completed normally.

@exception IllegalStateException if there is no controller
currently installed.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #getDefaultController
@see #hasController"
      end
    end

    class 343707 "IIOMetadataFormat"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An object describing the structure of metadata documents returned
from <code>IIOMetadata.getAsTree</code> and passed to
<code>IIOMetadata.setFromTree</code> and <code>mergeTree</code>.
Document structures are described by a set of constraints on the
type and number of child elements that may belong to a given parent
element type, the names, types, and values of attributes that may
belong to an element, and the type and values of
<code>Object</code> reference that may be stored at a node.

<p> N.B: classes that implement this interface should contain a
method declared as <code>public static getInstance()</code> which
returns an instance of the class.  Commonly, an implentation will
construct only a single instance and cache it for future
invocations of <code>getInstance</code>.

<p> The structures that may be described by this class are a subset
of those expressible using XML document type definitions (DTDs),
with the addition of some basic information on the datatypes of
attributes and the ability to store an <code>Object</code>
reference within a node.  In the future, XML Schemas could be used
to represent these structures, and many others.

<p> The differences between
<code>IIOMetadataFormat</code>-described structures and DTDs are as
follows:

<ul>
<li> Elements may not contain text or mix text with embedded
tags.

<li> The children of an element must conform to one of a few simple
patterns, described in the documentation for the
<code>CHILD_*</code> constants;

<li> The in-memory representation of an elements may contain a
reference to an <code>Object</code>.  There is no provision for
representing such objects textually.
</ul>

@version 0.5"
      attribute 536219 "CHILD_POLICY_EMPTY"
	public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Child policies

A constant returned by <code>getChildPolicy</code> to indicate
that an element may not have any children.  In other words, it
is required to be a leaf node.
"
      end

      attribute 536347 "CHILD_POLICY_ALL"
	public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have a single instance of each of its
legal child elements, in order.  In DTD terms, the contents of
the element are defined by a sequence <code>a,b,c,d,...</code>.
"
      end

      attribute 536475 "CHILD_POLICY_SOME"
	public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or one instance of each of its
legal child elements, in order.  In DTD terms, the contents of
the element are defined by a sequence
<code>a?,b?,c?,d?,...</code>.
"
      end

      attribute 536603 "CHILD_POLICY_CHOICE"
	public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or one children, selected from
among its legal child elements.  In DTD terms, the contents of
the element are defined by a selection
<code>a|b|c|d|...</code>.
"
      end

      attribute 536731 "CHILD_POLICY_SEQUENCE"
	public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have a sequence of instances of any of its
legal child elements.  In DTD terms, the contents of the
element are defined by a sequence <code>(a|b|c|d|...)*</code>.
"
      end

      attribute 536859 "CHILD_POLICY_REPEAT"
	public explicit_type "int"
	init_value "=  5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or more instances of its unique
legal child element.  In DTD terms, the contents of the element
are defined by a starred expression <code>a*</code>.
"
      end

      attribute 536987 "CHILD_POLICY_MAX"
	public explicit_type "int"
	init_value "=  CHILD_POLICY_REPEAT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The largest valid <code>CHILD_POLICY_*</code> constant,
to be used for range checks.
"
      end

      attribute 537115 "VALUE_NONE"
	public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getObjectValueType</code> to
indicate the absence of a user object.
"
      end

      attribute 537243 "VALUE_ARBITRARY"
	public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a single, arbitrary value.
"
      end

      attribute 537371 "VALUE_RANGE"
	public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a range of values.  Both the minimum
and maximum values of the range are exclusive.  It is
recommended that ranges of integers be inclusive on both ends,
and that exclusive ranges be used only for floating-point data.

@see #VALUE_RANGE_MIN_MAX_INCLUSIVE
"
      end

      attribute 537499 "VALUE_RANGE_MIN_INCLUSIVE_MASK"
	public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A value that may be or'ed with <code>VALUE_RANGE</code> to
obtain <code>VALUE_RANGE_MIN_INCLUSIVE</code>, and with
<code>VALUE_RANGE_MAX_INCLUSIVE</code> to obtain
<code>VALUE_RANGE_MIN_MAX_INCLUSIVE</code>.

<p> Similarly, the value may be and'ed with the value of
<code>getAttributeValueType</code>or
<code>getObjectValueType</code> to determine if the minimum
value of the range is inclusive.
"
      end

      attribute 537627 "VALUE_RANGE_MAX_INCLUSIVE_MASK"
	public explicit_type "int"
	init_value "=  8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A value that may be or'ed with <code>VALUE_RANGE</code> to
obtain <code>VALUE_RANGE_MAX_INCLUSIVE</code>, and with
<code>VALUE_RANGE_MIN_INCLUSIVE</code> to obtain
<code>VALUE_RANGE_MIN_MAX_INCLUSIVE</code>.

<p> Similarly, the value may be and'ed with the value of
<code>getAttributeValueType</code>or
<code>getObjectValueType</code> to determine if the maximum
value of the range is inclusive.
"
      end

      attribute 537755 "VALUE_RANGE_MIN_INCLUSIVE"
	public explicit_type "int"
	init_value "=  VALUE_RANGE |
        VALUE_RANGE_MIN_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a range of values.  The minimum
(but not the maximum) value of the range is inclusive.
"
      end

      attribute 537883 "VALUE_RANGE_MAX_INCLUSIVE"
	public explicit_type "int"
	init_value "=  VALUE_RANGE |
        VALUE_RANGE_MAX_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a range of values.  The maximum
(but not the minimum) value of the range is inclusive.
"
      end

      attribute 538011 "VALUE_RANGE_MIN_MAX_INCLUSIVE"
	public explicit_type "int"
	init_value "= 
        VALUE_RANGE |
        VALUE_RANGE_MIN_INCLUSIVE_MASK | 
        VALUE_RANGE_MAX_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a range of values.  Both the minimum
and maximum values of the range are inclusive.  It is
recommended that ranges of integers be inclusive on both ends,
and that exclusive ranges be used only for floating-point data.
"
      end

      attribute 538139 "VALUE_ENUMERATION"
	public explicit_type "int"
	init_value "=  16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set one of a number of enumerated values.
In the case of attributes, these values are
<code>String</code>s; for objects, they are
<code>Object</code>s implementing a given class or interface.

<p> Attribute values of type <code>DATATYPE_BOOLEAN</code>
should be marked as enumerations.
"
      end

      attribute 538267 "VALUE_LIST"
	public explicit_type "int"
	init_value "=  32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a list or array of values.  In the
case of attributes, the list will consist of
whitespace-separated values within a <code>String</code>; for
objects, an array will be used.
"
      end

      attribute 538395 "DATATYPE_STRING"
	public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a general Unicode
string.
"
      end

      attribute 538523 "DATATYPE_BOOLEAN"
	public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is one of 'true' or
'false'.
"
      end

      attribute 538651 "DATATYPE_INTEGER"
	public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of an integer.
"
      end

      attribute 538779 "DATATYPE_FLOAT"
	public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of a decimal floating-point number.
"
      end

      attribute 538907 "DATATYPE_DOUBLE"
	public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of a double-precision decimal floating-point
number.
"
      end

      operation 1932827 "getRootName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Root

Returns the name of the root element of the format.

@return a <code>String</code>."
      end

      operation 1932955 "canNodeAppear"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param inout name "imageType" type class_ref 341659 // ImageTypeSpecifier
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Multiplicity

Returns <code>true</code> if the element (and the subtree below
it) is allowed to appear in a metadata document for an image of
the given type, defined by an <code>ImageTypeSpecifier</code>.
For example, a metadata document format might contain an
element that describes the primary colors of the image, which
would not be allowed when writing a grayscale image.

@param elementName the name of the element being queried.
@param imageType an <code>ImageTypeSpecifier</code> indicating
the type of the image that will be associated with the
metadata.

@return <code>true</code> if the node is meaningful for images
of the given type."
      end

      operation 1933083 "getElementMinChildren"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of children of the named element
with child policy <code>CHILD_POLICY_REPEAT</code>.  For
example, an element representing color primary information
might be required to have at least 3 children, one for each
primay.

@param elementName the name of the element being queried.

@return an <code>int</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element does
not have a child policy of <code>CHILD_POLICY_REPEAT</code>."
      end

      operation 1933211 "getElementMaxChildren"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of children of the named element
with child policy <code>CHILD_POLICY_REPEAT</code>.  For
example, an element representing an entry in an 8-bit color
palette might be allowed to repeat up to 256 times.  A value of
<code>Integer.MAX_VALUE</code> may be used to specify that
there is no upper bound.

@param elementName the name of the element being queried.

@return an <code>int</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element does
not have a child policy of <code>CHILD_POLICY_REPEAT</code>."
      end

      operation 1933339 "getElementDescription"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named element, or <code>null</code>.  The desciption will be
localized for the supplied <code>Locale</code> if possible.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the element description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format."
      end

      operation 1933467 "getChildPolicy"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Children

Returns one of the constants starting with
<code>CHILD_POLICY_</code>, indicating the legal pattern of
children for the named element.

@param elementName the name of the element being queried.

@return one of the <code>CHILD_POLICY_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format."
      end

      operation 1933595 "getChildNames"
	public explicit_return_type "String"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s indicating the names
of the element which are allowed to be children of the named
element, in the order in which they should appear.  If the
element cannot have children, <code>null</code> is returned.

@param elementName the name of the element being queried.

@return an array of <code>String</code>s, or null.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format."
      end

      operation 1933723 "getAttributeNames"
	public explicit_return_type "String"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attributes

Returns an array of <code>String</code>s listing the names of
the attributes that may be associated with the named element.

@param elementName the name of the element being queried.

@return an array of <code>String</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format."
      end

      operation 1933851 "getAttributeValueType"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns one of the constants starting with <code>VALUE_</code>,
indicating whether the values of the given attribute within the
named element are arbitrary, constrained to lie within a
specified range, constrained to be one of a set of enumerated
values, or are a whitespace-separated list of arbitrary values.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return one of the <code>VALUE_*</code> constants. 

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element."
      end

      operation 1933979 "getAttributeDataType"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns one of the constants starting with
<code>DATATYPE_</code>, indicating the format and
interpretation of the value of the given attribute within th
enamed element.  If <code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>, then the legal value is a
whitespace-spearated list of values of the returned datatype.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return one of the <code>DATATYPE_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element."
      end

      operation 1934107 "isAttributeRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the named attribute must be
present within the named element.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return <code>true</code> if the attribut must be present.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element."
      end

      operation 1934235 "getAttributeDefaultValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of the named attribute, if it is not
explictly present within the named element, as a
<code>String</code>, or <code>null</code> if no default value
is available.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the default value, or
<code>null</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element."
      end

      operation 1934363 "getAttributeEnumerations"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the legal
enumerated values for the given attribute within the named
element.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_ENUMERATION</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return an array of <code>String</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as an enumeration."
      end

      operation 1934491 "getAttributeMinValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum legal value for the attribute.  Whether
this value is inclusive or exclusive may be determined by the
value of <code>getAttributeValueType</code>.  The value is
returned as a <code>String</code>; its interpretation is
dependent on the value of <code>getAttributeDataType</code>.
This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_RANGE_*</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the smallest legal
value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a range."
      end

      operation 1934619 "getAttributeMaxValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum legal value for the attribute.  Whether
this value is inclusive or exclusive may be determined by the
value of <code>getAttributeValueType</code>.  The value is
returned as a <code>String</code>; its interpretation is
dependent on the value of <code>getAttributeDataType</code>.
This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_RANGE_*</code>.

@param elementName the name of the element being queried, as a
<code>String</code>.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the largest legal
value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a range."
      end

      operation 1934747 "getAttributeListMinLength"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of list items that may be used to
define this attribute.  The attribute itself is defined as a
<code>String</code> containing multiple whitespace-separated
items.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return the smallest legal number of list items for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a list."
      end

      operation 1934875 "getAttributeListMaxLength"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of list items that may be used to
define this attribute.  A value of
<code>Integer.MAX_VALUE</code> may be used to specify that
there is no upper bound.  The attribute itself is defined as a
<code>String</code> containing multiple whitespace-separated
items.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return the largest legal number of list items for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a list."
      end

      operation 1935003 "getAttributeDescription"
	public explicit_return_type "String"
	nparams 3
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named attribute, or <code>null</code>.  The desciption will be
localized for the supplied <code>Locale</code> if possible.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param attrName the name of the attribute.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the attribute description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element."
      end

      operation 1935131 "getObjectValueType"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object value

Returns one of the enumerated values starting with
<code>VALUE_</code>, indicating the type of values
(enumeration, range, or array) that are allowed for the
<code>Object</code> reference.  If no object value can be
stored within the given element, the result of this method will
be <code>VALUE_NONE</code>.

<p> <code>Object</code> references whose legal values are
defined as a range must implement the <code>Comparable</code>
interface.

@param elementName the name of the element being queried.

@return one of the <code>VALUE_*</code> constants. 

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.

@see Comparable"
      end

      operation 1935259 "getObjectClass"
	public return_type class_ref 164635 // Class
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Class</code> type of the <code>Object</code>
reference stored within the element.  If this element may not
contain an <code>Object</code> reference, an
<code>IllegalArgumentException</code> will be thrown.  If the
class type is an array, this field indicates the underlying
class type (<i>e.g</i>, for an array of <code>int</code>s, this
method would return <code>int.class</code>).

<p> <code>Object</code> references whose legal values are
defined as a range must implement the <code>Comparable</code>
interface.

@param elementName the name of the element being queried.

@return a <code>Class</code> object.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>)."
      end

      operation 1935387 "getObjectDefaultValue"
	public explicit_return_type "Object"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code>s containing the default
value for the <code>Object</code> reference within
the named element.

@param elementName the name of the element being queried.

@return an <code>Object</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>)."
      end

      operation 1935515 "getObjectEnumerations"
	public explicit_return_type "Object"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Object</code>s containing the legal
enumerated values for the <code>Object</code> reference within
the named element.  This method should only be called if
<code>getObjectValueType</code> returns
<code>VALUE_ENUMERATION</code>.

<p> The <code>Object</code> associated with a node that accepts
emuerated values must be equal to one of the values returned by
this method, as defined by the <code>==</code> operator (as
opposed to the <code>Object.equals</code> method).

@param elementName the name of the element being queried.

@return an array of <code>Object</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as an enumeration."
      end

      operation 1935643 "getObjectMinValue"
	public return_type class_ref 221467 // Comparable
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum legal value for the <code>Object</code>
reference within the named element.  Whether this value is
inclusive or exclusive may be determined by the value of
<code>getObjectValueType</code>.  This method should only be
called if <code>getObjectValueType</code> returns one of the
constants starting with <code>VALUE_RANGE</code>.

@param elementName the name of the element being queried.

@return the smallest legal value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as a range."
      end

      operation 1935771 "getObjectMaxValue"
	public return_type class_ref 221467 // Comparable
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum legal value for the <code>Object</code>
reference within the named element.  Whether this value is
inclusive or exclusive may be determined by the value of
<code>getObjectValueType</code>.  This method should only be
called if <code>getObjectValueType</code> returns one of the
constants starting with <code>VALUE_RANGE</code>.

@return the smallest legal value for the attribute.

@param elementName the name of the element being queried.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as a range."
      end

      operation 1935899 "getObjectArrayMinLength"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of array elements that may be used
to define the <code>Object</code> reference within the named
element.  This method should only be called if
<code>getObjectValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.

@return the smallest valid array length for the
<code>Object</code> reference.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code> is not
an array."
      end

      operation 1936027 "getObjectArrayMaxLength"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of array elements that may be used
to define the <code>Object</code> reference within the named
element.  A value of <code>Integer.MAX_VALUE</code> may be used
to specify that there is no upper bound.  This method should
only be called if <code>getObjectValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.

@return the largest valid array length for the
<code>Object</code> reference.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code> is not
an array."
      end
    end

    class 345371 "IIOMetadataController"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface to be implemented by objects that can determine the
settings of an <code>IIOMetadata</code> object, either by putting
up a GUI to obtain values from a user, or by other means.  This
interface merely specifies a generic <code>activate</code> method
that invokes the controller, without regard for how the controller
obtains values (<i>i.e.</i>, whether the controller puts up a GUI
or merely computes a set of values is irrelevant to this
interface).

<p> Within the <code>activate</code> method, a controller obtains
initial values by querying the <code>IIOMetadata</code> object's
settings, either using the XML DOM tree or a plug-in specific
interface, modifies values by whatever means, then modifies the
<code>IIOMetadata</code> object's settings, using either the
<code>setFromTree</code> or <code>mergeTree</code> methods, or a
plug-in specific interface.  In general, applications may expect
that when the <code>activate</code> method returns
<code>true</code>, the <code>IIOMetadata</code> object is ready for
use in a write operation.

<p> Vendors may choose to provide GUIs for the
<code>IIOMetadata</code> subclasses they define for a particular
plug-in.  These can be set up as default controllers in the
corresponding <code>IIOMetadata</code> subclasses.

<p> Alternatively, an algorithmic process such as a database lookup
or the parsing of a command line could be used as a controller, in
which case the <code>activate</code> method would simply look up or
compute the settings, call methods on <code>IIOMetadata</code> to
set its state, and return <code>true</code>.

@see IIOMetadata#setController
@see IIOMetadata#getController
@see IIOMetadata#getDefaultController
@see IIOMetadata#hasController
@see IIOMetadata#activateController

@version 0.5"
      operation 8186651 "activate"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "metadata" type class_ref 341915 // IIOMetadata
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Activates the controller.  If <code>true</code> is returned,
all settings in the <code>IIOMetadata</code> object should be
ready for use in a write operation.  If <code>false</code> is
returned, no settings in the <code>IIOMetadata</code> object
will be disturbed (<i>i.e.</i>, the user canceled the
operation).

@param metadata the <code>IIOMetadata</code> object to be modified.

@return <code>true</code> if the <code>IIOMetadata</code> has been
modified, <code>false</code> otherwise.

@exception IllegalArgumentException if <code>metadata</code> is
<code>null</code> or is not an instance of the correct class."
      end
    end

    class 345627 "IIOInvalidTreeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An <code>IIOInvalidTreeException</code> is thrown when an attempt
by an <code>IIOMetadata</code> object to parse a tree of
<code>IIOMetadataNode</code>s fails.  The node that led to the
parsing error may be stored.  As with any parsing error, the actual
error may occur at a different point that that where it is
detected.  The node returned by <code>getOffendingNode</code>
should merely be considered as a clue to the actual nature of the
problem.

@see IIOMetadata#setFromTree
@see IIOMetadata#mergeTree
@see IIOMetadataNode

@version 0.5"
      classrelation 2012315 // <generalisation>
	relation 2012315 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2012315 // <generalisation>
	  b parent class_ref 342427 // IIOException
      end

      classrelation 2012443 // offendingNode (<unidirectional association>)
	relation 2012443 --->
	  a role_name "offendingNode" init_value "=  null" protected
	    comment "
The <code>Node</code> that led to the parsing error, or
<code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2012443 // offendingNode (<unidirectional association>)
	  b parent class_ref 345499 // Node
      end

      operation 8186267 "IIOInvalidTreeException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "offendingNode" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOInvalidTreeException</code> with a
message string and a reference to the <code>Node</code> that
caused the parsing error.

@param message a <code>String</code> containing the reason for
the parsing failure.
@param offendingNode the DOM <code>Node</code> that caused the
exception, or <code>null</code>."
      end

      operation 8186395 "IIOInvalidTreeException"
	public explicit_return_type ""
	nparams 3
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	  param inout name "offendingNode" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOInvalidTreeException</code> with a
message string, a reference to an exception that caused this
exception, and a reference to the <code>Node</code> that caused
the parsing error.

@param message a <code>String</code> containing the reason for
the parsing failure.
@param cause the <code>Throwable</code> (<code>Error</code> or
<code>Exception</code>) that caused this exception to occur,
or <code>null</code>.
@param offendingNode the DOM <code>Node</code> that caused the
exception, or <code>null</code>."
      end

      operation 8186523 "getOffendingNode"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Node</code> that caused the error in parsing.

@return the offending <code>Node</code>."
      end
    end

    class 345755 "IIOMetadataNode"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " End of dummy methods for DOM L3. PENDING: Please revisit

A class representing a node in a meta-data tree, which implements
the <a
href=\"../../../../api/org/w3c/dom/Element.html\">
<code>org.w3c.dom.Element</code></a> interface and additionally allows
for the storage of non-textual objects via the
<code>getUserObject</code> and <code>setUserObject</code> methods.

<p> This class is not intended to be used for general XML
processing. In particular, <code>Element</code> nodes created
within the Image I/O API are not compatible with those created by
Sun's standard implementation of the <code>org.w3.dom</code> API.
In particular, the implementation is tuned for simple uses and may
not perform well for intensive processing.

<p> Namespaces are ignored in this implementation.  The terms \"tag
name\" and \"node name\" are always considered to be synonymous.

@see IIOMetadata#getAsTree
@see IIOMetadata#setFromTree
@see IIOMetadata#mergeTree

@version 0.5"
      classrelation 2013595 // <realization>
	relation 2013595 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2013595 // <realization>
	  b parent class_ref 615067 // Element
      end

      classrelation 2013723 // <realization>
	relation 2013723 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2013723 // <realization>
	  b parent class_ref 354971 // NodeList
      end

      attribute 3007259 "nodeName"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the node as a <code>String</code>.
"
      end

      attribute 3007387 "nodeValue"
	private explicit_type "String"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value of the node as a <code>String</code>.  The Image I/O
API typically does not make use of the node value.
"
      end

      attribute 3007515 "userObject"
	private explicit_type "Object"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The <code>Object</code> value associated with this node.
"
      end

      classrelation 2013851 // parent (<unidirectional association>)
	relation 2013851 --->
	  a role_name "parent" init_value "=  null" private
	    comment "
The parent node of this node, or <code>null</code> if this node
forms the root of its own tree.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2013851 // parent (<unidirectional association>)
	  b parent class_ref 345755 // IIOMetadataNode
      end

      attribute 3007643 "numChildren"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of child nodes.
"
      end

      classrelation 2013979 // firstChild (<unidirectional association>)
	relation 2013979 --->
	  a role_name "firstChild" init_value "=  null" private
	    comment "
The first (leftmost) child node of this node, or
<code>null</code> if this node is a leaf node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2013979 // firstChild (<unidirectional association>)
	  b parent class_ref 345755 // IIOMetadataNode
      end

      classrelation 2014107 // lastChild (<unidirectional association>)
	relation 2014107 --->
	  a role_name "lastChild" init_value "=  null" private
	    comment "
The last (rightmost) child node of this node, or
<code>null</code> if this node is a leaf node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2014107 // lastChild (<unidirectional association>)
	  b parent class_ref 345755 // IIOMetadataNode
      end

      classrelation 2014235 // nextSibling (<unidirectional association>)
	relation 2014235 --->
	  a role_name "nextSibling" init_value "=  null" private
	    comment "
The next (right) sibling node of this node, or
<code>null</code> if this node is its parent's last child node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2014235 // nextSibling (<unidirectional association>)
	  b parent class_ref 345755 // IIOMetadataNode
      end

      classrelation 2014363 // previousSibling (<unidirectional association>)
	relation 2014363 --->
	  a role_name "previousSibling" init_value "=  null" private
	    comment "
The previous (left) sibling node of this node, or
<code>null</code> if this node is its parent's first child node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2014363 // previousSibling (<unidirectional association>)
	  b parent class_ref 345755 // IIOMetadataNode
      end

      classrelation 2014491 // attributes (<unidirectional association>)
	relation 2014491 --->
	  a role_name "attributes" init_value "=  new ArrayList()" private
	    comment "
A <code>List</code> of <code>IIOAttr</code> nodes representing
attributes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2014491 // attributes (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8191643 "IIOMetadataNode"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <code>IIOMetadataNode</code>."
      end

      operation 8191771 "IIOMetadataNode"
	public explicit_return_type ""
	nparams 1
	  param in name "nodeName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOMetadataNode</code> with a given node
name.

@param nodeName the name of the node, as a <code>String</code>."
      end

      operation 8191899 "checkNode"
	private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the node is either <code>null</code> or an
<code>IIOMetadataNode</code>."
      end

      operation 8192027 "getNodeName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from Node

Returns the node name associated with this node.

@return the node name, as a <code>String</code>."
      end

      operation 8192155 "getNodeValue"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8192283 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "nodeValue" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8192411 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the node type, which is always
<code>ELEMENT_NODE</code>.

@return the <code>short</code> value <code>ELEMENT_NODE</code>."
      end

      operation 8192539 "getParentNode"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent of this node.  A <code>null</code> value
indicates that the node is the root of its own tree.  To add a
node to an existing tree, use one of the
<code>insertBefore</code>, <code>replaceChild</code>, or
<code>appendChild</code> methods.

@return the parent, as a <code>Node</code>.

@see #insertBefore
@see #replaceChild
@see #appendChild"
      end

      operation 8192667 "getChildNodes"
	public return_type class_ref 354971 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8192795 "getFirstChild"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first child of this node, or <code>null</code> if
the node has no children.

@return the first child, as a <code>Node</code>, or
<code>null</code>"
      end

      operation 8192923 "getLastChild"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last child of this node, or <code>null</code> if
the node has no children.

@return the last child, as a <code>Node</code>, or
<code>null</code>."
      end

      operation 8193051 "getPreviousSibling"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous sibling of this node, or <code>null</code>
if this node has no previous sibling.

@return the previous sibling, as a <code>Node</code>, or
<code>null</code>."
      end

      operation 8193179 "getNextSibling"
	public return_type class_ref 345499 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next sibling of this node, or <code>null</code> if
the node has no next sibling.

@return the next sibling, as a <code>Node</code>, or
<code>null</code>."
      end

      operation 8193307 "getAttributes"
	public return_type class_ref 349851 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8193435 "getOwnerDocument"
	public return_type class_ref 394267 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since <code>IIOMetadataNode</code>s
do not belong to any <code>Document</code>.

@return <code>null</code>."
      end

      operation 8193563 "insertBefore"
	public return_type class_ref 345499 // Node
	nparams 2
	  param inout name "newChild" type class_ref 345499 // Node
	  param inout name "refChild" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the node <code>newChild</code> before the existing
child node <code>refChild</code>. If <code>refChild</code> is
<code>null</code>, insert <code>newChild</code> at the end of
the list of children.

@param newChild the <code>Node</code> to insert.
@param refChild the reference <code>Node</code>.

@return the node being inserted.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>."
      end

      operation 8193691 "replaceChild"
	public return_type class_ref 345499 // Node
	nparams 2
	  param inout name "newChild" type class_ref 345499 // Node
	  param inout name "oldChild" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the child node <code>oldChild</code> with
<code>newChild</code> in the list of children, and returns the
<code>oldChild</code> node.

@param newChild the <code>Node</code> to insert.
@param oldChild the <code>Node</code> to be replaced.

@return the node replaced.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>."
      end

      operation 8193819 "removeChild"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the child node indicated by <code>oldChild</code> from
the list of children, and returns it.

@param oldChild the <code>Node</code> to be removed.

@return the node removed.

@exception IllegalArgumentException if <code>oldChild</code> is
<code>null</code>."
      end

      operation 8193947 "appendChild"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "newChild" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the node <code>newChild</code> to the end of the list of
children of this node.

@param newChild the <code>Node</code> to insert.

@return the node added.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>."
      end

      operation 8194075 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this node has child nodes.

@return <code>true</code> if this node has children."
      end

      operation 8194203 "cloneNode"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a duplicate of this node.  The duplicate node has no
parent (<code>getParentNode</code> returns <code>null</code>).
If a shallow clone is being performed (<code>deep</code> is
<code>false</code>), the new node will not have any children or
siblings.  If a deep clone is being performed, the new node
will form the root of a complete cloned subtree.

@param deep if <code>true</code>, recursively clone the subtree
under the specified node; if <code>false</code>, clone only the
node itself.

@return the duplicate node."
      end

      operation 8194331 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing, since <code>IIOMetadataNode</code>s do not
contain <code>Text</code> children."
      end

      operation 8194459 "isSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "feature" explicit_type "String"
	  param in name "version" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>false</code> since DOM features are not
supported.

@return <code>false</code>.

@param feature a <code>String</code>, which is ignored.
@param version a <code>String</code>, which is ignored."
      end

      operation 8194587 "getNamespaceURI"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since namespaces are not supported."
      end

      operation 8194715 "getPrefix"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since namespaces are not supported.

@return <code>null</code>.

@see #setPrefix"
      end

      operation 8194843 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param in name "prefix" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing, since namespaces are not supported.

@param prefix a <code>String</code>, which is ignored.

@see #getPrefix"
      end

      operation 8194971 "getLocalName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getNodeName</code>.

@return the node name, as a <code>String</code>."
      end

      operation 8195099 "getTagName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from Element"
      end

      operation 8195227 "getAttribute"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8195355 "getAttributeNS"
	public explicit_return_type "String"
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getAttribute(localName)</code>.

@see #setAttributeNS"
      end

      operation 8195483 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8195611 "setAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param in name "namespaceURI" explicit_type "String"
	  param in name "qualifiedName" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setAttribute(qualifiedName, value)</code>.

@see #getAttributeNS"
      end

      operation 8195739 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8195867 "removeAttribute"
	private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "checkPresent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8195995 "removeAttributeNS"
	public explicit_return_type "void"
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>removeAttribute(localName)</code>."
      end

      operation 8196123 "getAttributeNode"
	public return_type class_ref 615195 // Attr
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8196251 "getAttributeNodeNS"
	public return_type class_ref 615195 // Attr
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getAttributeNode(localName)</code>.

@see #setAttributeNodeNS"
      end

      operation 8196379 "setAttributeNode"
	public return_type class_ref 615195 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 615195 // Attr
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8196507 "setAttributeNodeNS"
	public return_type class_ref 615195 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 615195 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setAttributeNode(newAttr)</code>.

@see #getAttributeNodeNS"
      end

      operation 8196635 "removeAttributeNode"
	public return_type class_ref 615195 // Attr
	nparams 1
	  param inout name "oldAttr" type class_ref 615195 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8196763 "getElementsByTagName"
	public return_type class_ref 354971 // NodeList
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8196891 "getElementsByTagName"
	private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "l" type class_ref 135579 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8197019 "getElementsByTagNameNS"
	public return_type class_ref 354971 // NodeList
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getElementsByTagName(localName)</code>."
      end

      operation 8197147 "hasAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8197275 "hasAttribute"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8197403 "hasAttributeNS"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>hasAttribute(localName)</code>."
      end

      operation 8197531 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from NodeList"
      end

      operation 8197659 "item"
	public return_type class_ref 345499 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8197787 "getUserObject"
	public explicit_return_type "Object"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Object</code> value associated with this node.

@return the user <code>Object</code>.

@see #setUserObject"
      end

      operation 8197915 "setUserObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "userObject" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value associated with this node.

@param userObject the user <code>Object</code>.

@see #getUserObject"
      end

      operation 8198043 "setIdAttribute"
	public explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start of dummy methods for DOM L3. PENDING: Please revisit"
      end

      operation 8198171 "setIdAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198299 "setIdAttributeNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "idAttr" type class_ref 615195 // Attr
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198427 "getSchemaTypeInfo"
	public return_type class_ref 615323 // TypeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198555 "setUserData"
	public explicit_return_type "Object"
	nparams 3
	  param in name "key" explicit_type "String"
	  param inout name "data" explicit_type "Object"
	  param inout name "handler" type class_ref 614043 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198683 "getUserData"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198811 "getFeature"
	public explicit_return_type "Object"
	nparams 2
	  param in name "feature" explicit_type "String"
	  param in name "version" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8198939 "isSameNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199067 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199195 "lookupNamespaceURI"
	public explicit_return_type "String"
	nparams 1
	  param in name "prefix" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199323 "isDefaultNamespace"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "namespaceURI" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199451 "lookupPrefix"
	public explicit_return_type "String"
	nparams 1
	  param in name "namespaceURI" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3007771 "textContent"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8199579 "getTextContent"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199707 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param in name "textContent" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199835 "compareDocumentPosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 345499 // Node
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8199963 "getBaseURI"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 346011 "IIOMetadataFormatImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A concrete class providing a reusable implementation of the
<code>IIOMetadataFormat</code> interface.  In addition, a static
instance representing the standard, plug-in neutral
<code>javax_imageio_1.0</code> format is provided by the
<code>getStandardFormatInstance</code> method.

<p> In order to supply localized descriptions of elements and
attributes, a <code>ResourceBundle</code> with a base name of
<code>this.getClass().getName() + \"Resources\"</code> should be
supplied via the usual mechanism used by
<code>ResourceBundle.getBundle</code>.  Briefly, the subclasser
supplies one or more additional classes according to a naming
convention (by default, the fully-qualified name of the subclass
extending <code>IIMetadataFormatImpl</code>, plus the string
\"Resources\", plus the country, language, and variant codes
separated by underscores).  At run time, calls to
<code>getElementDescription</code> or
<code>getAttributeDescription</code> will attempt to load such
classes dynamically according to the supplied locale, and will use
either the element name, or the element name followed by a '/'
character followed by the attribute name as a key.  This key will
be supplied to the <code>ResourceBundle</code>'s
<code>getString</code> method, and the resulting localized
description of the node or attribute is returned.

<p> The subclass may supply a different base name for the resource
bundles using the <code>setResourceBaseName</code> method.

<p> A subclass may choose its own localization mechanism, if so
desired, by overriding the supplied implementations of
<code>getElementDescription</code> and
<code>getAttributeDescription</code>.

@see ResourceBundle#getBundle(String,Locale)

@version 0.5"
      classrelation 500507 // <realization>
	relation 500507 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 500507 // <realization>
	  b parent class_ref 343707 // IIOMetadataFormat
      end

      attribute 539035 "standardMetadataFormatName"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"javax_imageio_1.0\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A <code>String</code> constant containing the standard format
name, <code>\"javax_imageio_1.0\"</code>.
"
      end

      classrelation 500635 // standardFormat (<unidirectional association>)
	relation 500635 --->
	  a role_name "standardFormat" init_value "=  null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 500635 // standardFormat (<unidirectional association>)
	  b parent class_ref 343707 // IIOMetadataFormat
      end

      attribute 539163 "resourceBaseName"
	private explicit_type "String"
	init_value "=  this.getClass().getName() + \"Resources\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 539291 "rootName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 500763 // elementMap (<unidirectional association>)
	relation 500763 --->
	  a role_name "elementMap" init_value "=  new HashMap()" private
	    comment " Element name (String) -> Element
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 500763 // elementMap (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      class 346139 "Element"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 539419 "elementName"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 539547 "childPolicy"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 539675 "minChildren"
	  package explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 539803 "maxChildren"
	  package explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 500891 // childList (<unidirectional association>)
	  relation 500891 --->
	    a role_name "childList" init_value "=  new ArrayList()" package
	      comment " Child names (Strings)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 500891 // childList (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	classrelation 501019 // parentList (<unidirectional association>)
	  relation 501019 --->
	    a role_name "parentList" init_value "=  new ArrayList()" package
	      comment " Parent names (Strings)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501019 // parentList (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	classrelation 501147 // attrList (<unidirectional association>)
	  relation 501147 --->
	    a role_name "attrList" init_value "=  new ArrayList()" package
	      comment " List of attribute names in the order they were added
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501147 // attrList (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	classrelation 501275 // attrMap (<unidirectional association>)
	  relation 501275 --->
	    a role_name "attrMap" init_value "=  new HashMap()" package
	      comment " Attr name (String) -> Attribute
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501275 // attrMap (<unidirectional association>)
	    b parent class_ref 136603 // Map
	end

	classrelation 501403 // objectValue (<unidirectional association>)
	  relation 501403 --->
	    a role_name "objectValue" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501403 // objectValue (<unidirectional association>)
	    b parent class_ref 346267 // ObjectValue
	end
      end

      class 346267 "ObjectValue"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 541083 "valueType"
	  package explicit_type "int"
	  init_value "=  VALUE_NONE"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 501659 // classType (<unidirectional association>)
	  relation 501659 --->
	    a role_name "classType" init_value "=  null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501659 // classType (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	attribute 541211 "defaultValue"
	  package explicit_type "Object"
	  init_value "=  null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 501787 // enumeratedValues (<unidirectional association>)
	  relation 501787 --->
	    a role_name "enumeratedValues" init_value "=  null" package
	      comment " Meaningful only if valueType == VALUE_ENUMERATION
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501787 // enumeratedValues (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	classrelation 501915 // minValue (<unidirectional association>)
	  relation 501915 --->
	    a role_name "minValue" init_value "=  null" package
	      comment " Meaningful only if valueType == VALUE_RANGE
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501915 // minValue (<unidirectional association>)
	    b parent class_ref 221467 // Comparable
	end

	classrelation 502043 // maxValue (<unidirectional association>)
	  relation 502043 --->
	    a role_name "maxValue" init_value "=  null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 502043 // maxValue (<unidirectional association>)
	    b parent class_ref 221467 // Comparable
	end

	attribute 541339 "arrayMinLength"
	  package explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Meaningful only if valueType == VALUE_LIST"
	end

	attribute 541467 "arrayMaxLength"
	  package explicit_type "int"
	  init_value "=  0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 346395 "Attribute"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 539931 "attrName"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 540059 "valueType"
	  package explicit_type "int"
	  init_value "=  VALUE_ARBITRARY"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 540187 "dataType"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 540315 "required"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 540443 "defaultValue"
	  package explicit_type "String"
	  init_value "=  null"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 501531 // enumeratedValues (<unidirectional association>)
	  relation 501531 --->
	    a role_name "enumeratedValues" package
	      comment " enumeration
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 501531 // enumeratedValues (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	attribute 540571 "minValue"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " range"
	end

	attribute 540699 "maxValue"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 540827 "listMinLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " list"
	end

	attribute 540955 "listMaxLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1936155 "IIOMetadataFormatImpl"
	public explicit_return_type ""
	nparams 2
	  param in name "rootName" explicit_type "String"
	  param in name "childPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>IIOMetadataFormatImpl</code> instance,
with a given root element name and child policy (other than
<code>CHILD_POLICY_REPEAT</code>).  Additional elements, and
their attributes and <code>Object</code> reference information
may be added using the various <code>add</code> methods.

@param rootName the name of the root element.
@param childPolicy one of the <code>CHILD_POLICY_*</code> constants,
other than <code>CHILD_POLICY_REPEAT</code>.

@exception IllegalArgumentException if <code>rootName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>childPolicy</code> is
not one of the predefined constants."
      end

      operation 1936283 "IIOMetadataFormatImpl"
	public explicit_return_type ""
	nparams 3
	  param in name "rootName" explicit_type "String"
	  param in name "minChildren" explicit_type "int"
	  param in name "maxChildren" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>IIOMetadataFormatImpl</code> instance,
with a given root element name and a child policy of
<code>CHILD_POLICY_REPEAT</code>.  Additional elements, and
their attributes and <code>Object</code> reference information
may be added using the various <code>add</code> methods.

@param rootName the name of the root element.
@param minChildren the minimum number of children of the node.
@param maxChildren the maximum number of children of the node.

@exception IllegalArgumentException if <code>rootName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>minChildren</code>
is negative or larger than <code>maxChildren</code>."
      end

      operation 1936411 "setResourceBaseName"
	protected explicit_return_type "void"
	nparams 1
	  param in name "resourceBaseName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a new base name for locating <code>ResourceBundle</code>s
containing descriptions of elements and attributes for this
format.

<p> Prior to the first time this method is called, the base
name will be equal to <code>this.getClass().getName() +
\"Resources\"</code>.

@param resourceBaseName a <code>String</code> containg the new
base name.

@exception IllegalArgumentException if
<code>resourceBaseName</code> is <code>null</code>.

@see #getResourceBaseName"
      end

      operation 1936539 "getResourceBaseName"
	protected explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently set base name for locating
<code>ResourceBundle</code>s.

@return a <code>String</code> containing the base name.

@see #setResourceBaseName"
      end

      operation 1936667 "getElement"
	private return_type class_ref 346139 // Element
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param inout name "mustAppear" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for locating an element.

@param mustAppear if <code>true</code>, throw an
<code>IllegalArgumentException</code> if no such node exists;
if <code>false</code>, just return null."
      end

      operation 1936795 "getElement"
	private return_type class_ref 346139 // Element
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1936923 "getAttribute"
	private return_type class_ref 346395 // Attribute
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for locating an attribute"
      end

      operation 1937051 "addElement"
	protected explicit_return_type "void"
	nparams 3
	  param in name "elementName" explicit_type "String"
	  param in name "parentName" explicit_type "String"
	  param in name "childPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup

Adds a new element type to this metadata document format with a
child policy other than <code>CHILD_POLICY_REPEAT</code>.

@param elementName the name of the new element.
@param parentName the name of the element that will be the
parent of the new element.
@param childPolicy one of the <code>CHILD_POLICY_*</code>
constants, other than <code>CHILD_POLICY_REPEAT</code>,
indicating the child policy of the new element.

@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>childPolicy</code>
is not one of the predefined constants."
      end

      operation 1937179 "addElement"
	protected explicit_return_type "void"
	nparams 4
	  param in name "elementName" explicit_type "String"
	  param in name "parentName" explicit_type "String"
	  param in name "minChildren" explicit_type "int"
	  param in name "maxChildren" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new element type to this metadata document format with a
child policy of <code>CHILD_POLICY_REPEAT</code>.

@param elementName the name of the new element.
@param parentName the name of the element that will be the
parent of the new element.
@param minChildren the minimum number of children of the node.
@param maxChildren the maximum number of children of the node.

@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>minChildren</code>
is negative or larger than <code>maxChildren</code>."
      end

      operation 1937307 "addChildElement"
	protected explicit_return_type "void"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "parentName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an existing element to the list of legal children for a
given parent node type.

@param parentName the name of the element that will be the
new parent of the element.
@param elementName the name of the element to be addded as a
child.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format."
      end

      operation 1937435 "removeElement"
	protected explicit_return_type "void"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an element from the format.  If no element with the
given name was present, nothing happens and no exception is
thrown.

@param elementName the name of the element to be removed."
      end

      operation 1937563 "addAttribute"
	protected explicit_return_type "void"
	nparams 5
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param in name "defaultValue" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that may
be set to an arbitrary value.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants."
      end

      operation 1937691 "addAttribute"
	protected explicit_return_type "void"
	nparams 6
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param in name "defaultValue" explicit_type "String"
	  param inout name "enumeratedValues" type class_ref 135579 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<String> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a set of enumerated values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.
@param enumeratedValues a <code>List</code> of
<code>String</code>s containing the legal values for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
@exception IllegalArgumentException if
<code>enumeratedValues</code> is <code>null</code>.
@exception IllegalArgumentException if
<code>enumeratedValues</code> does not contain at least one
entry.
@exception IllegalArgumentException if
<code>enumeratedValues</code> contains an element that is not a
<code>String</code> or is <code>null</code>."
      end

      operation 1937819 "addAttribute"
	protected explicit_return_type "void"
	nparams 9
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param in name "defaultValue" explicit_type "String"
	  param in name "minValue" explicit_type "String"
	  param in name "maxValue" explicit_type "String"
	  param inout name "minInclusive" explicit_type "boolean"
	  param inout name "maxInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a range of values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.
@param minValue the smallest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
attribute, as a <code>String</code>.
@param maxValue the largest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
attribute, as a <code>String</code>.
@param minInclusive <code>true</code> if <code>minValue</code>
is inclusive.
@param maxInclusive <code>true</code> if <code>maxValue</code>
is inclusive.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants."
      end

      operation 1937947 "addAttribute"
	protected explicit_return_type "void"
	nparams 6
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param in name "listMinLength" explicit_type "int"
	  param in name "listMaxLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a list of values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param listMinLength the smallest legal number of list items.
@param listMaxLength the largest legal number of list items.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
@exception IllegalArgumentException if
<code>listMinLength</code> is negative or larger than
<code>listMaxLength</code>."
      end

      operation 1938075 "addBooleanAttribute"
	protected explicit_return_type "void"
	nparams 4
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param inout name "hasDefaultValue" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by the enumerated values <code>TRUE</code> and
<code>FALSE</code>, with a datatype of
<code>DATATYPE_BOOLEAN</code>.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param hasDefaultValue <code>true</code> if a default value
should be present.
@param defaultValue the default value for the attribute as a
<code>boolean</code>, ignored if <code>hasDefaultValue</code>
is <code>false</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>."
      end

      operation 1938203 "removeAttribute"
	protected explicit_return_type "void"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an attribute from a previously defined element.  If no
attribute with the given name was present in the given element,
nothing happens and no exception is thrown.

@param elementName the name of the element.
@param attrName the name of the attribute being removed.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format."
      end

      operation 1938331 "addObjectValue"
	protected explicit_return_type "void"
	nparams 4
	  param in name "elementName" explicit_type "String"
	  param inout name "classType" type class_ref 164635 // Class
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> is unconstrained other than by
its class type.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param required <code>true</code> if an object value must be present.
@param defaultValue the default value for the
<code>Object</code> reference, or <code>null</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format."
      end

      operation 1938459 "addObjectValue"
	protected explicit_return_type "void"
	nparams 5
	  param in name "elementName" explicit_type "String"
	  param inout name "classType" type class_ref 164635 // Class
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "T"
	  param inout name "enumeratedValues" type class_ref 135579 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? extends T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must be one of the values
given by <code>enumeratedValues</code>.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param required <code>true</code> if an object value must be present.
@param defaultValue the default value for the
<code>Object</code> reference, or <code>null</code>.
@param enumeratedValues a <code>List</code> of
<code>Object</code>s containing the legal values for the
object reference.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if
<code>enumeratedValues</code> is <code>null</code>.
@exception IllegalArgumentException if
<code>enumeratedValues</code> does not contain at least one
entry.
@exception IllegalArgumentException if
<code>enumeratedValues</code> contains an element that is not
an instance of the class type denoted by <code>classType</code>
or is <code>null</code>."
      end

      operation 1938587 "addObjectValue"
	protected explicit_return_type "void"
	nparams 7
	  param in name "elementName" explicit_type "String"
	  param inout name "classType" type class_ref 164635 // Class
	  param inout name "defaultValue" explicit_type "T"
	  param inout name "minValue" type class_ref 221467 // Comparable
	  param inout name "maxValue" type class_ref 221467 // Comparable
	  param inout name "minInclusive" explicit_type "boolean"
	  param inout name "maxInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}, ${t4}<? super T> ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must be within the range given
by <code>minValue</code> and <code>maxValue</code>.
Furthermore, the class type must implement the
<code>Comparable</code> interface.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param defaultValue the default value for the
@param minValue the smallest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
object value, as a <code>String</code>.
@param maxValue the largest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
object value, as a <code>String</code>. 
@param minInclusive <code>true</code> if <code>minValue</code>
is inclusive.
@param maxInclusive <code>true</code> if <code>maxValue</code>
is inclusive.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format."
      end

      operation 1938715 "addObjectValue"
	protected explicit_return_type "void"
	nparams 4
	  param in name "elementName" explicit_type "String"
	  param inout name "classType" type class_ref 164635 // Class
	  param in name "arrayMinLength" explicit_type "int"
	  param in name "arrayMaxLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must an array of objects of
class type given by <code>classType</code>, with at least
<code>arrayMinLength</code> and at most
<code>arrayMaxLength</code> elements.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param arrayMinLength the smallest legal length for the array.
@param arrayMaxLength the largest legal length for the array.

@exception IllegalArgumentException if <code>elementName</code> is
not a legal element name for this format."
      end

      operation 1938843 "removeObjectValue"
	protected explicit_return_type "void"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disallows an <code>Object</code> reference from being stored in
nodes implementing the named element.

@param elementName the name of the element.

@exception IllegalArgumentException if <code>elementName</code> is
not a legal element name for this format."
      end

      operation 1938971 "getRootName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method
 Methods from IIOMetadataFormat
 Root"
      end

      operation 1939099 "canNodeAppear"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param inout name "imageType" type class_ref 341659 // ImageTypeSpecifier
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Multiplicity"
      end

      operation 1939227 "getElementMinChildren"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1939355 "getElementMaxChildren"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1939483 "getResource"
	private explicit_return_type "String"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1939611 "getElementDescription"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named element, or <code>null</code>.  The desciption will be
localized for the supplied <code>Locale</code> if possible.

<p> The default implementation will first locate a
<code>ResourceBundle</code> using the current resource base
name set by <code>setResourceBaseName</code> and the supplied
<code>Locale</code>, using the fallback mechanism described in
the comments for <code>ResourceBundle.getBundle</code>.  If a
<code>ResourceBundle</code> is found, the element name will be
used as a key to its <code>getString</code> method, and the
result returned.  If no <code>ResourceBundle</code> is found,
or no such key is present, <code>null</code> will be returned.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the element description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.

@see #setResourceBaseName"
      end

      operation 1939739 "getChildPolicy"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Children"
      end

      operation 1939867 "getChildNames"
	public explicit_return_type "String"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1939995 "getAttributeNames"
	public explicit_return_type "String"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attributes"
      end

      operation 1940123 "getAttributeValueType"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940251 "getAttributeDataType"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940379 "isAttributeRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940507 "getAttributeDefaultValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940635 "getAttributeEnumerations"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940763 "getAttributeMinValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1940891 "getAttributeMaxValue"
	public explicit_return_type "String"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941019 "getAttributeListMinLength"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941147 "getAttributeListMaxLength"
	public explicit_return_type "int"
	nparams 2
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941275 "getAttributeDescription"
	public explicit_return_type "String"
	nparams 3
	  param in name "elementName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param inout name "locale" type class_ref 138907 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named attribute, or <code>null</code>.  The desciption will be
localized for the supplied <code>Locale</code> if possible.

<p> The default implementation will first locate a
<code>ResourceBundle</code> using the current resource base
name set by <code>setResourceBaseName</code> and the supplied
<code>Locale</code>, using the fallback mechanism described in
the comments for <code>ResourceBundle.getBundle</code>.  If a
<code>ResourceBundle</code> is found, the element name followed
by a \"/\" character followed by the attribute name
(<code>elementName + \"/\" + attrName</code>) will be used as a
key to its <code>getString</code> method, and the result
returned.  If no <code>ResourceBundle</code> is found, or no
such key is present, <code>null</code> will be returned.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param attrName the name of the attribute.
@param locale the <code>Locale</code> for which localization
will be attempted, or <code>null</code>.

@return the attribute description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.

@see #setResourceBaseName"
      end

      operation 1941403 "getObjectValue"
	private return_type class_ref 346267 // ObjectValue
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941531 "getObjectValueType"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941659 "getObjectClass"
	public return_type class_ref 164635 // Class
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941787 "getObjectDefaultValue"
	public explicit_return_type "Object"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1941915 "getObjectEnumerations"
	public explicit_return_type "Object"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942043 "getObjectMinValue"
	public return_type class_ref 221467 // Comparable
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942171 "getObjectMaxValue"
	public return_type class_ref 221467 // Comparable
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942299 "getObjectArrayMinLength"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942427 "getObjectArrayMaxLength"
	public explicit_return_type "int"
	nparams 1
	  param in name "elementName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942555 "createStandardFormat"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Standard format descriptor"
      end

      operation 1942683 "getStandardFormatInstance"
	class_operation public return_type class_ref 343707 // IIOMetadataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
standard, plug-in neutral <code>javax.imageio_1.0</code>
metadata document format described in the comment of the
<code>javax.imageio.metadata</code> package.

@return a predefined <code>IIOMetadataFormat</code> instance."
      end
    end

    class 1026587 "IIODOMException"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2012571 // <generalisation>
	relation 2012571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2012571 // <generalisation>
	  b parent class_ref 613915 // DOMException
      end

      operation 8186779 "IIODOMException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param in name "message" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1026715 "IIONamedNodeMap"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2012699 // <realization>
	relation 2012699 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2012699 // <realization>
	  b parent class_ref 349851 // NamedNodeMap
      end

      classrelation 2012827 // nodes (<unidirectional association>)
	relation 2012827 --->
	  a role_name "nodes" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2012827 // nodes (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8186907 "IIONamedNodeMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodes" type class_ref 135579 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187035 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187163 "getNamedItem"
	public return_type class_ref 345499 // Node
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187291 "item"
	public return_type class_ref 345499 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187419 "removeNamedItem"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "name" type class_ref 179611 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187547 "setNamedItem"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "arg" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8187675 "getNamedItemNS"
	public return_type class_ref 345499 // Node
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getNamedItem(localName)</code>."
      end

      operation 8187803 "setNamedItemNS"
	public return_type class_ref 345499 // Node
	nparams 1
	  param inout name "arg" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setNamedItem(arg)</code>."
      end

      operation 8187931 "removeNamedItemNS"
	public return_type class_ref 345499 // Node
	nparams 2
	  param in name "namespaceURI" explicit_type "String"
	  param in name "localName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>removeNamedItem(localName)</code>."
      end
    end

    class 1026843 "IIONodeList"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2012955 // <realization>
	relation 2012955 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2012955 // <realization>
	  b parent class_ref 354971 // NodeList
      end

      classrelation 2013083 // nodes (<unidirectional association>)
	relation 2013083 --->
	  a role_name "nodes" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2013083 // nodes (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 8188059 "IIONodeList"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodes" type class_ref 135579 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188187 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188315 "item"
	public return_type class_ref 345499 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1026971 "IIOAttr"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2013211 // <generalisation>
	relation 2013211 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2013211 // <generalisation>
	  b parent class_ref 345755 // IIOMetadataNode
      end

      classrelation 2013339 // <realization>
	relation 2013339 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2013339 // <realization>
	  b parent class_ref 615195 // Attr
      end

      attribute 3006747 "specified"
	package explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2013467 // owner (<unidirectional association>)
	relation 2013467 --->
	  a role_name "owner" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2013467 // owner (<unidirectional association>)
	  b parent class_ref 615067 // Element
      end

      attribute 3006875 "name"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3007003 "value"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8188443 "IIOAttr"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 615067 // Element
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188571 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188699 "getNodeName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188827 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8188955 "getSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189083 "getValue"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189211 "getNodeValue"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189339 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189467 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189595 "getOwnerElement"
	public return_type class_ref 615067 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189723 "setOwnerElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 615067 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8189851 "isId"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start of dummy methods for DOM L3. PENDING: Please revisit"
      end

      operation 8189979 "getSchemaTypeInfo"
	public return_type class_ref 615323 // TypeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190107 "setUserData"
	public explicit_return_type "Object"
	nparams 3
	  param in name "key" explicit_type "String"
	  param inout name "data" explicit_type "Object"
	  param inout name "handler" type class_ref 614043 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190235 "getUserData"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190363 "getFeature"
	public explicit_return_type "Object"
	nparams 2
	  param in name "feature" explicit_type "String"
	  param in name "version" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190491 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190619 "isSameNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 345499 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190747 "lookupNamespaceURI"
	public explicit_return_type "String"
	nparams 1
	  param in name "prefix" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8190875 "isDefaultNamespace"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "namespaceURI" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8191003 "lookupPrefix"
	public explicit_return_type "String"
	nparams 1
	  param in name "namespaceURI" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3007131 "textContent"
	package explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8191131 "getTextContent"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8191259 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param in name "textContent" explicit_type "String"
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8191387 "compareDocumentPosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 345499 // Node
	nexceptions 1
	  exception class_ref 613915 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8191515 "getBaseURI"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 142619 "metadata"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 273563 "IIOMetadata"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 341915 // IIOMetadata
      end
      comment "@(#)IIOMetadata.java	1.39 04/03/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 273819 "IIOMetadataFormat"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import javax.imageio.ImageTypeSpecifier;
${definition}"
      associated_classes
	class_ref 343707 // IIOMetadataFormat
      end
      comment "@(#)IIOMetadataFormat.java	1.24 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 273947 "IIOMetadataFormatImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.imageio.ImageTypeSpecifier;
import com.sun.imageio.plugins.common.StandardMetadataFormat;
${definition}"
      associated_classes
	class_ref 346011 // IIOMetadataFormatImpl
      end
      comment "@(#)IIOMetadataFormatImpl.java	1.28 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 775451 "IIOInvalidTreeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.imageio.IIOException;
import org.w3c.dom.Node;
${definition}"
      associated_classes
	class_ref 345627 // IIOInvalidTreeException
      end
      comment "@(#)IIOInvalidTreeException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 775579 "IIOMetadataController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 345371 // IIOMetadataController
      end
      comment "@(#)IIOMetadataController.java	1.9 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 775707 "IIODOMException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.DOMException;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.TypeInfo;
import org.w3c.dom.UserDataHandler;
${definition}"
      associated_classes
	class_ref 1026587 // IIODOMException
	class_ref 1026715 // IIONamedNodeMap
	class_ref 1026843 // IIONodeList
	class_ref 1026971 // IIOAttr
	class_ref 345755 // IIOMetadataNode
      end
      comment "@(#)IIOMetadataNode.java	1.36 02/03/21

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
