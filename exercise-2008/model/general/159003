format 66
"loading" // src::javax::management::loading
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/management/loading"
  java_package "javax.management.loading"
  classview 156571 "loading"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 514331 "ClassLoaderRepository"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Instances of this interface are used to keep the list of ClassLoaders 
registered in an MBean Server.
They provide the necessary methods to load classes using the registered 
ClassLoaders.</p>

<p>The first ClassLoader in a <code>ClassLoaderRepository</code> is
always the MBean Server's own ClassLoader.</p>

<p>When an MBean is registered in an MBean Server, if it is of a
subclass of {@link java.lang.ClassLoader} and if it does not
implement the interface {@link PrivateClassLoader}, it is added to
the end of the MBean Server's <code>ClassLoaderRepository</code>.
If it is subsequently unregistered from the MBean Server, it is
removed from the <code>ClassLoaderRepository</code>.</p>

<p>The order of MBeans in the <code>ClassLoaderRepository</code> is
significant.  For any two MBeans <em>X</em> and <em>Y</em> in the
<code>ClassLoaderRepository</code>, <em>X</em> must appear before
<em>Y</em> if the registration of <em>X</em> was completed before
the registration of <em>Y</em> started.  If <em>X</em> and
<em>Y</em> were registered concurrently, their order is
indeterminate.  The registration of an MBean corresponds to the
call to {@link MBeanServer#registerMBean} or one of the {@link
MBeanServer}<code>.createMBean</code> methods.</p>

@see javax.management.MBeanServerFactory

@since 1.5
@since.unbundled JMX 1.1"
      operation 3171099 "loadClass"
	public return_type class_ref 164635 // Class
	nparams 1
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders.
Each ClassLoader in turn from the ClassLoaderRepository is
asked to load the class via its {@link
ClassLoader#loadClass(String)} method.  If it successfully
returns a {@link Class} object, that is the result of this
method.  If it throws a {@link ClassNotFoundException}, the
search continues with the next ClassLoader.  If it throws
another exception, the exception is propagated from this
method.  If the end of the list is reached, a {@link
ClassNotFoundException} is thrown.</p>

@param className The name of the class to be loaded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be 
           found."
      end

      operation 3171227 "loadClassWithout"
	public return_type class_ref 164635 // Class
	nparams 2
	  param inout name "exclude" type class_ref 163611 // ClassLoader
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders,
excluding the given one.  Each ClassLoader in turn from the
ClassLoaderRepository, except <code>exclude</code>, is asked to
load the class via its {@link ClassLoader#loadClass(String)}
method.  If it successfully returns a {@link Class} object,
that is the result of this method.  If it throws a {@link
ClassNotFoundException}, the search continues with the next
ClassLoader.  If it throws another exception, the exception is
propagated from this method.  If the end of the list is
reached, a {@link ClassNotFoundException} is thrown.</p>

<p>Be aware that if a ClassLoader in the ClassLoaderRepository
calls this method from its {@link ClassLoader#loadClass(String)
loadClass} method, it exposes itself to a deadlock if another
ClassLoader in the ClassLoaderRepository does the same thing at
the same time.  The {@link #loadClassBefore} method is
recommended to avoid the risk of deadlock.</p>

@param className The name of the class to be loaded.
@param exclude The class loader to be excluded.  May be null,
in which case this method is equivalent to {@link #loadClass
loadClass(className)}.

@return the loaded class.

@exception ClassNotFoundException The specified class could not
be found."
      end

      operation 3171355 "loadClassBefore"
	public return_type class_ref 164635 // Class
	nparams 2
	  param inout name "stop" type class_ref 163611 // ClassLoader
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Load the given class name through the list of class loaders,
stopping at the given one.  Each ClassLoader in turn from the
ClassLoaderRepository is asked to load the class via its {@link
ClassLoader#loadClass(String)} method.  If it successfully
returns a {@link Class} object, that is the result of this
method.  If it throws a {@link ClassNotFoundException}, the
search continues with the next ClassLoader.  If it throws
another exception, the exception is propagated from this
method.  If the search reaches <code>stop</code> or the end of
the list, a {@link ClassNotFoundException} is thrown.</p>

<p>Typically this method is called from the {@link
ClassLoader#loadClass(String) loadClass} method of
<code>stop</code>, to consult loaders that appear before it
in the <code>ClassLoaderRepository</code>.  By stopping the
search as soon as <code>stop</code> is reached, a potential
deadlock with concurrent class loading is avoided.</p>

@param className The name of the class to be loaded.
@param stop The class loader at which to stop.  May be null, in
which case this method is equivalent to {@link #loadClass(String)
loadClass(className)}.

@return the loaded class.

@exception ClassNotFoundException The specified class could not
be found.

@since.unbundled JMX 1.2"
      end
    end

    class 1033755 "DefaultLoaderRepository"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Keeps the list of Class Loaders registered in the MBean Server.
It provides the necessary methods to load classes using the registered 
Class Loaders.</p>

<p>This deprecated class is maintained for compatibility.  In
previous versions of JMX, there was one
<code>DefaultLoaderRepository</code> shared by all MBean servers.
As of JMX 1.2, that functionality is approximated by using {@link
MBeanServerFactory#findMBeanServer} to find all known MBean
servers, and consulting the {@link ClassLoaderRepository} of each
one.  It is strongly recommended that code referencing
<code>DefaultLoaderRepository</code> be rewritten.</p>

@deprecated Use 
{@link javax.management.MBeanServer#getClassLoaderRepository()}} 
instead.

@since 1.5"
      attribute 3031707 "dbgTag"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"DefaultLoaderRepository\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8274715 "loadClass"
	class_operation public return_type class_ref 164635 // Class
	nparams 1
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders and try to load the requested 
class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be 
           found."
      end

      operation 8274843 "loadClassWithout"
	class_operation public return_type class_ref 164635 // Class
	nparams 2
	  param inout name "loader" type class_ref 163611 // ClassLoader
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go through the list of class loaders but exclude the given 
class loader, then try to load 
the requested class.
The method will stop as soon as the class is found. If the class
is not found the method will throw a <CODE>ClassNotFoundException</CODE>
exception.

@param className The name of the class to be loaded.
@param loader The class loader to be excluded.

@return the loaded class.

@exception ClassNotFoundException The specified class could not be 
   found."
      end

      operation 8274971 "load"
	class_operation private return_type class_ref 164635 // Class
	nparams 2
	  param inout name "without" type class_ref 163611 // ClassLoader
	  param in name "className" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8275099 "isTraceOn"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8275227 "trace"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8275355 "trace"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8275483 "isDebugOn"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8275611 "debug"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8275739 "debug"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1033883 "MLet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Allows you to instantiate and register one or several MBeans in the MBean server 
coming from a remote URL. M-let is a shortcut for management applet. The m-let service does this 
by loading an m-let text file, which specifies information on the MBeans to be obtained. 
The information on each MBean is specified in a single instance of a tag, called the MLET tag. 
The location of the m-let text file is specified by a URL. 
<p>
The <CODE>MLET</CODE> tag has the following syntax:
<p>
&lt;<CODE>MLET</CODE><BR>
     <CODE>CODE = </CODE><VAR>class</VAR><CODE> | OBJECT = </CODE><VAR>serfile</VAR><BR>
     <CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE><BR>
     <CODE>[CODEBASE = </CODE><VAR>codebaseURL</VAR><CODE>]</CODE><BR>
     <CODE>[NAME = </CODE><VAR>mbeanname</VAR><CODE>]</CODE><BR>
     <CODE>[VERSION = </CODE><VAR>version</VAR><CODE>]</CODE><BR>
&gt;<BR>
	<CODE>[</CODE><VAR>arglist</VAR><CODE>]</CODE><BR>
&lt;<CODE>/MLET</CODE>&gt;
<p>
where:
<DL>
<DT><CODE>CODE = </CODE><VAR>class</VAR></DT>
<DD>
This attribute specifies the full Java class name, including package name, of the MBean to be obtained.
The compiled <CODE>.class</CODE> file of the MBean must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE>
attribute. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>OBJECT = </CODE><VAR>serfile</VAR></DT>
<DD>
This attribute specifies the <CODE>.ser</CODE> file that contains a serialized representation of the MBean to be obtained.
This file must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. If the <CODE>.jar</CODE> file contains a directory hierarchy, specify the path of the file within this hierarchy. Otherwise  a match will not be found. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE></DT>
<DD>
This mandatory attribute specifies one or more <CODE>.jar</CODE> files 
containing MBeans or other resources used by
the MBean to be obtained. One of the <CODE>.jar</CODE> files must contain the file specified by the <CODE>CODE</CODE> or <CODE>OBJECT</CODE> attribute.
If archivelist contains more than one file:
<UL>
<LI>Each file must be separated from the one that follows it by a comma (,).
<LI><VAR>archivelist</VAR> must be enclosed in double quote marks.
</UL>
All <CODE>.jar</CODE> files in <VAR>archivelist</VAR> must be stored in the directory specified by the code base URL.
</DD>
<DT><CODE>CODEBASE = </CODE><VAR>codebaseURL</VAR></DT>
<DD>
This optional attribute specifies the code base URL of the MBean to be obtained. It identifies the directory that contains
the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. Specify this attribute only if the <CODE>.jar</CODE> files are not in the same
directory as the m-let text file. If this attribute is not specified, the base URL of the m-let text file is used.
</DD>
<DT><CODE>NAME = </CODE><VAR>mbeanname</VAR></DT>
<DD>
This optional attribute specifies the object name to be assigned to the
MBean instance when the m-let service registers it. If 
<VAR>mbeanname</VAR> starts with the colon character (:), the domain 
part of the object name is the domain of the agent. The m-let service 
invokes the <CODE>getDomain()</CODE> method of the Framework class to 
obtain this information.
</DD>
<DT><CODE>VERSION = </CODE><VAR>version</VAR></DT>
<DD>
This optional attribute specifies the version number of the MBean and 
associated <CODE>.jar</CODE> files to be obtained. This version number can 
be used to specify that the <CODE>.jar</CODE> files are loaded from the 
server to update those stored locally in the cache the next time the m-let
text file is loaded. <VAR>version</VAR> must be a series of non-negative 
decimal integers each separated by a period from the one that precedes it.
</DD>
<DT><VAR>arglist</VAR></DT>
<DD>
This optional attribute specifies a list of one or more parameters for the 
MBean to be instantiated. This list describes the parameters to be passed the MBean's constructor.
Use the following syntax to specify each item in
<VAR>arglist</VAR>:</DD>
<DL>
<P>
<DT>&lt;<CODE>ARG TYPE=</CODE><VAR>argumentType</VAR> <CODE>VALUE=</CODE><VAR>value</VAR>&gt;</DT>
<P>
<DD>where:</DD>
<UL>
<LI><VAR>argumentType</VAR> is the type of the argument that will be passed as parameter to the MBean's constructor.</UL>
</DL>
<P>The arguments' type in the argument list should be a Java primitive type or a Java basic type
(<CODE>java.lang.Boolean, java.lang.Byte, java.lang.Short, java.lang.Long, java.lang.Integer, java.lang.Float, java.lang.Double, java.lang.String</CODE>).
</DL>

When an m-let text file is loaded, an 
instance of each MBean specified in the file is created and registered.
<P>
The m-let Service extends the <CODE>java.net.URLClassLoader</CODE> and can be used to load remote classes
and jar files in the VM of the agent.
<p><STRONG>Note - </STRONG> The <CODE>MLet</CODE> class loader uses the {@link javax.management.MBeanServerFactory#getClassLoaderRepository(javax.management.MBeanServer)}
to load classes that could not be found in the loaded jar files.

@since 1.5"
      classrelation 2040347 // <generalisation>
	relation 2040347 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2040347 // <generalisation>
	  b parent class_ref 933659 // URLClassLoader
      end

      classrelation 2040475 // <realization>
	relation 2040475 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2040475 // <realization>
	  b parent class_ref 1034011 // MLetMBean
      end

      classrelation 2040603 // <realization>
	relation 2040603 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2040603 // <realization>
	  b parent class_ref 517019 // MBeanRegistration
      end

      classrelation 2040731 // <realization>
	relation 2040731 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2040731 // <realization>
	  b parent class_ref 204315 // Externalizable
      end

      attribute 3031835 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  3636148327800330130L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2040859 // server (<unidirectional association>)
	relation 2040859 --->
	  a role_name "server" init_value "=  null" private
	    comment "
------------------------------------------
  PRIVATE VARIABLES
------------------------------------------


The reference to the MBean server.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2040859 // server (<unidirectional association>)
	  b parent class_ref 513179 // MBeanServer
      end

      classrelation 2040987 // mletList (<unidirectional association>)
	relation 2040987 --->
	  a role_name "mletList" init_value "=  new Vector()" private
	    comment "
The list of instances of the <CODE>MLetContant</CODE> 
class found at the specified URL.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2040987 // mletList (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      attribute 3031963 "libraryDirectory"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The directory used for storing libraries locally before they are loaded.
"
      end

      classrelation 2041115 // mletObjectName (<unidirectional association>)
	relation 2041115 --->
	  a role_name "mletObjectName" init_value "=  null" private
	    comment "
The object name of the MLet Service.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041115 // mletObjectName (<unidirectional association>)
	  b parent class_ref 510875 // ObjectName
      end

      classrelation 2041243 // myUrls (<unidirectional association>)
	relation 2041243 --->
	  a role_name "myUrls" multiplicity "[]" init_value "=  null" private
	    comment "
The URLs of the MLet Service.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2041243 // myUrls (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      attribute 3032091 "dbgTag"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"MLet\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of this class to be used for trace messages
"
      end

      classrelation 2041371 // currentClr (<unidirectional association>)
	relation 2041371 --->
	  a role_name "currentClr" private
	    comment "
What ClassLoaderRepository, if any, to use if this MLet
doesn't find an asked-for class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041371 // currentClr (<unidirectional association>)
	  b parent class_ref 514331 // ClassLoaderRepository
      end

      attribute 3032219 "delegateToCLR"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "True if we should consult the {@link ClassLoaderRepository}
when we do not find a class ourselves.
"
      end

      classrelation 2041499 // primitiveClasses (<unidirectional association>)
	relation 2041499 --->
	  a role_name "primitiveClasses" init_value "=  new Hashtable(8) " private
	    comment "
objects maps from primitive classes to primitive object classes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041499 // primitiveClasses (<unidirectional association>)
	  b parent class_ref 139035 // Hashtable
      end

      extra_member 169499 "initialization"
	
	cpp "" ""
	java "  {
	 primitiveClasses.put(Boolean.TYPE.toString(), Boolean.class);
	 primitiveClasses.put(Character.TYPE.toString(), Character.class);
	 primitiveClasses.put(Byte.TYPE.toString(), Byte.class);
	 primitiveClasses.put(Short.TYPE.toString(), Short.class);
	 primitiveClasses.put(Integer.TYPE.toString(), Integer.class);
	 primitiveClasses.put(Long.TYPE.toString(), Long.class);
	 primitiveClasses.put(Float.TYPE.toString(), Float.class);
	 primitiveClasses.put(Double.TYPE.toString(), Double.class);
	
     }"
	php ""
	python ""
	idl ""
      end

      operation 8277147 "MLet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 CONSTRUCTORS
------------------------------------------


The constructor stuff would be considerably simplified if our
parent, URLClassLoader, specified that its one- and
two-argument constructors were equivalent to its
three-argument constructor with trailing null arguments.  But
it doesn't, which prevents us from having all the constructors
but one call this(...args...).


Constructs a new MLet using the default delegation parent ClassLoader."
      end

      operation 8277275 "MLet"
	public explicit_return_type ""
	nparams 1
	  param inout name "urls" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs using the default
delegation parent ClassLoader.  The URLs will be searched in
the order specified for classes and resources after first
searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.
"
      end

      operation 8277403 "MLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the given URLs. The URLs will be
searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
"
      end

      operation 8277531 "MLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "factory" type class_ref 933403 // URLStreamHandlerFactory
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs, parent class
loader, and URLStreamHandlerFactory. The parent argument will
be used as the parent class loader for delegation. The factory
argument will be used as the stream handler factory to obtain
protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.
"
      end

      operation 8277659 "MLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs using the default
delegation parent ClassLoader.  The URLs will be searched in
the order specified for classes and resources after first
searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

@since.unbundled JMX 1.2"
      end

      operation 8277787 "MLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the given URLs. The URLs will be
searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

@since.unbundled JMX 1.2"
      end

      operation 8277915 "MLet"
	public explicit_return_type ""
	nparams 4
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "factory" type class_ref 933403 // URLStreamHandlerFactory
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MLet for the specified URLs, parent class
loader, and URLStreamHandlerFactory. The parent argument will
be used as the parent class loader for delegation. The factory
argument will be used as the stream handler factory to obtain
protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.

@since.unbundled JMX 1.2"
      end

      operation 8278043 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8278171 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PUBLIC METHODS
------------------------------------------


Appends the specified URL to the list of URLs to search for classes and
resources."
      end

      operation 8278299 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "String"
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.
@exception ServiceNotFoundException The specified URL is malformed."
      end

      operation 8278427 "getURLs"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the search path of URLs for loading classes and resources. 
This includes the original list of URLs specified to the constructor, 
along with any URLs subsequently appended by the addURL() method."
      end

      operation 8278555 "getMBeansFromURL"
	public return_type class_ref 136731 // Set
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans to
be added to the agent. The location of the text file is specified by
a URL. The MBeans specified in the MLET file will be instantiated and
registered by the MBean server.

@param url The URL of the text file to be loaded as URL object.

@return  A set containing one entry per MLET tag in the m-let text file loaded.
Each entry specifies either the ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be created.
      
@exception ServiceNotFoundException One of the following errors has occurred: The m-let text file does
not contain an MLET tag, the m-let text file is not found, a mandatory
attribute of the MLET tag is not specified, the value of url is
null.
@exception IllegalStateException MLet MBean is not registered with an MBeanServer."
      end

      operation 8278683 "getMBeansFromURL"
	public return_type class_ref 136731 // Set
	nparams 1
	  param in name "url" explicit_type "String"
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans to
be added to the agent. The location of the text file is specified by
a URL. The MBeans specified in the MLET file will be instantiated and
registered by the MBean server.

@param url The URL of the text file to be loaded as String object.

@return  A set containing one entry per MLET tag in the m-let text file loaded.
Each entry specifies either the ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be created.
      
@exception ServiceNotFoundException One of the following errors has occurred: The m-let text file does
not contain an MLET tag, the m-let text file is not found, a mandatory
attribute of the MLET tag is not specified, the url is malformed.
@exception IllegalStateException MLet MBean is not registered with an MBeanServer.
"
      end

      operation 8278811 "getLibraryDirectory"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current directory used by the library loader for
storing native libraries before they are loaded into memory.

@return The current directory used by the library loader.

@see #setLibraryDirectory"
      end

      operation 8278939 "setLibraryDirectory"
	public explicit_return_type "void"
	nparams 1
	  param in name "libdir" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the directory used by the library loader for storing
native libraries before they are loaded into memory.

@param libdir The directory used by the library loader.

@see #getLibraryDirectory"
      end

      operation 8279067 "preRegister"
	public return_type class_ref 510875 // ObjectName
	nparams 2
	  param inout name "server" type class_ref 513179 // MBeanServer
	  param inout name "name" type class_ref 510875 // ObjectName
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations it needs before
being registered in the MBean server. If the ObjectName is
null, the m-let provides a default name for its registration
&lt;defaultDomain&gt;:type=MLet

@param server The MBean server in which the m-let will be registered.
@param name The object name of the m-let.

@return  The name of the m-let registered.

@exception java.lang.Exception This exception should be caught by the MBean server and re-thrown
as an MBeanRegistrationException."
      end

      operation 8279195 "postRegister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "registrationDone" type class_ref 392091 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations needed after having been
registered in the MBean server or after the registration has failed.

@param registrationDone Indicates whether or not the m-let has been successfully registered in
the MBean server. The value false means that either the registration phase
has failed.
"
      end

      operation 8279323 "preDeregister"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations it needs before being unregistered
by the MBean server.

@exception java.langException  This exception should be caught by the MBean server and re-thrown
as an MBeanRegistrationException."
      end

      operation 8279451 "postDeregister"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the m-let to perform any operations needed after having been
unregistered in the MBean server."
      end

      operation 8279579 "writeExternal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205979 // ObjectOutput
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 220315 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Save this MLet's contents to the given {@link ObjectOutput}.
Not all implementations support this method.  Those that do not
throw {@link UnsupportedOperationException}.  A subclass may
override this method to support it or to change the format of
the written data.</p>

<p>The format of the written data is not specified, but if
an implementation supports {@link #writeExternal} it must
also support {@link #readExternal} in such a way that what is
written by the former can be read by the latter.</p>

@param out The object output stream to write to.

@exception IOException If a problem occurred while writing.
@exception UnsupportedOperationException If this
implementation does not support this operation."
      end

      operation 8279707 "readExternal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201627 // ObjectInput
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	  exception class_ref 220315 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Restore this MLet's contents from the given {@link ObjectInput}.
Not all implementations support this method.  Those that do not
throw {@link UnsupportedOperationException}.  A subclass may
override this method to support it or to change the format of
the read data.</p>

<p>The format of the read data is not specified, but if an
implementation supports {@link #readExternal} it must also
support {@link #writeExternal} in such a way that what is
written by the latter can be read by the former.</p>

@param in The object input stream to read from.

@exception IOException if a problem occurred while reading.
@exception ClassNotFoundException if the class for the object
being restored cannot be found.
@exception UnsupportedOperationException if this
implementation does not support this operation."
      end

      operation 8279835 "loadClass"
	public return_type class_ref 164635 // Class
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "clr" type class_ref 514331 // ClassLoaderRepository
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PACKAGE METHODS
------------------------------------------


<p>Load a class, using the given {@link ClassLoaderRepository} if
the class is not found in this MLet's URLs.  The given
ClassLoaderRepository can be null, in which case a {@link
ClassNotFoundException} occurs immediately if the class is not
found in this MLet's URLs.</p>

@param name The name of the class we want to load.
@param clr  The ClassLoaderRepository that will be used to search
            for the given class, if it is not found in this 
            ClassLoader.  May be null.
@return The resulting Class object.
@exception ClassNotFoundException The specified class could not be 
           found in this ClassLoader nor in the given
           ClassLoaderRepository.

@since.unbundled JMX 1.1"
      end

      operation 8279963 "findClass"
	protected return_type class_ref 164635 // Class
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PROTECTED METHODS
------------------------------------------


This is the main method for class loaders that is being redefined.

@param name The name of the class.

@return The resulting Class object.

@exception ClassNotFoundException The specified class could not be 
           found."
      end

      operation 8280091 "findClass"
	package return_type class_ref 164635 // Class
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "clr" type class_ref 514331 // ClassLoaderRepository
	nexceptions 1
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link MLet#findClass(java.lang.String)}.

@param name The name of the class that we want to load/find.
@param clr The ClassLoaderRepository that can be used to search
           for the given class. This parameter is 
           <code>null</code> when called from within the
           {@link javax.management.MBeanServerFactory#getClassLoaderRepository(javax.management.MBeanServer) Class Loader Repository}.
@exception ClassNotFoundException The specified class could not be 
           found.
 "
      end

      operation 8280219 "findLibrary"
	protected explicit_return_type "String"
	nparams 1
	  param in name "libname" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path name of a native library. The VM invokes this method to locate the native
libraries that belong to classes loaded with this class loader. Libraries are searched in the JAR files
using first just the native library name and if not found the native library name together with the
architecture-specific path name (<code>OSName/OSArch/OSVersion/lib/nativelibname</code>), i.e.
<p>
the library stat on Solaris SPARC 5.7 will be searched in the JAR file as:
<OL>
<LI>libstat.so
<LI>SunOS/sparc/5.7/lib/libstat.so
</OL>
the library stat on Windows NT 4.0 will be searched in the JAR file as:
<OL>
<LI>stat.dll
<LI>WindowsNT/x86/4.0/lib/stat.dll
</OL>
<p>
If this method returns <code>null</code>, i.e. the libraries were not found in any of the JAR
files loaded with this class loader, the VM searches the library along the path specified as
the <code>java.library.path</code> property.

@param libname The library name.

@return The absolute path of the native library."
      end

      operation 8280347 "getTmpDir"
	private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
 PRIVATE METHODS
------------------------------------------"
      end

      operation 8280475 "loadLibraryAsResource"
	private explicit_return_type "String"
	nparams 1
	  param in name "libname" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Search the specified native library in any of the JAR files loaded by this classloader.
If the library is found copy it into the library directory and return the absolute path.
If the library is not found then return null."
      end

      operation 8280603 "removeSpace"
	private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any white space from a string. This is used to
convert strings such as \"Windows NT\" to \"WindowsNT\"."
      end

      operation 8280731 "check"
	protected return_type class_ref 269467 // URL
	nparams 4
	  param in name "version" explicit_type "String"
	  param inout name "codebase" type class_ref 269467 // URL
	  param in name "jarfile" explicit_type "String"
	  param inout name "mlet" type class_ref 1034139 // MLetContent
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method is to be overridden when extending this service to
support caching and versioning.  It is called from {@link
#getMBeansFromURL getMBeansFromURL} when the version,
codebase, and jarfile have been extracted from the MLet file,
and can be used to verify that it is all right to load the
given MBean, or to replace the given URL with a different one.</p>

<p>The default implementation of this method returns
<code>codebase</code> unchanged.</p>

@param version The version number of the <CODE>.jar</CODE>
file stored locally.
@param codebase The base URL of the remote <CODE>.jar</CODE> file.
@param jarfile The name of the <CODE>.jar</CODE> file to be loaded.
@param mlet The <CODE>MLetContent</CODE> instance that
represents the <CODE>MLET</CODE> tag.

@return the codebase to use for the loaded MBean.  The returned
value should not be null.

@exception Exception if the MBean is not to be loaded for some
reason.  The exception will be added to the set returned by
{@link #getMBeansFromURL getMBeansFromURL}.

@since.unbundled JMX 1.2"
      end

      operation 8280859 "loadSerializedObject"
	private explicit_return_type "Object"
	nparams 2
	  param inout name "codebase" type class_ref 269467 // URL
	  param in name "filename" explicit_type "String"
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the serialized object specified by the <CODE>OBJECT</CODE> 
attribute of the <CODE>MLET</CODE> tag.

@param codebase The <CODE>codebase</CODE>.
@param filename The name of the file containing the serialized object.
@return The serialized object.
@exception ClassNotFoundException The specified serialized object could  not be found.
@exception IOException An I/O error occurred while loading serialized object."
      end

      operation 8280987 "constructParameter"
	private explicit_return_type "Object"
	nparams 2
	  param in name "param" explicit_type "String"
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the String value of the constructor's parameter to 
a basic Java object with the type of the parameter."
      end

      operation 8281115 "setMBeanServer"
	private explicit_return_type "void"
	nparams 1
	  param in name "server" type class_ref 513179 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8281243 "isTraceOn"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 8281371 "trace"
	private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8281499 "trace"
	private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8281627 "isDebugOn"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8281755 "debug"
	private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8281883 "debug"
	private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1034011 "MLetMBean"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exposes the remote management interface of the MLet
MBean.

@since 1.5"
      operation 8275867 "getMBeansFromURL"
	public return_type class_ref 136731 // Set
	nparams 1
	  param in name "url" explicit_type "String"
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans
to be added to the agent. The location of the text file is
specified by a URL. The text file is read using the UTF-8
encoding. The MBeans specified in the MLET file will be
instantiated and registered by the MBeanServer.

@param url The URL of the text file to be loaded as String object.

@return A set containing one entry per MLET tag in the m-let
text file loaded.  Each entry specifies either the
ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be
created.

@exception ServiceNotFoundException One of the following errors
has occurred: The m-let text file does not contain an MLET tag,
the m-let text file is not found, a mandatory attribute of the
MLET tag is not specified, the value of url is malformed."
      end

      operation 8275995 "getMBeansFromURL"
	public return_type class_ref 136731 // Set
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads a text file containing MLET tags that define the MBeans
to be added to the agent. The location of the text file is
specified by a URL. The text file is read using the UTF-8
encoding. The MBeans specified in the MLET file will be
instantiated and registered by the MBeanServer.

@param url The URL of the text file to be loaded as URL object.

@return A set containing one entry per MLET tag in the m-let
text file loaded.  Each entry specifies either the
ObjectInstance for the created MBean, or a throwable object
(that is, an error or an exception) if the MBean could not be
created.

@exception ServiceNotFoundException One of the following errors
has occurred: The m-let text file does not contain an MLET tag,
the m-let text file is not found, a mandatory attribute of the
MLET tag is not specified, the value of url is null."
      end

      operation 8276123 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.

@param url the URL to add."
      end

      operation 8276251 "addURL"
	public explicit_return_type "void"
	nparams 1
	  param in name "url" explicit_type "String"
	nexceptions 1
	  exception class_ref 539675 // ServiceNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified URL to the list of URLs to search for classes and
resources.

@param url the URL to add.

@exception ServiceNotFoundException The specified URL is malformed."
      end

      operation 8276379 "getURLs"
	public return_type class_ref 269467 // URL
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the search path of URLs for loading classes and resources. 
This includes the original list of URLs specified to the constructor, 
along with any URLs subsequently appended by the addURL() method.

@return the list of URLs."
      end

      operation 8276507 "getResource"
	public return_type class_ref 269467 // URL
	nparams 1
	  param in name "name" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds the resource with the given name. 
A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is
  independent of the location of the code.
  The name of a resource is a \"/\"-separated path name that identifies the resource.

@param name The resource name

@return  An URL for reading the resource, or null if the resource could not be found or the caller doesn't have adequate privileges to get the
resource."
      end

      operation 8276635 "getResourceAsStream"
	public return_type class_ref 179099 // InputStream
	nparams 1
	  param in name "name" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns an input stream for reading the specified resource. The search order is described in the documentation for
 getResource(String).

@param name  The resource name

@return An input stream for reading the resource, or null if the resource could not be found
"
      end

      operation 8276763 "getResources"
	public return_type class_ref 144411 // Enumeration
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all the resources with the given name. A resource is some
data (images, audio, text, etc) that can be accessed by class
code in a way that is independent of the location of the code.
The name of a resource is a \"/\"-separated path name that
identifies the resource.

@param name The  resource name.

@return An enumeration of URL to the resource. If no resources
could be found, the enumeration will be empty. Resources that
cannot be accessed will not be in the enumeration.

@exception IOException if an I/O exception occurs when
searching for resources."
      end

      operation 8276891 "getLibraryDirectory"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current directory used by the library loader for
storing native libraries before they are loaded into memory.

@return The current directory used by the library loader.

@see #setLibraryDirectory"
      end

      operation 8277019 "setLibraryDirectory"
	public explicit_return_type "void"
	nparams 1
	  param in name "libdir" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the directory used by the library loader for storing
native libraries before they are loaded into memory.

@param libdir The directory used by the library loader.

@see #getLibraryDirectory"
      end
    end

    class 1034139 "MLetContent"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents the contents of the <CODE>MLET</CODE> tag.
<p>
The <CODE>MLET</CODE> tag has the following syntax:
<p>
&lt;<CODE>MLET</CODE><BR>
     <CODE>CODE = </CODE><VAR>class</VAR><CODE> | OBJECT = </CODE><VAR>serfile</VAR><BR>
     <CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE><BR>
     <CODE>[CODEBASE = </CODE><VAR>codebaseURL</VAR><CODE>]</CODE><BR>
     <CODE>[NAME = </CODE><VAR>mbeanname</VAR><CODE>]</CODE><BR>
     <CODE>[VERSION = </CODE><VAR>version</VAR><CODE>]</CODE><BR>
&gt;<BR>
	<CODE>[</CODE><VAR>arglist</VAR><CODE>]</CODE><BR>
&lt;<CODE>/MLET</CODE>&gt;
<p>
where:
<DL>
<DT><CODE>CODE = </CODE><VAR>class</VAR></DT>
<DD>
This attribute specifies the full Java class name, including package name, of the MBean to be obtained.
The compiled <CODE>.class</CODE> file of the MBean must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE>
attribute. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>OBJECT = </CODE><VAR>serfile</VAR></DT>
<DD>
This attribute specifies the <CODE>.ser</CODE> file that contains a serialized representation of the MBean to be obtained.
This file must be contained in one of the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. If the <CODE>.jar</CODE> file contains a directory hierarchy, specify the path of the file within this hierarchy. Otherwise  a match will not be found. Either <CODE>CODE</CODE> or <CODE>OBJECT</CODE> must be present.
</DD>
<DT><CODE>ARCHIVE = &quot;</CODE><VAR>archiveList</VAR><CODE>&quot;</CODE></DT>
<DD>
This mandatory attribute specifies one or more <CODE>.jar</CODE> files 
containing MBeans or other resources used by
the MBean to be obtained. One of the <CODE>.jar</CODE> files must contain the file specified by the <CODE>CODE</CODE> or <CODE>OBJECT</CODE> attribute.
If archivelist contains more than one file:
<UL>
<LI>Each file must be separated from the one that follows it by a comma (,).
<LI><VAR>archivelist</VAR> must be enclosed in double quote marks.
</UL>
All <CODE>.jar</CODE> files in <VAR>archivelist</VAR> must be stored in the directory specified by the code base URL.
</DD>
<DT><CODE>CODEBASE = </CODE><VAR>codebaseURL</VAR></DT>
<DD>
This optional attribute specifies the code base URL of the MBean to be obtained. It identifies the directory that contains
the <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute. Specify this attribute only if the <CODE>.jar</CODE> files are not in the same
directory as the MLet text file. If this attribute is not specified, the base URL of the MLet text file is used.
</DD>
<DT><CODE>NAME = </CODE><VAR>mbeanname</VAR></DT>
<DD>
This optional attribute specifies the object name to be assigned to the
MBean instance when the MLet service registers it. If 
<VAR>mbeanname</VAR> starts with the colon character (:), the domain 
part of the object name is the domain of the agent. The MLet service 
invokes the <CODE>getDomain()</CODE> method of the Framework class to 
obtain this information.
</DD>
<DT><CODE>PERSISTENT = </CODE><VAR>true | false</VAR></DT>
<DD>
This optional attribute specifies the persistency or not persistency of the
MBean instance when the MLet service registers it.
</DD>
<DT><CODE>VERSION = </CODE><VAR>version</VAR></DT>
<DD>
This optional attribute specifies the version number of the MBean and 
associated <CODE>.jar</CODE> files to be obtained. This version number can 
be used to specify that the <CODE>.jar</CODE> files are loaded from the 
server to update those stored locally in the cache the next time the MLet
text file is loaded. <VAR>version</VAR> must be a series of non-negative 
decimal integers each separated by a period from the one that precedes it.
</DD>
<DT><VAR>paramlist</VAR></DT>
<DD>
This optional attribute specifies a list of one or more parameters for the 
MBean to be instantiated. Each parameter in <VAR>paramlist</VAR> corresponds to a modification in the 
modification list. Use the following syntax to specify each item in
<VAR>paramlist</VAR>:</DD>
<DL>
<P>
<DT>&lt;<CODE>PARAM NAME=</CODE><VAR>propertyName</VAR> <CODE>VALUE=</CODE><VAR>value</VAR>&gt;</DT>
<P>
<DD>where:</DD>
<UL>
<LI><VAR>propertyName</VAR> is the name of the property in the modification
<LI><VAR>value</VAR> is the value in the modification</UL>
</DL>
<P>The MLet service passes all the values in the modification list as 
<CODE>String</CODE> objects. 
</DL>

<p><STRONG>Note - </STRONG>Multiple <CODE>MLET</CODE> tags with the same 
code base URL share the same instance of the <CODE>MLetClassLoader</CODE> 
class.

@version     3.3     02/08/99
@author      Sun Microsystems, Inc

@since 1.5"
      classrelation 2041627 // attributes (<unidirectional association>)
	relation 2041627 --->
	  a role_name "attributes" private
	    comment "
A hash table of the attributes of the <CODE>MLET</CODE> tag 
and their values.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041627 // attributes (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 2041755 // documentURL (<unidirectional association>)
	relation 2041755 --->
	  a role_name "documentURL" private
	    comment "
The MLet text file's base URL.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041755 // documentURL (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      classrelation 2041883 // baseURL (<unidirectional association>)
	relation 2041883 --->
	  a role_name "baseURL" private
	    comment "
The base URL.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2041883 // baseURL (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      operation 8282011 "MLetContent"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 269467 // URL
	  param inout name "attributes" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <CODE>MLet</CODE> instance initialized with attributes read
from an <CODE>MLET</CODE> tag in an MLet text file.

@param url The URL of the MLet text file containing the <CODE>MLET</CODE> tag.
@param attributes A list of the attributes of the <CODE>MLET</CODE> tag."
      end

      operation 8282139 "getAttributes"
	public return_type class_ref 136603 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " GETTERS AND SETTERS
--------------------

Gets the attributes of the <CODE>MLET</CODE> tag.
@return A hash table of the attributes of the <CODE>MLET</CODE> tag 
and their values."
      end

      operation 8282267 "getDocumentBase"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the MLet text file's base URL.
@return The MLet text file's base URL."
      end

      operation 8282395 "getCodeBase"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the code base URL.
@return The code base URL."
      end

      operation 8282523 "getJarFiles"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> 
attribute of the <CODE>MLET</CODE> tag.
@return A comma-separated list of <CODE>.jar</CODE> file names."
      end

      operation 8282651 "getCode"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>CODE</CODE> 
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>CODE</CODE> 
attribute of the <CODE>MLET</CODE> tag."
      end

      operation 8282779 "getSerializedObject"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>OBJECT</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>OBJECT</CODE> 
attribute of the <CODE>MLET</CODE> tag."
      end

      operation 8282907 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>NAME</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>NAME</CODE>
attribute of the <CODE>MLET</CODE> tag."
      end

      operation 8283035 "getVersion"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the <CODE>VERSION</CODE>
attribute of the <CODE>MLET</CODE> tag.
@return The value of the <CODE>VERSION</CODE>
attribute of the <CODE>MLET</CODE> tag."
      end

      operation 8283163 "getParameter"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the specified    
attribute of the <CODE>MLET</CODE> tag.

@param name A string representing the name of the attribute.
@return The value of the specified    
attribute of the <CODE>MLET</CODE> tag."
      end
    end

    class 1034267 "MLetObjectInputStream"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This subclass of ObjectInputStream delegates loading of classes to
an existing MLetClassLoader.

@since 1.5"
      classrelation 2042011 // <generalisation>
	relation 2042011 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2042011 // <generalisation>
	  b parent class_ref 201115 // ObjectInputStream
      end

      classrelation 2042139 // loader (<unidirectional association>)
	relation 2042139 --->
	  a role_name "loader" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2042139 // loader (<unidirectional association>)
	  b parent class_ref 1033883 // MLet
      end

      operation 8283291 "MLetObjectInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "in" type class_ref 179099 // InputStream
	  param inout name "loader" type class_ref 1033883 // MLet
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 204059 // StreamCorruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loader must be non-null;"
      end

      operation 8283419 "primitiveType"
	private return_type class_ref 164635 // Class
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8283547 "resolveClass"
	protected return_type class_ref 164635 // Class
	nparams 1
	  param inout name "objectstreamclass" type class_ref 202395 // ObjectStreamClass
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the given ClassLoader rather than using the system class"
      end

      operation 8283675 "getClassLoader"
	public return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ClassLoader being used"
      end
    end

    class 1034395 "MLetParser"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used for parsing URLs. 

@since 1.5"
      attribute 3032347 "c"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "------------------------------------------
  PRIVATE VARIABLES
------------------------------------------


The current character
"
      end

      attribute 3032475 "tag"
	class_attribute private explicit_type "String"
	init_value "=  \"mlet\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Tag to parse.
"
      end

      attribute 3032603 "dbgTag"
	private explicit_type "String"
	init_value "=  \"MLetParser\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of this class to be used for trace messages
"
      end

      operation 8283803 "MLetParser"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
  CONSTRUCTORS
------------------------------------------


Create an MLet parser object"
      end

      operation 8283931 "skipSpace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 364827 // Reader
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
  PUBLIC METHODS
------------------------------------------


Scan spaces."
      end

      operation 8284059 "scanIdentifier"
	public explicit_return_type "String"
	nparams 1
	  param inout name "in" type class_ref 364827 // Reader
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan identifier"
      end

      operation 8284187 "scanTag"
	public return_type class_ref 139035 // Hashtable
	nparams 1
	  param inout name "in" type class_ref 364827 // Reader
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan tag"
      end

      operation 8284315 "parse"
	public return_type class_ref 153883 // Vector
	nparams 1
	  param inout name "url" type class_ref 269467 // URL
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan an html file for <mlet> tags"
      end

      operation 8284443 "parseURL"
	public return_type class_ref 153883 // Vector
	nparams 1
	  param in name "urlname" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the document pointed by the URL urlname"
      end

      operation 8284571 "isTraceOn"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------
  PRIVATE METHODS
------------------------------------------

 TRACES & DEBUG
---------------"
      end

      operation 8284699 "trace"
	private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8284827 "trace"
	private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8284955 "isDebugOn"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8285083 "debug"
	private explicit_return_type "void"
	nparams 3
	  param in name "clz" explicit_type "String"
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 8285211 "debug"
	private explicit_return_type "void"
	nparams 2
	  param in name "func" explicit_type "String"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1034523 "PrivateClassLoader"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Marker interface indicating that a ClassLoader should not be added
to the {@link ClassLoaderRepository}.  When a ClassLoader is
registered as an MBean in the MBean server, it is added to the
MBean server's ClassLoaderRepository unless it implements this
interface.

@since 1.5
@since.unbundled JMX 1.2"
    end

    class 1034651 "PrivateMLet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An MLet that is not added to the {@link ClassLoaderRepository}.
This class acts exactly like its parent class, {@link MLet}, with
one exception.  When a PrivateMLet is registered in an MBean
server, it is not added to that MBean server's {@link
ClassLoaderRepository}.  This is true because this class implements
the interface {@link PrivateClassLoader}.

@since 1.5
@since.unbundled JMX 1.2"
      classrelation 2042267 // <generalisation>
	relation 2042267 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2042267 // <generalisation>
	  b parent class_ref 1033883 // MLet
      end

      classrelation 2042395 // <realization>
	relation 2042395 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2042395 // <realization>
	  b parent class_ref 1034523 // PrivateClassLoader
      end

      attribute 3032731 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2503458973393711979L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 8285339 "PrivateMLet"
	public explicit_return_type ""
	nparams 2
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the specified URLs using the
default delegation parent ClassLoader.  The URLs will be
searched in the order specified for classes and resources
after first searching in the parent class loader.

@param  urls  The URLs from which to load classes and resources.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.
"
      end

      operation 8285467 "PrivateMLet"
	public explicit_return_type ""
	nparams 3
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the given URLs. The URLs will
be searched in the order specified for classes and resources
after first searching in the specified parent class loader.
The parent argument will be used as the parent class loader
for delegation. The factory argument will be used as the
stream handler factory to obtain protocol handlers when
creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.
"
      end

      operation 8285595 "PrivateMLet"
	public explicit_return_type ""
	nparams 4
	  param inout name "urls" type class_ref 269467 // URL
	  param inout name "parent" type class_ref 163611 // ClassLoader
	  param inout name "factory" type class_ref 933403 // URLStreamHandlerFactory
	  param inout name "delegateToCLR" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivateMLet for the specified URLs, parent
class loader, and URLStreamHandlerFactory. The parent argument
will be used as the parent class loader for delegation. The
factory argument will be used as the stream handler factory to
obtain protocol handlers when creating new URLs.

@param  urls  The URLs from which to load classes and resources.
@param  parent The parent class loader for delegation.
@param  factory  The URLStreamHandlerFactory to use when creating URLs.
@param  delegateToCLR  True if, when a class is not found in
either the parent ClassLoader or the URLs, the MLet should delegate
to its containing MBeanServer's {@link ClassLoaderRepository}.
"
      end
    end
  end

  deploymentview 149019 "loading"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 343323 "ClassLoaderRepository"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanServer;
${definition}"
      associated_classes
	class_ref 514331 // ClassLoaderRepository
      end
      comment "@(#)ClassLoaderRepository.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786203 "DefaultLoaderRepository"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.Permission;
import java.util.Iterator;
import java.util.List;
import javax.management.MBeanServer;
import javax.management.MBeanServerFactory;
import javax.management.loading.ClassLoaderRepository;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1033755 // DefaultLoaderRepository
      end
      comment "@(#)DefaultLoaderRepository.java	1.18 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786331 "MLetMBean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.io.InputStream;
import java.io.IOException;
import java.util.Set;
import java.util.Enumeration;
import javax.management.*;
${definition}"
      associated_classes
	class_ref 1034011 // MLetMBean
      end
      comment "@(#)MLetMBean.java	4.19 04/04/20

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786459 "MLet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Externalizable;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.lang.reflect.Constructor;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.net.URLStreamHandlerFactory;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.management.ServiceNotFoundException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.MBeanServer;
import javax.management.ReflectionException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanException;
import javax.management.NotCompliantMBeanException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanRegistration;
import javax.management.MBeanServerFactory;
import javax.management.loading.ClassLoaderRepository;
import com.sun.jmx.mbeanserver.GetPropertyAction;
import com.sun.jmx.defaults.ServiceName;
import com.sun.jmx.defaults.JmxProperties;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1033883 // MLet
      end
      comment "@(#)MLet.java	1.84 04/03/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786587 "MLetContent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.MalformedURLException;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1034139 // MLetContent
      end
      comment "@(#)MLetContent.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786715 "MLetObjectInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.reflect.Array;
${definition}"
      associated_classes
	class_ref 1034267 // MLetObjectInputStream
      end
      comment "@(#)MLetObjectInputStream.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786843 "MLetParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.URLConnection;
import java.net.MalformedURLException;
import java.io.Reader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.File;
import java.util.Hashtable;
import java.util.Vector;
import com.sun.jmx.trace.Trace;
${definition}"
      associated_classes
	class_ref 1034395 // MLetParser
      end
      comment "@(#)MLetParser.java	1.26 04/04/16

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 786971 "PrivateClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.MBeanServer;
import javax.management.ObjectName;
${definition}"
      associated_classes
	class_ref 1034523 // PrivateClassLoader
      end
      comment "@(#)PrivateClassLoader.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 787099 "PrivateMLet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.URLStreamHandlerFactory;
${definition}"
      associated_classes
	class_ref 1034651 // PrivateMLet
      end
      comment "@(#)PrivateMLet.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end
end
