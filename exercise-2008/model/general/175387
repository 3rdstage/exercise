format 66
"stream" // src::javax::xml::transform::stream
  revision 1
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "javax/xml/transform/stream"
  java_package "javax.xml.transform.stream"
  classview 170523 "stream"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 777499 "StreamSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as an holder for a transformation Source in the form
of a stream of XML markup.</p>

<p><em>Note:</em> Due to their internal use of either a {@link Reader} or {@link InputStream} instance,
<code>StreamSource</code> instances may only be used once.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 1.6.12.3 $, $Date: 2004/07/13 22:27:51 $"
      classrelation 2618523 // <realization>
	relation 2618523 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2618523 // <realization>
	  b parent class_ref 691227 // Source
      end

      attribute 3391259 "FEATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"http://javax.xml.transform.stream.StreamSource/feature\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Source input of this type.
"
      end

      operation 10093851 "StreamSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.  If this constructor is used, and
no Stream source is set using
{@link #setInputStream(java.io.InputStream inputStream)} or
{@link #setReader(java.io.Reader reader)}, then the
<code>Transformer</code> will
create an empty source {@link java.io.InputStream} using
{@link java.io.InputStream#InputStream() new InputStream()}.</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)"
      end

      operation 10093979 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "inputStream" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a byte stream.  Normally,
a stream should be used rather than a reader, so
the XML parser can resolve character encoding specified
by the XML declaration.

<p>If this constructor is used to process a stylesheet, normally
setSystemId should also be called, so that relative URI references
can be resolved.</p>

@param inputStream A valid InputStream reference to an XML stream."
      end

      operation 10094107 "StreamSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "inputStream" type class_ref 179099 // InputStream
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a byte stream.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.

<p>This constructor allows the systemID to be set in addition
to the input stream, which allows relative URIs
to be processed.</p>

@param inputStream A valid InputStream reference to an XML stream.
@param systemId Must be a String that conforms to the URI syntax."
      end

      operation 10094235 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "reader" type class_ref 364827 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML character stream."
      end

      operation 10094363 "StreamSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "reader" type class_ref 364827 // Reader
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser may resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML character stream.
@param systemId Must be a String that conforms to the URI syntax."
      end

      operation 10094491 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a URL.

@param systemId Must be a String that conforms to the URI syntax."
      end

      operation 10094619 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a File.

@param f Must a non-null File reference."
      end

      operation 10094747 "setInputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputStream" type class_ref 179099 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the byte stream to be used as input.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.

<p>If this Source object is used to process a stylesheet, normally
setSystemId should also be called, so that relative URL references
can be resolved.</p>

@param inputStream A valid InputStream reference to an XML stream."
      end

      operation 10094875 "getInputStream"
	public return_type class_ref 179099 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the byte stream that was set with setByteStream.

@return The byte stream that was set with setByteStream, or null
if setByteStream or the ByteStream constructor was not called."
      end

      operation 10095003 "setReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 364827 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the input to be a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML CharacterStream."
      end

      operation 10095131 "getReader"
	public return_type class_ref 364827 // Reader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream that was set with setReader.

@return The character stream that was set with setReader, or null
if setReader or the Reader constructor was not called."
      end

      operation 10095259 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param in name "publicId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the public identifier for this Source.

<p>The public identifier is always optional: if the application
writer includes one, it will be provided as part of the
location information.</p>

@param publicId The public identifier as a string."
      end

      operation 10095387 "getPublicId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the public identifier that was set with setPublicId.

@return The public identifier that was set with setPublicId, or null
if setPublicId was not called."
      end

      operation 10095515 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this Source.

<p>The system identifier is optional if there is a byte stream
or a character stream, but it is still useful to provide one,
since the application can use it to resolve relative URIs
and can include it in error messages and warnings (the parser
will attempt to open a connection to the URI only if
there is no byte stream or character stream specified).</p>

@param systemId The system identifier as a URL string."
      end

      operation 10095643 "getSystemId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called."
      end

      operation 10095771 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system ID from a File reference.

@param f Must a non-null File reference."
      end

      attribute 3391387 "publicId"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The public identifier for this input source, or null.
"
      end

      attribute 3391515 "systemId"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The system identifier as a URL string, or null.
"
      end

      classrelation 2618651 // inputStream (<unidirectional association>)
	relation 2618651 --->
	  a role_name "inputStream" private
	    comment "
The byte stream for this Source, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618651 // inputStream (<unidirectional association>)
	  b parent class_ref 179099 // InputStream
      end

      classrelation 2618779 // reader (<unidirectional association>)
	relation 2618779 --->
	  a role_name "reader" private
	    comment "
The character stream for this Source, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618779 // reader (<unidirectional association>)
	  b parent class_ref 364827 // Reader
      end
    end

    class 1216155 "StreamResult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as an holder for a transformation result,
which may be XML, plain Text, HTML, or some other form of markup.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>"
      classrelation 2618139 // <realization>
	relation 2618139 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2618139 // <realization>
	  b parent class_ref 707483 // Result
      end

      attribute 3391003 "FEATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value "= 
        \"http://javax.xml.transform.stream.StreamResult/feature\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Result output of this type.
"
      end

      operation 10092315 "StreamResult"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument default constructor."
      end

      operation 10092443 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "outputStream" type class_ref 183835 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a byte stream.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.

@param outputStream A valid OutputStream reference."
      end

      operation 10092571 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "writer" type class_ref 446619 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a character stream.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.  However,
there are times when it is useful to write to a character
stream, such as when using a StringWriter.

@param writer  A valid Writer reference."
      end

      operation 10092699 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a URL.

@param systemId Must be a String that conforms to the URI syntax."
      end

      operation 10092827 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a File.

@param f Must a non-null File reference."
      end

      operation 10092955 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outputStream" type class_ref 183835 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the ByteStream that is to be written to.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.

@param outputStream A valid OutputStream reference."
      end

      operation 10093083 "getOutputStream"
	public return_type class_ref 183835 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the byte stream that was set with setOutputStream.

@return The byte stream that was set with setOutputStream, or null
if setOutputStream or the ByteStream constructor was not called."
      end

      operation 10093211 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 446619 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the writer that is to receive the result.  Normally,
a stream should be used rather than a writer, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.  However,
there are times when it is useful to write to a writer,
such as when using a StringWriter.

@param writer  A valid Writer reference."
      end

      operation 10093339 "getWriter"
	public return_type class_ref 446619 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream that was set with setWriter.

@return The character stream that was set with setWriter, or null
if setWriter or the Writer constructor was not called."
      end

      operation 10093467 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param in name "systemId" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the systemID that may be used in association
with the byte or character stream, or, if neither is set, use
this value as a writeable URI (probably a file name).

@param systemId The system identifier as a URI string."
      end

      operation 10093595 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 165147 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the system ID from a <code>File</code> reference.</p>

<p>Note the use of {@link File#toURI()} and {@link File#toURL()}.
<code>toURI()</code> is prefered and used if possible.
To allow JAXP 1.3 to run on J2SE 1.3, <code>toURL()</code>
is used if a {@link NoSuchMethodException} is thrown by the attempt
to use <code>toURI()</code>.</p>

@param f Must a non-null File reference."
      end

      operation 10093723 "getSystemId"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called."
      end

      attribute 3391131 "systemId"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The systemID that may be used in association
with the byte or character stream, or, if neither is set, use
this value as a writeable URI (probably a file name).
"
      end

      classrelation 2618267 // outputStream (<unidirectional association>)
	relation 2618267 --->
	  a role_name "outputStream" private
	    comment "
The byte stream that is to be written to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618267 // outputStream (<unidirectional association>)
	  b parent class_ref 183835 // OutputStream
      end

      classrelation 2618395 // writer (<unidirectional association>)
	relation 2618395 --->
	  a role_name "writer" private
	    comment "
The character stream that is to be written to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2618395 // writer (<unidirectional association>)
	  b parent class_ref 446619 // Writer
      end
    end
  end

  deploymentview 174107 "stream"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 902939 "StreamResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import java.io.File;
import java.io.OutputStream;
import java.io.Writer;
import java.net.MalformedURLException;
${definition}"
      associated_classes
	class_ref 1216155 // StreamResult
      end
      comment " $Id: StreamResult.java,v 1.3.22.4 2004/07/13 22:27:51 jsuttor Exp $

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


@(#)StreamResult.java	1.15 04/07/13"
    end

    artifact 903067 "StreamSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.InputStream;
import java.io.Reader;
import javax.xml.transform.Source;
${definition}"
      associated_classes
	class_ref 777499 // StreamSource
      end
      comment " $Id: StreamSource.java,v 1.6.12.3 2004/07/13 22:27:51 jsuttor Exp $

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


@(#)StreamSource.java	1.16 04/07/13"
    end
  end
end
