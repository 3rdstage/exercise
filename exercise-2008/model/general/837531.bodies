class FunctionPattern
!!!6082203.java!!!	FunctionPattern(inout expr : Expression, in axis : int, in predaxis : int)

    super(0, null, null, axis, predaxis);

    m_functionExpr = expr;
!!!6082331.java!!!	calcScore() : void

    m_score = SCORE_OTHER;

    if (null == m_targetString)
      calcTargetString();
!!!6082459.java!!!	fixupVariables(inout vars : Vector, in globalsSize : int) : void
    super.fixupVariables(vars, globalsSize);
    m_functionExpr.fixupVariables(vars, globalsSize);
!!!6082587.java!!!	execute(inout xctxt : XPathContext, in context : int) : XObject

    DTMIterator nl = m_functionExpr.asIterator(xctxt, context);
    XNumber score = SCORE_NONE;

    if (null != nl)
    {
      int n;

      while (DTM.NULL != (n = nl.nextNode()))
      {
        score = (n == context) ? SCORE_OTHER : SCORE_NONE;

        if (score == SCORE_OTHER)
        {
          context = n;

          break;
        }
      }

      // nl.detach();
    }
    nl.detach();

    return score;
!!!6082715.java!!!	execute(inout xctxt : XPathContext, in context : int, inout dtm : DTM, in expType : int) : XObject

    DTMIterator nl = m_functionExpr.asIterator(xctxt, context);
    XNumber score = SCORE_NONE;

    if (null != nl)
    {
      int n;

      while (DTM.NULL != (n = nl.nextNode()))
      {
        score = (n == context) ? SCORE_OTHER : SCORE_NONE;

        if (score == SCORE_OTHER)
        {
          context = n;

          break;
        }
      }

      nl.detach();
    }

    return score;
!!!6082843.java!!!	execute(inout xctxt : XPathContext) : XObject

    int context = xctxt.getCurrentNode();
    DTMIterator nl = m_functionExpr.asIterator(xctxt, context);
    XNumber score = SCORE_NONE;

    if (null != nl)
    {
      int n;

      while (DTM.NULL != (n = nl.nextNode()))
      {
        score = (n == context) ? SCORE_OTHER : SCORE_NONE;

        if (score == SCORE_OTHER)
        {
          context = n;

          break;
        }
      }

      nl.detach();
    }

    return score;
!!!6083227.java!!!	callSubtreeVisitors(inout visitor : XPathVisitor) : void
    m_functionExpr.callVisitors(new FunctionOwner(), visitor);
    super.callSubtreeVisitors(visitor);
