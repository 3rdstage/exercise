class terminal
!!!3105947.java!!!	terminal(in nm : String, in tp : String, in precedence_side : int, in precedence_num : int)
      /* superclass does most of the work */
      super(nm, tp);

      /* add to set of all terminals and check for duplicates */
      Object conflict = _all.put(nm,this);
      if (conflict != null)
	// can't throw an execption here because this is used in static 
	// initializers, so we do a crash instead
	// was:
	// throw new internal_error("Duplicate terminal (" + nm + ") created");
	(new internal_error("Duplicate terminal (" + nm + ") created")).crash();

      /* assign a unique index */
      _index = next_index++;

      /* set the precedence */
      _precedence_num = precedence_num;
      _precedence_side = precedence_side;

      /* add to by_index set */
      _all_by_index.put(new Integer(_index), this);
!!!3106075.java!!!	terminal(in nm : String, in tp : String)
      this(nm, tp, assoc.no_prec, -1);
!!!3106203.java!!!	terminal(in nm : String)
      this(nm, null);
!!!3106331.java!!!	all() : Enumeration
return _all.elements();
!!!3106459.java!!!	find(in with_name : String) : terminal
      if (with_name == null)
	return null;
      else 
	return (terminal)_all.get(with_name);
!!!3106587.java!!!	find(in indx : int) : terminal
      Integer the_indx = new Integer(indx);

      return (terminal)_all_by_index.get(the_indx);
!!!3106715.java!!!	number() : int
return _all.size();
!!!3106843.java!!!	is_non_term() : boolean
      return false;
!!!3106971.java!!!	toString() : String
      return super.toString() + "[" + index() + "]";
!!!3107099.java!!!	precedence_num() : int
    return _precedence_num;
!!!3107227.java!!!	precedence_side() : int
    return _precedence_side;
!!!3107355.java!!!	set_precedence(in p : int, in new_prec : int) : void
    _precedence_side = p;
    _precedence_num = new_prec;
