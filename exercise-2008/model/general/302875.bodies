class ReaderThreadImpl
!!!1672731.java!!!	ReaderThreadImpl(inout orb : ORB, inout connection : Connection, inout selector : Selector)
	this.orb = orb;
	this.connection = connection;
	this.selector = selector;
	keepRunning = true;
!!!1672859.java!!!	getConnection() : Connection
	return connection;
!!!1672987.java!!!	close() : void
	if (orb.transportDebugFlag) {
	    dprint(".close: " + connection);
	}

	keepRunning = false;
!!!1673115.java!!!	doWork() : void
	try {
	    if (orb.transportDebugFlag) {
		dprint(".doWork: Start ReaderThread: " + connection);
	    }
	    while (keepRunning) {
		try {

		    if (orb.transportDebugFlag) {
			dprint(".doWork: Start ReaderThread cycle: " 
			       + connection);
		    }

		    if (connection.read()) {
			// REVISIT - put in pool;
			return;
		    }

		    if (orb.transportDebugFlag) {
			dprint(".doWork: End ReaderThread cycle: "
			       + connection);
		    }

		} catch (Throwable t) {
		    if (orb.transportDebugFlag) {
			dprint(".doWork: exception in read: " + connection,t);
		    }
		    orb.getTransportManager().getSelector(0)
			.unregisterForEvent(getConnection().getEventHandler());
		    getConnection().close();
		}
	    }
	} finally {
	    if (orb.transportDebugFlag) {
		dprint(".doWork: Terminated ReaderThread: " + connection);
	    }
	}
!!!1673243.java!!!	setEnqueueTime(in timeInMillis : long) : void
	enqueueTime = timeInMillis;
!!!1673371.java!!!	getEnqueueTime() : long
	return enqueueTime;
!!!1673499.java!!!	getName() : String
 return "ReaderThread";
!!!1673627.java!!!	dprint(in msg : String) : void
	ORBUtility.dprint("ReaderThreadImpl", msg);
!!!1673755.java!!!	dprint(in msg : String, inout t : Throwable) : void
	dprint(msg);
	t.printStackTrace(System.out);
