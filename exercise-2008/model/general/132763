format 66
"security" // src::java::security
  revision 3
  modified_by 27 "3rdstage"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "java/security"
  java_package "java.security"
  classview 133915 "security"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 163739 "AccessControlContext"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An AccessControlContext is used to make system resource access decisions
based on the context it encapsulates.

<p>More specifically, it encapsulates a context and
has a single method, <code>checkPermission</code>,
that is equivalent to the <code>checkPermission</code> method
in the AccessController class, with one difference: The AccessControlContext
<code>checkPermission</code> method makes access decisions based on the 
context it encapsulates,
rather than that of the current execution thread.

<p>Thus, the purpose of AccessControlContext is for those situations where
a security check that should be made within a given context
actually needs to be done from within a
<i>different</i> context (for example, from within a worker thread).

<p> An AccessControlContext is created by calling the 
<code>AccessController.getContext</code> method. 
The <code>getContext</code> method takes a \"snapshot\"
of the current calling context, and places
it in an AccessControlContext object, which it returns. A sample call is
the following:

<pre>

  AccessControlContext acc = AccessController.getContext()

</pre>

<p>
Code within a different context can subsequently call the
<code>checkPermission</code> method on the
previously-saved AccessControlContext object. A sample call is the
following:

<pre>

  acc.checkPermission(permission)

</pre> 

@see AccessController

@author Roland Schemers"
      classrelation 1864603 // context (<unidirectional association>)
	relation 1864603 --->
	  a role_name "context" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1864603 // context (<unidirectional association>)
	  b parent class_ref 526875 // ProtectionDomain
      end

      attribute 2835483 "isPrivileged"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1864731 // privilegedContext (<unidirectional association>)
	relation 1864731 --->
	  a role_name "privilegedContext" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1864731 // privilegedContext (<unidirectional association>)
	  b parent class_ref 163739 // AccessControlContext
      end

      classrelation 1864859 // combiner (<unidirectional association>)
	relation 1864859 --->
	  a role_name "combiner" init_value "=  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1864859 // combiner (<unidirectional association>)
	  b parent class_ref 526747 // DomainCombiner
      end

      attribute 2835611 "debugInit"
	class_attribute private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2835739 "debug"
	class_attribute private explicit_type "Debug"
	init_value "=  null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7550363 "getDebug"
	class_operation package explicit_return_type "Debug"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7550491 "AccessControlContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an AccessControlContext with the given set of ProtectionDomains.
Context must not be null. Duplicate domains will be removed from the
context.

@param context the ProtectionDomains associated with this context.
The non-duplicate domains are copied from the array. Subsequent
changes to the array will not affect this AccessControlContext."
      end

      operation 7550619 "AccessControlContext"
	public explicit_return_type ""
	nparams 2
	  param inout name "acc" type class_ref 163739 // AccessControlContext
	  param inout name "combiner" type class_ref 526747 // DomainCombiner
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>AccessControlContext</code> with the given
<code>AccessControlContext</code> and <code>DomainCombiner</code>.
This constructor associates the provided
<code>DomainCombiner</code> with the provided
<code>AccessControlContext</code>.

<p>

@param acc the <code>AccessControlContext</code> associated
		with the provided <code>DomainCombiner</code>. <p>

@param combiner the <code>DomainCombiner</code> to be associated
		with the provided <code>AccessControlContext</code>.

@exception NullPointerException if the provided
		<code>context</code> is <code>null</code>. <p>

@exception SecurityException if the caller does not have permission
		to invoke this constructor."
      end

      operation 7550747 "AccessControlContext"
	package explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 526875 // ProtectionDomain
	  param inout name "isPrivileged" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package private constructor for AccessController.getContext()"
      end

      operation 7550875 "isPrivileged"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this context is privileged."
      end

      operation 7551003 "getDomainCombiner"
	public return_type class_ref 526747 // DomainCombiner
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>DomainCombiner</code> associated with this
<code>AccessControlContext</code>.

<p>

@return the <code>DomainCombiner</code> associated with this
		<code>AccessControlContext</code>, or <code>null</code>
		if there is none.

@exception SecurityException if the caller does not have permission
		to get the <code>DomainCombiner</code> associated with this
		<code>AccessControlContext</code>."
      end

      operation 7551131 "checkPermission"
	public explicit_return_type "void"
	nparams 1
	  param inout name "perm" type class_ref 285211 // Permission
	nexceptions 1
	  exception class_ref 959131 // AccessControlException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the access request indicated by the
specified permission should be allowed or denied, based on
the security policy currently in effect, and the context in
this object.
<p>
This method quietly returns if the access request
is permitted, or throws a suitable AccessControlException otherwise. 

@param perm the requested permission.

@exception AccessControlException if the specified permission
is not permitted, based on the current security policy and the
context encapsulated by this object.
@exception NullPointerException if the permission to check for is null."
      end

      operation 7551259 "optimize"
	package return_type class_ref 163739 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take the stack-based context (this) and combine it with the
privileged or inherited context, if need be."
      end

      operation 7551387 "goCombiner"
	private return_type class_ref 163739 // AccessControlContext
	nparams 2
	  param inout name "current" type class_ref 526875 // ProtectionDomain
	  param inout name "assigned" type class_ref 163739 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7551515 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two AccessControlContext objects for equality. 
Checks that <i>obj</i> is
an AccessControlContext and has the same set of ProtectionDomains
as this context.
<P>
@param obj the object we are testing for equality with this object.
@return true if <i>obj</i> is an AccessControlContext, and has the 
same set of ProtectionDomains as this context, false otherwise."
      end

      operation 7551643 "containsAllPDs"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 163739 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7551771 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this context. The hash code
is computed by exclusive or-ing the hash code of all the protection
domains in the context together.

@return a hash code value for this context."
      end
    end

    class 222363 "PrivilegedAction"
      visibility public stereotype "interface"
      nformals 3
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A computation to be performed with privileges enabled.  The computation is
performed by invoking <code>AccessController.doPrivileged</code> on the
<code>PrivilegedAction</code> object.  This interface is used only for
computations that do not throw checked exceptions; computations that
throw checked exceptions must use <code>PrivilegedExceptionAction</code>
instead.

@see AccessController
@see AccessController#doPrivileged(PrivilegedAction)
@see PrivilegedExceptionAction"
      operation 838299 "run"
	public explicit_return_type "T"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the computation.  This method will be called by
<code>AccessController.doPrivileged</code> after enabling privileges.

@return a class-dependent value that may represent the results of the
	       computation. Each class that implements
        <code>PrivilegedAction</code>
	       should document what (if anything) this value represents.
@see AccessController#doPrivileged(PrivilegedAction)
@see AccessController#doPrivileged(PrivilegedAction,
                                    AccessControlContext)"
      end
    end

    class 285083 "BasicPermission"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The BasicPermission class extends the Permission class, and
can be used as the base class for permissions that want to
follow the same naming convention as BasicPermission.
<P>
The name for a BasicPermission is the name of the given permission
(for example, \"exit\",
\"setFactory\", \"print.queueJob\", etc). The naming
convention follows the  hierarchical property naming convention.
An asterisk may appear by itself, or if immediately preceded by a \".\"
may appear at the end of the name, to signify a wildcard match.
For example, \"*\" and \"java.*\" are valid, while \"*java\", \"a*b\",
and \"java*\" are not valid.
<P>
The action string (inherited from Permission) is unused.
Thus, BasicPermission is commonly used as the base class for
\"named\" permissions
(ones that contain a name but no actions list; you either have the
named permission or you don't.)
Subclasses may implement actions on top of BasicPermission,
if desired.
<p>
<P>
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.RuntimePermission
@see java.security.SecurityPermission
@see java.util.PropertyPermission
@see java.awt.AWTPermission
@see java.net.NetPermission
@see java.lang.SecurityManager

@version 1.40 03/12/19

@author Marianne Mueller
@author Roland Schemers"
      classrelation 381851 // <generalisation>
	relation 381851 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 381851 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      classrelation 381979 // <realization>
	relation 381979 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 381979 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 440475 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6279438298436773498L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 440603 "wildcard"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " does this permission have a wildcard at the end?"
      end

      attribute 440731 "path"
	private explicit_type "String"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the name without the wildcard on the end"
      end

      operation 1530395 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "initialize a BasicPermission object. Common to all constructors.
"
      end

      operation 1530523 "BasicPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BasicPermission with the specified name.
Name is the symbolic name of the permission, such as
\"setFactory\",
\"print.queueJob\", or \"topLevelWindow\", etc.

@param name the name of the BasicPermission.

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty."
      end

      operation 1530651 "BasicPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new BasicPermission object with the specified name.
The name is the symbolic name of the BasicPermission, and the
actions String is currently unused.

@param name the name of the BasicPermission.
@param actions ignored.

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty."
      end

      operation 1530779 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the specified permission is \"implied\" by
this object.
<P>
More specifically, this method returns true if:<p>
<ul>
<li> <i>p</i>'s class is the same as this object's class, and<p>
<li> <i>p</i>'s name equals or (in the case of wildcards)
     is implied by this object's
     name. For example, \"a.b.*\" implies \"a.b.c\".
</ul>

@param p the permission to check against.

@return true if the passed permission is equal to or
implied by this permission, false otherwise."
      end

      operation 1530907 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two BasicPermission objects for equality.
Checks that <i>obj</i>'s class is the same as this object's class
and has the same name as this object.
<P>
@param obj the object we are testing for equality with this object.
@return true if <i>obj</i> is a BasicPermission, and has the same name
 as this BasicPermission object, false otherwise."
      end

      operation 1531035 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.
The hash code used is the hash code of the name, that is,
<code>getName().hashCode()</code>, where <code>getName</code> is
from the Permission superclass.

@return a hash code value for this object."
      end

      operation 1531163 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions,
which currently is the empty string \"\", since there are no actions for
a BasicPermission.

@return the empty string \"\"."
      end

      operation 1531291 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new PermissionCollection object for storing BasicPermission
objects.
<p>
A BasicPermissionCollection stores a collection of
BasicPermission permissions.

<p>BasicPermission objects must be stored in a manner that allows them
to be inserted in any order, but that also enables the
PermissionCollection <code>implies</code> method
to be implemented in an efficient (and consistent) manner.

@return a new PermissionCollection object suitable for
storing BasicPermissions."
      end

      operation 1531419 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the BasicPermission from
a stream. "
      end
    end

    class 285211 "Permission"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract class for representing access to a system resource.
All permissions have a name (whose interpretation depends on the subclass),
as well as abstract functions for defining the semantics of the
particular Permission subclass. 

<p>Most Permission objects also include an \"actions\" list that tells the actions 
that are permitted for the object.  For example, 
for a <code>java.io.FilePermission</code> object, the permission name is
the pathname of a file (or directory), and the actions list
(such as \"read, write\") specifies which actions are granted for the
specified file (or for files in the specified directory).
The actions list is optional for Permission objects, such as 
<code>java.lang.RuntimePermission</code>,
that don't need such a list; you either have the named permission (such
as \"system.exit\") or you don't.

<p>An important method that must be implemented by each subclass is
the <code>implies</code> method to compare Permissions. Basically,
\"permission p1 implies permission p2\" means that
if one is granted permission p1, one is naturally granted permission p2.
Thus, this is not an equality test, but rather more of a
subset test.

<P> Permission objects are similar to String objects in that they
are immutable once they have been created. Subclasses should not
provide methods that can change the state of a permission
once it has been created.

@see Permissions
@see PermissionCollection

@version 1.39 03/12/19

@author Marianne Mueller
@author Roland Schemers "
      classrelation 381595 // <realization>
	relation 381595 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 381595 // <realization>
	  b parent class_ref 285339 // Guard
      end

      classrelation 381723 // <realization>
	relation 381723 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 381723 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 440219 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5636570222231596674L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 440347 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1529243 "Permission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a permission with the specified name.

@param name name of the Permission object being created.
"
      end

      operation 1529371 "checkGuard"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "Object"
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the guard interface for a permission. The 
<code>SecurityManager.checkPermission</code> method is called, 
passing this permission object as the permission to check.
Returns silently if access is granted. Otherwise, throws
a SecurityException.

@param object the object being guarded (currently ignored).

@throws SecurityException
       if a security manager exists and its 
       <code>checkPermission</code> method doesn't allow access.

@see Guard
@see GuardedObject
@see SecurityManager#checkPermission
"
      end

      operation 1529499 "implies"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the specified permission's actions are \"implied by\" 
this object's actions.
<P>
This must be implemented by subclasses of Permission, as they are the 
only ones that can impose semantics on a Permission object.

<p>The <code>implies</code> method is used by the AccessController to determine
whether or not a requested permission is implied by another permission that
is known to be valid in the current execution context.

@param permission the permission to check against.

@return true if the specified permission is implied by this object,
false if not."
      end

      operation 1529627 "equals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two Permission objects for equality.
<P>
Do not use the <code>equals</code> method for making access control
decisions; use the <code>implies</code> method.
 
@param obj the object we are testing for equality with this object.

@return true if both Permission objects are equivalent."
      end

      operation 1529755 "hashCode"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this Permission object.
<P>
The required <code>hashCode</code> behavior for Permission Objects is
the following: <p>
<ul>
<li>Whenever it is invoked on the same Permission object more than 
    once during an execution of a Java application, the 
    <code>hashCode</code> method
    must consistently return the same integer. This integer need not 
    remain consistent from one execution of an application to another 
    execution of the same application. <p>
<li>If two Permission objects are equal according to the 
    <code>equals</code> 
    method, then calling the <code>hashCode</code> method on each of the
    two Permission objects must produce the same integer result. 
</ul>

@return a hash code value for this object."
      end

      operation 1529883 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this Permission.
For example, in the case of a <code>java.io.FilePermission</code>,
the name will be a pathname.

@return the name of this Permission.
"
      end

      operation 1530011 "getActions"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the actions as a String. This is abstract
so subclasses can defer creating a String representation until 
one is needed. Subclasses should always return actions in what they
consider to be their
canonical form. For example, two FilePermission objects created via
the following:

<pre>
  perm1 = new FilePermission(p1,\"read,write\");
  perm2 = new FilePermission(p2,\"write,read\"); 
</pre>

both return 
\"read,write\" when the <code>getActions</code> method is invoked.

@return the actions of this Permission.
"
      end

      operation 1530139 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty PermissionCollection for a given Permission object, or null if
one is not defined. Subclasses of class Permission should 
override this if they need to store their permissions in a particular
PermissionCollection object in order to provide the correct semantics
when the <code>PermissionCollection.implies</code> method is called. 
If null is returned,
then the caller of this method is free to store permissions of this
type in any PermissionCollection they choose (one that uses a Hashtable,
one that uses a Vector, etc).

@return a new PermissionCollection object for this type of Permission, or 
null if one is not defined."
      end

      operation 1530267 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this Permission.  The convention is to
specify the class name, the permission name, and the actions in
the following format: '(\"ClassName\" \"name\" \"actions\")'.

@return information about this Permission."
      end
    end

    class 285339 "Guard"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This interface represents a guard, which is an object that is used
to protect access to another object.

<p>This interface contains a single method, <code>checkGuard</code>,
with a single <code>object</code> argument. <code>checkGuard</code> is
invoked (by the GuardedObject <code>getObject</code> method)
to determine whether or not to allow access to the object.

@see GuardedObject

@version 1.12 03/12/19
@author Roland Schemers
@author Li Gong"
      operation 1529115 "checkGuard"
	public explicit_return_type "void"
	nparams 1
	  param inout name "object" explicit_type "Object"
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether or not to allow access to the guarded object
<code>object</code>. Returns silently if access is allowed.
Otherwise, throws a SecurityException.

@param object the object being protected by the guard.

@exception SecurityException if access is denied.
"
      end
    end

    class 285467 "PermissionCollection"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract class representing a collection of Permission objects.

<p>With a PermissionCollection, you can:
<UL>
<LI> add a permission to the collection using the <code>add</code> method.
<LI> check to see if a particular permission is implied in the
     collection, using the <code>implies</code> method.
<LI> enumerate all the permissions, using the <code>elements</code> method.
</UL>
<P>

<p>When it is desirable to group together a number of Permission objects
of the same type, the <code>newPermissionCollection</code> method on that
particular type of Permission object should first be called. The default
behavior (from the Permission class) is to simply return null.
Subclasses of class Permission override the method if they need to store
their permissions in a particular PermissionCollection object in order
to provide the correct semantics when the
<code>PermissionCollection.implies</code> method is called.
If a non-null value is returned, that PermissionCollection must be used.
If null is returned, then the caller of <code>newPermissionCollection</code>
is free to store permissions of the
given type in any PermissionCollection they choose
(one that uses a Hashtable, one that uses a Vector, etc).

<p>The PermissionCollection returned by the
<code>Permission.newPermissionCollection</code>
method is a homogeneous collection, which stores only Permission objects
for a given Permission type.  A PermissionCollection may also be
heterogeneous.  For example, Permissions is a PermissionCollection
subclass that represents a collection of PermissionCollections.
That is, its members are each a homogeneous PermissionCollection.
For example, a Permissions object might have a FilePermissionCollection
for all the FilePermission objects, a SocketPermissionCollection for all the
SocketPermission objects, and so on. Its <code>add</code> method adds a
permission to the appropriate collection.

<p>Whenever a permission is added to a heterogeneous PermissionCollection
such as Permissions, and the PermissionCollection doesn't yet contain a
PermissionCollection of the specified permission's type, the
PermissionCollection should call
the <code>newPermissionCollection</code> method on the permission's class
to see if it requires a special PermissionCollection. If
<code>newPermissionCollection</code>
returns null, the PermissionCollection
is free to store the permission in any type of PermissionCollection it
desires (one using a Hashtable, one using a Vector, etc.). For example,
the Permissions object uses a default PermissionCollection implementation
that stores the permission objects in a Hashtable.

<p> Subclass implementations of PermissionCollection should assume
that they may be called simultaneously from multiple threads,
and therefore should be synchronized properly.  Furthermore,
Enumerations returned via the <code>elements</code> method are
not <em>fail-fast</em>.  Modifications to a collection should not be
performed while enumerating over that collection.

@see Permission
@see Permissions

@version 1.35 04/05/05

@author Roland Schemers"
      classrelation 382107 // <realization>
	relation 382107 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 382107 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 440859 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -6727011328946861783L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 440987 "readOnly"
	volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " when set, add will throw an exception."
      end

      operation 1531547 "add"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission object to the current collection of permission objects.

@param permission the Permission object to add.

@exception SecurityException -  if this PermissionCollection object
                                has been marked readonly"
      end

      operation 1531675 "implies"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the specified permission is implied by
the collection of Permission objects held in this PermissionCollection.

@param permission the Permission object to compare.

@return true if \"permission\" is implied by the  permissions in
the collection, false if not."
      end

      operation 1531803 "elements"
	abstract public return_type class_ref 144411 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the Permission objects in the collection.

@return an enumeration of all the Permissions."
      end

      operation 1531931 "setReadOnly"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks this PermissionCollection object as \"readonly\". After
a PermissionCollection object
is marked as readonly, no new Permission objects can be added to it
using <code>add</code>."
      end

      operation 1532059 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this PermissionCollection object is marked as readonly.
If it is readonly, no new Permission objects can be added to it
using <code>add</code>.

<p>By default, the object is <i>not</i> readonly. It can be set to
readonly by a call to <code>setReadOnly</code>.

@return true if this PermissionCollection object is marked as readonly,
false otherwise."
      end

      operation 1532187 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this PermissionCollection object,
providing information about all the permissions it contains.
The format is:
<pre>
super.toString() (
  // enumerate all the Permission
  // objects and call toString() on them,
  // one per line..
)</pre>

<code>super.toString</code> is a call to the <code>toString</code>
method of this
object's superclass, which is Object. The result is
this PermissionCollection's type name followed by this object's
hashcode, thus enabling clients to differentiate different
PermissionCollections object, even if they contain the same permissions.

@return information about this PermissionCollection object,
        as described above.
"
      end
    end

    class 285595 "BasicPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A BasicPermissionCollection stores a collection
of BasicPermission permissions. BasicPermission objects
must be stored in a manner that allows them to be inserted in any
order, but enable the implies function to evaluate the implies
method in an efficient (and consistent) manner.

A BasicPermissionCollection handles comparing a permission like \"a.b.c.d.e\"
with a Permission such as \"a.b.*\", or \"*\".

@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionsImpl

@version 1.40 12/19/03

@author Roland Schemers

@serial include"
      classrelation 382235 // <generalisation>
	relation 382235 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 382235 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 382363 // <realization>
	relation 382363 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 382363 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 441115 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  739301742472979399L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 382491 // perms (<unidirectional association>)
	relation 382491 --->
	  a role_name "perms" private
	    comment " 
Key is name, value is permission. All permission objects in
collection must be of the same type.
Not serialized; see serialization section at end of class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 382491 // perms (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      attribute 441243 "all_allowed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is set to <code>true</code> if this BasicPermissionCollection
contains a BasicPermission with '*' as its permission name.

@see #serialPersistentFields
"
      end

      classrelation 382619 // permClass (<unidirectional association>)
	relation 382619 --->
	  a role_name "permClass" private
	    comment "
The class to which all BasicPermissions in this
BasicPermissionCollection belongs.

@see #serialPersistentFields

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 382619 // permClass (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 1532315 "BasicPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty BasicPermissionCollection object.
"
      end

      operation 1532443 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the BasicPermissions. The key for the hash is
permission.path.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      BasicPermission, or if
					     the permission is not of the
					     same Class as the other
					     permissions in this collection.

@exception SecurityException - if this BasicPermissionCollection object
                               has been marked readonly"
      end

      operation 1532571 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this set of permissions implies the permissions
expressed in \"permission\".

@param p the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in
the set, false if not."
      end

      operation 1532699 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the BasicPermission objects in the
container.

@return an enumeration of all the BasicPermission objects."
      end

      classrelation 382747 // serialPersistentFields (<unidirectional association>)
	relation 382747 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"permissions\", Hashtable.class),
	new ObjectStreamField(\"all_allowed\", Boolean.TYPE),
	new ObjectStreamField(\"permClass\", Class.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:

 @serial the Hashtable is indexed by the BasicPermission name

 private Hashtable permissions;

@serialField permissions java.util.Hashtable
   The BasicPermissions in this BasicPermissionCollection.
   All BasicPermissions in the collection must belong to the same class.
   The Hashtable is indexed by the BasicPermission name; the value
   of the Hashtable entry is the permission.
@serialField all_allowed boolean
  This is set to <code>true</code> if this BasicPermissionCollection
  contains a BasicPermission with '*' as its permission name.
@serialField permClass java.lang.Class
  The class to which all BasicPermissions in this
  BasicPermissionCollection belongs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 382747 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 1532827 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Default fields.


Writes the contents of the perms field out as a Hashtable for
serialization compatibility with earlier releases. all_allowed
and permClass unchanged."
      end

      operation 1532955 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the
BasicPermissionCollection from a stream."
      end
    end

    class 526747 "DomainCombiner"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A <code>DomainCombiner</code> provides a means to dynamically
update the ProtectionDomains associated with the current
<code>AccessControlContext</code>.

<p> A <code>DomainCombiner</code> is passed as a parameter to the
appropriate constructor for <code>AccessControlContext</code>.
The newly constructed context is then passed to the
<code>AccessController.doPrivileged(..., context)</code> method
to bind the provided context (and associated <code>DomainCombiner</code>)
with the current execution Thread.  Subsequent calls to
<code>AccessController.getContext</code> or
<code>AccessController.checkPermission</code>
cause the <code>DomainCombiner.combine</code> to get invoked.

<p> The combine method takes two arguments.  The first argument represents
an array of ProtectionDomains from the current execution Thread,
since the most recent call to <code>AccessController.doPrivileged</code>.
If no call to doPrivileged was made, then the first argument will contain
all the ProtectionDomains from the current execution Thread.
The second argument represents an array of inherited ProtectionDomains,
which may be <code>null</code>.  ProtectionDomains may be inherited
from a parent Thread, or from a privileged context.  If no call to
doPrivileged was made, then the second argument will contain the
ProtectionDomains inherited from the parent Thread.  If one or more calls
to doPrivileged were made, and the most recent call was to
doPrivileged(action, context), then the second argument will contain the
ProtectionDomains from the privileged context.  If the most recent call
was to doPrivileged(action), then there is no privileged context,
and the second argument will be <code>null</code>.

<p> The <code>combine</code> method investigates the two input arrays
of ProtectionDomains and returns a single array containing the updated
ProtectionDomains.  In the simplest case, the <code>combine</code>
method merges the two stacks into one.  In more complex cases,
the <code>combine</code> method returns a modified
stack of ProtectionDomains.  The modification may have added new
ProtectionDomains, removed certain ProtectionDomains, or simply
updated existing ProtectionDomains.  Re-ordering and other optimizations
to the ProtectionDomains are also permitted.  Typically the
<code>combine</code> method bases its updates on the information
encapsulated in the <code>DomainCombiner</code>.

<p> After the <code>AccessController.getContext</code> method
receives the combined stack of ProtectionDomains back from
the <code>DomainCombiner</code>, it returns a new
AccessControlContext that has both the combined ProtectionDomains
as well as the <code>DomainCombiner</code>.

@see AccessController
@see AccessControlContext
@version 1.7, 12/19/03"
      operation 3247771 "combine"
	public return_type class_ref 526875 // ProtectionDomain
	nparams 2
	  param inout name "currentDomains" type class_ref 526875 // ProtectionDomain
	  param inout name "assignedDomains" type class_ref 526875 // ProtectionDomain
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modify or update the provided ProtectionDomains.
ProtectionDomains may be added to or removed from the given
ProtectionDomains.  The ProtectionDomains may be re-ordered.
Individual ProtectionDomains may be may be modified (with a new
set of Permissions, for example).

<p>

@param currentDomains the ProtectionDomains associated with the
		current execution Thread, up to the most recent
		privileged <code>ProtectionDomain</code>.
		The ProtectionDomains are are listed in order of execution,
		with the most recently executing <code>ProtectionDomain</code>
		residing at the beginning of the array. This parameter may
		be <code>null</code> if the current execution Thread
		has no associated ProtectionDomains.<p>

@param assignedDomains an array of inherited ProtectionDomains.
		ProtectionDomains may be inherited from a parent Thread,
		or from a privileged <code>AccessControlContext</code>.
		This parameter may be <code>null</code>
		if there are no inherited ProtectionDomains.

@return a new array consisting of the updated ProtectionDomains,
		or <code>null</code>."
      end
    end

    class 526875 "ProtectionDomain"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
<p>
This ProtectionDomain class encapsulates the characteristics of a domain,
which encloses a set of classes whose instances are granted a set 
of permissions when being executed on behalf of a given set of Principals.
<p>
A static set of permissions can be bound to a ProtectionDomain when it is
constructed; such permissions are granted to the domain regardless of the
Policy in force. However, to support dynamic security policies, a
ProtectionDomain can also be constructed such that it is dynamically
mapped to a set of permissions by the current Policy whenever a permission
is checked.
<p>

@version 	1.45, 12/19/03
@author Li Gong 
@author Roland Schemers
@author Gary Ellison"
      classrelation 1878811 // codesource (<unidirectional association>)
	relation 1878811 --->
	  a role_name "codesource" private
	    comment " CodeSource 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878811 // codesource (<unidirectional association>)
	  b parent class_ref 527259 // CodeSource
      end

      classrelation 1878939 // classloader (<unidirectional association>)
	relation 1878939 --->
	  a role_name "classloader" private
	    comment " ClassLoader the protection domain was consed from 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878939 // classloader (<unidirectional association>)
	  b parent class_ref 163611 // ClassLoader
      end

      classrelation 1879067 // principals (<unidirectional association>)
	relation 1879067 --->
	  a role_name "principals" multiplicity "[]" private
	    comment " Principals running-as within this protection domain 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1879067 // principals (<unidirectional association>)
	  b parent class_ref 527131 // Principal
      end

      classrelation 1879195 // permissions (<unidirectional association>)
	relation 1879195 --->
	  a role_name "permissions" private
	    comment " the rights this protection domain is granted 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1879195 // permissions (<unidirectional association>)
	  b parent class_ref 285467 // PermissionCollection
      end

      attribute 2847131 "staticPermissions"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the PermissionCollection is static (pre 1.4 constructor)
or dynamic (via a policy refresh) "
      end

      attribute 2847259 "debug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "=  Debug.getInstance(\"domain\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7605147 "ProtectionDomain"
	public explicit_return_type ""
	nparams 2
	  param inout name "codesource" type class_ref 527259 // CodeSource
	  param inout name "permissions" type class_ref 285467 // PermissionCollection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ProtectionDomain with the given CodeSource and
Permissions. If the permissions object is not null, then
 <code>setReadOnly())</code> will be called on the passed in
Permissions object. The only permissions granted to this domain
are the ones specified; the current Policy will not be consulted.

@param codesource the codesource associated with this domain
@param permissions the permissions granted to this domain"
      end

      operation 7605275 "ProtectionDomain"
	public explicit_return_type ""
	nparams 4
	  param inout name "codesource" type class_ref 527259 // CodeSource
	  param inout name "permissions" type class_ref 285467 // PermissionCollection
	  param inout name "classloader" type class_ref 163611 // ClassLoader
	  param inout name "principals" type class_ref 527131 // Principal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ProtectionDomain qualified by the given CodeSource,
Permissions, ClassLoader and array of Principals. If the
permissions object is not null, then <code>setReadOnly()</code>
will be called on the passed in Permissions object.
The permissions granted to this domain are dynamic; they include
both the static permissions passed to this constructor, and any
permissions granted to this domain by the current Policy at the
time a permission is checked.
<p>
This constructor is typically used by
{@link SecureClassLoader ClassLoaders}
and {@link DomainCombiner DomainCombiners} which delegate to 
<code>Policy</code> to actively associate the permissions granted to
this domain. This constructor affords the
Policy provider the opportunity to augment the supplied
PermissionCollection to reflect policy changes.
<p>

@param codesource the CodeSource associated with this domain
@param permissions the permissions granted to this domain
@param classloader the ClassLoader associated with this domain
@param principals the array of Principals associated with this 
domain. The contents of the array are copied to protect against 
subsequent modification.
@see Policy#refresh
@see Policy#getPermissions(ProtectionDomain)
@since 1.4"
      end

      operation 7605403 "getCodeSource"
	public return_type class_ref 527259 // CodeSource
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CodeSource of this domain.
@return the CodeSource of this domain which may be null.
@since 1.2"
      end

      operation 7605531 "getClassLoader"
	public return_type class_ref 163611 // ClassLoader
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ClassLoader of this domain.
@return the ClassLoader of this domain which may be null.

@since 1.4"
      end

      operation 7605659 "getPrincipals"
	public return_type class_ref 527131 // Principal
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of principals for this domain.
@return a non-null array of principals for this domain.
Returns a new array each time this method is called.

@since 1.4"
      end

      operation 7605787 "getPermissions"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the static permissions granted to this domain. 

@return the static set of permissions for this domain which may be null.
@see Policy#refresh
@see Policy#getPermissions(ProtectionDomain)"
      end

      operation 7605915 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this ProtectionDomain implies the permissions 
expressed in the Permission object. 
<p>
The set of permissions evaluated is a function of whether the
ProtectionDomain was constructed with a static set of permissions
or it was bound to a dynamically mapped set of permissions.
<p>
If the ProtectionDomain was constructed to a 
{@link #ProtectionDomain(CodeSource, PermissionCollection)
statically bound} PermissionCollection then the permission will
only be checked against the PermissionCollection supplied at
construction.
<p>
However, if the ProtectionDomain was constructed with
the constructor variant which supports 
{@link #ProtectionDomain(CodeSource, PermissionCollection,
ClassLoader, java.security.Principal[]) dynamically binding}
permissions, then the permission will be checked against the
combination of the PermissionCollection supplied at construction and
the current Policy binding.
<p>

@param permission the Permission object to check.

@return true if \"permission\" is implicit to this ProtectionDomain."
      end

      operation 7606043 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a ProtectionDomain to a String."
      end

      operation 7606171 "seeAllp"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true (merge policy permissions) in the following cases:

. SecurityManager is null

. SecurityManager is not null,
		debug is not null,
		SecurityManager impelmentation is in bootclasspath,
		Policy implementation is in bootclasspath
		(the bootclasspath restrictions avoid recursion)

. SecurityManager is not null,
		debug is null,
		caller has Policy.getPolicy permission"
      end

      operation 7606299 "mergePermissions"
	private return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 527131 "Principal"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents the abstract notion of a principal, which
can be used to represent any entity, such as an individual, a
corporation, and a login id.

@see java.security.cert.X509Certificate

@version 1.22, 03/12/19
@author Li Gong"
      operation 3498907 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "another" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this principal to the specified object.  Returns true
if the object passed in matches the principal represented by
the implementation of this interface.

@param another principal to compare with.

@return true if the principal passed in is the same as that
encapsulated by this principal, and false otherwise.
"
      end

      operation 3499035 "toString"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this principal.

@return a string representation of this principal."
      end

      operation 3499163 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this principal.

@return a hashcode for this principal."
      end

      operation 3499291 "getName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this principal.

@return the name of this principal."
      end
    end

    class 527259 "CodeSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
<p>This class extends the concept of a codebase to
encapsulate not only the location (URL) but also the certificate chains 
that were used to verify signed code originating from that location.

@version 	1.38, 12/19/03
@author Li Gong
@author Roland Schemers"
      classrelation 1557787 // <realization>
	relation 1557787 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1557787 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2392603 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4977541819976013951L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1557915 // location (<unidirectional association>)
	relation 1557915 --->
	  a role_name "location" private
	    comment "
The code location.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1557915 // location (<unidirectional association>)
	  b parent class_ref 269467 // URL
      end

      classrelation 1558043 // signers (<unidirectional association>)
	relation 1558043 --->
	  a role_name "signers" multiplicity "[]" init_value "=  null" private
	    comment "
The code signers.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1558043 // signers (<unidirectional association>)
	  b parent class_ref 842907 // CodeSigner
      end

      classrelation 1558171 // certs (<unidirectional association>)
	relation 1558171 --->
	  a role_name "certs" multiplicity "[]" init_value "=  null" private
	    comment "
The code signers. Certificate chains are concatenated.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1558171 // certs (<unidirectional association>)
	  b parent class_ref 528283 // Certificate
      end

      classrelation 1558299 // sp (<unidirectional association>)
	relation 1558299 --->
	  a role_name "sp" private
	    comment " cached SocketPermission used for matchLocation
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1558299 // sp (<unidirectional association>)
	  b parent class_ref 843035 // SocketPermission
      end

      classrelation 1558427 // factory (<unidirectional association>)
	relation 1558427 --->
	  a role_name "factory" init_value "=  null" private
	    comment " for generating cert paths
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1558427 // factory (<unidirectional association>)
	  b parent class_ref 843163 // CertificateFactory
      end

      operation 6105371 "CodeSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 269467 // URL
	  param inout name "certs" type class_ref 528283 // Certificate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CodeSource and associates it with the specified 
location and set of certificates.

@param url the location (URL).

@param certs the certificate(s). It may be null. The contents of the 
array are copied to protect against subsequent modification."
      end

      operation 6105499 "CodeSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 269467 // URL
	  param inout name "signers" type class_ref 842907 // CodeSigner
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CodeSource and associates it with the specified 
location and set of code signers.

@param url the location (URL).
@param signers the code signers. It may be null. The contents of the 
array are copied to protect against subsequent modification.

@since 1.5"
      end

      operation 6105627 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 6105755 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests for equality between the specified object and this
object. Two CodeSource objects are considered equal if their 
locations are of identical value and if their signer certificate
chains are of identical value. It is not required that
the certificate chains be in the same order.

@param obj the object to test for equality with this object.

@return true if the objects are considered equal, false otherwise."
      end

      operation 6105883 "getLocation"
	public return_type class_ref 269467 // URL
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location associated with this CodeSource.

@return the location (URL)."
      end

      operation 6106011 "getCertificates"
	public return_type class_ref 528283 // Certificate
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificates associated with this CodeSource.
<p>
If this CodeSource object was created using the
{@link #CodeSource(URL url, CodeSigner[] signers)}
constructor then its certificate chains are extracted and used to 
create an array of Certificate objects. Each signer certificate is 
followed by its supporting certificate chain (which may be empty). 
Each signer certificate and its supporting certificate chain is ordered 
bottom-to-top (i.e., with the signer certificate first and the (root) 
certificate authority last).

@return A copy of the certificates array, or null if there is none. "
      end

      operation 6106139 "getCodeSigners"
	public return_type class_ref 842907 // CodeSigner
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code signers associated with this CodeSource.
<p>
If this CodeSource object was created using the
{@link #CodeSource(URL url, Certificate[] certs)}
constructor then its certificate chains are extracted and used to 
create an array of CodeSigner objects. Note that only X.509 certificates
are examined - all other certificate types are ignored.

@return A copy of the code signer array, or null if there is none.

@since 1.5"
      end

      operation 6106267 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "codesource" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this CodeSource object \"implies\" the specified CodeSource.
<P>
More specifically, this method makes the following checks, in order. 
If any fail, it returns false. If they all succeed, it returns true.<p>
<ol>
<li> <i>codesource</i> must not be null.
<li> If this object's certificates are not null, then all
of this object's certificates must be present in <i>codesource</i>'s 
certificates.
<li> If this object's location (getLocation()) is not null, then the 
following checks are made against this object's location and 
<i>codesource</i>'s:<p>
  <ol>
    <li>  <i>codesource</i>'s location must not be null.

    <li>  If this object's location 
          equals <i>codesource</i>'s location, then return true.

    <li>  This object's protocol (getLocation().getProtocol()) must be
          equal to <i>codesource</i>'s protocol.

    <li>  If this object's host (getLocation().getHost()) is not null,  
          then the SocketPermission
          constructed with this object's host must imply the
          SocketPermission constructed with <i>codesource</i>'s host.

    <li>  If this object's port (getLocation().getPort()) is not 
          equal to -1 (that is, if a port is specified), it must equal 
          <i>codesource</i>'s port.

    <li>  If this object's file (getLocation().getFile()) doesn't equal
          <i>codesource</i>'s file, then the following checks are made:
          If this object's file ends with \"/-\",
          then <i>codesource</i>'s file must start with this object's
          file (exclusive the trailing \"-\").
          If this object's file ends with a \"/*\",
          then <i>codesource</i>'s file must start with this object's
          file and must not have any further \"/\" separators.
          If this object's file doesn't end with a \"/\", 
          then <i>codesource</i>'s file must match this object's 
          file with a '/' appended.

    <li>  If this object's reference (getLocation().getRef()) is 
          not null, it must equal <i>codesource</i>'s reference.

  </ol>
</ol>
<p>
For example, the codesource objects with the following locations
and null certificates all imply
the codesource with the location \"http://java.sun.com/classes/foo.jar\"
and null certificates:
<pre>
    http:
    http://*.sun.com/classes/*
    http://java.sun.com/classes/-
    http://java.sun.com/classes/foo.jar
</pre>

Note that if this CodeSource has a null location and a null
certificate chain, then it implies every other CodeSource.

@param codesource CodeSource to compare against.

@return true if the specified codesource is implied by this codesource,
false if not.  "
      end

      operation 6106395 "matchCerts"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "that" type class_ref 527259 // CodeSource
	  param inout name "strict" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the certs in this
CodeSource are also in <i>that</i>.

@param that the CodeSource to check against.
@param strict If true then a strict equality match is performed.
              Otherwise a subset match is performed."
      end

      operation 6106523 "matchLocation"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if two CodeSource's have the \"same\" location.

@param that CodeSource to compare against"
      end

      operation 6106651 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this CodeSource, telling its
URL and certificates.

@return information about this CodeSource."
      end

      operation 6106779 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this object out to a stream (i.e., serializes it).

@serialData An initial <code>URL</code> is followed by an
<code>int</code> indicating the number of certificates to follow 
(a value of \"zero\" denotes that there are no certificates associated
with this object).
Each certificate is written out starting with a <code>String</code>
denoting the certificate type, followed by an
<code>int</code> specifying the length of the certificate encoding,
followed by the certificate encoding itself which is written out as an
array of bytes. Finally, if any code signers are present then the array 
of code signers is serialized and written out too."
      end

      operation 6106907 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores this object from a stream (i.e., deserializes it)."
      end

      operation 6107035 "convertCertArrayToSignerArray"
	private return_type class_ref 842907 // CodeSigner
	nparams 1
	  param inout name "certs" type class_ref 528283 // Certificate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert an array of certificates to an array of code signers.
The array of certificates is a concatenation of certificate chains
where the initial certificate in each chain is the end-entity cert.

@return An array of code signers or null if none are generated."
      end
    end

    class 527387 "Permissions"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a heterogeneous collection of Permissions. That is,
it contains different types of Permission objects, organized into
PermissionCollections. For example, if any
<code>java.io.FilePermission</code> objects are added to an instance of
this class, they are all stored in a single
PermissionCollection. It is the PermissionCollection returned by a call to
the <code>newPermissionCollection</code> method in the FilePermission class.
Similarly, any <code>java.lang.RuntimePermission</code> objects are
stored in the PermissionCollection returned by a call to the 
<code>newPermissionCollection</code> method in the
RuntimePermission class. Thus, this class represents a collection of
PermissionCollections.

<p>When the <code>add</code> method is called to add a Permission, the 
Permission is stored in the appropriate PermissionCollection. If no such 
collection exists yet, the Permission object's class is determined and the
<code>newPermissionCollection</code> method is called on that class to create
the PermissionCollection and add it to the Permissions object. If
<code>newPermissionCollection</code> returns null, then a default 
PermissionCollection that uses a hashtable will be created and used. Each 
hashtable entry stores a Permission object as both the key and the value.

<p> Enumerations returned via the <code>elements</code> method are
not <em>fail-fast</em>.  Modifications to a collection should not be
performed while enumerating over that collection.

@see Permission
@see PermissionCollection
@see AllPermission

@version 1.58, 04/05/05

@author Marianne Mueller
@author Roland Schemers

@serial exclude"
      classrelation 1876635 // <generalisation>
	relation 1876635 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1876635 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 1876763 // <realization>
	relation 1876763 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1876763 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 1876891 // permsMap (<unidirectional association>)
	relation 1876891 --->
	  a role_name "permsMap" private
	    comment "
Key is permissions Class, value is PermissionCollection for that class.
Not serialized; see serialization section at end of class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>, PermissionCollection> ${name}${value};
"
	    classrelation_ref 1876891 // permsMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      attribute 2846363 "hasUnresolved"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " optimization. keep track of whether unresolved permissions need to be 
 checked"
      end

      classrelation 1877019 // allPermission (<unidirectional association>)
	relation 1877019 --->
	  a role_name "allPermission" private
	    comment " optimization. keep track of the AllPermission collection
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1877019 // allPermission (<unidirectional association>)
	  b parent class_ref 285467 // PermissionCollection
      end

      operation 7601051 "Permissions"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Permissions object containing no PermissionCollections."
      end

      operation 7601179 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission object to the PermissionCollection for the class the
permission belongs to. For example, if <i>permission</i> is a
FilePermission, it is added to the FilePermissionCollection stored
in this Permissions object. 

This method creates
a new PermissionCollection object (and adds the permission to it)
if an appropriate collection does not yet exist. <p>

@param permission the Permission object to add.

@exception SecurityException if this Permissions object is
marked as readonly.

@see PermissionCollection#isReadOnly()"
      end

      operation 7601307 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if this object's PermissionCollection for permissions of
the specified permission's type implies the permissions 
expressed in the <i>permission</i> object. Returns true if the
combination of permissions in the appropriate PermissionCollection
(e.g., a FilePermissionCollection for a FilePermission) together
imply the specified permission.

<p>For example, suppose there is a FilePermissionCollection in this
Permissions object, and it contains one FilePermission that specifies
\"read\" access for  all files in all subdirectories of the \"/tmp\"
directory, and another FilePermission that specifies \"write\" access
for all files in the \"/tmp/scratch/foo\" directory.
Then if the <code>implies</code> method
is called with a permission specifying both \"read\" and \"write\" access
to files in the \"/tmp/scratch/foo\" directory, <code>true</code> is
returned.

<p>Additionally, if this PermissionCollection contains the
AllPermission, this method will always return true.
<p>
@param permission the Permission object to check.

@return true if \"permission\" is implied by the permissions in the
PermissionCollection it
belongs to, false if not."
      end

      operation 7601435 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the Permission objects in all the
PermissionCollections in this Permissions object.

@return an enumeration of all the Permissions."
      end

      operation 7601563 "getPermissionCollection"
	private return_type class_ref 285467 // PermissionCollection
	nparams 2
	  param inout name "p" type class_ref 285211 // Permission
	  param inout name "createEmpty" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the PermissionCollection in this Permissions object for
permissions whose type is the same as that of <i>p</i>.
For example, if <i>p</i> is a FilePermission,
the FilePermissionCollection
stored in this Permissions object will be returned. 

If createEmpty is true, 
this method creates a new PermissionCollection object for the specified 
type of permission objects if one does not yet exist. 
To do so, it first calls the <code>newPermissionCollection</code> method
on <i>p</i>.  Subclasses of class Permission 
override that method if they need to store their permissions in a
particular PermissionCollection object in order to provide the
correct semantics when the <code>PermissionCollection.implies</code>
method is called.
If the call returns a PermissionCollection, that collection is stored
in this Permissions object. If the call returns null and createEmpty
is true, then
this method instantiates and stores a default PermissionCollection 
that uses a hashtable to store its permission objects.

createEmpty is ignored when creating empty PermissionCollection
for unresolved permissions because of the overhead of determining the 
PermissionCollection to use.

createEmpty should be set to false when this method is invoked from
implies() because it incurs the additional overhead of creating and
adding an empty PermissionCollection that will just return false.
It should be set to true when invoked from add()."
      end

      operation 7601691 "getUnresolvedPermissions"
	private return_type class_ref 285467 // PermissionCollection
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves any unresolved permissions of type p.

@param p the type of unresolved permission to resolve

@return PermissionCollection containing the unresolved permissions,
 or null if there were no unresolved permissions of type p.
"
      end

      attribute 2846491 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4858622370623524688L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1877147 // serialPersistentFields (<unidirectional association>)
	relation 1877147 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"perms\", Hashtable.class),
	new ObjectStreamField(\"allPermission\", PermissionCollection.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 private Hashtable perms;

@serialField perms java.util.Hashtable
    A table of the Permission classes and PermissionCollections.
@serialField allPermission java.security.PermissionCollection

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1877147 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 7601819 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Default fields.


Writes the contents of the permsMap field out as a Hashtable for
serialization compatibility with earlier releases. allPermission
unchanged."
      end

      operation 7601947 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Hashtable of Class/PermissionCollections and saves them in the 
permsMap field. Reads in allPermission."
      end
    end

    class 529051 "PrivilegedExceptionAction"
      visibility public stereotype "interface"
      nformals 3
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A computation to be performed with privileges enabled, that throws one or
more checked exceptions.  The computation is performed by invoking
<code>AccessController.doPrivileged</code> on the
<code>PrivilegedExceptionAction</code> object.  This interface is
used only for computations that throw checked exceptions;
computations that do not throw
checked exceptions should use <code>PrivilegedAction</code> instead.

@see AccessController
@see AccessController#doPrivileged(PrivilegedExceptionAction)
@see AccessController#doPrivileged(PrivilegedExceptionAction,
                                             AccessControlContext)
@see PrivilegedAction"
      operation 3266331 "run"
	public explicit_return_type "T"
	nparams 0
	nexceptions 1
	  exception class_ref 165403 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the computation.  This method will be called by
<code>AccessController.doPrivileged</code> after enabling privileges.

@return a class-dependent value that may represent the results of the
	       computation.  Each class that implements
	       <code>PrivilegedExceptionAction</code> should document what
        (if anything) this value represents.
@throws Exception an exceptional condition has occurred.  Each class
	       that implements <code>PrivilegedExceptionAction</code> should
        document the exceptions that its run method can throw.
@see AccessController#doPrivileged(PrivilegedExceptionAction)
@see AccessController#doPrivileged(PrivilegedExceptionAction,AccessControlContext)"
      end
    end

    class 840859 "KeyStore"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a storage facility for cryptographic
keys and certificates.

<p> A <code>KeyStore</code> manages different types of entries.
Each type of entry implements the <code>KeyStore.Entry</code> interface.
Three basic <code>KeyStore.Entry</code> implementations are provided:

<ul>
<li><b>KeyStore.PrivateKeyEntry</b>
<p> This type of entry holds a cryptographic <code>PrivateKey</code>,
which is optionally stored in a protected format to prevent
unauthorized access.  It is also accompanied by a certificate chain
for the corresponding public key.

<p> Private keys and certificate chains are used by a given entity for
self-authentication. Applications for this authentication include software
distribution organizations which sign JAR files as part of releasing
and/or licensing software.

<li><b>KeyStore.SecretKeyEntry</b>
<p> This type of entry holds a cryptographic <code>SecretKey</code>,
which is optionally stored in a protected format to prevent
unauthorized access.

<li><b>KeyStore.TrustedCertificateEntry</b>
<p> This type of entry contains a single public key <code>Certificate</code>
belonging to another party. It is called a <i>trusted certificate</i>
because the keystore owner trusts that the public key in the certificate
indeed belongs to the identity identified by the <i>subject</i> (owner)
of the certificate.

<p>This type of entry can be used to authenticate other parties.
</ul>

<p> Each entry in a keystore is identified by an \"alias\" string. In the
case of private keys and their associated certificate chains, these strings
distinguish among the different ways in which the entity may authenticate
itself. For example, the entity may authenticate itself using different
certificate authorities, or using different public key algorithms.

<p> Whether keystores are persistent, and the mechanisms used by the
keystore if it is persistent, are not specified here. This allows
use of a variety of techniques for protecting sensitive (e.g., private or
secret) keys. Smart cards or other integrated cryptographic engines
(SafeKeyper) are one option, and simpler mechanisms such as files may also
be used (in a variety of formats).

<p> Typical ways to request a KeyStore object include
relying on the default type and providing a specific keystore type.

<ul>
<li>To rely on the default type:
<pre>
   KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
</pre>
The system will return a keystore implementation for the default type.
<p>

<li>To provide a specific keystore type:
<pre>
     KeyStore ks = KeyStore.getInstance(\"JKS\");
</pre>
The system will return the most preferred implementation of the
specified keystore type available in the environment. <p>
</ul>

<p> Before a keystore can be accessed, it must be
{@link #load(java.io.InputStream, char[]) loaded}.
<pre>
   KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());

   // get user password and file input stream
   char[] password = getPassword();
   java.io.FileInputStream fis =
       new java.io.FileInputStream(\"keyStoreName\");
   ks.load(fis, password);
   fis.close();
</pre>

To create an empty keystore using the above <code>load</code> method,
pass <code>null</code> as the <code>InputStream</code> argument.

<p> Once the keystore has been loaded, it is possible
to read existing entries from the keystore, or to write new entries
into the keystore:
<pre>
   // get my private key
   KeyStore.PrivateKeyEntry pkEntry = (KeyStore.PrivateKeyEntry)
       ks.getEntry(\"privateKeyAlias\", password);
   PrivateKey myPrivateKey = pkEntry.getPrivateKey();

   // save my secret key
   javax.crypto.SecretKey mySecretKey;
   KeyStore.SecretKeyEntry skEntry =
       new KeyStore.SecretKeyEntry(mySecretKey);
   ks.setEntry(\"secretKeyAlias\", skEntry, password);

   // store away the keystore
   java.io.FileOutputStream fos =
       new java.io.FileOutputStream(\"newKeyStoreName\");
   ks.store(fos, password);
   fos.close();
</pre>

Note that although the same password may be used to
load the keystore, to protect the private key entry,
to protect the secret key entry, and to store the keystore
(as is shown in the sample code above),
different passwords or other protection parameters
may also be used.

@author Jan Luehe

@version 1.42, 06/28/04

@see java.security.PrivateKey
@see javax.crypto.SecretKey
@see java.security.cert.Certificate

@since 1.2"
      attribute 2844571 "KEYSTORE_TYPE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"keystore.type\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant to lookup in the Security properties file to determine
the default keystore type.
In the Security properties file, the default keystore type is given as:
<pre>
keystore.type=jks
</pre>
"
      end

      attribute 2844699 "type"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The keystore type"
      end

      classrelation 1873051 // provider (<unidirectional association>)
	relation 1873051 --->
	  a role_name "provider" private
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1873051 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      classrelation 1873179 // keyStoreSpi (<unidirectional association>)
	relation 1873179 --->
	  a role_name "keyStoreSpi" private
	    comment " The provider implementation
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1873179 // keyStoreSpi (<unidirectional association>)
	  b parent class_ref 965019 // KeyStoreSpi
      end

      attribute 2844827 "initialized"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Has this keystore been initialized (loaded)?"
      end

      class 965147 "LoadStoreParameter"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 7585051 "getProtectionParameter"
	  public return_type class_ref 965275 // ProtectionParameter
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the parameter used to protect keystore data.

@return the parameter used to protect keystore data, or null"
	end
      end

      class 965275 "ProtectionParameter"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 965403 "PasswordProtection"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1873307 // <realization>
	  relation 1873307 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1873307 // <realization>
	    b parent class_ref 965275 // ProtectionParameter
	end

	classrelation 1873435 // <realization>
	  relation 1873435 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1873435 // <realization>
	    b parent class_ref 965531 // Destroyable
	end

	attribute 2844955 "password"
	  const_attribute private explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2845083 "destroyed"
	  volatile private explicit_type "boolean"
	  init_value "=  false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7585435 "PasswordProtection"
	  public explicit_return_type ""
	  nparams 1
	    param in name "password" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a password parameter.

<p> The specified <code>password</code> is cloned before it is stored
in the new <code>PasswordProtection</code> object.

@param password the password, which may be <code>null</code>"
	end

	operation 7585563 "getPassword"
	  public explicit_return_type "char"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the password.

<p>Note that this method returns a reference to the password.
If a clone of the array is created it is the caller's
responsibility to zero out the password information
after it is no longer needed.

@see #destroy()
@return the password, which may be <code>null</code>
@exception IllegalStateException if the password has
		been cleared (destroyed)"
	end

	operation 7585691 "destroy"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 965659 // DestroyFailedException
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the password.

@exception DestroyFailedException if this method was unable
	to clear the password"
	end

	operation 7585819 "isDestroyed"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if password has been cleared.

@return true if the password has been cleared, false otherwise"
	end
      end

      class 965787 "CallbackHandlerProtection"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1873563 // <realization>
	  relation 1873563 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1873563 // <realization>
	    b parent class_ref 965275 // ProtectionParameter
	end

	classrelation 1873691 // handler (<unidirectional association>)
	  relation 1873691 --->
	    a role_name "handler" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1873691 // handler (<unidirectional association>)
	    b parent class_ref 524955 // CallbackHandler
	end

	operation 7585947 "CallbackHandlerProtection"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "handler" type class_ref 524955 // CallbackHandler
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new CallbackHandlerProtection from a
CallbackHandler.

@param handler the CallbackHandler
@exception NullPointerException if handler is null"
	end

	operation 7586075 "getCallbackHandler"
	  public return_type class_ref 524955 // CallbackHandler
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the CallbackHandler.

@return the CallbackHandler."
	end
      end

      class 965915 "Entry"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 966043 "PrivateKeyEntry"
	visibility public 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1873819 // <realization>
	  relation 1873819 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1873819 // <realization>
	    b parent class_ref 965915 // Entry
	end

	classrelation 1873947 // privKey (<unidirectional association>)
	  relation 1873947 --->
	    a role_name "privKey" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1873947 // privKey (<unidirectional association>)
	    b parent class_ref 964123 // PrivateKey
	end

	classrelation 1874075 // chain (<unidirectional association>)
	  relation 1874075 --->
	    a role_name "chain" multiplicity "[]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1874075 // chain (<unidirectional association>)
	    b parent class_ref 961947 // Certificate
	end

	operation 7586203 "PrivateKeyEntry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "privateKey" type class_ref 964123 // PrivateKey
	    param inout name "chain" type class_ref 961947 // Certificate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>PrivateKeyEntry</code> with a
<code>PrivateKey</code> and corresponding certificate chain.

<p> The specified <code>chain</code> is cloned before it is stored
in the new <code>PrivateKeyEntry</code> object.

@param privateKey the <code>PrivateKey</code>
@param chain an array of <code>Certificate</code>s
	representing the certificate chain.
	The chain must be ordered and contain a
	<code>Certificate</code> at index 0
	corresponding to the private key.

@exception NullPointerException if
	<code>privateKey</code> or <code>chain</code>
	is <code>null</code>
@exception IllegalArgumentException if the specified chain has a
	length of 0, if the specified chain does not contain
	<code>Certificate</code>s of the same type,
	or if the <code>PrivateKey</code> algorithm
	does not match the algorithm of the <code>PublicKey</code>
	in the end entity <code>Certificate</code> (at index 0)"
	end

	operation 7586331 "getPrivateKey"
	  public return_type class_ref 964123 // PrivateKey
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>PrivateKey</code> from this entry.

@return the <code>PrivateKey</code> from this entry"
	end

	operation 7586459 "getCertificateChain"
	  public return_type class_ref 961947 // Certificate
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Certificate</code> chain from this entry.

<p> The stored chain is cloned before being returned.

@return an array of <code>Certificate</code>s corresponding
	to the certificate chain for the public key.
	If the certificates are of type X.509,
	the runtime type of the returned array is
	<code>X509Certificate[]</code>."
	end

	operation 7586587 "getCertificate"
	  public return_type class_ref 961947 // Certificate
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the end entity <code>Certificate</code>
from the certificate chain in this entry.

@return the end entity <code>Certificate</code> (at index 0)
	from the certificate chain in this entry.
	If the certificate is of type X.509,
	the runtime type of the returned certificate is
	<code>X509Certificate</code>."
	end

	operation 7586715 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string representation of this PrivateKeyEntry.
@return a string representation of this PrivateKeyEntry."
	end
      end

      class 966171 "SecretKeyEntry"
	visibility public 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1874203 // <realization>
	  relation 1874203 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1874203 // <realization>
	    b parent class_ref 965915 // Entry
	end

	attribute 2845211 "sKey"
	  const_attribute private explicit_type "SecretKey"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7586843 "SecretKeyEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "secretKey" explicit_type "SecretKey"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>SecretKeyEntry</code> with a
<code>SecretKey</code>.

@param secretKey the <code>SecretKey</code>

@exception NullPointerException if <code>secretKey</code>
	is <code>null</code>"
	end

	operation 7586971 "getSecretKey"
	  public explicit_return_type "SecretKey"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>SecretKey</code> from this entry.

@return the <code>SecretKey</code> from this entry"
	end

	operation 7587099 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string representation of this SecretKeyEntry.
@return a string representation of this SecretKeyEntry."
	end
      end

      class 966299 "TrustedCertificateEntry"
	visibility public 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1874331 // <realization>
	  relation 1874331 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1874331 // <realization>
	    b parent class_ref 965915 // Entry
	end

	classrelation 1874459 // cert (<unidirectional association>)
	  relation 1874459 --->
	    a role_name "cert" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1874459 // cert (<unidirectional association>)
	    b parent class_ref 961947 // Certificate
	end

	operation 7587227 "TrustedCertificateEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "trustedCert" type class_ref 961947 // Certificate
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>TrustedCertificateEntry</code> with a
trusted <code>Certificate</code>.

@param trustedCert the trusted <code>Certificate</code>

@exception NullPointerException if
	<code>trustedCert</code> is <code>null</code>"
	end

	operation 7587355 "getTrustedCertificate"
	  public return_type class_ref 961947 // Certificate
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the trusted <code>Certficate</code> from this entry.

@return the trusted <code>Certificate</code> from this entry"
	end

	operation 7587483 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a string representation of this TrustedCertificateEntry.
@return a string representation of this TrustedCertificateEntry."
	end
      end

      operation 7587611 "KeyStore"
	protected explicit_return_type ""
	nparams 3
	  param inout name "keyStoreSpi" type class_ref 965019 // KeyStoreSpi
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a KeyStore object of the given type, and encapsulates the given
provider implementation (SPI object) in it.

@param keyStoreSpi the provider implementation.
@param provider the provider.
@param type the keystore type."
      end

      operation 7587739 "getInstance"
	class_operation public return_type class_ref 840859 // KeyStore
	nparams 1
	  param in name "type" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a keystore object of the given type.

<p>If the default provider package provides a keystore implementation
of the given type, an instance of <code>KeyStore</code> containing that
implementation is returned. If the requested keystore type is not
available in the default package, other packages are searched.

@param type the type of keystore. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard keystore types.

@return a keystore object of the specified type.

@exception KeyStoreException if the requested keystore type is
not available in the default provider package or any of the other
provider packages that were searched.  "
      end

      operation 7587867 "getInstance"
	class_operation public return_type class_ref 840859 // KeyStore
	nparams 2
	  param in name "type" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 966427 // KeyStoreException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a keystore object for the specified keystore
type from the specified provider.

@param type the type of keystore.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard keystore types.

@param provider the name of the provider.

@return a keystore object of the specified type, as
supplied by the specified provider.

@exception KeyStoreException if the requested keystore type is not
available from the provider.

@exception NoSuchProviderException if the provider has not been
configured.

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider"
      end

      operation 7587995 "getInstance"
	class_operation public return_type class_ref 840859 // KeyStore
	nparams 2
	  param in name "type" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a keystore object for the specified keystore
type from the specified provider. Note: the <code>provider</code> 
doesn't have to be registered. 

@param type the type of keystore.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard keystore types.

@param provider the provider.

@return a keystore object of the specified type, as
supplied by the specified provider.

@exception KeyStoreException if the requested keystore type is not
available from the provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7588123 "getDefaultType"
	class_operation public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default keystore type as specified in the Java security
properties file, or the string
&quot;jks&quot; (acronym for &quot;Java keystore&quot;)
if no such property exists.
The Java security properties file is located in the file named
&lt;JAVA_HOME&gt;/lib/security/java.security, where &lt;JAVA_HOME&gt;
refers to the directory where the JDK was installed.

<p>The default keystore type can be used by applications that do not
want to use a hard-coded keystore type when calling one of the
<code>getInstance</code> methods, and want to provide a default keystore
type in case a user does not specify its own.

<p>The default keystore type can be changed by setting the value of the
\"keystore.type\" security property (in the Java security properties
file) to the desired keystore type.

@return the default keystore type as specified in the 
Java security properties file, or the string &quot;jks&quot;
if no such property exists."
      end

      operation 7588251 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this keystore.

@return the provider of this keystore."
      end

      operation 7588379 "getType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this keystore.

@return the type of this keystore."
      end

      operation 7588507 "getKey"
	public return_type class_ref 961819 // Key
	nparams 2
	  param in name "alias" explicit_type "String"
	  param in name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 966427 // KeyStoreException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966555 // UnrecoverableKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key associated with the given alias, using the given
password to recover it.  The key must have been associated with
the alias by a call to <code>setKeyEntry</code>,
or by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code> or <code>SecretKeyEntry</code>.

@param alias the alias name
@param password the password for recovering the key

@return the requested key, or null if the given alias does not exist
or does not identify a key-related entry.

@exception KeyStoreException if the keystore has not been initialized
(loaded).
@exception NoSuchAlgorithmException if the algorithm for recovering the
key cannot be found
@exception UnrecoverableKeyException if the key cannot be recovered
(e.g., the given password is wrong)."
      end

      operation 7588635 "getCertificateChain"
	public return_type class_ref 961947 // Certificate
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain associated with the given alias.
The certificate chain must have been associated with the alias
by a call to <code>setKeyEntry</code>,
or by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>.

@param alias the alias name

@return the certificate chain (ordered with the user's certificate first
and the root certificate authority last), or null if the given alias
does not exist or does not contain a certificate chain

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7588763 "getCertificate"
	public return_type class_ref 961947 // Certificate
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate associated with the given alias.

<p> If the given alias name identifies an entry
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
then the trusted certificate contained in that entry is returned.

<p> If the given alias name identifies an entry
created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>,
then the first element of the certificate chain in that entry
is returned.

@param alias the alias name

@return the certificate, or null if the given alias does not exist or
does not contain a certificate.

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7588891 "getCreationDate"
	public return_type class_ref 139163 // Date
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the creation date of the entry identified by the given alias.

@param alias the alias name

@return the creation date of this entry, or null if the given alias does
not exist

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7589019 "setKeyEntry"
	public explicit_return_type "void"
	nparams 4
	  param in name "alias" explicit_type "String"
	  param inout name "key" type class_ref 961819 // Key
	  param in name "password" explicit_type "char"
	  param inout name "chain" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given key to the given alias, protecting it with the given
password.

<p>If the given key is of type <code>java.security.PrivateKey</code>,
it must be accompanied by a certificate chain certifying the
corresponding public key.

<p>If the given alias already exists, the keystore information
associated with it is overridden by the given key (and possibly
certificate chain).

@param alias the alias name
@param key the key to be associated with the alias
@param password the password to protect the key
@param chain the certificate chain for the corresponding public
key (only required if the given key is of type
<code>java.security.PrivateKey</code>).

@exception KeyStoreException if the keystore has not been initialized
(loaded), the given key cannot be protected, or this operation fails
for some other reason"
      end

      operation 7589147 "setKeyEntry"
	public explicit_return_type "void"
	nparams 3
	  param in name "alias" explicit_type "String"
	  param in name "key" explicit_type "byte"
	  param inout name "chain" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given key (that has already been protected) to the given
alias.

<p>If the protected key is of type
<code>java.security.PrivateKey</code>, it must be accompanied by a
certificate chain certifying the corresponding public key. If the
underlying keystore implementation is of type <code>jks</code>,
<code>key</code> must be encoded as an
<code>EncryptedPrivateKeyInfo</code> as defined in the PKCS #8 standard.

<p>If the given alias already exists, the keystore information
associated with it is overridden by the given key (and possibly
certificate chain).

@param alias the alias name
@param key the key (in protected format) to be associated with the alias
@param chain the certificate chain for the corresponding public
		key (only useful if the protected key is of type
		<code>java.security.PrivateKey</code>).

@exception KeyStoreException if the keystore has not been initialized
(loaded), or if this operation fails for some other reason."
      end

      operation 7589275 "setCertificateEntry"
	public explicit_return_type "void"
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "cert" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given trusted certificate to the given alias.

<p> If the given alias identifies an existing entry
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
the trusted certificate in the existing entry
is overridden by the given certificate.

@param alias the alias name
@param cert the certificate

@exception KeyStoreException if the keystore has not been initialized,
or the given alias already exists and does not identify an
entry containing a trusted certificate,
or this operation fails for some other reason."
      end

      operation 7589403 "deleteEntry"
	public explicit_return_type "void"
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the entry identified by the given alias from this keystore.

@param alias the alias name

@exception KeyStoreException if the keystore has not been initialized,
or if the entry cannot be removed."
      end

      operation 7589531 "aliases"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lists all the alias names of this keystore.

@return enumeration of the alias names

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7589659 "containsAlias"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the given alias exists in this keystore.

@param alias the alias name

@return true if the alias exists, false otherwise

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7589787 "size"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of entries in this keystore.

@return the number of entries in this keystore

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7589915 "isKeyEntry"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the entry identified by the given alias
was created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code> or a <code>SecretKeyEntry</code>.

@param alias the alias for the keystore entry to be checked

@return true if the entry identified by the given alias is a
key-related entry, false otherwise.

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7590043 "isCertificateEntry"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the entry identified by the given alias
was created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>.

@param alias the alias for the keystore entry to be checked

@return true if the entry identified by the given alias contains a
trusted certificate, false otherwise.

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7590171 "getCertificateAlias"
	public explicit_return_type "String"
	nparams 1
	  param inout name "cert" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the (alias) name of the first keystore entry whose certificate
matches the given certificate.

<p> This method attempts to match the given certificate with each
keystore entry. If the entry being considered was
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
then the given certificate is compared to that entry's certificate.

<p> If the entry being considered was
created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>,
then the given certificate is compared to the first
element of that entry's certificate chain.

@param cert the certificate to match with.

@return the alias name of the first entry with a matching certificate,
or null if no such entry exists in this keystore.

@exception KeyStoreException if the keystore has not been initialized
(loaded)."
      end

      operation 7590299 "store"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 183835 // OutputStream
	  param in name "password" explicit_type "char"
	nexceptions 4
	  exception class_ref 966427 // KeyStoreException
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this keystore to the given output stream, and protects its
integrity with the given password.

@param stream the output stream to which this keystore is written.
@param password the password to generate the keystore integrity check

@exception KeyStoreException if the keystore has not been initialized
(loaded).
@exception IOException if there was an I/O problem with data
@exception NoSuchAlgorithmException if the appropriate data integrity
algorithm could not be found
@exception CertificateException if any of the certificates included in
the keystore data could not be stored"
      end

      operation 7590427 "store"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 965147 // LoadStoreParameter
	nexceptions 4
	  exception class_ref 966427 // KeyStoreException
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this keystore using the given <code>LoadStoreParameter</code>.

@param param the <code>LoadStoreParameter</code>
		that specifies how to store the keystore,
		which may be <code>null</code>

@exception IllegalArgumentException if the given
		<code>LoadStoreParameter</code>
		input is not recognized
@exception KeyStoreException if the keystore has not been initialized
		(loaded)
@exception IOException if there was an I/O problem with data
@exception NoSuchAlgorithmException if the appropriate data integrity
		algorithm could not be found
@exception CertificateException if any of the certificates included in
		the keystore data could not be stored

@since 1.5"
      end

      operation 7590555 "load"
	public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 179099 // InputStream
	  param in name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this KeyStore from the given input stream.

<p>A password may be given to unlock the keystore
(e.g. the keystore resides on a hardware token device),
or to check the integrity of the keystore data.
If a password is not given for integrity checking,
then integrity checking is not performed.

<p>In order to create an empty keystore, or if the keystore cannot
be initialized from a stream, pass <code>null</code>
as the <code>stream</code> argument.

<p> Note that if this keystore has already been loaded, it is
reinitialized and loaded again from the given input stream.

@param stream the input stream from which the keystore is loaded,
or <code>null</code>
@param password the password used to check the integrity of
the keystore, the password used to unlock the keystore,
or <code>null</code>

@exception IOException if there is an I/O or format problem with the
keystore data, if a password is required but not given,
or if the given password was incorrect
@exception NoSuchAlgorithmException if the algorithm used to check
the integrity of the keystore cannot be found
@exception CertificateException if any of the certificates in the
keystore could not be loaded"
      end

      operation 7590683 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 965147 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads this keystore using the given <code>LoadStoreParameter</code>.

<p> Note that if this KeyStore has already been loaded, it is
reinitialized and loaded again from the given parameter.

@param param the <code>LoadStoreParameter</code>
		that specifies how to load the keystore,
		which may be <code>null</code>

@exception IllegalArgumentException if the given
		<code>LoadStoreParameter</code>
		input is not recognized
@exception IOException if there is an I/O or format problem with the
		keystore data
@exception NoSuchAlgorithmException if the algorithm used to check
		the integrity of the keystore cannot be found
@exception CertificateException if any of the certificates in the
		keystore could not be loaded

@since 1.5"
      end

      operation 7590811 "getEntry"
	public return_type class_ref 965915 // Entry
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "protParam" type class_ref 965275 // ProtectionParameter
	nexceptions 3
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966811 // UnrecoverableEntryException
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a keystore <code>Entry</code> for the specified alias
with the specified protection parameter.

@param alias get the keystore <code>Entry</code> for this alias
@param protParam the <code>ProtectionParameter</code>
		used to protect the <code>Entry</code>,
		which may be <code>null</code>

@return the keystore <code>Entry</code> for the specified alias,
		or <code>null</code> if there is no such entry

@exception NullPointerException if
		<code>alias</code> is <code>null</code>
@exception NoSuchAlgorithmException if the algorithm for recovering the
		entry cannot be found
@exception UnrecoverableEntryException if the specified
		<code>protParam</code> were insufficient or invalid
@exception KeyStoreException if the keystore has not been initialized
		(loaded).
@see #setEntry(String, KeyStore.Entry, KeyStore.ProtectionParameter)

@since 1.5"
      end

      operation 7590939 "setEntry"
	public explicit_return_type "void"
	nparams 3
	  param in name "alias" explicit_type "String"
	  param inout name "entry" type class_ref 965915 // Entry
	  param inout name "protParam" type class_ref 965275 // ProtectionParameter
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves a keystore <code>Entry</code> under the specified alias.
The protection parameter is used to protect the
<code>Entry</code>.

<p> If an entry already exists for the specified alias,
it is overridden.

@param alias save the keystore <code>Entry</code> under this alias
@param entry the <code>Entry</code> to save
@param protParam the <code>ProtectionParameter</code>
		used to protect the <code>Entry</code>,
		which may be <code>null</code>

@exception NullPointerException if
		<code>alias</code> or <code>entry</code>
		is <code>null</code>
@exception KeyStoreException if the keystore has not been initialized
		(loaded), or if this operation fails for some other reason

@see #getEntry(String, KeyStore.ProtectionParameter)

@since 1.5"
      end

      operation 7591067 "entryInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "entryClass" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends KeyStore.Entry> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the keystore <code>Entry</code> for the specified
<code>alias</code> is an instance or subclass of the specified
<code>entryClass</code>.

@param alias the alias name
@param entryClass the entry class 

@return true if the keystore <code>Entry</code> for the specified
		<code>alias</code> is an instance or subclass of the
		specified <code>entryClass</code>, false otherwise

@exception NullPointerException if
		<code>alias</code> or <code>entryClass</code>
		is <code>null</code>
@exception KeyStoreException if the keystore has not been
		initialized (loaded)

@since 1.5"
      end

      class 966939 "Builder"
	abstract visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 7591195 "Builder"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new Builder."
	end

	operation 7591323 "getKeyStore"
	  abstract public return_type class_ref 840859 // KeyStore
	  nparams 0
	  nexceptions 1
	    exception class_ref 966427 // KeyStoreException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the KeyStore described by this object.

@exception KeyStoreException if an error occured during the
  operation, for example if the KeyStore could not be
  instantiated or loaded"
	end

	operation 7591451 "getProtectionParameter"
	  abstract public return_type class_ref 965275 // ProtectionParameter
	  nparams 1
	    param in name "alias" explicit_type "String"
	  nexceptions 1
	    exception class_ref 966427 // KeyStoreException
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the ProtectionParameters that should be used to obtain
the {@link KeyStore.Entry Entry} with the given alias.
The <code>getKeyStore</code> method must be invoked before this
method may be called.

@return the ProtectionParameters that should be used to obtain
  the {@link KeyStore.Entry Entry} with the given alias.
@param alias the alias of the KeyStore entry
@throws NullPointerException if alias is null
@throws KeyStoreException if an error occured during the
  operation
@throws IllegalStateException if the getKeyStore method has
  not been invoked prior to calling this method"
	end

	operation 7591579 "newInstance"
	  class_operation public return_type class_ref 966939 // Builder
	  nparams 2
	    param in name "keyStore" type class_ref 840859 // KeyStore
	    param in name "protectionParameter" type class_ref 965275 // ProtectionParameter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new Builder that encapsulates the given KeyStore.
The {@linkplain #getKeyStore} method of the returned object 
will return <code>keyStore</code>, the {@linkplain 
#getProtectionParameter getProtectionParameter()} method will 
return <code>protectionParameters</code>.

<p> This is useful if an existing KeyStore object needs to be
used with Builder-based APIs.

@return a new Builder object
@param keyStore the KeyStore to be encapsulated
@param protectionParameter the ProtectionParameter used to
  protect the KeyStore entries
@throws NullPointerException if keyStore or
  protectionParameters is null
@throws IllegalArgumentException if the keyStore has not been
  initialized"
	end

	operation 7591707 "newInstance"
	  class_operation public return_type class_ref 966939 // Builder
	  nparams 4
	    param in name "type" explicit_type "String"
	    param inout name "provider" type class_ref 959643 // Provider
	    param inout name "file" type class_ref 165147 // File
	    param inout name "protection" type class_ref 965275 // ProtectionParameter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new Builder object.

<p>The first call to the {@link #getKeyStore} method on the returned
builder will create a KeyStore of type <code>type</code> and call
its {@link KeyStore#load load()} method. 
The <code>inputStream</code> argument is constructed from
<code>file</code>. 
If <code>protection</code> is a
<code>PasswordProtection</code>, the password is obtained by
calling the <code>getPassword</code> method.
Otherwise, if <code>protection</code> is a 
<code>CallbackHandlerProtection</code>, the password is obtained
by invoking the CallbackHandler.

<p>Subsequent calls to {@link #getKeyStore} return the same object 
as the initial call. If the initial call to failed with a
KeyStoreException, subsequent calls also throw a 
KeyStoreException.

<p>The KeyStore is instantiated from <code>provider</code> if
non-null. Otherwise, all installed providers are searched.

<p>Calls to {@link #getProtectionParameter getProtectionParameter()}
will return a {@link KeyStore.PasswordProtection PasswordProtection}
object encapsulating the password that was used to invoke the
<code>load</code> method.

<p><em>Note</em> that the {@link #getKeyStore} method is executed 
within the {@link AccessControlContext} of the code invoking this 
method.

@return a new Builder object
@param type the type of KeyStore to be constructed
@param provider the provider from which the KeyStore is to
  be instantiated (or null)
@param file the File that contains the KeyStore data
@param protection the ProtectionParameter securing the KeyStore data
@throws NullPointerException if type, file or protection is null
@throws IllegalArgumentException if protection is not an instance
  of either PasswordProtection or CallbackHandlerProtection; or
  if file does not exist or does not refer to a normal file"
	end

	class 967067 "FileBuilder"
	  visibility private 
	  cpp_decl ""
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 1874587 // <generalisation>
	    relation 1874587 ---|>
	      a public
		java "${type}"
		classrelation_ref 1874587 // <generalisation>
	      b parent class_ref 966939 // Builder
	  end

	  attribute 2845339 "type"
	    const_attribute private explicit_type "String"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 1874715 // provider (<unidirectional association>)
	    relation 1874715 --->
	      a role_name "provider" const_relation private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1874715 // provider (<unidirectional association>)
	      b parent class_ref 959643 // Provider
	  end

	  classrelation 1874843 // file (<unidirectional association>)
	    relation 1874843 --->
	      a role_name "file" const_relation private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1874843 // file (<unidirectional association>)
	      b parent class_ref 165147 // File
	  end

	  classrelation 1874971 // protection (<unidirectional association>)
	    relation 1874971 --->
	      a role_name "protection" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1874971 // protection (<unidirectional association>)
	      b parent class_ref 965275 // ProtectionParameter
	  end

	  classrelation 1875099 // context (<unidirectional association>)
	    relation 1875099 --->
	      a role_name "context" const_relation private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1875099 // context (<unidirectional association>)
	      b parent class_ref 163739 // AccessControlContext
	  end

	  classrelation 1875227 // keyStore (<unidirectional association>)
	    relation 1875227 --->
	      a role_name "keyStore" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1875227 // keyStore (<unidirectional association>)
	      b parent class_ref 840859 // KeyStore
	  end

	  classrelation 1875355 // oldException (<unidirectional association>)
	    relation 1875355 --->
	      a role_name "oldException" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 1875355 // oldException (<unidirectional association>)
	      b parent class_ref 164251 // Throwable
	  end

	  operation 7591835 "FileBuilder"
	    package explicit_return_type ""
	    nparams 5
	      param in name "type" explicit_type "String"
	      param inout name "provider" type class_ref 959643 // Provider
	      param inout name "file" type class_ref 165147 // File
	      param inout name "protection" type class_ref 965275 // ProtectionParameter
	      param inout name "context" type class_ref 163739 // AccessControlContext
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 7591963 "getKeyStore"
	    public return_type class_ref 840859 // KeyStore
	    nparams 0
	    nexceptions 1
	      exception class_ref 966427 // KeyStoreException
	    
	    preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 7592091 "getProtectionParameter"
	    public return_type class_ref 965275 // ProtectionParameter
	    nparams 1
	      param in name "alias" explicit_type "String"
	    
	    preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 7592219 "newInstance"
	  class_operation public return_type class_ref 966939 // Builder
	  nparams 3
	    param in name "type" explicit_type "String"
	    param in name "provider" type class_ref 959643 // Provider
	    param in name "protection" type class_ref 965275 // ProtectionParameter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a new Builder object.

<p>Each call to the {@link #getKeyStore} method on the returned
builder will return a new KeyStore object of type <code>type</code>.
Its {@link KeyStore#load(KeyStore.LoadStoreParameter) load()} 
method is invoked using a
<code>LoadStoreParameter</code> that encapsulates 
<code>protection</code>.

<p>The KeyStore is instantiated from <code>provider</code> if
non-null. Otherwise, all installed providers are searched.

<p>Calls to {@link #getProtectionParameter getProtectionParameter()}
will return <code>protection</code>.

<p><em>Note</em> that the {@link #getKeyStore} method is executed 
within the {@link AccessControlContext} of the code invoking this 
method.

@return a new Builder object
@param type the type of KeyStore to be constructed
@param provider the provider from which the KeyStore is to
  be instantiated (or null)
@param protection the ProtectionParameter securing the Keystore
@throws NullPointerException if type or protection is null"
	end
      end

      class 967195 "SimpleLoadStoreParameter"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1875483 // <realization>
	  relation 1875483 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1875483 // <realization>
	    b parent class_ref 965147 // LoadStoreParameter
	end

	classrelation 1875611 // protection (<unidirectional association>)
	  relation 1875611 --->
	    a role_name "protection" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1875611 // protection (<unidirectional association>)
	    b parent class_ref 965275 // ProtectionParameter
	end

	operation 7592347 "SimpleLoadStoreParameter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "protection" type class_ref 965275 // ProtectionParameter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7592475 "getProtectionParameter"
	  public return_type class_ref 965275 // ProtectionParameter
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 840987 "IdentityScope"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This class represents a scope for identities. It is an Identity 
itself, and therefore has a name and can have a scope. It can also 
optionally have a public key and associated certificates.

<p>An IdentityScope can contain Identity objects of all kinds, including
Signers. All types of Identity objects can be retrieved, added, and 
removed using the same methods. Note that it is possible, and in fact
expected, that different types of identity scopes will
apply different policies for their various operations on the
various types of Identities.

<p>There is a one-to-one mapping between keys and identities, and 
there can only be one copy of one key per scope. For example, suppose
<b>Acme Software, Inc</b> is a software publisher known to a user.
Suppose it is an Identity, that is, it has a public key, and a set of
associated certificates. It is named in the scope using the name 
\"Acme Software\". No other named Identity in the scope has the same 
public  key. Of course, none has the same name as well.

@see Identity
@see Signer
@see Principal
@see Key

@version 1.54 04/05/18
@author Benjamin Renaud

@deprecated This class is no longer used. Its functionality has been
replaced by <code>java.security.KeyStore</code>, the
<code>java.security.cert</code> package, and
<code>java.security.Principal</code>."
      classrelation 1870107 // <generalisation>
	relation 1870107 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870107 // <generalisation>
	  b parent class_ref 963099 // Identity
      end

      attribute 2840987 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2337346281189773310L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1870235 // scope (<unidirectional association>)
	relation 1870235 --->
	  a role_name "scope" class_relation private
	    comment " The system's scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1870235 // scope (<unidirectional association>)
	  b parent class_ref 840987 // IdentityScope
      end

      operation 7574683 "initializeSystemScope"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " initialize the system scope"
      end

      operation 7574811 "IdentityScope"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is used for serialization only and should not
be used by subclasses."
      end

      operation 7574939 "IdentityScope"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new identity scope with the specified name.

@param name the scope name."
      end

      operation 7575067 "IdentityScope"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "scope" type class_ref 840987 // IdentityScope
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new identity scope with the specified name and scope.

@param name the scope name.
@param scope the scope for the new identity scope.

@exception KeyManagementException if there is already an identity 
with the same name in the scope."
      end

      operation 7575195 "getSystemScope"
	class_operation public return_type class_ref 840987 // IdentityScope
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's identity scope.

@return the system's identity scope.

@see #setSystemScope"
      end

      operation 7575323 "setSystemScope"
	class_operation protected explicit_return_type "void"
	nparams 1
	  param inout name "scope" type class_ref 840987 // IdentityScope
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system's identity scope.

<p>First, if there is a security manager, its 
<code>checkSecurityAccess</code> 
method is called with <code>\"setSystemScope\"</code> 
as its argument to see if it's ok to set the identity scope. 

@param scope the scope to set.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
setting the identity scope.

@see #getSystemScope
@see SecurityManager#checkSecurityAccess"
      end

      operation 7575451 "size"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of identities within this identity scope.

@return the number of identities within this identity scope."
      end

      operation 7575579 "getIdentity"
	abstract public return_type class_ref 963099 // Identity
	nparams 1
	  param in name "name" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identity in this scope with the specified name (if any).

@param name the name of the identity to be retrieved.

@return the identity named <code>name</code>, or null if there are
no identities named <code>name</code> in this scope."
      end

      operation 7575707 "getIdentity"
	public return_type class_ref 963099 // Identity
	nparams 1
	  param inout name "principal" type class_ref 527131 // Principal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the identity whose name is the same as that of the 
specified principal. (Note: Identity implements Principal.)

@param principal the principal corresponding to the identity
to be retrieved.

@return the identity whose name is the same as that of the 
principal, or null if there are no identities of the same name 
in this scope."
      end

      operation 7575835 "getIdentity"
	abstract public return_type class_ref 963099 // Identity
	nparams 1
	  param inout name "key" type class_ref 962075 // PublicKey
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the identity with the specified public key.

@param key the public key for the identity to be returned.

@return the identity with the given key, or null if there are
no identities in this scope with that key."
      end

      operation 7575963 "addIdentity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "identity" type class_ref 963099 // Identity
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an identity to this identity scope.

@param identity the identity to be added.

@exception KeyManagementException if the identity is not
valid, a name conflict occurs, another identity has the same
public key as the identity being added, or another exception
occurs. "
      end

      operation 7576091 "removeIdentity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "identity" type class_ref 963099 // Identity
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an identity from this identity scope.

@param identity the identity to be removed.

@exception KeyManagementException if the identity is missing,
or another exception occurs."
      end

      operation 7576219 "identities"
	abstract public return_type class_ref 144411 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Identity> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all identities in this identity scope.

@return an enumeration of all identities in this identity scope."
      end

      operation 7576347 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this identity scope, including
its name, its scope name, and the number of identities in this
identity scope.

@return a string representation of this identity scope."
      end

      operation 7576475 "check"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "directive" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 842139 "GeneralSecurityException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>GeneralSecurityException</code> class is a generic
security exception class that provides type safety for all the
security-related exception classes that extend from it.

@version 1.16, 03/12/19
@author Jan Luehe"
      classrelation 1556379 // <generalisation>
	relation 1556379 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1556379 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 2391451 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  894798122053539237L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6101659 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GeneralSecurityException with no detail message.  "
      end

      operation 6101787 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GeneralSecurityException with the specified detail
message.
A detail message is a String that describes this particular
exception.

@param msg the detail message.  "
      end

      operation 6101915 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>GeneralSecurityException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 6102043 "GeneralSecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>GeneralSecurityException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 842907 "CodeSigner"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates information about a code signer.
It is immutable.

@since 1.5
@version 1.4, 04/26/04
@author Vincent Ryan"
      classrelation 1868187 // <realization>
	relation 1868187 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1868187 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2839707 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  6819288105193937581L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1868315 // signerCertPath (<unidirectional association>)
	relation 1868315 --->
	  a role_name "signerCertPath" private
	    comment "
The signer's certificate path.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1868315 // signerCertPath (<unidirectional association>)
	  b parent class_ref 845339 // CertPath
      end

      classrelation 1868443 // timestamp (<unidirectional association>)
	relation 1868443 --->
	  a role_name "timestamp" private
	    comment "
The signature timestamp.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1868443 // timestamp (<unidirectional association>)
	  b parent class_ref 962331 // Timestamp
      end

      attribute 2839835 "myhash"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Hash code for this code signer.
"
      end

      operation 7568411 "CodeSigner"
	public explicit_return_type ""
	nparams 2
	  param inout name "signerCertPath" type class_ref 845339 // CertPath
	  param inout name "timestamp" type class_ref 962331 // Timestamp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a CodeSigner object.

@param signerCertPath The signer's certificate path. 
                      It must not be <code>null</code>.
@param timestamp A signature timestamp. 
                 If <code>null</code> then no timestamp was generated
                 for the signature.
@throws NullPointerException if <code>signerCertPath</code> is 
                             <code>null</code>."
      end

      operation 7568539 "getSignerCertPath"
	public return_type class_ref 845339 // CertPath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signer's certificate path.

@return A certificate path."
      end

      operation 7568667 "getTimestamp"
	public return_type class_ref 962331 // Timestamp
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature timestamp.

@return The timestamp or <code>null</code> if none is present."
      end

      operation 7568795 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this code signer.
The hash code is generated using the signer's certificate path and the
timestamp, if present.

@return a hash code value for this code signer."
      end

      operation 7568923 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests for equality between the specified object and this
code signer. Two code signers are considered equal if their 
signer certificate paths are equal and if their timestamps are equal,
if present in both.

@param obj the object to test for equality with this object.

@return true if the objects are considered equal, false otherwise."
      end

      operation 7569051 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this code signer.

@return A string comprising the signer's certificate and a timestamp,
        if present."
      end
    end

    class 933787 "SecureClassLoader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class extends ClassLoader with additional support for defining
classes with an associated code source and permissions which are
retrieved by the system policy by default.

@version 1.85, 05/05/04
@author  Li Gong 
@author  Roland Schemers"
      classrelation 1821851 // <generalisation>
	relation 1821851 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1821851 // <generalisation>
	  b parent class_ref 163611 // ClassLoader
      end

      attribute 2803099 "initialized"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If initialization succeed this is set to true and security checks will
succeed. Otherwise the object is not initialized and the object is
useless.
"
      end

      classrelation 1821979 // pdcache (<unidirectional association>)
	relation 1821979 --->
	  a role_name "pdcache" init_value "=  new HashMap(11)" private
	    comment " HashMap that maps CodeSource to ProtectionDomain
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1821979 // pdcache (<unidirectional association>)
	  b parent class_ref 144923 // HashMap
      end

      attribute 2803227 "debug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "=  Debug.getInstance(\"scl\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7280539 "SecureClassLoader"
	protected explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 163611 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SecureClassLoader using the specified parent
class loader for delegation.

<p>If there is a security manager, this method first
calls the security manager's <code>checkCreateClassLoader</code> 
method  to ensure creation of a class loader is allowed.
<p>
@param parent the parent ClassLoader
@exception  SecurityException  if a security manager exists and its  
            <code>checkCreateClassLoader</code> method doesn't allow 
            creation of a class loader.
@see SecurityManager#checkCreateClassLoader"
      end

      operation 7280667 "SecureClassLoader"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SecureClassLoader using the default parent class
loader for delegation.

<p>If there is a security manager, this method first
calls the security manager's <code>checkCreateClassLoader</code> 
method  to ensure creation of a class loader is allowed.

@exception  SecurityException  if a security manager exists and its  
            <code>checkCreateClassLoader</code> method doesn't allow 
            creation of a class loader.
@see SecurityManager#checkCreateClassLoader"
      end

      operation 7280795 "defineClass"
	protected return_type class_ref 164635 // Class
	nparams 5
	  param in name "name" explicit_type "String"
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "cs" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an array of bytes into an instance of class Class,
with an optional CodeSource. Before the
class can be used it must be resolved.
<p>
If a non-null CodeSource is supplied a ProtectionDomain is
constructed and associated with the class being defined.
<p>
@param      name the expected name of the class, or <code>null</code>
                 if not known, using '.' and not '/' as the separator
                 and without a trailing \".class\" suffix.
@param      b    the bytes that make up the class data. The bytes in 
            positions <code>off</code> through <code>off+len-1</code> 
            should have the format of a valid class file as defined 
            by the 
            <a href=\"http://java.sun.com/docs/books/vmspec/\">Java 
            Virtual Machine Specification</a>.
@param      off  the start offset in <code>b</code> of the class data
@param      len  the length of the class data
@param      cs   the associated CodeSource, or <code>null</code> if none
@return the <code>Class</code> object created from the data,
        and optional CodeSource.
@exception  ClassFormatError if the data did not contain a valid class
@exception  IndexOutOfBoundsException if either <code>off</code> or 
            <code>len</code> is negative, or if 
            <code>off+len</code> is greater than <code>b.length</code>.

@exception  SecurityException if an attempt is made to add this class
            to a package that contains classes that were signed by
            a different set of certificates than this class, or if 
            the class name begins with \"java.\"."
      end

      operation 7280923 "defineClass"
	protected return_type class_ref 164635 // Class
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "b" type class_ref 182427 // ByteBuffer
	  param inout name "cs" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a {@link java.nio.ByteBuffer <tt>ByteBuffer</tt>}
into an instance of class <tt>Class</tt>, with an optional CodeSource. 
Before the class can be used it must be resolved.
<p>
If a non-null CodeSource is supplied a ProtectionDomain is
constructed and associated with the class being defined.
<p>
@param      name the expected name of the class, or <code>null</code>
                 if not known, using '.' and not '/' as the separator
                 and without a trailing \".class\" suffix.
@param      b    the bytes that make up the class data.  The bytes from positions
                 <tt>b.position()</tt> through <tt>b.position() + b.limit() -1</tt>
                 should have the format of a valid class file as defined by the
                 <a href=\"http://java.sun.com/docs/books/vmspec/\">Java Virtual
                 Machine Specification</a>.
@param      cs   the associated CodeSource, or <code>null</code> if none
@return the <code>Class</code> object created from the data,
        and optional CodeSource.
@exception  ClassFormatError if the data did not contain a valid class
@exception  SecurityException if an attempt is made to add this class
            to a package that contains classes that were signed by
            a different set of certificates than this class, or if 
            the class name begins with \"java.\".

@since  1.5"
      end

      operation 7281051 "getPermissions"
	protected return_type class_ref 285467 // PermissionCollection
	nparams 1
	  param inout name "codesource" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the permissions for the given CodeSource object.
<p>
This method is invoked by the defineClass method which takes
a CodeSource as an argument when it is constructing the
ProtectionDomain for the class being defined.
<p>
@param codesource the codesource.

@return the permissions granted to the codesource.
"
      end

      operation 7281179 "getProtectionDomain"
	private return_type class_ref 526875 // ProtectionDomain
	nparams 1
	  param inout name "cs" type class_ref 527259 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returned cached ProtectionDomain for the specified CodeSource."
      end

      operation 7281307 "check"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to make sure the class loader has been initialized."
      end
    end

    class 959131 "AccessControlException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This exception is thrown by the AccessController to indicate
that a requested access (to a critical system resource such as the
file system or the network) is denied.

<p> The reason to deny access can vary.  For example, the requested
permission might be of an incorrect type,  contain an invalid
value, or request access that is not allowed according to the
security policy.  Such information should be given whenever
possible at the time the exception is thrown.

@version 	1.13, 12/19/03
@author Li Gong
@author Roland Schemers"
      classrelation 1864987 // <generalisation>
	relation 1864987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1864987 // <generalisation>
	  b parent class_ref 203419 // SecurityException
      end

      attribute 2835867 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5138225684096988535L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1865115 // perm (<unidirectional association>)
	relation 1865115 --->
	  a role_name "perm" private
	    comment " the permission that caused the exeception to be thrown.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1865115 // perm (<unidirectional association>)
	  b parent class_ref 285211 // Permission
      end

      operation 7551899 "AccessControlException"
	public explicit_return_type ""
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AccessControlException</code> with the
specified, detailed message. 

@param   s   the detail message."
      end

      operation 7552027 "AccessControlException"
	public explicit_return_type ""
	nparams 2
	  param in name "s" explicit_type "String"
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AccessControlException</code> with the
specified, detailed message, and the requested permission that caused
the exception. 

@param   s   the detail message.
@param   p   the permission that caused the exception."
      end

      operation 7552155 "getPermission"
	public return_type class_ref 285211 // Permission
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Permission object associated with this exeception, or
null if there was no corresponding Permission object.

@return the Permission object."
      end
    end

    class 959259 "AccessController"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> The AccessController class is used for access control operations
and decisions.

<p> More specifically, the AccessController class is used for 
three purposes:

<ul>
<li> to decide whether an access to a critical system
resource is to be allowed or denied, based on the security policy
currently in effect,<p> 
<li>to mark code as being \"privileged\", thus affecting subsequent
access determinations, and<p>
<li>to obtain a \"snapshot\" of the current calling context so
access-control decisions from a different context can be made with
respect to the saved context. </ul>

<p> The {@link #checkPermission(Permission) checkPermission} method
determines whether the access request indicated by a specified
permission should be granted or denied. A sample call appears
below. In this example, <code>checkPermission</code> will determine 
whether or not to grant \"read\" access to the file named \"testFile\" in 
the \"/temp\" directory.

<pre>

   FilePermission perm = new FilePermission(\"/temp/testFile\", \"read\");
   AccessController.checkPermission(perm);

</pre>

<p> If a requested access is allowed, 
<code>checkPermission</code> returns quietly. If denied, an 
AccessControlException is
thrown. AccessControlException can also be thrown if the requested
permission is of an incorrect type or contains an invalid value.
Such information is given whenever possible.

Suppose the current thread traversed m callers, in the order of caller 1 
to caller 2 to caller m. Then caller m invoked the 
<code>checkPermission</code> method.
The <code>checkPermission </code>method determines whether access 
is granted or denied based on the following algorithm:

<pre>
i = m;

while (i > 0) {

     if (caller i's domain does not have the permission)
             throw AccessControlException

     else if (caller i is marked as privileged) {
             if (a context was specified in the call to doPrivileged) 
                context.checkPermission(permission)
             return;
     }
     i = i - 1;
};

   // Next, check the context inherited when
   // the thread was created. Whenever a new thread is created, the
   // AccessControlContext at that time is
   // stored and associated with the new thread, as the \"inherited\"
   // context.

inheritedContext.checkPermission(permission);
</pre>

<p> A caller can be marked as being \"privileged\" 
(see {@link #doPrivileged(PrivilegedAction) doPrivileged} and below). 
When making access control decisions, the <code>checkPermission</code>
method stops checking if it reaches a caller that 
was marked as \"privileged\" via a <code>doPrivileged</code> 
call without a context argument (see below for information about a
context argument). If that caller's domain has the
specified permission, no further checking is done and 
<code>checkPermission</code>
returns quietly, indicating that the requested access is allowed.
If that domain does not have the specified permission, an exception
is thrown, as usual.

<p> The normal use of the \"privileged\" feature is as follows. If you
don't need to return a value from within the \"privileged\" block, do 
the following:

<pre>
  somemethod() {
       ...normal code here...
       AccessController.doPrivileged(new PrivilegedAction() {
           public Object run() {
               // privileged code goes here, for example:
               System.loadLibrary(\"awt\");
               return null; // nothing to return
           }
       });
      ...normal code here...
 }
</pre>

<p>
PrivilegedAction is an interface with a single method, named
<code>run</code>, that returns an Object.
The above example shows creation of an implementation
of that interface; a concrete implementation of the
<code>run</code> method is supplied.
When the call to <code>doPrivileged</code> is made, an 
instance of the PrivilegedAction implementation is passed
to it. The <code>doPrivileged</code> method calls the
<code>run</code> method from the PrivilegedAction 
implementation after enabling privileges, and returns the 
<code>run</code> method's return value as the 
<code>doPrivileged</code> return value (which is
ignored in this example).

<p> If you need to return a value, you can do something like the following:

<pre>
  somemethod() {
       ...normal code here...
       String user = (String) AccessController.doPrivileged(
         new PrivilegedAction() {
           public Object run() {
               return System.getProperty(\"user.name\");
           }
         }
       );
       ...normal code here...
 }
</pre>

<p>If the action performed in your <code>run</code> method could
throw a \"checked\" exception (those listed in the <code>throws</code> clause
of a method), then you need to use the 
<code>PrivilegedExceptionAction</code> interface instead of the
<code>PrivilegedAction</code> interface:

<pre>
  somemethod() throws FileNotFoundException {
       ...normal code here...
     try {
       FileInputStream fis = (FileInputStream) AccessController.doPrivileged(
         new PrivilegedExceptionAction() {
           public Object run() throws FileNotFoundException {
               return new FileInputStream(\"someFile\");
           }
         }
       );
     } catch (PrivilegedActionException e) {
       // e.getException() should be an instance of FileNotFoundException,
       // as only \"checked\" exceptions will be \"wrapped\" in a
       // <code>PrivilegedActionException</code>.
       throw (FileNotFoundException) e.getException();
     }
       ...normal code here...
 }
</pre>

<p> Be *very* careful in your use of the \"privileged\" construct, and 
always remember to make the privileged code section as small as possible.

<p> Note that <code>checkPermission</code> always performs security checks
within the context of the currently executing thread.
Sometimes a security check that should be made within a given context
will actually need to be done from within a
<i>different</i> context (for example, from within a worker thread).
The {@link #getContext() getContext} method and 
AccessControlContext class are provided 
for this situation. The <code>getContext</code> method takes a \"snapshot\"
of the current calling context, and places
it in an AccessControlContext object, which it returns. A sample call is
the following:

<pre>

  AccessControlContext acc = AccessController.getContext()

</pre>

<p>
AccessControlContext itself has a <code>checkPermission</code> method
that makes access decisions based on the context <i>it</i> encapsulates,
rather than that of the current execution thread.
Code within a different context can thus call that method on the
previously-saved AccessControlContext object. A sample call is the
following:

<pre>

  acc.checkPermission(permission)

</pre> 

<p> There are also times where you don't know a priori which permissions
to check the context against. In these cases you can use the
doPrivileged method that takes a context:

<pre>
  somemethod() {
        AccessController.doPrivileged(new PrivilegedAction() {
             public Object run() {
                // Code goes here. Any permission checks within this
                // run method will require that the intersection of the
                // callers protection domain and the snapshot's
                // context have the desired permission.
             }
        }, acc);
        ...normal code here...
  }
</pre>

@see AccessControlContext

@version 1.55 04/05/05
@author Li Gong 
@author Roland Schemers"
      operation 7552283 "AccessController"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Don't allow anyone to instantiate an AccessController"
      end

      operation 7552411 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 222363 // PrivilegedAction
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified <code>PrivilegedAction</code> with privileges
enabled. The action is performed with <i>all</i> of the permissions 
possessed by the caller's protection domain.
<p>
If the action's <code>run</code> method throws an (unchecked) exception,
it will propagate through this method.

@param action the action to be performed.

@return the value returned by the action's <code>run</code> method.

@exception NullPointerException if the action is <code>null</code>

@see #doPrivileged(PrivilegedAction,AccessControlContext)
@see #doPrivileged(PrivilegedExceptionAction)"
      end

      operation 7552539 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "action" type class_ref 222363 // PrivilegedAction
	  param inout name "context" type class_ref 163739 // AccessControlContext
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified <code>PrivilegedAction</code> with privileges
enabled and restricted by the specified
<code>AccessControlContext</code>.
The action is performed with the intersection of the permissions
possessed by the caller's protection domain, and those possessed
by the domains represented by the specified
<code>AccessControlContext</code>.
<p>
If the action's <code>run</code> method throws an (unchecked) exception,
it will propagate through this method.

@param action the action to be performed.
@param context an <i>access control context</i>
               representing the restriction to be applied to the
               caller's domain's privileges before performing
               the specified action.  If the context is
               <code>null</code>,
               then no additional restriction is applied.

@return the value returned by the action's <code>run</code> method.

@exception NullPointerException if the action is <code>null</code>

@see #doPrivileged(PrivilegedAction)
@see #doPrivileged(PrivilegedExceptionAction,AccessControlContext)"
      end

      operation 7552667 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "action" type class_ref 529051 // PrivilegedExceptionAction
	nexceptions 1
	  exception class_ref 959387 // PrivilegedActionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified <code>PrivilegedExceptionAction</code> with
privileges enabled.  The action is performed with <i>all</i> of the 
permissions possessed by the caller's protection domain.
<p>
If the action's <code>run</code> method throws an <i>unchecked</i>
exception, it will propagate through this method.

@param action the action to be performed

@return the value returned by the action's <code>run</code> method

@exception PrivilegedActionException if the specified action's
        <code>run</code> method threw a <i>checked</i> exception
@exception NullPointerException if the action is <code>null</code>

@see #doPrivileged(PrivilegedAction)
@see #doPrivileged(PrivilegedExceptionAction,AccessControlContext)"
      end

      operation 7552795 "doPrivileged"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "action" type class_ref 529051 // PrivilegedExceptionAction
	  param inout name "context" type class_ref 163739 // AccessControlContext
	nexceptions 1
	  exception class_ref 959387 // PrivilegedActionException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified <code>PrivilegedExceptionAction</code> with 
privileges enabled and restricted by the specified
<code>AccessControlContext</code>.  The action is performed with the
intersection of the the permissions possessed by the caller's
protection domain, and those possessed by the domains represented by the
specified <code>AccessControlContext</code>.
<p>
If the action's <code>run</code> method throws an <i>unchecked</i>
exception, it will propagate through this method.

@param action the action to be performed
@param context an <i>access control context</i>
               representing the restriction to be applied to the
               caller's domain's privileges before performing
               the specified action.  If the context is
               <code>null</code>,
               then no additional restriction is applied.

@return the value returned by the action's <code>run</code> method

@exception PrivilegedActionException if the specified action's
        <code>run</code> method
	       threw a <i>checked</i> exception
@exception NullPointerException if the action is <code>null</code>

@see #doPrivileged(PrivilegedAction)
@see #doPrivileged(PrivilegedExceptionAction,AccessControlContext)"
      end

      operation 7552923 "getStackAccessControlContext"
	class_operation private return_type class_ref 163739 // AccessControlContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the AccessControl context. i.e., it gets 
the protection domains of all the callers on the stack,
starting at the first class with a non-null 
ProtectionDomain. 

@return the access control context based on the current stack or
        null if there was only privileged system code."
      end

      operation 7553051 "getInheritedAccessControlContext"
	class_operation package return_type class_ref 163739 // AccessControlContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"inherited\" AccessControl context. This is the context
that existed when the thread was created. Package private so 
AccessControlContext can use it."
      end

      operation 7553179 "getContext"
	class_operation public return_type class_ref 163739 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method takes a \"snapshot\" of the current calling context, which
includes the current Thread's inherited AccessControlContext,
and places it in an AccessControlContext object. This context may then
be checked at a later point, possibly in another thread.

@see AccessControlContext

@return the AccessControlContext based on the current context."
      end

      operation 7553307 "checkPermission"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "perm" type class_ref 285211 // Permission
	nexceptions 1
	  exception class_ref 959131 // AccessControlException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the access request indicated by the
specified permission should be allowed or denied, based on
the security policy currently in effect. 
This method quietly returns if the access request
is permitted, or throws a suitable AccessControlException otherwise. 

@param perm the requested permission.

@exception AccessControlException if the specified permission
           is not permitted, based on the current security policy.
@exception NullPointerException if the specified permission
           is <code>null</code> and is checked based on the
           security policy currently in effect."
      end
    end

    class 959387 "PrivilegedActionException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown by
<code>doPrivileged(PrivilegedExceptionAction)</code> and
<code>doPrivileged(PrivilegedExceptionAction,
AccessControlContext context)</code> to indicate
that the action being performed threw a checked exception.  The exception
thrown by the action can be obtained by calling the
<code>getException</code> method.  In effect, an
<code>PrivilegedActionException</code> is a \"wrapper\"
for an exception thrown by a privileged action.

<p>As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The \"exception thrown
by the privileged computation\" that is provided at construction time and
accessed via the {@link #getException()} method is now known as the
<i>cause</i>, and may be accessed via the {@link Throwable#getCause()}
method, as well as the aforementioned \"legacy method.\"

@see PrivilegedExceptionAction
@see AccessController#doPrivileged(PrivilegedExceptionAction)
@see AccessController#doPrivileged(PrivilegedExceptionAction,AccessControlContext)"
      classrelation 1878555 // <generalisation>
	relation 1878555 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1878555 // <generalisation>
	  b parent class_ref 165403 // Exception
      end

      attribute 2847003 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  4724086851538908602L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " use serialVersionUID from JDK 1.2.2 for interoperability"
      end

      classrelation 1878683 // exception (<unidirectional association>)
	relation 1878683 --->
	  a role_name "exception" private
	    comment "
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878683 // exception (<unidirectional association>)
	  b parent class_ref 165403 // Exception
      end

      operation 7604635 "PrivilegedActionException"
	public explicit_return_type ""
	nparams 1
	  param inout name "exception" type class_ref 165403 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new PrivilegedActionException &quot;wrapping&quot;
the specific Exception.

@param exception The exception thrown"
      end

      operation 7604763 "getException"
	public return_type class_ref 165403 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception thrown by the privileged computation that
resulted in this <code>PrivilegedActionException</code>.

<p>This method predates the general-purpose exception chaining facility.
The {@link Throwable#getCause()} method is now the preferred means of
obtaining this information.

@return the exception thrown by the privileged computation that
        resulted in this <code>PrivilegedActionException</code>.
@see PrivilegedExceptionAction
@see AccessController#doPrivileged(PrivilegedExceptionAction)
@see AccessController#doPrivileged(PrivilegedExceptionAction,
                                           AccessControlContext)"
      end

      operation 7604891 "getCause"
	public return_type class_ref 164251 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the cause of this exception (the exception thrown by
the privileged computation that resulted in this
<code>PrivilegedActionException</code>).

@return  the cause of this exception.
@since   1.4"
      end

      operation 7605019 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 959515 "AlgorithmParameterGenerator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>AlgorithmParameterGenerator</code> class is used to generate a
set of
parameters to be used with a certain algorithm. Parameter generators
are constructed using the <code>getInstance</code> factory methods
(static methods that return instances of a given class).

<P>The object that will generate the parameters can be initialized
in two different ways: in an algorithm-independent manner, or in an
algorithm-specific manner:

<ul>
<li>The algorithm-independent approach uses the fact that all parameter
generators share the concept of a \"size\" and a
source of randomness. The measure of size is universally shared 
by all algorithm parameters, though it is interpreted differently
for different algorithms. For example, in the case of parameters for
the <i>DSA</i> algorithm, \"size\" corresponds to the size
of the prime modulus (in bits).
When using this approach, algorithm-specific parameter generation
values - if any - default to some standard values, unless they can be
derived from the specified size.<P>

<li>The other approach initializes a parameter generator object
using algorithm-specific semantics, which are represented by a set of
algorithm-specific parameter generation values. To generate
Diffie-Hellman system parameters, for example, the parameter generation
values usually
consist of the size of the prime modulus and the size of the
random exponent, both specified in number of bits.
</ul>

<P>In case the client does not explicitly initialize the
AlgorithmParameterGenerator
(via a call to an <code>init</code> method), each provider must supply (and
document) a default initialization. For example, the Sun provider uses a
default modulus prime size of 1024 bits for the generation of DSA
parameters.

@author Jan Luehe

@version 1.40, 12/19/03

@see AlgorithmParameters
@see java.security.spec.AlgorithmParameterSpec

@since 1.2"
      classrelation 1865243 // provider (<unidirectional association>)
	relation 1865243 --->
	  a role_name "provider" private
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1865243 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      classrelation 1865371 // paramGenSpi (<unidirectional association>)
	relation 1865371 --->
	  a role_name "paramGenSpi" private
	    comment " The provider implementation (delegate)
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1865371 // paramGenSpi (<unidirectional association>)
	  b parent class_ref 959771 // AlgorithmParameterGeneratorSpi
      end

      attribute 2835995 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The algorithm"
      end

      operation 7553435 "AlgorithmParameterGenerator"
	protected explicit_return_type ""
	nparams 3
	  param inout name "paramGenSpi" type class_ref 959771 // AlgorithmParameterGeneratorSpi
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AlgorithmParameterGenerator object.

@param paramGenSpi the delegate
@param provider the provider
@param algorithm the algorithm"
      end

      operation 7553563 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the standard name of the algorithm this parameter
generator is associated with.

@return the string name of the algorithm. "
      end

      operation 7553691 "getInstance"
	class_operation public return_type class_ref 959515 // AlgorithmParameterGenerator
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates an AlgorithmParameterGenerator object that implements the 
specified digest algorithm. If the default provider package
provides an implementation of the requested digest algorithm,
an instance of AlgorithmParameterGenerator containing that
implementation 
is returned. If the algorithm is not available in the default 
package, other packages are searched.

@param algorithm the string name of the algorithm this
parameter generator is associated with.

@return the new AlgorithmParameterGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the environment.  "
      end

      operation 7553819 "getInstance"
	class_operation public return_type class_ref 959515 // AlgorithmParameterGenerator
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates an AlgorithmParameterGenerator object for the requested
algorithm, as supplied from the specified provider, 
if such a parameter generator is available from the provider.

@param algorithm the string name of the algorithm.

@param provider the string name of the provider.

@return the new AlgorithmParameterGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available from the provider.

@exception NoSuchProviderException if the provider is not
available in the environment.

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider"
      end

      operation 7553947 "getInstance"
	class_operation public return_type class_ref 959515 // AlgorithmParameterGenerator
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates an AlgorithmParameterGenerator object for the requested
algorithm, as supplied from the specified provider, 
if such a parameter generator is available from the provider.
Note: the <code>provider</code> doesn't have to be registered. 

@param algorithm the string name of the algorithm.

@param provider the provider.

@return the new AlgorithmParameterGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available from the provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7554075 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this algorithm parameter generator object.

@return the provider of this algorithm parameter generator object"
      end

      operation 7554203 "init"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator for a certain size.
To create the parameters, the <code>SecureRandom</code>
implementation of the highest-priority installed provider is used as
the source of randomness.
(If none of the installed providers supply an implementation of
<code>SecureRandom</code>, a system-provided source of randomness is
used.)

@param size the size (number of bits)."
      end

      operation 7554331 "init"
	public explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "int"
	  param inout name "random" type class_ref 960155 // SecureRandom
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator for a certain size and source
of randomness.

@param size the size (number of bits).
@param random the source of randomness."
      end

      operation 7554459 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "genParamSpec" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator with a set of algorithm-specific
parameter generation values.
To generate the parameters, the <code>SecureRandom</code>
implementation of the highest-priority installed provider is used as
the source of randomness.
(If none of the installed providers supply an implementation of
<code>SecureRandom</code>, a system-provided source of randomness is
used.)

@param genParamSpec the set of algorithm-specific parameter generation values.

@exception InvalidAlgorithmParameterException if the given parameter
generation values are inappropriate for this parameter generator."
      end

      operation 7554587 "init"
	public explicit_return_type "void"
	nparams 2
	  param inout name "genParamSpec" type class_ref 960283 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator with a set of algorithm-specific
parameter generation values.

@param genParamSpec the set of algorithm-specific parameter generation values.
@param random the source of randomness.

@exception InvalidAlgorithmParameterException if the given parameter
generation values are inappropriate for this parameter generator."
      end

      operation 7554715 "generateParameters"
	public return_type class_ref 960539 // AlgorithmParameters
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the parameters.

@return the new AlgorithmParameters object."
      end
    end

    class 959643 "Provider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a \"provider\" for the
Java Security API, where a provider implements some or all parts of
Java Security. Services that a provider may implement include:

<ul>

<li>Algorithms (such as DSA, RSA, MD5 or SHA-1).

<li>Key generation, conversion, and management facilities (such as for
algorithm-specific keys).

</ul>

<p>Each provider has a name and a version number, and is configured
in each runtime it is installed in.

<p>See <a href =
\"../../../guide/security/CryptoSpec.html#Provider\">The Provider Class</a>
in the \"Java Cryptography Architecture API Specification &amp; Reference\"
for information about how a particular type of provider, the
cryptographic service provider, works and is installed. However,
please note that a provider can be used to implement any security
service in Java that uses a pluggable architecture with a choice
of implementations that fit underneath. 

<p>Some provider implementations may encounter unrecoverable internal
errors during their operation, for example a failure to communicate with a 
security token. A {@link ProviderException} should be used to indicate 
such errors.

<p>The service type <code>Provider</code> is reserved for use by the
security framework. Services of this type cannot be added, removed,
or modified by applications.
The following attributes are automatically placed in each Provider object:
<table cellspacing=4>
<tr><th>Name</th><th>Value</th>
<tr><td><code>Provider.id name</code></td>
   <td><code>String.valueOf(provider.getName())</code></td>
<tr><td><code>Provider.id version</code></td>
    <td><code>String.valueOf(provider.getVersion())</code></td>
<tr><td><code>Provider.id info</code></td>
<td><code>String.valueOf(provider.getInfo())</code></td>
<tr><td><code>Provider.id className</code></td>
    <td><code>provider.getClass().getName()</code></td>
</table>

@version 1.64, 04/08/05
@author Benjamin Renaud
@author Andreas Sterbenz"
      classrelation 1866139 // <generalisation>
	relation 1866139 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1866139 // <generalisation>
	  b parent class_ref 154907 // Properties
      end

      attribute 2836763 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  -4298000515446427739L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1"
      end

      attribute 2836891 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "= 
        sun.security.util.Debug.getInstance
        (\"provider\", \"Provider\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2837019 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The provider name.

@serial
"
      end

      attribute 2837147 "info"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A description of the provider and its services.

@serial
"
      end

      attribute 2837275 "version"
	private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The provider version number.

@serial
"
      end

      classrelation 1866267 // entrySet (<unidirectional association>)
	relation 1866267 --->
	  a role_name "entrySet" init_value "=  null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1866267 // entrySet (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      attribute 2837403 "entrySetCallCount"
	private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7559195 "Provider"
	protected explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "version" explicit_type "double"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a provider with the specified name, version number,
and information.

@param name the provider name.

@param version the provider version number.

@param info a description of the provider and its services."
      end

      operation 7559323 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this provider.

@return the name of this provider."
      end

      operation 7559451 "getVersion"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version number for this provider.

@return the version number for this provider."
      end

      operation 7559579 "getInfo"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-readable description of the provider and its
services.  This may return an HTML page, with relevant links.

@return a description of the provider and its services."
      end

      operation 7559707 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string with the name and the version number
of this provider.

@return the string with the name and the version number
for this provider."
      end

      operation 7559835 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "override the following methods to ensure that provider
information can only be changed if the caller has the appropriate
permissions.


Clears this provider so that it no longer contains the properties
used to look up facilities implemented by the provider.

<p>First, if there is a security manager, its 
<code>checkSecurityAccess</code> method is called with the string 
<code>\"clearProviderProperties.\"+name</code> (where <code>name</code> 
is the provider name) to see if it's ok to clear this provider.
If the default implementation of <code>checkSecurityAccess</code> 
is used (that is, that method is not overriden), then this results in
a call to the security manager's <code>checkPermission</code> method 
with a <code>SecurityPermission(\"clearProviderProperties.\"+name)</code>
permission.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method 
         denies access to clear this provider

@since 1.2"
      end

      operation 7559963 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" type class_ref 179099 // InputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a property list (key and element pairs) from the input stream.

@param inStream   the input stream.
@exception  IOException  if an error occurred when reading from the
              input stream.
@see java.util.Properties#load"
      end

      operation 7560091 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 136603 // Map
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified Map to this provider.
These mappings will replace any properties that this provider had 
for any of the keys currently in the specified Map. 

@since 1.2"
      end

      operation 7560219 "entrySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<Object,Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Set view of the property entries contained 
in this Provider.

@see   java.util.Map.Entry
@since 1.2"
      end

      operation 7560347 "keySet"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Set view of the property keys contained in 
this provider.

@since 1.2"
      end

      operation 7560475 "values"
	public return_type class_ref 135067 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable Collection view of the property values 
contained in this provider.

@since 1.2"
      end

      operation 7560603 "put"
	public explicit_return_type "Object"
	nparams 2
	  param inout name "key" explicit_type "Object"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>key</code> property to have the specified
<code>value</code>.

<p>First, if there is a security manager, its 
<code>checkSecurityAccess</code> method is called with the string 
<code>\"putProviderProperty.\"+name</code>, where <code>name</code> is the
provider name, to see if it's ok to set this provider's property values. 
If the default implementation of <code>checkSecurityAccess</code>
is used (that is, that method is not overriden), then this results in
a call to the security manager's <code>checkPermission</code> method 
with a <code>SecurityPermission(\"putProviderProperty.\"+name)</code>
permission.

@param key the property key.

@param value the property value.

@return the previous value of the specified property
(<code>key</code>), or null if it did not have one.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method 
         denies access to set property values.

@since 1.2"
      end

      operation 7560731 "remove"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <code>key</code> property (and its corresponding
<code>value</code>).

<p>First, if there is a security manager, its 
<code>checkSecurityAccess</code> method is called with the string 
<code>\"removeProviderProperty.\"+name</code>, where <code>name</code> is
the provider name, to see if it's ok to remove this provider's 
properties. If the default implementation of 
<code>checkSecurityAccess</code> is used (that is, that method is not 
overriden), then this results in a call to the security manager's 
<code>checkPermission</code> method with a
<code>SecurityPermission(\"removeProviderProperty.\"+name)</code>
permission.

@param key the key for the property to be removed.

@return the value to which the key had been mapped,
or null if the key did not have a mapping.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method 
         denies access to remove this provider's properties.

@since 1.2"
      end

      operation 7560859 "check"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "directive" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2837531 "legacyChanged"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " legacy properties changed since last call to any services method?"
      end

      attribute 2837659 "servicesChanged"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " serviceMap changed since last call to getServices()"
      end

      classrelation 1866395 // legacyStrings (<unidirectional association>)
	relation 1866395 --->
	  a role_name "legacyStrings" private
	    comment " Map<String,String>
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,String> ${name}${value};
"
	    classrelation_ref 1866395 // legacyStrings (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      class 961307 "ServiceKey"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2837787 "type"
	  const_attribute private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2837915 "algorithm"
	  const_attribute private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2838043 "originalAlgorithm"
	  const_attribute private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7561627 "ServiceKey"
	  private explicit_return_type ""
	  nparams 3
	    param in name "type" explicit_type "String"
	    param in name "algorithm" explicit_type "String"
	    param inout name "intern" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7561755 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7561883 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7562011 "matches"
	  package explicit_return_type "boolean"
	  nparams 2
	    param in name "type" explicit_type "String"
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1866523 // serviceMap (<unidirectional association>)
	relation 1866523 --->
	  a role_name "serviceMap" private
	    comment " Map<ServiceKey,Service>
 used for services added via putService(), initialized on demand
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ServiceKey,Service> ${name}${value};
"
	    classrelation_ref 1866523 // serviceMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      classrelation 1866651 // legacyMap (<unidirectional association>)
	relation 1866651 --->
	  a role_name "legacyMap" private
	    comment " Map<ServiceKey,Service>
 used for services added via legacy methods, init on demand
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ServiceKey,Service> ${name}${value};
"
	    classrelation_ref 1866651 // legacyMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      class 961435 "Service"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2839195 "type"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2839323 "algorithm"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2839451 "className"
	  private explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1867163 // provider (<unidirectional association>)
	  relation 1867163 --->
	    a role_name "provider" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1867163 // provider (<unidirectional association>)
	    b parent class_ref 959643 // Provider
	end

	classrelation 1867291 // aliases (<unidirectional association>)
	  relation 1867291 --->
	    a role_name "aliases" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 1867291 // aliases (<unidirectional association>)
	    b parent class_ref 135579 // List
	end

	classrelation 1867419 // attributes (<unidirectional association>)
	  relation 1867419 --->
	    a role_name "attributes" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UString,String> ${name}${value};
"
	      classrelation_ref 1867419 // attributes (<unidirectional association>)
	    b parent class_ref 136603 // Map
	end

	classrelation 1867547 // classRef (<unidirectional association>)
	  relation 1867547 --->
	    a role_name "classRef" volatile private
	      comment " Reference to the cached implementation Class object
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class> ${name}${value};
"
	      classrelation_ref 1867547 // classRef (<unidirectional association>)
	    b parent class_ref 392475 // Reference
	end

	classrelation 1867675 // hasKeyAttributes (<unidirectional association>)
	  relation 1867675 --->
	    a role_name "hasKeyAttributes" volatile private
	      comment " flag indicating whether this service has its attributes for
 supportedKeyFormats or supportedKeyClasses set
 if null, the values have not been initialized
 if TRUE, at least one of supportedFormats/Classes is non null
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1867675 // hasKeyAttributes (<unidirectional association>)
	    b parent class_ref 392091 // Boolean
	end

	attribute 2839579 "supportedFormats"
	  private explicit_type "String"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " supported encoding formats"
	end

	classrelation 1867803 // supportedClasses (<unidirectional association>)
	  relation 1867803 --->
	    a role_name "supportedClasses" multiplicity "[]" private
	      comment " names of the supported key (super) classes
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1867803 // supportedClasses (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	classrelation 1867931 // CLASS0 (<unidirectional association>)
	  relation 1867931 --->
	    a role_name "CLASS0" multiplicity "[]" init_value "=  new Class[0]" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1867931 // CLASS0 (<unidirectional association>)
	    b parent class_ref 164635 // Class
	end

	operation 7564443 "Service"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "provider" type class_ref 959643 // Provider
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " this constructor and these methods are used for parsing
 the legacy string properties."
	end

	operation 7564571 "isValid"
	  private explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7564699 "addAlias"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "alias" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7564827 "addAttribute"
	  package explicit_return_type "void"
	  nparams 2
	    param in name "type" explicit_type "String"
	    param in name "value" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7564955 "Service"
	  public explicit_return_type ""
	  nparams 6
	    param inout name "provider" type class_ref 959643 // Provider
	    param in name "type" explicit_type "String"
	    param in name "algorithm" explicit_type "String"
	    param in name "className" explicit_type "String"
	    param inout name "aliases" type class_ref 135579 // List
	    param inout name "attributes" type class_ref 136603 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String> ${p4}, ${t5}<String,String> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new service.

@param provider the provider that offers this service
@param type the type of this service
@param algorithm the algorithm name
@param className the name of the class implementing this service
@param aliases List of aliases or null if algorithm has no aliases
@param attributes Map of attributes or null if this implementation
		     has no attributes

@throws NullPointerException if provider, type, algorithm, or
className is null"
	end

	operation 7565083 "getType"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the type of this service. For example, <code>MessageDigest</code>.

@return the type of this service"
	end

	operation 7565211 "getAlgorithm"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the name of the algorithm of this service. For example,
<code>SHA-1</code>.

@return the algorithm of this service"
	end

	operation 7565339 "getProvider"
	  public return_type class_ref 959643 // Provider
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the Provider of this service.

@return the Provider of this service"
	end

	operation 7565467 "getClassName"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the name of the class implementing this service.

@return the name of the class implementing this service"
	end

	operation 7565595 "getAliases"
	  private return_type class_ref 135579 // List
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " internal only"
	end

	operation 7565723 "getAttribute"
	  public explicit_return_type "String"
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the value of the specified attribute or null if this
attribute is not set for this Service.

@param name the name of the requested attribute

@return the value of the specified attribute or null if the
        attribute is not present

@throws NullPointerException if name is null"
	end

	operation 7565851 "newInstance"
	  public explicit_return_type "Object"
	  nparams 1
	    param inout name "constructorParameter" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 959899 // NoSuchAlgorithmException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a new instance of the implementation described by this
service. The security provider framework uses this method to
construct implementations. Applications will typically not need 
to call it.

<p>The default implementation uses reflection to invoke the
standard constructor for this type of service.
Security providers can override this method to implement
instantiation in a different way.
For details and the values of constructorParameter that are 
valid for the various types of services see the
<a href=\"../../../guide/security/CryptoSpec.html\">
Java Cryptography Architecture API Specification &amp; 
Reference</a>.

@param constructorParameter the value to pass to the constructor,
or null if this type of service does not use a constructorParameter.

@return a new implementation of this service

@throws InvalidParameterException if the value of 
constructorParameter is invalid for this type of service.
@throws NoSuchAlgorithmException if instantation failed for
any other reason."
	end

	operation 7565979 "getImplClass"
	  private return_type class_ref 164635 // Class
	  nparams 0
	  nexceptions 1
	    exception class_ref 959899 // NoSuchAlgorithmException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " return the implementation Class object for this service"
	end

	operation 7566107 "newInstanceGeneric"
	  private explicit_return_type "Object"
	  nparams 1
	    param inout name "constructorParameter" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 165403 // Exception
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Generic code path for unknown engine types. Call the
no-args constructor if constructorParameter is null, otherwise
use the first matching constructor."
	end

	operation 7566235 "supportsParameter"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "parameter" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Test whether this Service can use the specified parameter.
Returns false if this service cannot use the parameter. Returns
true if this service can use the parameter, if a fast test is
infeasible, or if the status is unknown.

<p>The security provider framework uses this method with
some types of services to quickly exclude non-matching
implementations for consideration. 
Applications will typically not need to call it.

<p>For details and the values of parameter that are valid for the 
various types of services see the top of this class and the
<a href=\"../../../guide/security/CryptoSpec.html\">
Java Cryptography Architecture API Specification &amp; 
Reference</a>.
Security providers can override it to implement their own test.

@param parameter the parameter to test

@return false if this this service cannot use the specified
parameter; true if it can possibly use the parameter

@throws InvalidParameterException if the value of parameter is 
invalid for this type of service or if this method cannot be 
used with this type of service"
	end

	operation 7566363 "hasKeyAttributes"
	  private explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return whether this service has its Supported* properties for
keys defined. Parses the attributes if not yet initialized."
	end

	operation 7566491 "getKeyClass"
	  private return_type class_ref 164635 // Class
	  nparams 1
	    param in name "name" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " get the key class object of the specified name"
	end

	operation 7566619 "supportsKeyFormat"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 961819 // Key
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7566747 "supportsKeyClass"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 961819 // Key
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7566875 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a String representation of this service.

@return a String representation of this service."
	end
      end

      classrelation 1866779 // serviceSet (<unidirectional association>)
	relation 1866779 --->
	  a role_name "serviceSet" private
	    comment " Set<Service>
 set of all services. initialized on demand, cleared on modification
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Service> ${name}${value};
"
	    classrelation_ref 1866779 // serviceSet (<unidirectional association>)
	  b parent class_ref 136731 // Set
      end

      operation 7560987 "putId"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " register the id attributes for this provider
 this is to ensure that equals() and hashCode() do not incorrectly
 report to different provider objects as the same"
      end

      operation 7561115 "implPutAll"
	private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified Map to this provider.
Internal method to be called AFTER the security check has been
performed."
      end

      operation 7561243 "implRemove"
	private explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7561371 "implPut"
	private explicit_return_type "Object"
	nparams 2
	  param inout name "key" explicit_type "Object"
	  param inout name "value" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7561499 "implClear"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7562139 "ensureLegacyParsed"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensure all the legacy String properties are fully parsed into
service objects."
      end

      operation 7562267 "removeInvalidServices"
	private explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<ServiceKey,Service> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all invalid services from the Map. Invalid services can only
occur if the legacy properties are inconsistent or incomplete."
      end

      operation 7562395 "getTypeAndAlgorithm"
	private explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2838171 "ALIAS_PREFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"Alg.Alias.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2838299 "ALIAS_PREFIX_LOWER"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"alg.alias.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2838427 "ALIAS_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  ALIAS_PREFIX.length()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7562523 "parseLegacyPut"
	private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7562651 "getService"
	public return_type class_ref 961435 // Service
	nparams 2
	  param in name "type" explicit_type "String"
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the service describing this Provider's implementation of the
specified type of this algorithm or alias. If no such
implementation exists, this method returns null. If there are two
matching services, one added to this provider using 
{@link #putService putService()} and one added via {@link #put put()},
the service added via {@link #putService putService()} is returned.

@param type the type of {@link Service service} requested
(for example, <code>MessageDigest</code>)
@param algorithm the case insensitive algorithm name (or alternate 
alias) of the service requested (for example, <code>SHA-1</code>)

@return the service describing this Provider's matching service
or null if no such service exists

@throws NullPointerException if type or algorithm is null

@since 1.5"
      end

      classrelation 1866907 // previousKey (<unidirectional association>)
	relation 1866907 --->
	  a role_name "previousKey" init_value "=  
					    new ServiceKey(\"\", \"\", false)" class_relation volatile private
	    comment " ServiceKey from previous getService() call
 by re-using it if possible we avoid allocating a new object
 and the toUpperCase() call.
 re-use will occur e.g. as the framework traverses the provider
 list and queries each provider with the same values until it finds
 a matching service
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1866907 // previousKey (<unidirectional association>)
	  b parent class_ref 961307 // ServiceKey
      end

      operation 7562779 "getServices"
	public return_type class_ref 136731 // Set
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Service> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an unmodifiable Set of all services supported by
this Provider.

@return an unmodifiable Set of all services supported by
this Provider

@since 1.5"
      end

      operation 7562907 "putService"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a service. If a service of the same type with the same algorithm
name exists and it was added using {@link #putService putService()}, 
it is replaced by the new service. 
This method also places information about this service
in the provider's Hashtable values in the format described in the
<a href=\"../../../guide/security/CryptoSpec.html\">
Java Cryptography Architecture API Specification &amp; Reference </a>.

<p>Also, if there is a security manager, its 
<code>checkSecurityAccess</code> method is called with the string 
<code>\"putProviderProperty.\"+name</code>, where <code>name</code> is 
the provider name, to see if it's ok to set this provider's property 
values. If the default implementation of <code>checkSecurityAccess</code>
is used (that is, that method is not overriden), then this results in
a call to the security manager's <code>checkPermission</code> method with
a <code>SecurityPermission(\"putProviderProperty.\"+name)</code>
permission.

@param s the Service to add

@throws SecurityException
     if a security manager exists and its <code>{@link
     java.lang.SecurityManager#checkSecurityAccess}</code> method denies
     access to set property values.
@throws NullPointerException if s is null

@since 1.5"
      end

      operation 7563035 "putPropertyStrings"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put the string properties for this Service in this Provider's
Hashtable."
      end

      operation 7563163 "removePropertyStrings"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the string properties for this Service from this Provider's
Hashtable."
      end

      operation 7563291 "removeService"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a service previously added using 
{@link #putService putService()}. The specified service is removed from
this provider. It will no longer be returned by 
{@link #getService getService()} and its information will be removed 
from this provider's Hashtable.

<p>Also, if there is a security manager, its 
<code>checkSecurityAccess</code> method is called with the string 
<code>\"removeProviderProperty.\"+name</code>, where <code>name</code> is 
the provider name, to see if it's ok to remove this provider's 
properties. If the default implementation of 
<code>checkSecurityAccess</code> is used (that is, that method is not 
overriden), then this results in a call to the security manager's 
<code>checkPermission</code> method with a
<code>SecurityPermission(\"removeProviderProperty.\"+name)</code>
permission.

@param s the Service to be removed

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method denies
         access to remove this provider's properties.
@throws NullPointerException if s is null

@since 1.5"
      end

      operation 7563419 "implRemoveService"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 961563 "UString"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2838555 "string"
	  const_attribute package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2838683 "lowerString"
	  const_attribute package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7563547 "UString"
	  package explicit_return_type ""
	  nparams 1
	    param in name "s" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7563675 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7563803 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7563931 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 961691 "EngineDescription"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2838811 "name"
	  const_attribute package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2838939 "constructor"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2839067 "supportsParameter"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7564059 "EngineDescription"
	  package explicit_return_type ""
	  nparams 3
	    param in name "name" explicit_type "String"
	    param inout name "constructor" explicit_type "boolean"
	    param inout name "sp" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1867035 // knownEngines (<unidirectional association>)
	relation 1867035 --->
	  a role_name "knownEngines" class_relation const_relation private
	    comment " built in knowledge of the engine types shipped as part of the JDK
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,EngineDescription> ${name}${value};
"
	    classrelation_ref 1867035 // knownEngines (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 7564187 "addEngine"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "name" explicit_type "String"
	  param inout name "cons" explicit_type "boolean"
	  param inout name "sp" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 164763 "initialization"
	
	cpp "" ""
	java "  static {
	knownEngines = new HashMap<String,EngineDescription>();
	// JCA
	addEngine(\"AlgorithmParameterGenerator\",	false, false);
	addEngine(\"AlgorithmParameters\",		false, false);
	addEngine(\"KeyFactory\",				false, false);
	addEngine(\"KeyPairGenerator\",			false, false);
	addEngine(\"KeyStore\",				false, false);
	addEngine(\"MessageDigest\",			false, false);
	addEngine(\"SecureRandom\",			false, false);
	addEngine(\"Signature\",				false, true);
	addEngine(\"CertificateFactory\",			false, false);
	addEngine(\"CertPathBuilder\",			false, false);
	addEngine(\"CertPathValidator\",			false, false);
	addEngine(\"CertStore\",				true,  false);
	// JCE
	addEngine(\"Cipher\",				false, true);
	addEngine(\"ExemptionMechanism\",			false, false);
	addEngine(\"Mac\",				false, true);
	addEngine(\"KeyAgreement\",			false, true);
	addEngine(\"KeyGenerator\",			false, false);
	addEngine(\"SecretKeyFactory\",			false, false);
	// JSSE
	addEngine(\"KeyManagerFactory\",			false, false);
	addEngine(\"SSLContext\",				false, false);
	addEngine(\"TrustManagerFactory\",		false, false);
	// JGSS
	addEngine(\"GssApiMechanism\",			false, false);
	// SASL
	addEngine(\"SaslClientFactory\",			false, false);
	addEngine(\"SaslServerFactory\",			false, false);
    }"
	php ""
	python ""
	idl ""
      end

      operation 7564315 "getEngineName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get the \"standard\" (mixed-case) engine name for arbitary case engine name
 if there is no known engine by that name, return s"
      end
    end

    class 959771 "AlgorithmParameterGeneratorSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>AlgorithmParameterGenerator</code> class, which 
is used to generate a set of parameters to be used with a certain algorithm.

<p> All the abstract methods in this class must be implemented by each 
cryptographic service provider who wishes to supply the implementation
of a parameter generator for a particular algorithm.

<p> In case the client does not explicitly initialize the
AlgorithmParameterGenerator (via a call to an <code>engineInit</code>
method), each provider must supply (and document) a default initialization.
For example, the Sun provider uses a default modulus prime size of 1024
bits for the generation of DSA parameters.

@author Jan Luehe

@version 1.14, 12/19/03

@see AlgorithmParameterGenerator
@see AlgorithmParameters
@see java.security.spec.AlgorithmParameterSpec

@since 1.2"
      operation 7554843 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "int"
	  param inout name "random" type class_ref 960155 // SecureRandom
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator for a certain size
and source of randomness.

@param size the size (number of bits).
@param random the source of randomness."
      end

      operation 7554971 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "genParamSpec" type class_ref 960283 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter generator with a set of
algorithm-specific parameter generation values.

@param genParamSpec the set of algorithm-specific parameter generation values.
@param random the source of randomness.

@exception InvalidAlgorithmParameterException if the given parameter
generation values are inappropriate for this parameter generator."
      end

      operation 7555099 "engineGenerateParameters"
	abstract protected return_type class_ref 960539 // AlgorithmParameters
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the parameters.

@return the new AlgorithmParameters object."
      end
    end

    class 959899 "NoSuchAlgorithmException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown when a particular cryptographic algorithm is
requested but is not available in the environment.

@version 1.25, 03/12/19
@author Benjamin Renaud "
      classrelation 1876379 // <generalisation>
	relation 1876379 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1876379 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2846107 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7443947487218346562L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7600283 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a NoSuchAlgorithmException with no detail
message. A detail message is a String that describes this
particular exception."
      end

      operation 7600411 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a NoSuchAlgorithmException with the specified
detail message. A detail message is a String that describes
this particular exception, which may, for example, specify which
algorithm is not available.  

@param msg the detail message.  "
      end

      operation 7600539 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>NoSuchAlgorithmException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7600667 "NoSuchAlgorithmException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>NoSuchAlgorithmException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 960027 "NoSuchProviderException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown when a particular security provider is
requested but is not available in the environment.

@version 1.20 03/12/19
@author Benjamin Renaud "
      classrelation 1876507 // <generalisation>
	relation 1876507 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1876507 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2846235 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  8488111756688534474L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7600795 "NoSuchProviderException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a NoSuchProviderException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7600923 "NoSuchProviderException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a NoSuchProviderException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end
    end

    class 960155 "SecureRandom"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This class provides a cryptographically strong random number
generator (RNG).  Many implementations are in the form of a pseudo-random
number generator (PRNG), which means they use a deterministic algorithm
to produce a pseudo-random sequence from a true random seed.
Other implementations may produce true random numbers
and yet others may use a combination of both techniques.

<p>A cryptographically strong random number
minimally complies with the statistical random number generator tests
specified in <a href=\"http://csrc.nist.gov/cryptval/140-2.htm\">
<i>FIPS 140-2, Security Requirements for Cryptographic Modules</i></a>,
section 4.9.1.
Additionally, SecureRandom must produce non-deterministic 
output and therefore it is required that the seed material be unpredictable
and that output of SecureRandom be cryptographically strong sequences as
described in <a href=\"http://www.ietf.org/rfc/rfc1750.txt\">
<i>RFC 1750: Randomness Recommendations for Security</i></a>.

<p>Like other algorithm-based classes in Java Security, SecureRandom 
provides implementation-independent algorithms, whereby a caller 
(application code) requests a particular RNG algorithm
and is handed back a SecureRandom object for that algorithm. It is
also possible, if desired, to request a particular algorithm from a
particular provider. See the <code>getInstance</code> methods.

<p>Thus, there are two ways to request a SecureRandom object: by
specifying either just an algorithm name, or both an algorithm name
and a package provider.

<ul>

<li>If just an algorithm name is specified, as in:
<pre>
     SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\");
</pre>
the system will determine if there is an implementation of the algorithm
requested available in the environment, and if there is more than one, if
there is a preferred one.<p>

<li>If both an algorithm name and a package provider are specified, as in:
<pre>
     SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\", \"SUN\");
</pre>
the system will determine if there is an implementation of the
algorithm in the package requested, and throw an exception if there
is not.

</ul>

<p>The SecureRandom implementation attempts to completely
randomize the internal state of the generator itself unless
the caller follows the call to a <code>getInstance</code> method
with a call to the <code>setSeed</code> method:
<pre>
     SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\");
     random.setSeed(seed);
</pre>

<p>After the caller obtains the SecureRandom object from the
<code>getInstance</code> call, it can call <code>nextBytes</code>
to generate random bytes:
<pre>
     byte bytes[] = new byte[20];
     random.nextBytes(bytes);
</pre>

<p>The caller may also invoke the <code>generateSeed</code> method
to generate a given number of seed bytes (to seed other random number
generators, for example):
<pre>
     byte seed[] = random.generateSeed(20);
</pre>

@see java.security.SecureRandomSpi
@see java.util.Random

@version 1.47, 12/19/03
@author Benjamin Renaud
@author Josh Bloch "
      classrelation 1879579 // <generalisation>
	relation 1879579 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1879579 // <generalisation>
	  b parent class_ref 139547 // Random
      end

      classrelation 1879707 // provider (<unidirectional association>)
	relation 1879707 --->
	  a role_name "provider" init_value "=  null" private
	    comment "
The provider.

@serial
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1879707 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      classrelation 1879835 // secureRandomSpi (<unidirectional association>)
	relation 1879835 --->
	  a role_name "secureRandomSpi" init_value "=  null" private
	    comment "
The provider implementation.

@serial
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1879835 // secureRandomSpi (<unidirectional association>)
	  b parent class_ref 968091 // SecureRandomSpi
      end

      attribute 2847643 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The algorithm name of null if unknown.

@serial
@since 1.5
"
      end

      classrelation 1879963 // seedGenerator (<unidirectional association>)
	relation 1879963 --->
	  a role_name "seedGenerator" init_value "=  null" class_relation private
	    comment " Seed Generator
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1879963 // seedGenerator (<unidirectional association>)
	  b parent class_ref 960155 // SecureRandom
      end

      operation 7606939 "SecureRandom"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>By using this constructor, the caller obtains a SecureRandom object
containing the implementation from the highest-priority installed
provider that has a SecureRandom implementation.

<p>Note that this instance of SecureRandom has not been seeded.
A call to the <code>setSeed</code> method will seed the SecureRandom
object.  If a call is not made to <code>setSeed</code>, the first call
to the <code>nextBytes</code> method will force the SecureRandom object
to seed itself.

<p>This constructor is provided for backwards compatibility. 
The caller is encouraged to use one of the alternative
<code>getInstance</code> methods to obtain a SecureRandom object."
      end

      operation 7607067 "SecureRandom"
	public explicit_return_type ""
	nparams 1
	  param in name "seed" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>By using this constructor, the caller obtains a SecureRandom object
containing the implementation from the highest-priority installed
provider that has a SecureRandom implementation. This constructor 
uses a user-provided seed in
preference to the self-seeding algorithm referred to in the empty
constructor description. It may be preferable to the empty constructor
if the caller has access to high-quality random bytes from some physical
device (for example, a radiation detector or a noisy diode).

<p>This constructor is provided for backwards compatibility. 
The caller is encouraged to use one of the alternative
<code>getInstance</code> methods to obtain a SecureRandom object, and
then to call the <code>setSeed</code> method to seed it.

@param seed the seed."
      end

      operation 7607195 "getDefaultPRNG"
	private explicit_return_type "void"
	nparams 2
	  param inout name "setSeed" explicit_type "boolean"
	  param in name "seed" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607323 "SecureRandom"
	protected explicit_return_type ""
	nparams 2
	  param inout name "secureRandomSpi" type class_ref 968091 // SecureRandomSpi
	  param inout name "provider" type class_ref 959643 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a SecureRandom object.

@param secureRandomSpi the SecureRandom implementation.
@param provider the provider."
      end

      operation 7607451 "SecureRandom"
	private explicit_return_type ""
	nparams 3
	  param inout name "secureRandomSpi" type class_ref 968091 // SecureRandomSpi
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7607579 "getInstance"
	class_operation public return_type class_ref 960155 // SecureRandom
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a SecureRandom object that implements the specified
Random Number Generator (RNG) algorithm. If the default
provider package provides an implementation of the requested algorithm,
an instance of SecureRandom containing that implementation is returned.
If the algorithm is not available in the default 
package, other packages are searched.

<p>Note that the returned instance of SecureRandom has not been seeded.
A call to the <code>setSeed</code> method will seed the SecureRandom
object.  If a call is not made to <code>setSeed</code>, the first call
to the <code>nextBytes</code> method will force the SecureRandom object
to seed itself.

@param algorithm the name of the RNG algorithm.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard RNG algorithm names.

@return the new SecureRandom object.

@exception NoSuchAlgorithmException if the RNG algorithm is
not available in the caller's environment.

@since 1.2"
      end

      operation 7607707 "getInstance"
	class_operation public return_type class_ref 960155 // SecureRandom
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a SecureRandom object for the specified RNG
algorithm, as supplied from the specified provider, if such a
RNG implementation is available from the provider.

<p>Note that the returned instance of SecureRandom has not been seeded.
A call to the <code>setSeed</code> method will seed the SecureRandom
object.  If a call is not made to <code>setSeed</code>, the first call
to the <code>nextBytes</code> method will force the SecureRandom object
to seed itself.

@param algorithm the name of the RNG algorithm.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard RNG algorithm names.

@param provider the name of the provider.

@return the new SecureRandom object.

@exception NoSuchAlgorithmException if the requested RNG
implementation is not available from the provider.

@exception NoSuchProviderException if the provider has not been
configured.

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider

@since 1.2"
      end

      operation 7607835 "getInstance"
	class_operation public return_type class_ref 960155 // SecureRandom
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a SecureRandom object for the specified RNG
algorithm, as supplied from the specified provider, if such a
RNG implementation is available from the provider.
Note: the <code>provider</code> doesn't have to be registered. 

<p>Note that the returned instance of SecureRandom has not been seeded.
A call to the <code>setSeed</code> method will seed the SecureRandom
object.  If a call is not made to <code>setSeed</code>, the first call
to the <code>nextBytes</code> method will force the SecureRandom object
to seed itself.

@param algorithm the name of the RNG algorithm.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard RNG algorithm names.

@param provider the provider.

@return the new SecureRandom object.

@exception NoSuchAlgorithmException if the requested RNG
implementation is not available from the provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7607963 "getSecureRandomSpi"
	package return_type class_ref 968091 // SecureRandomSpi
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SecureRandomSpi of this SecureRandom object."
      end

      operation 7608091 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this SecureRandom object.

@return the provider of this SecureRandom object."
      end

      operation 7608219 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm implemented by this SecureRandom object.

@return the name of the algorithm or <code>unknown</code> if the algorithm
   name cannot be determined.
@since 1.5"
      end

      operation 7608347 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "byte"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reseeds this random object. The given seed supplements, rather than
replaces, the existing seed. Thus, repeated calls are guaranteed
never to reduce randomness.

@param seed the seed.

@see #getSeed"
      end

      operation 7608475 "setSeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reseeds this random object, using the eight bytes contained 
in the given <code>long seed</code>. The given seed supplements, 
rather than replaces, the existing seed. Thus, repeated calls 
are guaranteed never to reduce randomness. 

<p>This method is defined for compatibility with 
<code>java.util.Random</code>.

@param seed the seed.

@see #getSeed"
      end

      operation 7608603 "nextBytes"
	public explicit_return_type "void"
	nparams 1
	  param in name "bytes" explicit_type "byte"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a user-specified number of random bytes.  This method is
used as the basis of all random entities returned by this class
(except seed bytes).

@param bytes the array to be filled in with random bytes."
      end

      operation 7608731 "next"
	protected explicit_return_type "int"
	nparams 1
	  param in name "numBits" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates an integer containing the user-specified number of
pseudo-random bits (right justified, with leading zeros).  This
method overrides a <code>java.util.Random</code> method, and serves
to provide a source of random bits to all of the methods inherited
from that class (for example, <code>nextInt</code>,
<code>nextLong</code>, and <code>nextFloat</code>).

@param numBits number of pseudo-random bits to be generated, where
0 <= <code>numBits</code> <= 32.

@return an <code>int</code> containing the user-specified number
of pseudo-random bits (right justified, with leading zeros)."
      end

      operation 7608859 "getSeed"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given number of seed bytes, computed using the seed
generation algorithm that this class uses to seed itself.  This
call may be used to seed other random number generators.

<p>This method is only included for backwards compatibility. 
The caller is encouraged to use one of the alternative
<code>getInstance</code> methods to obtain a SecureRandom object, and
then call the <code>generateSeed</code> method to obtain seed bytes
from that object.

@param numBytes the number of seed bytes to generate.

@return the seed bytes.

@see #setSeed"
      end

      operation 7608987 "generateSeed"
	public explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given number of seed bytes, computed using the seed
generation algorithm that this class uses to seed itself.  This
call may be used to seed other random number generators.

@param numBytes the number of seed bytes to generate.

@return the seed bytes."
      end

      operation 7609115 "longToByteArray"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper function to convert a long into a byte array (least significant
byte first)."
      end

      operation 7609243 "getPrngAlgorithm"
	class_operation private explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a default PRNG algorithm by looking through all registered
providers. Returns the first PRNG algorithm of the first provider that
has registered a SecureRandom implementation, or null if none of the
registered providers supplies a SecureRandom implementation."
      end

      attribute 2847771 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value "=  4940670005562187L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1"
      end

      attribute 2847899 "state"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Retain unused values serialized from JDK1.1

@serial
"
      end

      classrelation 1880091 // digest (<unidirectional association>)
	relation 1880091 --->
	  a role_name "digest" init_value "=  null" private
	    comment "
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1880091 // digest (<unidirectional association>)
	  b parent class_ref 962715 // MessageDigest
      end

      attribute 2848027 "randomBytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial

We know that the MessageDigest class does not implement
java.io.Serializable.  However, since this field is no longer
used, it will always be NULL and won't affect the serialization
of the SecureRandom class itself.
"
      end

      attribute 2848155 "randomBytesUsed"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      attribute 2848283 "counter"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end
    end

    class 960411 "InvalidAlgorithmParameterException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the exception for invalid or inappropriate algorithm parameters.

@author Jan Luehe

@version 1.14, 12/19/03

@see AlgorithmParameters
@see java.security.spec.AlgorithmParameterSpec

@since 1.2"
      classrelation 1870363 // <generalisation>
	relation 1870363 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870363 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2841115 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  2864672297499471472L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7576603 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidAlgorithmParameterException with no detail
message.
A detail message is a String that describes this particular
exception."
      end

      operation 7576731 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidAlgorithmParameterException with the specified
detail message.
A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end

      operation 7576859 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidAlgorithmParameterException</code> with the
specified detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7576987 "InvalidAlgorithmParameterException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidAlgorithmParameterException</code> with the
specified cause and a detail message of
<tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 960539 "AlgorithmParameters"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used as an opaque representation of cryptographic parameters.

<p>An <code>AlgorithmParameters</code> object for managing the parameters
for a particular algorithm can be obtained by
calling one of the <code>getInstance</code> factory methods
(static methods that return instances of a given class).

<p>There are two ways to request such an implementation: by
specifying either just an algorithm name, or both an algorithm name
and a package provider. 

<ul>

<li>If just an algorithm name is specified, the system will
determine if there is an AlgorithmParameters
implementation for the algorithm requested
available in the environment, and if there is more than one, if
there is a preferred one.

<li>If both an algorithm name and a package provider are specified,
the system will determine if there is an implementation 
in the package requested, and throw an exception if there
is not.

</ul>

<p>Once an <code>AlgorithmParameters</code> object is returned, it must be
initialized via a call to <code>init</code>, using an appropriate parameter
specification or parameter encoding.

<p>A transparent parameter specification is obtained from an
<code>AlgorithmParameters</code> object via a call to
<code>getParameterSpec</code>, and a byte encoding of the parameters is
obtained via a call to <code>getEncoded</code>.

@author Jan Luehe

@version 1.24, 05/05/04

@see java.security.spec.AlgorithmParameterSpec
@see java.security.spec.DSAParameterSpec
@see KeyPairGenerator

@since 1.2"
      classrelation 1865499 // provider (<unidirectional association>)
	relation 1865499 --->
	  a role_name "provider" private
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1865499 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      classrelation 1865627 // paramSpi (<unidirectional association>)
	relation 1865627 --->
	  a role_name "paramSpi" private
	    comment " The provider implementation (delegate)
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1865627 // paramSpi (<unidirectional association>)
	  b parent class_ref 960667 // AlgorithmParametersSpi
      end

      attribute 2836123 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The algorithm"
      end

      attribute 2836251 "initialized"
	private explicit_type "boolean"
	init_value "=  false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Has this object been initialized?"
      end

      operation 7555227 "AlgorithmParameters"
	protected explicit_return_type ""
	nparams 3
	  param inout name "paramSpi" type class_ref 960667 // AlgorithmParametersSpi
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AlgorithmParameters object.

@param paramSpi the delegate
@param provider the provider
@param algorithm the algorithm"
      end

      operation 7555355 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm associated with this parameter object.

@return the algorithm name."
      end

      operation 7555483 "getInstance"
	class_operation public return_type class_ref 960539 // AlgorithmParameters
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a parameter object for the specified algorithm.

<p>If the default provider package provides an implementation of the
requested algorithm, an instance of AlgorithmParameters containing that
implementation is returned.
If the algorithm is not available in the default 
package, other packages are searched.

<p>The returned parameter object must be initialized via a call to
<code>init</code>, using an appropriate parameter specification or
parameter encoding.

@param algorithm the name of the algorithm requested. 

@return the new parameter object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the environment."
      end

      operation 7555611 "getInstance"
	class_operation public return_type class_ref 960539 // AlgorithmParameters
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a parameter object for the specified algorithm, as supplied
by the specified provider, if such an algorithm is available from the
provider.

<p>The returned parameter object must be initialized via a call to
<code>init</code>, using an appropriate parameter specification or
parameter encoding.

@param algorithm the name of the algorithm requested.

@param provider the name of the provider.

@return the new parameter object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception NoSuchProviderException if the provider is not
available in the environment.

@exception IllegalArgumentException if the provider name is null
or empty. 

@see Provider "
      end

      operation 7555739 "getInstance"
	class_operation public return_type class_ref 960539 // AlgorithmParameters
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a parameter object for the specified algorithm, as supplied
by the specified provider, if such an algorithm is available from the
provider. Note: the <code>provider</code> doesn't have to be registered.

<p>The returned parameter object must be initialized via a call to
<code>init</code>, using an appropriate parameter specification or
parameter encoding.

@param algorithm the name of the algorithm requested.

@param provider the name of the provider.

@return the new parameter object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7555867 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this parameter object.

@return the provider of this parameter object"
      end

      operation 7555995 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "paramSpec" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960795 // InvalidParameterSpecException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameter object using the parameters 
specified in <code>paramSpec</code>.

@param paramSpec the parameter specification.

@exception InvalidParameterSpecException if the given parameter
specification is inappropriate for the initialization of this parameter
object, or if this parameter object has already been initialized."
      end

      operation 7556123 "init"
	public explicit_return_type "void"
	nparams 1
	  param in name "params" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Imports the specified parameters and decodes them according to the 
primary decoding format for parameters. The primary decoding
format for parameters is ASN.1, if an ASN.1 specification for this type
of parameters exists.

@param params the encoded parameters.

@exception IOException on decoding errors, or if this parameter object
has already been initialized."
      end

      operation 7556251 "init"
	public explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "byte"
	  param in name "format" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Imports the parameters from <code>params</code> and decodes them 
according to the specified decoding scheme.
If <code>format</code> is null, the
primary decoding format for parameters is used. The primary decoding
format is ASN.1, if an ASN.1 specification for these parameters
exists.

@param params the encoded parameters.

@param format the name of the decoding scheme.

@exception IOException on decoding errors, or if this parameter object
has already been initialized."
      end

      operation 7556379 "getParameterSpec"
	public explicit_return_type "T"
	nparams 1
	  param inout name "paramSpec" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 960795 // InvalidParameterSpecException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends AlgorithmParameterSpec> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a (transparent) specification of this parameter object.
<code>paramSpec</code> identifies the specification class in which 
the parameters should be returned. It could, for example, be
<code>DSAParameterSpec.class</code>, to indicate that the
parameters should be returned in an instance of the 
<code>DSAParameterSpec</code> class.

@param paramSpec the specification class in which 
the parameters should be returned.

@return the parameter specification.

@exception InvalidParameterSpecException if the requested parameter
specification is inappropriate for this parameter object, or if this
parameter object has not been initialized."
      end

      operation 7556507 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters in their primary encoding format.
The primary encoding format for parameters is ASN.1, if an ASN.1
specification for this type of parameters exists.

@return the parameters encoded using their primary encoding format.

@exception IOException on encoding errors, or if this parameter object
has not been initialized."
      end

      operation 7556635 "getEncoded"
	public explicit_return_type "byte"
	nparams 1
	  param in name "format" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters encoded in the specified scheme.
If <code>format</code> is null, the
primary encoding format for parameters is used. The primary encoding
format is ASN.1, if an ASN.1 specification for these parameters
exists.

@param format the name of the encoding format.

@return the parameters encoded using the specified encoding scheme.

@exception IOException on encoding errors, or if this parameter object
has not been initialized."
      end

      operation 7556763 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a formatted string describing the parameters.

@return a formatted string describing the parameters, or null if this
parameter object has not been initialized."
      end
    end

    class 960667 "AlgorithmParametersSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>AlgorithmParameters</code> class, which is used to manage
algorithm parameters.

<p> All the abstract methods in this class must be implemented by each 
cryptographic service provider who wishes to supply parameter management
for a particular algorithm.

@author Jan Luehe

@version 1.12, 05/05/04

@see AlgorithmParameters
@see java.security.spec.AlgorithmParameterSpec
@see java.security.spec.DSAParameterSpec

@since 1.2"
      operation 7556891 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "paramSpec" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960795 // InvalidParameterSpecException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this parameters object using the parameters 
specified in <code>paramSpec</code>.

@param paramSpec the parameter specification.

@exception InvalidParameterSpecException if the given parameter
specification is inappropriate for the initialization of this parameter
object."
      end

      operation 7557019 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "params" explicit_type "byte"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Imports the specified parameters and decodes them
according to the primary decoding format for parameters.
The primary decoding format for parameters is ASN.1, if an ASN.1
specification for this type of parameters exists.

@param params the encoded parameters.

@exception IOException on decoding errors"
      end

      operation 7557147 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "byte"
	  param in name "format" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Imports the parameters from <code>params</code> and
decodes them according to the specified decoding format.
If <code>format</code> is null, the
primary decoding format for parameters is used. The primary decoding
format is ASN.1, if an ASN.1 specification for these parameters
exists.

@param params the encoded parameters.

@param format the name of the decoding format.

@exception IOException on decoding errors"
      end

      operation 7557275 "engineGetParameterSpec"
	abstract protected explicit_return_type "T"
	nparams 1
	  param inout name "paramSpec" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 960795 // InvalidParameterSpecException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends AlgorithmParameterSpec> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a (transparent) specification of this parameters
object.
<code>paramSpec</code> identifies the specification class in which 
the parameters should be returned. It could, for example, be
<code>DSAParameterSpec.class</code>, to indicate that the
parameters should be returned in an instance of the 
<code>DSAParameterSpec</code> class.

@param paramSpec the the specification class in which 
the parameters should be returned.

@return the parameter specification.

@exception InvalidParameterSpecException if the requested parameter
specification is inappropriate for this parameter object."
      end

      operation 7557403 "engineGetEncoded"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters in their primary encoding format.
The primary encoding format for parameters is ASN.1, if an ASN.1
specification for this type of parameters exists.

@return the parameters encoded using the specified encoding scheme.

@exception IOException on encoding errors."
      end

      operation 7557531 "engineGetEncoded"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param in name "format" explicit_type "String"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters encoded in the specified format.
If <code>format</code> is null, the
primary encoding format for parameters is used. The primary encoding
format is ASN.1, if an ASN.1 specification for these parameters
exists.

@param format the name of the encoding format.

@return the parameters encoded using the specified encoding scheme.

@exception IOException on encoding errors."
      end

      operation 7557659 "engineToString"
	abstract protected explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a formatted string describing the parameters.

@return a formatted string describing the parameters."
      end
    end

    class 960923 "AllPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AllPermission is a permission that implies all other permissions.
<p>
<b>Note:</b> Granting AllPermission should be done with extreme care,
as it implies all other permissions. Thus, it grants code the ability 
to run with security
disabled.  Extreme caution should be taken before granting such
a permission to code.  This permission should be used only during testing,
or in extremely rare cases where an application or applet is
completely trusted and adding the necessary permissions to the policy 
is prohibitively cumbersome.

@see java.security.Permission
@see java.security.AccessController
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@version 1.20 03/12/19

@author Roland Schemers

@serial exclude"
      classrelation 1865755 // <generalisation>
	relation 1865755 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1865755 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      attribute 2836379 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2916474571451318075L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7557787 "AllPermission"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AllPermission object."
      end

      operation 7557915 "AllPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AllPermission object. This
constructor exists for use by the <code>Policy</code> object
to instantiate new Permission objects.

@param name ignored
@param actions ignored."
      end

      operation 7558043 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the specified permission is \"implied\" by 
this object. This method always returns true.

@param p the permission to check against.

@return return"
      end

      operation 7558171 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two AllPermission objects for equality. Two AllPermission
objects are always equal.

@param obj the object we are testing for equality with this object.
@return true if <i>obj</i> is an AllPermission, false otherwise."
      end

      operation 7558299 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 7558427 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions.

@return the actions."
      end

      operation 7558555 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new PermissionCollection object for storing AllPermission 
objects.
<p>

@return a new PermissionCollection object suitable for 
storing AllPermissions."
      end
    end

    class 961051 "AllPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A AllPermissionCollection stores a collection
of AllPermission permissions. AllPermission objects
must be stored in a manner that allows them to be inserted in any
order, but enable the implies function to evaluate the implies
method in an efficient (and consistent) manner. 

@see java.security.Permission
@see java.security.Permissions

@version 1.20 12/19/03

@author Roland Schemers

@serial include"
      classrelation 1865883 // <generalisation>
	relation 1865883 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1865883 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 1866011 // <realization>
	relation 1866011 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1866011 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2836507 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4023755556366636806L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " use serialVersionUID from JDK 1.2.2 for interoperability"
      end

      attribute 2836635 "all_allowed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if any all permissions have been added"
      end

      operation 7558683 "AllPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty AllPermissions object.
"
      end

      operation 7558811 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the AllPermissions. The key for the hash is
permission.path.

@param permission the Permission object to add.

@exception IllegalArgumentException - if the permission is not a
                                      AllPermission

@exception SecurityException - if this AllPermissionCollection object
                               has been marked readonly"
      end

      operation 7558939 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this set of permissions implies the permissions 
expressed in \"permission\".

@param p the Permission object to compare

@return always returns true."
      end

      operation 7559067 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the AllPermission objects in the 
container.

@return an enumeration of all the AllPermission objects."
      end
    end

    class 961179 "AuthProvider"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines login and logout methods for a provider.

<p> While callers may invoke <code>login</code> directly,
the provider may also invoke <code>login</code> on behalf of callers
if it determines that a login must be performed
prior to certain operations.

@version 1.3, 02/03/04
@since 1.5"
      classrelation 1868059 // <generalisation>
	relation 1868059 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1868059 // <generalisation>
	  b parent class_ref 959643 // Provider
      end

      operation 7567003 "AuthProvider"
	protected explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "version" explicit_type "double"
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a provider with the specified name, version number,
and information.

@param name the provider name.
@param version the provider version number.
@param info a description of the provider and its services."
      end

      operation 7567131 "login"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "subject" type class_ref 520987 // Subject
	  param inout name "handler" type class_ref 524955 // CallbackHandler
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log in to this provider.

<p> The provider relies on a <code>CallbackHandler</code>
to obtain authentication information from the caller
(a PIN, for example).  If the caller passes a <code>null</code>
handler to this method, the provider uses the handler set in the
<code>setCallbackHandler</code> method.
If no handler was set in that method, the provider queries the
<i>auth.login.defaultCallbackHandler</i> security property
for the fully qualified class name of a default handler implementation.
If the security property is not set,
the provider is assumed to have alternative means
for obtaining authentication information.

@param subject the <code>Subject</code> which may contain
		principals/credentials used for authentication,
		or may be populated with additional principals/credentials
		after successful authentication has completed.
		This parameter may be <code>null</code>.
@param handler the <code>CallbackHandler</code> used by
		this provider to obtain authentication information
		from the caller, which may be <code>null</code>

@exception LoginException if the login operation fails
@exception SecurityException if the caller does not pass a
	security check for
	<code>SecurityPermission(\"authProvider.<i>name</i>\")</code>,
	where <i>name</i> is the value returned by
	this provider's <code>getName</code> method"
      end

      operation 7567259 "logout"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 525083 // LoginException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log out from this provider.

@exception LoginException if the logout operation fails
@exception SecurityException if the caller does not pass a
	security check for
	<code>SecurityPermission(\"authProvider.<i>name</i>\")</code>,
	where <i>name</i> is the value returned by
	this provider's <code>getName</code> method"
      end

      operation 7567387 "setCallbackHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 524955 // CallbackHandler
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a <code>CallbackHandler</code>.

<p> The provider uses this handler if one is not passed to the
<code>login</code> method.  The provider also uses this handler
if it invokes <code>login</code> on behalf of callers.
In either case if a handler is not set via this method,
the provider queries the
<i>auth.login.defaultCallbackHandler</i> security property
for the fully qualified class name of a default handler implementation.
If the security property is not set,
the provider is assumed to have alternative means
for obtaining authentication information.

@param handler a <code>CallbackHandler</code> for obtaining
		authentication information, which may be <code>null</code>

@exception SecurityException if the caller does not pass a
	security check for
	<code>SecurityPermission(\"authProvider.<i>name</i>\")</code>,
	where <i>name</i> is the value returned by
	this provider's <code>getName</code> method"
      end
    end

    class 961819 "Key"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Key interface is the top-level interface for all keys. It
defines the functionality shared by all key objects. All keys
have three characteristics:

<UL>

<LI>An Algorithm

<P>This is the key algorithm for that key. The key algorithm is usually
an encryption or asymmetric operation algorithm (such as DSA or
RSA), which will work with those algorithms and with related
algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.)
The name of the algorithm of a key is obtained using the
{@link #getAlgorithm() getAlgorithm} method.<P>

<LI>An Encoded Form

<P>This is an external encoded form for the key used when a standard
representation of the key is needed outside the Java Virtual Machine,
as when transmitting the key to some other party. The key
is encoded according to a standard format (such as 
X.509 <code>SubjectPublicKeyInfo</code> or PKCS#8), and
is returned using the {@link #getEncoded() getEncoded} method.
Note: The syntax of the ASN.1 type <code>SubjectPublicKeyInfo</code> 
is defined as follows:

<pre>
SubjectPublicKeyInfo ::= SEQUENCE {
  algorithm AlgorithmIdentifier,
  subjectPublicKey BIT STRING }

AlgorithmIdentifier ::= SEQUENCE {
  algorithm OBJECT IDENTIFIER,
  parameters ANY DEFINED BY algorithm OPTIONAL }
</pre>

For more information, see 
<a href=\"http://www.ietf.org/rfc/rfc2459.txt\">RFC 2459: 
Internet X.509 Public Key Infrastructure Certificate and CRL Profile</a>.
<P>

<LI>A Format

<P>This is the name of the format of the encoded key. It is returned
by the {@link #getFormat() getFormat} method.<P>

</UL>

Keys are generally obtained through key generators, certificates,
or various Identity classes used to manage keys.
Keys may also be obtained from key specifications (transparent
representations of the underlying key material) through the use of a key
factory (see {@link KeyFactory}).

<p> A Key should use KeyRep as its serialized representation.
Note that a serialized Key may contain sensitive information
which should not be exposed in untrusted environments.  See the
<a href=\"../../../guide/serialization/spec/security.html\">
Security Appendix</a>
of the Serialization Specification for more information.

@see PublicKey
@see PrivateKey
@see KeyPair
@see KeyPairGenerator
@see KeyFactory
@see KeyRep
@see java.security.spec.KeySpec
@see Identity
@see Signer

@version 1.54 03/12/19
@author Benjamin Renaud"
      classrelation 1870875 // <generalisation>
	relation 1870875 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870875 // <generalisation>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2841627 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  6603384152749567654L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1

The class fingerprint that is set to indicate 
serialization compatibility with a previous 
version of the class.
"
      end

      operation 7578395 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the standard algorithm name for this key. For
example, \"DSA\" would indicate that this key is a DSA key.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a>
for information about standard algorithm names.

@return the name of the algorithm associated with this key."
      end

      operation 7578523 "getFormat"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the primary encoding format of this key,
or null if this key does not support encoding.
The primary encoding format is
named in terms of the appropriate ASN.1 data format, if an
ASN.1 specification for this key exists.
For example, the name of the ASN.1 data format for public
keys is <I>SubjectPublicKeyInfo</I>, as
defined by the X.509 standard; in this case, the returned format is
<code>\"X.509\"</code>. Similarly,
the name of the ASN.1 data format for private keys is
<I>PrivateKeyInfo</I>,
as defined by the PKCS #8 standard; in this case, the returned format is
<code>\"PKCS#8\"</code>.

@return the primary encoding format of the key."
      end

      operation 7578651 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key in its primary encoding format, or null
if this key does not support encoding.

@return the encoded key, or null if the key does not support
encoding."
      end
    end

    class 961947 "Certificate"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This is an interface of abstract methods for managing a
variety of identity certificates.
An identity certificate is a guarantee by a principal that
a public key is that of another principal.  (A principal represents
an entity such as an individual user, a group, or a corporation.)

<p>In particular, this interface is intended to be a common
abstraction for constructs that have different formats but
important common uses.  For example, different types of
certificates, such as X.509 certificates and PGP certificates,
share general certificate functionality (the need to encode and
decode certificates) and some types of information, such as a
public key, the principal whose key it is, and the guarantor
guaranteeing that the public key is that of the specified
principal. So an implementation of X.509 certificates and an
implementation of PGP certificates can both utilize the Certificate
interface, even though their formats and additional types and
amounts of information stored are different.

<p><b>Important</b>: This interface is useful for cataloging and
grouping objects sharing certain common uses. It does not have any
semantics of its own. In particular, a Certificate object does not
make any statement as to the <i>validity</i> of the binding. It is
the duty of the application implementing this interface to verify
the certificate and satisfy itself of its validity.

@version 	1.37, 05/18/04
@author Benjamin Renaud 
@deprecated A new certificate handling package is created in the Java 2 platform.
            This Certificate interface is entirely deprecated and
            is here to allow for a smooth transition to the new
            package.
@see java.security.cert.Certificate"
      operation 7567515 "getGuarantor"
	abstract public return_type class_ref 527131 // Principal
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the guarantor of the certificate, that is, the principal
guaranteeing that the public key associated with this certificate
is that of the principal associated with this certificate. For X.509
certificates, the guarantor will typically be a Certificate Authority
(such as the United States Postal Service or Verisign, Inc.).

@return the guarantor which guaranteed the principal-key
binding."
      end

      operation 7567643 "getPrincipal"
	abstract public return_type class_ref 527131 // Principal
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal of the principal-key pair being guaranteed by
the guarantor.

@return the principal to which this certificate is bound.  "
      end

      operation 7567771 "getPublicKey"
	abstract public return_type class_ref 962075 // PublicKey
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key of the principal-key pair being guaranteed by
the guarantor.

@return the public key that this certificate certifies belongs
to a particular principal.  "
      end

      operation 7567899 "encode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 183835 // OutputStream
	nexceptions 2
	  exception class_ref 962203 // KeyException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes the certificate to an output stream in a format that can
be decoded by the <code>decode</code> method.

@param stream the output stream to which to encode the
certificate.

@exception KeyException if the certificate is not
properly initialized, or data is missing, etc.

@exception IOException if a stream exception occurs while
trying to output the encoded certificate to the output stream.

@see #decode 
@see #getFormat"
      end

      operation 7568027 "decode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 179099 // InputStream
	nexceptions 2
	  exception class_ref 962203 // KeyException
	  exception class_ref 179355 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a certificate from an input stream. The format should be
that returned by <code>getFormat</code> and produced by 
<code>encode</code>.

@param stream the input stream from which to fetch the data
being decoded.

@exception KeyException if the certificate is not properly initialized,
or data is missing, etc.

@exception IOException if an exception occurs while trying to input
the encoded certificate from the input stream.

@see #encode 
@see #getFormat"
      end

      operation 7568155 "getFormat"
	abstract public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the coding format. This is used as a hint to find
an appropriate parser. It could be \"X.509\", \"PGP\", etc. This is
the format produced and understood by the <code>encode</code>
and <code>decode</code> methods.

@return the name of the coding format."
      end

      operation 7568283 "toString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "detailed" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that represents the contents of the certificate.

@param detailed whether or not to give detailed information
about the certificate

@return a string representing the contents of the certificate"
      end
    end

    class 962075 "PublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A public key. This interface contains no methods or constants.
It merely serves to group (and provide type safety for) all public key
interfaces.

Note: The specialized public key interfaces extend this interface.
See, for example, the DSAPublicKey interface in
<code>java.security.interfaces</code>.

@see Key
@see PrivateKey
@see Certificate
@see Signature#initVerify
@see java.security.interfaces.DSAPublicKey
@see java.security.interfaces.RSAPublicKey

@version 1.32 03/12/19"
      classrelation 1879451 // <generalisation>
	relation 1879451 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1879451 // <generalisation>
	  b parent class_ref 961819 // Key
      end

      attribute 2847515 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  7187392471159151072L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1
 
The class fingerprint that is set to indicate serialization
compatibility with a previous version of the class.
"
      end
    end

    class 962203 "KeyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the basic key exception.

@see Key
@see InvalidKeyException
@see KeyManagementException

@version 1.19 03/12/19
@author Benjamin Renaud"
      classrelation 1870491 // <generalisation>
	relation 1870491 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870491 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2841243 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7483676942812432108L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7577115 "KeyException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyException with no detail message. A detail
message is a String that describes this particular exception."
      end

      operation 7577243 "KeyException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyException with the specified detail message.
A detail message is a String that describes this particular
exception.

@param msg the detail message.  "
      end

      operation 7577371 "KeyException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7577499 "KeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 962331 "Timestamp"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates information about a signed timestamp.
It is immutable.
It includes the timestamp's date and time as well as information about the 
Timestamping Authority (TSA) which generated and signed the timestamp.

@since 1.5
@version 1.2, 12/19/03
@author Vincent Ryan"
      classrelation 1882779 // <realization>
	relation 1882779 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1882779 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2851483 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5502683707821851294L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1882907 // timestamp (<unidirectional association>)
	relation 1882907 --->
	  a role_name "timestamp" private
	    comment "
The timestamp's date and time

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1882907 // timestamp (<unidirectional association>)
	  b parent class_ref 139163 // Date
      end

      classrelation 1883035 // signerCertPath (<unidirectional association>)
	relation 1883035 --->
	  a role_name "signerCertPath" private
	    comment "
The TSA's certificate path.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1883035 // signerCertPath (<unidirectional association>)
	  b parent class_ref 845339 // CertPath
      end

      attribute 2851611 "myhash"
	private explicit_type "int"
	init_value "=  -1"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Hash code for this timestamp.
"
      end

      operation 7625755 "Timestamp"
	public explicit_return_type ""
	nparams 2
	  param inout name "timestamp" type class_ref 139163 // Date
	  param inout name "signerCertPath" type class_ref 845339 // CertPath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Timestamp.

@param timestamp is the timestamp's date and time. It must not be null.
@param signerCertPath is the TSA's certificate path. It must not be null.
@throws NullPointerException if timestamp or signerCertPath is null."
      end

      operation 7625883 "getTimestamp"
	public return_type class_ref 139163 // Date
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the date and time when the timestamp was generated.

@return The timestamp's date and time."
      end

      operation 7626011 "getSignerCertPath"
	public return_type class_ref 845339 // CertPath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate path for the Timestamping Authority.

@return The TSA's certificate path."
      end

      operation 7626139 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this timestamp. 
The hash code is generated using the date and time of the timestamp
and the TSA's certificate path.

@return a hash code value for this timestamp."
      end

      operation 7626267 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests for equality between the specified object and this
timestamp. Two timestamps are considered equal if the date and time of
their timestamp's and their signer's certificate paths are equal.

@param obj the object to test for equality with this timestamp.

@return true if the timestamp are considered equal, false otherwise."
      end

      operation 7626395 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this timestamp.

@return A string comprising the date and time of the timestamp and
        its signer's certificate."
      end
    end

    class 962459 "DigestException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the generic Message Digest exception. 

@version 1.17, 03/12/19
@author Benjamin Renaud "
      classrelation 1868571 // <generalisation>
	relation 1868571 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1868571 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2839963 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5821450303093652515L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7569179 "DigestException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DigestException with no detail message.  (A
detail message is a String that describes this particular
exception.)  "
      end

      operation 7569307 "DigestException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DigestException with the specified detail
message.  (A detail message is a String that describes this
particular exception.)

@param msg the detail message.  "
      end

      operation 7569435 "DigestException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DigestException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7569563 "DigestException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DigestException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 962587 "DigestInputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A transparent stream that updates the associated message digest using
the bits going through the stream.

<p>To complete the message digest computation, call one of the
<code>digest</code> methods on the associated message
digest after your calls to one of this digest input stream's
{@link #read() read} methods.

<p>It is possible to turn this stream on or off (see
{@link #on(boolean) on}). When it is on, a call to one of the
<code>read</code> methods
results in an update on the message digest.  But when it is off,
the message digest is not updated. The default is for the stream
to be on.

<p>Note that digest objects can compute only one digest (see
{@link MessageDigest}),
so that in order to compute intermediate digests, a caller should
retain a handle onto the digest object, and clone it for each
digest to be computed, leaving the orginal digest untouched.

@see MessageDigest

@see DigestOutputStream

@version 1.37 03/12/19
@author Benjamin Renaud"
      classrelation 1868699 // <generalisation>
	relation 1868699 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1868699 // <generalisation>
	  b parent class_ref 602651 // FilterInputStream
      end

      attribute 2840091 "on"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " NOTE: This should be made a generic UpdaterInputStream 
 Are we on or off? "
      end

      classrelation 1868827 // digest (<unidirectional association>)
	relation 1868827 --->
	  a role_name "digest" protected
	    comment "
The message digest associated with this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1868827 // digest (<unidirectional association>)
	  b parent class_ref 962715 // MessageDigest
      end

      operation 7569691 "DigestInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "stream" type class_ref 179099 // InputStream
	  param inout name "digest" type class_ref 962715 // MessageDigest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a digest input stream, using the specified input stream
and message digest.

@param stream the input stream.

@param digest the message digest to associate with this stream."
      end

      operation 7569819 "getMessageDigest"
	public return_type class_ref 962715 // MessageDigest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message digest associated with this stream.

@return the message digest associated with this stream.
@see #setMessageDigest(java.security.MessageDigest)"
      end

      operation 7569947 "setMessageDigest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "digest" type class_ref 962715 // MessageDigest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified message digest with this stream.

@param digest the message digest to be associated with this stream.
@see #getMessageDigest()"
      end

      operation 7570075 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a byte, and updates the message digest (if the digest
function is on).  That is, this method reads a byte from the
input stream, blocking until the byte is actually read. If the
digest function is on (see {@link #on(boolean) on}), this method
will then call <code>update</code> on the message digest associated
with this stream, passing it the byte read.

@return the byte read.

@exception IOException if an I/O error occurs.

@see MessageDigest#update(byte)"
      end

      operation 7570203 "read"
	public explicit_return_type "int"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads into a byte array, and updates the message digest (if the
digest function is on).  That is, this method reads up to
<code>len</code> bytes from the input stream into the array
<code>b</code>, starting at offset <code>off</code>. This method
blocks until the data is actually
read. If the digest function is on (see
{@link #on(boolean) on}), this method will then call <code>update</code>
on the message digest associated with this stream, passing it
the data.

@param b	the array into which the data is read.

@param off the starting offset into <code>b</code> of where the
data should be placed.

@param len the maximum number of bytes to be read from the input
stream into b, starting at offset <code>off</code>.

@return  the actual number of bytes read. This is less than
<code>len</code> if the end of the stream is reached prior to
reading <code>len</code> bytes. -1 is returned if no bytes were
read because the end of the stream had already been reached when
the call was made.

@exception IOException if an I/O error occurs.

@see MessageDigest#update(byte[], int, int)"
      end

      operation 7570331 "on"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns the digest function on or off. The default is on.  When
it is on, a call to one of the <code>read</code> methods results in an
update on the message digest.  But when it is off, the message
digest is not updated.

@param on true to turn the digest function on, false to turn
it off."
      end

      operation 7570459 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a string representation of this digest input stream and
its associated message digest object."
      end
    end

    class 962715 "MessageDigest"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This MessageDigest class provides applications the functionality of a
message digest algorithm, such as MD5 or SHA.
Message digests are secure one-way hash functions that take arbitrary-sized
data and output a fixed-length hash value.

<p>A MessageDigest object starts out initialized. The data is 
processed through it using the {@link #update(byte) update}
methods. At any point {@link #reset() reset} can be called
to reset the digest. Once all the data to be updated has been
updated, one of the {@link #digest() digest} methods should 
be called to complete the hash computation.

<p>The <code>digest</code> method can be called once for a given number 
of updates. After <code>digest</code> has been called, the MessageDigest
object is reset to its initialized state.

<p>Implementations are free to implement the Cloneable interface.
Client applications can test cloneability by attempting cloning
and catching the CloneNotSupportedException: <p>    

<pre>
MessageDigest md = MessageDigest.getInstance(\"SHA\");

try {
    md.update(toChapter1);
    MessageDigest tc1 = md.clone();
    byte[] toChapter1Digest = tc1.digest();
    md.update(toChapter2);
    ...etc.
} catch (CloneNotSupportedException cnse) {
    throw new DigestException(\"couldn't make digest of partial content\");
}
</pre>

<p>Note that if a given implementation is not cloneable, it is
still possible to compute intermediate digests by instantiating
several instances, if the number of digests is known in advance.

<p>Note that this class is abstract and extends from
<code>MessageDigestSpi</code> for historical reasons.
Application developers should only take notice of the methods defined in
this <code>MessageDigest</code> class; all the methods in
the superclass are intended for cryptographic service providers who wish to
supply their own implementations of message digest algorithms.

@author Benjamin Renaud 

@version 1.77, 12/19/03

@see DigestInputStream
@see DigestOutputStream"
      classrelation 1875867 // <generalisation>
	relation 1875867 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1875867 // <generalisation>
	  b parent class_ref 967323 // MessageDigestSpi
      end

      attribute 2845595 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2845723 "INITIAL"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The state of this digest"
      end

      attribute 2845851 "IN_PROGRESS"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2845979 "state"
	private explicit_type "int"
	init_value "=  INITIAL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1875995 // provider (<unidirectional association>)
	relation 1875995 --->
	  a role_name "provider" private
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1875995 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      operation 7596827 "MessageDigest"
	protected explicit_return_type ""
	nparams 1
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a message digest with the specified algorithm name.

@param algorithm the standard name of the digest algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names."
      end

      operation 7596955 "getInstance"
	class_operation public return_type class_ref 962715 // MessageDigest
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a MessageDigest object that implements the specified digest
algorithm. If the default provider package
provides an implementation of the requested digest algorithm,
an instance of MessageDigest containing that implementation is returned.
If the algorithm is not available in the default 
package, other packages are searched.

@param algorithm the name of the algorithm requested. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return a Message Digest object implementing the specified
algorithm.

@exception NoSuchAlgorithmException if the algorithm is
not available in the caller's environment.  "
      end

      operation 7597083 "getInstance"
	class_operation public return_type class_ref 962715 // MessageDigest
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a MessageDigest object implementing the specified
algorithm, as supplied from the specified provider, if such an 
algorithm is available from the provider.

@param algorithm the name of the algorithm requested. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the name of the provider.

@return a Message Digest object implementing the specified
algorithm.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception NoSuchProviderException if the provider is not
available in the environment. 

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider "
      end

      operation 7597211 "getInstance"
	class_operation public return_type class_ref 962715 // MessageDigest
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a MessageDigest object implementing the specified
algorithm, as supplied from the specified provider, if such an 
algorithm is available from the provider. Note: the 
<code>provider</code> doesn't have to be registered. 

@param algorithm the name of the algorithm requested. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the provider.

@return a Message Digest object implementing the specified
algorithm.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7597339 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this message digest object.

@return the provider of this message digest object"
      end

      operation 7597467 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "input" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the digest using the specified byte.    

@param input the byte with which to update the digest."
      end

      operation 7597595 "update"
	public explicit_return_type "void"
	nparams 3
	  param in name "input" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the digest using the specified array of bytes, starting
at the specified offset.

@param input the array of bytes.

@param offset the offset to start from in the array of bytes.

@param len the number of bytes to use, starting at 
<code>offset</code>.  "
      end

      operation 7597723 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "input" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the digest using the specified array of bytes.

@param input the array of bytes."
      end

      operation 7597851 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the digest using the specified ByteBuffer. The digest is
updated using the <code>input.remaining()</code> bytes starting
at <code>input.position()</code>.
Upon return, the buffer's position will be equal to its limit;
its limit will not have changed.

@param input the ByteBuffer
@since 1.5"
      end

      operation 7597979 "digest"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completes the hash computation by performing final operations
such as padding. The digest is reset after this call is made.

@return the array of bytes for the resulting hash value.  "
      end

      operation 7598107 "digest"
	public explicit_return_type "int"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 962459 // DigestException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completes the hash computation by performing final operations
such as padding. The digest is reset after this call is made.

@param buf output buffer for the computed digest

@param offset offset into the output buffer to begin storing the digest

@param len number of bytes within buf allotted for the digest

@return the number of bytes placed into <code>buf</code>

@exception DigestException if an error occurs."
      end

      operation 7598235 "digest"
	public explicit_return_type "byte"
	nparams 1
	  param in name "input" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a final update on the digest using the specified array 
of bytes, then completes the digest computation. That is, this
method first calls {@link #update(byte[]) update(input)},
passing the <i>input</i> array to the <code>update</code> method,
then calls {@link #digest() digest()}.

@param input the input to be updated before the digest is
completed.

@return the array of bytes for the resulting hash value.  "
      end

      operation 7598363 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this message digest object.  "
      end

      operation 7598491 "isEqual"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "digesta" explicit_type "byte"
	  param in name "digestb" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two digests for equality. Does a simple byte compare.

@param digesta one of the digests to compare.

@param digestb the other digest to compare.    

@return true if the digests are equal, false otherwise."
      end

      operation 7598619 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the digest for further use."
      end

      operation 7598747 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that identifies the algorithm, independent of
implementation details. The name should be a standard
Java Security name (such as \"SHA\", \"MD5\", and so on). 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return the name of the algorithm"
      end

      operation 7598875 "getDigestLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the digest in bytes, or 0 if this operation is
not supported by the provider and the implementation is not cloneable.

@return the digest length in bytes, or 0 if this operation is not
supported by the provider and the implementation is not cloneable.

@since 1.2"
      end

      operation 7599003 "clone"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 383643 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone if the implementation is cloneable.    

@return a clone if the implementation is cloneable.

@exception CloneNotSupportedException if this is called on an
implementation that does not support <code>Cloneable</code>."
      end

      class 967451 "Delegate"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1876123 // <generalisation>
	  relation 1876123 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1876123 // <generalisation>
	    b parent class_ref 962715 // MessageDigest
	end

	classrelation 1876251 // digestSpi (<unidirectional association>)
	  relation 1876251 --->
	    a role_name "digestSpi" private
	      comment " The provider implementation (delegate)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1876251 // digestSpi (<unidirectional association>)
	    b parent class_ref 967323 // MessageDigestSpi
	end

	operation 7599131 "Delegate"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "digestSpi" type class_ref 967323 // MessageDigestSpi
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " constructor"
	end

	operation 7599259 "clone"
	  public explicit_return_type "Object"
	  nparams 0
	  nexceptions 1
	    exception class_ref 383643 // CloneNotSupportedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a clone if the delegate is cloneable.    

@return a clone if the delegate is cloneable.

@exception CloneNotSupportedException if this is called on a
delegate that does not support <code>Cloneable</code>."
	end

	operation 7599387 "engineGetDigestLength"
	  protected explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7599515 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "input" explicit_type "byte"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7599643 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 3
	    param in name "input" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7599771 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "input" type class_ref 182427 // ByteBuffer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7599899 "engineDigest"
	  protected explicit_return_type "byte"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7600027 "engineDigest"
	  protected explicit_return_type "int"
	  nparams 3
	    param in name "buf" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 962459 // DigestException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7600155 "engineReset"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 962843 "DigestOutputStream"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A transparent stream that updates the associated message digest using
the bits going through the stream.

<p>To complete the message digest computation, call one of the
<code>digest</code> methods on the associated message
digest after your calls to one of this digest ouput stream's
{@link #write(int) write} methods.

<p>It is possible to turn this stream on or off (see
{@link #on(boolean) on}). When it is on, a call to one of the
<code>write</code> methods results in
an update on the message digest.  But when it is off, the message
digest is not updated. The default is for the stream to be on.

@see MessageDigest
@see DigestInputStream

@version 1.31 03/12/19
@author Benjamin Renaud"
      classrelation 1868955 // <generalisation>
	relation 1868955 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1868955 // <generalisation>
	  b parent class_ref 903195 // FilterOutputStream
      end

      attribute 2840219 "on"
	private explicit_type "boolean"
	init_value "=  true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1869083 // digest (<unidirectional association>)
	relation 1869083 --->
	  a role_name "digest" protected
	    comment "
The message digest associated with this stream.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1869083 // digest (<unidirectional association>)
	  b parent class_ref 962715 // MessageDigest
      end

      operation 7570587 "DigestOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "stream" type class_ref 183835 // OutputStream
	  param inout name "digest" type class_ref 962715 // MessageDigest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a digest output stream, using the specified output stream
and message digest.

@param stream the output stream.

@param digest the message digest to associate with this stream."
      end

      operation 7570715 "getMessageDigest"
	public return_type class_ref 962715 // MessageDigest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the message digest associated with this stream.

@return the message digest associated with this stream.
@see #setMessageDigest(java.security.MessageDigest)"
      end

      operation 7570843 "setMessageDigest"
	public explicit_return_type "void"
	nparams 1
	  param inout name "digest" type class_ref 962715 // MessageDigest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified message digest with this stream.

@param digest the message digest to be associated with this stream.
@see #getMessageDigest()"
      end

      operation 7570971 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the message digest (if the digest function is on) using
the specified byte, and in any case writes the byte
to the output stream. That is, if the digest function is on
(see {@link #on(boolean) on}), this method calls
<code>update</code> on the message digest associated with this
stream, passing it the byte <code>b</code>. This method then
writes the byte to the output stream, blocking until the byte
is actually written.

@param b the byte to be used for updating and writing to the
output stream.

@exception IOException if an I/O error occurs.

@see MessageDigest#update(byte)"
      end

      operation 7571099 "write"
	public explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the message digest (if the digest function is on) using
the specified subarray, and in any case writes the subarray to
the output stream. That is, if the digest function is on (see
{@link #on(boolean) on}), this method calls <code>update</code>
on the message digest associated with this stream, passing it
the subarray specifications. This method then writes the subarray
bytes to the output stream, blocking until the bytes are actually
written.

@param b the array containing the subarray to be used for updating
and writing to the output stream.

@param off the offset into <code>b</code> of the first byte to
be updated and written.

@param len the number of bytes of data to be updated and written
from <code>b</code>, starting at offset <code>off</code>.

@exception IOException if an I/O error occurs.

@see MessageDigest#update(byte[], int, int)"
      end

      operation 7571227 "on"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns the digest function on or off. The default is on.  When
it is on, a call to one of the <code>write</code> methods results in an
update on the message digest.  But when it is off, the message
digest is not updated.

@param on true to turn the digest function on, false to turn it
off."
      end

      operation 7571355 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a string representation of this digest output stream and
its associated message digest object."
      end
    end

    class 962971 "GuardedObject"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A GuardedObject is an object that is used to protect access to
another object.

<p>A GuardedObject encapsulates a target object and a Guard object,
such that access to the target object is possible
only if the Guard object allows it.
Once an object is encapsulated by a GuardedObject,
access to that object is controlled by the <code>getObject</code>
method, which invokes the
<code>checkGuard</code> method on the Guard object that is
guarding access. If access is not allowed,
an exception is thrown.

@see Guard
@see Permission

@version 1.15 03/12/19
@author Roland Schemers
@author Li Gong"
      classrelation 1869211 // <realization>
	relation 1869211 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1869211 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2840347 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -5240450096227834308L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2840475 "object"
	private explicit_type "Object"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the object we are guarding"
      end

      classrelation 1869339 // guard (<unidirectional association>)
	relation 1869339 --->
	  a role_name "guard" private
	    comment " the guard"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1869339 // guard (<unidirectional association>)
	  b parent class_ref 285339 // Guard
      end

      operation 7571483 "GuardedObject"
	public explicit_return_type ""
	nparams 2
	  param inout name "object" explicit_type "Object"
	  param inout name "guard" type class_ref 285339 // Guard
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a GuardedObject using the specified object and guard.
If the Guard object is null, then no restrictions will
be placed on who can access the object.

@param object the object to be guarded.

@param guard the Guard object that guards access to the object."
      end

      operation 7571611 "getObject"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 203419 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the guarded object, or throws an exception if access
to the guarded object is denied by the guard.

@return the guarded object.

@exception SecurityException if access to the guarded object is
denied."
      end

      operation 7571739 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this object out to a stream (i.e., serializes it).
We check the guard if there is one."
      end
    end

    class 963099 "Identity"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This class represents identities: real-world objects such as people,
companies or organizations whose identities can be authenticated using 
their public keys. Identities may also be more abstract (or concrete) 
constructs, such as daemon threads or smart cards.

<p>All Identity objects have a name and a public key. Names are
immutable. Identities may also be scoped. That is, if an Identity is
specified to have a particular scope, then the name and public
key of the Identity are unique within that scope.

<p>An Identity also has a set of certificates (all certifying its own
public key). The Principal names specified in these certificates need 
not be the same, only the key.

<p>An Identity can be subclassed, to include postal and email addresses,
telephone numbers, images of faces and logos, and so on.

@see IdentityScope
@see Signer
@see Principal

@version 1.61
@author Benjamin Renaud
@deprecated This class is no longer used. Its functionality has been
replaced by <code>java.security.KeyStore</code>, the
<code>java.security.cert</code> package, and
<code>java.security.Principal</code>."
      classrelation 1869467 // <realization>
	relation 1869467 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1869467 // <realization>
	  b parent class_ref 527131 // Principal
      end

      classrelation 1869595 // <realization>
	relation 1869595 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1869595 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2840603 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  3609922007826600659L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " use serialVersionUID from JDK 1.1.x for interoperability "
      end

      attribute 2840731 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name for this identity.

@serial
"
      end

      classrelation 1869723 // publicKey (<unidirectional association>)
	relation 1869723 --->
	  a role_name "publicKey" private
	    comment "
The public key for this identity.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1869723 // publicKey (<unidirectional association>)
	  b parent class_ref 962075 // PublicKey
      end

      attribute 2840859 "info"
	package explicit_type "String"
	init_value "=  \"No further information available.\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Generic, descriptive information about the identity.

@serial
"
      end

      classrelation 1869851 // scope (<unidirectional association>)
	relation 1869851 --->
	  a role_name "scope" package
	    comment "
The scope of the identity.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1869851 // scope (<unidirectional association>)
	  b parent class_ref 840987 // IdentityScope
      end

      classrelation 1869979 // certificates (<unidirectional association>)
	relation 1869979 --->
	  a role_name "certificates" package
	    comment "
The certificates for this identity.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1869979 // certificates (<unidirectional association>)
	  b parent class_ref 153883 // Vector
      end

      operation 7571867 "Identity"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for serialization only."
      end

      operation 7571995 "Identity"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "scope" type class_ref 840987 // IdentityScope
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an identity with the specified name and scope.

@param name the identity name.  
@param scope the scope of the identity.

@exception KeyManagementException if there is already an identity 
with the same name in the scope."
      end

      operation 7572123 "Identity"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an identity with the specified name and no scope.

@param name the identity name."
      end

      operation 7572251 "getName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this identity's name.

@return the name of this identity."
      end

      operation 7572379 "getScope"
	public return_type class_ref 840987 // IdentityScope
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this identity's scope.

@return the scope of this identity."
      end

      operation 7572507 "getPublicKey"
	public return_type class_ref 962075 // PublicKey
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this identity's public key.

@return the public key for this identity.

@see #setPublicKey"
      end

      operation 7572635 "setPublicKey"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 962075 // PublicKey
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this identity's public key. The old key and all of this
identity's certificates are removed by this operation. 

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"setIdentityPublicKey\"</code> 
as its argument to see if it's ok to set the public key. 

@param key the public key for this identity.

@exception KeyManagementException if another identity in the 
identity's scope has the same public key, or if another exception occurs.  

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
setting the public key.

@see #getPublicKey
@see SecurityManager#checkSecurityAccess

 Should we throw an exception if this is already set? "
      end

      operation 7572763 "setInfo"
	public explicit_return_type "void"
	nparams 1
	  param in name "info" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies a general information string for this identity.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"setIdentityInfo\"</code> 
as its argument to see if it's ok to specify the information string. 

@param info the information string.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
setting the information string.

@see #getInfo
@see SecurityManager#checkSecurityAccess"
      end

      operation 7572891 "getInfo"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns general information previously specified for this identity.

@return general information about this identity.

@see #setInfo"
      end

      operation 7573019 "addCertificate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a certificate for this identity. If the identity has a public
key, the public key in the certificate must be the same, and if
the identity does not have a public key, the identity's
public key is set to be that specified in the certificate.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"addIdentityCertificate\"</code> 
as its argument to see if it's ok to add a certificate. 

@param certificate the certificate to be added.

@exception KeyManagementException if the certificate is not valid,
if the public key in the certificate being added conflicts with
this identity's public key, or if another exception occurs.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
adding a certificate.

@see SecurityManager#checkSecurityAccess"
      end

      operation 7573147 "keyEquals"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "aKey" type class_ref 961819 // Key
	  param inout name "anotherKey" type class_ref 961819 // Key
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7573275 "removeCertificate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a certificate from this identity.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"removeIdentityCertificate\"</code> 
as its argument to see if it's ok to remove a certificate. 

@param certificate the certificate to be removed.

@exception KeyManagementException if the certificate is
missing, or if another exception occurs.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
removing a certificate.

@see SecurityManager#checkSecurityAccess"
      end

      operation 7573403 "certificates"
	public return_type class_ref 961947 // Certificate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of all the certificates for this identity.  

@return a copy of all the certificates for this identity.  "
      end

      operation 7573531 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "identity" explicit_type "Object"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests for equality between the specified object and this identity.
This first tests to see if the entities actually refer to the same
object, in which case it returns true. Next, it checks to see if
the entities have the same name and the same scope. If they do, 
the method returns true. Otherwise, it calls 
{@link #identityEquals(Identity) identityEquals}, which subclasses should 
override.

@param identity the object to test for equality with this identity.  

@return true if the objects are considered equal, false otherwise.

@see #identityEquals "
      end

      operation 7573659 "identityEquals"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "identity" type class_ref 963099 // Identity
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests for equality between the specified identity and this identity.
This method should be overriden by subclasses to test for equality. 
The default behavior is to return true if the names and public keys 
are equal.

@param identity the identity to test for equality with this identity.

@return true if the identities are considered equal, false
otherwise. 

@see #equals "
      end

      operation 7573787 "fullName"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a parsable name for identity: identityName.scopeName"
      end

      operation 7573915 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a short string describing this identity, telling its
name and its scope (if any).

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"printIdentity\"</code> 
as its argument to see if it's ok to return the string. 

@return information about this identity, such as its name and the  
name of its scope (if any).

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
returning a string describing this identity.

@see SecurityManager#checkSecurityAccess"
      end

      operation 7574043 "toString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "detailed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this identity, with
optionally more details than that provided by the
<code>toString</code> method without any arguments.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"printIdentity\"</code> 
as its argument to see if it's ok to return the string. 

@param detailed whether or not to provide detailed information.  

@return information about this identity. If <code>detailed</code>
is true, then this method returns more information than that 
provided by the <code>toString</code> method without any arguments.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
returning a string describing this identity.

@see #toString
@see SecurityManager#checkSecurityAccess"
      end

      operation 7574171 "printKeys"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574299 "printCertificates"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7574427 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this identity.

@return a hashcode for this identity."
      end

      operation 7574555 "check"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "directive" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 963227 "KeyManagementException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the general key management exception for all operations
dealing with key management. Examples of subclasses of 
KeyManagementException that developers might create for 
giving more detailed information could include:

<ul>
<li>KeyIDConflictException
<li>KeyAuthorizationFailureException
<li>ExpiredKeyException
</ul>

@version 1.18 03/12/19
@author Benjamin Renaud

@see Key
@see KeyException"
      classrelation 1871387 // <generalisation>
	relation 1871387 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1871387 // <generalisation>
	  b parent class_ref 962203 // KeyException
      end

      attribute 2842139 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  947674216157062695L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7580827 "KeyManagementException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyManagementException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7580955 "KeyManagementException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyManagementException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end

      operation 7581083 "KeyManagementException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyManagementException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7581211 "KeyManagementException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyManagementException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 963355 "InvalidKeyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the exception for invalid Keys (invalid encoding, wrong
length, uninitialized, etc).

@version 1.16, 12/19/03
@author Benjamin Renaud "
      classrelation 1870619 // <generalisation>
	relation 1870619 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870619 // <generalisation>
	  b parent class_ref 962203 // KeyException
      end

      attribute 2841371 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5698479920593359816L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7577627 "InvalidKeyException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidKeyException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7577755 "InvalidKeyException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidKeyException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param msg the detail message.  "
      end

      operation 7577883 "InvalidKeyException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidKeyException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7578011 "InvalidKeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>InvalidKeyException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 963483 "InvalidParameterException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception, designed for use by the JCA/JCE engine classes, 
is thrown when an invalid parameter is passed 
to a method.

@author Benjamin Renaud
@version 1.20, 03/12/19"
      classrelation 1870747 // <generalisation>
	relation 1870747 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1870747 // <generalisation>
	  b parent class_ref 216859 // IllegalArgumentException
      end

      attribute 2841499 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -857968536935667808L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7578139 "InvalidParameterException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidParameterException with no detail message.
A detail message is a String that describes this particular
exception."
      end

      operation 7578267 "InvalidParameterException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an InvalidParameterException with the specified
detail message.  A detail message is a String that describes
this particular exception.

@param msg the detail message.  "
      end
    end

    class 963611 "KeyFactory"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Key factories are used to convert <I>keys</I> (opaque
cryptographic keys of type <code>Key</code>) into <I>key specifications</I>
(transparent representations of the underlying key material), and vice
versa.

<P> Key factories are bi-directional. That is, they allow you to build an
opaque key object from a given key specification (key material), or to
retrieve the underlying key material of a key object in a suitable format.

<P> Multiple compatible key specifications may exist for the same key.
For example, a DSA public key may be specified using
<code>DSAPublicKeySpec</code> or
<code>X509EncodedKeySpec</code>. A key factory can be used to translate
between compatible key specifications.

<P> The following is an example of how to use a key factory in order to
instantiate a DSA public key from its encoding.
Assume Alice has received a digital signature from Bob.
Bob also sent her his public key (in encoded format) to verify
his signature. Alice then performs the following actions:

<pre>
X509EncodedKeySpec bobPubKeySpec = new X509EncodedKeySpec(bobEncodedPubKey);
KeyFactory keyFactory = KeyFactory.getInstance(\"DSA\");
PublicKey bobPubKey = keyFactory.generatePublic(bobPubKeySpec);
Signature sig = Signature.getInstance(\"DSA\");
sig.initVerify(bobPubKey);
sig.update(data);
sig.verify(signature);
</pre>

@author Jan Luehe

@version 1.32, 05/05/04

@see Key
@see PublicKey
@see PrivateKey
@see java.security.spec.KeySpec
@see java.security.spec.DSAPublicKeySpec
@see java.security.spec.X509EncodedKeySpec

@since 1.2"
      attribute 2841755 "debug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "= 
			Debug.getInstance(\"jca\", \"KeyFactory\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2841883 "algorithm"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The algorithm associated with this key factory"
      end

      classrelation 1871003 // provider (<unidirectional association>)
	relation 1871003 --->
	  a role_name "provider" private
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1871003 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      classrelation 1871131 // spi (<unidirectional association>)
	relation 1871131 --->
	  a role_name "spi" volatile private
	    comment " The provider implementation (delegate)
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1871131 // spi (<unidirectional association>)
	  b parent class_ref 963739 // KeyFactorySpi
      end

      attribute 2842011 "lock"
	const_attribute private explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " lock for mutex during provider selection"
      end

      classrelation 1871259 // serviceIterator (<unidirectional association>)
	relation 1871259 --->
	  a role_name "serviceIterator" private
	    comment " remaining services to try in provider selection
 null once provider is selected
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Service> ${name}${value};
"
	    classrelation_ref 1871259 // serviceIterator (<unidirectional association>)
	  b parent class_ref 135323 // Iterator
      end

      operation 7578779 "KeyFactory"
	protected explicit_return_type ""
	nparams 3
	  param inout name "keyFacSpi" type class_ref 963739 // KeyFactorySpi
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a KeyFactory object.

@param keyFacSpi the delegate
@param provider the provider
@param algorithm the name of the algorithm
to associate with this <tt>KeyFactory</tt>"
      end

      operation 7578907 "KeyFactory"
	private explicit_return_type ""
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7579035 "getInstance"
	class_operation public return_type class_ref 963611 // KeyFactory
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyFactory object that implements the specified 
algorithm. If the default provider package
provides an implementation of the requested algorithm,
an instance of KeyFactory containing that implementation is returned.
If the algorithm is not available in the default 
package, other packages are searched.

@param algorithm the name of the requested key algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return a KeyFactory object for the specified algorithm.

@exception NoSuchAlgorithmException if the requested algorithm is
not available in the default provider package or any of the other
provider packages that were searched.  "
      end

      operation 7579163 "getInstance"
	class_operation public return_type class_ref 963611 // KeyFactory
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyFactory object for the specified algorithm from the
specified provider.

@param algorithm the name of the requested key algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the name of the provider.

@return a KeyFactory object for the specified algorithm.

@exception NoSuchAlgorithmException if the algorithm is
not available from the specified provider.

@exception NoSuchProviderException if the provider has not been 
configured.

@exception IllegalArgumentException if the provider name is null
or empty. 

@see Provider "
      end

      operation 7579291 "getInstance"
	class_operation public return_type class_ref 963611 // KeyFactory
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyFactory object for the specified algorithm from the
specified provider. Note: the <code>provider</code> doesn't have 
to be registered. 

@param algorithm the name of the requested key algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the provider.

@return a KeyFactory object for the specified algorithm.

@exception NoSuchAlgorithmException if the algorithm is
not available from the specified provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7579419 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this key factory object.

@return the provider of this key factory object"
      end

      operation 7579547 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the algorithm 
associated with this <tt>KeyFactory</tt>.

@return the name of the algorithm associated with this
<tt>KeyFactory</tt>"
      end

      operation 7579675 "nextSpi"
	private return_type class_ref 963739 // KeyFactorySpi
	nparams 1
	  param inout name "oldSpi" type class_ref 963739 // KeyFactorySpi
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the active KeyFactorySpi of this class and return the next
implementation for failover. If no more implemenations are
available, this method returns null. However, the active spi of
this class is never set to null."
      end

      operation 7579803 "generatePublic"
	public return_type class_ref 962075 // PublicKey
	nparams 1
	  param inout name "keySpec" type class_ref 963867 // KeySpec
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a public key object from the provided key specification
(key material).

@param keySpec the specification (key material) of the public key.

@return the public key.

@exception InvalidKeySpecException if the given key specification
is inappropriate for this key factory to produce a public key."
      end

      operation 7579931 "generatePrivate"
	public return_type class_ref 964123 // PrivateKey
	nparams 1
	  param inout name "keySpec" type class_ref 963867 // KeySpec
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a private key object from the provided key specification
(key material).

@param keySpec the specification (key material) of the private key.

@return the private key.

@exception InvalidKeySpecException if the given key specification
is inappropriate for this key factory to produce a private key."
      end

      operation 7580059 "getKeySpec"
	public explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 961819 // Key
	  param inout name "keySpec" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends KeySpec> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a specification (key material) of the given key object.
<code>keySpec</code> identifies the specification class in which 
the key material should be returned. It could, for example, be
<code>DSAPublicKeySpec.class</code>, to indicate that the
key material should be returned in an instance of the 
<code>DSAPublicKeySpec</code> class.

@param key the key.

@param keySpec the specification class in which 
the key material should be returned.

@return the underlying key specification (key material) in an instance
of the requested specification class.

@exception InvalidKeySpecException if the requested key specification is
inappropriate for the given key, or the given key cannot be processed
(e.g., the given key has an unrecognized algorithm or format)."
      end

      operation 7580187 "translateKey"
	public return_type class_ref 961819 // Key
	nparams 1
	  param inout name "key" type class_ref 961819 // Key
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates a key object, whose provider may be unknown or potentially
untrusted, into a corresponding key object of this key factory.

@param key the key whose provider is unknown or untrusted.

@return the translated key.

@exception InvalidKeyException if the given key cannot be processed
by this key factory."
      end
    end

    class 963739 "KeyFactorySpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>KeyFactory</code> class.
All the abstract methods in this class must be implemented by each 
cryptographic service provider who wishes to supply the implementation
of a key factory for a particular algorithm.

<P> Key factories are used to convert <I>keys</I> (opaque
cryptographic keys of type <code>Key</code>) into <I>key specifications</I>
(transparent representations of the underlying key material), and vice
versa.

<P> Key factories are bi-directional. That is, they allow you to build an
opaque key object from a given key specification (key material), or to
retrieve the underlying key material of a key object in a suitable format.

<P> Multiple compatible key specifications may exist for the same key.
For example, a DSA public key may be specified using
<code>DSAPublicKeySpec</code> or
<code>X509EncodedKeySpec</code>. A key factory can be used to translate
between compatible key specifications.

<P> A provider should document all the key specifications supported by its
key factory.

@author Jan Luehe

@version 1.12, 05/05/04

@see KeyFactory
@see Key
@see PublicKey
@see PrivateKey
@see java.security.spec.KeySpec
@see java.security.spec.DSAPublicKeySpec
@see java.security.spec.X509EncodedKeySpec

@since 1.2"
      operation 7580315 "engineGeneratePublic"
	abstract protected return_type class_ref 962075 // PublicKey
	nparams 1
	  param inout name "keySpec" type class_ref 963867 // KeySpec
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a public key object from the provided key
specification (key material).

@param keySpec the specification (key material) of the public key.

@return the public key.

@exception InvalidKeySpecException if the given key specification
is inappropriate for this key factory to produce a public key."
      end

      operation 7580443 "engineGeneratePrivate"
	abstract protected return_type class_ref 964123 // PrivateKey
	nparams 1
	  param inout name "keySpec" type class_ref 963867 // KeySpec
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a private key object from the provided key
specification (key material).

@param keySpec the specification (key material) of the private key.

@return the private key.

@exception InvalidKeySpecException if the given key specification
is inappropriate for this key factory to produce a private key."
      end

      operation 7580571 "engineGetKeySpec"
	abstract protected explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 961819 // Key
	  param inout name "keySpec" type class_ref 164635 // Class
	nexceptions 1
	  exception class_ref 963995 // InvalidKeySpecException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends KeySpec> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a specification (key material) of the given key
object.
<code>keySpec</code> identifies the specification class in which 
the key material should be returned. It could, for example, be
<code>DSAPublicKeySpec.class</code>, to indicate that the
key material should be returned in an instance of the 
<code>DSAPublicKeySpec</code> class.

@param key the key.

@param keySpec the specification class in which 
the key material should be returned.

@return the underlying key specification (key material) in an instance
of the requested specification class.

@exception InvalidKeySpecException if the requested key specification is
inappropriate for the given key, or the given key cannot be dealt with
(e.g., the given key has an unrecognized format)."
      end

      operation 7580699 "engineTranslateKey"
	abstract protected return_type class_ref 961819 // Key
	nparams 1
	  param inout name "key" type class_ref 961819 // Key
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates a key object, whose provider may be unknown or
potentially untrusted, into a corresponding key object of this key
factory.

@param key the key whose provider is unknown or untrusted.

@return the translated key.

@exception InvalidKeyException if the given key cannot be processed
by this key factory."
      end
    end

    class 964123 "PrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>A private key. This interface contains no methods or constants.
It merely serves to group (and provide type safety for) all private key
interfaces.

Note: The specialized private key interfaces extend this interface.
See, for example, the DSAPrivateKey interface in
<code>java.security.interfaces</code>.

@see Key
@see PublicKey
@see Certificate
@see Signature#initVerify
@see java.security.interfaces.DSAPrivateKey
@see java.security.interfaces.RSAPrivateKey
@see java.security.interfaces.RSAPrivateCrtKey

@version 1.29 03/12/19
@author Benjamin Renaud
@author Josh Bloch"
      classrelation 1878427 // <generalisation>
	relation 1878427 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1878427 // <generalisation>
	  b parent class_ref 961819 // Key
      end

      attribute 2846875 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value "=  6034044314589513430L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Declare serialVersionUID to be compatible with JDK1.1
 
The class fingerprint that is set to indicate serialization
compatibility with a previous version of the class.
"
      end
    end

    class 964251 "KeyPair"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is a simple holder for a key pair (a public key and a
private key). It does not enforce any security, and, when initialized,
should be treated like a PrivateKey.

@see PublicKey
@see PrivateKey

@version 1.15 03/12/19
@author Benjamin Renaud"
      classrelation 1871515 // <realization>
	relation 1871515 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1871515 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2842267 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7565189502268009837L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1871643 // privateKey (<unidirectional association>)
	relation 1871643 --->
	  a role_name "privateKey" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1871643 // privateKey (<unidirectional association>)
	  b parent class_ref 964123 // PrivateKey
      end

      classrelation 1871771 // publicKey (<unidirectional association>)
	relation 1871771 --->
	  a role_name "publicKey" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1871771 // publicKey (<unidirectional association>)
	  b parent class_ref 962075 // PublicKey
      end

      operation 7581339 "KeyPair"
	public explicit_return_type ""
	nparams 2
	  param inout name "publicKey" type class_ref 962075 // PublicKey
	  param inout name "privateKey" type class_ref 964123 // PrivateKey
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a key pair from the given public key and private key.

<p>Note that this constructor only stores references to the public
and private key components in the generated key pair. This is safe,
because <code>Key</code> objects are immutable.

@param publicKey the public key.

@param privateKey the private key."
      end

      operation 7581467 "getPublic"
	public return_type class_ref 962075 // PublicKey
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to the public key component of this key pair.

@return a reference to the public key."
      end

      operation 7581595 "getPrivate"
	public return_type class_ref 964123 // PrivateKey
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to the private key component of this key pair.

@return a reference to the private key."
      end
    end

    class 964379 "KeyPairGenerator"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The KeyPairGenerator class is used to generate pairs of
public and private keys. Key pair generators are constructed using the
<code>getInstance</code> factory methods (static methods that
return instances of a given class).

<p>A Key pair generator for a particular algorithm creates a public/private
key pair that can be used with this algorithm. It also associates
algorithm-specific parameters with each of the generated keys.

<p>There are two ways to generate a key pair: in an algorithm-independent
manner, and in an algorithm-specific manner.
The only difference between the two is the initialization of the object:

<ul>
<li><b>Algorithm-Independent Initialization</b>
<p>All key pair generators share the concepts of a keysize and a
source of randomness. The keysize is interpreted differently for different
algorithms (e.g., in the case of the <i>DSA</i> algorithm, the keysize 
corresponds to the length of the modulus).
There is an 
{@link #initialize(int, java.security.SecureRandom) initialize}
method in this KeyPairGenerator class that takes these two universally
shared types of arguments. There is also one that takes just a
<code>keysize</code> argument, and uses the <code>SecureRandom</code>
implementation of the highest-priority installed provider as the source
of randomness. (If none of the installed providers supply an implementation
of <code>SecureRandom</code>, a system-provided source of randomness is
used.)

<p>Since no other parameters are specified when you call the above
algorithm-independent <code>initialize</code> methods, it is up to the
provider what to do about the algorithm-specific parameters (if any) to be
associated with each of the keys.

<p>If the algorithm is the <i>DSA</i> algorithm, and the keysize (modulus
size) is 512, 768, or 1024, then the <i>Sun</i> provider uses a set of
precomputed values for the <code>p</code>, <code>q</code>, and
<code>g</code> parameters. If the modulus size is not one of the above
values, the <i>Sun</i> provider creates a new set of parameters. Other
providers might have precomputed parameter sets for more than just the
three modulus sizes mentioned above. Still others might not have a list of
precomputed parameters at all and instead always create new parameter sets.
<p>

<li><b>Algorithm-Specific Initialization</b>
<p>For situations where a set of algorithm-specific parameters already
exists (e.g., so-called <i>community parameters</i> in DSA), there are two
{@link #initialize(java.security.spec.AlgorithmParameterSpec)
initialize} methods that have an <code>AlgorithmParameterSpec</code>
argument. One also has a <code>SecureRandom</code> argument, while the
the other uses the <code>SecureRandom</code>
implementation of the highest-priority installed provider as the source
of randomness. (If none of the installed providers supply an implementation
of <code>SecureRandom</code>, a system-provided source of randomness is
used.)
</ul>

<p>In case the client does not explicitly initialize the KeyPairGenerator
(via a call to an <code>initialize</code> method), each provider must
supply (and document) a default initialization.
For example, the <i>Sun</i> provider uses a default modulus size (keysize)
of 1024 bits.

<p>Note that this class is abstract and extends from
<code>KeyPairGeneratorSpi</code> for historical reasons.
Application developers should only take notice of the methods defined in
this <code>KeyPairGenerator</code> class; all the methods in
the superclass are intended for cryptographic service providers who wish to
supply their own implementations of key pair generators.

@author Benjamin Renaud

@version 1.56, 01/28/04

@see java.security.spec.AlgorithmParameterSpec"
      classrelation 1871899 // <generalisation>
	relation 1871899 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1871899 // <generalisation>
	  b parent class_ref 964507 // KeyPairGeneratorSpi
      end

      attribute 2842395 "algorithm"
	const_attribute private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1872027 // provider (<unidirectional association>)
	relation 1872027 --->
	  a role_name "provider" package
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1872027 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      operation 7582107 "KeyPairGenerator"
	protected explicit_return_type ""
	nparams 1
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a KeyPairGenerator object for the specified algorithm.

@param algorithm the standard string name of the algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names."
      end

      operation 7582235 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the standard name of the algorithm for this key pair generator.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return the standard string name of the algorithm. "
      end

      operation 7582363 "getInstance"
	class_operation private return_type class_ref 964379 // KeyPairGenerator
	nparams 2
	  param inout name "instance" explicit_type "Instance"
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7582491 "getInstance"
	class_operation public return_type class_ref 964379 // KeyPairGenerator
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyPairGenerator object that implements the specified digest
algorithm. If the default provider package
provides an implementation of the requested digest algorithm,
an instance of KeyPairGenerator containing that implementation is
returned.
If the algorithm is not available in the default 
package, other packages are searched.

@param algorithm the standard string name of the algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return the new KeyPairGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the environment.  "
      end

      operation 7582619 "getInstance"
	class_operation public return_type class_ref 964379 // KeyPairGenerator
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyPairGenerator object implementing the specified
algorithm, as supplied from the specified provider, 
if such an algorithm is available from the provider.

@param algorithm the standard string name of the algorithm.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the string name of the provider.

@return the new KeyPairGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available from the provider.

@exception NoSuchProviderException if the provider is not
available in the environment.

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider "
      end

      operation 7582747 "getInstance"
	class_operation public return_type class_ref 964379 // KeyPairGenerator
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a KeyPairGenerator object implementing the specified
algorithm, as supplied from the specified provider, 
if such an algorithm is available from the provider.
Note: the <code>provider</code> doesn't have to be registered.

@param algorithm the standard string name of the algorithm.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the provider.

@return the new KeyPairGenerator object.

@exception NoSuchAlgorithmException if the algorithm is
not available from the provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7582875 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this key pair generator object.

@return the provider of this key pair generator object"
      end

      operation 7583003 "disableFailover"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7583131 "initialize"
	public explicit_return_type "void"
	nparams 1
	  param in name "keysize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator for a certain keysize using
a default parameter set and the <code>SecureRandom</code>
implementation of the highest-priority installed provider as the source
of randomness.
(If none of the installed providers supply an implementation of
<code>SecureRandom</code>, a system-provided source of randomness is
used.)

@param keysize the keysize. This is an
algorithm-specific metric, such as modulus length, specified in
number of bits.

@exception InvalidParameterException if the <code>keysize</code> is not
supported by this KeyPairGenerator object."
      end

      operation 7583259 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "random" type class_ref 960155 // SecureRandom
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator for a certain keysize with
the given source of randomness (and a default parameter set).

@param keysize the keysize. This is an
algorithm-specific metric, such as modulus length, specified in
number of bits.
@param random the source of randomness.

@exception InvalidParameterException if the <code>keysize</code> is not
supported by this KeyPairGenerator object.

@since 1.2"
      end

      operation 7583387 "initialize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator using the specified parameter 
set and the <code>SecureRandom</code>
implementation of the highest-priority installed provider as the source
of randomness.
(If none of the installed providers supply an implementation of
<code>SecureRandom</code>, a system-provided source of randomness is
used.).

<p>This concrete method has been added to this previously-defined
abstract class.
This method calls the KeyPairGeneratorSpi 
{@link KeyPairGeneratorSpi#initialize(
java.security.spec.AlgorithmParameterSpec,
java.security.SecureRandom) initialize} method, 
passing it <code>params</code> and a source of randomness (obtained
from the highest-priority installed provider or system-provided if none
of the installed providers supply one).
That <code>initialize</code> method always throws an
UnsupportedOperationException if it is not overridden by the provider.

@param params the parameter set used to generate the keys.

@exception InvalidAlgorithmParameterException if the given parameters
are inappropriate for this key pair generator.

@since 1.2"
      end

      operation 7583515 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator with the given parameter 
set and source of randomness.

<p>This concrete method has been added to this previously-defined
abstract class.
This method calls the KeyPairGeneratorSpi {@link 
KeyPairGeneratorSpi#initialize(
java.security.spec.AlgorithmParameterSpec,
java.security.SecureRandom) initialize} method, 
passing it <code>params</code> and <code>random</code>.
That <code>initialize</code>
method always throws an
UnsupportedOperationException if it is not overridden by the provider.

@param params the parameter set used to generate the keys.
@param random the source of randomness.

@exception InvalidAlgorithmParameterException if the given parameters
are inappropriate for this key pair generator.

@since 1.2"
      end

      operation 7583643 "genKeyPair"
	public return_type class_ref 964251 // KeyPair
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a key pair.

<p>If this KeyPairGenerator has not been initialized explicitly,
provider-specific defaults will be used for the size and other
(algorithm-specific) values of the generated keys.

<p>This will generate a new key pair every time it is called.

<p>This method is functionally equivalent to 
{@link #generateKeyPair() generateKeyPair}.

@return the generated key pair

@since 1.2"
      end

      operation 7583771 "generateKeyPair"
	public return_type class_ref 964251 // KeyPair
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a key pair.

<p>If this KeyPairGenerator has not been initialized explicitly,
provider-specific defaults will be used for the size and other
(algorithm-specific) values of the generated keys.

<p>This will generate a new key pair every time it is called.

<p>This method is functionally equivalent to 
{@link #genKeyPair() genKeyPair}.

@return the generated key pair"
      end

      class 964635 "Delegate"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1872155 // <generalisation>
	  relation 1872155 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1872155 // <generalisation>
	    b parent class_ref 964379 // KeyPairGenerator
	end

	classrelation 1872283 // spi (<unidirectional association>)
	  relation 1872283 --->
	    a role_name "spi" volatile private
	      comment " The provider implementation (delegate)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1872283 // spi (<unidirectional association>)
	    b parent class_ref 964507 // KeyPairGeneratorSpi
	end

	attribute 2842523 "lock"
	  const_attribute private explicit_type "Object"
	  init_value "=  new Object()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1872411 // serviceIterator (<unidirectional association>)
	  relation 1872411 --->
	    a role_name "serviceIterator" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Service> ${name}${value};
"
	      classrelation_ref 1872411 // serviceIterator (<unidirectional association>)
	    b parent class_ref 135323 // Iterator
	end

	attribute 2842651 "I_NONE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2842779 "I_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2842907 "I_PARAMS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2843035 "initType"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2843163 "initKeySize"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1872539 // initParams (<unidirectional association>)
	  relation 1872539 --->
	    a role_name "initParams" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1872539 // initParams (<unidirectional association>)
	    b parent class_ref 960283 // AlgorithmParameterSpec
	end

	classrelation 1872667 // initRandom (<unidirectional association>)
	  relation 1872667 --->
	    a role_name "initRandom" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1872667 // initRandom (<unidirectional association>)
	    b parent class_ref 960155 // SecureRandom
	end

	operation 7583899 "Delegate"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "spi" type class_ref 964507 // KeyPairGeneratorSpi
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " constructor"
	end

	operation 7584027 "Delegate"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "instance" explicit_type "Instance"
	    param inout name "serviceIterator" type class_ref 135323 // Iterator
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<Service> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7584155 "nextSpi"
	  private return_type class_ref 964507 // KeyPairGeneratorSpi
	  nparams 2
	    param inout name "oldSpi" type class_ref 964507 // KeyPairGeneratorSpi
	    param inout name "reinit" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Update the active spi of this class and return the next
implementation for failover. If no more implemenations are
available, this method returns null. However, the active spi of
this class is never set to null."
	end

	operation 7584283 "disableFailover"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7584411 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "keysize" explicit_type "int"
	    param inout name "random" type class_ref 960155 // SecureRandom
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " engine method"
	end

	operation 7584539 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	    param inout name "random" type class_ref 960155 // SecureRandom
	  nexceptions 1
	    exception class_ref 960411 // InvalidAlgorithmParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " engine method"
	end

	operation 7584667 "generateKeyPair"
	  public return_type class_ref 964251 // KeyPair
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " engine method"
	end
      end
    end

    class 964507 "KeyPairGeneratorSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>KeyPairGenerator</code> class, which is used to generate
pairs of public and private keys.

<p> All the abstract methods in this class must be implemented by each
cryptographic service provider who wishes to supply the implementation
of a key pair generator for a particular algorithm.

<p> In case the client does not explicitly initialize the KeyPairGenerator
(via a call to an <code>initialize</code> method), each provider must
supply (and document) a default initialization.
For example, the <i>Sun</i> provider uses a default modulus size (keysize)
of 1024 bits.

@author Benjamin Renaud

@version 1.14, 12/19/03

@see KeyPairGenerator
@see java.security.spec.AlgorithmParameterSpec"
      operation 7581723 "initialize"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "random" type class_ref 960155 // SecureRandom
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator for a certain keysize, using
the default parameter set.

@param keysize the keysize. This is an
algorithm-specific metric, such as modulus length, specified in
number of bits.

@param random the source of randomness for this generator.

@exception InvalidParameterException if the <code>keysize</code> is not
supported by this KeyPairGeneratorSpi object."
      end

      operation 7581851 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator using the specified parameter
set and user-provided source of randomness.

<p>This concrete method has been added to this previously-defined
abstract class. (For backwards compatibility, it cannot be abstract.)
It may be overridden by a provider to initialize the key pair 
generator. Such an override
is expected to throw an InvalidAlgorithmParameterException if
a parameter is inappropriate for this key pair generator.
If this method is not overridden, it always throws an
UnsupportedOperationException.

@param params the parameter set used to generate the keys.

@param random the source of randomness for this generator.

@exception InvalidAlgorithmParameterException if the given parameters
are inappropriate for this key pair generator.

@since 1.2"
      end

      operation 7581979 "generateKeyPair"
	abstract public return_type class_ref 964251 // KeyPair
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a key pair. Unless an initialization method is called
using a KeyPairGenerator interface, algorithm-specific defaults
will be used. This will generate a new key pair every time it
is called.

@return the newly generated <tt>KeyPair</tt>"
      end
    end

    class 964763 "KeyRep"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Standardized representation for serialized Key objects.

<p>

Note that a serialized Key may contain sensitive information
which should not be exposed in untrusted environments.  See the
<a href=\"../../../guide/serialization/spec/security.html\">
Security Appendix</a>
of the Serialization Specification for more information.

@see Key
@see KeyFactory
@see javax.crypto.spec.SecretKeySpec
@see java.security.spec.X509EncodedKeySpec
@see java.security.spec.PKCS8EncodedKeySpec

@version 1.7, 04/04/20
@since 1.5"
      classrelation 1872795 // <realization>
	relation 1872795 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1872795 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2843291 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4757683898830641853L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 964891 "Type"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2843419 "SECRET"
	  public type class_ref 964891 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Type for secret keys. "
	end

	attribute 2843547 "PUBLIC"
	  public type class_ref 964891 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Type for public keys. "
	end

	attribute 2843675 "PRIVATE"
	  public type class_ref 964891 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Type for private keys. "
	end
      end

      attribute 2843803 "PKCS8"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"PKCS#8\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2843931 "X509"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"X.509\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2844059 "RAW"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"RAW\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1872923 // type (<unidirectional association>)
	relation 1872923 --->
	  a role_name "type" private
	    comment "
Either one of Type.SECRET, Type.PUBLIC, or Type.PRIVATE

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1872923 // type (<unidirectional association>)
	  b parent class_ref 964891 // Type
      end

      attribute 2844187 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The Key algorithm

@serial
"
      end

      attribute 2844315 "format"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The Key encoding format

@serial
"
      end

      attribute 2844443 "encoded"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The encoded Key bytes

@serial
"
      end

      operation 7584795 "KeyRep"
	public explicit_return_type ""
	nparams 4
	  param inout name "type" type class_ref 964891 // Type
	  param in name "algorithm" explicit_type "String"
	  param in name "format" explicit_type "String"
	  param in name "encoded" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct the alternate Key class.

<p>

@param type either one of Type.SECRET, Type.PUBLIC, or Type.PRIVATE
@param algorithm the algorithm returned from
		<code>Key.getAlgorithm()</code>
@param format the encoding format returned from
		<code>Key.getFormat()</code>
@param encoded the encoded bytes returned from
		<code>Key.getEncoded()</code>

@exception NullPointerException
		if type is <code>null</code>,
		if algorithm is <code>null</code>,
		if format is <code>null</code>,
		or if encoded is <code>null</code>"
      end

      operation 7584923 "readResolve"
	protected explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 289307 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolve the Key object.

<p> This method supports three Type/format combinations:
<ul>
<li> Type.SECRET/\"RAW\" - returns a SecretKeySpec object
constructed using encoded key bytes and algorithm
<li> Type.PUBLIC/\"X.509\" - gets a KeyFactory instance for
the key algorithm, constructs an X509EncodedKeySpec with the
encoded key bytes, and generates a public key from the spec
<li> Type.PRIVATE/\"PKCS#8\" - gets a KeyFactory instance for
the key algorithm, constructs a PKCS8EncodedKeySpec with the
encoded key bytes, and generates a private key from the spec
</ul>

<p>

@return the resolved Key object

@exception NotSerializableException if the Type/format
	combination is unrecognized, if the algorithm, key format, or
	encoded key bytes are unrecognized/invalid, of if the
	resolution of the key fails for any reason"
      end
    end

    class 965019 "KeyStoreSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>KeyStore</code> class.
All the abstract methods in this class must be implemented by each
cryptographic service provider who wishes to supply the implementation
of a keystore for a particular keystore type.

@author Jan Luehe

@version 1.18, 05/25/04

@see KeyStore

@since 1.2"
      operation 7593115 "engineGetKey"
	abstract public return_type class_ref 961819 // Key
	nparams 2
	  param in name "alias" explicit_type "String"
	  param in name "password" explicit_type "char"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966555 // UnrecoverableKeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the key associated with the given alias, using the given
password to recover it.  The key must have been associated with
the alias by a call to <code>setKeyEntry</code>,
or by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code> or <code>SecretKeyEntry</code>.

@param alias the alias name
@param password the password for recovering the key

@return the requested key, or null if the given alias does not exist
or does not identify a key-related entry.

@exception NoSuchAlgorithmException if the algorithm for recovering the
key cannot be found
@exception UnrecoverableKeyException if the key cannot be recovered
(e.g., the given password is wrong)."
      end

      operation 7593243 "engineGetCertificateChain"
	abstract public return_type class_ref 961947 // Certificate
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain associated with the given alias.
The certificate chain must have been associated with the alias
by a call to <code>setKeyEntry</code>,
or by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>.

@param alias the alias name

@return the certificate chain (ordered with the user's certificate first
and the root certificate authority last), or null if the given alias
does not exist or does not contain a certificate chain"
      end

      operation 7593371 "engineGetCertificate"
	abstract public return_type class_ref 961947 // Certificate
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate associated with the given alias.

<p> If the given alias name identifies an entry
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
then the trusted certificate contained in that entry is returned.

<p> If the given alias name identifies an entry
created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>,
then the first element of the certificate chain in that entry
(if a chain exists) is returned.

@param alias the alias name

@return the certificate, or null if the given alias does not exist or
does not contain a certificate."
      end

      operation 7593499 "engineGetCreationDate"
	abstract public return_type class_ref 139163 // Date
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the creation date of the entry identified by the given alias.

@param alias the alias name

@return the creation date of this entry, or null if the given alias does
not exist"
      end

      operation 7593627 "engineSetKeyEntry"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "alias" explicit_type "String"
	  param inout name "key" type class_ref 961819 // Key
	  param in name "password" explicit_type "char"
	  param inout name "chain" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given key to the given alias, protecting it with the given
password.

<p>If the given key is of type <code>java.security.PrivateKey</code>,
it must be accompanied by a certificate chain certifying the
corresponding public key.

<p>If the given alias already exists, the keystore information
associated with it is overridden by the given key (and possibly
certificate chain).

@param alias the alias name
@param key the key to be associated with the alias
@param password the password to protect the key
@param chain the certificate chain for the corresponding public
key (only required if the given key is of type
<code>java.security.PrivateKey</code>).

@exception KeyStoreException if the given key cannot be protected, or
this operation fails for some other reason"
      end

      operation 7593755 "engineSetKeyEntry"
	abstract public explicit_return_type "void"
	nparams 3
	  param in name "alias" explicit_type "String"
	  param in name "key" explicit_type "byte"
	  param inout name "chain" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given key (that has already been protected) to the given
alias.

<p>If the protected key is of type
<code>java.security.PrivateKey</code>,
it must be accompanied by a certificate chain certifying the
corresponding public key.

<p>If the given alias already exists, the keystore information
associated with it is overridden by the given key (and possibly
certificate chain).

@param alias the alias name
@param key the key (in protected format) to be associated with the alias
@param chain the certificate chain for the corresponding public
key (only useful if the protected key is of type
<code>java.security.PrivateKey</code>).

@exception KeyStoreException if this operation fails."
      end

      operation 7593883 "engineSetCertificateEntry"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "cert" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns the given certificate to the given alias.

<p> If the given alias identifies an existing entry
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
the trusted certificate in the existing entry
is overridden by the given certificate.

@param alias the alias name
@param cert the certificate

@exception KeyStoreException if the given alias already exists and does
not identify an entry containing a trusted certificate,
or this operation fails for some other reason."
      end

      operation 7594011 "engineDeleteEntry"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "alias" explicit_type "String"
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the entry identified by the given alias from this keystore.

@param alias the alias name

@exception KeyStoreException if the entry cannot be removed."
      end

      operation 7594139 "engineAliases"
	abstract public return_type class_ref 144411 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lists all the alias names of this keystore.

@return enumeration of the alias names"
      end

      operation 7594267 "engineContainsAlias"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the given alias exists in this keystore.

@param alias the alias name

@return true if the alias exists, false otherwise"
      end

      operation 7594395 "engineSize"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the number of entries in this keystore.

@return the number of entries in this keystore"
      end

      operation 7594523 "engineIsKeyEntry"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the entry identified by the given alias
was created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code> or a <code>SecretKeyEntry</code>.

@param alias the alias for the keystore entry to be checked

@return true if the entry identified by the given alias is a
key-related, false otherwise."
      end

      operation 7594651 "engineIsCertificateEntry"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "alias" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the entry identified by the given alias
was created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>.

@param alias the alias for the keystore entry to be checked

@return true if the entry identified by the given alias contains a
trusted certificate, false otherwise."
      end

      operation 7594779 "engineGetCertificateAlias"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "cert" type class_ref 961947 // Certificate
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the (alias) name of the first keystore entry whose certificate
matches the given certificate.

<p>This method attempts to match the given certificate with each
keystore entry. If the entry being considered was
created by a call to <code>setCertificateEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>TrustedCertificateEntry</code>,
then the given certificate is compared to that entry's certificate.

<p> If the entry being considered was
created by a call to <code>setKeyEntry</code>,
or created by a call to <code>setEntry</code> with a
<code>PrivateKeyEntry</code>,
then the given certificate is compared to the first
element of that entry's certificate chain.

@param cert the certificate to match with.

@return the alias name of the first entry with matching certificate,
or null if no such entry exists in this keystore."
      end

      operation 7594907 "engineStore"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 183835 // OutputStream
	  param in name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this keystore to the given output stream, and protects its
integrity with the given password.

@param stream the output stream to which this keystore is written.
@param password the password to generate the keystore integrity check

@exception IOException if there was an I/O problem with data
@exception NoSuchAlgorithmException if the appropriate data integrity
algorithm could not be found
@exception CertificateException if any of the certificates included in
the keystore data could not be stored"
      end

      operation 7595035 "engineStore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 965147 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores this keystore using the given
<code>KeyStore.LoadStoreParmeter</code>.

@param param the <code>KeyStore.LoadStoreParmeter</code>
		that specifies how to store the keystore,
		which may be <code>null</code>

@exception IllegalArgumentException if the given
		<code>KeyStore.LoadStoreParmeter</code>
		input is not recognized
@exception IOException if there was an I/O problem with data
@exception NoSuchAlgorithmException if the appropriate data integrity
		algorithm could not be found
@exception CertificateException if any of the certificates included in
		the keystore data could not be stored

@since 1.5"
      end

      operation 7595163 "engineLoad"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "stream" type class_ref 179099 // InputStream
	  param in name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the keystore from the given input stream.

<p>A password may be given to unlock the keystore
(e.g. the keystore resides on a hardware token device),
or to check the integrity of the keystore data.
If a password is not given for integrity checking,
then integrity checking is not performed.

@param stream the input stream from which the keystore is loaded,
or <code>null</code>
@param password the password used to check the integrity of
the keystore, the password used to unlock the keystore,
or <code>null</code>

@exception IOException if there is an I/O or format problem with the
keystore data, if a password is required but not given,
or if the given password was incorrect
@exception NoSuchAlgorithmException if the algorithm used to check
the integrity of the keystore cannot be found
@exception CertificateException if any of the certificates in the
keystore could not be loaded"
      end

      operation 7595291 "engineLoad"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 965147 // LoadStoreParameter
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966683 // CertificateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the keystore using the given
<code>KeyStore.LoadStoreParameter</code>.

<p> Note that if this KeyStore has already been loaded, it is
reinitialized and loaded again from the given parameter.

@param param the <code>KeyStore.LoadStoreParameter</code>
		that specifies how to load the keystore,
		which may be <code>null</code>

@exception IllegalArgumentException if the given
		<code>KeyStore.LoadStoreParameter</code>
		input is not recognized
@exception IOException if there is an I/O or format problem with the
		keystore data
@exception NoSuchAlgorithmException if the algorithm used to check
		the integrity of the keystore cannot be found
@exception CertificateException if any of the certificates in the
		keystore could not be loaded

@since 1.5"
      end

      operation 7595419 "engineGetEntry"
	public return_type class_ref 965915 // Entry
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "protParam" type class_ref 965275 // ProtectionParameter
	nexceptions 3
	  exception class_ref 966427 // KeyStoreException
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 966811 // UnrecoverableEntryException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a <code>KeyStore.Entry</code> for the specified alias
with the specified protection parameter.

@param alias get the <code>KeyStore.Entry</code> for this alias
@param protParam the <code>ProtectionParameter</code>
		used to protect the <code>Entry</code>,
		which may be <code>null</code>

@return the <code>KeyStore.Entry</code> for the specified alias,
		or <code>null</code> if there is no such entry

@exception KeyStoreException if the operation failed
@exception NoSuchAlgorithmException if the algorithm for recovering the
		entry cannot be found
@exception UnrecoverableEntryException if the specified
		<code>protParam</code> were insufficient or invalid

@since 1.5"
      end

      operation 7595547 "engineSetEntry"
	public explicit_return_type "void"
	nparams 3
	  param in name "alias" explicit_type "String"
	  param inout name "entry" type class_ref 965915 // Entry
	  param inout name "protParam" type class_ref 965275 // ProtectionParameter
	nexceptions 1
	  exception class_ref 966427 // KeyStoreException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Saves a <code>KeyStore.Entry</code> under the specified alias.
The specified protection parameter is used to protect the
<code>Entry</code>.

<p> If an entry already exists for the specified alias,
it is overridden.

@param alias save the <code>KeyStore.Entry</code> under this alias
@param entry the <code>Entry</code> to save
@param protParam the <code>ProtectionParameter</code>
		used to protect the <code>Entry</code>,
		which may be <code>null</code>

@exception KeyStoreException if this operation fails

@since 1.5"
      end

      operation 7595675 "engineEntryInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "alias" explicit_type "String"
	  param inout name "entryClass" type class_ref 164635 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends KeyStore.Entry> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the keystore <code>Entry</code> for the specified
<code>alias</code> is an instance or subclass of the specified
<code>entryClass</code>.

@param alias the alias name
@param entryClass the entry class

@return true if the keystore <code>Entry</code> for the specified
		<code>alias</code> is an instance or subclass of the
		specified <code>entryClass</code>, false otherwise

@since 1.5"
      end
    end

    class 966427 "KeyStoreException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the generic KeyStore exception. 

@author Jan Luehe

@version 1.12, 12/19/03

@since 1.2"
      classrelation 1875739 // <generalisation>
	relation 1875739 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1875739 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2845467 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -1119353179322377262L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7592603 "KeyStoreException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyStoreException with no detail message.  (A
detail message is a String that describes this particular
exception.)  "
      end

      operation 7592731 "KeyStoreException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a KeyStoreException with the specified detail
message.  (A detail message is a String that describes this
particular exception.)

@param msg the detail message.  "
      end

      operation 7592859 "KeyStoreException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyStoreException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7592987 "KeyStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyStoreException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 966555 "UnrecoverableKeyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown if a key in the keystore cannot be recovered.

@version 1.10, 12/19/03

@since 1.2"
      classrelation 1883291 // <generalisation>
	relation 1883291 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1883291 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2851867 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  7275063078190151277L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7626779 "UnrecoverableKeyException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnrecoverableKeyException with no detail message."
      end

      operation 7626907 "UnrecoverableKeyException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnrecoverableKeyException with the specified detail
message, which provides more information about why this exception
has been thrown.

@param msg the detail message."
      end
    end

    class 966811 "UnrecoverableEntryException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown if an entry in the keystore cannot be recovered.

@version 1.2, 12/19/03

@since 1.5"
      classrelation 1883163 // <generalisation>
	relation 1883163 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1883163 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2851739 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4527142945246286535L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7626523 "UnrecoverableEntryException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnrecoverableEntryException with no detail message."
      end

      operation 7626651 "UnrecoverableEntryException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnrecoverableEntryException with the specified detail
message, which provides more information about why this exception
has been thrown.

@param msg the detail message."
      end
    end

    class 967323 "MessageDigestSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>MessageDigest</code> class, which provides the functionality
of a message digest algorithm, such as MD5 or SHA. Message digests are
secure one-way hash functions that take arbitrary-sized data and output a
fixed-length hash value.

<p> All the abstract methods in this class must be implemented by a
cryptographic service provider who wishes to supply the implementation
of a particular message digest algorithm.

<p> Implementations are free to implement the Cloneable interface.

@author Benjamin Renaud 

@version 1.15, 12/19/03

@see MessageDigest"
      operation 7595803 "engineGetDigestLength"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the digest length in bytes.

<p>This concrete method has been added to this previously-defined
abstract class. (For backwards compatibility, it cannot be abstract.)

<p>The default behavior is to return 0.

<p>This method may be overridden by a provider to return the digest
length.

@return the digest length in bytes.

@since 1.2"
      end

      operation 7595931 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "input" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the digest using the specified byte.

@param input the byte to use for the update."
      end

      operation 7596059 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 3
	  param in name "input" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the digest using the specified array of bytes,    
starting at the specified offset.

@param input the array of bytes to use for the update.

@param offset the offset to start from in the array of bytes.

@param len the number of bytes to use, starting at 
<code>offset</code>."
      end

      operation 7596187 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the digest using the specified ByteBuffer. The digest is
updated using the <code>input.remaining()</code> bytes starting
at <code>input.position()</code>.
Upon return, the buffer's position will be equal to its limit;
its limit will not have changed.

@param input the ByteBuffer
@since 1.5"
      end

      operation 7596315 "engineDigest"
	abstract protected explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completes the hash computation by performing final
operations such as padding. Once <code>engineDigest</code> has 
been called, the engine should be reset (see 
{@link #engineReset() engineReset}).  
Resetting is the responsibility of the
engine implementor.

@return the array of bytes for the resulting hash value.  "
      end

      operation 7596443 "engineDigest"
	protected explicit_return_type "int"
	nparams 3
	  param in name "buf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 962459 // DigestException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completes the hash computation by performing final
operations such as padding. Once <code>engineDigest</code> has
been called, the engine should be reset (see 
{@link #engineReset() engineReset}).  
Resetting is the responsibility of the
engine implementor.

This method should be abstract, but we leave it concrete for
binary compatibility.  Knowledgeable providers should override this
method.

@param buf the output buffer in which to store the digest

@param offset offset to start from in the output buffer

@param len number of bytes within buf allotted for the digest.
Both this default implementation and the SUN provider do not
return partial digests.  The presence of this parameter is solely
for consistency in our API's.  If the value of this parameter is less
than the actual digest length, the method will throw a DigestException.
This parameter is ignored if its value is greater than or equal to
the actual digest length.

@return the length of the digest stored in the output buffer.

@exception DigestException if an error occurs.

@since 1.2"
      end

      operation 7596571 "engineReset"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets the digest for further use."
      end

      operation 7596699 "clone"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 383643 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone if the implementation is cloneable.    

@return a clone if the implementation is cloneable.

@exception CloneNotSupportedException if this is called on an
implementation that does not support <code>Cloneable</code>."
      end
    end

    class 967579 "PermissionsEnumerator"
      visibility package 
      nactuals 4
      actual class class_ref 144411 // Enumeration
        rank 0 value class_ref 285211 // Permission
      actual class class_ref 144411 // Enumeration
        rank 1 explicit_value ""
      actual class class_ref 144411 // Enumeration
        rank 2 explicit_value ""
      actual class class_ref 144411 // Enumeration
        rank 3 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1877275 // <realization>
	relation 1877275 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 1877275 // <realization>
	  b parent class_ref 144411 // Enumeration
      end

      classrelation 1877403 // perms (<unidirectional association>)
	relation 1877403 --->
	  a role_name "perms" private
	    comment " all the perms
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PermissionCollection> ${name}${value};
"
	    classrelation_ref 1877403 // perms (<unidirectional association>)
	  b parent class_ref 135323 // Iterator
      end

      classrelation 1877531 // permset (<unidirectional association>)
	relation 1877531 --->
	  a role_name "permset" private
	    comment " the current set
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Permission> ${name}${value};
"
	    classrelation_ref 1877531 // permset (<unidirectional association>)
	  b parent class_ref 144411 // Enumeration
      end

      operation 7602075 "PermissionsEnumerator"
	package explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 135323 // Iterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<PermissionCollection> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7602203 "hasMoreElements"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " No need to synchronize; caller should sync on object as required"
      end

      operation 7602331 "nextElement"
	public return_type class_ref 285211 // Permission
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " No need to synchronize; caller should sync on object as required"
      end

      operation 7602459 "getNextEnumWithMore"
	private return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 967707 "PermissionsHash"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A PermissionsHash stores a homogeneous set of permissions in a hashtable.

@see Permission
@see Permissions

@version 1.58, 05/05/04

@author Roland Schemers

@serial include"
      classrelation 1877659 // <generalisation>
	relation 1877659 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1877659 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 1877787 // <realization>
	relation 1877787 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1877787 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 1877915 // permsMap (<unidirectional association>)
	relation 1877915 --->
	  a role_name "permsMap" private
	    comment "
Key and value are (same) permissions objects.
Not serialized; see serialization section at end of class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1877915 // permsMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 7602587 "PermissionsHash"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty PermissionsHash object."
      end

      operation 7602715 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to the PermissionsHash.

@param permission the Permission object to add."
      end

      operation 7602843 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check and see if this set of permissions implies the permissions 
expressed in \"permission\".

@param permission the Permission object to compare

@return true if \"permission\" is a proper subset of a permission in 
the set, false if not."
      end

      operation 7602971 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Permission> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the Permission objects in the container.

@return an enumeration of all the Permissions."
      end

      attribute 2846619 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -8491988220802933440L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1878043 // serialPersistentFields (<unidirectional association>)
	relation 1878043 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"perms\", Hashtable.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 private Hashtable perms;

@serialField perms java.util.Hashtable
    A table of the Permissions (both key and value are same).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1878043 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 7603099 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Default fields.


Writes the contents of the permsMap field out as a Hashtable for
serialization compatibility with earlier releases."
      end

      operation 7603227 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Hashtable of Permission/Permission and saves them in the 
permsMap field. "
      end
    end

    class 967835 "Policy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is an abstract class for representing the system security
policy for a Java application environment (specifying
which permissions are available for code from various sources).
That is, the security policy is represented by a Policy subclass
providing an implementation of the abstract methods
in this Policy class.

<p>There is only one Policy object in effect at any given time.

<p>The source location for the policy information utilized by the
Policy object is up to the Policy implementation.
The policy configuration may be stored, for example, as a
flat ASCII file, as a serialized binary file of
the Policy class, or as a database.

<p>The currently-installed Policy object can be obtained by
calling the <code>getPolicy</code> method, and it can be
changed by a call to the <code>setPolicy</code> method (by
code with permission to reset the Policy).

<p>The <code>refresh</code> method causes the policy
object to refresh/reload its current configuration.

<p>This is implementation-dependent. For example, if the policy
object stores its policy in configuration files, calling
<code>refresh</code> will cause it to re-read the configuration 
policy files. The refreshed policy may not have an effect on classes
in a particular ProtectionDomain. This is dependent on the Policy
provider's implementation of the 
{@link #implies(ProtectionDomain,Permission) implies}
method and the PermissionCollection caching strategy.

<p>The default Policy implementation can be changed by setting the
value of the \"policy.provider\" security property (in the Java
security properties file) to the fully qualified name of
the desired Policy implementation class.
The Java security properties file is located in the file named
&lt;JAVA_HOME&gt;/lib/security/java.security, where &lt;JAVA_HOME&gt;
refers to the directory where the JDK was installed.

@author Roland Schemers
@author Gary Ellison
@version 1.94, 06/28/04
@see java.security.CodeSource
@see java.security.PermissionCollection
@see java.security.SecureClassLoader"
      classrelation 1878171 // policy (<unidirectional association>)
	relation 1878171 --->
	  a role_name "policy" class_relation private
	    comment " the system-wide policy. 
 package private for AccessControlContext"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878171 // policy (<unidirectional association>)
	  b parent class_ref 967835 // Policy
      end

      attribute 2846747 "debug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "=  Debug.getInstance(\"policy\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1878299 // pdMapping (<unidirectional association>)
	relation 1878299 --->
	  a role_name "pdMapping" private
	    comment " Cache mapping  ProtectionDomain to PermissionCollection
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1878299 // pdMapping (<unidirectional association>)
	  b parent class_ref 159387 // WeakHashMap
      end

      operation 7603355 "isSet"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package private for AccessControlContext "
      end

      operation 7603483 "getPolicy"
	class_operation public return_type class_ref 967835 // Policy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object. This value should not be cached,
as it may be changed by a call to <code>setPolicy</code>.
This method first calls
<code>SecurityManager.checkPermission</code> with a
<code>SecurityPermission(\"getPolicy\")</code> permission
to ensure it's ok to get the Policy object..

@return the installed Policy.

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       getting the Policy object.

@see SecurityManager#checkPermission(Permission)
@see #setPolicy(java.security.Policy)"
      end

      operation 7603611 "getPolicyNoCheck"
	class_operation package return_type class_ref 967835 // Policy
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object, skipping the security check.
Used by SecureClassLoader and getPolicy.

@return the installed Policy.
"
      end

      operation 7603739 "setPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 967835 // Policy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system-wide Policy object. This method first calls
<code>SecurityManager.checkPermission</code> with a
<code>SecurityPermission(\"setPolicy\")</code>
permission to ensure it's ok to set the Policy.

@param p the new system Policy object.

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       setting the Policy.

@see SecurityManager#checkPermission(Permission)
@see #getPolicy()
"
      end

      operation 7603867 "initPolicy"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "p" type class_ref 967835 // Policy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize superclass state such that a legacy provider can
handle queries for itself.

@since 1.4"
      end

      operation 7603995 "getPermissions"
	abstract public return_type class_ref 285467 // PermissionCollection
	nparams 1
	  param inout name "codesource" type class_ref 527259 // CodeSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the global policy and returns a
PermissionCollection object specifying the set of
permissions allowed for code from the specified
code source.

@param codesource the CodeSource associated with the caller.
This encapsulates the original location of the code (where the code
came from) and the public key(s) of its signer.

@return the set of permissions allowed for code from <i>codesource</i>
according to the policy.The returned set of permissions must be 
a new mutable instance and it must support heterogeneous 
Permission types.
"
      end

      operation 7604123 "getPermissions"
	public return_type class_ref 285467 // PermissionCollection
	nparams 1
	  param inout name "domain" type class_ref 526875 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the global policy and returns a
PermissionCollection object specifying the set of
permissions allowed given the characteristics of the 
protection domain.

@param domain the ProtectionDomain associated with the caller.

@return the set of permissions allowed for the <i>domain</i>
according to the policy.The returned set of permissions must be 
a new mutable instance and it must support heterogeneous 
Permission types.

@see java.security.ProtectionDomain
@see java.security.SecureClassLoader
@since 1.4"
      end

      operation 7604251 "addStaticPerms"
	private explicit_return_type "void"
	nparams 2
	  param inout name "perms" type class_ref 285467 // PermissionCollection
	  param inout name "statics" type class_ref 285467 // PermissionCollection
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add static permissions to provided permission collection"
      end

      operation 7604379 "implies"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "domain" type class_ref 526875 // ProtectionDomain
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluates the global policy for the permissions granted to
the ProtectionDomain and tests whether the permission is 
granted.

@param domain the ProtectionDomain to test
@param permission the Permission object to be tested for implication.

@return true if \"permission\" is a proper subset of a permission
granted to this ProtectionDomain.

@see java.security.ProtectionDomain
@since 1.4"
      end

      operation 7604507 "refresh"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refreshes/reloads the policy configuration. The behavior of this method
depends on the implementation. For example, calling <code>refresh</code>
on a file-based policy will cause the file to be re-read.
"
      end
    end

    class 967963 "ProviderException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A runtime exception for Provider exceptions (such as
misconfiguration errors or unrecoverable internal errors), 
which may be subclassed by Providers to
throw specialized, provider-specific runtime errors.

@version 1.16, 12/19/03
@author Benjamin Renaud"
      classrelation 1879323 // <generalisation>
	relation 1879323 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1879323 // <generalisation>
	  b parent class_ref 241051 // RuntimeException
      end

      attribute 2847387 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5256023526693665674L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7606427 "ProviderException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ProviderException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7606555 "ProviderException"
	public explicit_return_type ""
	nparams 1
	  param in name "s" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ProviderException with the specified detail
message. A detail message is a String that describes this
particular exception.  

@param s the detail message.  "
      end

      operation 7606683 "ProviderException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>ProviderException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7606811 "ProviderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>ProviderException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 968091 "SecureRandomSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>SecureRandom</code> class.
All the abstract methods in this class must be implemented by each
service provider who wishes to supply the implementation
of a cryptographically strong pseudo-random number generator.

@version 1.11, 12/19/03

@see SecureRandom
@since 1.2"
      classrelation 1880219 // <realization>
	relation 1880219 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1880219 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2848411 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -2991854161009191830L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7609371 "engineSetSeed"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "seed" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reseeds this random object. The given seed supplements, rather than
replaces, the existing seed. Thus, repeated calls are guaranteed
never to reduce randomness.

@param seed the seed."
      end

      operation 7609499 "engineNextBytes"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "bytes" explicit_type "byte"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a user-specified number of random bytes.

@param bytes the array to be filled in with random bytes."
      end

      operation 7609627 "engineGenerateSeed"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the given number of seed bytes.  This call may be used to
seed other random number generators.

@param numBytes the number of seed bytes to generate.

@return the seed bytes."
      end
    end

    class 968219 "Security"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>This class centralizes all security properties and common security
methods. One of its primary uses is to manage providers.

@author Benjamin Renaud
@version 1.126, 05/18/04"
      attribute 2848539 "sdebug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "= 
			Debug.getInstance(\"properties\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Are we debugging? -- for developers "
      end

      classrelation 1880347 // props (<unidirectional association>)
	relation 1880347 --->
	  a role_name "props" class_relation private
	    comment " The java.security properties 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1880347 // props (<unidirectional association>)
	  b parent class_ref 154907 // Properties
      end

      class 968347 "ProviderProperty"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2848667 "className"
	  package explicit_type "String"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1880475 // provider (<unidirectional association>)
	  relation 1880475 --->
	    a role_name "provider" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1880475 // provider (<unidirectional association>)
	    b parent class_ref 959643 // Provider
	end
      end

      extra_member 164891 "initialization"
	
	cpp "" ""
	java "  static {
	// doPrivileged here because there are multiple
	// things in initialize that might require privs.
	// (the FileInputStream call and the File.exists call,
	// the securityPropFile call, etc)
	AccessController.doPrivileged(new PrivilegedAction() {
	    public Object run() { 
		initialize();
		return null;
	    }
	});
    }"
	php ""
	python ""
	idl ""
      end

      operation 7609755 "initialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7609883 "initializeStatic"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize to default values, if <java.home>/lib/java.security
is not found."
      end

      operation 7610011 "Security"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Don't let anyone instantiate this. "
      end

      operation 7610139 "securityPropFile"
	class_operation private return_type class_ref 165147 // File
	nparams 1
	  param in name "filename" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7610267 "getProviderProperty"
	class_operation private return_type class_ref 968347 // ProviderProperty
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks up providers, and returns the property (and its associated
provider) mapping the key, if any.
The order in which the providers are looked up is the
provider-preference order, as specificed in the security
properties file."
      end

      operation 7610395 "getProviderProperty"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the property (if any) mapping the key for the given provider."
      end

      operation 7610523 "getAlgorithmProperty"
	class_operation public explicit_return_type "String"
	nparams 2
	  param in name "algName" explicit_type "String"
	  param in name "propName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets a specified property for an algorithm. The algorithm name
should be a standard name. See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.
One possible use is by specialized algorithm parsers, which may map 
classes to algorithms which they understand (much like Key parsers 
do).

@param algName the algorithm name.

@param propName the name of the property to get.

@return the value of the specified property.  

@deprecated This method used to return the value of a proprietary
property in the master file of the \"SUN\" Cryptographic Service
Provider in order to determine how to parse algorithm-specific
parameters. Use the new provider-based and algorithm-independent
<code>AlgorithmParameters</code> and <code>KeyFactory</code> engine
classes (introduced in the Java 2 platform) instead."
      end

      operation 7610651 "insertProviderAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "provider" type class_ref 959643 // Provider
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new provider, at a specified position. The position is
the preference order in which providers are searched for
requested algorithms. Note that it is not guaranteed that this
preference will be respected. The position is 1-based, that is,
1 is most preferred, followed by 2, and so on.

<p>If the given provider is installed at the requested position,
the provider that used to be at that position, and all providers
with a position greater than <code>position</code>, are shifted up
one position (towards the end of the list of installed providers).

<p>A provider cannot be added if it is already installed.

<p>First, if there is a security manager, its
<code>checkSecurityAccess</code> 
method is called with the string
<code>\"insertProvider.\"+provider.getName()</code> 
to see if it's ok to add a new provider. 
If the default implementation of <code>checkSecurityAccess</code> 
is used (i.e., that method is not overriden), then this will result in
a call to the security manager's <code>checkPermission</code> method
with a
<code>SecurityPermission(\"insertProvider.\"+provider.getName())</code>
permission.

@param provider the provider to be added.

@param position the preference position that the caller would
like for this provider.

@return the actual preference position in which the provider was 
added, or -1 if the provider was not added because it is
already installed.

@throws  NullPointerException if provider is null
@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method
         denies access to add a new provider

@see #getProvider
@see #removeProvider 
@see java.security.SecurityPermission"
      end

      operation 7610779 "addProvider"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "provider" type class_ref 959643 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a provider to the next position available.

<p>First, if there is a security manager, its
<code>checkSecurityAccess</code> 
method is called with the string
<code>\"insertProvider.\"+provider.getName()</code> 
to see if it's ok to add a new provider. 
If the default implementation of <code>checkSecurityAccess</code> 
is used (i.e., that method is not overriden), then this will result in
a call to the security manager's <code>checkPermission</code> method
with a
<code>SecurityPermission(\"insertProvider.\"+provider.getName())</code>
permission.

@param provider the provider to be added.

@return the preference position in which the provider was 
added, or -1 if the provider was not added because it is
already installed.

@throws  NullPointerException if provider is null
@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method
         denies access to add a new provider

@see #getProvider
@see #removeProvider
@see java.security.SecurityPermission"
      end

      operation 7610907 "removeProvider"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the provider with the specified name.

<p>When the specified provider is removed, all providers located
at a position greater than where the specified provider was are shifted
down one position (towards the head of the list of installed
providers).

<p>This method returns silently if the provider is not installed or
if name is null.

<p>First, if there is a security manager, its
<code>checkSecurityAccess</code> 
method is called with the string <code>\"removeProvider.\"+name</code> 
to see if it's ok to remove the provider. 
If the default implementation of <code>checkSecurityAccess</code> 
is used (i.e., that method is not overriden), then this will result in
a call to the security manager's <code>checkPermission</code> method
with a <code>SecurityPermission(\"removeProvider.\"+name)</code>
permission.

@param name the name of the provider to remove.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkSecurityAccess}</code> method
         denies
         access to remove the provider

@see #getProvider
@see #addProvider"
      end

      operation 7611035 "getProviders"
	class_operation public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all the installed providers. The order of
the providers in the array is their preference order.

@return an array of all the installed providers."
      end

      operation 7611163 "getProvider"
	class_operation public return_type class_ref 959643 // Provider
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider installed with the specified name, if
any. Returns null if no provider with the specified name is
installed or if name is null.

@param name the name of the provider to get.

@return the provider of the specified name.

@see #removeProvider
@see #addProvider"
      end

      operation 7611291 "getProviders"
	class_operation public return_type class_ref 959643 // Provider
	nparams 1
	  param in name "filter" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all installed providers that satisfy the
specified selection criterion, or null if no such providers have been
installed. The returned providers are ordered
according to their <a href=
\"#insertProviderAt(java.security.Provider, int)\">preference order</a>. 
 
<p> A cryptographic service is always associated with a particular
algorithm or type. For example, a digital signature service is
always associated with a particular algorithm (e.g., DSA),
and a CertificateFactory service is always associated with
a particular certificate type (e.g., X.509).

<p>The selection criterion must be specified in one of the following two
formats:
<ul>
<li> <i>&lt;crypto_service>.&lt;algorithm_or_type></i> <p> The
cryptographic service name must not contain any dots.
<p> A 
provider satisfies the specified selection criterion iff the provider 
implements the 
specified algorithm or type for the specified cryptographic service.
<p> For example, \"CertificateFactory.X.509\" 
would be satisfied by any provider that supplied
a CertificateFactory implementation for X.509 certificates.
<li> <i>&lt;crypto_service>.&lt;algorithm_or_type> 
&lt;attribute_name>:&lt attribute_value></i>
<p> The cryptographic service name must not contain any dots. There
must be one or more space charaters between the the
<i>&lt;algorithm_or_type></i> and the <i>&lt;attribute_name></i>.
 <p> A provider satisfies this selection criterion iff the
provider implements the specified algorithm or type for the specified 
cryptographic service and its implementation meets the
constraint expressed by the specified attribute name/value pair.
<p> For example, \"Signature.SHA1withDSA KeySize:1024\" would be
satisfied by any provider that implemented
the SHA1withDSA signature algorithm with a keysize of 1024 (or larger).

</ul>

<p> See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptogaphy Architecture API Specification &amp; Reference </a>
for information about standard cryptographic service names, standard
algorithm names and standard attribute names.

@param filter the criterion for selecting
providers. The filter is case-insensitive.

@return all the installed providers that satisfy the selection
criterion, or null if no such providers have been installed.

@throws InvalidParameterException
        if the filter is not in the required format
@throws NullPointerException if filter is null

@see #getProviders(java.util.Map)"
      end

      operation 7611419 "getProviders"
	class_operation public return_type class_ref 959643 // Provider
	nparams 1
	  param inout name "filter" type class_ref 136603 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all installed providers that satisfy the 
specified* selection criteria, or null if no such providers have been
installed. The returned providers are ordered
according to their <a href=
\"#insertProviderAt(java.security.Provider, int)\">preference order</a>. 

<p>The selection criteria are represented by a map.
Each map entry represents a selection criterion. 
A provider is selected iff it satisfies all selection
criteria. The key for any entry in such a map must be in one of the
following two formats:
<ul>
<li> <i>&lt;crypto_service>.&lt;algorithm_or_type></i>
<p> The cryptographic service name must not contain any dots.
<p> The value associated with the key must be an empty string.
<p> A provider
satisfies this selection criterion iff the provider implements the 
specified algorithm or type for the specified cryptographic service.
<li>  <i>&lt;crypto_service>.&lt;algorithm_or_type> &lt;attribute_name></i>
<p> The cryptographic service name must not contain any dots. There
must be one or more space charaters between the <i>&lt;algorithm_or_type></i>
and the <i>&lt;attribute_name></i>.
<p> The value associated with the key must be a non-empty string.
A provider satisfies this selection criterion iff the
provider implements the specified algorithm or type for the specified 
cryptographic service and its implementation meets the
constraint expressed by the specified attribute name/value pair. 
</ul>

<p> See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptogaphy Architecture API Specification &amp; Reference </a>
for information about standard cryptographic service names, standard
algorithm names and standard attribute names.

@param filter the criteria for selecting
providers. The filter is case-insensitive.

@return all the installed providers that satisfy the selection
criteria, or null if no such providers have been installed. 

@throws InvalidParameterException
        if the filter is not in the required format
@throws NullPointerException if filter is null

@see #getProviders(java.lang.String)"
      end

      classrelation 1880603 // spiMap (<unidirectional association>)
	relation 1880603 --->
	  a role_name "spiMap" init_value "=  
				new ConcurrentHashMap<String,Class>()" class_relation const_relation private
	    comment " Map containing cached Spi Class objects of the specified type
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Class> ${name}${value};
"
	    classrelation_ref 1880603 // spiMap (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 7611547 "getSpiClass"
	class_operation private return_type class_ref 164635 // Class
	nparams 1
	  param in name "type" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Class object for the given engine type 
(e.g. \"MessageDigest\"). Works for Spis in the java.security package
only."
      end

      operation 7611675 "getImpl"
	class_operation package explicit_return_type "Object"
	nparams 3
	  param in name "algorithm" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of objects: the first object in the array is
an instance of an implementation of the requested algorithm
and type, and the second object in the array identifies the provider
of that implementation.
The <code>provider</code> argument can be null, in which case all
configured providers will be searched in order of preference."
      end

      operation 7611803 "getImpl"
	class_operation package explicit_return_type "Object"
	nparams 4
	  param in name "algorithm" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "provider" explicit_type "String"
	  param inout name "params" explicit_type "Object"
	nexceptions 3
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7611931 "getImpl"
	class_operation package explicit_return_type "Object"
	nparams 3
	  param in name "algorithm" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of objects: the first object in the array is
an instance of an implementation of the requested algorithm
and type, and the second object in the array identifies the provider
of that implementation.
The <code>provider</code> argument cannot be null."
      end

      operation 7612059 "getImpl"
	class_operation package explicit_return_type "Object"
	nparams 4
	  param in name "algorithm" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	  param inout name "params" explicit_type "Object"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612187 "getProperty"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a security property value.

<p>First, if there is a security manager, its
<code>checkPermission</code>  method is called with a 
<code>java.security.SecurityPermission(\"getProperty.\"+key)</code>
permission to see if it's ok to retrieve the specified
security property value.. 

@param key the key of the property being retrieved.

@return the value of the security property corresponding to key.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkPermission}</code> method
         denies
         access to retrieve the specified security property value
@throws  NullPointerException is key is null

@see #setProperty
@see java.security.SecurityPermission"
      end

      operation 7612315 "setProperty"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "datum" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a security property value.

<p>First, if there is a security manager, its
<code>checkPermission</code> method is called with a 
<code>java.security.SecurityPermission(\"setProperty.\"+key)</code>
permission to see if it's ok to set the specified
security property value.

@param key the name of the property to be set.

@param datum the value of the property to be set.

@throws  SecurityException
         if a security manager exists and its <code>{@link
         java.lang.SecurityManager#checkPermission}</code> method
         denies access to set the specified security property value
@throws  NullPointerException if key or datum is null

@see #getProperty
@see java.security.SecurityPermission"
      end

      operation 7612443 "invalidateSMCache"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implementation detail:  If the property we just set in
setProperty() was either \"package.access\" or
\"package.definition\", we need to signal to the SecurityManager
class that the value has just changed, and that it should
invalidate it's local cache values.

Rather than create a new API entry for this function,
we use reflection to set a private variable."
      end

      operation 7612571 "check"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "directive" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612699 "getAllQualifyingCandidates"
	class_operation private return_type class_ref 152859 // LinkedHashSet
	nparams 3
	  param in name "filterKey" explicit_type "String"
	  param in name "filterValue" explicit_type "String"
	  param inout name "allProviders" type class_ref 959643 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all providers who satisfy the specified
criterion."
      end

      operation 7612827 "getProvidersNotUsingCache"
	class_operation private return_type class_ref 152859 // LinkedHashSet
	nparams 5
	  param in name "serviceName" explicit_type "String"
	  param in name "algName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "filterValue" explicit_type "String"
	  param inout name "allProviders" type class_ref 959643 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7612955 "isCriterionSatisfied"
	class_operation private explicit_return_type "boolean"
	nparams 5
	  param inout name "prov" type class_ref 959643 // Provider
	  param in name "serviceName" explicit_type "String"
	  param in name "algName" explicit_type "String"
	  param in name "attrName" explicit_type "String"
	  param in name "filterValue" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the given provider satisfies
the selection criterion key:value."
      end

      operation 7613083 "isStandardAttr"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "attribute" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the attribute is a standard attribute;
otherwise, returns false."
      end

      operation 7613211 "isConstraintSatisfied"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param in name "attribute" explicit_type "String"
	  param in name "value" explicit_type "String"
	  param in name "prop" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the requested attribute value is supported;
otherwise, returns false."
      end

      operation 7613339 "getFilterComponents"
	class_operation package explicit_return_type "String"
	nparams 2
	  param in name "filterKey" explicit_type "String"
	  param in name "filterValue" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7613467 "getAlgorithms"
	class_operation public return_type class_ref 136731 // Set
	nparams 1
	  param in name "serviceName" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Set of Strings containing the names of all available
algorithms or types for the specified Java cryptographic service
(e.g., Signature, MessageDigest, Cipher, Mac, KeyStore). Returns
an empty Set if there is no provider that supports the  
specified service or if serviceName is null. For a complete list 
of Java cryptographic services, please see the 
<a href=\"../../../guide/security/CryptoSpec.html\">Java 
Cryptography Architecture API Specification &amp; Reference</a>.
Note: the returned set is immutable.

@param serviceName the name of the Java cryptographic 
service (e.g., Signature, MessageDigest, Cipher, Mac, KeyStore).
Note: this parameter is case-insensitive.

@return a Set of Strings containing the names of all available 
algorithms or types for the specified Java cryptographic service
or an empty set if no provider supports the specified service.

@since 1.4"
      end
    end

    class 968475 "SecurityPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is for security permissions.
A SecurityPermission contains a name (also referred to as a \"target name\")
but no actions list; you either have the named permission
or you don't.
<P>
The target name is the name of a security configuration parameter (see below).
Currently the SecurityPermission object is used to guard access
to the Policy, Security, Provider, Signer, and Identity
objects.
<P>
The following table lists all the possible SecurityPermission target names,
and for each provides a description of what the permission allows
and a discussion of the risks of granting code the permission.
<P>

<table border=1 cellpadding=5 summary=\"target name,what the permission allows, and associated risks\">
<tr>
<th>Permission Target Name</th>
<th>What the Permission Allows</th>
<th>Risks of Allowing this Permission</th>
</tr>

<tr>
  <td>createAccessControlContext</td>
  <td>Creation of an AccessControlContext</td>
  <td>This allows someone to instantiate an AccessControlContext
with a <code>DomainCombiner</code>.  Since DomainCombiners are given
a reference to the ProtectionDomains currently on the stack,
this could potentially lead to a privacy leak if the DomainCombiner
is malicious.</td>
</tr>

<tr>
  <td>getDomainCombiner</td>
  <td>Retrieval of an AccessControlContext's DomainCombiner</td>
  <td>This allows someone to retrieve an AccessControlContext's
<code>DomainCombiner</code>.  Since DomainCombiners may contain
sensitive information, this could potentially lead to a privacy leak.</td>
</tr>

<tr>
  <td>getPolicy</td>
  <td>Retrieval of the system-wide security policy (specifically, of the
currently-installed Policy object)</td>
  <td>This allows someone to query the policy via the
<code>getPermissions</code> call,
which discloses which permissions would be granted to a given CodeSource.
While revealing the policy does not compromise the security of
the system, it does provide malicious code with additional information
which it may use to better aim an attack. It is wise
not to divulge more information than necessary.</td>
</tr>

<tr>
  <td>setPolicy</td>
  <td>Setting of the system-wide security policy (specifically,
the Policy object)</td>
  <td>Granting this permission is extremely dangerous, as malicious
code may grant itself all the necessary permissions it needs
to successfully mount an attack on the system.</td>
</tr>

<tr>
  <td>getProperty.{key}</td>
  <td>Retrieval of the security property with the specified key</td>
  <td>Depending on the particular key for which access has
been granted, the code may have access to the list of security
providers, as well as the location of the system-wide and user
security policies.  while revealing this information does not
compromise the security of the system, it does provide malicious
code with additional information which it may use to better aim
an attack.
</td>
</tr>

<tr>
  <td>setProperty.{key}</td>
  <td>Setting of the security property with the specified key</td>
  <td>This could include setting a security provider or defining
the location of the the system-wide security policy.  Malicious
code that has permission to set a new security provider may
set a rogue provider that steals confidential information such
as cryptographic private keys. In addition, malicious code with
permission to set the location of the system-wide security policy
may point it to a security policy that grants the attacker
all the necessary permissions it requires to successfully mount
an attack on the system.
</td>
</tr>

<tr>
  <td>insertProvider.{provider name}</td>
  <td>Addition of a new provider, with the specified name</td>
  <td>This would allow somebody to introduce a possibly
malicious provider (e.g., one that discloses the private keys passed
to it) as the highest-priority provider. This would be possible
because the Security object (which manages the installed providers)
currently does not check the integrity or authenticity of a provider
before attaching it.</td>
</tr>

<tr>
  <td>removeProvider.{provider name}</td>
  <td>Removal of the specified provider</td>
  <td>This may change the behavior or disable execution of other
parts of the program. If a provider subsequently requested by the
program has been removed, execution may fail. Also, if the removed
provider is not explicitly requested by the rest of the program, but
it would normally be the provider chosen when a cryptography service
is requested (due to its previous order in the list of providers),
a different provider will be chosen instead, or no suitable provider
will be found, thereby resulting in program failure.</td>
</tr>

<tr>
  <td>setSystemScope</td>
  <td>Setting of the system identity scope</td>
  <td>This would allow an attacker to configure the system identity scope with
certificates that should not be trusted, thereby granting applet or
application code signed with those certificates privileges that
would have been denied by the system's original identity scope</td>
</tr>

<tr>
  <td>setIdentityPublicKey</td>
  <td>Setting of the public key for an Identity</td>
  <td>If the identity is marked as \"trusted\", this allows an attacker to
introduce a different public key (e.g., its own) that is not trusted
by the system's identity scope, thereby granting applet or
application code signed with that public key privileges that
would have been denied otherwise.</td>
</tr>

<tr>
  <td>setIdentityInfo</td>
  <td>Setting of a general information string for an Identity</td>
  <td>This allows attackers to set the general description for
an identity.  This may trick applications into using a different
identity than intended or may prevent applications from finding a
particular identity.</td>
</tr>

<tr>
  <td>addIdentityCertificate</td>
  <td>Addition of a certificate for an Identity</td>
  <td>This allows attackers to set a certificate for
an identity's public key.  This is dangerous because it affects
the trust relationship across the system. This public key suddenly
becomes trusted to a wider audience than it otherwise would be.</td>
</tr>

<tr>
  <td>removeIdentityCertificate</td>
  <td>Removal of a certificate for an Identity</td>
  <td>This allows attackers to remove a certificate for
an identity's public key. This is dangerous because it affects
the trust relationship across the system. This public key suddenly
becomes considered less trustworthy than it otherwise would be.</td>
</tr>

<tr>
 <td>printIdentity</td>
 <td>Viewing the name of a principal
and optionally the scope in which it is used, and whether
or not it is considered \"trusted\" in that scope</td>
 <td>The scope that is printed out may be a filename, in which case
it may convey local system information. For example, here's a sample
printout of an identity named \"carol\", who is
marked not trusted in the user's identity database:<br>
  carol[/home/luehe/identitydb.obj][not trusted]</td>
</tr>

<tr>
  <td>clearProviderProperties.{provider name}</td>
  <td>\"Clearing\" of a Provider so that it no longer contains the properties
used to look up services implemented by the provider</td>
  <td>This disables the lookup of services implemented by the provider.
This may thus change the behavior or disable execution of other
parts of the program that would normally utilize the Provider, as
described under the \"removeProvider.{provider name}\" permission.</td>
</tr>

<tr>
  <td>putProviderProperty.{provider name}</td>
  <td>Setting of properties for the specified Provider</td>
  <td>The provider properties each specify the name and location
of a particular service implemented by the provider. By granting
this permission, you let code replace the service specification
with another one, thereby specifying a different implementation.</td>
</tr>

<tr>
  <td>removeProviderProperty.{provider name}</td>
  <td>Removal of properties from the specified Provider</td>
  <td>This disables the lookup of services implemented by the
provider. They are no longer accessible due to removal of the properties
specifying their names and locations. This
may change the behavior or disable execution of other
parts of the program that would normally utilize the Provider, as
described under the \"removeProvider.{provider name}\" permission.</td>
</tr>

<tr>
  <td>getSignerPrivateKey</td>
  <td>Retrieval of a Signer's private key</td>
  <td>It is very dangerous to allow access to a private key; private
keys are supposed to be kept secret. Otherwise, code can use the
private key to sign various files and claim the signature came from
the Signer.</td>
</tr>

<tr>
  <td>setSignerKeyPair</td>
  <td>Setting of the key pair (public key and private key) for a Signer</td>
  <td>This would allow an attacker to replace somebody else's (the \"target's\")
keypair with a possibly weaker keypair (e.g., a keypair of a smaller
keysize).  This also would allow the attacker to listen in on encrypted
communication between the target and its peers. The target's peers
might wrap an encryption session key under the target's \"new\" public
key, which would allow the attacker (who possesses the corresponding
private key) to unwrap the session key and decipher the communication
data encrypted under that session key.</td>
</tr>

</table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@version 1.27 03/12/19

@author Marianne Mueller
@author Roland Schemers"
      classrelation 1880731 // <generalisation>
	relation 1880731 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1880731 // <generalisation>
	  b parent class_ref 285083 // BasicPermission
      end

      attribute 2848795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  5236109936224050470L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7613595 "SecurityPermission"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SecurityPermission with the specified name.
The name is the symbolic name of the SecurityPermission. An asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match.

@param name the name of the SecurityPermission"
      end

      operation 7613723 "SecurityPermission"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new SecurityPermission object with the specified name.
The name is the symbolic name of the SecurityPermission, and the
actions String is currently unused and should be null.

@param name the name of the SecurityPermission
@param actions should be null."
      end
    end

    class 968603 "Signature"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This Signature class is used to provide applications the functionality
of a digital signature algorithm. Digital signatures are used for
authentication and integrity assurance of digital data.

<p> The signature algorithm can be, among others, the NIST standard
DSA, using DSA and SHA-1. The DSA algorithm using the
SHA-1 message digest algorithm can be specified as <tt>SHA1withDSA</tt>.
In the case of RSA, there are multiple choices for the message digest
algorithm, so the signing algorithm could be specified as, for example,
<tt>MD2withRSA</tt>, <tt>MD5withRSA</tt>, or <tt>SHA1withRSA</tt>.
The algorithm name must be specified, as there is no default.

<p>Like other algorithm-based classes in Java Security, Signature 
provides implementation-independent algorithms, whereby a caller 
(application code) requests a particular signature algorithm
and is handed back a properly initialized Signature object. It is
also possible, if desired, to request a particular algorithm from a
particular provider. See the <code>getInstance </code> methods.

<p>Thus, there are two ways to request a Signature algorithm object: by
specifying either just an algorithm name, or both an algorithm name
and a package provider. <ul>

<li>If just an algorithm name is specified, the system will
determine if there is an implementation of the algorithm requested
available in the environment, and if there is more than one, if
there is a preferred one.<p>

<li>If both an algorithm name and a package provider are specified,
the system will determine if there is an implementation of the
algorithm in the package requested, and throw an exception if there
is not.

</ul>

<p>A Signature object can be used to generate and verify digital
signatures.

<p>There are three phases to the use of a Signature object for
either signing data or verifying a signature:<ol>

<li>Initialization, with either 

    <ul>

    <li>a public key, which initializes the signature for
    verification (see {@link #initVerify(PublicKey) initVerify}), or

    <li>a private key (and optionally a Secure Random Number Generator),
    which initializes the signature for signing
    (see {@link #initSign(PrivateKey)}
    and {@link #initSign(PrivateKey, SecureRandom)}).

    </ul><p>

<li>Updating<p>

<p>Depending on the type of initialization, this will update the
bytes to be signed or verified. See the 
{@link #update(byte) update} methods.<p>

<li>Signing or Verifying a signature on all updated bytes. See the 
{@link #sign() sign} methods and the {@link #verify(byte[]) verify}
method.

</ol>

<p>Note that this class is abstract and extends from
<code>SignatureSpi</code> for historical reasons.
Application developers should only take notice of the methods defined in
this <code>Signature</code> class; all the methods in
the superclass are intended for cryptographic service providers who wish to
supply their own implementations of digital signature algorithms.

@author Benjamin Renaud 

@version 1.99, 05/18/04"
      classrelation 1880987 // <generalisation>
	relation 1880987 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1880987 // <generalisation>
	  b parent class_ref 968731 // SignatureSpi
      end

      attribute 2848923 "debug"
	class_attribute const_attribute private explicit_type "Debug"
	init_value "= 
			Debug.getInstance(\"jca\", \"Signature\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2849051 "algorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The algorithm for this signature object.
This value is used to map an OID to the particular algorithm.
The mapping is done in AlgorithmObject.algOID(String algorithm)
"
      end

      classrelation 1881115 // provider (<unidirectional association>)
	relation 1881115 --->
	  a role_name "provider" package
	    comment " The provider
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1881115 // provider (<unidirectional association>)
	  b parent class_ref 959643 // Provider
      end

      attribute 2849179 "UNINITIALIZED"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Possible {@link #state} value, signifying that       
this signature object has not yet been initialized.
"
      end

      attribute 2849307 "SIGN"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Possible {@link #state} value, signifying that       
this signature object has been initialized for signing.
"
      end

      attribute 2849435 "VERIFY"
	class_attribute const_attribute protected explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Possible {@link #state} value, signifying that       
this signature object has been initialized for verification.
"
      end

      attribute 2849563 "state"
	protected explicit_type "int"
	init_value "=  UNINITIALIZED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Current state of this signature object.
"
      end

      operation 7615771 "Signature"
	protected explicit_return_type ""
	nparams 1
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Signature object for the specified algorithm.

@param algorithm the standard string name of the algorithm. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names."
      end

      attribute 2849691 "RSA_SIGNATURE"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"NONEwithRSA\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " name of the special signature alg"
      end

      attribute 2849819 "RSA_CIPHER"
	class_attribute const_attribute private explicit_type "String"
	init_value "=  \"RSA/ECB/PKCS1Padding\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " name of the equivalent cipher alg"
      end

      classrelation 1881243 // rsaIds (<unidirectional association>)
	relation 1881243 --->
	  a role_name "rsaIds" init_value "=  Arrays.asList(
	new ServiceId[] {
	    new ServiceId(\"Signature\", \"NONEwithRSA\"),
	    new ServiceId(\"Cipher\", \"RSA/ECB/PKCS1Padding\"),
	    new ServiceId(\"Cipher\", \"RSA/ECB\"),
	    new ServiceId(\"Cipher\", \"RSA//PKCS1Padding\"),
	    new ServiceId(\"Cipher\", \"RSA\"),
	}
    )" class_relation const_relation private
	    comment " all the services we need to lookup for compatibility with Cipher
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ServiceId> ${name}${value};
"
	    classrelation_ref 1881243 // rsaIds (<unidirectional association>)
	  b parent class_ref 135579 // List
      end

      operation 7615899 "getInstance"
	class_operation public return_type class_ref 968603 // Signature
	nparams 1
	  param in name "algorithm" explicit_type "String"
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a Signature object that implements the specified digest
algorithm. If the default provider package
provides an implementation of the requested digest algorithm,
an instance of Signature containing that implementation is returned.
If the algorithm is not available in the default 
package, other packages are searched.

@param algorithm the standard name of the algorithm requested. 
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@return the new Signature object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the environment."
      end

      operation 7616027 "getInstance"
	class_operation private return_type class_ref 968603 // Signature
	nparams 2
	  param inout name "instance" explicit_type "Instance"
	  param in name "algorithm" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1881371 // signatureInfo (<unidirectional association>)
	relation 1881371 --->
	  a role_name "signatureInfo" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Boolean> ${name}${value};
"
	    classrelation_ref 1881371 // signatureInfo (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      extra_member 165019 "initialization"
	
	cpp "" ""
	java "  static {
    	signatureInfo = new ConcurrentHashMap<String,Boolean>();
	Boolean TRUE = Boolean.TRUE;
	// pre-initialize with values for our SignatureSpi implementations
	signatureInfo.put(\"sun.security.provider.DSA$RawDSA\", TRUE);
	signatureInfo.put(\"sun.security.provider.DSA$SHA1withDSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$MD2withRSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$MD5withRSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$SHA1withRSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$SHA256withRSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$SHA384withRSA\", TRUE);
	signatureInfo.put(\"sun.security.rsa.RSASignature$SHA512withRSA\", TRUE);
	signatureInfo.put(\"com.sun.net.ssl.internal.ssl.RSASignature\", TRUE);
	signatureInfo.put(\"sun.security.pkcs11.P11Signature\", TRUE);
    }"
	php ""
	python ""
	idl ""
      end

      operation 7616155 "isSpi"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 961435 // Service
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7616283 "getInstance"
	class_operation public return_type class_ref 968603 // Signature
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param in name "provider" explicit_type "String"
	nexceptions 2
	  exception class_ref 959899 // NoSuchAlgorithmException
	  exception class_ref 960027 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a Signature object implementing the specified
algorithm, as supplied from the specified provider, if such an 
algorithm is available from the provider.

@param algorithm the name of the algorithm requested.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the name of the provider.

@return the new Signature object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception NoSuchProviderException if the provider is not
available in the environment.

@exception IllegalArgumentException if the provider name is null
or empty.

@see Provider "
      end

      operation 7616411 "getInstance"
	class_operation public return_type class_ref 968603 // Signature
	nparams 2
	  param in name "algorithm" explicit_type "String"
	  param inout name "provider" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a Signature object implementing the specified
algorithm, as supplied from the specified provider, if such an 
algorithm is available from the provider. Note: the 
<code>provider</code> doesn't have to be registered. 

@param algorithm the name of the algorithm requested.
See Appendix A in the <a href=
\"../../../guide/security/CryptoSpec.html#AppA\">
Java Cryptography Architecture API Specification &amp; Reference </a> 
for information about standard algorithm names.

@param provider the provider.

@return the new Signature object.

@exception NoSuchAlgorithmException if the algorithm is
not available in the package supplied by the requested
provider.

@exception IllegalArgumentException if the <code>provider</code> is
null.

@see Provider

@since 1.4"
      end

      operation 7616539 "getInstanceRSA"
	class_operation private return_type class_ref 968603 // Signature
	nparams 1
	  param inout name "p" type class_ref 959643 // Provider
	nexceptions 1
	  exception class_ref 959899 // NoSuchAlgorithmException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " return an implementation for NONEwithRSA, which is a special case
 because of the Cipher.RSA/ECB/PKCS1Padding compatibility wrapper"
      end

      operation 7616667 "getProvider"
	public return_type class_ref 959643 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this signature object.

@return the provider of this signature object"
      end

      operation 7616795 "chooseFirstProvider"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7616923 "initVerify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicKey" type class_ref 962075 // PublicKey
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this object for verification. If this method is called
again with a different argument, it negates the effect
of this call.

@param publicKey the public key of the identity whose signature is
going to be verified.

@exception InvalidKeyException if the key is invalid."
      end

      operation 7617051 "initVerify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 961947 // Certificate
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this object for verification, using the public key from
the given certificate.
<p>If the certificate is of type X.509 and has a <i>key usage</i>
extension field marked as critical, and the value of the <i>key usage</i>
extension field implies that the public key in
the certificate and its corresponding private key are not
supposed to be used for digital signatures, an 
<code>InvalidKeyException</code> is thrown.

@param certificate the certificate of the identity whose signature is
going to be verified.

@exception InvalidKeyException  if the public key in the certificate
is not encoded properly or does not include required  parameter
information or cannot be used for digital signature purposes."
      end

      operation 7617179 "initSign"
	public explicit_return_type "void"
	nparams 1
	  param inout name "privateKey" type class_ref 964123 // PrivateKey
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this object for signing. If this method is called
again with a different argument, it negates the effect
of this call.

@param privateKey the private key of the identity whose signature
is going to be generated.

@exception InvalidKeyException if the key is invalid.  "
      end

      operation 7617307 "initSign"
	public explicit_return_type "void"
	nparams 2
	  param inout name "privateKey" type class_ref 964123 // PrivateKey
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this object for signing. If this method is called
again with a different argument, it negates the effect
of this call.

@param privateKey the private key of the identity whose signature
is going to be generated.

@param random the source of randomness for this signature.

@exception InvalidKeyException if the key is invalid.  "
      end

      operation 7617435 "sign"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature bytes of all the data updated.
The format of the signature depends on the underlying 
signature scheme.

<p>A call to this method resets this signature object to the state 
it was in when previously initialized for signing via a
call to <code>initSign(PrivateKey)</code>. That is, the object is 
reset and available to generate another signature from the same 
signer, if desired, via new calls to <code>update</code> and 
<code>sign</code>.     

@return the signature bytes of the signing operation's result.

@exception SignatureException if this signature object is not
initialized properly or if this signature algorithm is unable to
process the input data provided."
      end

      operation 7617563 "sign"
	public explicit_return_type "int"
	nparams 3
	  param in name "outbuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes the signature operation and stores the resulting signature
bytes in the provided buffer <code>outbuf</code>, starting at
<code>offset</code>. 
The format of the signature depends on the underlying 
signature scheme.

<p>This signature object is reset to its initial state (the state it
was in after a call to one of the <code>initSign</code> methods) and
can be reused to generate further signatures with the same private key.

@param outbuf buffer for the signature result.

@param offset offset into <code>outbuf</code> where the signature is
stored.

@param len number of bytes within <code>outbuf</code> allotted for the
signature.

@return the number of bytes placed into <code>outbuf</code>.

@exception SignatureException if this signature object is not
initialized properly, if this signature algorithm is unable to
process the input data provided, or if <code>len</code> is less
than the actual signature length.

@since 1.2"
      end

      operation 7617691 "verify"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "signature" explicit_type "byte"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the passed-in signature. 

<p>A call to this method resets this signature object to the state 
it was in when previously initialized for verification via a
call to <code>initVerify(PublicKey)</code>. That is, the object is 
reset and available to verify another signature from the identity
whose public key was specified in the call to <code>initVerify</code>.
     
@param signature the signature bytes to be verified.

@return true if the signature was verified, false if not. 

@exception SignatureException if this signature object is not 
initialized properly, the passed-in signature is improperly 
encoded or of the wrong type, if this signature algorithm is unable to
process the input data provided, etc."
      end

      operation 7617819 "verify"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "signature" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the passed-in signature in the specified array
of bytes, starting at the specified offset.

<p>A call to this method resets this signature object to the state 
it was in when previously initialized for verification via a
call to <code>initVerify(PublicKey)</code>. That is, the object is 
reset and available to verify another signature from the identity
whose public key was specified in the call to <code>initVerify</code>.

     
@param signature the signature bytes to be verified.
@param offset the offset to start from in the array of bytes.
@param length the number of bytes to use, starting at offset.

@return true if the signature was verified, false if not. 

@exception SignatureException if this signature object is not 
initialized properly, the passed-in signature is improperly 
encoded or of the wrong type, if this signature algorithm is unable to
process the input data provided, etc.
@exception IllegalArgumentException if the <code>signature</code>
byte array is null, or the <code>offset</code> or <code>length</code>
is less than 0, or the sum of the <code>offset</code> and 
<code>length</code> is greater than the length of the
<code>signature</code> byte array."
      end

      operation 7617947 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified by a byte.

@param b the byte to use for the update.

@exception SignatureException if this signature object is not 
initialized properly.     "
      end

      operation 7618075 "update"
	public explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "byte"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified, using the specified
array of bytes.

@param data the byte array to use for the update.       

@exception SignatureException if this signature object is not 
initialized properly.          "
      end

      operation 7618203 "update"
	public explicit_return_type "void"
	nparams 3
	  param in name "data" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified, using the specified
array of bytes, starting at the specified offset.  

@param data the array of bytes.  
@param off the offset to start from in the array of bytes.  
@param len the number of bytes to use, starting at offset.
 
@exception SignatureException if this signature object is not 
initialized properly.          "
      end

      operation 7618331 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 182427 // ByteBuffer
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified using the specified
ByteBuffer. Processes the <code>data.remaining()</code> bytes
starting at at <code>data.position()</code>.
Upon return, the buffer's position will be equal to its limit;
its limit will not have changed.

@param data the ByteBuffer

@exception SignatureException if this signature object is not
initialized properly.
@since 1.5"
      end

      operation 7618459 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm for this signature object.

@return the name of the algorithm for this signature object."
      end

      operation 7618587 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this signature object,       
providing information that includes the state of the object       
and the name of the algorithm used.       

@return a string representation of this signature object."
      end

      operation 7618715 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param in name "param" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the specified algorithm parameter to the specified value.
This method supplies a general-purpose mechanism through
which it is possible to set the various parameters of this object. 
A parameter may be any settable parameter for the algorithm, such as 
a parameter size, or a source of random bits for signature generation 
(if appropriate), or an indication of whether or not to perform
a specific but optional computation. A uniform algorithm-specific 
naming scheme for each parameter is desirable but left unspecified 
at this time.

@param param the string identifier of the parameter.
@param value the parameter value.

@exception InvalidParameterException if <code>param</code> is an
invalid parameter for this signature algorithm engine,
the parameter is already set
and cannot be set again, a security exception occurs, and so on.

@see #getParameter

@deprecated Use 
{@link #setParameter(java.security.spec.AlgorithmParameterSpec)
setParameter}."
      end

      operation 7618843 "setParameter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature engine with the specified parameter set.

@param params the parameters

@exception InvalidAlgorithmParameterException if the given parameters
are inappropriate for this signature engine

@see #getParameters"
      end

      operation 7618971 "getParameters"
	public return_type class_ref 960539 // AlgorithmParameters
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters used with this signature object.

<p>The returned parameters may be the same that were used to initialize
this signature, or may contain a combination of default and randomly
generated parameter values used by the underlying signature 
implementation if this signature requires algorithm parameters but 
was not initialized with any.

@return the parameters used with this signature, or null if this
signature does not use any parameters.

@see #setParameter(AlgorithmParameterSpec)"
      end

      operation 7619099 "getParameter"
	public explicit_return_type "Object"
	nparams 1
	  param in name "param" explicit_type "String"
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the value of the specified algorithm parameter. This method 
supplies a general-purpose mechanism through which it is possible to 
get the various parameters of this object. A parameter may be any 
settable parameter for the algorithm, such as a parameter size, or 
a source of random bits for signature generation (if appropriate), 
or an indication of whether or not to perform a specific but optional 
computation. A uniform algorithm-specific naming scheme for each 
parameter is desirable but left unspecified at this time.

@param param the string name of the parameter.

@return the object that represents the parameter value, or null if
there is none.

@exception InvalidParameterException if <code>param</code> is an invalid
parameter for this engine, or another exception occurs while
trying to get this parameter.

@see #setParameter(String, Object)

@deprecated"
      end

      operation 7619227 "clone"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 383643 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone if the implementation is cloneable.

@return a clone if the implementation is cloneable.

@exception CloneNotSupportedException if this is called
on an implementation that does not support <code>Cloneable</code>."
      end

      class 968987 "Delegate"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1881499 // <generalisation>
	  relation 1881499 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1881499 // <generalisation>
	    b parent class_ref 968603 // Signature
	end

	classrelation 1881627 // sigSpi (<unidirectional association>)
	  relation 1881627 --->
	    a role_name "sigSpi" private
	      comment " The provider implementation (delegate)
 filled in once the provider is selected
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1881627 // sigSpi (<unidirectional association>)
	    b parent class_ref 968731 // SignatureSpi
	end

	attribute 2849947 "lock"
	  const_attribute private explicit_type "Object"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " lock for mutex during provider selection"
	end

	classrelation 1881755 // firstService (<unidirectional association>)
	  relation 1881755 --->
	    a role_name "firstService" private
	      comment " next service to try in provider selection
 null once provider is selected
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1881755 // firstService (<unidirectional association>)
	    b parent class_ref 961435 // Service
	end

	classrelation 1881883 // serviceIterator (<unidirectional association>)
	  relation 1881883 --->
	    a role_name "serviceIterator" private
	      comment " remaining services to try in provider selection
 null once provider is selected
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1881883 // serviceIterator (<unidirectional association>)
	    b parent class_ref 135323 // Iterator
	end

	operation 7619355 "Delegate"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "sigSpi" type class_ref 968731 // SignatureSpi
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " constructor"
	end

	operation 7619483 "Delegate"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "service" type class_ref 961435 // Service
	    param inout name "iterator" type class_ref 135323 // Iterator
	    param in name "algorithm" explicit_type "String"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " used with delayed provider selection"
	end

	operation 7619611 "clone"
	  public explicit_return_type "Object"
	  nparams 0
	  nexceptions 1
	    exception class_ref 383643 // CloneNotSupportedException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a clone if the delegate is cloneable.    

@return a clone if the delegate is cloneable.

@exception CloneNotSupportedException if this is called on a
delegate that does not support <code>Cloneable</code>."
	end

	operation 7619739 "newInstance"
	  class_operation private return_type class_ref 968731 // SignatureSpi
	  nparams 1
	    param inout name "s" type class_ref 961435 // Service
	  nexceptions 1
	    exception class_ref 959899 // NoSuchAlgorithmException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2850075 "warnCount"
	  class_attribute private explicit_type "int"
	  init_value "=  10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " max number of debug warnings to print from chooseFirstProvider()"
	end

	operation 7619867 "chooseFirstProvider"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Choose the Spi from the first provider available. Used if
delayed provider selection is not possible because initSign()/
initVerify() is not the first method called."
	end

	operation 7619995 "chooseProvider"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "type" explicit_type "int"
	    param inout name "key" type class_ref 961819 // Key
	    param inout name "random" type class_ref 960155 // SecureRandom
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2850203 "I_PUB"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2850331 "I_PRIV"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2850459 "I_PRIV_SR"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "=  3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 7620123 "init"
	  private explicit_return_type "void"
	  nparams 4
	    param inout name "spi" type class_ref 968731 // SignatureSpi
	    param in name "type" explicit_type "int"
	    param inout name "key" type class_ref 961819 // Key
	    param inout name "random" type class_ref 960155 // SecureRandom
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620251 "engineInitVerify"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "publicKey" type class_ref 962075 // PublicKey
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620379 "engineInitSign"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "privateKey" type class_ref 964123 // PrivateKey
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620507 "engineInitSign"
	  protected explicit_return_type "void"
	  nparams 2
	    param inout name "privateKey" type class_ref 964123 // PrivateKey
	    param inout name "sr" type class_ref 960155 // SecureRandom
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620635 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "b" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620763 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7620891 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "data" type class_ref 182427 // ByteBuffer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621019 "engineSign"
	  protected explicit_return_type "byte"
	  nparams 0
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621147 "engineSign"
	  protected explicit_return_type "int"
	  nparams 3
	    param in name "outbuf" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621275 "engineVerify"
	  protected explicit_return_type "boolean"
	  nparams 1
	    param in name "sigBytes" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621403 "engineVerify"
	  protected explicit_return_type "boolean"
	  nparams 3
	    param in name "sigBytes" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621531 "engineSetParameter"
	  protected explicit_return_type "void"
	  nparams 2
	    param in name "param" explicit_type "String"
	    param inout name "value" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 963483 // InvalidParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621659 "engineSetParameter"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	  nexceptions 1
	    exception class_ref 960411 // InvalidAlgorithmParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621787 "engineGetParameter"
	  protected explicit_return_type "Object"
	  nparams 1
	    param in name "param" explicit_type "String"
	  nexceptions 1
	    exception class_ref 963483 // InvalidParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7621915 "engineGetParameters"
	  protected return_type class_ref 960539 // AlgorithmParameters
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 969115 "CipherAdapter"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1882011 // <generalisation>
	  relation 1882011 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 1882011 // <generalisation>
	    b parent class_ref 968731 // SignatureSpi
	end

	attribute 2850587 "cipher"
	  const_attribute private explicit_type "Cipher"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1882139 // data (<unidirectional association>)
	  relation 1882139 --->
	    a role_name "data" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1882139 // data (<unidirectional association>)
	    b parent class_ref 205595 // ByteArrayOutputStream
	end

	operation 7622043 "CipherAdapter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "cipher" explicit_type "Cipher"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622171 "engineInitVerify"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "publicKey" type class_ref 962075 // PublicKey
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622299 "engineInitSign"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "privateKey" type class_ref 964123 // PrivateKey
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622427 "engineInitSign"
	  protected explicit_return_type "void"
	  nparams 2
	    param inout name "privateKey" type class_ref 964123 // PrivateKey
	    param inout name "random" type class_ref 960155 // SecureRandom
	  nexceptions 1
	    exception class_ref 963355 // InvalidKeyException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622555 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "b" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622683 "engineUpdate"
	  protected explicit_return_type "void"
	  nparams 3
	    param in name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622811 "engineSign"
	  protected explicit_return_type "byte"
	  nparams 0
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7622939 "engineVerify"
	  protected explicit_return_type "boolean"
	  nparams 1
	    param in name "sigBytes" explicit_type "byte"
	  nexceptions 1
	    exception class_ref 968859 // SignatureException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7623067 "engineSetParameter"
	  protected explicit_return_type "void"
	  nparams 2
	    param in name "param" explicit_type "String"
	    param inout name "value" explicit_type "Object"
	  nexceptions 1
	    exception class_ref 963483 // InvalidParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7623195 "engineGetParameter"
	  protected explicit_return_type "Object"
	  nparams 1
	    param in name "param" explicit_type "String"
	  nexceptions 1
	    exception class_ref 963483 // InvalidParameterException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 968731 "SignatureSpi"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
for the <code>Signature</code> class, which is used to provide the
functionality of a digital signature algorithm. Digital signatures are used
for authentication and integrity assurance of digital data.
.
<p> All the abstract methods in this class must be implemented by each
cryptographic service provider who wishes to supply the implementation
of a particular signature algorithm.

@author Benjamin Renaud 

@version 1.24, 05/18/04

@see Signature"
      classrelation 1880859 // appRandom (<unidirectional association>)
	relation 1880859 --->
	  a role_name "appRandom" init_value "=  null" protected
	    comment "
Application-specified source of randomness. 

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1880859 // appRandom (<unidirectional association>)
	  b parent class_ref 960155 // SecureRandom
      end

      operation 7613851 "engineInitVerify"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "publicKey" type class_ref 962075 // PublicKey
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature object with the specified
public key for verification operations.

@param publicKey the public key of the identity whose signature is
going to be verified.

@exception InvalidKeyException if the key is improperly
encoded, parameters are missing, and so on.  "
      end

      operation 7613979 "engineInitSign"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "privateKey" type class_ref 964123 // PrivateKey
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature object with the specified
private key for signing operations.

@param privateKey the private key of the identity whose signature
will be generated.

@exception InvalidKeyException if the key is improperly
encoded, parameters are missing, and so on. "
      end

      operation 7614107 "engineInitSign"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "privateKey" type class_ref 964123 // PrivateKey
	  param inout name "random" type class_ref 960155 // SecureRandom
	nexceptions 1
	  exception class_ref 963355 // InvalidKeyException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this signature object with the specified
private key and source of randomness for signing operations.

<p>This concrete method has been added to this previously-defined
abstract class. (For backwards compatibility, it cannot be abstract.)

@param privateKey the private key of the identity whose signature
will be generated.
@param random the source of randomness

@exception InvalidKeyException if the key is improperly
encoded, parameters are missing, and so on. "
      end

      operation 7614235 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "byte"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified
using the specified byte.

@param b the byte to use for the update.

@exception SignatureException if the engine is not initialized
properly."
      end

      operation 7614363 "engineUpdate"
	abstract protected explicit_return_type "void"
	nparams 3
	  param in name "b" explicit_type "byte"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified, using the 
specified array of bytes, starting at the specified offset.

@param b the array of bytes  
@param off the offset to start from in the array of bytes 
@param len the number of bytes to use, starting at offset

@exception SignatureException if the engine is not initialized 
properly"
      end

      operation 7614491 "engineUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 182427 // ByteBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the data to be signed or verified using the specified
ByteBuffer. Processes the <code>data.remaining()</code> bytes
starting at at <code>data.position()</code>.
Upon return, the buffer's position will be equal to its limit;
its limit will not have changed.

@param input the ByteBuffer
@since 1.5"
      end

      operation 7614619 "engineSign"
	abstract protected explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature bytes of all the data
updated so far.    
The format of the signature depends on the underlying 
signature scheme.

@return the signature bytes of the signing operation's result.

@exception SignatureException if the engine is not
initialized properly or if this signature algorithm is unable to
process the input data provided."
      end

      operation 7614747 "engineSign"
	protected explicit_return_type "int"
	nparams 3
	  param in name "outbuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finishes this signature operation and stores the resulting signature
bytes in the provided buffer <code>outbuf</code>, starting at
<code>offset</code>.
The format of the signature depends on the underlying 
signature scheme.

<p>The signature implementation is reset to its initial state
(the state it was in after a call to one of the
<code>engineInitSign</code> methods)
and can be reused to generate further signatures with the same private
key.

This method should be abstract, but we leave it concrete for
binary compatibility.  Knowledgeable providers should override this
method.

@param outbuf buffer for the signature result.

@param offset offset into <code>outbuf</code> where the signature is
stored.

@param len number of bytes within <code>outbuf</code> allotted for the
signature.
Both this default implementation and the SUN provider do not
return partial digests. If the value of this parameter is less
than the actual signature length, this method will throw a
SignatureException.
This parameter is ignored if its value is greater than or equal to
the actual signature length.

@return the number of bytes placed into <code>outbuf</code>

@exception SignatureException if the engine is not
initialized properly, if this signature algorithm is unable to
process the input data provided, or if <code>len</code> is less
than the actual signature length.

@since 1.2"
      end

      operation 7614875 "engineVerify"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param in name "sigBytes" explicit_type "byte"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the passed-in signature.   

@param sigBytes the signature bytes to be verified.

@return true if the signature was verified, false if not. 

@exception SignatureException if the engine is not 
initialized properly, the passed-in signature is improperly 
encoded or of the wrong type, if this signature algorithm is unable to
process the input data provided, etc."
      end

      operation 7615003 "engineVerify"
	protected explicit_return_type "boolean"
	nparams 3
	  param in name "sigBytes" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the passed-in signature in the specified array
of bytes, starting at the specified offset.

<p> Note: Subclasses should overwrite the default implementation.


@param sigBytes the signature bytes to be verified.
@param offset the offset to start from in the array of bytes.
@param length the number of bytes to use, starting at offset.

@return true if the signature was verified, false if not. 

@exception SignatureException if the engine is not 
initialized properly, the passed-in signature is improperly 
encoded or of the wrong type, if this signature algorithm is unable to
process the input data provided, etc."
      end

      operation 7615131 "engineSetParameter"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "param" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the specified algorithm parameter to the specified
value. This method supplies a general-purpose mechanism through
which it is possible to set the various parameters of this object. 
A parameter may be any settable parameter for the algorithm, such as 
a parameter size, or a source of random bits for signature generation 
(if appropriate), or an indication of whether or not to perform
a specific but optional computation. A uniform algorithm-specific 
naming scheme for each parameter is desirable but left unspecified 
at this time.

@param param the string identifier of the parameter.

@param value the parameter value.

@exception InvalidParameterException if <code>param</code> is an
invalid parameter for this signature algorithm engine,
the parameter is already set
and cannot be set again, a security exception occurs, and so on. 

@deprecated Replaced by {@link 
#engineSetParameter(java.security.spec.AlgorithmParameterSpec)
engineSetParameter}."
      end

      operation 7615259 "engineSetParameter"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 960283 // AlgorithmParameterSpec
	nexceptions 1
	  exception class_ref 960411 // InvalidAlgorithmParameterException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method is overridden by providers to initialize
this signature engine with the specified parameter set.

@param params the parameters

@exception UnsupportedOperationException if this method is not
overridden by a provider

@exception InvalidAlgorithmParameterException if this method is
overridden by a provider and the the given parameters
are inappropriate for this signature engine"
      end

      operation 7615387 "engineGetParameters"
	protected return_type class_ref 960539 // AlgorithmParameters
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method is overridden by providers to return the
parameters used with this signature engine, or null 
if this signature engine does not use any parameters.

<p>The returned parameters may be the same that were used to initialize
this signature engine, or may contain a combination of default and 
randomly generated parameter values used by the underlying signature
implementation if this signature engine requires algorithm parameters 
but was not initialized with any.

@return the parameters used with this signature engine, or null if this
signature engine does not use any parameters

@exception UnsupportedOperationException if this method is
not overridden by a provider"
      end

      operation 7615515 "engineGetParameter"
	abstract protected explicit_return_type "Object"
	nparams 1
	  param in name "param" explicit_type "String"
	nexceptions 1
	  exception class_ref 963483 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the value of the specified algorithm parameter. 
This method supplies a general-purpose mechanism through which it 
is possible to get the various parameters of this object. A parameter
may be any settable parameter for the algorithm, such as a parameter 
size, or  a source of random bits for signature generation (if 
appropriate), or an indication of whether or not to perform a 
specific but optional computation. A uniform algorithm-specific 
naming scheme for each parameter is desirable but left unspecified 
at this time.

@param param the string name of the parameter.

@return the object that represents the parameter value, or null if
there is none.

@exception InvalidParameterException if <code>param</code> is an 
invalid parameter for this engine, or another exception occurs while
trying to get this parameter.

@deprecated"
      end

      operation 7615643 "clone"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 1
	  exception class_ref 383643 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone if the implementation is cloneable.

@return a clone if the implementation is cloneable.

@exception CloneNotSupportedException if this is called
on an implementation that does not support <code>Cloneable</code>."
      end
    end

    class 968859 "SignatureException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the generic Signature exception. 

@version 1.16 12/19/03
@author Benjamin Renaud "
      classrelation 1882267 // <generalisation>
	relation 1882267 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1882267 // <generalisation>
	  b parent class_ref 842139 // GeneralSecurityException
      end

      attribute 2850715 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  7509989324975124438L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7623323 "SignatureException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SignatureException with no detail message. A
detail message is a String that describes this particular
exception."
      end

      operation 7623451 "SignatureException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SignatureException with the specified detail
message.  A detail message is a String that describes this
particular exception.

@param msg the detail message.  "
      end

      operation 7623579 "SignatureException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SignatureException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end

      operation 7623707 "SignatureException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 164251 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SignatureException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5"
      end
    end

    class 969243 "SignedObject"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p> SignedObject is a class for the purpose of creating authentic
runtime objects whose integrity cannot be compromised without being
detected.

<p> More specifically, a SignedObject contains another Serializable
object, the (to-be-)signed object and its signature.

<p> The signed object is a \"deep copy\" (in serialized form) of an
original object.  Once the copy is made, further manipulation of
the original object has no side effect on the copy.

<p> The underlying signing algorithm is designated by the Signature
object passed to the constructor and the <code>verify</code> method.
A typical usage for signing is the following:

<p> <code> <pre>
Signature signingEngine = Signature.getInstance(algorithm,
                                                provider);
SignedObject so = new SignedObject(myobject, signingKey,
                                   signingEngine);
</pre> </code>

<p> A typical usage for verification is the following (having
received SignedObject <code>so</code>):

<p> <code> <pre>
Signature verificationEngine =
    Signature.getInstance(algorithm, provider);
if (so.verify(publickey, verificationEngine))
    try {
        Object myobj = so.getObject();
    } catch (java.lang.ClassNotFoundException e) {};
</pre> </code>

<p> Several points are worth noting.  First, there is no need to
initialize the signing or verification engine, as it will be
re-initialized inside the constructor and the <code>verify</code>
method. Secondly, for verification to succeed, the specified
public key must be the public key corresponding to the private key
used to generate the SignedObject.

<p> More importantly, for flexibility reasons, the
constructor and <code>verify</code> method allow for
customized signature engines, which can implement signature
algorithms that are not installed formally as part of a crypto
provider.  However, it is crucial that the programmer writing the
verifier code be aware what <code>Signature</code> engine is being
used, as its own implementation of the <code>verify</code> method
is invoked to verify a signature.  In other words, a malicious
<code>Signature</code> may choose to always return true on
verification in an attempt to bypass a security check.

<p> The signature algorithm can be, among others, the NIST standard
DSA, using DSA and SHA-1.  The algorithm is specified using the
same convention as that for signatures. The DSA algorithm using the
SHA-1 message digest algorithm can be specified, for example, as
\"SHA/DSA\" or \"SHA-1/DSA\" (they are equivalent).  In the case of
RSA, there are multiple choices for the message digest algorithm,
so the signing algorithm could be specified as, for example,
\"MD2/RSA\", \"MD5/RSA\" or \"SHA-1/RSA\".  The algorithm name must be
specified, as there is no default.

<p> The name of the Cryptography Package Provider is designated
also by the Signature parameter to the constructor and the
<code>verify</code> method.  If the provider is not
specified, the default provider is used.  Each installation can
be configured to use a particular provider as default.

<p> Potential applications of SignedObject include: 
<ul>
<li> It can be used
internally to any Java runtime as an unforgeable authorization
token -- one that can be passed around without the fear that the
token can be maliciously modified without being detected. 
<li> It
can be used to sign and serialize data/object for storage outside
the Java runtime (e.g., storing critical access control data on
disk). 
<li> Nested SignedObjects can be used to construct a logical
sequence of signatures, resembling a chain of authorization and
delegation.
</ul>

@see Signature

@version 	1.43, 12/19/03
@author Li Gong"
      classrelation 1882395 // <realization>
	relation 1882395 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1882395 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2850843 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  720502720485447167L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2850971 "content"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The original content is \"deep copied\" in its serialized format
and stored in a byte array.  The signature field is also in the
form of byte array.
"
      end

      attribute 2851099 "signature"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2851227 "thealgorithm"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 7623835 "SignedObject"
	public explicit_return_type ""
	nparams 3
	  param inout name "object" type class_ref 137883 // Serializable
	  param inout name "signingKey" type class_ref 964123 // PrivateKey
	  param inout name "signingEngine" type class_ref 968603 // Signature
	nexceptions 3
	  exception class_ref 179355 // IOException
	  exception class_ref 963355 // InvalidKeyException
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a SignedObject from any Serializable object.
The given object is signed with the given signing key, using the
designated signature engine.

@param object the object to be signed. 
@param signingKey the private key for signing.
@param signingEngine the signature signing engine.

@exception IOException if an error occurs during serialization
@exception InvalidKeyException if the key is invalid.
@exception SignatureException if signing fails."
      end

      operation 7623963 "getObject"
	public explicit_return_type "Object"
	nparams 0
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the encapsulated object.
The encapsulated object is de-serialized before it is returned.

@return the encapsulated object.

@exception IOException if an error occurs during de-serialization
@exception ClassNotFoundException if an error occurs during 
de-serialization"
      end

      operation 7624091 "getSignature"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the signature on the signed object, in the form of a
byte array.

@return the signature. Returns a new array each time this 
method is called."
      end

      operation 7624219 "getAlgorithm"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the name of the signature algorithm.

@return the signature algorithm name."
      end

      operation 7624347 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "verificationKey" type class_ref 962075 // PublicKey
	  param inout name "verificationEngine" type class_ref 968603 // Signature
	nexceptions 2
	  exception class_ref 963355 // InvalidKeyException
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the signature in this SignedObject is the valid
signature for the object stored inside, with the given
verification key, using the designated verification engine.

@param verificationKey the public key for verification.
@param verificationEngine the signature verification engine.

@exception SignatureException if signature verification failed.
@exception InvalidKeyException if the verification key is invalid.

@return <tt>true</tt> if the signature 
is valid, <tt>false</tt> otherwise"
      end

      operation 7624475 "sign"
	private explicit_return_type "void"
	nparams 2
	  param inout name "signingKey" type class_ref 964123 // PrivateKey
	  param inout name "signingEngine" type class_ref 968603 // Signature
	nexceptions 2
	  exception class_ref 963355 // InvalidKeyException
	  exception class_ref 968859 // SignatureException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Signs the encapsulated object with the given signing key, using the
designated signature engine.

@param signingKey the private key for signing.
@param signingEngine the signature signing engine.

@exception InvalidKeyException if the key is invalid.
@exception SignatureException if signing fails."
      end

      operation 7624603 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the SignedObject from
a stream."
      end
    end

    class 969371 "Signer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to represent an Identity that can also digitally
sign data.

<p>The management of a signer's private keys is an important and
sensitive issue that should be handled by subclasses as appropriate
to their intended use.

@see Identity

@version 1.42 04/05/18
@author Benjamin Renaud

@deprecated This class is no longer used. Its functionality has been
replaced by <code>java.security.KeyStore</code>, the
<code>java.security.cert</code> package, and
<code>java.security.Principal</code>."
      classrelation 1882523 // <generalisation>
	relation 1882523 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1882523 // <generalisation>
	  b parent class_ref 963099 // Identity
      end

      attribute 2851355 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -1763464102261361480L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1882651 // privateKey (<unidirectional association>)
	relation 1882651 --->
	  a role_name "privateKey" private
	    comment "
The signer's private key.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1882651 // privateKey (<unidirectional association>)
	  b parent class_ref 964123 // PrivateKey
      end

      operation 7624731 "Signer"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a signer. This constructor should only be used for
serialization."
      end

      operation 7624859 "Signer"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a signer with the specified identity name.

@param name the identity name."
      end

      operation 7624987 "Signer"
	public explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "scope" type class_ref 840987 // IdentityScope
	nexceptions 1
	  exception class_ref 963227 // KeyManagementException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a signer with the specified identity name and scope.

@param name the identity name.

@param scope the scope of the identity.

@exception KeyManagementException if there is already an identity
with the same name in the scope."
      end

      operation 7625115 "getPrivateKey"
	public return_type class_ref 964123 // PrivateKey
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this signer's private key.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"getSignerPrivateKey\"</code> 
as its argument to see if it's ok to return the private key. 

@return this signer's private key, or null if the private key has
not yet been set.

@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
returning the private key.

@see SecurityManager#checkSecurityAccess"
      end

      operation 7625243 "setKeyPair"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pair" type class_ref 964251 // KeyPair
	nexceptions 2
	  exception class_ref 963483 // InvalidParameterException
	  exception class_ref 962203 // KeyException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the key pair (public key and private key) for this signer.

<p>First, if there is a security manager, its <code>checkSecurityAccess</code> 
method is called with <code>\"setSignerKeyPair\"</code> 
as its argument to see if it's ok to set the key pair. 

@param pair an initialized key pair.

@exception InvalidParameterException if the key pair is not
properly initialized.
@exception KeyException if the key pair cannot be set for any
other reason.
@exception  SecurityException  if a security manager exists and its  
<code>checkSecurityAccess</code> method doesn't allow 
setting the key pair.

@see SecurityManager#checkSecurityAccess"
      end

      operation 7625371 "printKeys"
	package explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7625499 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string of information about the signer.

@return a string of information about the signer."
      end

      operation 7625627 "check"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "directive" explicit_type "String"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 969499 "UnresolvedPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The UnresolvedPermission class is used to hold Permissions that
were \"unresolved\" when the Policy was initialized. 
An unresolved permission is one whose actual Permission class
does not yet exist at the time the Policy is initialized (see below).

<p>The policy for a Java runtime (specifying 
which permissions are available for code from various principals)
is represented by a Policy object.
Whenever a Policy is initialized or refreshed, Permission objects of
appropriate classes are created for all permissions
allowed by the Policy. 

<p>Many permission class types 
referenced by the policy configuration are ones that exist
locally (i.e., ones that can be found on CLASSPATH).
Objects for such permissions can be instantiated during
Policy initialization. For example, it is always possible
to instantiate a java.io.FilePermission, since the
FilePermission class is found on the CLASSPATH.

<p>Other permission classes may not yet exist during Policy
initialization. For example, a referenced permission class may
be in a JAR file that will later be loaded.
For each such class, an UnresolvedPermission is instantiated.
Thus, an UnresolvedPermission is essentially a \"placeholder\"
containing information about the permission.

<p>Later, when code calls AccessController.checkPermission 
on a permission of a type that was previously unresolved,
but whose class has since been loaded, previously-unresolved
permissions of that type are \"resolved\". That is,
for each such UnresolvedPermission, a new object of
the appropriate class type is instantiated, based on the
information in the UnresolvedPermission.

<p> To instantiate the new class, UnresolvedPermission assumes
the class provides a zero, one, and/or two-argument constructor.
The zero-argument constructor would be used to instantiate
a permission without a name and without actions.
A one-arg constructor is assumed to take a <code>String</code>
name as input, and a two-arg constructor is assumed to take a
<code>String</code> name and <code>String</code> actions
as input.  UnresolvedPermission may invoke a
constructor with a <code>null</code> name and/or actions.
If an appropriate permission constructor is not available,
the UnresolvedPermission is ignored and the relevant permission
will not be granted to executing code.

<p> The newly created permission object replaces the
UnresolvedPermission, which is removed.

<p> Note that the <code>getName</code> method for an
<code>UnresolvedPermission</code> returns the
<code>type</code> (class name) for the underlying permission
that has not been resolved.

@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.security.Policy

@version 1.29 04/02/03

@author Roland Schemers"
      classrelation 1883419 // <generalisation>
	relation 1883419 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1883419 // <generalisation>
	  b parent class_ref 285211 // Permission
      end

      classrelation 1883547 // <realization>
	relation 1883547 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1883547 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      attribute 2851995 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -4821973115467008846L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2852123 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "= 
	sun.security.util.Debug.getInstance
	(\"policy,access\", \"UnresolvedPermission\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2852251 "type"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The class name of the Permission class that will be
created when this unresolved permission is resolved.

@serial
"
      end

      attribute 2852379 "name"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The permission name.

@serial
"
      end

      attribute 2852507 "actions"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The actions of the permission.

@serial
"
      end

      classrelation 1883675 // certs (<unidirectional association>)
	relation 1883675 --->
	  a role_name "certs" multiplicity "[]" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1883675 // certs (<unidirectional association>)
	  b parent class_ref 528283 // Certificate
      end

      operation 7627035 "UnresolvedPermission"
	public explicit_return_type ""
	nparams 4
	  param in name "type" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param in name "actions" explicit_type "String"
	  param inout name "certs" type class_ref 528283 // Certificate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new UnresolvedPermission containing the permission
information needed later to actually create a Permission of the
specified class, when the permission is resolved.

@param type the class name of the Permission class that will be
created when this unresolved permission is resolved.
@param name the name of the permission.
@param actions the actions of the permission.
@param certs the certificates the permission's class was signed with.
This is a list of certificate chains, where each chain is composed of a
signer certificate and optionally its supporting certificate chain.
Each chain is ordered bottom-to-top (i.e., with the signer certificate
first and the (root) certificate authority last). The signer 
certificates are copied from the array. Subsequent changes to
the array will not affect this UnsolvedPermission."
      end

      classrelation 1883803 // PARAMS0 (<unidirectional association>)
	relation 1883803 --->
	  a role_name "PARAMS0" multiplicity "[]" init_value "=  { }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1883803 // PARAMS0 (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 1883931 // PARAMS1 (<unidirectional association>)
	relation 1883931 --->
	  a role_name "PARAMS1" multiplicity "[]" init_value "=  { String.class }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1883931 // PARAMS1 (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      classrelation 1884059 // PARAMS2 (<unidirectional association>)
	relation 1884059 --->
	  a role_name "PARAMS2" multiplicity "[]" init_value "=  { String.class, String.class }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1884059 // PARAMS2 (<unidirectional association>)
	  b parent class_ref 164635 // Class
      end

      operation 7627163 "resolve"
	package return_type class_ref 285211 // Permission
	nparams 2
	  param inout name "p" type class_ref 285211 // Permission
	  param inout name "certs" type class_ref 528283 // Certificate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "try and resolve this permission using the class loader of the permission
that was passed in."
      end

      operation 7627291 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method always returns false for unresolved permissions.
That is, an UnresolvedPermission is never considered to
imply another permission.

@param p the permission to check against.

@return false."
      end

      operation 7627419 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two UnresolvedPermission objects for equality. 
Checks that <i>obj</i> is an UnresolvedPermission, and has 
the same type (class) name, permission name, actions, and
certificates as this object.

<p> To determine certificate equality, this method only compares
actual signer certificates.  Supporting certificate chains
are not taken into consideration by this method.

@param obj the object we are testing for equality with this object.

@return true if obj is an UnresolvedPermission, and has the same 
type (class) name, permission name, actions, and
certificates as this object."
      end

      operation 7627547 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object."
      end

      operation 7627675 "getActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical string representation of the actions,
which currently is the empty string \"\", since there are no actions for 
an UnresolvedPermission. That is, the actions for the
permission that will be created when this UnresolvedPermission
is resolved may be non-null, but an UnresolvedPermission
itself is never considered to have any actions.

@return the empty string \"\"."
      end

      operation 7627803 "getUnresolvedType"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the type (class name) of the underlying permission that
has not been resolved.

@return the type (class name) of the underlying permission that
	has not been resolved

@since 1.5"
      end

      operation 7627931 "getUnresolvedName"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the target name of the underlying permission that
has not been resolved.

@return the target name of the underlying permission that
		has not been resolved, or <code>null</code>,
		if there is no targe name

@since 1.5"
      end

      operation 7628059 "getUnresolvedActions"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the actions for the underlying permission that
has not been resolved.

@return the actions for the underlying permission that
		has not been resolved, or <code>null</code>
		if there are no actions

@since 1.5"
      end

      operation 7628187 "getUnresolvedCerts"
	public return_type class_ref 528283 // Certificate
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the signer certificates (without any supporting chain)
for the underlying permission that has not been resolved.

@return the signer certificates for the underlying permission that
has not been resolved, or null, if there are no signer certificates.
Returns a new array each time this method is called.

@since 1.5"
      end

      operation 7628315 "toString"
	public explicit_return_type "String"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this UnresolvedPermission.  The convention 
is to specify the class name, the permission name, and the actions, in
the following format: '(unresolved \"ClassName\" \"name\" \"actions\")'.

@return information about this UnresolvedPermission."
      end

      operation 7628443 "newPermissionCollection"
	public return_type class_ref 285467 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new PermissionCollection object for storing 
UnresolvedPermission  objects.
<p>
@return a new PermissionCollection object suitable for 
storing UnresolvedPermissions."
      end

      operation 7628571 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this object out to a stream (i.e., serializes it).

@serialData An initial <code>String</code> denoting the
<code>type</code> is followed by a <code>String</code> denoting the
<code>name</code> is followed by a <code>String</code> denoting the
<code>actions</code> is followed by an <code>int</code> indicating the
number of certificates to follow 
(a value of \"zero\" denotes that there are no certificates associated
with this object).
Each certificate is written out starting with a <code>String</code>
denoting the certificate type, followed by an
<code>int</code> specifying the length of the certificate encoding,
followed by the certificate encoding itself which is written out as an
array of bytes."
      end

      operation 7628699 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores this object from a stream (i.e., deserializes it)."
      end
    end

    class 969627 "UnresolvedPermissionCollection"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A UnresolvedPermissionCollection stores a collection
of UnresolvedPermission permissions.

@see java.security.Permission
@see java.security.Permissions
@see java.security.UnresolvedPermission

@version 1.14 03/12/19

@author Roland Schemers

@serial include"
      classrelation 1884187 // <generalisation>
	relation 1884187 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1884187 // <generalisation>
	  b parent class_ref 285467 // PermissionCollection
      end

      classrelation 1884315 // <realization>
	relation 1884315 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1884315 // <realization>
	  b parent class_ref 137883 // Serializable
      end

      classrelation 1884443 // perms (<unidirectional association>)
	relation 1884443 --->
	  a role_name "perms" private
	    comment "
Key is permission type, value is a list of the UnresolvedPermissions
of the same type.
Not serialized; see serialization section at end of class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1884443 // perms (<unidirectional association>)
	  b parent class_ref 136603 // Map
      end

      operation 7628827 "UnresolvedPermissionCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty UnresolvedPermissionCollection object.
"
      end

      operation 7628955 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a permission to this UnresolvedPermissionCollection. 
The key for the hash is the unresolved permission's type (class) name.

@param permission the Permission object to add."
      end

      operation 7629083 "getUnresolvedPermissions"
	package return_type class_ref 135579 // List
	nparams 1
	  param inout name "p" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get any unresolved permissions of the same type as p,
and return the List containing them."
      end

      operation 7629211 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 285211 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "always returns false for unresolved permissions
"
      end

      operation 7629339 "elements"
	public return_type class_ref 144411 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of all the UnresolvedPermission lists in the
container.

@return an enumeration of all the UnresolvedPermission objects."
      end

      attribute 2852635 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -7176153071733132400L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1884571 // serialPersistentFields (<unidirectional association>)
	relation 1884571 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "=  {
        new ObjectStreamField(\"permissions\", Hashtable.class),
    }" class_relation const_relation private
	    comment " Need to maintain serialization interoperability with earlier releases,
 which had the serializable field:
 private Hashtable permissions; // keyed on type

@serialField permissions java.util.Hashtable
    A table of the UnresolvedPermissions keyed on type, value is Vector
    of permissions

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1884571 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 285723 // ObjectStreamField
      end

      operation 7629467 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 205339 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 179355 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Default field.


Writes the contents of the perms field out as a Hashtable 
in which the values are Vectors for
serialization compatibility with earlier releases."
      end

      operation 7629595 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 201115 // ObjectInputStream
	nexceptions 2
	  exception class_ref 179355 // IOException
	  exception class_ref 201883 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in a Hashtable in which the values are Vectors of
UnresolvedPermissions and saves them in the perms field. "
      end
    end
  end

  deploymentview 133403 "security"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 171803 "PrivilegedAction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 222363 // PrivilegedAction
      end
      comment "@(#)PrivilegedAction.java	1.10 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 214427 "Guard"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 285339 // Guard
      end
      comment "@(#)Guard.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 214555 "Permission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 285211 // Permission
      end
      comment "@(#)Permission.java	1.39 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 214683 "BasicPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Map;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Collections;
import java.util.StringTokenizer;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 285083 // BasicPermission
	class_ref 285595 // BasicPermissionCollection
      end
      comment "@(#)BasicPermission.java	1.40 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 214811 "PermissionCollection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_classes
	class_ref 285467 // PermissionCollection
      end
      comment "@(#)PermissionCollection.java	1.35 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 350747 "DomainCombiner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 526747 // DomainCombiner
      end
      comment "@(#)DomainCombiner.java	1.7 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 351899 "PrivilegedExceptionAction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 529051 // PrivilegedExceptionAction
      end
      comment "@(#)PrivilegedExceptionAction.java	1.10 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 370587 "Principal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 527131 // Principal
      end
      comment "@(#)Principal.java	1.22 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 620059 "GeneralSecurityException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 842139 // GeneralSecurityException
      end
      comment "@(#)GeneralSecurityException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 620827 "CodeSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
import java.net.SocketPermission;
import java.util.ArrayList;
import java.util.List;
import java.util.Hashtable;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.cert.*;
${definition}"
      associated_classes
	class_ref 527259 // CodeSource
      end
      comment "@(#)CodeSource.java	1.38 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 704667 "SecureClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
import java.util.ArrayList;
import java.net.URL;
import sun.security.util.Debug;
${definition}"
      associated_classes
	class_ref 933787 // SecureClassLoader
      end
      comment "@(#)SecureClassLoader.java	1.85 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 730779 "AccessControlContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import sun.security.util.Debug;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 163739 // AccessControlContext
      end
      comment "@(#)AccessControlContext.java	1.40 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 730907 "AccessControlException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 959131 // AccessControlException
      end
      comment "@(#)AccessControlException.java	1.13 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731035 "AccessController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.security.util.Debug;
${definition}"
      associated_classes
	class_ref 959259 // AccessController
      end
      comment "@(#)AccessController.java	1.55 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731163 "AlgorithmParameterGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 959515 // AlgorithmParameterGenerator
      end
      comment "@(#)AlgorithmParameterGenerator.java	1.40 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731291 "AlgorithmParameterGeneratorSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 959771 // AlgorithmParameterGeneratorSpi
      end
      comment "@(#)AlgorithmParameterGeneratorSpi.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731419 "AlgorithmParameters"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
${definition}"
      associated_classes
	class_ref 960539 // AlgorithmParameters
      end
      comment "@(#)AlgorithmParameters.java	1.24 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731547 "AlgorithmParametersSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
${definition}"
      associated_classes
	class_ref 960667 // AlgorithmParametersSpi
      end
      comment "@(#)AlgorithmParametersSpi.java	1.12 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731675 "AllPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.StringTokenizer;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 960923 // AllPermission
	class_ref 961051 // AllPermissionCollection
      end
      comment "@(#)AllPermission.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731803 "Provider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.lang.ref.*;
import java.lang.reflect.*;
import java.security.cert.CertStoreParameters;
${definition}"
      associated_classes
	class_ref 959643 // Provider
      end
      comment "@(#)Provider.java	1.64 05/04/08

Copyright 2005 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 731931 "AuthProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.Subject;
import javax.security.auth.login.LoginException;
import javax.security.auth.callback.CallbackHandler;
${definition}"
      associated_classes
	class_ref 961179 // AuthProvider
      end
      comment "@(#)AuthProvider.java	1.3 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732059 "Certificate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.Date;
${definition}"
      associated_classes
	class_ref 961947 // Certificate
      end
      comment "@(#)Certificate.java	1.37 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732187 "CodeSigner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.cert.CertPath;
${definition}"
      associated_classes
	class_ref 842907 // CodeSigner
      end
      comment "@(#)CodeSigner.java	1.4 04/04/26

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732315 "DigestException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 962459 // DigestException
      end
      comment "@(#)DigestException.java	1.17 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732443 "DigestInputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.io.FilterInputStream;
import java.io.PrintStream;
import java.io.ByteArrayInputStream;
${definition}"
      associated_classes
	class_ref 962587 // DigestInputStream
      end
      comment "@(#)DigestInputStream.java	1.37 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732571 "DigestOutputStream"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.EOFException;
import java.io.OutputStream;
import java.io.FilterOutputStream;
import java.io.PrintStream;
import java.io.ByteArrayOutputStream;
${definition}"
      associated_classes
	class_ref 962843 // DigestOutputStream
      end
      comment "@(#)DigestOutputStream.java	1.31 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732699 "GuardedObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 962971 // GuardedObject
      end
      comment "@(#)GuardedObject.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732827 "Identity"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.*;
${definition}"
      associated_classes
	class_ref 963099 // Identity
      end
      comment "@(#)Identity.java	1.61 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 732955 "IdentityScope"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Enumeration;
import java.util.Properties;
${definition}"
      associated_classes
	class_ref 840987 // IdentityScope
      end
      comment "@(#)IdentityScope.java	1.54 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733083 "InvalidAlgorithmParameterException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 960411 // InvalidAlgorithmParameterException
      end
      comment "@(#)InvalidAlgorithmParameterException.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733211 "KeyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 962203 // KeyException
      end
      comment "@(#)KeyException.java	1.19 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733339 "InvalidKeyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 963355 // InvalidKeyException
      end
      comment "@(#)InvalidKeyException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733467 "InvalidParameterException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 963483 // InvalidParameterException
      end
      comment "@(#)InvalidParameterException.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733595 "Key"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 961819 // Key
      end
      comment "@(#)Key.java	1.54 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733723 "KeyFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Provider.Service;
import java.security.spec.KeySpec;
import java.security.spec.InvalidKeySpecException;
import sun.security.util.Debug;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_classes
	class_ref 963611 // KeyFactory
      end
      comment "@(#)KeyFactory.java	1.32 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733851 "KeyFactorySpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.KeySpec;
import java.security.spec.InvalidKeySpecException;
${definition}"
      associated_classes
	class_ref 963739 // KeyFactorySpi
      end
      comment "@(#)KeyFactorySpi.java	1.12 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 733979 "KeyManagementException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 963227 // KeyManagementException
      end
      comment "@(#)KeyManagementException.java	1.18 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734107 "KeyPair"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_classes
	class_ref 964251 // KeyPair
      end
      comment "@(#)KeyPair.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734235 "KeyPairGeneratorSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
${definition}"
      associated_classes
	class_ref 964507 // KeyPairGeneratorSpi
      end
      comment "@(#)KeyPairGeneratorSpi.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734363 "KeyPairGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.spec.AlgorithmParameterSpec;
import java.security.Provider.Service;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_classes
	class_ref 964379 // KeyPairGenerator
      end
      comment "@(#)KeyPairGenerator.java	1.56 04/01/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734491 "KeyRep"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.security.spec.InvalidKeySpecException;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.SecretKeySpec;
${definition}"
      associated_classes
	class_ref 964763 // KeyRep
      end
      comment "@(#)KeyRep.java	1.7 04/04/20

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734747 "KeyStore"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.security.cert.CertificateException;
import java.util.*;
import javax.crypto.SecretKey;
import javax.security.auth.callback.*;
${definition}"
      associated_classes
	class_ref 840859 // KeyStore
      end
      comment "@(#)KeyStore.java	1.42 04/06/28

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 734875 "KeyStoreException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 966427 // KeyStoreException
      end
      comment "@(#)KeyStoreException.java	1.12 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735003 "KeyStoreSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
import java.security.KeyStore.*;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import javax.crypto.SecretKey;
import javax.security.auth.callback.*;
${definition}"
      associated_classes
	class_ref 965019 // KeyStoreSpi
      end
      comment "@(#)KeyStoreSpi.java	1.18 04/05/25

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735131 "MessageDigestSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.lang.*;
import java.io.IOException;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.InputStream;
import java.io.ByteArrayInputStream;
import java.nio.ByteBuffer;
import sun.security.jca.JCAUtil;
${definition}"
      associated_classes
	class_ref 967323 // MessageDigestSpi
      end
      comment "@(#)MessageDigestSpi.java	1.15 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735259 "MessageDigest"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.lang.*;
import java.io.IOException;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.InputStream;
import java.io.ByteArrayInputStream;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 962715 // MessageDigest
      end
      comment "@(#)MessageDigest.java	1.77 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735387 "NoSuchAlgorithmException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 959899 // NoSuchAlgorithmException
      end
      comment "@(#)NoSuchAlgorithmException.java	1.25 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735515 "NoSuchProviderException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 960027 // NoSuchProviderException
      end
      comment "@(#)NoSuchProviderException.java	1.20 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735643 "Permissions"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.NoSuchElementException;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Collections;
import java.io.Serializable;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 527387 // Permissions
	class_ref 967579 // PermissionsEnumerator
	class_ref 967707 // PermissionsHash
      end
      comment "@(#)Permissions.java	1.58 04/05/05

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735771 "Policy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.RuntimePermission;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import java.util.StringTokenizer;
import java.util.PropertyPermission;
import java.lang.reflect.*;
import java.util.WeakHashMap;
import sun.security.util.Debug;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 967835 // Policy
      end
      comment "@(#)Policy.java	1.95 06/09/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 735899 "PrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 964123 // PrivateKey
      end
      comment "@(#)PrivateKey.java	1.29 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736027 "PrivilegedActionException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 959387 // PrivilegedActionException
      end
      comment "@(#)PrivilegedActionException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736155 "ProtectionDomain"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.List;
import java.util.ArrayList;
import sun.security.util.Debug;
import sun.security.util.SecurityConstants;
${definition}"
      associated_classes
	class_ref 526875 // ProtectionDomain
      end
      comment "@(#)ProtectionDomain.java	1.45 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736283 "ProviderException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 967963 // ProviderException
      end
      comment "@(#)ProviderException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736411 "PublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 962075 // PublicKey
      end
      comment "@(#)PublicKey.java	1.32 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736539 "SecureRandom"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.security.Provider.Service;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_classes
	class_ref 960155 // SecureRandom
      end
      comment "@(#)SecureRandom.java	1.47 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736667 "SecureRandomSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 968091 // SecureRandomSpi
      end
      comment "@(#)SecureRandomSpi.java	1.11 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736795 "Security"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.*;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;
import java.io.*;
import java.net.URL;
import sun.security.util.Debug;
import sun.security.util.PropertyExpander;
import java.security.Provider.Service;
import sun.security.jca.*;
${definition}"
      associated_classes
	class_ref 968219 // Security
      end
      comment "@(#)Security.java	1.126 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 736923 "SecurityPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.StringTokenizer;
${definition}"
      associated_classes
	class_ref 968475 // SecurityPermission
      end
      comment "@(#)SecurityPermission.java	1.27 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737051 "SignatureSpi"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
import java.util.*;
import java.io.*;
import java.nio.ByteBuffer;
import sun.security.jca.JCAUtil;
${definition}"
      associated_classes
	class_ref 968731 // SignatureSpi
      end
      comment "@(#)SignatureSpi.java	1.24 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737179 "Signature"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.AlgorithmParameterSpec;
import java.util.*;
import java.util.concurrent.ConcurrentHashMap;
import java.io.*;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.nio.ByteBuffer;
import java.security.Provider.Service;
import javax.crypto.Cipher;
import javax.crypto.CipherSpi;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.BadPaddingException;
import javax.crypto.NoSuchPaddingException;
import sun.security.util.Debug;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_classes
	class_ref 968603 // Signature
      end
      comment "@(#)Signature.java	1.99 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737307 "SignatureException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 968859 // SignatureException
      end
      comment "@(#)SignatureException.java	1.16 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737435 "SignedObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
${definition}"
      associated_classes
	class_ref 969243 // SignedObject
      end
      comment "@(#)SignedObject.java	1.43 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737563 "Signer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
${definition}"
      associated_classes
	class_ref 969371 // Signer
      end
      comment "@(#)Signer.java	1.42 04/05/18

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737691 "Timestamp"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.security.cert.CertPath;
import java.security.cert.X509Extension;
import java.util.Date;
${definition}"
      associated_classes
	class_ref 962331 // Timestamp
      end
      comment "@(#)Timestamp.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737819 "UnrecoverableEntryException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 966811 // UnrecoverableEntryException
      end
      comment "@(#)UnrecoverableEntryException.java	1.2 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 737947 "UnrecoverableKeyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 966555 // UnrecoverableKeyException
      end
      comment "@(#)UnrecoverableKeyException.java	1.10 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 738075 "UnresolvedPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ByteArrayInputStream;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
import java.lang.reflect.*;
import java.security.cert.*;
${definition}"
      associated_classes
	class_ref 969499 // UnresolvedPermission
      end
      comment "@(#)UnresolvedPermission.java	1.29 04/02/03

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end

    artifact 738203 "UnresolvedPermissionCollection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.ObjectStreamField;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 969627 // UnresolvedPermissionCollection
      end
      comment "@(#)UnresolvedPermissionCollection.java	1.14 03/12/19

Copyright 2004 Sun Microsystems, Inc. All rights reserved.
SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms."
    end
  end

  package_ref 160923 // cert

  package_ref 162075 // acl

  package_ref 181403 // spec

  package_ref 181531 // interfaces
end
