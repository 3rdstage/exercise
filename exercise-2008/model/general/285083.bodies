class BasicPermission
!!!1530395.java!!!	init(in name : String) : void
	if (name == null)
	    throw new NullPointerException("name can't be null");

	int len = name.length();
	    
	if (len == 0) {
	    throw new IllegalArgumentException("name can't be empty");
	}

	char last = name.charAt(len - 1);

	// Is wildcard or ends with ".*"?
	if (last == '*' && (len == 1 || name.charAt(len - 2) == '.')) {
	    wildcard = true;
	    if (len == 1) {
		path = "";
	    } else {
		path = name.substring(0, len - 1);
	    }
	} else {
	    path = name;
	}
!!!1530523.java!!!	BasicPermission(in name : String)
	super(name);
	init(name);
!!!1530651.java!!!	BasicPermission(in name : String, in actions : String)
	super(name);
	init(name);
!!!1530779.java!!!	implies(inout p : Permission) : boolean
	if ((p == null) || (p.getClass() != getClass()))
	    return false;

	BasicPermission that = (BasicPermission) p;

	if (this.wildcard) {
	    if (that.wildcard)
		// one wildcard can imply another
		return that.path.startsWith(path);
	    else
		// make sure ap.path is longer so a.b.* doesn't imply a.b
		return (that.path.length() > this.path.length()) &&
		    that.path.startsWith(this.path);
	} else {
	    if (that.wildcard) {
		// a non-wildcard can't imply a wildcard
		return false;
	    }
	    else {
		return this.path.equals(that.path);
	    }
	}
!!!1530907.java!!!	equals(inout obj : Object) : boolean
	if (obj == this)
	    return true;

	if ((obj == null) || (obj.getClass() != getClass()))
	    return false;

	BasicPermission bp = (BasicPermission) obj;

	return getName().equals(bp.getName());
!!!1531035.java!!!	hashCode() : int
	return this.getName().hashCode();
!!!1531163.java!!!	getActions() : String
	return "";
!!!1531291.java!!!	newPermissionCollection() : PermissionCollection
	return new BasicPermissionCollection();
!!!1531419.java!!!	readObject(inout s : ObjectInputStream) : void
	s.defaultReadObject();
	// init is called to initialize the rest of the values.
	init(getName());
