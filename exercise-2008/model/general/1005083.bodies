class JarOutputStream
!!!8030747.java!!!	JarOutputStream(inout out : OutputStream, inout man : Manifest)
	super(out);
	if (man == null) {
	    throw new NullPointerException("man");
	}
	ZipEntry e = new ZipEntry(JarFile.MANIFEST_NAME);
	putNextEntry(e);
	man.write(new BufferedOutputStream(this));
	closeEntry();
!!!8030875.java!!!	JarOutputStream(inout out : OutputStream)
	super(out);
!!!8031003.java!!!	putNextEntry(inout ze : ZipEntry) : void
	if (firstEntry) {
	    // Make sure that extra field data for first JAR
	    // entry includes JAR magic number id.
	    byte[] edata = ze.getExtra();
	    if (edata != null && !hasMagic(edata)) {
		// Prepend magic to existing extra data
		byte[] tmp = new byte[edata.length + 4];
		System.arraycopy(tmp, 4, edata, 0, edata.length);
		edata = tmp;
	    } else {
		edata = new byte[4];
	    }
	    set16(edata, 0, JAR_MAGIC); // extra field id
	    set16(edata, 2, 0);         // extra field size
	    ze.setExtra(edata);
	    firstEntry = false;
	}
	super.putNextEntry(ze);
!!!8031131.java!!!	hasMagic(in edata : byte) : boolean
	try {
	    int i = 0;
	    while (i < edata.length) {
		if (get16(edata, i) == JAR_MAGIC) {
		    return true;
		}
		i += get16(edata, i + 2) + 4;
	    }
	} catch (ArrayIndexOutOfBoundsException e) {
	    // Invalid extra field data
	}
	return false;
!!!8031259.java!!!	get16(in b : byte, in off : int) : int
	return (b[off] & 0xff) | ((b[off+1] & 0xff) << 8);
!!!8031387.java!!!	set16(in b : byte, in off : int, in value : int) : void
	b[off+0] = (byte)value;
	b[off+1] = (byte)(value >> 8);
