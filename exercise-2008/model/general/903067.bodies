class BufferedOutputStream
!!!6829467.java!!!	BufferedOutputStream(inout out : OutputStream)
	this(out, 8192);
!!!6829595.java!!!	BufferedOutputStream(inout out : OutputStream, in size : int)
	super(out);
        if (size <= 0) {
            throw new IllegalArgumentException("Buffer size <= 0");
        }
	buf = new byte[size];
!!!6829723.java!!!	flushBuffer() : void
        if (count > 0) {
	    out.write(buf, 0, count);
	    count = 0;
        }
!!!6829851.java!!!	write(in b : int) : void
	if (count >= buf.length) {
	    flushBuffer();
	}
	buf[count++] = (byte)b;
!!!6829979.java!!!	write(in b : byte, in off : int, in len : int) : void
	if (len >= buf.length) {
	    /* If the request length exceeds the size of the output buffer,
    	       flush the output buffer and then write the data directly.
    	       In this way buffered streams will cascade harmlessly. */
	    flushBuffer();
	    out.write(b, off, len);
	    return;
	}
	if (len > buf.length - count) {
	    flushBuffer();
	}
	System.arraycopy(b, off, buf, count, len);
	count += len;
!!!6830107.java!!!	flush() : void
        flushBuffer();
	out.flush();
