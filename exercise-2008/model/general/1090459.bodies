class AudioFormat
!!!8722075.java!!!	AudioFormat(inout encoding : Encoding, in sampleRate : float, in sampleSizeInBits : int, in channels : int, in frameSize : int, in frameRate : float, inout bigEndian : boolean)

	this.encoding = encoding;
	this.sampleRate = sampleRate;
	this.sampleSizeInBits = sampleSizeInBits;
	this.channels = channels;
	this.frameSize = frameSize;
	this.frameRate = frameRate;
	this.bigEndian = bigEndian;
	this.properties = null;
!!!8722203.java!!!	AudioFormat(inout encoding : Encoding, in sampleRate : float, in sampleSizeInBits : int, in channels : int, in frameSize : int, in frameRate : float, inout bigEndian : boolean, inout properties : Map)
	this(encoding, sampleRate, sampleSizeInBits, channels,
	     frameSize, frameRate, bigEndian);
	this.properties = new HashMap<String, Object>(properties);
!!!8722331.java!!!	AudioFormat(in sampleRate : float, in sampleSizeInBits : int, in channels : int, inout signed : boolean, inout bigEndian : boolean)

	this((signed == true ? Encoding.PCM_SIGNED : Encoding.PCM_UNSIGNED),
	     sampleRate,
	     sampleSizeInBits,
	     channels,
	     (channels == AudioSystem.NOT_SPECIFIED || sampleSizeInBits == AudioSystem.NOT_SPECIFIED)?
	     AudioSystem.NOT_SPECIFIED:
	     ((sampleSizeInBits + 7) / 8) * channels,
	     sampleRate,
	     bigEndian);
!!!8722459.java!!!	getEncoding() : Encoding

	return encoding;
!!!8722587.java!!!	getSampleRate() : float

	return sampleRate;
!!!8722715.java!!!	getSampleSizeInBits() : int

	return sampleSizeInBits;
!!!8722843.java!!!	getChannels() : int

	return channels;
!!!8722971.java!!!	getFrameSize() : int

	return frameSize;
!!!8723099.java!!!	getFrameRate() : float

	return frameRate;
!!!8723227.java!!!	isBigEndian() : boolean

	return bigEndian;
!!!8723355.java!!!	properties() : Map
	Map<String,Object> ret;
	if (properties == null) {
	    ret = new HashMap<String,Object>(0);
	} else {
	    ret = (Map<String,Object>) (properties.clone());
	}
	return (Map<String,Object>) Collections.unmodifiableMap(ret);
!!!8723483.java!!!	getProperty(in key : String) : Object
	if (properties == null) {
	    return null;
	}
	return properties.get(key);
!!!8723611.java!!!	matches(inout format : AudioFormat) : boolean

	if (format.getEncoding().equals(getEncoding()) &&
	    ( (format.getSampleRate() == (float)AudioSystem.NOT_SPECIFIED) || (format.getSampleRate() == getSampleRate()) ) &&
	    (format.getSampleSizeInBits() == getSampleSizeInBits()) &&
	    (format.getChannels() == getChannels() &&
	     (format.getFrameSize() == getFrameSize()) &&
	     ( (format.getFrameRate() == (float)AudioSystem.NOT_SPECIFIED) || (format.getFrameRate() == getFrameRate()) ) &&
	     ( (format.getSampleSizeInBits() <= 8)  || (format.isBigEndian() == isBigEndian()) ) ) )
	    return true;

	return false;
!!!8723739.java!!!	toString() : String
	String sEncoding = "";
	if (getEncoding() != null) {
	    sEncoding = getEncoding().toString() + " ";
	}

	String sSampleRate;
	if (getSampleRate() == (float) AudioSystem.NOT_SPECIFIED) {
	    sSampleRate = "unknown sample rate, ";
	} else {
	    sSampleRate = "" + getSampleRate() + " Hz, ";
	}

	String sSampleSizeInBits;
	if (getSampleSizeInBits() == (float) AudioSystem.NOT_SPECIFIED) {
	    sSampleSizeInBits = "unknown bits per sample, ";
	} else {
	    sSampleSizeInBits = "" + getSampleSizeInBits() + " bit, ";
	}

	String sChannels;
	if (getChannels() == 1) {
	    sChannels = "mono, ";
	} else
	    if (getChannels() == 2) {
		sChannels = "stereo, ";
	    } else {
		if (getChannels() == AudioSystem.NOT_SPECIFIED) {
		    sChannels = " unknown number of channels, ";
		} else {
		    sChannels = ""+getChannels()+" channels, ";
		}
	    }

	String sFrameSize;
	if (getFrameSize() == (float) AudioSystem.NOT_SPECIFIED) {
	    sFrameSize = "unknown frame size, ";
	} else {
	    sFrameSize = "" + getFrameSize()+ " bytes/frame, ";
	}

        String sFrameRate = "";
        if (Math.abs(getSampleRate() - getFrameRate()) > 0.00001) {
	    if (getFrameRate() == (float) AudioSystem.NOT_SPECIFIED) {
		sFrameRate = "unknown frame rate, ";
	    } else {
		sFrameRate = getFrameRate() + " frames/second, ";
	    }
	}

	String sEndian = "";
	if ((getEncoding().equals(Encoding.PCM_SIGNED)
	     || getEncoding().equals(Encoding.PCM_UNSIGNED))
	    && ((getSampleSizeInBits() > 8)
	        || (getSampleSizeInBits() == AudioSystem.NOT_SPECIFIED))) {
	    if (isBigEndian()) {
		sEndian = "big-endian";
	    } else {
		sEndian = "little-endian";
	    }
	}

	return sEncoding
	    + sSampleRate
	    + sSampleSizeInBits
	    + sChannels
	    + sFrameSize
	    + sFrameRate
	    + sEndian;

