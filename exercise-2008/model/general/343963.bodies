class ImageWriter
!!!1912603.java!!!	ImageWriter(inout originatingProvider : ImageWriterSpi)
        this.originatingProvider = originatingProvider;
!!!1912731.java!!!	getOriginatingProvider() : ImageWriterSpi
        return originatingProvider;
!!!1912859.java!!!	setOutput(inout output : Object) : void
        if (output != null) {
            ImageWriterSpi provider = getOriginatingProvider();
            if (provider != null) {
                Class[] classes = provider.getOutputTypes();
                boolean found = false;
                for (int i = 0; i < classes.length; i++) {
                    if (classes[i].isInstance(output)) {
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    throw new IllegalArgumentException("Illegal output type!");
                }
            }
        }

        this.output = output;
!!!1912987.java!!!	getOutput() : Object
        return output;
!!!1913115.java!!!	getAvailableLocales() : Locale
        return (availableLocales == null) ?
            null : (Locale[])availableLocales.clone();
!!!1913243.java!!!	setLocale(inout locale : Locale) : void
        if (locale != null) {
            Locale[] locales = getAvailableLocales();
            boolean found = false;
            if (locales != null) {
                for (int i = 0; i < locales.length; i++) {
                    if (locale.equals(locales[i])) {
                        found = true;
                        break;
                    }
                }
            }
            if (!found) {
                throw new IllegalArgumentException("Invalid locale!");
            }
        }
        this.locale = locale;
!!!1913371.java!!!	getLocale() : Locale
        return locale;
!!!1913499.java!!!	getDefaultWriteParam() : ImageWriteParam
        return new ImageWriteParam(getLocale());
!!!1914139.java!!!	getNumThumbnailsSupported(inout imageType : ImageTypeSpecifier, inout param : ImageWriteParam, inout streamMetadata : IIOMetadata, inout imageMetadata : IIOMetadata) : int
        return 0;
!!!1914267.java!!!	getPreferredThumbnailSizes(inout imageType : ImageTypeSpecifier, inout param : ImageWriteParam, inout streamMetadata : IIOMetadata, inout imageMetadata : IIOMetadata) : Dimension
        return null;
!!!1914395.java!!!	canWriteRasters() : boolean
        return false;
!!!1914651.java!!!	write(inout image : IIOImage) : void
        write(null, image, null);
!!!1914779.java!!!	write(inout image : RenderedImage) : void
        write(null, new IIOImage(image, null, null), null);
!!!1914907.java!!!	unsupported() : void
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        throw new UnsupportedOperationException("Unsupported write variant!");
!!!1915035.java!!!	canWriteSequence() : boolean
        return false;
!!!1915163.java!!!	prepareWriteSequence(inout streamMetadata : IIOMetadata) : void
        unsupported();
!!!1915291.java!!!	writeToSequence(inout image : IIOImage, inout param : ImageWriteParam) : void
        unsupported();
!!!1915419.java!!!	endWriteSequence() : void
        unsupported();
!!!1915547.java!!!	canReplaceStreamMetadata() : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1915675.java!!!	replaceStreamMetadata(inout streamMetadata : IIOMetadata) : void
        unsupported();
!!!1915803.java!!!	canReplaceImageMetadata(in imageIndex : int) : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1915931.java!!!	replaceImageMetadata(in imageIndex : int, inout imageMetadata : IIOMetadata) : void
        unsupported();
!!!1916059.java!!!	canInsertImage(in imageIndex : int) : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1916187.java!!!	writeInsert(in imageIndex : int, inout image : IIOImage, inout param : ImageWriteParam) : void
        unsupported();
!!!1916315.java!!!	canRemoveImage(in imageIndex : int) : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1916443.java!!!	removeImage(in imageIndex : int) : void
        unsupported();
!!!1916571.java!!!	canWriteEmpty() : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1916699.java!!!	prepareWriteEmpty(inout streamMetadata : IIOMetadata, inout imageType : ImageTypeSpecifier, in width : int, in height : int, inout imageMetadata : IIOMetadata, inout thumbnails : List, inout param : ImageWriteParam) : void
        unsupported();
!!!1916827.java!!!	endWriteEmpty() : void
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        throw new IllegalStateException("No call to prepareWriteEmpty!");
!!!1916955.java!!!	canInsertEmpty(in imageIndex : int) : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1917083.java!!!	prepareInsertEmpty(in imageIndex : int, inout imageType : ImageTypeSpecifier, in width : int, in height : int, inout imageMetadata : IIOMetadata, inout thumbnails : List, inout param : ImageWriteParam) : void
        unsupported();
!!!1917211.java!!!	endInsertEmpty() : void
        unsupported();
!!!1917339.java!!!	canReplacePixels(in imageIndex : int) : boolean
        if (getOutput() == null) {
            throw new IllegalStateException("getOutput() == null!");
        }
        return false;
!!!1917467.java!!!	prepareReplacePixels(in imageIndex : int, inout region : Rectangle) : void
        unsupported();
!!!1917595.java!!!	replacePixels(inout image : RenderedImage, inout param : ImageWriteParam) : void
 
        unsupported();
!!!1917723.java!!!	replacePixels(inout raster : Raster, inout param : ImageWriteParam) : void
        unsupported();
!!!1917851.java!!!	endReplacePixels() : void
        unsupported();
!!!1917979.java!!!	abort() : void
        this.abortFlag = true;
!!!1918107.java!!!	abortRequested() : boolean
        return this.abortFlag;
!!!1918235.java!!!	clearAbortRequest() : void
        this.abortFlag = false;
!!!1918363.java!!!	addIIOWriteWarningListener(inout listener : IIOWriteWarningListener) : void
        if (listener == null) {
            return;
        }
        warningListeners = ImageReader.addToList(warningListeners, listener);
        warningLocales = ImageReader.addToList(warningLocales, getLocale());
!!!1918491.java!!!	removeIIOWriteWarningListener(inout listener : IIOWriteWarningListener) : void
        if (listener == null || warningListeners == null) {
            return;
        }
        int index = warningListeners.indexOf(listener);
        if (index != -1) {
            warningListeners.remove(index);
            warningLocales.remove(index);
            if (warningListeners.size() == 0) {
                warningListeners = null;
		warningLocales = null;
            }
        }
!!!1918619.java!!!	removeAllIIOWriteWarningListeners() : void
        this.warningListeners = null;
        this.warningLocales = null;
!!!1918747.java!!!	addIIOWriteProgressListener(inout listener : IIOWriteProgressListener) : void
        if (listener == null) {
            return;
        }
        progressListeners = ImageReader.addToList(progressListeners, listener);
!!!1918875.java!!!	removeIIOWriteProgressListener(inout listener : IIOWriteProgressListener) : void
        if (listener == null || progressListeners == null) {
            return;
        }
        progressListeners =
            ImageReader.removeFromList(progressListeners, listener);
!!!1919003.java!!!	removeAllIIOWriteProgressListeners() : void
        this.progressListeners = null;
!!!1919131.java!!!	processImageStarted(in imageIndex : int) : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.imageStarted(this, imageIndex);
        }
!!!1919259.java!!!	processImageProgress(in percentageDone : float) : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.imageProgress(this, percentageDone);
        }
!!!1919387.java!!!	processImageComplete() : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.imageComplete(this);
        }
!!!1919515.java!!!	processThumbnailStarted(in imageIndex : int, in thumbnailIndex : int) : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.thumbnailStarted(this, imageIndex, thumbnailIndex);
        }
!!!1919643.java!!!	processThumbnailProgress(in percentageDone : float) : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.thumbnailProgress(this, percentageDone);
        }
!!!1919771.java!!!	processThumbnailComplete() : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.thumbnailComplete(this);
        }
!!!1919899.java!!!	processWriteAborted() : void
        if (progressListeners == null) {
            return;
        }
        int numListeners = progressListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteProgressListener listener =
                (IIOWriteProgressListener)progressListeners.get(i);
            listener.writeAborted(this);
        }
!!!1920027.java!!!	processWarningOccurred(in imageIndex : int, in warning : String) : void
        if (warningListeners == null) {
            return;
        }
        if (warning == null) {
            throw new IllegalArgumentException("warning == null!");
        }
        int numListeners = warningListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteWarningListener listener =
                (IIOWriteWarningListener)warningListeners.get(i);
            
            listener.warningOccurred(this, imageIndex, warning);
        }
!!!1920155.java!!!	processWarningOccurred(in imageIndex : int, in baseName : String, in keyword : String) : void
        if (warningListeners == null) {
            return;
        }
        if (baseName == null) {
            throw new IllegalArgumentException("baseName == null!");
        }
        if (keyword == null) {
            throw new IllegalArgumentException("keyword == null!");
        }
        int numListeners = warningListeners.size();
        for (int i = 0; i < numListeners; i++) {
            IIOWriteWarningListener listener =
                (IIOWriteWarningListener)warningListeners.get(i);
            Locale locale = (Locale)warningLocales.get(i);
	    if (locale == null) {
		locale = Locale.getDefault();
	    }

	    /**
             * If an applet supplies an implementation of ImageWriter and
	     * resource bundles, then the resource bundle will need to be
	     * accessed via the applet class loader. So first try the context
	     * class loader to locate the resource bundle.
	     * If that throws MissingResourceException, then try the
	     * system class loader.
	     */
	    ClassLoader loader = (ClassLoader)
	    	java.security.AccessController.doPrivileged(
		   new java.security.PrivilegedAction() {
		      public Object run() {
                        return Thread.currentThread().getContextClassLoader();
		      }
                });

            ResourceBundle bundle = null;
            try {
                bundle = ResourceBundle.getBundle(baseName, locale, loader);
            } catch (MissingResourceException mre) {
		try {
		    bundle = ResourceBundle.getBundle(baseName, locale);
		} catch (MissingResourceException mre1) {
		    throw new IllegalArgumentException("Bundle not found!");
		}
            }

            String warning = null;
            try {
                warning = bundle.getString(keyword);
            } catch (ClassCastException cce) {
                throw new IllegalArgumentException("Resource is not a String!");
            } catch (MissingResourceException mre) {
                throw new IllegalArgumentException("Resource is missing!");
            }
            
            listener.warningOccurred(this, imageIndex, warning);
        }
!!!1920283.java!!!	reset() : void
        setOutput(null);
        setLocale(null);
        removeAllIIOWriteWarningListeners();
        removeAllIIOWriteProgressListeners();
        clearAbortRequest();
