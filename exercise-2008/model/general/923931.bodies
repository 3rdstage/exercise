class AccessibleObject
!!!7114139.java!!!	setAccessible(inout array : AccessibleObject, inout flag : boolean) : void
	SecurityManager sm = System.getSecurityManager();
	if (sm != null) sm.checkPermission(ACCESS_PERMISSION);
	for (int i = 0; i < array.length; i++) {
	    setAccessible0(array[i], flag);
	}
!!!7114267.java!!!	setAccessible(inout flag : boolean) : void
	SecurityManager sm = System.getSecurityManager();
	if (sm != null) sm.checkPermission(ACCESS_PERMISSION);
	setAccessible0(this, flag);
!!!7114395.java!!!	setAccessible0(inout obj : AccessibleObject, inout flag : boolean) : void
	if (obj instanceof Constructor && flag == true) {
	    Constructor c = (Constructor)obj;
	    if (c.getDeclaringClass() == Class.class) {
		throw new SecurityException("Can not make a java.lang.Class" +
					    " constructor accessible");
	    }
	}
	obj.override = flag;
!!!7114523.java!!!	isAccessible() : boolean
	return override;
!!!7114779.java!!!	getAnnotation(inout annotationClass : Class) : T
        throw new AssertionError("All subclasses should override this method");
!!!7114907.java!!!	isAnnotationPresent(inout annotationClass : Class) : boolean
        return getAnnotation(annotationClass) != null;
!!!7115035.java!!!	getAnnotations() : Annotation
 
        return getDeclaredAnnotations();
!!!7115163.java!!!	getDeclaredAnnotations() : Annotation
        throw new AssertionError("All subclasses should override this method");
