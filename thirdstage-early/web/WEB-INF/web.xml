<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" id="WebApp_1215498525828">
	<description>don't change nor delete 'display-name' element</description>
	<display-name>thirdstage</display-name>

	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>

	<context-param>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>
			/WEB-INF/faces-config-base.xml,
			/WEB-INF/faces-config-exercise-spring-jsf-case1.xml

			<!-- ,
				/WEB-INF/faces-config-exercise-spring-jsf-case1.xml,
				/WEB-INF/faces-config-accesscontrol.xml,
				/WEB-INF/faces-config-project.xml
			-->
		</param-value>
	</context-param>
	<!--
		<context-param>
		<param-name>com.sun.faces.verifyObjects</param-name>
		<param-value>true</param-value>
		</context-param>
		<context-param>
		<param-name>com.sun.faces.validateXml</param-name>
		<param-value>true</param-value>
		</context-param>
	-->
	<context-param>
		<description>
			This parameter tells MyFaces if javascript code should be
			allowed in the rendered HTML output. If javascript is
			allowed, command_link anchors will have javascript code that
			submits the corresponding form. If javascript is not
			allowed, the state saving info and nested parameters will be
			added as url parameters. Default: "true"
		</description>

		<param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<description>
			If true, rendered HTML code will be formatted, so that it is
			"human readable". i.e. additional line separators and
			whitespace will be written, that do not influence the HTML
			code. Default: "true"
		</description>
		<param-name>org.apache.myfaces.PRETTY_HTML</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>
			If true, a javascript function will be rendered that is able
			to restore the former vertical scroll on every request.
			Convenient feature if you have pages with long lists and you
			do not want the browser page to always jump to the top if
			you trigger a link or button action that stays on the same
			page. Default: "false"
		</description>
		<param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
		<param-value>true</param-value>
	</context-param>

	<context-param>
		<description>Port for SSL Connection</description>
		<param-name>sslPort</param-name>
		<param-value>8443</param-value>
	</context-param>
	<context-param>
		<description>
			displays or not verbosing text on user browser, should be
			true or false
		</description>
		<param-name>verboseOn</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>spring configuration</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/classes/spring-exercise-spring-jsf-case1.xml
		</param-value>
	</context-param>
	
	
	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>
			org.apache.myfaces.webapp.filter.ExtensionsFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<servlet-name>FacesServlet</servlet-name>
	</filter-mapping>
	
	
	<listener>
		<description>
		- ContextLoaderListener needs Servlet 2.4 or higher spec. based container. 
		- For Servlet 2.2 or 2.3 container, use ContextLoaderServlet.
		</description>
		<display-name>Spring Context Loader Listener</display-name>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<description>Axis Engine Listener</description>
		<listener-class>
			org.apache.axis.transport.http.AxisHTTPSessionListener
		</listener-class>
	</listener>

	<servlet>
		<display-name>FacesServlet</display-name>
		<servlet-name>FacesServlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<display-name>RequestPropertiesServlet</display-name>
		<servlet-name>RequestPropertiesServlet</servlet-name>
		<jsp-file>/environment/RequestProperties.jsp</jsp-file>
	</servlet>

	<servlet>
		<servlet-name>TestFileUploadServlet</servlet-name>
		<jsp-file>/tests/TestFileUpload.jsp</jsp-file>
		<init-param>
			<description>
				server-side directory to store uploaded files, context
				relative path
			</description>
			<param-name>uploadDir</param-name>
			<param-value>/upload</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<description>
			Initializes Objects in Application(Context) Scope
		</description>
		<servlet-name>ContextInitServlet</servlet-name>
		<jsp-file>/etc/ContextInit.jsp</jsp-file>
		<init-param>
			<description>properties to initialize Log4j</description>
			<param-name>log4jConfigProps</param-name>
			<param-value>/WEB-INF/classes/log4j.properties</param-value>
		</init-param>
		<init-param>
			<description>
				configuration files to build Hibernate SessionFactory,
				can arrange multiple files separated by comma(,)
			</description>
			<param-name>hibernateConfig</param-name>
			<param-value>
				/WEB-INF/classes/hibernate-exercise-case1.cfg.xml
			</param-value>
		</init-param>
		<init-param>
			<description>
				default locale code for this JVM which overwrites vm
				startup option or system default, ex) ko_KR, en_US
			</description>
			<param-name>defaultLocale</param-name>
			<param-value>en_US</param-value>
		</init-param>
		<init-param>
			<description>
				default timezone id for this JVM which overwrites vm
				startup option or system default
			</description>
			<param-name>defaultTimeZone</param-name>
			<param-value>UTC</param-value>
		</init-param>
		<init-param>
			<description>
				default charset name for this JVM which overwrites vm
				startup option or system default. if to use system
				default, leave the param-value element blank
			</description>
			<param-name>defaultCharset</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<description>Apache-Axis Servlet</description>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>
			org.apache.axis.transport.http.AxisServlet
		</servlet-class>
	</servlet>

	<servlet>
		<description>Apache-Axis Admin Servlet</description>
		<servlet-name>AxisAdminServlet</servlet-name>
		<servlet-class>
			org.apache.axis.transport.http.AdminServlet
		</servlet-class>
		<load-on-startup>100</load-on-startup>
	</servlet>

	<servlet>
		<description>Apache-Axis SOAP Monitoring Service</description>
		<servlet-name>AxisSOAPMonitorServlet</servlet-name>
		<servlet-class>
			org.apache.axis.monitor.SOAPMonitorService
		</servlet-class>
		<init-param>
			<param-name>SOAPMonitorPort</param-name>
			<param-value>5001</param-value>
		</init-param>
		<load-on-startup>100</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>FacesServlet</servlet-name>
		<url-pattern>*.faces</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>FacesServlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>TestFileUploadServlet</servlet-name>
		<url-pattern>/TestFileUploadServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ContextInitServlet</servlet-name>
		<url-pattern>/etc/ContextInit.jsp</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/servlet/AxisServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>*.jws</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisAdminServlet</servlet-name>
		<url-pattern>/servlet/AxisAdminServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisSOAPMonitorServlet</servlet-name>
		<url-pattern>/AxisSOAPMonitor</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<mime-mapping>
		<extension>wsdl</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xsd</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<!--
		<jsp-config>
		<taglib>
		<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
		<taglib-location>/WEB-INF/tlds/c.tld</taglib-location>
		</taglib>
		<taglib>
		<taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>
		<taglib-location>/WEB-INF/tlds/fmt.tld</taglib-location>
		</taglib>
		<taglib>
		<taglib-uri>http://java.sun.com/jsp/jstl/xml</taglib-uri>
		<taglib-location>/WEB-INF/tlds/x.tld</taglib-location>
		</taglib>
		<taglib>
		<taglib-uri>http://java.sun.com/jsf/core</taglib-uri>
		<taglib-location>/WEB-INF/tlds/jsf_core.tld</taglib-location>
		</taglib>
		<taglib>
		<taglib-uri>http://java.sun.com/jsf/html</taglib-uri>
		<taglib-location>/WEB-INF/tlds/html_basic.tld</taglib-location>
		</taglib>
		<taglib>
		<taglib-uri>http://java.sun.com/jsp/jstl/functions</taglib-uri>
		<taglib-location>/WEB-INF/tlds/fn.tld</taglib-location>
		</taglib>
		</jsp-config>
	-->
	<env-entry>
		<description>
			the max size(in byte) of POST contents in http-request
		</description>
		<env-entry-name>param/MaxPostSize</env-entry-name>
		<env-entry-type>java.lang.Integer</env-entry-type>
		<env-entry-value>1000000</env-entry-value>
	</env-entry>
	<resource-ref>
		<description>AccessControl Database</description>
		<res-ref-name>jdbc/AccessControlDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<resource-ref>
		<description>Test Database</description>
		<res-ref-name>jdbc/TestDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<resource-ref>
		<description>Sample Database</description>
		<res-ref-name>jdbc/SampleDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>
	<resource-env-ref>
		<description>Sample Hibernate SessionFactory</description>
		<resource-env-ref-name>
			hibernate/SampleSessionFactory
		</resource-env-ref-name>
		<resource-env-ref-type>
			org.hibernate.SessionFactory
		</resource-env-ref-type>
	</resource-env-ref>
	<resource-env-ref>
		<resource-env-ref-name>
			hibernate/TestSessionFactory
		</resource-env-ref-name>
		<resource-env-ref-type>
			org.hibernate.SessionFactory
		</resource-env-ref-type>
	</resource-env-ref>
</web-app>
