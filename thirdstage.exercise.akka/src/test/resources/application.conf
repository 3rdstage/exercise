swap {
   akka.loglevel = "DEBUG"
}

wordcounter {
    akka.loglevel = "DEBUG"
}

simplecluster {
    # sample from http://www.lightbend.com/activator/template/akka-sample-cluster-java

    akka {
        loglevel = "INFO"
        actor {
            provider = "akka.cluster.ClusterActorRefProvider"
        }
        remote {
            log-remote-lifecycle-events = off
            netty.tcp {
                hostname = "127.0.0.1"
                port =  0
            }
        }
        cluster {
            seed-nodes = [
                "akka.tcp://ClusterSystem@127.0.0.1:2551",
                "akka.tcp://ClusterSystem@127.0.0.1:2552"]
            auto-down-unreachable-after = 10s
        }
    }

    akka.cluster.metrics.enabled=off
    # akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
    # akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
}

wordstats {

   node {
      master {
         address = "10.250.115.50"
         port = 2551
      }
   }


   akka {
      loglevel = "DEBUG"
   }

   akka.actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      deployment {
         default.cluster.allow-local-routees = off

         /statsService/workerRouter {
            router = consistent-hashing-group
            routees.paths = ["/user/statsWorker"]
            cluster {
               enabled = on
               user-role = compute
            }
         }
      }
   }

   akka.remote {
      log-remote-lifecycle-events = off
      netty.tcp {
         hostname = "10.250.115.50"
         port = 0
      }
   }

   akka.cluster {
      seed-nodes = [
         "akka.tcp://WordStats@10.250.115.50:2551",
         "akka.tcp://WordStats@10.250.115.50:2552"]
      auto-down-unreachable-after = 10s

      min-nr-of-members = 1

      jmx.enabled = on

      metrics.enabled = off

      use-dispatcher = akka.cluster.cluster-dispatcher
      cluster-dispatcher {
         type = "Dispatcher"
         executor = "fork-join-executor"
         fork-join-executor {
            parallelism-min = 5
            parallelism-max = 5
         }
      }

   }

   akka.camel {
      jmx = on
   }
}

wordanalysis {

   node {
      master {
         address = "10.250.115.50"
         port = 2551
      }
   }


   akka {
      loglevel = "DEBUG"
   }

   akka.actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      deployment {
         default.cluster.allow-local-routees = off

      }
   }

   akka.remote {
      log-remote-lifecycle-events = off
      netty.tcp {
         hostname = "10.250.115.50"
         port = 0
      }
   }

   akka.cluster {
      seed-nodes = [
         "akka.tcp://WordStats@10.250.115.50:2551",
         "akka.tcp://WordStats@10.250.115.50:2552"]
      auto-down-unreachable-after = 10s

      min-nr-of-members = 1

      jmx.enabled = on

      metrics.enabled = off

      use-dispatcher = akka.cluster.cluster-dispatcher
      cluster-dispatcher {
         type = "Dispatcher"
         executor = "fork-join-executor"
         fork-join-executor {
            parallelism-min = 5
            parallelism-max = 5
         }
      }

   }

   akka.camel {
      jmx = on
   }
}


akka{
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
}


